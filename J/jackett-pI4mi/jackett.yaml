apiVersion: v1
kind: Service
metadata:
  name: release-name-jackett
  labels:
    app.kubernetes.io/name: jackett
    helm.sh/chart: jackett-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: jackett
      protocol: TCP
      name: jackett
  selector:
    app.kubernetes.io/name: jackett
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jackett
  labels:
    app.kubernetes.io/name: jackett
    helm.sh/chart: jackett-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jackett
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jackett
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: jackett
          image: linuxserver/jackett:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: jackett-config
              mountPath: /config
          env:
            - name: RUN_OPTS
              value: --ListenPublic=true
          ports:
            - name: jackett
              containerPort: 9117
              protocol: TCP
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: jackett-config
          emptyDir: {}
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-jackett-test-connection
  labels:
    app.kubernetes.io/name: jackett
    helm.sh/chart: jackett-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-jackett:80
  restartPolicy: Never
