apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-jena
  labels:
    helm.sh/chart: jena-3.0.4
    app.kubernetes.io/name: jena
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-jena
  labels:
    helm.sh/chart: jena-3.0.4
    app.kubernetes.io/name: jena
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-jena
  labels:
    helm.sh/chart: jena-3.0.4
    app.kubernetes.io/name: jena
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: jena
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jena
  labels:
    helm.sh/chart: jena-3.0.4
    app.kubernetes.io/name: jena
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jena
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jena
        app.kubernetes.io/instance: release-name
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-jena
      serviceAccountName: release-name-jena
      securityContext: {}
      containers:
        - name: jena
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: stain/jena-fuseki:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: ADMIN_PASSWORD
              value: password
          ports:
            - name: http
              containerPort: 3030
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /fuseki
              name: data
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-jena
  labels:
    helm.sh/chart: jena-3.0.4
    app.kubernetes.io/name: jena
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
spec:
  tls:
    - hosts:
        - chart-example.local
  rules:
    - host: chart-example.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-jena
                port:
                  number: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-jena-test-connection
  labels:
    helm.sh/chart: jena-3.0.4
    app.kubernetes.io/name: jena
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - 'release-name-jena:'
  restartPolicy: Never
