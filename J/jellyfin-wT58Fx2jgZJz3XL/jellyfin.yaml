apiVersion: v1
kind: Service
metadata:
  name: release-name-jellyfin
  labels:
    helm.sh/chart: jellyfin-1.0.4
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 10.6.4
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jellyfin
  labels:
    helm.sh/chart: jellyfin-1.0.4
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 10.6.4
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext: {}
      containers:
        - name: jellyfin
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: jellyfin/jellyfin:10.6.4
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 120
          startupProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 3000
            periodSeconds: 10
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /media/
              name: media
            - mountPath: /config/
              name: config
            - mountPath: /transcodes/
              name: transcodes
      volumes:
        - name: mc-config
          configMap:
            name: release-name-jellyfin-mc-config
        - name: config
          persistentVolumeClaim:
            claimName: release-name-jellyfin-config-pvc
        - name: media
          persistentVolumeClaim:
            claimName: release-name-jellyfin-media-pvc
        - name: transcodes
          emptyDir: {}
