apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-jgitops-secrets-keygen
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-jgitops-secrets-keygen
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
    resourceNames:
      - release-name-jgitops-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-jgitops-secrets-keygen
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-jgitops-secrets-keygen
subjects:
  - kind: ServiceAccount
    name: release-name-jgitops-secrets-keygen
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-jgitops-secrets-keygen
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: release-name-jgitops-secrets
    spec:
      serviceAccountName: release-name-jgitops-secrets-keygen
      automountServiceAccountToken: true
      enableServiceLinks: false
      restartPolicy: Never
      containers:
        - name: keygen
          image: registry.gitlab.com/jrevolt/cd/jgitops:0.9.2
          command:
            - bash
            - -c
            - |
              set -eux
              name=release-name-jgitops-secrets
              kubectl get secret $name >/dev/null && { echo "Secret already exists: ${name}" >&2; exit 0; }
              yaml-secrets keygen -i secrets.key
              kubectl create secret generic ${name} --from-file=key=secrets.key
              kubectl create configmap ${name} --from-file=key=secrets.pub
          resources:
            limits:
              cpu: 1000m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
