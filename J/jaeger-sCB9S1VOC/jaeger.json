[
  {
    "kind": "Namespace",
    "apiVersion": "v1",
    "metadata": {
      "name": "linkerd-jaeger",
      "labels": {
        "linkerd.io/extension": "linkerd-jaeger"
      },
      "annotations": {
        "linkerd.io/inject": "enabled"
      }
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "collector",
      "namespace": "linkerd-jaeger"
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "jaeger",
      "namespace": "linkerd-jaeger"
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "jaeger-injector",
      "namespace": "linkerd-jaeger"
    }
  },
  {
    "kind": "Secret",
    "apiVersion": "v1",
    "metadata": {
      "name": "jaeger-injector-k8s-tls",
      "namespace": "linkerd-jaeger"
    },
    "type": "kubernetes.io/tls",
    "data": {
      "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQU10d0R3Z2ZtUVlhZGpFZkVKQ2pXV2N3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWFtRmxaMlZ5TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF0YW1GbFoyVnlMbk4yWXpBZQpGdzB5TWpBMk1USXhNVEU0TlRkYUZ3MHlNekEyTVRJeE1URTROVGRhTUMweEt6QXBCZ05WQkFNVEltcGhaV2RsCmNpMXBibXBsWTNSdmNpNXNhVzVyWlhKa0xXcGhaV2RsY2k1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQ3NlMXpBNWNJWkxraGcydTV6WnFwL1RkQmkvTlRYRzROZE8rNVNDRDhKVEs5SQp4cTJnL2ZpOXpOazhISE5GU3o0Qk91VkFyeXlMSXJNSWlmL0R5aXZEMnR0SkJON0R3dFhGWDdQRWpXS3MrZFBICm5iWk1VVHF3WG5BWlErTU9KTlZCakh4UXVJQ1BJT2ZJNi81Ty9aS0kzc1VlUXJLaWZSa1lZN242c0ZGRzI5czEKWVo5bDBtNno5bXdra0VLaGUzNlNnQkVpV0ZuRm83eWVGbzd3MlJxRDF5WUh2TENoYVU3SDBlTFd6OEgrNkJwcgpyYmtHT1J2Y1pxNkxGK1c2MjZXOFNPRGVJVHZWYm1jZ0ZVdE5WTzhtKzIwaGc1RmpKUVdzU1kxYXJaaFczaDRsCi9GdGtDUXhLN0I3eEEwWFhWSjFBaFNzYVU5RlBLQ01sNXZHQ2Zid3pBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnFZV1ZuWlhJdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkMxcVlXVm5aWEl1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFIcjMxa3JjcG9YRTlBRXBGRTlTZ09XYVpnTytuUElpb2wKTEdjTmRCTEFabTA4VXdiaCtkcEt3MmROSGd5ellhUUdwSUFENVF1ajYveTU3UFhFbnl4V2R2UUZUT1Z2clNtagpxSUFjNFArOEYrQ1BtVDJNRUtzK1J6cXFmaTQzRkl4YnB3SlpoWkZEbnczc2RueTl4MW41aWxUaHZpbkhJUnNiCmJmUWZVTWNDN0c4aEVvdkdJTWFRRlNGZ0NHWDNnMStaUk83eTNJRFQrWGs5Wkl3RTdKK2ZKNzMzRGJRU2hSWWsKSkN4dzdJRFIxZlNTbm1sN3hsalhXK0RmUXV6YXBLZkJnc2V0ZkJSSVVCMllBMTJ5VnJPYTVieDJ4MXo3TFVlTAozdk5TQjF3VVh0NzNMNHJDOGFQam01cW5lcTBmOUlZRmZoeXEya0pNb1Y4UjE0NktqVFZJCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=",
      "tls.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBckh0Y3dPWENHUzVJWU5ydWMyYXFmMDNRWXZ6VTF4dURYVHZ1VWdnL0NVeXZTTWF0Cm9QMzR2Y3paUEJ4elJVcytBVHJsUUs4c2l5S3pDSW4vdzhvcnc5cmJTUVRldzhMVnhWK3p4STFpclBuVHg1MjIKVEZFNnNGNXdHVVBqRGlUVlFZeDhVTGlBanlEbnlPditUdjJTaU43RkhrS3lvbjBaR0dPNStyQlJSdHZiTldHZgpaZEp1cy9ac0pKQkNvWHQra29BUklsaFp4YU84bmhhTzhOa2FnOWNtQjd5d29XbE94OUhpMXMvQi91Z2FhNjI1CkJqa2IzR2F1aXhmbHV0dWx2RWpnM2lFNzFXNW5JQlZMVFZUdkp2dHRJWU9SWXlVRnJFbU5XcTJZVnQ0ZUpmeGIKWkFrTVN1d2U4UU5GMTFTZFFJVXJHbFBSVHlnakplYnhnbjI4TXdJREFRQUJBb0lCQUNNb2xsU2Z3UHYvQ2pQcwpETFVyVlUvVDNjbC92aWNHN2JVZ2xValZjM3dDekt3cUM1U0lrSjZuMWhSQnZHR0FuK2dDU0Y3eUZrTmFWR0pHCk53T0MvMzdSNnVjc2ZmZ3JqQVhLcDB0R2dybTl4eVNtaWxWdUxXZHNLSytOdmdmUkRFTnJUcC9wckJNQTR4NTYKdElFSGdVb3pGcjAvWFVodjlhQ2FHM3YxV3V2MWFVTTRLQmYxVkc3SVZ2b1pMLzVFTXRRaE5TMXJIT3VaTmNNbQpiSGxCeU9ZSS96Sk5jeUdUSG1IdE1WeUR1NHZBUFNubVdQZkltRVlZS3VTWDJtWjUzVXhsdUhlajZFRm5zWFhICmxUZ2Roa3h2bmhUNGtrNFhyZTFNMm05U3B6M3UxWkpNbkNOMzJJOXNJY1RVaUZ1QkZLU3NDaUhNaldqVXZpTTMKK20vRkdWRUNnWUVBMEphNXQ4eC84OVRCb0VIT1cyNkk1a1B5NGRXd2RMbW8yaU1ocnpGU3JHY1pIaG5TZXRiVApFNkhMOXFJa3g5a2NGc0FwQ0w0MTkyUnJWc1IycDNKODFnT01uMVdFYXR2aHJaMzVIeXF2ZS83VDlncjY4YWp2ClRZRHBTUmNaSW9JbGk3MlRwb1NHYm9SbWppcEZrR25UR1JldW0vU2ZPd1hRYmZLTkdHTE05b3NDZ1lFQTA2K3EKS1BGalFtVmtCTmxyL2o1WWxFYTdkVEhJbVlMblhxWjkxd2o0N1Q1cDlUMVZabmNXbiswc29HdldNRlRuYTFJVApBL3Uya01qWGVFTVBrTUVobHUreDMwY0hldTByMjVJNXMrbHBObFY1L2FQZVJ4cThGenp2QklzVFo3Sk5kYWtlCmpscU9qZXdsRTFyQVNzaktaQWNaRS8welhiOTY4d3BxbFlwU3Jma0NnWUJoNUdyeWxIbjBVQVF6RnM4bTMrQkYKMk52VEd2dCtQR2UvUUQrZHZkTWo4QnE4b3JmQ1NMRzFBL2o2SGF5UFVoZzVvU05nNUF2bHQrNGNRWVhDSGh2eQpRS1l0WFBBUlNuSkdqZDROdjNXdUJyRXBSb3Z4QUN5V3Znbzk4Q1l1cU0vQUhrOStGYklWaWZPcmdyRTFEa1V4CkFJbEV6ZkF3dmhETW1NbVpDVDFSOHdLQmdBRFBqR3hKdUdLWnRzOVo4ZEx3ZERCbE1QU2E4elM3VHAyTEw3SXkKSTVudEFrVGhMa0dOTlRYNWw1RXB1SkZJMGZZVVEyUmhnMnA4aW02NGV3Zkg1WlFKYVBuODhLZGszeVVoSXoxdwpLR24vMjg2LzRPc096Q2Vlb1IrNFZLT3lDQi9xUE9hNHJCRVpGVzlFaXJYK25OL1RNeUpqZHQzbUROZC9jN2NNCjU1SXBBb0dBWG1adDgrWUxTdmVEUi9ZMDRpb3RFcG9pK1dOMlIvU3Z0d3V2cWZPSGlJVnVBWFAxOE9ETTNDOTcKZkNreHdNT3YrSXBPUjdaOEJ4UEJ4eFNzaEMyUGxuUTI1ZEVTd3ZDQW1QY292b245bkFaQ1RLTWpVWkROM1I1LwpFK254cmlncTlJdnVKRzhCSWJLWXJkczRqOVIvNzA5aFZubVE3RGMwaDdPelJBSC9GWUk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "collector-config",
      "namespace": "linkerd-jaeger",
      "labels": {
        "component": "collector"
      }
    },
    "data": {
      "collector-config": "receivers:\n  opencensus:\n    port: 55678\n  zipkin:\n    port: 9411\n  jaeger:\n    jaeger-thrift-http-port: 14268\nqueued-exporters:\n  jaeger-all-in-one:\n    num-workers: 4\n    queue-size: 100\n    retry-on-failure: true\n    sender-type: jaeger-thrift-http\n    jaeger-thrift-http:\n      collector-endpoint: http://jaeger.linkerd-jaeger:14268/api/traces\n      timeout: 5s\n"
    }
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "linkerd-jaeger-injector",
      "labels": {
        "linkerd.io/extension": "linkerd-jaeger"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "linkerd-jaeger-injector",
      "labels": {
        "linkerd.io/extension": "linkerd-jaeger"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "jaeger-injector",
        "namespace": "linkerd-jaeger",
        "apiGroup": ""
      }
    ],
    "roleRef": {
      "kind": "ClusterRole",
      "name": "linkerd-jaeger-injector",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
      "name": "jaeger-injector",
      "namespace": "linkerd-jaeger",
      "labels": {
        "component": "jaeger-injector"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "selector": {
        "component": "jaeger-injector"
      },
      "ports": [
        {
          "name": "jaeger-injector",
          "port": 443,
          "targetPort": "jaeger-injector"
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "collector",
      "namespace": "linkerd-jaeger",
      "labels": {
        "component": "collector"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "opencensus",
          "port": 55678,
          "protocol": "TCP",
          "targetPort": 55678
        },
        {
          "name": "zipkin",
          "port": 9411,
          "protocol": "TCP",
          "targetPort": 9411
        },
        {
          "name": "jaeger",
          "port": 14268,
          "protocol": "TCP",
          "targetPort": 14268
        }
      ],
      "selector": {
        "component": "collector"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "jaeger",
      "namespace": "linkerd-jaeger",
      "labels": {
        "component": "jaeger"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "selector": {
        "component": "jaeger"
      },
      "ports": [
        {
          "name": "collection",
          "port": 14268
        },
        {
          "name": "ui",
          "port": 16686
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "jaeger-injector",
        "app.kubernetes.io/part-of": "Linkerd",
        "component": "jaeger-injector"
      },
      "name": "jaeger-injector",
      "namespace": "linkerd-jaeger"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "component": "jaeger-injector"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "74bbf95d2809e8f233eec1963caaeb996b21f03b2d864cd5356aedf90b920f8b"
          },
          "labels": {
            "component": "jaeger-injector"
          }
        },
        "spec": {
          "containers": [
            {
              "args": [
                "-collector-svc-addr=collector.linkerd-jaeger:55678",
                "-collector-svc-account=collector",
                "-log-level=info"
              ],
              "image": "ghcr.io/linkerd/jaeger-webhook:edge-21.1.3",
              "imagePullPolicy": "IfNotPresent",
              "livenessProbe": {
                "httpGet": {
                  "path": "/ping",
                  "port": 9995
                },
                "initialDelaySeconds": 10
              },
              "name": "jaeger-injector",
              "ports": [
                {
                  "containerPort": 8443,
                  "name": "jaeger-injector"
                },
                {
                  "containerPort": 9995,
                  "name": "admin-http"
                }
              ],
              "readinessProbe": {
                "failureThreshold": 7,
                "httpGet": {
                  "path": "/ready",
                  "port": 9995
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/var/run/linkerd/tls",
                  "name": "tls",
                  "readOnly": true
                }
              ]
            }
          ],
          "serviceAccountName": "jaeger-injector",
          "volumes": [
            {
              "name": "tls",
              "secret": {
                "secretName": "jaeger-injector-k8s-tls"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "collector",
        "app.kubernetes.io/part-of": "Linkerd",
        "component": "collector"
      },
      "name": "collector",
      "namespace": "linkerd-jaeger"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "component": "collector"
        }
      },
      "minReadySeconds": 5,
      "progressDeadlineSeconds": 120,
      "template": {
        "metadata": {
          "annotations": {
            "prometheus.io/path": "/metrics",
            "prometheus.io/port": "8888",
            "prometheus.io/scrape": "true"
          },
          "labels": {
            "component": "collector"
          }
        },
        "spec": {
          "containers": [
            {
              "command": [
                "/occollector_linux",
                "--config=/conf/collector-config.yaml"
              ],
              "env": [
                {
                  "name": "GOGC",
                  "value": "80"
                }
              ],
              "image": "omnition/opencensus-collector:0.1.11",
              "imagePullPolicy": "Always",
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 13133
                }
              },
              "name": "oc-collector",
              "ports": [
                {
                  "containerPort": 55678
                },
                {
                  "containerPort": 9411
                },
                {
                  "containerPort": 14268
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 13133
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/conf",
                  "name": "collector-config-val"
                }
              ]
            }
          ],
          "serviceAccountName": "collector",
          "volumes": [
            {
              "configMap": {
                "items": [
                  {
                    "key": "collector-config",
                    "path": "collector-config.yaml"
                  }
                ],
                "name": "collector-config"
              },
              "name": "collector-config-val"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "jaeger",
        "app.kubernetes.io/part-of": "Linkerd",
        "component": "jaeger"
      },
      "name": "jaeger",
      "namespace": "linkerd-jaeger"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "component": "jaeger"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "prometheus.io/path": "/metrics",
            "prometheus.io/port": "8888",
            "prometheus.io/scrape": "true"
          },
          "labels": {
            "component": "jaeger"
          }
        },
        "spec": {
          "containers": [
            {
              "args": [
                "--query.base-path=/jaeger"
              ],
              "image": "jaegertracing/all-in-one:1.19.2",
              "imagePullPolicy": "Always",
              "name": "jaeger",
              "ports": [
                {
                  "containerPort": 14268,
                  "name": "collection"
                },
                {
                  "containerPort": 16686,
                  "name": "ui"
                }
              ]
            }
          ],
          "dnsPolicy": "ClusterFirst",
          "serviceAccountName": "jaeger"
        }
      }
    }
  },
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "apiVersion": "admissionregistration.k8s.io/v1beta1",
    "kind": "MutatingWebhookConfiguration",
    "metadata": {
      "name": "linkerd-jaeger-injector-webhook-config",
      "labels": {
        "linkerd.io/extension": "linkerd-jaeger"
      }
    },
    "webhooks": [
      {
        "name": "jaeger-injector.linkerd.io",
        "clientConfig": {
          "service": {
            "name": "jaeger-injector",
            "namespace": "linkerd-jaeger",
            "path": "/"
          },
          "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQU10d0R3Z2ZtUVlhZGpFZkVKQ2pXV2N3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWFtRmxaMlZ5TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF0YW1GbFoyVnlMbk4yWXpBZQpGdzB5TWpBMk1USXhNVEU0TlRkYUZ3MHlNekEyTVRJeE1URTROVGRhTUMweEt6QXBCZ05WQkFNVEltcGhaV2RsCmNpMXBibXBsWTNSdmNpNXNhVzVyWlhKa0xXcGhaV2RsY2k1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQ3NlMXpBNWNJWkxraGcydTV6WnFwL1RkQmkvTlRYRzROZE8rNVNDRDhKVEs5SQp4cTJnL2ZpOXpOazhISE5GU3o0Qk91VkFyeXlMSXJNSWlmL0R5aXZEMnR0SkJON0R3dFhGWDdQRWpXS3MrZFBICm5iWk1VVHF3WG5BWlErTU9KTlZCakh4UXVJQ1BJT2ZJNi81Ty9aS0kzc1VlUXJLaWZSa1lZN242c0ZGRzI5czEKWVo5bDBtNno5bXdra0VLaGUzNlNnQkVpV0ZuRm83eWVGbzd3MlJxRDF5WUh2TENoYVU3SDBlTFd6OEgrNkJwcgpyYmtHT1J2Y1pxNkxGK1c2MjZXOFNPRGVJVHZWYm1jZ0ZVdE5WTzhtKzIwaGc1RmpKUVdzU1kxYXJaaFczaDRsCi9GdGtDUXhLN0I3eEEwWFhWSjFBaFNzYVU5RlBLQ01sNXZHQ2Zid3pBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnFZV1ZuWlhJdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkMxcVlXVm5aWEl1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFIcjMxa3JjcG9YRTlBRXBGRTlTZ09XYVpnTytuUElpb2wKTEdjTmRCTEFabTA4VXdiaCtkcEt3MmROSGd5ellhUUdwSUFENVF1ajYveTU3UFhFbnl4V2R2UUZUT1Z2clNtagpxSUFjNFArOEYrQ1BtVDJNRUtzK1J6cXFmaTQzRkl4YnB3SlpoWkZEbnczc2RueTl4MW41aWxUaHZpbkhJUnNiCmJmUWZVTWNDN0c4aEVvdkdJTWFRRlNGZ0NHWDNnMStaUk83eTNJRFQrWGs5Wkl3RTdKK2ZKNzMzRGJRU2hSWWsKSkN4dzdJRFIxZlNTbm1sN3hsalhXK0RmUXV6YXBLZkJnc2V0ZkJSSVVCMllBMTJ5VnJPYTVieDJ4MXo3TFVlTAozdk5TQjF3VVh0NzNMNHJDOGFQam01cW5lcTBmOUlZRmZoeXEya0pNb1Y4UjE0NktqVFZJCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0="
        },
        "failurePolicy": "Ignore",
        "reinvocationPolicy": "IfNeeded",
        "rules": [
          {
            "operations": [
              "CREATE"
            ],
            "apiGroups": [
              ""
            ],
            "apiVersions": [
              "v1"
            ],
            "resources": [
              "pods"
            ]
          }
        ],
        "sideEffects": "None"
      }
    ]
  }
]