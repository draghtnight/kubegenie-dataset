[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "jenkins",
      "labels": {
        "app": "jenkins",
        "chart": "jenkins-0.10.38",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "jenkins-admin-password": "WHhWdHBaMHA0Tg==",
      "jenkins-admin-user": "YWRtaW4="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "jenkins"
    },
    "data": {
      "config.xml": "<?xml version='1.0' encoding='UTF-8'?>\n<hudson>\n  <disabledAdministrativeMonitors/>\n  <version>2.67</version>\n  <numExecutors>0</numExecutors>\n  <mode>NORMAL</mode>\n  <useSecurity>true</useSecurity>\n  <authorizationStrategy class=\"hudson.security.FullControlOnceLoggedInAuthorizationStrategy\">\n      <denyAnonymousReadAccess>true</denyAnonymousReadAccess>\n  </authorizationStrategy>\n  <securityRealm class=\"hudson.security.LegacySecurityRealm\">\n  </securityRealm>\n  <disableRememberMe>false</disableRememberMe>\n  <projectNamingStrategy class=\"jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy\"/>\n  <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULLNAME}</workspaceDir>\n  <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>\n  <markupFormatter class=\"hudson.markup.EscapedMarkupFormatter\"/>\n  <jdks/>\n  <viewsTabBar class=\"hudson.views.DefaultViewsTabBar\"/>\n  <myViewsTabBar class=\"hudson.views.DefaultMyViewsTabBar\"/>\n  <clouds>\n    <org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud plugin=\"kubernetes@0.11\">\n      <name>kubernetes</name>\n      <templates>\n      </templates><serverUrl>https://kubernetes.default</serverUrl>\n      <skipTlsVerify>false</skipTlsVerify>\n      <namespace>default</namespace>\n      <jenkinsUrl>http://jenkins:8080</jenkinsUrl>\n      <jenkinsTunnel>jenkins-agent:50000</jenkinsTunnel>\n      <containerCap>10</containerCap>\n      <retentionTimeout>5</retentionTimeout>\n      <connectTimeout>0</connectTimeout>\n      <readTimeout>0</readTimeout>\n    </org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud>\n  </clouds>\n  <quietPeriod>5</quietPeriod>\n  <scmCheckoutRetryCount>0</scmCheckoutRetryCount>\n  <views>\n    <hudson.model.AllView>\n      <owner class=\"hudson\" reference=\"../../..\"/>\n      <name>All</name>\n      <filterExecutors>false</filterExecutors>\n      <filterQueue>false</filterQueue>\n      <properties class=\"hudson.model.View$PropertyList\"/>\n    </hudson.model.AllView>\n  </views>\n  <primaryView>All</primaryView>\n  <slaveAgentPort>50000</slaveAgentPort>\n  <label></label>\n  <nodeProperties/>\n  <globalNodeProperties>\n    <hudson.slaves.EnvironmentVariablesNodeProperty>\n      <envVars serialization=\"custom\">\n        <unserializable-parents/>\n        <tree-map>\n          <default>\n            <comparator class=\"hudson.util.CaseInsensitiveComparator\"/>\n          </default>\n          <int>2</int>\n          <string>DOCKER_REGISTRY</string>\n          <string></string>\n          <string>TILLER_NAMESPACE</string>\n          <string></string>\n        </tree-map>\n      </envVars>\n    </hudson.slaves.EnvironmentVariablesNodeProperty>\n  </globalNodeProperties>\n  <noUsageStatistics>true</noUsageStatistics>\n</hudson>",
      "org.jenkinsci.plugins.github_branch_source.GitHubConfiguration.xml": "<?xml version='1.1' encoding='UTF-8'?>\n<org.jenkinsci.plugins.github__branch__source.GitHubConfiguration plugin=\"github-branch-source@2.3.2\">\n  <endpoints>\n  </endpoints>\n</org.jenkinsci.plugins.github__branch__source.GitHubConfiguration>",
      "com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml": "<?xml version='1.1' encoding='UTF-8'?>\n<com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig plugin=\"gitlab-plugin@1.5.5\">\n  <useAuthenticatedEndpoint>true</useAuthenticatedEndpoint>\n  <connections>\n  </connections>\n</com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig>",
      "com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration.xml": "<?xml version='1.1' encoding='UTF-8'?>\n<com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration plugin=\"cloudbees-bitbucket-branch-source@2.2.10\">\n  <endpoints>\n  </endpoints>\n</com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration>",
      "org.jenkinsci.plugin.gitea.servers.GiteaServers.xml": "<?xml version='1.1' encoding='UTF-8'?>\n<org.jenkinsci.plugin.gitea.servers.GiteaServers plugin=\"gitea@1.0.5\">\n  <servers>\n  </servers>\n</org.jenkinsci.plugin.gitea.servers.GiteaServers>",
      "apply_config.sh": "mkdir -p /usr/share/jenkins/ref/secrets/;\necho \"false\" > /usr/share/jenkins/ref/secrets/slave-to-master-security-kill-switch;\nrm -rf /var/jenkins_home/com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration.xml\nln -s /var/jenkins_config/com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration.xml /var/jenkins_home/com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration.xml\nrm -rf /var/jenkins_home/org.jenkinsci.plugin.gitea.servers.GiteaServers.xml\nln -s /var/jenkins_config/org.jenkinsci.plugin.gitea.servers.GiteaServers.xml /var/jenkins_home/org.jenkinsci.plugin.gitea.servers.GiteaServers.xml\nrm -rf /var/jenkins_home/com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml\nln -s /var/jenkins_config/com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml /var/jenkins_home/com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml\nrm -rf /var/jenkins_home/org.jenkinsci.plugins.github_branch_source.GitHubConfiguration.xml\nln -s /var/jenkins_config/org.jenkinsci.plugins.github_branch_source.GitHubConfiguration.xml /var/jenkins_home/org.jenkinsci.plugins.github_branch_source.GitHubConfiguration.xml",
      "plugins.txt": ""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "jenkins-x-git-kinds"
    },
    "data": {
      "github": "",
      "gitea": ""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "jenkins-pod-xml-default",
      "labels": {
        "jenkins.io/kind": "podTemplateXml"
      }
    },
    "data": {
      "config.xml": "<org.csanchez.jenkins.plugins.kubernetes.PodTemplate>\n  <inheritFrom></inheritFrom>\n  <name>default</name>\n  <instanceCap>2147483647</instanceCap>\n  <idleMinutes>0</idleMinutes>\n  <label>jenkins-maven</label>\n  <nodeSelector></nodeSelector>\n  <volumes>\n    <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>\n      <hostPath>/var/run/docker.sock</hostPath>\n      <mountPath>/var/run/docker.sock</mountPath>\n    </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>\n  </volumes>\n  <containers>\n    <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>\n      <name>jnlp</name>\n      <image>jenkinsci/jnlp-slave:2.62</image>\n      <privileged>false</privileged>\n      <alwaysPullImage></alwaysPullImage>\n      <workingDir>/home/jenkins</workingDir>\n      <command></command>\n      <args></args>\n      <ttyEnabled>false</ttyEnabled>\n      <resourceRequestCpu>100m</resourceRequestCpu>\n      <resourceRequestMemory>128Mi</resourceRequestMemory>\n      <resourceLimitCpu></resourceLimitCpu>\n      <resourceLimitMemory></resourceLimitMemory>\n    </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>\n  </containers>\n  <envVars>\n    <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>\n      <key>JENKINS_URL</key>\n      <value>http://jenkins:8080</value>\n    </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>\n  </envVars>\n  <annotations/>\n  <imagePullSecrets/>\n  <nodeProperties/>\n</org.csanchez.jenkins.plugins.kubernetes.PodTemplate>"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "jenkins-tests"
    },
    "data": {
      "run.sh": "@test \"Testing Jenkins UI is accessible\" {\n  curl --retry 12 --retry-delay 10 jenkins:8080/login\n}"
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "jenkins",
      "labels": {
        "app": "jenkins",
        "chart": "jenkins-0.10.38",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "8Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "jenkins-agent",
      "labels": {
        "app": "jenkins",
        "chart": "jenkins-0.10.38",
        "component": "release-name-jenkins-master"
      }
    },
    "spec": {
      "ports": [
        {
          "port": 50000,
          "targetPort": 50000,
          "name": "slavelistener"
        }
      ],
      "selector": {
        "component": "release-name-jenkins-master"
      },
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "jenkins",
      "labels": {
        "app": "jenkins",
        "heritage": "Helm",
        "release": "release-name",
        "chart": "jenkins-0.10.38",
        "component": "release-name-jenkins-master"
      }
    },
    "spec": {
      "ports": [
        {
          "port": 8080,
          "name": "http",
          "targetPort": 8080
        }
      ],
      "selector": {
        "component": "release-name-jenkins-master"
      },
      "type": "LoadBalancer",
      "loadBalancerSourceRanges": [
        "0.0.0.0/0"
      ]
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "jenkins",
      "labels": {
        "heritage": "Helm",
        "release": "release-name",
        "chart": "jenkins-0.10.38",
        "component": "release-name-jenkins-master"
      }
    },
    "spec": {
      "replicas": 1,
      "strategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "component": "release-name-jenkins-master"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "jenkins",
            "heritage": "Helm",
            "release": "release-name",
            "chart": "jenkins-0.10.38",
            "component": "release-name-jenkins-master"
          },
          "annotations": {
            "checksum/config": "641326db588123edd84246bae5888e35caeacac42513971f5d6cdf8c1daeec64"
          }
        },
        "spec": {
          "securityContext": {
            "runAsUser": 0
          },
          "serviceAccountName": "default",
          "initContainers": [
            {
              "name": "copy-default-config",
              "image": "jenkinsci/jenkins:2.67",
              "imagePullPolicy": "Always",
              "command": [
                "sh",
                "/var/jenkins_config/apply_config.sh"
              ],
              "volumeMounts": [
                {
                  "mountPath": "/var/jenkins_home",
                  "name": "jenkins-home"
                },
                {
                  "mountPath": "/var/jenkins_config",
                  "name": "jenkins-config"
                },
                {
                  "mountPath": "/usr/share/jenkins/ref/secrets/",
                  "name": "secrets-dir"
                }
              ]
            },
            {
              "name": "create-jenkins-config",
              "image": "gcr.io/jenkinsxio/jx:2.0.645",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "jx",
                "step",
                "create",
                "jenkins",
                "config",
                "-o",
                "/var/jenkins_home/config.xml"
              ],
              "volumeMounts": [
                {
                  "mountPath": "/var/jenkins_home",
                  "name": "jenkins-home"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "jenkins",
              "image": "jenkinsci/jenkins:2.67",
              "imagePullPolicy": "Always",
              "args": [
                "--argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)",
                "--argumentsRealm.roles.$(ADMIN_USER)=admin"
              ],
              "readinessProbe": {
                "timeoutSeconds": 5,
                "initialDelaySeconds": 10,
                "httpGet": {
                  "path": "/login",
                  "port": 8080
                }
              },
              "livenessProbe": {
                "timeoutSeconds": 5,
                "initialDelaySeconds": 60,
                "failureThreshold": 10,
                "httpGet": {
                  "path": "/login",
                  "port": 8080
                }
              },
              "env": [
                {
                  "name": "DOCKER_REGISTRY",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "name": "jenkins-x-docker-registry",
                      "key": "docker.registry"
                    }
                  }
                },
                {
                  "name": "JAVA_OPTS",
                  "value": ""
                },
                {
                  "name": "JENKINS_OPTS",
                  "value": ""
                },
                {
                  "name": "ADMIN_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "jenkins",
                      "key": "jenkins-admin-password"
                    }
                  }
                },
                {
                  "name": "ADMIN_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "jenkins",
                      "key": "jenkins-admin-user"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "containerPort": 8080,
                  "name": "http"
                },
                {
                  "containerPort": 50000,
                  "name": "slavelistener"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "200m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/var/jenkins_home",
                  "name": "jenkins-home",
                  "readOnly": false
                },
                {
                  "mountPath": "/var/jenkins_config",
                  "name": "jenkins-config",
                  "readOnly": true
                },
                {
                  "mountPath": "/usr/share/jenkins/ref/secrets/",
                  "name": "secrets-dir",
                  "readOnly": false
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "jenkins-config",
              "configMap": {
                "name": "jenkins"
              }
            },
            {
              "name": "plugin-dir",
              "emptyDir": {}
            },
            {
              "name": "secrets-dir",
              "emptyDir": {}
            },
            {
              "name": "jenkins-home",
              "persistentVolumeClaim": {
                "claimName": "jenkins"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-ui-test-5qihj",
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "initContainers": [
        {
          "name": "test-framework",
          "image": "dduportal/bats:0.4.0",
          "command": [
            "bash",
            "-c",
            "set -ex\n# copy bats to tools dir\ncp -R /usr/local/libexec/ /tools/bats/\n"
          ],
          "volumeMounts": [
            {
              "mountPath": "/tools",
              "name": "tools"
            }
          ]
        }
      ],
      "containers": [
        {
          "name": "release-name-ui-test",
          "image": "jenkinsci/jenkins:2.67",
          "command": [
            "/tools/bats/bats",
            "-t",
            "/tests/run.sh"
          ],
          "volumeMounts": [
            {
              "mountPath": "/tests",
              "name": "tests",
              "readOnly": true
            },
            {
              "mountPath": "/tools",
              "name": "tools"
            }
          ]
        }
      ],
      "volumes": [
        {
          "name": "tests",
          "configMap": {
            "name": "jenkins-tests"
          }
        },
        {
          "name": "tools",
          "emptyDir": {}
        }
      ],
      "restartPolicy": "Never"
    }
  }
]