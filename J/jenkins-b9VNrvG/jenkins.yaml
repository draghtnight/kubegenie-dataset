apiVersion: v1
kind: Secret
metadata:
  name: jenkins
  labels:
    app: jenkins
    chart: jenkins-0.10.38
    release: release-name
    heritage: Helm
type: Opaque
data:
  jenkins-admin-password: WHhWdHBaMHA0Tg==
  jenkins-admin-user: YWRtaW4=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins
data:
  config.xml: |-
    <?xml version='1.0' encoding='UTF-8'?>
    <hudson>
      <disabledAdministrativeMonitors/>
      <version>2.67</version>
      <numExecutors>0</numExecutors>
      <mode>NORMAL</mode>
      <useSecurity>true</useSecurity>
      <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
          <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
      </authorizationStrategy>
      <securityRealm class="hudson.security.LegacySecurityRealm">
      </securityRealm>
      <disableRememberMe>false</disableRememberMe>
      <projectNamingStrategy class="jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy"/>
      <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULLNAME}</workspaceDir>
      <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>
      <markupFormatter class="hudson.markup.EscapedMarkupFormatter"/>
      <jdks/>
      <viewsTabBar class="hudson.views.DefaultViewsTabBar"/>
      <myViewsTabBar class="hudson.views.DefaultMyViewsTabBar"/>
      <clouds>
        <org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud plugin="kubernetes@0.11">
          <name>kubernetes</name>
          <templates>
          </templates><serverUrl>https://kubernetes.default</serverUrl>
          <skipTlsVerify>false</skipTlsVerify>
          <namespace>default</namespace>
          <jenkinsUrl>http://jenkins:8080</jenkinsUrl>
          <jenkinsTunnel>jenkins-agent:50000</jenkinsTunnel>
          <containerCap>10</containerCap>
          <retentionTimeout>5</retentionTimeout>
          <connectTimeout>0</connectTimeout>
          <readTimeout>0</readTimeout>
        </org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud>
      </clouds>
      <quietPeriod>5</quietPeriod>
      <scmCheckoutRetryCount>0</scmCheckoutRetryCount>
      <views>
        <hudson.model.AllView>
          <owner class="hudson" reference="../../.."/>
          <name>All</name>
          <filterExecutors>false</filterExecutors>
          <filterQueue>false</filterQueue>
          <properties class="hudson.model.View$PropertyList"/>
        </hudson.model.AllView>
      </views>
      <primaryView>All</primaryView>
      <slaveAgentPort>50000</slaveAgentPort>
      <label></label>
      <nodeProperties/>
      <globalNodeProperties>
        <hudson.slaves.EnvironmentVariablesNodeProperty>
          <envVars serialization="custom">
            <unserializable-parents/>
            <tree-map>
              <default>
                <comparator class="hudson.util.CaseInsensitiveComparator"/>
              </default>
              <int>2</int>
              <string>DOCKER_REGISTRY</string>
              <string></string>
              <string>TILLER_NAMESPACE</string>
              <string></string>
            </tree-map>
          </envVars>
        </hudson.slaves.EnvironmentVariablesNodeProperty>
      </globalNodeProperties>
      <noUsageStatistics>true</noUsageStatistics>
    </hudson>
  org.jenkinsci.plugins.github_branch_source.GitHubConfiguration.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <org.jenkinsci.plugins.github__branch__source.GitHubConfiguration plugin="github-branch-source@2.3.2">
      <endpoints>
      </endpoints>
    </org.jenkinsci.plugins.github__branch__source.GitHubConfiguration>
  com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig plugin="gitlab-plugin@1.5.5">
      <useAuthenticatedEndpoint>true</useAuthenticatedEndpoint>
      <connections>
      </connections>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig>
  com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration plugin="cloudbees-bitbucket-branch-source@2.2.10">
      <endpoints>
      </endpoints>
    </com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration>
  org.jenkinsci.plugin.gitea.servers.GiteaServers.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <org.jenkinsci.plugin.gitea.servers.GiteaServers plugin="gitea@1.0.5">
      <servers>
      </servers>
    </org.jenkinsci.plugin.gitea.servers.GiteaServers>
  apply_config.sh: |-
    mkdir -p /usr/share/jenkins/ref/secrets/;
    echo "false" > /usr/share/jenkins/ref/secrets/slave-to-master-security-kill-switch;
    rm -rf /var/jenkins_home/com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration.xml
    ln -s /var/jenkins_config/com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration.xml /var/jenkins_home/com.cloudbees.jenkins.plugins.bitbucket.endpoints.BitbucketEndpointConfiguration.xml
    rm -rf /var/jenkins_home/org.jenkinsci.plugin.gitea.servers.GiteaServers.xml
    ln -s /var/jenkins_config/org.jenkinsci.plugin.gitea.servers.GiteaServers.xml /var/jenkins_home/org.jenkinsci.plugin.gitea.servers.GiteaServers.xml
    rm -rf /var/jenkins_home/com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml
    ln -s /var/jenkins_config/com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml /var/jenkins_home/com.dabsquared.gitlabjenkins.connection.GitLabConnectionConfig.xml
    rm -rf /var/jenkins_home/org.jenkinsci.plugins.github_branch_source.GitHubConfiguration.xml
    ln -s /var/jenkins_config/org.jenkinsci.plugins.github_branch_source.GitHubConfiguration.xml /var/jenkins_home/org.jenkinsci.plugins.github_branch_source.GitHubConfiguration.xml
  plugins.txt: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-x-git-kinds
data:
  github: ""
  gitea: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-pod-xml-default
  labels:
    jenkins.io/kind: podTemplateXml
data:
  config.xml: |-
    <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
      <inheritFrom></inheritFrom>
      <name>default</name>
      <instanceCap>2147483647</instanceCap>
      <idleMinutes>0</idleMinutes>
      <label>jenkins-maven</label>
      <nodeSelector></nodeSelector>
      <volumes>
        <org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
          <hostPath>/var/run/docker.sock</hostPath>
          <mountPath>/var/run/docker.sock</mountPath>
        </org.csanchez.jenkins.plugins.kubernetes.volumes.HostPathVolume>
      </volumes>
      <containers>
        <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
          <name>jnlp</name>
          <image>jenkinsci/jnlp-slave:2.62</image>
          <privileged>false</privileged>
          <alwaysPullImage></alwaysPullImage>
          <workingDir>/home/jenkins</workingDir>
          <command></command>
          <args></args>
          <ttyEnabled>false</ttyEnabled>
          <resourceRequestCpu>100m</resourceRequestCpu>
          <resourceRequestMemory>128Mi</resourceRequestMemory>
          <resourceLimitCpu></resourceLimitCpu>
          <resourceLimitMemory></resourceLimitMemory>
        </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
      </containers>
      <envVars>
        <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
          <key>JENKINS_URL</key>
          <value>http://jenkins:8080</value>
        </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
      </envVars>
      <annotations/>
      <imagePullSecrets/>
      <nodeProperties/>
    </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-tests
data:
  run.sh: |-
    @test "Testing Jenkins UI is accessible" {
      curl --retry 12 --retry-delay 10 jenkins:8080/login
    }
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins
  labels:
    app: jenkins
    chart: jenkins-0.10.38
    release: release-name
    heritage: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-agent
  labels:
    app: jenkins
    chart: jenkins-0.10.38
    component: release-name-jenkins-master
spec:
  ports:
    - port: 50000
      targetPort: 50000
      name: slavelistener
  selector:
    component: release-name-jenkins-master
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  labels:
    app: jenkins
    heritage: Helm
    release: release-name
    chart: jenkins-0.10.38
    component: release-name-jenkins-master
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080
  selector:
    component: release-name-jenkins-master
  type: LoadBalancer
  loadBalancerSourceRanges:
    - 0.0.0.0/0
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins
  labels:
    heritage: Helm
    release: release-name
    chart: jenkins-0.10.38
    component: release-name-jenkins-master
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: release-name-jenkins-master
  template:
    metadata:
      labels:
        app: jenkins
        heritage: Helm
        release: release-name
        chart: jenkins-0.10.38
        component: release-name-jenkins-master
      annotations:
        checksum/config: 641326db588123edd84246bae5888e35caeacac42513971f5d6cdf8c1daeec64
    spec:
      securityContext:
        runAsUser: 0
      serviceAccountName: default
      initContainers:
        - name: copy-default-config
          image: jenkinsci/jenkins:2.67
          imagePullPolicy: Always
          command:
            - sh
            - /var/jenkins_config/apply_config.sh
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-home
            - mountPath: /var/jenkins_config
              name: jenkins-config
            - mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
        - name: create-jenkins-config
          image: gcr.io/jenkinsxio/jx:2.0.645
          imagePullPolicy: IfNotPresent
          command:
            - jx
            - step
            - create
            - jenkins
            - config
            - -o
            - /var/jenkins_home/config.xml
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-home
      containers:
        - name: jenkins
          image: jenkinsci/jenkins:2.67
          imagePullPolicy: Always
          args:
            - --argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)
            - --argumentsRealm.roles.$(ADMIN_USER)=admin
          readinessProbe:
            timeoutSeconds: 5
            initialDelaySeconds: 10
            httpGet:
              path: /login
              port: 8080
          livenessProbe:
            timeoutSeconds: 5
            initialDelaySeconds: 60
            failureThreshold: 10
            httpGet:
              path: /login
              port: 8080
          env:
            - name: DOCKER_REGISTRY
              valueFrom:
                configMapKeyRef:
                  name: jenkins-x-docker-registry
                  key: docker.registry
            - name: JAVA_OPTS
              value: ""
            - name: JENKINS_OPTS
              value: ""
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jenkins
                  key: jenkins-admin-password
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: jenkins
                  key: jenkins-admin-user
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 50000
              name: slavelistener
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-home
              readOnly: false
            - mountPath: /var/jenkins_config
              name: jenkins-config
              readOnly: true
            - mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
              readOnly: false
      volumes:
        - name: jenkins-config
          configMap:
            name: jenkins
        - name: plugin-dir
          emptyDir: {}
        - name: secrets-dir
          emptyDir: {}
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-ui-test-5qihj
  annotations:
    helm.sh/hook: test-success
spec:
  initContainers:
    - name: test-framework
      image: dduportal/bats:0.4.0
      command:
        - bash
        - -c
        - |
          set -ex
          # copy bats to tools dir
          cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
        - mountPath: /tools
          name: tools
  containers:
    - name: release-name-ui-test
      image: jenkinsci/jenkins:2.67
      command:
        - /tools/bats/bats
        - -t
        - /tests/run.sh
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
        - mountPath: /tools
          name: tools
  volumes:
    - name: tests
      configMap:
        name: jenkins-tests
    - name: tools
      emptyDir: {}
  restartPolicy: Never
