apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-bootstrap-role
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-default-cert
  labels:
    app: cert-release-name-tyk-pro
    chart: tyk-pro-0.9.5
    release: release-name
    heritage: Helm
type: Opaque
data:
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2ekNDQWRPZ0F3SUJBZ0lKQU9lU09URWVSTVBFTUEwR0NTcUdTSWIzRFFFQkN3VUFNQXd4Q2pBSUJnTlYKQkFNTUFTb3dIaGNOTWpFd016QTRNVGN6TmpRMldoY05Nall3TXpBM01UY3pOalEyV2pBTU1Rb3dDQVlEVlFRRApEQUVxTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SHhsd21KZGQwaFU3YVAvClRaUDJ2bEM5UlFpbS8zdGhZc0xpbkhyeStnREdIaUZqOW5uMlIza1BreTB0MHg0RWRlU1pkb1RYQXNyaDZjdzAKbzJuTlJXNW5CV0xiK3Z2ZTA1ZG9Hc2I0TnkzdWhGM1FTT1ovZEVLdGpQdzdkMlB5anZqbG9YOHBtQ0QyN3NkVwpNSEUreGEvbVc5TlZhZGgrdzdOT3loS2RWWnp0M0U3MmFWOTlEZXl0cng3Smw1YkNFZld0bk5pU0p5a1pjQkZwCjFsb3ZiZUNiOVlxcDRDcGptdm9OSnVFR1dJeHBScGliUlVoMUtLNVloVEFncGZYODQ5M3MvdFVma1grWE5BUUEKdnJBWWdFN0lDc21KdmRueThFTXZZaEoyd2JuUHpMSE5KNXFPemNJaGtjWTAvc2l4bUxNVFRFRmdYbzJNT09XVQpnZXN4Q1FJREFRQUJvMUF3VGpBZEJnTlZIUTRFRmdRVUlLZXpUY3dGZW82U1NRMHNtUXZtMDVjdDBHRXdId1lEClZSMGpCQmd3Rm9BVUlLZXpUY3dGZW82U1NRMHNtUXZtMDVjdDBHRXdEQVlEVlIwVEJBVXdBd0VCL3pBTkJna3EKaGtpRzl3MEJBUXNGQUFPQ0FRRUFDTll2S2JNQk9VeTJ1SjNvaEZjODNFOWtoSjdUMlJoWk9lZE02bmxidk5xWgpIcmFOcXMweWQzalBZRmZXTzlaT2xyZmNQZ1FDS2pyMlhHR2hmczBOZm9HSm1mbDVuai9QeDRGSHBsb095cnV5Ci9YVjFsKzlpS0x2NFRVcis3dGpaUVhHaUdKSC8yN2d5SW1MVWNWcm80ZnJDOG1ZRlBRSHdCaVJtblRzOUlSYXEKY3doNHNlQ2x3aktxUWY5NGxkNTNtM2ZHdEJlY21LSmliUG1TcVIzVWczdlZKYm5WYW1jMjhXZ20wVXUzT1lHOApXOXBzSlhyNHh4clZGQmMydTU0TEVjM1V3NXFWcEpwcHNxMXRFb0VrUEZGd3lmM0gvVTdxSng4N3Y1OG9pS2ltCmVyUUdCT0Vtemowd3g0RExRM3dDUlNWc0diWWg0UEFNSHBSRUNiTFpOZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRElmR1hDWWwxM1NGVHQKby85TmsvYStVTDFGQ0tiL2UyRml3dUtjZXZMNkFNWWVJV1AyZWZaSGVRK1RMUzNUSGdSMTVKbDJoTmNDeXVIcAp6RFNqYWMxRmJtY0ZZdHY2Kzk3VGwyZ2F4dmczTGU2RVhkQkk1bjkwUXEyTS9EdDNZL0tPK09XaGZ5bVlJUGJ1CngxWXdjVDdGcitaYjAxVnAySDdEczA3S0VwMVZuTzNjVHZacFgzME43SzJ2SHNtWGxzSVI5YTJjMkpJbktSbHcKRVduV1dpOXQ0SnYxaXFuZ0ttT2ErZzBtNFFaWWpHbEdtSnRGU0hVb3JsaUZNQ0NsOWZ6ajNleisxUitSZjVjMApCQUMrc0JpQVRzZ0t5WW05MmZMd1F5OWlFbmJCdWMvTXNjMG5tbzdOd2lHUnhqVCt5TEdZc3hOTVFXQmVqWXc0CjVaU0I2ekVKQWdNQkFBRUNnZ0VCQUlkWVM0NHR2N0Z1T0Q5eHprRytHUDRrSFpKRUpCRW5admc0WHFtSzZ3dFIKaUc0QTFxNG5hZGFZYUtaUUFyYWFkaUpzb0JsOTFuVkJKOEFoSm93SE9oZWNUNW80UWcrdkI1L0tmL0pMem5mWgozMEttM3B6SVZ0VFN5cno1N3Q5THJ3MU1CQ0hCYWdBVWlQOXJ2TWpaT3FwVWRHd2JRSGRETzFpOGJQMUlFY1VnCkNLV0hIMGl6K2g2TEpBek9wOFh1YUVhci9kV2hDbnFhMDZ4c1NBMmowV3JXZ0FBR0U0TmV0QjhiazkwTGpYQzEKaCtMYnEzYnFtbHBOYWtzNFV4RzIvQXR2TTZJakI1cGRLdmx3SGJMTkFxM0l6SEVEZDlidW53TmpIMy9WVkJVZQpQaTV5MVN6eGZqMjNWK2treFZYRG0ydjU2dmdlYmFacFNqY0ZjUlBFSlUwQ2dZRUE3K1FFRlZlaisydTZFK1NnCnd5QkNya3IrTWRIZ1ZKcHRqTk1VR2hyREQyWnZSbWVvdFIyak1Pa3ZlcnNoYXo2K21KTkN0cGE0UjlUaUxxNHUKMXd3dFcrZ25MYUg0bkRBSlNubk9aaDJDYnkxeWVFVWNwd3NxTmF4MmhmWCs1SUdvaTArVmtzZnk5WVoxZitzLwo1ZE9pbWZCcFk2RjJhWGN1bER0UER5TmVZOE1DZ1lFQTFmTDRjeDdUUGhVSkR0aTlXNkZVWUg4UFMvZFNZNk1BCmhQeE02OS9oM1k4VC8xMklVWTBPYk5GM2dzYnhXT1N1U0Z1QTBFc3F3U2tCQVc1VUlKSURNc3N4NXJJUFNmSEIKS20zTlA2YzdnVTB4Yi9CYTVVUEhld016aExid2pEbG1XNmlXZjdxSStocWdWTlJwU0dQSTR3WEJybWZTSEo2TgpPZGo4ZmJhRVIwTUNnWUE1M1FZZkg4U3VJSTRCdm1RSXJQOW9peTVGVmhxR1RibWUva3NiQU5tTUhXazUwa2NmCmFNYTBSWXJ1VDdULzZXS1A2dlZzbFc1ZDVUdXBodHBGaE9wc0FOTnlibDlKVFV6d2FmRWZNSDhGMGpDS1VpRlgKS1pwRTJCUyt1MWVBUnNZZzFGRi8xanNFZmlwWmNLVTVDcE51RGs5ZGVOVFhHNmhnbU8yNCtROExnUUtCZ1FERQpBZEllWGFvNElUdG9MNmJqY0owRnZzSTczWHpNcllRSFVjSURBdHhCaUJoUkJ0YWhwL0lFUGE4WXo3eENyVmNDCkVWcWsrWWhVNklUMFU2aWRJa2Z0Mi94K2xyaXRETi9rU0M0VzE5WUxNclpORUUybDV2KzFNZ3liMUtIeVJaQUIKL3lUS0poSGgyRXoxQ3BqZDZoVWI3NlV1YkEweGpReGpaK2lDSDVsMlV3S0JnRzBoaFdHcjRLOVU0RlkyenZCQwpPYkJ1QkhZcy9wQVhHVmsxVHo1R0NNOTNuTXB5eUR3cG1ZbEltMVI2LzVKcmhwcitDOHF2WXk3dnh0NFRMTmkrCjY4Y0ZRaStZVU9YTGd0QjZtNnkwWUQxemlYOU5wNFhTSDdoSVovcUFKYTFLQkQ5dGU2TnNUdmY4dHR4N01JSkYKRnA0MWQ4NkhEYTd5Wmk2NStUWExRTU5yCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-login-details
  labels:
    app: login-details-release-name-tyk-pro
    chart: tyk-pro-0.9.5
    release: release-name
    heritage: Helm
type: Opaque
data:
  TYK_PASS: Sml0aDllSVh3Nw==
---
apiVersion: v1
kind: Secret
metadata:
  name: secrets-release-name-tyk-pro
  labels:
    app: secrets-data-release-name-tyk-pro
    chart: tyk-pro-0.9.5
    release: release-name
    heritage: Helm
type: Opaque
stringData:
  redisPass: ""
  mongoURL: mongodb://mongo.default.svc.cluster.local:27017/tyk_analytics
  AdminSecret: "12345"
  APISecret: CHANGEME
  DashLicense: ""
  MDCBLicense: ""
  tibSecret: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dashboard-conf-release-name-tyk-pro
  labels:
    app: dashboard-release-name-tyk-pro
    chart: tyk-pro-0.9.5
    release: release-name
    heritage: Helm
data:
  tyk_analytics.conf: |
    {
      "listen_port": 3000,
      "tyk_api_config": {
        "Host": "http://tyk-gateway.$namespace",
        "Port": "8080",
        "Secret": "$sharedsecret"
      },
      "enable_ownership": true,
      "mongo_url": "mongodb://mongo.tyk.svc.cluster.local:27017/tyk_analytics",
      "mongo_use_ssl": false,
      "mongo_ssl_insecure_skip_verify": false,
      "mongo_ssl_allow_invalid_hostnames": false,
      "page_size": 10,
      "admin_secret": "$adminsecret",
      "shared_node_secret": "$sharedsecret",
      "redis_port": 6379,
      "redis_host": "redis.tyk.svc.cluster.local",
      "notify_on_change": true,
      "hash_keys": true,
      "enable_duplicate_slugs": true,
      "show_org_id": true,
      "host_config": {
        "enable_host_names": true,
        "disable_org_slug_prefix": true,
        "hostname": "localhost",
        "override_hostname": "dashboard-svc-tyk-pro.tyk.svc.cluster.local",
        "portal_root_path": "/"
      },
      "home_dir": "/opt/tyk-dashboard",
      "use_sharded_analytics": false,
      "enable_aggregate_lookups": true,
      "enable_analytics_cache": true,
      "allow_explicit_policy_id": true,
      "oauth_redirect_uri_separator": ";",
      "key_request_fields": "appName;appType",
      "dashboard_session_lifetime": 43200,
      "sso_enable_user_lookup": true,
      "notifications_listen_port": 5000,
      "enable_delete_key_by_hash": true,
      "enable_update_key_by_hash": true,
      "enable_hashed_keys_listing": true,
      "enable_multi_org_users": true
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mgmt-gateway-conf-release-name-tyk-pro
  labels:
    app: gateway-release-name-tyk-pro
    chart: tyk-pro-0.9.5
    release: release-name
    heritage: Helm
data:
  tyk_mgmt.conf: |
    {
        "listen_port": 8080,
        "secret": "$sharedsecret",
        "node_secret": "$sharedsecret",
        "template_path": "/opt/tyk-gateway/templates",
        "tyk_js_path": "/opt/tyk-gateway/js/tyk.js",
        "middleware_path": "/mnt/tyk-gateway/middleware",
        "use_db_app_configs": true,
        "db_app_conf_options": {
            "connection_string": "http://tyk-dashboard.$namespace:3000",
            "node_is_segmented": true,
            "tags": []
        },
        "app_path": "/mnt/tyk-gateway/apps",
        "storage": {
            "type": "redis",
            "enable_cluster": false,
            "hosts": {
                "redis.tyk.svc.cluster.local": "6379"
            },
            "username": "",
            "password": "",
            "database": 0,
            "optimisation_max_idle": 1000
        },
        "enable_analytics": true,
        "analytics_config": {
            "type": "mongo",
            "csv_dir": "/tmp",
            "mongo_url": "",
            "mongo_db_name": "",
            "mongo_collection": "",
            "purge_delay": -1,
            "ignored_ips": []
        },
        "health_check": {
            "enable_health_checks": false,
            "health_check_value_timeouts": 60
        },
        "optimisations_use_async_session_write": true,
        "enable_non_transactional_rate_limiter": true,
        "enable_sentinel_rate_limiter": false,
        "allow_master_keys": false,
        "policies": {
            "policy_source": "service",
            "policy_connection_string": "http://tyk-dashboard.$namespace:3000",
            "policy_record_name": "tyk_policies",
            "allow_explicit_policy_id": true

        },
        "hash_keys": true,
        "hash_key_function": "murmur128",
        "close_connections": false,
        "http_server_options": {
            "enable_websockets": true,
            "use_ssl": true,
            "server_name": "*",
            "min_version": 771,
            "certificates": [{
                "domain_name": "*",
                "cert_file": "/etc/certs/cert.pem",
                "key_file": "/etc/certs/key.pem"
            }]
        },
        "allow_insecure_configs": true,
        "coprocess_options": {
            "enable_coprocess": true,
            "coprocess_grpc_server": ""
        },
        "enable_bundle_downloader": false,
        "bundle_base_url": "",
        "global_session_lifetime": 100,
        "force_global_session_lifetime": false,
        "max_idle_connections_per_host": 500,
        "enable_custom_domains": true,
        "pid_file_location": "/mnt/tyk-gateway/tyk.pid"
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bootstrap-post-install-configmap-release-name-tyk-pro
data:
  init.sh: |-
    #!/usr/bin/env bash

    set -e

    apk --no-cache add curl jq
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    while [[ $(kubectl get pod -n $TYK_POD_NAMESPACE -l app=$TYK_DASHBOARD_DEPLOY -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do sleep 10; done && \
    /opt/scripts/bootstrap.sh
  bootstrap.sh: |-
    #!/usr/bin/env bash

    set -e
    DASHBOARD_HOSTNAME="$TYK_DASHBOARD_PROTO://$TYK_DASHBOARD_SVC.$TYK_POD_NAMESPACE.svc.cluster.local:$TYK_DB_LISTENPORT"

    main(){
      if [[ $# -lt 1 ]]
      then
        syntax_message
      else
        generate_credentials "$DASHBOARD_HOSTNAME"
        exit_reason "$?"
        if [ "$BOOTSTRAP_PORTAL" = "true" ]
        then
          create_portal
        fi
      fi
    }

    syntax_message(){
      echo 'SYNTAX ERROR: Usage `./bootstrap.sh DASHBOARD_HOSTNAME`'
      exit 1
    }

    generate_credentials(){
      error=0
      [[ -z "$1" ]] && return "6" || echo ""
      error="$?"
      [[ $error != 0 ]] && return $error
      echo "Creating Organisation"
      ORGDATA=$(create_organisation)
      error="$?"
      [[ $error != 0 ]] && return $error || echo "ORG DATA: $ORGDATA"
      export ORGID=$(org_id "$ORGDATA")
      error="$?"
      [[ $? != 0 ]] && return $error || echo "ORG ID: $ORGID"
      echo ""
      echo "Adding new user"
      export USER_AUTH_CODE=$(create_user $ORGID)
      error=$?
    }

    exit_reason(){
      case "$1" in
        "3")
          echo "ERROR: Unable to connect to the Dashboard. Please check that you are using the correct hostname."
          exit $1
          ;;
        "4")
          echo "ERROR: Unable to parse JSON"
          exit $1
          ;;
        "5")
          echo "Unexpected error"
          exit $1
          ;;
        "6")
          echo "ERROR: Hostname should not contain port number or protocol"
          ;;
        *)
          echo ""
          ;;
      esac
    }

    if_present_echo(){
      [[ -z "$1" ]] && return $2 || echo "$1"
    }

    create_organisation(){
      ORGDATA=$(curl --silent --header "admin-auth: $TYK_ADMIN_SECRET" --header "Content-Type:application/json" --data '{"owner_name": "'"$TYK_ORG_NAME"'", "cname_enabled": true, "cname": "'$TYK_ORG_CNAME'"}' $DASHBOARD_HOSTNAME/admin/organisations 2>&1)
      if_present_echo "$ORGDATA" 3
    }

    org_id(){
      ORGID=$(echo $1 | jq -r '.Meta')
      if_present_echo $ORGID 4
    }

    create_user(){
      USER_DATA=$(user_data $1)
      AUTH_CODE=$(echo $USER_DATA | jq -r '.Message')
      USER_ID=$(echo $USER_DATA | jq -r '.Meta.id')
      ## set user password
      response=$(curl --silent --header "authorization: $AUTH_CODE" --header "Content-Type:application/json" $DASHBOARD_HOSTNAME/api/users/$USER_ID/actions/reset --data '{"new_password":"'$TYK_ADMIN_PASSWORD'", "user_permissions": { "IsAdmin": "admin" }}')
      if_present_echo "$AUTH_CODE" 4
    }

    user_data(){
      user_curl=$(curl --silent --header "admin-auth: $TYK_ADMIN_SECRET" --header "Content-Type:application/json" --data '{"first_name": "'$TYK_ADMIN_FIRST_NAME'", "last_name": "'$TYK_ADMIN_LAST_NAME'", "email_address": "'$TYK_ADMIN_EMAIL'", "active": true, "org_id": "'$1'", "user_permissions": { "IsAdmin": "admin" }}' $DASHBOARD_HOSTNAME/admin/users 2>&1)
      if_present_echo $user_curl 3
    }

    create_portal(){
      log_message "Creating Portal for organisation $TYK_ORG_NAME"

      log_message "  Creating Portal default settings"
      log_json_result "$(curl $DASHBOARD_HOSTNAME/api/portal/configuration \
        -H "Authorization: $USER_AUTH_CODE" \
        -d "{}" 2>> bootstrap.log)"

      log_message "  Initialising Catalogue"
      result=$(curl $DASHBOARD_HOSTNAME/api/portal/catalogue \
        -H "Authorization: $USER_AUTH_CODE" \
        -d '{"org_id": "'$ORGID'"}' 2>> bootstrap.log)
      catalogue_id=$(echo "$result" | jq -r '.Message')
      log_json_result "$result"

      log_message "  Creating Portal home page"
      log_json_result "$(curl $DASHBOARD_HOSTNAME/api/portal/pages \
        -H "Authorization: $USER_AUTH_CODE" \
        -d '{
        "is_homepage": true,
        "template_name": "",
        "title": "Developer Portal Home",
        "slug": "/",
        "fields": {
          "JumboCTATitle": "Tyk Developer Portal",
          "SubHeading": "Sub Header",
          "JumboCTALink": "#cta",
          "JumboCTALinkTitle": "Your awesome APIs, hosted with Tyk!",
          "PanelOneContent": "Panel 1 content.",
          "PanelOneLink": "#panel1",
          "PanelOneLinkTitle": "Panel 1 Button",
          "PanelOneTitle": "Panel 1 Title",
          "PanelThereeContent": "",
          "PanelThreeContent": "Panel 3 content.",
          "PanelThreeLink": "#panel3",
          "PanelThreeLinkTitle": "Panel 3 Button",
          "PanelThreeTitle": "Panel 3 Title",
          "PanelTwoContent": "Panel 2 content.",
          "PanelTwoLink": "#panel2",
          "PanelTwoLinkTitle": "Panel 2 Button",
          "PanelTwoTitle": "Panel 2 Title"
        }
      }')"
    }

    log_message(){
      echo "$(date -u) $1"
    }

    log_json_result(){
      status=$(echo $1 | jq -r '.Status')
      if [ "$status" = "OK" ] || [ "$status" = "Ok" ]
      then
        log_ok
      else
        log_message "  ERROR: $(echo $1 | jq -r '.Message')"
        exit 1
      fi
    }

    log_ok(){
      log_message "  Ok"
    }

    if [ "$DASHBOARD_ENABLED" = "true" ] && [ "$BOOTSTRAP_DASHBOARD" = "true" ]
    then
      main $DASHBOARD_HOSTNAME
    fi

    kubectl create secret -n ${TYK_POD_NAMESPACE} generic tyk-operator-conf \
      --from-literal "TYK_AUTH=${USER_AUTH_CODE}" \
      --from-literal "TYK_ORG=${ORGID}" \
      --from-literal "TYK_MODE=pro" \
      --from-literal "TYK_URL=${DASHBOARD_HOSTNAME}"

    if [ "$DASHBOARD_ENABLED" = "true" ]
    then
      # restart dashboard deployment
      kubectl rollout restart deployment/${TYK_DASHBOARD_DEPLOY}
    fi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pump-conf-release-name-tyk-pro
  labels:
    app: pump-release-name-tyk-pro
    chart: tyk-pro-0.9.5
    release: release-name
    heritage: Helm
data:
  pump.conf: |-
    {
      "analytics_storage_type": "redis",
      "analytics_storage_config": {
        "type": "redis",
        "enable_cluster": false,
        "hosts": {},
        "username": "",
        "password": "",
        "database": 0,
        "optimisation_max_idle": 2000,
        "optimisation_max_active": 4000
      },
      "purge_delay": 4,
      "pumps": {
        "mongo": {
          "name": "mongo",
          "meta": {
            "collection_name": "tyk_analytics",
            "mongo_url": ""
          }
        },
        "mongo-pump-aggregate": {
          "name": "mongo-pump-aggregate",
          "meta": {
            "mongo_url": "",
            "use_mixed_collection": true
          }
        }
      },
      "uptime_pump_config": {
        "collection_name": "tyk_uptime_analytics",
        "mongo_url": ""
      },
      "dont_purge_uptime_data": false
    }
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: k8s-bootstrap-role
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - pods
      - pods/exec
      - secrets
    verbs:
      - get
      - list
      - create
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: k8s-bootstrap-role
subjects:
  - kind: ServiceAccount
    name: k8s-bootstrap-role
    namespace: default
roleRef:
  kind: Role
  name: k8s-bootstrap-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: dashboard-svc-release-name-tyk-pro
  labels:
    app: dashboard-svc-release-name-tyk-pro
    chart: tyk-pro-0.9.5
    release: release-name
    heritage: Helm
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: http
  type: NodePort
  selector:
    app: dashboard-release-name-tyk-pro
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-svc-release-name-tyk-pro
  labels:
    app: gateway-svc-release-name-tyk-pro
    chart: tyk-pro-0.9.5
    release: release-name
    heritage: Helm
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: gateway-release-name-tyk-pro
    release: release-name
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gateway-release-name-tyk-pro
  labels:
    app: gateway-release-name-tyk-pro
    chart: tyk-pro-0.9.5
    release: release-name
    heritage: Helm
spec:
  minReadySeconds: 10
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: gateway-release-name-tyk-pro
      release: release-name
  template:
    metadata:
      labels:
        app: gateway-release-name-tyk-pro
        release: release-name
      annotations:
        checksum/config: 2d52e09925acff35683dda08b81aac890704ddc774223cea389c542e12afdf50
    spec:
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      containers:
        - name: gateway-tyk-pro
          image: tykio/tyk-gateway:v3.2.1
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - all
          env:
            - name: TYK_GW_LISTENPORT
              value: "8080"
            - name: REDIGOCLUSTER_SHARDCOUNT
              value: "128"
            - name: TYK_GW_STORAGE_ADDRS
              value: redis.default.svc.cluster.local:6379
            - name: TYK_GW_STORAGE_ENABLECLUSTER
              value: "false"
            - name: TYK_GW_STORAGE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets-release-name-tyk-pro
                  key: redisPass
            - name: TYK_GW_STORAGE_DATABASE
              value: "0"
            - name: TYK_GW_STORAGE_USESSL
              value: "false"
            - name: TYK_GW_DBAPPCONFOPTIONS_NODEISSEGMENTED
              value: "false"
            - name: TYK_GW_DBAPPCONFOPTIONS_CONNECTIONSTRING
              value: http://dashboard-svc-release-name-tyk-pro.default:3000
            - name: TYK_GW_POLICIES_POLICYCONNECTIONSTRING
              value: http://dashboard-svc-release-name-tyk-pro.default:3000
            - name: TYK_GW_SECRET
              valueFrom:
                secretKeyRef:
                  name: secrets-release-name-tyk-pro
                  key: APISecret
            - name: TYK_GW_NODESECRET
              valueFrom:
                secretKeyRef:
                  name: secrets-release-name-tyk-pro
                  key: APISecret
            - name: TYK_GW_DBAPPCONFOPTIONS_TAGS
              value: ""
            - name: TYK_GW_HTTPSERVEROPTIONS_USESSL
              value: "false"
          command:
            - /opt/tyk-gateway/tyk
            - --conf=/etc/tyk-gateway/tyk.conf
          workingDir: /opt/tyk-gateway
          ports:
            - containerPort: 8080
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: tyk-mgmt-gateway-conf
              mountPath: /etc/tyk-gateway
            - name: tyk-scratch
              mountPath: /mnt/tyk-gateway
            - name: release-name-default-cert
              mountPath: /etc/certs
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /hello
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 3
            failureThreshold: 2
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /hello
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
      volumes:
        - name: tyk-mgmt-gateway-conf
          configMap:
            name: mgmt-gateway-conf-release-name-tyk-pro
            items:
              - key: tyk_mgmt.conf
                path: tyk.conf
        - name: tyk-scratch
          emptyDir: {}
        - name: release-name-default-cert
          secret:
            secretName: release-name-default-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard-release-name-tyk-pro
  labels:
    app: dashboard-release-name-tyk-pro
    chart: tyk-pro-0.9.5
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: dashboard-release-name-tyk-pro
      release: release-name
  template:
    metadata:
      labels:
        app: dashboard-release-name-tyk-pro
        release: release-name
      annotations:
        checksum/config: 275593b5826c6a36841a31188d89231e712ba7543dc6db326e28fcd33a5ec154
    spec:
      containers:
        - image: tykio/tyk-dashboard:v3.2.1
          imagePullPolicy: Always
          name: dashboard-tyk-pro
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - all
          env:
            - name: TYK_DB_LISTENPORT
              value: "3000"
            - name: REDIGOCLUSTER_SHARDCOUNT
              value: "128"
            - name: TYK_DB_HOSTCONFIG_HOSTNAME
              value: tyk-dashboard.local
            - name: TYK_DB_HOSTCONFIG_GATEWAYHOSTNAME
              value: tyk-gw.local
            - name: TYK_DB_TYKAPI_HOST
              value: http://gateway-svc-release-name-tyk-pro.default
            - name: TYK_DB_TYKAPI_PORT
              value: "8080"
            - name: TYK_DB_TYKAPI_SECRET
              valueFrom:
                secretKeyRef:
                  name: secrets-release-name-tyk-pro
                  key: APISecret
            - name: TYK_DB_REDISADDRS
              value: redis.default.svc.cluster.local:6379
            - name: TYK_DB_ENABLECLUSTER
              value: "false"
            - name: TYK_DB_REDISPASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets-release-name-tyk-pro
                  key: redisPass
            - name: TYK_DB_REDISUSESSL
              value: "false"
            - name: TYK_DB_REDISSSLINSECURESKIPVERIFY
              value: "true"
            - name: TYK_DB_MONGOURL
              valueFrom:
                secretKeyRef:
                  name: secrets-release-name-tyk-pro
                  key: mongoURL
            - name: TYK_DB_MONGOUSESSL
              value: "false"
            - name: TYK_DB_ADMINSECRET
              valueFrom:
                secretKeyRef:
                  name: secrets-release-name-tyk-pro
                  key: AdminSecret
            - name: TYK_DB_NODESECRET
              valueFrom:
                secretKeyRef:
                  name: secrets-release-name-tyk-pro
                  key: APISecret
            - name: TYK_DB_LICENSEKEY
              valueFrom:
                secretKeyRef:
                  name: secrets-release-name-tyk-pro
                  key: DashLicense
            - name: TYK_DB_HOSTCONFIG_PORTALROOTPATH
              value: /
            - name: TYK_DB_HTTPSERVEROPTIONS_USESSL
              value: "false"
          resources:
            seccompProfile:
              type: RuntimeDefault
          command:
            - /opt/tyk-dashboard/tyk-analytics
            - --conf=/etc/tyk-dashboard/tyk_analytics.conf
          workingDir: /opt/tyk-dashboard
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: tyk-dashboard-conf
              mountPath: /etc/tyk-dashboard
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 3
            failureThreshold: 2
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 3000
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
      volumes:
        - name: tyk-dashboard-conf
          configMap:
            name: dashboard-conf-release-name-tyk-pro
            items:
              - key: tyk_analytics.conf
                path: tyk_analytics.conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pump-release-name-tyk-pro
  labels:
    app: pump-release-name-tyk-pro
    chart: tyk-pro-0.9.5
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pump-release-name-tyk-pro
      release: release-name
  template:
    metadata:
      labels:
        app: pump-release-name-tyk-pro
        release: release-name
      annotations:
        checksum/config: 8e11d46d2856ae6764c6cdc2044df0a6be4e1cc0a99a19508e811b00f46be77d
    spec:
      containers:
        - name: pump-tyk-pro
          image: tykio/tyk-pump-docker-pub:v1.4.0
          imagePullPolicy: Always
          workingDir: /opt/tyk-pump
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - all
          env:
            - name: REDIGOCLUSTER_SHARDCOUNT
              value: "128"
            - name: PMP_MONGO_MONGOURL
              valueFrom:
                secretKeyRef:
                  name: secrets-release-name-tyk-pro
                  key: mongoURL
            - name: PMP_MONGO_MONGOUSESSL
              value: "false"
            - name: PMP_MONGOAGG_MONGOURL
              valueFrom:
                secretKeyRef:
                  name: secrets-release-name-tyk-pro
                  key: mongoURL
            - name: PMP_MONGOAGG_MONGOUSESSL
              value: "false"
            - name: TYK_PMP_ANALYTICSSTORAGECONFIG_ADDRS
              value: redis.default.svc.cluster.local:6379
            - name: TYK_PMP_ANALYTICSSTORAGECONFIG_ENABLECLUSTER
              value: "false"
            - name: TYK_PMP_ANALYTICSSTORAGECONFIG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets-release-name-tyk-pro
                  key: redisPass
            - name: TYK_PMP_ANALYTICSSTORAGECONFIG_REDISUSESSL
              value: "false"
          command:
            - /opt/tyk-pump/tyk-pump
            - -c
            - /etc/tyk-pump/pump.conf
          volumeMounts:
            - name: tyk-pump-conf
              mountPath: /etc/tyk-pump
          resources:
            seccompProfile:
              type: RuntimeDefault
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
      volumes:
        - name: tyk-pump-conf
          configMap:
            name: pump-conf-release-name-tyk-pro
            items:
              - key: pump.conf
                path: pump.conf
---
apiVersion: batch/v1
kind: Job
metadata:
  name: bootstrap-post-install-release-name-tyk-pro
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    helm.sh/chart: tyk-pro-0.9.5
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  backoffLimit: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: “false”
    spec:
      serviceAccountName: k8s-bootstrap-role
      containers:
        - name: bootstrap-post-install
          image: bash:5.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - /opt/scripts/init.sh
          env:
            - name: TYK_ADMIN_FIRST_NAME
              value: admin
            - name: TYK_ADMIN_LAST_NAME
              value: user
            - name: TYK_ADMIN_EMAIL
              value: default@example.com
            - name: TYK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-login-details
                  key: TYK_PASS
            - name: TYK_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: TYK_DASHBOARD_PROTO
              value: http
            - name: TYK_DASHBOARD_SVC
              value: dashboard-svc-release-name-tyk-pro
            - name: TYK_DB_LISTENPORT
              value: "3000"
            - name: TYK_ADMIN_SECRET
              value: "12345"
            - name: TYK_ORG_NAME
              value: Default Org
            - name: TYK_ORG_CNAME
              value: tyk-portal.local
            - name: DASHBOARD_ENABLED
              value: "true"
            - name: BOOTSTRAP_DASHBOARD
              value: "true"
            - name: BOOTSTRAP_PORTAL
              value: "true"
            - name: TYK_DASHBOARD_DEPLOY
              value: dashboard-release-name-tyk-pro
          volumeMounts:
            - name: bootstrap-config-volume
              mountPath: /opt/scripts
      volumes:
        - name: bootstrap-config-volume
          configMap:
            name: bootstrap-post-install-configmap-release-name-tyk-pro
            defaultMode: 511
      restartPolicy: Never
      terminationGracePeriodSeconds: 0
