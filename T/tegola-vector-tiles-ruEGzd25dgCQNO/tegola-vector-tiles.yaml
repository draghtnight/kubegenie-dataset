apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tegola-vector-tiles-release-name
  labels:
    app: tegola-vector-tiles
    chart: tegola-vector-tiles-0.1.2
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: tegola-vector-tiles
      release: release-name
  policyTypes:
    - Ingress
  ingress:
    - ports:
        - port: 8080
          protocol: TCP
---
apiVersion: v1
kind: Secret
metadata:
  name: tegola-vector-tiles-release-name-secret-config
  labels:
    app: tegola-vector-tiles
    chart: tegola-vector-tiles-0.1.2
    release: release-name
    heritage: Helm
type: Opaque
data:
  AWS_ACCESS_KEY_ID: czNfY29tcGF0aWJsZV9zd2lmdF9rZXlfaWQ=
  AWS_SECRET_ACCESS_KEY: czNfY29tcGF0aWJsZV9zd2lmdF9zZWNyZXRfYWNjZXNzX2tleQ==
  TEGOLA_POSTGRES_PASSWORD: c2VjcmV0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-release-name
  labels:
    app: tegola-vector-tiles
    chart: tegola-vector-tiles-0.1.2
    release: release-name
    heritage: Helm
data:
  config.toml: "\n[observer]\ntype = \"prometheus\"\n\n[[providers]]\nname = \"osm\"\ntype = \"mvt_postgis\"\nhost = \"postgres-postgis\"\nmax_connections = \nport = \"5432\"\ndatabase = \"gis\"\nuser = \"default\"\npassword = \"${TEGOLA_POSTGRES_PASSWORD}\"\n\n  [[providers.layers]]\n  name = \"landuse\"\n  geometry_fieldname = \"geom\"\n  geometry_type = \"polygon\"\n  id_fieldname = \"osm_id\"\n  sql = \"SELECT class, osm_id, way_area, z_order, ST_AsMVTGeom(geometry, !BBOX!) AS geom FROM layer_landuse(!BBOX!, !ZOOM!)\"\n\n  [[providers.layers]]\n  name = \"waterway\"\n  geometry_fieldname = \"geom\"\n  geometry_type = \"linestring\"\n  id_fieldname = \"osm_id\"\n  sql = \"SELECT class, osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom FROM layer_waterway(!BBOX!, !ZOOM!)\"\n\n  [[providers.layers]]\n  name = \"water\"\n  geometry_type = \"polygon\"\n  geometry_fieldname = \"geom\"\n  id_fieldname = \"osm_id\"\n  sql = \"SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom FROM layer_water(!BBOX!, !ZOOM!)\"\n\n  [[providers.layers]]\n  name = \"aeroway\"\n  geometry_type = \"polygon\"\n  geometry_fieldname = \"geom\"\n  id_fieldname = \"osm_id\"\n  sql = \"SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom, type FROM layer_aeroway(!BBOX!, !ZOOM!)\"\n\n  [[providers.layers]]\n  name = \"road\"\n  geometry_type = \"linestring\"\n  geometry_fieldname = \"geom\"\n  id_fieldname = \"osm_id\"\n  sql = \"SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom, class, z_order, 'is' FROM layer_transportation(!BBOX!, !ZOOM!)\"\n\n  [[providers.layers]]\n  name = \"admin\"\n  geometry_type = \"linestring\"\n  geometry_fieldname = \"geom\"\n  fields = [ \"admin_level\", \"disputed\", \"maritime\", \"osm_id\" ]\n  sql = \"SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom, admin_level, maritime, disputed FROM layer_admin(!BBOX!, !ZOOM!)\"\n\n  [[providers.layers]]\n  name = \"country_label\"\n  geometry_type = \"point\"\n  geometry_fieldname = \"geom\"\n  id_fieldname = \"osm_id\"\n  sql = \"SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!, 4096, 1024) AS geom, name, name_, scalerank, code FROM layer_country_label(!BBOX!, !ZOOM!, !PIXEL_WIDTH!)\"\n\n  [[providers.layers]]\n  name = \"poi_label\"\n  geometry_type = \"point\"\n  geometry_fieldname = \"geom\"\n  id_fieldname = \"osm_id\"\n  sql = \"SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom, localrank, scalerank, maki, name FROM layer_poi_label(!BBOX!, !ZOOM!)\"\n\n  [[providers.layers]]\n  name = \"road_label\"\n  geometry_type = \"linestring\"\n  geometry_fieldname = \"geom\"\n  id_fieldname = \"osm_id\"\n  sql = \"SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom, shield, name, name_, ref, reflen, len FROM layer_transportation_name(!BBOX!, !ZOOM!)\"\n\n  [[providers.layers]]\n  name = \"place_label\"\n  geometry_type = \"point\"\n  geometry_fieldname = \"geom\"\n  id_fieldname = \"osm_id\"\n  sql = \"SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!, 4096, 1024) AS geom, ldir, localrank, name, name_, osm_id, type FROM layer_place_label(!BBOX!, !ZOOM!, !PIXEL_WIDTH!)\"\n\n  [[providers.layers]]\n  name = \"building\"\n  geometry_type = \"polygon\"\n  geometry_fieldname = \"geom\"\n  id_fieldname = \"osm_id\"\n  sql = \"SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom FROM layer_building(!BBOX!, !ZOOM!)\"\n\n[[maps]]\nname = \"osm\"\nattribution = 'Map data Â© <a href=\"http://openstreetmap.org/copyright\">OpenStreetMap contributors</a>'\ncenter = [ -122.4144, 37.7907, 14.0 ]\ntile_buffer = 8\n\n  [[maps.layers]]\n  provider_layer = \"osm.landuse\"\n  min_zoom = 7\n  max_zoom = 15\n\n  [[maps.layers]]\n  provider_layer = \"osm.waterway\"\n  min_zoom = 8\n  max_zoom = 15\n\n  [[maps.layers]]\n  provider_layer = \"osm.water\"\n  min_zoom = 0\n  max_zoom = 15\n\n  [[maps.layers]]\n  provider_layer = \"osm.aeroway\"\n  min_zoom = 12\n  max_zoom = 15\n\n  [[maps.layers]]\n  provider_layer = \"osm.road\"\n  min_zoom = 6\n  max_zoom = 15\n\n  [[maps.layers]]\n  provider_layer = \"osm.admin\"\n  min_zoom = 0\n  max_zoom = 15\n\n  [[maps.layers]]\n  provider_layer = \"osm.country_label\"\n  min_zoom = 3\n  max_zoom = 10\n\n  [[maps.layers]]\n  provider_layer = \"osm.poi_label\"\n  min_zoom = 14\n  max_zoom = 15\n\n  [[maps.layers]]\n  provider_layer = \"osm.road_label\"\n  min_zoom = 11\n  max_zoom = 15\n\n  [[maps.layers]]\n  provider_layer = \"osm.place_label\"\n  min_zoom = 3\n  max_zoom = 15\n\n  [[maps.layers]]\n  provider_layer = \"osm.building\"\n  min_zoom = 14\n  max_zoom = 15"
---
apiVersion: v1
kind: Service
metadata:
  name: tegola-vector-tiles-release-name
  labels:
    app: tegola-vector-tiles
    chart: tegola-vector-tiles-0.1.2
    release: release-name
    heritage: Helm
spec:
  type: NodePort
  selector:
    app: tegola-vector-tiles
    release: release-name
  ports:
    - name: http
      targetPort: 8080
      port: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tegola-vector-tiles-release-name
  labels:
    app: tegola-vector-tiles
    chart: tegola-vector-tiles-0.1.2
    release: release-name
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: tegola-vector-tiles
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: tegola-vector-tiles
        release: release-name
        routed_via: release-name
      annotations:
        checksum/secrets: de768e02f1b729804e9abe2f423ad6ccd3f8086ff999208959b3598584b8893a
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      containers:
        - name: tegola-vector-tiles-release-name
          image: docker-registry.wikimedia.org/wikimedia/operations-software-tegola:latest
          imagePullPolicy: IfNotPresent
          args:
            - serve
            - --config
            - /etc/tegola/config.toml
          ports:
            - containerPort: 8080
          livenessProbe:
            tcpSocket:
              port: 8080
          readinessProbe:
            httpGet:
              path: /capabilities
              port: 8080
          env:
            - name: SERVICE_IDENTIFIER
              value: tegola-vector-tiles-release-name
            - name: TEGOLA_BROKER_URL
              value: kafka://kafka-hostname:9092
            - name: TEGOLA_CONFIG_PATH
              value: /etc/tegola/config.toml
            - name: TEGOLA_PATH
              value: /srv/service/cmd/tegola/tegola
            - name: TEGOLA_QUEUE_NAME
              value: tegola-maps-tile-pregeneration
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: tegola-vector-tiles-release-name-secret-config
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: tegola-vector-tiles-release-name-secret-config
                  key: AWS_SECRET_ACCESS_KEY
            - name: TEGOLA_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tegola-vector-tiles-release-name-secret-config
                  key: TEGOLA_POSTGRES_PASSWORD
          resources:
            requests:
              cpu: 1m
              memory: 200Mi
            limits:
              cpu: 1m
              memory: 400Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/tegola
      volumes:
        - name: config-volume
          configMap:
            name: config-release-name
