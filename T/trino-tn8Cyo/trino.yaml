apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-catalog
  labels:
    app: trino
    chart: trino-0.8.0
    release: release-name
    heritage: Helm
    role: catalogs
data:
  tpch.properties: |
    connector.name=tpch
    tpch.splits-per-node=4
  tpcds.properties: |
    connector.name=tpcds
    tpcds.splits-per-node=4
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-coordinator
  labels:
    app: trino
    chart: trino-0.8.0
    release: release-name
    heritage: Helm
    component: coordinator
data:
  node.properties: |
    node.environment=production
    node.data-dir=/data/trino
    plugin.dir=/usr/lib/trino/plugin
  jvm.config: |
    -server
    -Xmx8G
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -Djdk.attach.allowAttachSelf=true
    -XX:-UseBiasedLocking
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.nio.maxCachedBufferSize=2000000
    -XX:+UnlockDiagnosticVMOptions
    -XX:+UseAESCTRIntrinsics
  config.properties: "coordinator=true\nnode-scheduler.include-coordinator=false\nhttp-server.http.port=8080\nquery.max-memory=4GB\nquery.max-memory-per-node=1GB\nmemory.heap-headroom-per-node=1GB\ndiscovery-server.enabled=true\ndiscovery.uri=http://localhost:8080\n  \n"
  exchange-manager.properties: |
    exchange-manager.name=filesystem
    exchange.base-directory=/tmp/trino-local-file-system-exchange-manager
  log.properties: |
    io.trino=INFO
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-worker
  labels:
    app: trino
    chart: trino-0.8.0
    release: release-name
    heritage: Helm
    component: worker
data:
  node.properties: |
    node.environment=production
    node.data-dir=/data/trino
    plugin.dir=/usr/lib/trino/plugin
  jvm.config: |
    -server
    -Xmx8G
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -Djdk.attach.allowAttachSelf=true
    -XX:-UseBiasedLocking
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.nio.maxCachedBufferSize=2000000
    -XX:+UnlockDiagnosticVMOptions
    -XX:+UseAESCTRIntrinsics
  config.properties: "coordinator=false\nhttp-server.http.port=8080\nquery.max-memory=4GB\nquery.max-memory-per-node=1GB\nmemory.heap-headroom-per-node=1GB\ndiscovery.uri=http://release-name-trino:8080\n  \n"
  exchange-manager.properties: |
    exchange-manager.name=filesystem
    exchange.base-directory=/tmp/trino-local-file-system-exchange-manager
  log.properties: |
    io.trino=INFO
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-trino
  labels:
    app: trino
    chart: trino-0.8.0
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: trino
    release: release-name
    component: coordinator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-trino-coordinator
  labels:
    app: trino
    chart: trino-0.8.0
    release: release-name
    heritage: Helm
    component: coordinator
spec:
  selector:
    matchLabels:
      app: trino
      release: release-name
      component: coordinator
  template:
    metadata:
      labels:
        app: trino
        release: release-name
        component: coordinator
    spec:
      serviceAccountName: default
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      volumes:
        - name: config-volume
          configMap:
            name: release-name-trino-coordinator
        - name: catalog-volume
          configMap:
            name: release-name-trino-catalog
      imagePullSecrets:
        - name: registry-credentials
      containers:
        - name: trino-coordinator
          image: trinodb/trino:latest
          imagePullPolicy: IfNotPresent
          env: []
          volumeMounts:
            - mountPath: /etc/trino
              name: config-volume
            - mountPath: /etc/trino/catalog
              name: catalog-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-trino-worker
  labels:
    app: trino
    chart: trino-0.8.0
    release: release-name
    heritage: Helm
    component: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: trino
      release: release-name
      component: worker
  template:
    metadata:
      labels:
        app: trino
        release: release-name
        component: worker
    spec:
      serviceAccountName: default
      volumes:
        - name: config-volume
          configMap:
            name: release-name-trino-worker
        - name: catalog-volume
          configMap:
            name: release-name-trino-catalog
      imagePullSecrets:
        - name: registry-credentials
      containers:
        - name: trino-worker
          image: trinodb/trino:latest
          imagePullPolicy: IfNotPresent
          env: []
          volumeMounts:
            - mountPath: /etc/trino
              name: config-volume
            - mountPath: /etc/trino/catalog
              name: catalog-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
---
null
---
null
