apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-trino-loadbalancer
  labels:
    helm.sh/chart: trino-loadbalancer-0.2.4
    app.kubernetes.io/name: trino-loadbalancer
    app.kubernetes.io/instance: release-name
    version: 0.2.4
    app.kubernetes.io/version: 0.2.4
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-configmap
  labels:
    chart: trino-loadbalancer-0.2.4
    release: release-name
data:
  config.yml: |
    clusters:
      healthcheck:
        delay: 5s
        enabled: true
      statistics:
        delay: 5s
        enabled: true
      sync:
        delay: 10s
    controller:
      features:
        slow_worker_drainer:
          analyzer:
            std_deviation_ratio: 3
          drainThreshold: 3
          dryRun: true
          enabled: false
          gracePeriodSeconds: 300
          k8s:
            namespaceSelector: {}
          provider: k8s
    discovery:
      providers:
      - enabled: false
        provider: static
        static:
          clusters:
          - enabled: true
            name: cluster-0
            tags:
              env: dev
              local: true
            url: http://localhost:8080
      - aws:
          access_key_id: ""
          region: eu-west-1
          secret_key: ""
        enabled: false
        provider: aws-emr
      - enabled: false
        k8s:
          cluster_domain: cluster.local
          kube_config: tdac-test
          selector_tags:
            component: coordinator
            deployment: trino
        provider: k8s
    notifier:
      slack:
        webhook: ""
    persistence:
      postgres:
        db: postgres
        host: 127.0.0.1
        password: trino
        port: 5432
        ssl_mode: disable
        username: trinohub
    proxy:
      port: 8998
    routing:
      rule: round-robin
      users:
        default:
          behaviour: default
          cluster: {}
        rules: []
    session:
      store:
        redis:
          opts:
            max_ttl: 24h
            prefix: 'trino::'
          sentinel:
            db: 0
            enabled: false
            hosts:
            - ""
            - ""
            master: mymaster
            password: ""
          standalone:
            db: 0
            enabled: true
            host: 127.0.0.1:6379
            password: ""
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-trino-loadbalancer
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
      - deployments/scale
    verbs:
      - get
      - update
      - patch
      - list
  - apiGroups:
      - ""
    resources:
      - services
      - namespaces
      - pods
      - deployments
    verbs:
      - get
      - watch
      - list
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-trino-loadbalancer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-trino-loadbalancer
subjects:
  - kind: ServiceAccount
    name: release-name-trino-loadbalancer
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-trino-loadbalancer
  labels:
    helm.sh/chart: trino-loadbalancer-0.2.4
    app.kubernetes.io/name: trino-loadbalancer
    app.kubernetes.io/instance: release-name
    version: 0.2.4
    app.kubernetes.io/version: 0.2.4
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: trino-loadbalancer
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-trino-loadbalancer-proxy
  labels:
    helm.sh/chart: trino-loadbalancer-0.2.4
    app.kubernetes.io/name: trino-loadbalancer
    app.kubernetes.io/instance: release-name
    version: 0.2.4
    app.kubernetes.io/version: 0.2.4
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: trino-loadbalancer
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: trino-loadbalancer
        app.kubernetes.io/instance: release-name
        version: 0.2.4
    spec:
      serviceAccountName: release-name-trino-loadbalancer
      securityContext: {}
      volumes:
        - name: config-volume
          configMap:
            name: release-name-configmap
      containers:
        - name: trino-loadbalancer
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: datappeal/trino-loadbalancer:edge
          imagePullPolicy: Always
          args:
            - proxy
            - --config
            - /config/config.yml
            - --static-files
            - /ui
          volumeMounts:
            - name: config-volume
              mountPath: /config
          ports:
            - name: http
              containerPort: 8998
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
