apiVersion: v1
kind: ServiceAccount
metadata:
  name: tempest-ks-user
  namespace: jUV3apck
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tempest-run-tests
  namespace: jUV3apck
---
apiVersion: v1
kind: Secret
metadata:
  name: tempest-etc
type: Opaque
data:
  tempest.conf: W2F1dGhdCmFkbWluX2RvbWFpbl9uYW1lID0gZGVmYXVsdAphZG1pbl9wYXNzd29yZCA9IHBhc3N3b3JkCmFkbWluX3Byb2plY3RfbmFtZSA9IGFkbWluCmFkbWluX3VzZXJuYW1lID0gYWRtaW4KdXNlX2R5bmFtaWNfY3JlZGVudGlhbHMgPSB0cnVlCltkYXNoYm9hcmRdCmRhc2hib2FyZF91cmwgPSBodHRwOi8vaG9yaXpvbi5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsLwpbaWRlbnRpdHldCmFkbWluX2RvbWFpbl9zY29wZSA9IGZhbHNlCmF1dGhfdmVyc2lvbiA9IHYzCnJlZ2lvbiA9IFJlZ2lvbk9uZQp1cmlfdjMgPSBodHRwOi8va2V5c3RvbmUtYXBpLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWw6NTAwMC92MwpbaWRlbnRpdHktZmVhdHVyZS1lbmFibGVkXQphcGlfdjMgPSB0cnVlCmRvbWFpbl9zcGVjaWZpY19kcml2ZXJzID0gdHJ1ZQpbaW1hZ2VdCmNvbnRhaW5lcl9mb3JtYXRzID0gYmFyZQpkaXNrX2Zvcm1hdHMgPSByYXcKaHR0cF9pbWFnZSA9IGh0dHA6Ly9kb3dubG9hZC5jaXJyb3MtY2xvdWQubmV0LzAuMy41L2NpcnJvcy0wLjMuNS14ODZfNjQtZGlzay5pbWcKW25ldHdvcmtdCnByb2plY3RfbmV0d29ya3NfcmVhY2hhYmxlID0gZmFsc2UKc2hhcmVkX3BoeXNpY2FsX25ldHdvcmsgPSB0cnVlCltuZXR3b3JrLWZlYXR1cmUtZW5hYmxlZF0KYXBpX2V4dGVuc2lvbnMgPSBkZWZhdWx0LXN1Ym5ldHBvb2xzLG5ldHdvcmstaXAtYXZhaWxhYmlsaXR5LG5ldHdvcmtfYXZhaWxhYmlsaXR5X3pvbmUsYXV0by1hbGxvY2F0ZWQtdG9wb2xvZ3ksZXh0LWd3LW1vZGUsYmluZGluZyxhZ2VudCxzdWJuZXRfYWxsb2NhdGlvbixsM19hZ2VudF9zY2hlZHVsZXIsdGFnLGV4dGVybmFsLW5ldCxmbGF2b3JzLG5ldC1tdHUsYXZhaWxhYmlsaXR5X3pvbmUscXVvdGFzLGwzLWhhLHByb3ZpZGVyLG11bHRpLXByb3ZpZGVyLGFkZHJlc3Mtc2NvcGUsZXh0cmFyb3V0ZSxzdWJuZXQtc2VydmljZS10eXBlcyxzdGFuZGFyZC1hdHRyLXRpbWVzdGFtcCxzZXJ2aWNlLXR5cGUsbDMtZmxhdm9ycyxwb3J0LXNlY3VyaXR5LGV4dHJhX2RoY3Bfb3B0LHN0YW5kYXJkLWF0dHItcmV2aXNpb25zLHBhZ2luYXRpb24sc29ydGluZyxzZWN1cml0eS1ncm91cCxkaGNwX2FnZW50X3NjaGVkdWxlcixyb3V0ZXJfYXZhaWxhYmlsaXR5X3pvbmUscmJhYy1wb2xpY2llcyxzdGFuZGFyZC1hdHRyLWRlc2NyaXB0aW9uLHJvdXRlcixhbGxvd2VkLWFkZHJlc3MtcGFpcnMscHJvamVjdC1pZCxkdnIKZmxvYXRpbmdfaXBzID0gdHJ1ZQpbc2VydmljZV9hdmFpbGFibGVdCmNpbmRlciA9IHRydWUKZ2xhbmNlID0gdHJ1ZQpuZXV0cm9uID0gZmFsc2UKbm92YSA9IGZhbHNlCnN3aWZ0ID0gZmFsc2UKW3ZhbGlkYXRpb25dCmNvbm5lY3RfbWV0aG9kID0gZmxvYXRpbmcKW3ZvbHVtZV0KYmFja2VuZF9uYW1lcyA9IHJiZDEKY2F0YWxvZ190eXBlID0gdm9sdW1ldjMKZGlza19mb3JtYXRzID0gcmF3CnN0b3JhZ2VfcHJvdG9jb2wgPSByYmQK
  logging.conf: W2Zvcm1hdHRlcl90ZXN0c10KY2xhc3MgPSBvc2xvX2xvZy5mb3JtYXR0ZXJzLkNvbnRleHRGb3JtYXR0ZXIKW2Zvcm1hdHRlcnNdCmtleXMgPSB0ZXN0cwpbaGFuZGxlcl9zdGRvdXRdCmFyZ3MgPSAoc3lzLnN0ZG91dCwpCmNsYXNzID0gU3RyZWFtSGFuZGxlcgpmb3JtYXR0ZXIgPSB0ZXN0cwpsZXZlbCA9IFdBUk4KW2hhbmRsZXJzXQprZXlzID0gc3Rkb3V0Cltsb2dnZXJfcm9vdF0KaGFuZGxlcnMgPSBudWxsCmxldmVsID0gREVCVUcKW2xvZ2dlcl90ZW1wZXN0XQpoYW5kbGVycyA9IHN0ZG91dApsZXZlbCA9IFdBUk4KcHJvcGFnYXRlID0gMApxdWFsbmFtZSA9IHRlbXBlc3QKW2xvZ2dlcnNdCmtleXMgPSByb290LCB0ZW1wZXN0Cg==
---
apiVersion: v1
kind: Secret
metadata:
  name: tempest-keystone-admin
type: Opaque
data:
  OS_AUTH_URL: aHR0cDovL2tleXN0b25lLWFwaS5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjUwMDAvdjM=
  OS_REGION_NAME: UmVnaW9uT25l
  OS_INTERFACE: aW50ZXJuYWw=
  OS_PROJECT_DOMAIN_NAME: ZGVmYXVsdA==
  OS_PROJECT_NAME: YWRtaW4=
  OS_USER_DOMAIN_NAME: ZGVmYXVsdA==
  OS_USERNAME: YWRtaW4=
  OS_PASSWORD: cGFzc3dvcmQ=
  OS_DEFAULT_DOMAIN: ZGVmYXVsdA==
---
apiVersion: v1
kind: Secret
metadata:
  name: tempest-keystone-user
type: Opaque
data:
  OS_AUTH_URL: aHR0cDovL2tleXN0b25lLWFwaS5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjUwMDAvdjM=
  OS_REGION_NAME: UmVnaW9uT25l
  OS_INTERFACE: aW50ZXJuYWw=
  OS_PROJECT_DOMAIN_NAME: c2VydmljZQ==
  OS_PROJECT_NAME: c2VydmljZQ==
  OS_USER_DOMAIN_NAME: c2VydmljZQ==
  OS_USERNAME: dGVtcGVzdA==
  OS_PASSWORD: cGFzc3dvcmQ=
  OS_DEFAULT_DOMAIN: ZGVmYXVsdA==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tempest-bin
data:
  ks-user.sh: |
    #!/bin/bash

    # Copyright 2017 Pete Birley
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.

    set -ex

    shopt -s nocasematch

    if [[ "${SERVICE_OS_PROJECT_DOMAIN_NAME}" == "Default" ]]
    then
      PROJECT_DOMAIN_ID="default"
    else
      # Manage project domain
      PROJECT_DOMAIN_ID=$(openstack domain create --or-show --enable -f value -c id \
        --description="Domain for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_PROJECT_DOMAIN_NAME}" \
        "${SERVICE_OS_PROJECT_DOMAIN_NAME}")
    fi

    if [[ "${SERVICE_OS_USER_DOMAIN_NAME}" == "Default" ]]
    then
      USER_DOMAIN_ID="default"
    else
      # Manage user domain
      USER_DOMAIN_ID=$(openstack domain create --or-show --enable -f value -c id \
        --description="Domain for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_USER_DOMAIN_NAME}" \
        "${SERVICE_OS_USER_DOMAIN_NAME}")
    fi

    shopt -u nocasematch

    # Manage user project
    USER_PROJECT_DESC="Service Project for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_PROJECT_DOMAIN_NAME}"
    USER_PROJECT_ID=$(openstack project create --or-show --enable -f value -c id \
        --domain="${PROJECT_DOMAIN_ID}" \
        --description="${USER_PROJECT_DESC}" \
        "${SERVICE_OS_PROJECT_NAME}");

    # Manage user
    USER_DESC="Service User for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_USER_DOMAIN_NAME}/${SERVICE_OS_SERVICE_NAME}"
    USER_ID=$(openstack user create --or-show --enable -f value -c id \
        --domain="${USER_DOMAIN_ID}" \
        --project-domain="${PROJECT_DOMAIN_ID}" \
        --project="${USER_PROJECT_ID}" \
        --description="${USER_DESC}" \
        "${SERVICE_OS_USERNAME}");

    # Manage user password (we do this in a seperate step to ensure the password is updated if required)
    set +x
    echo "Setting user password via: openstack user set --password=xxxxxxx ${USER_ID}"
    openstack user set --password="${SERVICE_OS_PASSWORD}" "${USER_ID}"
    set -x

    function ks_assign_user_role () {
      if [[ "$SERVICE_OS_ROLE" == "admin" ]]
      then
        USER_ROLE_ID="$SERVICE_OS_ROLE"
      else
        USER_ROLE_ID=$(openstack role create --or-show -f value -c id "${SERVICE_OS_ROLE}");
      fi

      # Manage user role assignment
      openstack role add \
          --user="${USER_ID}" \
          --user-domain="${USER_DOMAIN_ID}" \
          --project-domain="${PROJECT_DOMAIN_ID}" \
          --project="${USER_PROJECT_ID}" \
          "${USER_ROLE_ID}"
    }

    # Manage user service role
    IFS=','
    for SERVICE_OS_ROLE in ${SERVICE_OS_ROLES}; do
      ks_assign_user_role
    done

    # Manage user member role
    : ${MEMBER_OS_ROLE:="member"}
    export USER_ROLE_ID=$(openstack role create --or-show -f value -c id \
        "${MEMBER_OS_ROLE}");
    ks_assign_user_role
  run-tests.sh: |
    #!/bin/bash



    set -ex


    tempest cleanup --init-saved-state

    if [ "true" == "false" ]; then
    trap "tempest cleanup; exit" 1 ERR
    fi

    tempest run --config-file /etc/tempest/tempest.conf -w 4 --smoke



    tempest cleanup
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-tempest
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: general
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-default-tempest-ks-user
  namespace: jUV3apck
rules:
  - apiGroups:
      - ""
      - extensions
      - batch
      - apps
    verbs:
      - get
      - list
    resources:
      - services
      - endpoints
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-default-tempest-run-tests
  namespace: jUV3apck
rules:
  - apiGroups:
      - ""
      - extensions
      - batch
      - apps
    verbs:
      - get
      - list
    resources:
      - services
      - endpoints
      - jobs
      - pods
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-tempest-ks-user
  namespace: jUV3apck
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-default-tempest-ks-user
subjects:
  - kind: ServiceAccount
    name: tempest-ks-user
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-tempest-run-tests
  namespace: jUV3apck
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-default-tempest-run-tests
subjects:
  - kind: ServiceAccount
    name: tempest-run-tests
    namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  name: tempest-ks-user
  annotations:
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  backoffLimit: 1000
  template:
    metadata:
      labels:
        release_group: release-name
        application: tempest
        component: ks-user
      annotations:
        openstackhelm.openstack.org/release_uuid: ""
    spec:
      serviceAccountName: tempest-ks-user
      restartPolicy: OnFailure
      nodeSelector:
        openstack-control-plane: enabled
      initContainers:
        - name: init
          image: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 65534
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INTERFACE_NAME
              value: eth0
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: DEPENDENCY_SERVICE
              value: default:keystone-api
            - name: DEPENDENCY_DAEMONSET
              value: ""
            - name: DEPENDENCY_CONTAINER
              value: ""
            - name: DEPENDENCY_POD_JSON
              value: ""
            - name: DEPENDENCY_CUSTOM_RESOURCE
              value: ""
          command:
            - kubernetes-entrypoint
          volumeMounts: []
      containers:
        - name: ks-user
          image: docker.io/openstackhelm/heat:ocata-ubuntu_xenial
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
            - /tmp/ks-user.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: ks-user-sh
              mountPath: /tmp/ks-user.sh
              subPath: ks-user.sh
              readOnly: true
          env:
            - name: OS_IDENTITY_API_VERSION
              value: "3"
            - name: OS_AUTH_URL
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_AUTH_URL
            - name: OS_REGION_NAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_REGION_NAME
            - name: OS_INTERFACE
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_INTERFACE
            - name: OS_ENDPOINT_TYPE
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_INTERFACE
            - name: OS_PROJECT_DOMAIN_NAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_PROJECT_DOMAIN_NAME
            - name: OS_PROJECT_NAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_PROJECT_NAME
            - name: OS_USER_DOMAIN_NAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_USER_DOMAIN_NAME
            - name: OS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_USERNAME
            - name: OS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_PASSWORD
            - name: OS_DEFAULT_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_DEFAULT_DOMAIN
            - name: SERVICE_OS_SERVICE_NAME
              value: tempest
            - name: SERVICE_OS_REGION_NAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-user
                  key: OS_REGION_NAME
            - name: SERVICE_OS_PROJECT_DOMAIN_NAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-user
                  key: OS_PROJECT_DOMAIN_NAME
            - name: SERVICE_OS_PROJECT_NAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-user
                  key: OS_PROJECT_NAME
            - name: SERVICE_OS_USER_DOMAIN_NAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-user
                  key: OS_USER_DOMAIN_NAME
            - name: SERVICE_OS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-user
                  key: OS_USERNAME
            - name: SERVICE_OS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-user
                  key: OS_PASSWORD
            - name: SERVICE_OS_ROLES
              value: admin
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: ks-user-sh
          configMap:
            name: tempest-bin
            defaultMode: 365
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-run-tests
  annotations:
    openstackhelm.openstack.org/release_uuid: ""
spec:
  backoffLimit: 6
  template:
    metadata:
      labels:
        release_group: release-name
        application: tempest
        component: run-tests
    spec:
      serviceAccountName: tempest-run-tests
      restartPolicy: OnFailure
      nodeSelector:
        openstack-control-plane: enabled
      initContainers:
        - name: init
          image: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 65534
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INTERFACE_NAME
              value: eth0
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: DEPENDENCY_SERVICE
              value: default:keystone-api
            - name: DEPENDENCY_JOBS
              value: tempest-ks-user
            - name: DEPENDENCY_DAEMONSET
              value: ""
            - name: DEPENDENCY_CONTAINER
              value: ""
            - name: DEPENDENCY_POD_JSON
              value: ""
            - name: DEPENDENCY_CUSTOM_RESOURCE
              value: ""
          command:
            - kubernetes-entrypoint
          volumeMounts: []
        - name: tempest-run-tests-init
          image: docker.io/openstackhelm/tempest:latest-ubuntu_xenial
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
          command:
            - chown
            - -R
            - 'root:'
            - /var/lib/tempest/data
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: tempest-reports
              mountPath: /var/lib/tempest/data
      containers:
        - name: tempest-run-tests
          image: docker.io/openstackhelm/tempest:latest-ubuntu_xenial
          imagePullPolicy: IfNotPresent
          command:
            - /tmp/run-tests.sh
          env:
            - name: OS_IDENTITY_API_VERSION
              value: "3"
            - name: OS_AUTH_URL
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_AUTH_URL
            - name: OS_REGION_NAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_REGION_NAME
            - name: OS_INTERFACE
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_INTERFACE
            - name: OS_ENDPOINT_TYPE
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_INTERFACE
            - name: OS_PROJECT_DOMAIN_NAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_PROJECT_DOMAIN_NAME
            - name: OS_PROJECT_NAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_PROJECT_NAME
            - name: OS_USER_DOMAIN_NAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_USER_DOMAIN_NAME
            - name: OS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_USERNAME
            - name: OS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_PASSWORD
            - name: OS_DEFAULT_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: tempest-keystone-admin
                  key: OS_DEFAULT_DOMAIN
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: tempest-bin
              mountPath: /tmp/run-tests.sh
              subPath: run-tests.sh
              readOnly: true
            - name: etctempest
              mountPath: /etc/tempest
            - name: tempest-etc
              mountPath: /etc/tempest/tempest.conf
              subPath: tempest.conf
              readOnly: true
            - name: tempest-etc
              mountPath: /etc/tempest/logging.conf
              subPath: logging.conf
              readOnly: true
            - name: tempest-reports
              mountPath: /var/lib/tempest/data
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: etctempest
          emptyDir: {}
        - name: tempest-etc
          secret:
            secretName: tempest-etc
            defaultMode: 292
        - name: tempest-bin
          configMap:
            name: tempest-bin
            defaultMode: 365
        - name: tempest-reports
          persistentVolumeClaim:
            claimName: pvc-tempest
