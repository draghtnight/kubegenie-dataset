[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-trino",
      "labels": {
        "helm.sh/chart": "trino-2.1.0",
        "app.kubernetes.io/name": "trino",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "378",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "trino-connectors",
      "labels": {
        "helm.sh/chart": "trino-2.1.0",
        "app.kubernetes.io/name": "trino",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "378",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": null
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-trino-coordinator",
      "labels": {
        "helm.sh/chart": "trino-2.1.0",
        "app.kubernetes.io/name": "trino",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "378",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "coordinator"
      }
    },
    "data": {
      "node.properties": "node.environment=production\nnode.data-dir=/data/trino\nplugin.dir=/usr/lib/trino/plugin\n",
      "jvm.config": "-server\n-Xmx24G\n-XX:+UseG1GC\n-XX:G1HeapRegionSize=32M\n-XX:+UseGCOverheadLimit\n-XX:+ExplicitGCInvokesConcurrent\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:+ExitOnOutOfMemoryError\n-Djdk.attach.allowAttachSelf=true\n",
      "config.properties": "coordinator=true\nnode-scheduler.include-coordinator=false\nhttp-server.http.port=8080\nquery.max-memory=3GB\nquery.max-memory-per-node=1GB\nquery.max-total-memory=6GB\ndiscovery.uri=http://localhost:8080\ninternal-communication.shared-secret=some-secret\n",
      "log.properties": "io.trino=INFO\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "schemas-volume-coordinator",
      "labels": {
        "helm.sh/chart": "trino-2.1.0",
        "app.kubernetes.io/name": "trino",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "378",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "coordinator"
      }
    },
    "data": null
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-trino-worker",
      "labels": {
        "helm.sh/chart": "trino-2.1.0",
        "app.kubernetes.io/name": "trino",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "378",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "worker"
      }
    },
    "data": {
      "node.properties": "node.environment=production\nnode.data-dir=/data/trino\nplugin.dir=/usr/lib/trino/plugin\n",
      "jvm.config": "-server\n-Xmx10G\n-XX:+UseG1GC\n-XX:G1HeapRegionSize=32M\n-XX:+UseGCOverheadLimit\n-XX:+ExplicitGCInvokesConcurrent\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:+ExitOnOutOfMemoryError\n-Djdk.attach.allowAttachSelf=true\n",
      "config.properties": "coordinator=false\nhttp-server.http.port=8080\nquery.max-memory=3GB\nquery.max-memory-per-node=1GB\nquery.max-total-memory=6GB\ndiscovery.uri=http://release-name-trino:8080\ninternal-communication.shared-secret=some-secret\n",
      "log.properties": "io.trino=INFO\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-trino-worker-health-check",
      "labels": {
        "helm.sh/chart": "trino-2.1.0",
        "app.kubernetes.io/name": "trino",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "378",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "worker"
      }
    },
    "data": {
      "health_check.sh": "#!/bin/bash\ncurl -H 'X-trino-User: healthCheck' -m 3 --silent release-name-trino:8080/v1/info/state | grep --silent 'ACTIVE'\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "schemas-volume-worker",
      "labels": {
        "helm.sh/chart": "trino-2.1.0",
        "app.kubernetes.io/name": "trino",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "378",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "worker"
      }
    },
    "data": null
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-trino",
      "labels": {
        "helm.sh/chart": "trino-2.1.0",
        "app.kubernetes.io/name": "trino",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "378",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8080,
          "targetPort": "http-coord",
          "protocol": "TCP",
          "name": "http-coord"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "trino",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "coordinator"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-trino-coordinator",
      "labels": {
        "helm.sh/chart": "trino-2.1.0",
        "app.kubernetes.io/name": "trino",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "378",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "coordinator"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "trino",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "coordinator"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "trino",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "coordinator"
          },
          "annotations": {
            "checksum/config": "22de38bac364c9c9ded810b30d9a2a63bfe2d4acec1081e5fa88b5977711bfd0"
          }
        },
        "spec": {
          "securityContext": {
            "runAsUser": 1000,
            "runAsGroup": 1000
          },
          "volumes": [
            {
              "name": "config-volume",
              "configMap": {
                "name": "release-name-trino-coordinator"
              }
            },
            {
              "name": "catalog-volume",
              "secret": {
                "secretName": "trino-connectors"
              }
            },
            {
              "name": "schemas-volume",
              "configMap": {
                "name": "schemas-volume-coordinator"
              }
            }
          ],
          "serviceAccountName": "release-name-trino",
          "imagePullSecrets": [],
          "containers": [
            {
              "name": "trino-coordinator",
              "image": "trinodb/trino:378",
              "imagePullPolicy": "IfNotPresent",
              "volumeMounts": [
                {
                  "mountPath": "/etc/trino/",
                  "name": "config-volume"
                },
                {
                  "mountPath": "/etc/trino/schemas",
                  "name": "schemas-volume"
                },
                {
                  "mountPath": "/etc/trino/catalog",
                  "name": "catalog-volume"
                }
              ],
              "ports": [
                {
                  "name": "http-coord",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/v1/status",
                  "port": "http-coord"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/v1/status",
                  "port": "http-coord"
                }
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-trino-worker",
      "labels": {
        "helm.sh/chart": "trino-2.1.0",
        "app.kubernetes.io/name": "trino",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "378",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "worker"
      }
    },
    "spec": {
      "replicas": 2,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "trino",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "worker"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "trino",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "worker"
          },
          "annotations": {
            "checksum/config": "15bd54939aaad58a34c409a03f7e47338a6ac291e55d5473a67d0c44430a6712"
          }
        },
        "spec": {
          "securityContext": {
            "runAsUser": 1000,
            "runAsGroup": 1000
          },
          "volumes": [
            {
              "name": "config-volume",
              "configMap": {
                "name": "release-name-trino-worker"
              }
            },
            {
              "name": "health-check-volume",
              "configMap": {
                "name": "release-name-trino-worker-health-check",
                "defaultMode": 511
              }
            },
            {
              "name": "catalog-volume",
              "secret": {
                "secretName": "trino-connectors"
              }
            },
            {
              "name": "schemas-volume",
              "configMap": {
                "name": "schemas-volume-worker"
              }
            }
          ],
          "serviceAccountName": "release-name-trino",
          "imagePullSecrets": [],
          "containers": [
            {
              "name": "trino-worker",
              "image": "trinodb/trino:378",
              "imagePullPolicy": "IfNotPresent",
              "volumeMounts": [
                {
                  "mountPath": "/etc/trino",
                  "name": "config-volume"
                },
                {
                  "mountPath": "/etc/trino/schemas",
                  "name": "schemas-volume"
                },
                {
                  "mountPath": "/startup/",
                  "name": "health-check-volume"
                },
                {
                  "mountPath": "/etc/trino/catalog",
                  "name": "catalog-volume"
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/startup/health_check.sh"
                  ]
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 25
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/startup/health_check.sh"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  null,
  null
]