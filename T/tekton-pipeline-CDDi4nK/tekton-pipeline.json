[
  {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": {
      "name": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "spec": {
      "privileged": false,
      "allowPrivilegeEscalation": false,
      "volumes": [
        "emptyDir",
        "configMap",
        "secret"
      ],
      "hostNetwork": false,
      "hostIPC": false,
      "hostPID": false,
      "runAsUser": {
        "rule": "MustRunAsNonRoot"
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      },
      "fsGroup": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "tekton-bot",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "secrets": null
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "tekton-pipelines-controller",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "tekton-pipelines-webhook",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "webhook-certs",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "config-artifact-bucket",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "config-artifact-pvc",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    }
  },
  {
    "apiVersion": "v1",
    "data": {
      "_example": "################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# default-timeout-minutes contains the default number of\n# minutes to use for TaskRun and PipelineRun, if none is specified.\ndefault-timeout-minutes: \"60\"  # 60 minutes\n\n# default-service-account contains the default service account name\n# to use for TaskRun and PipelineRun, if none is specified.\ndefault-service-account: \"default\"\n\n# default-managed-by-label-value contains the default value given to the\n# \"app.kubernetes.io/managed-by\" label applied to all Pods created for\n# TaskRuns. If a user's requested TaskRun specifies another value for this\n# label, the user's request supercedes.\ndefault-managed-by-label-value: \"tekton-pipelines\"\n\n# default-pod-template contains the default pod template to use\n# TaskRun and PipelineRun, if none is specified. If a pod template\n# is specified, the default pod template is ignored.\n# default-pod-template:\n\n# default-cloud-events-sink contains the default CloudEvents sink to be\n# used for TaskRun and PipelineRun, when no sink is specified.\n# Note that right now it is still not possible to set a PipelineRun or\n# TaskRun specific sink, so the default is the only option available.\n# If no sink is specified, no CloudEvent is generated\n# default-cloud-events-sink:\n\n# default-task-run-workspace-binding contains the default workspace\n# configuration provided for any Workspaces that a Task declares\n# but that a TaskRun does not explicitly provide.\n# default-task-run-workspace-binding: |\n#   emptyDir: {}\n"
    },
    "kind": "ConfigMap",
    "metadata": {
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      },
      "name": "config-defaults",
      "namespace": "tekton-pipelines"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "config-leader-election",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "data": {
      "leaseDuration": "15s",
      "renewDeadline": "10s",
      "retryPeriod": "2s"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "config-logging",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "data": {
      "zap-logger-config": "{\n  \"level\": \"info\",\n  \"development\": false,\n  \"sampling\": {\n    \"initial\": 100,\n    \"thereafter\": 100\n  },\n  \"outputPaths\": [\"stdout\"],\n  \"errorOutputPaths\": [\"stderr\"],\n  \"encoding\": \"json\",\n  \"encoderConfig\": {\n    \"timeKey\": \"ts\",\n    \"levelKey\": \"level\",\n    \"nameKey\": \"logger\",\n    \"callerKey\": \"caller\",\n    \"messageKey\": \"msg\",\n    \"stacktraceKey\": \"stacktrace\",\n    \"lineEnding\": \"\",\n    \"levelEncoder\": \"\",\n    \"timeEncoder\": \"iso8601\",\n    \"durationEncoder\": \"\",\n    \"callerEncoder\": \"\"\n  }\n}\n",
      "loglevel.controller": "info",
      "loglevel.webhook": "info"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "config-observability",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "data": {
      "_example": "################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# metrics.backend-destination field specifies the system metrics destination.\n# It supports either prometheus (the default) or stackdriver.\n# Note: Using Stackdriver will incur additional charges.\nmetrics.backend-destination: prometheus\n\n# metrics.stackdriver-project-id field specifies the Stackdriver project ID. This\n# field is optional. When running on GCE, application default credentials will be\n# used and metrics will be sent to the cluster's project if this field is\n# not provided.\nmetrics.stackdriver-project-id: \"<your stackdriver project id>\"\n\n# metrics.allow-stackdriver-custom-metrics indicates whether it is allowed\n# to send metrics to Stackdriver using \"global\" resource type and custom\n# metric type. Setting this flag to \"true\" could cause extra Stackdriver\n# charge.  If metrics.backend-destination is not Stackdriver, this is\n# ignored.\nmetrics.allow-stackdriver-custom-metrics: \"false\"\nmetrics.taskrun.level: \"taskrun\"\nmetrics.taskrun.duration-type: \"histogram\"\nmetrics.pipelinerun.level: \"pipelinerun\"\nmetrics.pipelinerun.duration-type: \"histogram\"\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "config-registry-cert",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    }
  },
  {
    "apiVersion": "v1",
    "data": {
      "disable-affinity-assistant": "false",
      "disable-creds-init": "false",
      "disable-home-env-overwrite": "true",
      "disable-working-directory-overwrite": "true",
      "enable-api-fields": "stable",
      "enable-custom-tasks": "false",
      "enable-tekton-oci-bundles": "false",
      "require-git-ssh-secret-known-hosts": "false",
      "running-in-environment-with-injected-sidecars": "true",
      "scope-when-expressions-to-task": "false"
    },
    "kind": "ConfigMap",
    "metadata": {
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      },
      "name": "feature-flags",
      "namespace": "tekton-pipelines"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "pipelines-info",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "data": {
      "version": "v0.29.0"
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "clustertasks.tekton.dev",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0",
        "version": "v0.29.0"
      }
    },
    "spec": {
      "group": "tekton.dev",
      "preserveUnknownFields": false,
      "versions": [
        {
          "name": "v1alpha1",
          "served": true,
          "storage": false,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "subresources": {
            "status": {}
          }
        },
        {
          "name": "v1beta1",
          "served": true,
          "storage": true,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "subresources": {
            "status": {}
          }
        }
      ],
      "names": {
        "kind": "ClusterTask",
        "plural": "clustertasks",
        "categories": [
          "tekton",
          "tekton-pipelines"
        ]
      },
      "scope": "Cluster",
      "conversion": {
        "strategy": "Webhook",
        "webhook": {
          "conversionReviewVersions": [
            "v1beta1"
          ],
          "clientConfig": {
            "service": {
              "name": "tekton-pipelines-webhook",
              "namespace": "tekton-pipelines"
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "conditions.tekton.dev",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0",
        "version": "v0.29.0"
      }
    },
    "spec": {
      "group": "tekton.dev",
      "versions": [
        {
          "name": "v1alpha1",
          "served": true,
          "storage": true,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "subresources": {
            "status": {}
          }
        }
      ],
      "names": {
        "kind": "Condition",
        "plural": "conditions",
        "categories": [
          "tekton",
          "tekton-pipelines"
        ]
      },
      "scope": "Namespaced"
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "pipelineresources.tekton.dev",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0",
        "version": "v0.29.0"
      }
    },
    "spec": {
      "group": "tekton.dev",
      "versions": [
        {
          "name": "v1alpha1",
          "served": true,
          "storage": true,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "subresources": {
            "status": {}
          }
        }
      ],
      "names": {
        "kind": "PipelineResource",
        "plural": "pipelineresources",
        "categories": [
          "tekton",
          "tekton-pipelines"
        ]
      },
      "scope": "Namespaced"
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "pipelineruns.tekton.dev",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0",
        "version": "v0.29.0"
      }
    },
    "spec": {
      "group": "tekton.dev",
      "preserveUnknownFields": false,
      "versions": [
        {
          "name": "v1alpha1",
          "served": true,
          "storage": false,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "additionalPrinterColumns": [
            {
              "name": "Succeeded",
              "type": "string",
              "jsonPath": ".status.conditions[?(@.type==\"Succeeded\")].status"
            },
            {
              "name": "Reason",
              "type": "string",
              "jsonPath": ".status.conditions[?(@.type==\"Succeeded\")].reason"
            },
            {
              "name": "StartTime",
              "type": "date",
              "jsonPath": ".status.startTime"
            },
            {
              "name": "CompletionTime",
              "type": "date",
              "jsonPath": ".status.completionTime"
            }
          ],
          "subresources": {
            "status": {}
          }
        },
        {
          "name": "v1beta1",
          "served": true,
          "storage": true,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "additionalPrinterColumns": [
            {
              "name": "Succeeded",
              "type": "string",
              "jsonPath": ".status.conditions[?(@.type==\"Succeeded\")].status"
            },
            {
              "name": "Reason",
              "type": "string",
              "jsonPath": ".status.conditions[?(@.type==\"Succeeded\")].reason"
            },
            {
              "name": "StartTime",
              "type": "date",
              "jsonPath": ".status.startTime"
            },
            {
              "name": "CompletionTime",
              "type": "date",
              "jsonPath": ".status.completionTime"
            }
          ],
          "subresources": {
            "status": {}
          }
        }
      ],
      "names": {
        "kind": "PipelineRun",
        "plural": "pipelineruns",
        "categories": [
          "tekton",
          "tekton-pipelines"
        ],
        "shortNames": [
          "pr",
          "prs"
        ]
      },
      "scope": "Namespaced",
      "conversion": {
        "strategy": "Webhook",
        "webhook": {
          "conversionReviewVersions": [
            "v1beta1"
          ],
          "clientConfig": {
            "service": {
              "name": "tekton-pipelines-webhook",
              "namespace": "tekton-pipelines"
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "pipelines.tekton.dev",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0",
        "version": "v0.29.0"
      }
    },
    "spec": {
      "group": "tekton.dev",
      "preserveUnknownFields": false,
      "versions": [
        {
          "name": "v1alpha1",
          "served": true,
          "storage": false,
          "subresources": {
            "status": {}
          },
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          }
        },
        {
          "name": "v1beta1",
          "served": true,
          "storage": true,
          "subresources": {
            "status": {}
          },
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          }
        }
      ],
      "names": {
        "kind": "Pipeline",
        "plural": "pipelines",
        "categories": [
          "tekton",
          "tekton-pipelines"
        ]
      },
      "scope": "Namespaced",
      "conversion": {
        "strategy": "Webhook",
        "webhook": {
          "conversionReviewVersions": [
            "v1beta1"
          ],
          "clientConfig": {
            "service": {
              "name": "tekton-pipelines-webhook",
              "namespace": "tekton-pipelines"
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "runs.tekton.dev",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0",
        "version": "v0.29.0"
      }
    },
    "spec": {
      "group": "tekton.dev",
      "preserveUnknownFields": false,
      "versions": [
        {
          "name": "v1alpha1",
          "served": true,
          "storage": true,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "additionalPrinterColumns": [
            {
              "name": "Succeeded",
              "type": "string",
              "jsonPath": ".status.conditions[?(@.type==\"Succeeded\")].status"
            },
            {
              "name": "Reason",
              "type": "string",
              "jsonPath": ".status.conditions[?(@.type==\"Succeeded\")].reason"
            },
            {
              "name": "StartTime",
              "type": "date",
              "jsonPath": ".status.startTime"
            },
            {
              "name": "CompletionTime",
              "type": "date",
              "jsonPath": ".status.completionTime"
            }
          ],
          "subresources": {
            "status": {}
          }
        }
      ],
      "names": {
        "kind": "Run",
        "plural": "runs",
        "categories": [
          "tekton",
          "tekton-pipelines"
        ]
      },
      "scope": "Namespaced"
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "taskruns.tekton.dev",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0",
        "version": "v0.29.0"
      }
    },
    "spec": {
      "group": "tekton.dev",
      "preserveUnknownFields": false,
      "versions": [
        {
          "name": "v1alpha1",
          "served": true,
          "storage": false,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "additionalPrinterColumns": [
            {
              "name": "Succeeded",
              "type": "string",
              "jsonPath": ".status.conditions[?(@.type==\"Succeeded\")].status"
            },
            {
              "name": "Reason",
              "type": "string",
              "jsonPath": ".status.conditions[?(@.type==\"Succeeded\")].reason"
            },
            {
              "name": "StartTime",
              "type": "date",
              "jsonPath": ".status.startTime"
            },
            {
              "name": "CompletionTime",
              "type": "date",
              "jsonPath": ".status.completionTime"
            }
          ],
          "subresources": {
            "status": {}
          }
        },
        {
          "name": "v1beta1",
          "served": true,
          "storage": true,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "additionalPrinterColumns": [
            {
              "name": "Succeeded",
              "type": "string",
              "jsonPath": ".status.conditions[?(@.type==\"Succeeded\")].status"
            },
            {
              "name": "Reason",
              "type": "string",
              "jsonPath": ".status.conditions[?(@.type==\"Succeeded\")].reason"
            },
            {
              "name": "StartTime",
              "type": "date",
              "jsonPath": ".status.startTime"
            },
            {
              "name": "CompletionTime",
              "type": "date",
              "jsonPath": ".status.completionTime"
            }
          ],
          "subresources": {
            "status": {}
          }
        }
      ],
      "names": {
        "kind": "TaskRun",
        "plural": "taskruns",
        "categories": [
          "tekton",
          "tekton-pipelines"
        ],
        "shortNames": [
          "tr",
          "trs"
        ]
      },
      "scope": "Namespaced",
      "conversion": {
        "strategy": "Webhook",
        "webhook": {
          "conversionReviewVersions": [
            "v1beta1"
          ],
          "clientConfig": {
            "service": {
              "name": "tekton-pipelines-webhook",
              "namespace": "tekton-pipelines"
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "tasks.tekton.dev",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0",
        "version": "v0.29.0"
      }
    },
    "spec": {
      "group": "tekton.dev",
      "preserveUnknownFields": false,
      "versions": [
        {
          "name": "v1alpha1",
          "served": true,
          "storage": false,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "subresources": {
            "status": {}
          }
        },
        {
          "name": "v1beta1",
          "served": true,
          "storage": true,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "subresources": {
            "status": {}
          }
        }
      ],
      "names": {
        "kind": "Task",
        "plural": "tasks",
        "categories": [
          "tekton",
          "tekton-pipelines"
        ]
      },
      "scope": "Namespaced",
      "conversion": {
        "strategy": "Webhook",
        "webhook": {
          "conversionReviewVersions": [
            "v1beta1"
          ],
          "clientConfig": {
            "service": {
              "name": "tekton-pipelines-webhook",
              "namespace": "tekton-pipelines"
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "tekton-aggregate-edit",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "rbac.authorization.k8s.io/aggregate-to-edit": "true",
        "rbac.authorization.k8s.io/aggregate-to-admin": "true"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "tekton.dev"
        ],
        "resources": [
          "tasks",
          "taskruns",
          "pipelines",
          "pipelineruns",
          "pipelineresources",
          "conditions"
        ],
        "verbs": [
          "create",
          "delete",
          "deletecollection",
          "get",
          "list",
          "patch",
          "update",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "tekton-aggregate-view",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "rbac.authorization.k8s.io/aggregate-to-view": "true"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "tekton.dev"
        ],
        "resources": [
          "tasks",
          "taskruns",
          "pipelines",
          "pipelineruns",
          "pipelineresources",
          "conditions"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "tekton-pipelines-controller-cluster-access",
      "labels": {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "tekton.dev"
        ],
        "resources": [
          "tasks",
          "clustertasks",
          "taskruns",
          "pipelines",
          "pipelineruns",
          "pipelineresources",
          "conditions",
          "runs"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "update",
          "delete",
          "patch",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "tekton.dev"
        ],
        "resources": [
          "taskruns/finalizers",
          "pipelineruns/finalizers",
          "runs/finalizers"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "update",
          "delete",
          "patch",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "tekton.dev"
        ],
        "resources": [
          "tasks/status",
          "clustertasks/status",
          "taskruns/status",
          "pipelines/status",
          "pipelineruns/status",
          "pipelineresources/status",
          "runs/status"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "update",
          "delete",
          "patch",
          "watch"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "tekton-pipelines-controller-tenant-access",
      "labels": {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "pods/log",
          "events",
          "persistentvolumeclaims"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "update",
          "delete",
          "patch",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "limitranges",
          "secrets",
          "serviceaccounts"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "statefulsets"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "update",
          "delete",
          "patch",
          "watch"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "tekton-pipelines-webhook-cluster-access",
      "labels": {
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "apiextensions.k8s.io"
        ],
        "resources": [
          "customresourcedefinitions",
          "customresourcedefinitions/status"
        ],
        "verbs": [
          "get",
          "list",
          "update",
          "patch",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "admissionregistration.k8s.io"
        ],
        "resources": [
          "mutatingwebhookconfigurations",
          "validatingwebhookconfigurations"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "admissionregistration.k8s.io"
        ],
        "resources": [
          "mutatingwebhookconfigurations"
        ],
        "resourceNames": [
          "webhook.pipeline.tekton.dev"
        ],
        "verbs": [
          "get",
          "update",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "admissionregistration.k8s.io"
        ],
        "resources": [
          "validatingwebhookconfigurations"
        ],
        "resourceNames": [
          "validation.webhook.pipeline.tekton.dev",
          "config.webhook.pipeline.tekton.dev"
        ],
        "verbs": [
          "get",
          "update",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "resourceNames": [
          "tekton-pipelines"
        ],
        "verbs": [
          "use"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ],
        "verbs": [
          "get"
        ],
        "resourceNames": [
          "tekton-pipelines"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces/finalizers"
        ],
        "verbs": [
          "update"
        ],
        "resourceNames": [
          "tekton-pipelines"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "tekton-pipelines-controller-cluster-access",
      "labels": {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "tekton-pipelines-controller",
        "namespace": "tekton-pipelines"
      }
    ],
    "roleRef": {
      "kind": "ClusterRole",
      "name": "tekton-pipelines-controller-cluster-access",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "tekton-pipelines-controller-tenant-access",
      "labels": {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "tekton-pipelines-controller",
        "namespace": "tekton-pipelines"
      }
    ],
    "roleRef": {
      "kind": "ClusterRole",
      "name": "tekton-pipelines-controller-tenant-access",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "tekton-pipelines-webhook-cluster-access",
      "labels": {
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "tekton-pipelines-webhook",
        "namespace": "tekton-pipelines"
      }
    ],
    "roleRef": {
      "kind": "ClusterRole",
      "name": "tekton-pipelines-webhook-cluster-access",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "tekton-pipelines-controller",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "get"
        ],
        "resourceNames": [
          "config-logging",
          "config-observability",
          "config-artifact-bucket",
          "config-artifact-pvc",
          "feature-flags",
          "config-leader-election",
          "config-registry-cert"
        ]
      },
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "resourceNames": [
          "tekton-pipelines"
        ],
        "verbs": [
          "use"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "tekton-pipelines-info",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "resourceNames": [
          "pipelines-info"
        ],
        "verbs": [
          "get"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "tekton-pipelines-leader-election",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "coordination.k8s.io"
        ],
        "resources": [
          "leases"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "update",
          "delete",
          "patch",
          "watch"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "tekton-pipelines-webhook",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "get"
        ],
        "resourceNames": [
          "config-logging",
          "config-observability",
          "config-leader-election",
          "feature-flags"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "update"
        ],
        "resourceNames": [
          "webhook-certs"
        ]
      },
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "resourceNames": [
          "tekton-pipelines"
        ],
        "verbs": [
          "use"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "tekton-pipelines-controller-leaderelection",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "tekton-pipelines-controller",
        "namespace": "tekton-pipelines"
      }
    ],
    "roleRef": {
      "kind": "Role",
      "name": "tekton-pipelines-leader-election",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "tekton-pipelines-controller",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "tekton-pipelines-controller",
        "namespace": "tekton-pipelines"
      }
    ],
    "roleRef": {
      "kind": "Role",
      "name": "tekton-pipelines-controller",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "tekton-pipelines-info",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "subjects": [
      {
        "kind": "Group",
        "name": "system:authenticated",
        "apiGroup": "rbac.authorization.k8s.io"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "tekton-pipelines-info"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "tekton-pipelines-webhook-leaderelection",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "tekton-pipelines-webhook",
        "namespace": "tekton-pipelines"
      }
    ],
    "roleRef": {
      "kind": "Role",
      "name": "tekton-pipelines-leader-election",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "tekton-pipelines-webhook",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "tekton-pipelines-webhook",
        "namespace": "tekton-pipelines"
      }
    ],
    "roleRef": {
      "kind": "Role",
      "name": "tekton-pipelines-webhook",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/version": "v0.29.0",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0",
        "app": "tekton-pipelines-controller",
        "version": "v0.29.0"
      },
      "name": "tekton-pipelines-controller",
      "namespace": "tekton-pipelines"
    },
    "spec": {
      "ports": [
        {
          "name": "http-metrics",
          "port": 9090,
          "protocol": "TCP",
          "targetPort": 9090
        },
        {
          "name": "probes",
          "port": 8080
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "webhook",
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/version": "v0.29.0",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0",
        "app": "tekton-pipelines-webhook",
        "version": "v0.29.0"
      },
      "name": "tekton-pipelines-webhook",
      "namespace": "tekton-pipelines"
    },
    "spec": {
      "ports": [
        {
          "name": "http-metrics",
          "port": 9090,
          "targetPort": 9090
        },
        {
          "name": "http-profiling",
          "port": 8008,
          "targetPort": 8008
        },
        {
          "name": "https-webhook",
          "port": 443,
          "targetPort": 8443
        },
        {
          "name": "probes",
          "port": 8080
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "webhook",
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/name": "controller",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "app.kubernetes.io/version": "v0.29.0",
        "pipeline.tekton.dev/release": "v0.29.0",
        "version": "v0.29.0"
      },
      "name": "tekton-pipelines-controller",
      "namespace": "tekton-pipelines"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/instance": "default",
          "app.kubernetes.io/name": "controller",
          "app.kubernetes.io/part-of": "tekton-pipelines"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "fake": "value"
          },
          "labels": {
            "app": "tekton-pipelines-controller",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "default",
            "app.kubernetes.io/name": "controller",
            "app.kubernetes.io/part-of": "tekton-pipelines",
            "app.kubernetes.io/version": "v0.29.0",
            "pipeline.tekton.dev/release": "v0.29.0",
            "version": "v0.29.0"
          }
        },
        "spec": {
          "affinity": {
            "nodeAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": {
                "nodeSelectorTerms": [
                  {
                    "matchExpressions": [
                      {
                        "key": "kubernetes.io/os",
                        "operator": "NotIn",
                        "values": [
                          "windows"
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          },
          "containers": [
            {
              "args": [
                "-kubeconfig-writer-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/kubeconfigwriter:v0.29.0@sha256:6d058f2203b9ab66f538cb586c7dc3b7cc31ae958a4135dd99e51799f24b06c9",
                "-git-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.29.0@sha256:c0b0ed1cd81090ce8eecf60b936e9345089d9dfdb6ebdd2fd7b4a0341ef4f2b9",
                "-entrypoint-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/entrypoint:v0.29.0@sha256:66958b78766741c25e31954f47bc9fd53eaa28263506b262bf2cc6df04f18561",
                "-nop-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/nop:v0.29.0@sha256:6a037d5ba27d9c6be32a9038bfe676fb67d2e4145b4f53e9c61fb3e69f06e816",
                "-imagedigest-exporter-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/imagedigestexporter:v0.29.0@sha256:e38dd0d32253fce5aaf1e501c0bc71facc3720564b7e97055921cc5390d612e0",
                "-pr-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/pullrequest-init:v0.29.0@sha256:d28202fb8b33a1d4c05f261ef8dcbcdcf3b469887d4dad256ce91f73c917420e",
                "-gsutil-image",
                "gcr.io/google.com/cloudsdktool/cloud-sdk@sha256:27b2c22bf259d9bc1a291e99c63791ba0c27a04d2db0a43241ba0f1f20f4067f",
                "-shell-image",
                "gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4",
                "-shell-image-win",
                "mcr.microsoft.com/powershell:nanoserver@sha256:b6d5ff841b78bdf2dfed7550000fd4f3437385b8fa686ec0f010be24777654d6"
              ],
              "env": [
                {
                  "name": "SYSTEM_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "AWS_ACCESS_KEY_ID",
                  "value": "foobarbaz"
                },
                {
                  "name": "AWS_SECRET_ACCESS_KEY",
                  "value": "foobarbaz"
                },
                {
                  "name": "AWS_DEFAULT_REGION",
                  "value": "foobarbaz"
                },
                {
                  "name": "CONFIG_DEFAULTS_NAME",
                  "value": "config-defaults"
                },
                {
                  "name": "CONFIG_LOGGING_NAME",
                  "value": "config-logging"
                },
                {
                  "name": "CONFIG_OBSERVABILITY_NAME",
                  "value": "config-observability"
                },
                {
                  "name": "CONFIG_ARTIFACT_BUCKET_NAME",
                  "value": "config-artifact-bucket"
                },
                {
                  "name": "CONFIG_ARTIFACT_PVC_NAME",
                  "value": "config-artifact-pvc"
                },
                {
                  "name": "CONFIG_FEATURE_FLAGS_NAME",
                  "value": "feature-flags"
                },
                {
                  "name": "CONFIG_LEADERELECTION_NAME",
                  "value": "config-leader-election"
                },
                {
                  "name": "SSL_CERT_FILE",
                  "value": "/etc/config-registry-cert/cert"
                },
                {
                  "name": "SSL_CERT_DIR",
                  "value": "/etc/ssl/certs"
                },
                {
                  "name": "METRICS_DOMAIN",
                  "value": "tekton.dev/pipeline"
                }
              ],
              "envFrom": [
                {
                  "secretRef": {
                    "name": "tekton-env",
                    "optional": true
                  }
                }
              ],
              "image": "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller:v0.29.0@sha256:72f79471f06d096cc53e51385017c9f0f7edbc87379bf415f99d4bd11cf7bc2b",
              "livenessProbe": {
                "httpGet": {
                  "path": "/health",
                  "port": "probes",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "name": "tekton-pipelines-controller",
              "ports": [
                {
                  "containerPort": 8080,
                  "name": "probes"
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/readiness",
                  "port": "probes",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": [
                    "all"
                  ]
                },
                "runAsGroup": 65532,
                "runAsUser": 65532,
                "readOnlyRootFilesystem": true
              },
              "volumeMounts": [
                {
                  "mountPath": "/etc/config-logging",
                  "name": "config-logging"
                },
                {
                  "mountPath": "/etc/config-registry-cert",
                  "name": "config-registry-cert"
                }
              ]
            }
          ],
          "serviceAccountName": "tekton-pipelines-controller",
          "volumes": [
            {
              "configMap": {
                "name": "config-logging"
              },
              "name": "config-logging"
            },
            {
              "configMap": {
                "name": "config-registry-cert"
              },
              "name": "config-registry-cert"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/name": "webhook",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "app.kubernetes.io/version": "v0.29.0",
        "pipeline.tekton.dev/release": "v0.29.0",
        "version": "v0.29.0"
      },
      "name": "tekton-pipelines-webhook",
      "namespace": "tekton-pipelines"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/component": "webhook",
          "app.kubernetes.io/instance": "default",
          "app.kubernetes.io/name": "webhook",
          "app.kubernetes.io/part-of": "tekton-pipelines"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "tekton-pipelines-webhook",
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "default",
            "app.kubernetes.io/name": "webhook",
            "app.kubernetes.io/part-of": "tekton-pipelines",
            "app.kubernetes.io/version": "v0.29.0",
            "pipeline.tekton.dev/release": "v0.29.0",
            "version": "v0.29.0"
          }
        },
        "spec": {
          "affinity": {
            "nodeAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": {
                "nodeSelectorTerms": [
                  {
                    "matchExpressions": [
                      {
                        "key": "kubernetes.io/os",
                        "operator": "NotIn",
                        "values": [
                          "windows"
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/component": "webhook",
                        "app.kubernetes.io/instance": "default",
                        "app.kubernetes.io/name": "webhook",
                        "app.kubernetes.io/part-of": "tekton-pipelines"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 100
                }
              ]
            }
          },
          "containers": [
            {
              "env": [
                {
                  "name": "SYSTEM_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "CONFIG_LOGGING_NAME",
                  "value": "config-logging"
                },
                {
                  "name": "CONFIG_OBSERVABILITY_NAME",
                  "value": "config-observability"
                },
                {
                  "name": "CONFIG_LEADERELECTION_NAME",
                  "value": "config-leader-election"
                },
                {
                  "name": "CONFIG_FEATURE_FLAGS_NAME",
                  "value": "feature-flags"
                },
                {
                  "name": "WEBHOOK_SERVICE_NAME",
                  "value": "tekton-pipelines-webhook"
                },
                {
                  "name": "WEBHOOK_SECRET_NAME",
                  "value": "webhook-certs"
                },
                {
                  "name": "METRICS_DOMAIN",
                  "value": "tekton.dev/pipeline"
                }
              ],
              "envFrom": [
                {
                  "secretRef": {
                    "name": "tekton-env",
                    "optional": true
                  }
                }
              ],
              "image": "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/webhook:v0.29.0@sha256:46d5b90a7f4e9996351ad893a26bcbd27216676ad4d5316088ce351fb2c2c3dd",
              "livenessProbe": {
                "httpGet": {
                  "path": "/health",
                  "port": "probes",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "name": "webhook",
              "ports": [
                {
                  "containerPort": 9090,
                  "name": "metrics"
                },
                {
                  "containerPort": 8008,
                  "name": "profiling"
                },
                {
                  "containerPort": 8443,
                  "name": "https-webhook"
                },
                {
                  "containerPort": 8080,
                  "name": "probes"
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/readiness",
                  "port": "probes",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "500Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "100Mi"
                }
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": [
                    "all"
                  ]
                },
                "runAsGroup": 65532,
                "runAsUser": 65532,
                "readOnlyRootFilesystem": true
              }
            }
          ],
          "serviceAccountName": "tekton-pipelines-webhook"
        }
      }
    }
  },
  {
    "apiVersion": "autoscaling/v2beta1",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "name": "tekton-pipelines-webhook",
      "namespace": "tekton-pipelines",
      "labels": {
        "app.kubernetes.io/name": "webhook",
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/version": "v0.29.0",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0",
        "version": "v0.29.0"
      }
    },
    "spec": {
      "minReplicas": 1,
      "maxReplicas": 5,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "tekton-pipelines-webhook"
      },
      "metrics": [
        {
          "type": "Resource",
          "resource": {
            "name": "cpu",
            "targetAverageUtilization": 100
          }
        }
      ]
    }
  },
  {
    "apiVersion": "admissionregistration.k8s.io/v1",
    "kind": "MutatingWebhookConfiguration",
    "metadata": {
      "name": "webhook.pipeline.tekton.dev",
      "labels": {
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0"
      }
    },
    "webhooks": [
      {
        "admissionReviewVersions": [
          "v1"
        ],
        "clientConfig": {
          "service": {
            "name": "tekton-pipelines-webhook",
            "namespace": "tekton-pipelines"
          }
        },
        "failurePolicy": "Fail",
        "sideEffects": "None",
        "name": "webhook.pipeline.tekton.dev"
      }
    ]
  },
  {
    "apiVersion": "admissionregistration.k8s.io/v1",
    "kind": "ValidatingWebhookConfiguration",
    "metadata": {
      "name": "config.webhook.pipeline.tekton.dev",
      "labels": {
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0"
      }
    },
    "webhooks": [
      {
        "admissionReviewVersions": [
          "v1"
        ],
        "clientConfig": {
          "service": {
            "name": "tekton-pipelines-webhook",
            "namespace": "tekton-pipelines"
          }
        },
        "failurePolicy": "Fail",
        "sideEffects": "None",
        "name": "config.webhook.pipeline.tekton.dev",
        "objectSelector": {
          "matchLabels": {
            "app.kubernetes.io/part-of": "tekton-pipelines"
          }
        }
      }
    ]
  },
  {
    "apiVersion": "admissionregistration.k8s.io/v1",
    "kind": "ValidatingWebhookConfiguration",
    "metadata": {
      "name": "validation.webhook.pipeline.tekton.dev",
      "labels": {
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "default",
        "app.kubernetes.io/part-of": "tekton-pipelines",
        "pipeline.tekton.dev/release": "v0.29.0"
      }
    },
    "webhooks": [
      {
        "admissionReviewVersions": [
          "v1"
        ],
        "clientConfig": {
          "service": {
            "name": "tekton-pipelines-webhook",
            "namespace": "tekton-pipelines"
          }
        },
        "failurePolicy": "Fail",
        "sideEffects": "None",
        "name": "validation.webhook.pipeline.tekton.dev"
      }
    ]
  }
]