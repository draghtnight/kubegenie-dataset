apiVersion: v1
kind: Namespace
metadata:
  name: project
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default
  namespace: project
  labels:
    helm.sh/chart: tenant-namespace-0.6.10
    app.kubernetes.io/name: tenant-namespace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.6.10
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.244.0.0/16
              - 10.96.0.0/12
        - namespaceSelector:
            matchLabels:
              name: default
          podSelector: {}
        - namespaceSelector:
            matchLabels:
              name: kube-system
          podSelector: {}
        - podSelector: {}
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.244.0.0/16
              - 10.96.0.0/12
        - namespaceSelector:
            matchLabels:
              name: default
          podSelector: {}
        - namespaceSelector:
            matchLabels:
              name: kube-system
          podSelector: {}
        - podSelector: {}
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: release-name
  namespace: project
  labels:
    helm.sh/chart: tenant-namespace-0.6.10
    app.kubernetes.io/name: tenant-namespace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.6.10
    app.kubernetes.io/managed-by: Helm
spec:
  hard:
    pods: 10
    requests.cpu: 5
    requests.memory: 4Gi
    limits.cpu: 10
    limits.memory: 8Gi
---
apiVersion: v1
kind: LimitRange
metadata:
  name: release-name
  namespace: project
  labels:
    helm.sh/chart: tenant-namespace-0.6.10
    app.kubernetes.io/name: tenant-namespace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.6.10
    app.kubernetes.io/managed-by: Helm
spec:
  limits:
    - default:
        cpu: 1000m
        memory: 2Gi
      defaultRequest:
        cpu: 100m
        memory: 256Mi
      type: Container
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: ingress-3.34.0
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.47.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress
  namespace: vix632TeU8SzY
automountServiceAccountToken: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ci
  namespace: project
  labels:
    chart: magicnamespace-0.5.4
    release: release-name
    heritage: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: ingress-3.34.0
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.47.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-controller
  namespace: vix632TeU8SzY
data: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: ingress-3.34.0
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.47.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress
  namespace: vix632TeU8SzY
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - ingress-controller-leader-public
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-tenant-namespace
  namespace: project
  labels:
    helm.sh/chart: tenant-namespace-0.6.10
    app.kubernetes.io/name: tenant-namespace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.6.10
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: ingress-3.34.0
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.47.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress
  namespace: vix632TeU8SzY
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ingress
subjects:
  - kind: ServiceAccount
    name: release-name-ingress
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ci-admin
  namespace: project
  labels:
    chart: magicnamespace-0.5.4
    release: release-name
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
  - kind: ServiceAccount
    name: ci
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-tenant-namespace
  namespace: project
  labels:
    helm.sh/chart: tenant-namespace-0.6.10
    app.kubernetes.io/name: tenant-namespace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.6.10
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-tenant-namespace
subjects:
  - kind: ServiceAccount
    name: release-name-ingress
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rbac-admin-group
  namespace: project
  labels:
    helm.sh/chart: tenant-namespace-0.6.10
    app.kubernetes.io/name: tenant-namespace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.6.10
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
  - kind: Group
    name: foo.project.admin
---
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: ingress-3.34.0
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.47.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-controller-metrics
  namespace: vix632TeU8SzY
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 10254
      targetPort: metrics
  selector:
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    helm.sh/chart: ingress-3.34.0
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.47.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-controller
  namespace: vix632TeU8SzY
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: ingress-3.34.0
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.47.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-controller
  namespace: vix632TeU8SzY
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller
  replicas: 1
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: k8s.gcr.io/ingress-nginx/controller:v0.47.0@sha256:a1e4efc107be0bb78f32eaec37bef17d7a0c81bec8066cdf2572508d21351d0b
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
          args:
            - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/release-name-ingress-controller
            - --election-id=ingress-controller-leader
            - --ingress-class=public
            - --configmap=$(POD_NAMESPACE)/release-name-ingress-controller
            - --watch-namespace=$(POD_NAMESPACE)
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            runAsUser: 11856
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: metrics
              containerPort: 10254
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
            seccompProfile:
              type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: release-name-ingress
      terminationGracePeriodSeconds: 300
