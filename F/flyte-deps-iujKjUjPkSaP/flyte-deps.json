[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "name": "release-name-kubernetes-dashboard"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "name": "release-name-kubernetes-dashboard-certs"
    },
    "type": "Opaque"
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "name": "kubernetes-dashboard-csrf"
    },
    "type": "Opaque"
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "name": "kubernetes-dashboard-key-holder"
    },
    "type": "Opaque"
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "name": "kubernetes-dashboard-settings"
    },
    "data": null
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-kubernetes-dashboard-metrics",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "metrics.k8s.io"
        ],
        "resources": [
          "pods",
          "nodes"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-kubernetes-dashboard-readonly",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "endpoints",
          "persistentvolumeclaims",
          "pods",
          "replicationcontrollers",
          "replicationcontrollers/scale",
          "serviceaccounts",
          "services",
          "nodes",
          "persistentvolumeclaims",
          "persistentvolumes"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "bindings",
          "events",
          "limitranges",
          "namespaces/status",
          "pods/log",
          "pods/status",
          "replicationcontrollers/status",
          "resourcequotas",
          "resourcequotas/status"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "daemonsets",
          "deployments",
          "deployments/scale",
          "replicasets",
          "replicasets/scale",
          "statefulsets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "autoscaling"
        ],
        "resources": [
          "horizontalpodautoscalers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "cronjobs",
          "jobs"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "daemonsets",
          "deployments",
          "deployments/scale",
          "ingresses",
          "networkpolicies",
          "replicasets",
          "replicasets/scale",
          "replicationcontrollers/scale"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "poddisruptionbudgets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "networkpolicies"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "storage.k8s.io"
        ],
        "resources": [
          "storageclasses",
          "volumeattachments"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "rbac.authorization.k8s.io"
        ],
        "resources": [
          "clusterrolebindings",
          "clusterroles",
          "roles",
          "rolebindings"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-kubernetes-dashboard-metrics",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-kubernetes-dashboard-metrics"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-kubernetes-dashboard",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-kubernetes-dashboard-readonly",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-kubernetes-dashboard-readonly"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-kubernetes-dashboard",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-kubernetes-dashboard",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "resourceNames": [
          "kubernetes-dashboard-key-holder",
          "kubernetes-dashboard-certs",
          "kubernetes-dashboard-csrf"
        ],
        "verbs": [
          "get",
          "update",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "resourceNames": [
          "kubernetes-dashboard-settings"
        ],
        "verbs": [
          "get",
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services"
        ],
        "resourceNames": [
          "heapster",
          "dashboard-metrics-scraper"
        ],
        "verbs": [
          "proxy"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services/proxy"
        ],
        "resourceNames": [
          "heapster",
          "http:heapster:",
          "https:heapster:",
          "dashboard-metrics-scraper",
          "http:dashboard-metrics-scraper"
        ],
        "verbs": [
          "get"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-kubernetes-dashboard",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-kubernetes-dashboard"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-kubernetes-dashboard",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-kubernetes-dashboard",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "kubernetes-dashboard",
        "kubernetes.io/cluster-service": "true"
      }
    },
    "spec": {
      "type": "NodePort",
      "ports": [
        {
          "port": 30082,
          "targetPort": "http",
          "name": "http",
          "nodePort": 30082
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "kubernetes-dashboard"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "minio",
      "namespace": "iujKjUjPkSaP",
      "labels": {
        "app.kubernetes.io/name": "minio",
        "app.kubernetes.io/instance": "release-name",
        "helm.sh/chart": "flyte-deps-v1.0.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "NodePort",
      "ports": [
        {
          "name": "minio",
          "nodePort": 30084,
          "port": 9000,
          "protocol": "TCP",
          "targetPort": "minio"
        },
        {
          "name": "minio-console",
          "nodePort": 30088,
          "port": 9001,
          "protocol": "TCP",
          "targetPort": "minio-console"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "minio",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "postgres",
      "namespace": "iujKjUjPkSaP",
      "labels": {
        "app.kubernetes.io/name": "postgres",
        "app.kubernetes.io/instance": "release-name",
        "helm.sh/chart": "flyte-deps-v1.0.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "NodePort",
      "ports": [
        {
          "name": "postgres",
          "port": 5432,
          "nodePort": 30089,
          "protocol": "TCP",
          "targetPort": "postgres"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgres",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "redoc",
      "namespace": "iujKjUjPkSaP",
      "labels": {
        "app.kubernetes.io/name": "redoc",
        "app.kubernetes.io/instance": "release-name",
        "helm.sh/chart": "flyte-deps-v1.0.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "redoc",
          "protocol": "TCP",
          "port": 87,
          "targetPort": 8087
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "redoc",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "flyte-pod-webhook",
      "namespace": "iujKjUjPkSaP",
      "annotations": {
        "projectcontour.io/upstream-protocol.h2c": "grpc"
      }
    },
    "spec": {
      "type": "ExternalName",
      "externalName": "host.docker.internal"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-kubernetes-dashboard",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-dashboard",
        "helm.sh/chart": "kubernetes-dashboard-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "kubernetes-dashboard"
      }
    },
    "spec": {
      "replicas": 1,
      "strategy": {
        "rollingUpdate": {
          "maxSurge": 0,
          "maxUnavailable": 1
        },
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "kubernetes-dashboard",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "kubernetes-dashboard"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
          },
          "labels": {
            "app.kubernetes.io/name": "kubernetes-dashboard",
            "helm.sh/chart": "kubernetes-dashboard-4.0.2",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "2.2.0",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "kubernetes-dashboard"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-kubernetes-dashboard",
          "containers": [
            {
              "name": "kubernetes-dashboard",
              "image": "kubernetesui/dashboard:v2.2.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--namespace=default",
                "--metrics-provider=none",
                "--enable-skip-login",
                "--enable-insecure-login",
                "--disable-settings-authorizer"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 9090,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "name": "kubernetes-dashboard-certs",
                  "mountPath": "/certs"
                },
                {
                  "mountPath": "/tmp",
                  "name": "tmp-volume"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "scheme": "HTTP",
                  "path": "/",
                  "port": 9090
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 30
              },
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "200Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "200Mi"
                }
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsGroup": 2001,
                "runAsUser": 11952,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "kubernetes-dashboard-certs",
              "secret": {
                "secretName": "release-name-kubernetes-dashboard-certs"
              }
            },
            {
              "name": "tmp-volume",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "minio",
      "namespace": "iujKjUjPkSaP",
      "labels": {
        "app.kubernetes.io/name": "minio",
        "app.kubernetes.io/instance": "release-name",
        "helm.sh/chart": "flyte-deps-v1.0.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "minio",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "minio",
            "app.kubernetes.io/instance": "release-name",
            "helm.sh/chart": "flyte-deps-v1.0.2",
            "app.kubernetes.io/managed-by": "Helm"
          }
        },
        "spec": {
          "containers": [
            {
              "image": "ecr.flyte.org/bitnami/minio:2021.10.13-debian-10-r0",
              "imagePullPolicy": "IfNotPresent",
              "name": "minio",
              "env": [
                {
                  "name": "MINIO_ACCESS_KEY",
                  "value": "minio"
                },
                {
                  "name": "MINIO_SECRET_KEY",
                  "value": "miniostorage"
                },
                {
                  "name": "MINIO_DEFAULT_BUCKETS",
                  "value": "my-s3-bucket"
                }
              ],
              "ports": [
                {
                  "containerPort": 9000,
                  "name": "minio"
                },
                {
                  "containerPort": 9001,
                  "name": "minio-console"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "200m",
                  "memory": "512Mi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "128Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "minio-storage",
                  "mountPath": "/data"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "minio-storage",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "postgres",
      "namespace": "iujKjUjPkSaP",
      "labels": {
        "app.kubernetes.io/name": "postgres",
        "app.kubernetes.io/instance": "release-name",
        "helm.sh/chart": "flyte-deps-v1.0.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "postgres",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "postgres",
            "app.kubernetes.io/instance": "release-name",
            "helm.sh/chart": "flyte-deps-v1.0.2",
            "app.kubernetes.io/managed-by": "Helm"
          }
        },
        "spec": {
          "containers": [
            {
              "image": "ecr.flyte.org/ubuntu/postgres:13-21.04_beta",
              "imagePullPolicy": "IfNotPresent",
              "name": "postgres",
              "env": [
                {
                  "name": "POSTGRES_HOST_AUTH_METHOD",
                  "value": "trust"
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "flyteadmin"
                }
              ],
              "ports": [
                {
                  "containerPort": 5432,
                  "name": "postgres"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "512Mi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "128Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "postgres-storage",
                  "mountPath": "/var/lib/postgresql/data"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "postgres-storage",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  null,
  null,
  null,
  null
]