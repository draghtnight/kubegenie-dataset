apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-frontend
  labels:
    helm.sh/chart: frontend-2.6.5
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  app.json: |2-
    {}
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-frontend
  labels:
    helm.sh/chart: frontend-2.6.5
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    helm.sh/chart: frontend-2.6.5
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-frontend
  labels:
    helm.sh/chart: frontend-2.6.5
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
      labels:
        helm.sh/chart: frontend-2.6.5
        app.kubernetes.io/name: frontend
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: nginx
          image: signalen/frontend:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 1
            periodSeconds: 10
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /app.json
              subPath: app.json
      volumes:
        - name: config
          configMap:
            name: release-name-frontend
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: release-name-frontend
  labels:
    helm.sh/chart: frontend-2.6.5
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  tls:
    - hosts:
        - frontend.signals.local
      secretName: frontend-tls
  rules:
    - host: frontend.signals.local
      http:
        paths:
          - path: /
            backend:
              serviceName: release-name-frontend
              servicePort: http
