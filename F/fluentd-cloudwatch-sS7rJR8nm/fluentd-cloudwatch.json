[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-fluentd-cloudwatch",
      "labels": {
        "app": "fluentd-cloudwatch",
        "chart": "fluentd-cloudwatch-0.9.0",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "type": "Opaque",
    "data": null
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-fluentd-cloudwatch",
      "labels": {
        "app": "fluentd-cloudwatch",
        "chart": "fluentd-cloudwatch-0.9.0",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "fluent.conf": "<match fluent.**>\n  type null\n</match>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  path /var/log/containers/*.log\n  pos_file /var/log/fluentd-containers.log.pos\n  time_format %Y-%m-%dT%H:%M:%S.%NZ\n  tag kubernetes.*\n  format json\n  read_from_head true\n</source>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  format /^(?<time>[^ ]* [^ ,]*)[^\\[]*\\[[^\\]]*\\]\\[(?<severity>[^ \\]]*) *\\] (?<message>.*)$/\n  time_format %Y-%m-%d %H:%M:%S\n  path /var/log/salt/minion\n  pos_file /var/log/fluentd-salt.pos\n  tag salt\n</source>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  format syslog\n  path /var/log/startupscript.log\n  pos_file /var/log/fluentd-startupscript.log.pos\n  tag startupscript\n</source>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  format /^time=\"(?<time>[^)]*)\" level=(?<severity>[^ ]*) msg=\"(?<message>[^\"]*)\"( err=\"(?<error>[^\"]*)\")?( statusCode=($<status_code>\\d+))?/\n  path /var/log/docker.log\n  pos_file /var/log/fluentd-docker.log.pos\n  tag docker\n</source>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  format none\n  path /var/log/etcd.log\n  pos_file /var/log/fluentd-etcd.log.pos\n  tag etcd\n</source>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  format kubernetes\n  multiline_flush_interval 5s\n  path /var/log/kubelet.log\n  pos_file /var/log/fluentd-kubelet.log.pos\n  tag kubelet\n</source>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  format kubernetes\n  multiline_flush_interval 5s\n  path /var/log/kube-proxy.log\n  pos_file /var/log/fluentd-kube-proxy.log.pos\n  tag kube-proxy\n</source>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  format kubernetes\n  multiline_flush_interval 5s\n  path /var/log/kube-apiserver.log\n  pos_file /var/log/fluentd-kube-apiserver.log.pos\n  tag kube-apiserver\n</source>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  format kubernetes\n  multiline_flush_interval 5s\n  path /var/log/kube-controller-manager.log\n  pos_file /var/log/fluentd-kube-controller-manager.log.pos\n  tag kube-controller-manager\n</source>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  format kubernetes\n  multiline_flush_interval 5s\n  path /var/log/kube-scheduler.log\n  pos_file /var/log/fluentd-kube-scheduler.log.pos\n  tag kube-scheduler\n</source>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  format kubernetes\n  multiline_flush_interval 5s\n  path /var/log/rescheduler.log\n  pos_file /var/log/fluentd-rescheduler.log.pos\n  tag rescheduler\n</source>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  format kubernetes\n  multiline_flush_interval 5s\n  path /var/log/glbc.log\n  pos_file /var/log/fluentd-glbc.log.pos\n  tag glbc\n</source>\n\n<source>\n  type tail\n  enable_stat_watcher false\n  format kubernetes\n  multiline_flush_interval 5s\n  path /var/log/cluster-autoscaler.log\n  pos_file /var/log/fluentd-cluster-autoscaler.log.pos\n  tag cluster-autoscaler\n</source>\n\n<filter kubernetes.**>\n  type kubernetes_metadata\n</filter>\n\n<match **>\n  type cloudwatch_logs\n  log_group_name \"#{ENV['LOG_GROUP_NAME']}\"\n  auto_create_stream true\n  use_tag_as_stream true\n</match>\n"
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "release-name-fluentd-cloudwatch",
      "labels": {
        "app": "fluentd-cloudwatch",
        "chart": "fluentd-cloudwatch-0.9.0",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "app": "fluentd-cloudwatch",
            "release": "release-name"
          },
          "annotations": {
            "checksum/config": "c86b1504ae1f586f8fc05644fc40d68fe2f7c8b82e7f65646c62979763ba5799"
          }
        },
        "spec": {
          "securityContext": {},
          "serviceAccountName": "default",
          "initContainers": [
            {
              "name": "copy-fluentd-config",
              "image": "busybox",
              "command": [
                "sh",
                "-c",
                "cp /config-volume/* /etc/fluentd"
              ],
              "volumeMounts": [
                {
                  "name": "config-volume",
                  "mountPath": "/config-volume"
                },
                {
                  "name": "config",
                  "mountPath": "/etc/fluentd"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "release-name-fluentd-cloudwatch",
              "image": "fluent/fluentd-kubernetes-daemonset:v1.3.3-debian-cloudwatch-1.0",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "AWS_REGION",
                  "value": "us-east-1"
                },
                {
                  "name": "LOG_GROUP_NAME",
                  "value": "kubernetes"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "varlog",
                  "mountPath": "/var/log"
                },
                {
                  "name": "varlibdockercontainers",
                  "mountPath": "/var/lib/docker/containers",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "mountPath": "/fluentd/etc"
                }
              ]
            }
          ],
          "terminationGracePeriodSeconds": 30,
          "volumes": [
            {
              "name": "varlog",
              "hostPath": {
                "path": "/var/log"
              }
            },
            {
              "name": "varlibdockercontainers",
              "hostPath": {
                "path": "/var/lib/docker/containers"
              }
            },
            {
              "name": "config",
              "emptyDir": {}
            },
            {
              "name": "config-volume",
              "configMap": {
                "name": "release-name-fluentd-cloudwatch"
              }
            }
          ]
        }
      },
      "updateStrategy": {
        "type": "OnDelete"
      }
    }
  }
]