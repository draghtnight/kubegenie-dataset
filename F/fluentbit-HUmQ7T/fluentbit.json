[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name",
      "namespace": "HUmQ7T"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name",
      "labels": {
        "app": "fluentbit",
        "chart": "fluentbit-0.1.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "agent"
      }
    },
    "data": {
      "fluent-bit.conf": "[SERVICE]\n    Flush         1\n    Log_Level     info\n    Daemon        off\n    Parsers_File  parsers.conf\n    HTTP_Server   On\n    HTTP_Listen   0.0.0.0\n    HTTP_Port     2020\n\n@INCLUDE inputs.conf\n@INCLUDE filters.conf\n\n\n\n#[OUTPUT]\n#    Name    stdout\n#    Match   kern.*\n#\n#[OUTPUT]\n#    Name    stdout\n#    Match   msg.*\n#\n#[OUTPUT]\n#    Name    stdout\n#    Match   systemd.*\n",
      "filters.conf": "# FLuentbit configuration to remove health checks and ping endpoints from the logs to prevent extra saturation\n[FILTER]\n    Name         grep\n    Match        *\n    Exclude      path /^\\/health[A-Za-z\\/]*/\n\n[FILTER]\n    Name         grep\n    Match        *\n    Exclude      msg /^.*\\/health[A-Za-z\\/]*/\n\n[FILTER]\n    Name         grep\n    Match        *\n    Exclude      log /^.*\\/health[A-Za-z\\/]*/\n\n[FILTER]\n    Name         grep\n    Match        *\n    Exclude      path /^\\/ping[A-Za-z\\/]*/\n\n[FILTER]\n    Name         grep\n    Match        *\n    Exclude      msg /^.*\\/ping[A-Za-z\\/]*/\n\n[FILTER]\n    Name         grep\n    Match        *\n    Exclude      path /^.*\\/ping[A-Za-z\\/]*/\n\n[FILTER]\n    Name         grep\n    Match        *\n    Exclude      log /^.*\\/ping[A-Za-z\\/]*/\n\n\n# exlcude empty message rows\n[FILTER]\n    Name              grep\n    Match             kube.*\n    Exclude           log ^\\s*$\n\n# enrich container data with kubernetes\n[FILTER]\n    Name                kubernetes\n    Match               kube.*\n    # Kube_URL            https://kubernetes.default.svc.cluster.local:443\n    Merge_Log           On\n    Merge_Log_Trim      On\n    Keep_Log            Off\n    K8S-Logging.Exclude On\n    K8S-Logging.Parser  On\n\n[FILTER]\n    Name        modify\n    Match       kube.*\n    Condition   Key_Does_Not_Exist  short_message\n    Condition   Key_Exists          log\n    Rename      log                 short_message\n\n# ${HOSTNAME} returns the host name.\n# But Fluentbit runs in a container. So, it is not meaningful.\n# Instead, copy the host name from the Kubernetes object.\n[FILTER]\n    Name            nest\n    Match           *\n    Operation       lift\n    Nested_under    kubernetes\n\n# change hostname to nodename via env variable\n[FILTER]\n    Name    record_modifier\n    Match   *\n    Record  host    ${K8S_HOSTNAME}\n\n# add hostname if missing entirely\n[FILTER]\n    Name        modify\n    Condition   Key_Does_Not_Exist  host\n    Match       *\n    Add         host                ${K8S_HOSTNAME}\n\n# systemd: rename MESSAGE -> short_message\n[FILTER]\n    Name        modify\n    Match       *\n    Condition   Key_Does_Not_Exist  short_message\n    Condition   Key_Exists          MESSAGE\n    Rename      MESSAGE             short_message\n\n# syslog-rfc5424: rename log -> short_message\n[FILTER]\n    Name        modify\n    Match       *\n    Condition   Key_Does_Not_Exist  short_message\n    Condition   Key_Exists          log\n    Rename      log             short_message\n\n# catch-all with missing short_message field\n[FILTER]\n    Name        modify\n    Match       *\n    Condition   Key_Does_Not_Exist  short_message\n    Set         short_message       EMPTY\n",
      "inputs.conf": "[INPUT]\n    Name              tail\n    Tag               kube.*\n    Path              /var/log/containers/*.log\n    Parser            cri\n    DB                /var/log/flb_kube.db\n    Mem_Buf_Limit     5MB\n    Skip_Long_Lines   On\n    Refresh_Interval  10\n\n[INPUT]\n    Name              systemd\n    Tag               systemd.*\n    Path              /var/log/journal\n    DB                /var/log/flb_systemd.db\n    Strip_Underscores On\n\n[INPUT]\n    Name              Tail\n    Tag               msg.*\n    Path              /var/log/messages\n    Path_Key          log_file\n    DB                /var/log/flb_messages.db\n    Parser            syslog-rfc5424\n\n[INPUT]\n    Name              Tail\n    Tag               kern.*\n    Path              /var/log/kern.log\n    Path_Key          log_file\n    DB                /var/log/flb_kern.db\n    Parser            syslog-rfc5424\n\n[INPUT]\n    Name              Tail\n    Path              /var/log/auth.log\n    Path_Key          log_file\n    DB                /var/log/flb_auth.db\n    Parser            syslog-rfc5424\n",
      "parsers.conf": "[PARSER]\n    Name        cri\n    Format      regex\n    Regex       ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$\n    Time_Key    time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L%z\n\n[PARSER]\n    Name   json\n    Format json\n    Time_Key time\n    Time_Format %d/%b/%Y:%H:%M:%S %z\n\n[PARSER]\n    Name        docker\n    Format      json\n    Time_Key    time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L\n    # Command      |  Decoder | Field | Optional Action\n    # =============|==================|=================\n    Decode_Field_As   escaped    log\n\n[PARSER]\n    Name        syslog-rfc5424\n    Format      regex\n    Regex       ^\\<(?<pri>[0-9]{1,5})\\>1 (?<time>[^ ]+) (?<host>[^ ]+) (?<ident>[^ ]+) (?<pid>[-0-9]+) (?<msgid>[^ ]+) (?<extradata>(\\[(.*)\\]|-)) (?<message>.+)$\n    Time_Key    time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L\n\n[PARSER]\n    Name        syslog-rfc3164-local\n    Format      regex\n    Regex       ^\\<(?<pri>[0-9]+)\\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<ident>[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?<pid>[0-9]+)\\])?(?:[^\\:]*\\:)? *(?<message>.*)$\n    Time_Key    time\n    Time_Format %b %d %H:%M:%S\n\n[PARSER]\n    Name        syslog-rfc3164\n    Format      regex\n    Regex       /^\\<(?<pri>[0-9]+)\\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?<pid>[0-9]+)\\])?(?:[^\\:]*\\:)? *(?<message>.*)$/\n    Time_Key    time\n    Time_Format %b %d %H:%M:%S\n    Time_Format %Y-%m-%dT%H:%M:%S.%L\n\n[PARSER]\n    Name    mongodb\n    Format  regex\n    Regex   ^(?<time>[^ ]*)\\s+(?<severity>\\w)\\s+(?<context>[^ ]+)\\s+\\[(?<connection>[^\\]]+)]\\s+(?<message>.*)$\n    Time_Format %Y-%m-%dT%H:%M:%S.%L\n    Time_Keep   On\n    Time_Key time\n\n[PARSER]\n    # http://rubular.com/r/tjUt3Awgg4\n    Name cri\n    Format regex\n    Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$\n    Time_Key    time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L%z\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-read"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces",
          "pods",
          "nodes",
          "nodes/proxy"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-read"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-read"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name",
        "namespace": "default"
      }
    ]
  },
  {
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name",
      "labels": {
        "app": "fluentbit",
        "chart": "fluentbit-0.1.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "agent"
      }
    },
    "spec": {
      "selector": {
        "app": "fluentbit",
        "release": "release-name",
        "component": "agent"
      },
      "ports": [
        {
          "name": "metrics",
          "port": 2020,
          "targetPort": 2020
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "release-name",
      "labels": {
        "app": "fluentbit",
        "chart": "fluentbit-0.1.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "agent",
        "kubernetes.io/cluster-service": "true"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "fluentbit",
          "chart": "fluentbit-0.1.0",
          "release": "release-name",
          "heritage": "Helm",
          "component": "agent"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "fluentbit",
            "chart": "fluentbit-0.1.0",
            "release": "release-name",
            "heritage": "Helm",
            "component": "agent",
            "kubernetes.io/cluster-service": "true",
            "revision": "1"
          },
          "annotations": {
            "prometheus.io/scrape": "true",
            "prometheus.io/port": "2020",
            "prometheus.io/path": "/api/v1/metrics/prometheus"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "agent",
              "image": "fluent/fluent-bit:1.8",
              "imagePullPolicy": "Always",
              "env": [
                {
                  "name": "K8S_HOSTNAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "spec.nodeName"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "containerPort": 2020
                }
              ],
              "volumeMounts": [
                {
                  "name": "var-log",
                  "mountPath": "/var/log"
                },
                {
                  "name": "var-lib-docker-containers",
                  "mountPath": "/var/lib/docker/containers",
                  "readOnly": true
                },
                {
                  "name": "fluent-bit-config",
                  "mountPath": "/fluent-bit/etc/"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "100m",
                  "memory": "200Mi"
                },
                "requests": {
                  "cpu": "50m",
                  "memory": "100Mi"
                }
              }
            }
          ],
          "hostNetwork": true,
          "dnsPolicy": "ClusterFirstWithHostNet",
          "terminationGracePeriodSeconds": 10,
          "volumes": [
            {
              "name": "var-log",
              "hostPath": {
                "path": "/var/log"
              }
            },
            {
              "name": "var-lib-docker-containers",
              "hostPath": {
                "path": "/var/lib/docker/containers"
              }
            },
            {
              "name": "fluent-bit-config",
              "configMap": {
                "name": "release-name"
              }
            }
          ],
          "serviceAccountName": "release-name",
          "tolerations": [
            {
              "operator": "Exists"
            }
          ]
        }
      }
    }
  },
  {
    "kind": "ServiceMonitor",
    "apiVersion": "monitoring.coreos.com/v1",
    "metadata": {
      "name": "release-name",
      "labels": {
        "app": "fluentbit",
        "chart": "fluentbit-0.1.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "agent",
        "monitor-group": "k8s"
      }
    },
    "spec": {
      "jobLabel": "release-name-metrics",
      "selector": {
        "matchLabels": {
          "app": "fluentbit",
          "release": "release-name",
          "component": "agent"
        }
      },
      "namespaceSelector": {
        "matchNames": [
          "default"
        ]
      },
      "endpoints": [
        {
          "port": "metrics",
          "path": "/api/v1/metrics/prometheus"
        }
      ]
    }
  }
]