[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-frigate-config",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "frigate",
        "app.kubernetes.io/version": "idia",
        "helm-revision": "1",
        "helm.sh/chart": "frigate-2.0.3"
      }
    },
    "data": {
      "config.yml": "mqtt:\n  # Required: host name\n  host: mosquitto.ix-mosquitto.svc.cluster.local\n  # Optional: port (default: shown below)\n  port: 1883\n  # Optional: topic prefix (default: shown below)\n  # NOTE: must be unique if you are running multiple instances\n  topic_prefix: frigate\n  # Optional: client id (default: shown below)\n  # NOTE: must be unique if you are running multiple instances\n  client_id: frigate\n  # Optional: tls_ca_certs for enabling TLS using self-signed certs (default: None)\n  # tls_ca_certs: /path/to/ca.crt\n  # Optional: tls_client_cert and tls_client key in order to use self-signed client\n  # certificates (default: None)\n  # NOTE: certificate must not be password-protected\n  #       do not set user and password when using a client certificate\n  # tls_client_cert: /path/to/client.crt\n  # tls_client_key: /path/to/client.key\n  # Optional: tls_insecure (true/false) for enabling TLS verification of\n  # the server hostname in the server certificate (default: None)\n  # tls_insecure: false\n  # Optional: interval in seconds for publishing stats (default: shown below)\n  stats_interval: 60\n\n# Optional: Detectors configuration. Defaults to a single CPU detector\ndetectors:\n# Required: name of the detector\n\n\n# Optional: Database configuration\n# database:\n  # The path to store the SQLite DB (default: shown below)\n  # path: /media/frigate/frigate.db\n\n# Optional: model modifications\n# model:\n  # Optional: path to the model (default: automatic based on detector)\n  # path: /edgetpu_model.tflite\n  # Optional: path to the labelmap (default: shown below)\n  # labelmap_path: /labelmap.txt\n  # Required: Object detection model input width (default: shown below)\n  # width: 320\n  # Required: Object detection model input height (default: shown below)\n  # height: 240\n  # Optional: Label name modifications. These are merged into the standard labelmap.\n  # labelmap:\n    # 2: vehicle\n\n# Optional: logger verbosity settings\nlogger:\n  # Optional: Default log verbosity (default: shown below)\n  default: info\n  # Optional: Component specific logger overrides\n  # logs:\n    # frigate.event: info\n\n# Optional: set environment variables\n# environment_vars:\n  # EXAMPLE_VAR: value\n\n# Optional: birdseye configuration\nbirdseye:\n  # Optional: Enable birdseye view (default: shown below)\n  enabled: true\n  # Optional: Width of the output resolution (default: shown below)\n  width: 1280\n  # Optional: Height of the output resolution (default: shown below)\n  height: 720\n  # Optional: Encoding quality of the mpeg1 feed (default: shown below)\n  # 1 is the highest quality, and 31 is the lowest. Lower quality feeds utilize less CPU resources.\n  quality: 8\n  # Optional: Mode of the view. Available options are: objects, motion, and continuous\n  #   objects - cameras are included if they have had a tracked object within the last 30 seconds\n  #   motion - cameras are included if motion was detected in the last 30 seconds\n  #   continuous - all cameras are included always\n  mode: motion\n\n# Optional: ffmpeg configuration\nffmpeg:\n  # Optional: global ffmpeg args (default: shown below) warning instead of debug\n  global_args: -hide_banner -loglevel debug\n  # Optional: global hwaccel args (default: shown below)\n  # NOTE: See hardware acceleration docs for your specific device\n  # hwaccel_args: []\n  # Optional: global input args (default: shown below)\n  # input_args: -avoid_negative_ts make_zero -fflags +genpts+discardcorrupt -rtsp_transport tcp -stimeout 5000000 -use_wallclock_as_timestamps 1\n  # Optional: global output args\n  # output_args:\n    # Optional: output args for detect streams (default: shown below)\n    # detect: -f rawvideo -pix_fmt yuv420p\n    # Optional: output args for record streams (default: shown below)\n    # record: -f segment -segment_time 10 -segment_format mp4 -reset_timestamps 1 -strftime 1 -c copy -an\n    # Optional: output args for rtmp streams (default: shown below)\n    # rtmp: -c copy -f flv\n\n# Optional: Detect configuration\n# NOTE: Can be overridden at the camera level\ndetect:\n  # Optional: width of the frame for the input with the detect role (default: shown below)\n  width: 1280\n  # Optional: height of the frame for the input with the detect role (default: shown below)\n  height: 720\n  # Optional: desired fps for your camera for the input with the detect role (default: shown below)\n  # NOTE: Recommended value of 5. Ideally, try and reduce your FPS on the camera.\n  fps: 5\n  # Optional: enables detection for the camera (default: True)\n  # This value can be set via MQTT and will be updated in startup based on retained value\n  enabled: True\n  # Optional: Number of frames without a detection before frigate considers an object to be gone. (default: 5x the frame rate)\n  # max_disappeared: 25\n  # Optional: Frequency for running detection on stationary objects (default: 10x the frame rate)\n  # stationary_interval: 50\n\n# Optional: Object configuration\n# NOTE: Can be overridden at the camera level\nobjects:\n  # Optional: list of objects to track from labelmap.txt (default: shown below)\n  track:\n    - person\n    - car\n    - motorcyle\n    - cat\n    - dog\n  # Optional: mask to prevent all object types from being detected in certain areas (default: no mask)\n  # Checks based on the bottom center of the bounding box of the object.\n  # NOTE: This mask is COMBINED with the object type specific mask below\n  # mask: 0,0,1000,0,1000,200,0,200\n  # Optional: filters to reduce false positives for specific object types\n  filters:\n    person:\n      # Optional: minimum width*height of the bounding box for the detected object (default: 0)\n      min_area: 5000\n      # Optional: maximum width*height of the bounding box for the detected object (default: 24000000)\n      max_area: 100000\n      # Optional: minimum score for the object to initiate tracking (default: shown below)\n      # min_score: 0.5\n      # Optional: minimum decimal percentage for tracked object's computed score to be considered a true positive (default: shown below)\n      # threshold: 0.7\n      # Optional: mask to prevent this object type from being detected in certain areas (default: no mask)\n      # Checks based on the bottom center of the bounding box of the object\n      # mask: 0,0,1000,0,1000,200,0,200\n\n# Optional: Motion configuration\n# NOTE: Can be overridden at the camera level\nmotion:\n  # Optional: The threshold passed to cv2.threshold to determine if a pixel is different enough to be counted as motion. (default: shown below)\n  # Increasing this value will make motion detection less sensitive and decreasing it will make motion detection more sensitive.\n  # The value should be between 1 and 255.\n  # threshold: 25\n  # Optional: Minimum size in pixels in the resized motion image that counts as motion (default: 30)\n  # Increasing this value will prevent smaller areas of motion from being detected. Decreasing will\n  # make motion detection more sensitive to smaller moving objects.\n  # As a rule of thumb:\n  #  - 15 - high sensitivity\n  #  - 30 - medium sensitivity\n  #  - 50 - low sensitivity\n  contour_area: 30\n  # Optional: Alpha value passed to cv2.accumulateWeighted when averaging the motion delta across multiple frames (default: shown below)\n  # Higher values mean the current frame impacts the delta a lot, and a single raindrop may register as motion.\n  # Too low and a fast moving person wont be detected as motion.\n  # delta_alpha: 0.2\n  # Optional: Alpha value passed to cv2.accumulateWeighted when averaging frames to determine the background (default: shown below)\n  # Higher values mean the current frame impacts the average a lot, and a new object will be averaged into the background faster.\n  # Low values will cause things like moving shadows to be detected as motion for longer.\n  # https://www.geeksforgeeks.org/background-subtraction-in-an-image-using-concept-of-running-average/\n  # frame_alpha: 0.2\n  # Optional: Height of the resized motion frame  (default: 50)\n  # This operates as an efficient blur alternative. Higher values will result in more granular motion detection at the expense\n  # of higher CPU usage. Lower values result in less CPU, but small changes may not register as motion.\n  # frame_height: 50\n  # Optional: motion mask\n  # NOTE: see docs for more detailed info on creating masks\n  # mask: 0,900,1080,900,1080,1920,0,1920\n\n# Optional: Record configuration\n# NOTE: Can be overridden at the camera level\nrecord:\n  # Optional: Enable recording (default: shown below)\n  enabled: False\n  # Optional: Retention settings for recording\n  retain:\n    # Optional: Number of days to retain recordings regardless of events (default: shown below)\n    # NOTE: This should be set to 0 and retention should be defined in events section below\n    #       if you only want to retain recordings of events.\n    days: 7\n    # Optional: Mode for retention. Available options are: all, motion, and active_objects\n    #   all - save all recording segments regardless of activity\n    #   motion - save all recordings segments with any detected motion\n    #   active_objects - save all recording segments with active/moving objects\n    # NOTE: this mode only applies when the days setting above is greater than 0\n    mode: motion\n  # Optional: Event recording settings\n  events:\n    # Optional: Maximum length of time to retain video during long events. (default: shown below)\n    # NOTE: If an object is being tracked for longer than this amount of time, the retained recordings\n    #       will be the last x seconds of the event unless retain->days under record is > 0.\n    max_seconds: 300\n    # Optional: Number of seconds before the event to include (default: shown below)\n    pre_capture: 5\n    # Optional: Number of seconds after the event to include (default: shown below)\n    post_capture: 5\n    # Optional: Objects to save recordings for. (default: all tracked objects)\n    # objects:\n      # - person\n    # Optional: Restrict recordings to objects that entered any of the listed zones (default: no required zones)\n    # required_zones: []\n    # Optional: Retention settings for recordings of events\n    retain:\n      # Required: Default retention days (default: shown below)\n      default: 14\n      # Optional: Mode for retention. (default: shown below)\n      #   all - save all recording segments for events regardless of activity\n      #   motion - save all recordings segments for events with any detected motion\n      #   active_objects - save all recording segments for event with active/moving objects\n      #\n      # NOTE: If the retain mode for the camera is more restrictive than the mode configured\n      #       here, the segments will already be gone by the time this mode is applied.\n      #       For example, if the camera retain mode is \"motion\", the segments without motion are\n      #       never stored, so setting the mode to \"all\" here won't bring them back.\n      mode: active_objects\n      # Optional: Per object retention days\n      # objects:\n        # person: 15\n\n# Optional: Configuration for the jpg snapshots written to the clips directory for each event\n# NOTE: Can be overridden at the camera level\nsnapshots:\n  # Optional: Enable writing jpg snapshot to /media/frigate/clips (default: shown below)\n  # This value can be set via MQTT and will be updated in startup based on retained value\n  enabled: False\n  # Optional: print a timestamp on the snapshots (default: shown below)\n  # timestamp: False\n  # Optional: draw bounding box on the snapshots (default: shown below)\n  # bounding_box: False\n  # Optional: crop the snapshot (default: shown below)\n  # crop: False\n  # Optional: height to resize the snapshot to (default: original size)\n  # height: 175\n  # Optional: Restrict snapshots to objects that entered any of the listed zones (default: no required zones)\n  required_zones: []\n  # Optional: Camera override for retention settings (default: global values)\n  retain:\n    # Required: Default retention days (default: shown below)\n    default: 10\n    # Optional: Per object retention days\n    objects:\n      person: 15\n\n# Optional: RTMP configuration\n# NOTE: Can be overridden at the camera level\nrtmp:\n  # Optional: Enable the RTMP stream (default: True)\n  enabled: True\n\n# Optional: Live stream configuration for WebUI\n# NOTE: Can be overridden at the camera level\nlive:\n  # Optional: Set the height of the live stream. (default: 720)\n  # This must be less than or equal to the height of the detect stream. Lower resolutions\n  # reduce bandwidth required for viewing the live stream. Width is computed to match known aspect ratio.\n  # height: 720\n  # Optional: Set the encode quality of the live stream (default: shown below)\n  # 1 is the highest quality, and 31 is the lowest. Lower quality feeds utilize less CPU resources.\n  quality: 8\n\n# Optional: in-feed timestamp style configuration\n# NOTE: Can be overridden at the camera level\n# timestamp_style:\n  # Optional: Position of the timestamp (default: shown below)\n  #           \"tl\" (top left), \"tr\" (top right), \"bl\" (bottom left), \"br\" (bottom right)\n  # position: \"tl\"\n  # Optional: Format specifier conform to the Python package \"datetime\" (default: shown below)\n  #           Additional Examples:\n  #             german: \"%d.%m.%Y %H:%M:%S\"\n  # format: \"%m/%d/%Y %H:%M:%S\"\n  # Optional: Color of font\n  # color:\n    # All Required when color is specified (default: shown below)\n    # red: 255\n    # green: 255\n    # blue: 255\n  # Optional: Line thickness of font (default: shown below)\n  # thickness: 2\n  # Optional: Effect of lettering (default: shown below)\n  #           None (No effect),\n  #           \"solid\" (solid background in inverse color of font)\n  #           \"shadow\" (shadow for font)\n  effect: solid\n\n# Required\ncameras:\n  # Required: name of the camera\n  camera1:\n    objects:\n      # Optional: list of objects to track from labelmap.txt (default: shown below)\n      track:\n          - person\n          - car\n          - motorcyle\n          - cat\n          - dog\n    detect:\n      width: 1280\n      height: 720\n    # Required: ffmpeg settings for the camera\n    ffmpeg:\n      # Required: A list of input streams for the camera. See documentation for more information.\n      inputs:\n        - path: rtsp://username:password@highres.url\n          roles:\n            - record\n        - path: rtsp://username:password@lowres.url\n          roles:\n            - detect\n            - rtmp\n    record:\n      enabled: true\n    # Optional: timeout for highest scoring image before allowing it\n    # to be replaced by a newer image. (default: shown below)\n    best_image_timeout: 60\n    snapshots:\n      enabled: true\n\n    # Optional: zones for this camera\n    # zones:\n      # Required: name of the zone\n      # NOTE: This must be different than any camera names, but can match with another zone on another\n      #       camera.\n      # front_steps:\n        # Required: List of x,y coordinates to define the polygon of the zone.\n        # NOTE: Coordinates can be generated at https://www.image-map.net/\n        # coordinates: 545,1077,747,939,788,805\n        # Optional: List of objects that can trigger this zone (default: all tracked objects)\n        # objects:\n          # - person\n        # Optional: Zone level object filters.\n        # NOTE: The global and camera filters are applied upstream.\n        # filters:\n          # person:\n            # min_area: 5000\n            # max_area: 100000\n            # threshold: 0.7\n\n    # Optional: Configuration for the jpg snapshots published via MQTT\n    # mqtt:\n      # Optional: Enable publishing snapshot via mqtt for camera (default: shown below)\n      # NOTE: Only applies to publishing image data to MQTT via 'frigate/<camera_name>/<object_name>/snapshot'.\n      # All other messages will still be published.\n      # enabled: true\n      # Optional: print a timestamp on the snapshots (default: shown below)\n      # timestamp: True\n      # Optional: draw bounding box on the snapshots (default: shown below)\n      # bounding_box: True\n      # Optional: crop the snapshot (default: shown below)\n      # crop: True\n      # Optional: height to resize the snapshot to (default: shown below)\n      # height: 270\n      # Optional: jpeg encode quality (default: shown below)\n      # quality: 70\n      # Optional: Restrict mqtt messages to objects that entered any of the listed zones (default: no required zones)\n      # required_zones: []\n"
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-frigate-media",
      "labels": {
        "helm.sh/chart": "frigate-2.0.3",
        "app.kubernetes.io/name": "frigate",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "idia",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "999Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-frigate",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "frigate",
        "app.kubernetes.io/version": "idia",
        "helm-revision": "1",
        "helm.sh/chart": "frigate-2.0.3"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ipFamilyPolicy": "SingleStack",
      "ports": [
        {
          "port": 5000,
          "targetPort": 5000,
          "protocol": "TCP",
          "name": "main"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "frigate",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-frigate-rtmp",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "frigate",
        "app.kubernetes.io/version": "idia",
        "helm-revision": "1",
        "helm.sh/chart": "frigate-2.0.3"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 1935,
          "targetPort": 1935,
          "protocol": "TCP",
          "name": "rtmp"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "frigate",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-frigate",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "frigate",
        "app.kubernetes.io/version": "idia",
        "helm-revision": "1",
        "helm.sh/chart": "frigate-2.0.3"
      }
    },
    "spec": {
      "revisionHistoryLimit": 3,
      "replicas": 1,
      "strategy": {
        "type": "Recreate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "frigate",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": null,
          "labels": {
            "app.kubernetes.io/name": "frigate",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "securityContext": {
            "fsGroup": 568,
            "fsGroupChangePolicy": "OnRootMismatch",
            "runAsGroup": 0,
            "runAsUser": 0,
            "supplementalGroups": [
              568
            ]
          },
          "dnsPolicy": "ClusterFirst",
          "dnsConfig": {
            "options": [
              {
                "name": "ndots",
                "value": "1"
              }
            ]
          },
          "enableServiceLinks": false,
          "terminationGracePeriodSeconds": 10,
          "initContainers": [
            {
              "name": "autopermissions",
              "image": "ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583",
              "securityContext": {
                "runAsUser": 10392,
                "privileged": true,
                "allowPrivilegeEscalation": false
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              },
              "command": [
                "/bin/sh",
                "-c",
                "/bin/bash <<'EOF'\necho \"Automatically correcting permissions...\"\necho \"increasing inotify limits...\"\n( sysctl -w fs.inotify.max_user_watches=524288 || echo \"error setting inotify\") && ( sysctl -w fs.inotify.max_user_instances=512 || echo \"error setting inotify\")\nEOF\n"
              ],
              "volumeMounts": null
            }
          ],
          "containers": [
            {
              "name": "release-name-frigate",
              "image": "blakeblackshear/frigate:0.10.0-beta6-amd64nvidia",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": false,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "env": [
                {
                  "name": "PUID",
                  "value": "568"
                },
                {
                  "name": "USER_ID",
                  "value": "568"
                },
                {
                  "name": "UID",
                  "value": "568"
                },
                {
                  "name": "UMASK",
                  "value": "2"
                },
                {
                  "name": "UMASK_SET",
                  "value": "2"
                },
                {
                  "name": "PGID",
                  "value": "568"
                },
                {
                  "name": "GROUP_ID",
                  "value": "568"
                },
                {
                  "name": "GID",
                  "value": "568"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "void"
                },
                {
                  "name": "TZ",
                  "value": "UTC"
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "main",
                  "containerPort": 5000,
                  "protocol": "TCP"
                },
                {
                  "name": "rtmp",
                  "containerPort": 1935,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/tmp/cache",
                  "name": "cache"
                },
                {
                  "mountPath": "/config/config.yml",
                  "name": "frigate-config",
                  "subPath": "config.yml"
                },
                {
                  "mountPath": "/media",
                  "name": "media"
                },
                {
                  "mountPath": "/shared",
                  "name": "shared"
                },
                {
                  "mountPath": "/dev/shm",
                  "name": "shm"
                },
                {
                  "mountPath": "/tmp",
                  "name": "temp"
                },
                {
                  "mountPath": "/var/logs",
                  "name": "varlogs"
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 5000
                },
                "initialDelaySeconds": 10,
                "failureThreshold": 5,
                "timeoutSeconds": 5,
                "periodSeconds": 10
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 5000
                },
                "initialDelaySeconds": 10,
                "failureThreshold": 5,
                "timeoutSeconds": 5,
                "periodSeconds": 10
              },
              "startupProbe": {
                "tcpSocket": {
                  "port": 5000
                },
                "initialDelaySeconds": 10,
                "failureThreshold": 60,
                "timeoutSeconds": 2,
                "periodSeconds": 5
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "cache",
              "emptyDir": {}
            },
            {
              "name": "frigate-config",
              "configMap": {
                "name": "release-name-frigate-config"
              }
            },
            {
              "name": "media",
              "persistentVolumeClaim": {
                "claimName": "release-name-frigate-media"
              }
            },
            {
              "name": "shared",
              "emptyDir": {}
            },
            {
              "name": "shm",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "temp",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "varlogs",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  }
]