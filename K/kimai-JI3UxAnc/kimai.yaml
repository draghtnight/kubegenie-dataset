apiVersion: v1
kind: Secret
metadata:
  name: release-name-mariadb-credentials
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 10.7.4
    helm-revision: "1"
    helm.sh/chart: mariadb-3.0.5
stringData:
  mariadb-password: testpass
  mariadb-root-password: testroot
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    helm.sh/chart: kimai-3.0.1
    app.kubernetes.io/name: kimai
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: "1.20"
    app.kubernetes.io/managed-by: Helm
  name: mariadbcreds
data:
  mariadb-password: RkdyNjdpaXZRU0NPODNVVWlQSzZFWjEzUTVGTWhSZEs0TFdPS09uMHFQNTR3VU00Sk0=
  mariadb-root-password: d1RvTkpWRnBLNkdxblJFc0I0bXZtajIzYk00N0NOSUxvQWJVVDZTTUg5ZUdqWmYxd0g=
  url: c3FsOi8va2ltYWk6RkdyNjdpaXZRU0NPODNVVWlQSzZFWjEzUTVGTWhSZEs0TFdPS09uMHFQNTR3VU00Sk1AcmVsZWFzZS1uYW1lLW1hcmlhZGI6MzMwNi9raW1haQ==
  urlnossl: c3FsOi8va2ltYWk6RkdyNjdpaXZRU0NPODNVVWlQSzZFWjEzUTVGTWhSZEs0TFdPS09uMHFQNTR3VU00Sk1AcmVsZWFzZS1uYW1lLW1hcmlhZGI6MzMwNi9raW1haT9zc2xtb2RlPWRpc2FibGU=
  plainporthost: cmVsZWFzZS1uYW1lLW1hcmlhZGI6MzMwNg==
  plainhost: cmVsZWFzZS1uYW1lLW1hcmlhZGI=
  jdbc: amRiYzpzcWxzZXJ2ZXI6Ly9yZWxlYXNlLW5hbWUtbWFyaWFkYjozMzA2L2tpbWFp
  jdbc-mysql: amRiYzpteXNxbDovL3JlbGVhc2UtbmFtZS1tYXJpYWRiOjMzMDYva2ltYWk=
  jdbc-mariadb: amRiYzptYXJpYWRiOi8vcmVsZWFzZS1uYW1lLW1hcmlhZGI6MzMwNi9raW1haQ==
type: Opaque
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: kimai-secrets
data:
  APP_SECRET: VWRMRm1panNmSnF5U0NYa0ZDVFh2SVpsNU50TGx2dmo=
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kimai
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kimai
    app.kubernetes.io/version: "1.20"
    helm-revision: "1"
    helm.sh/chart: kimai-3.0.1
stringData:
  ADMINMAIL: admin@mysecretdomain.com
  ADMINPASS: MvvTfjagiaqDprGNVA
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-kimai-data
  labels:
    helm.sh/chart: kimai-3.0.1
    app.kubernetes.io/name: kimai
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: "1.20"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 999Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-kimai-plugins
  labels:
    helm.sh/chart: kimai-3.0.1
    app.kubernetes.io/name: kimai
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: "1.20"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 999Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-mariadb
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 10.7.4
    helm-revision: "1"
    helm.sh/chart: mariadb-3.0.5
  annotations: null
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: main
  selector:
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-kimai
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kimai
    app.kubernetes.io/version: "1.20"
    helm-revision: "1"
    helm.sh/chart: kimai-3.0.1
  annotations: null
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  ports:
    - port: 10198
      targetPort: 8001
      protocol: TCP
      name: main
  selector:
    app.kubernetes.io/name: kimai
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kimai
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kimai
    app.kubernetes.io/version: "1.20"
    helm-revision: "1"
    helm.sh/chart: kimai-3.0.1
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: kimai
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: kimai
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 33
        runAsUser: 33
        supplementalGroups:
          - 568
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      enableServiceLinks: false
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: autopermissions
          image: ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583
          securityContext:
            runAsUser: 11324
            privileged: true
            allowPrivilegeEscalation: false
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          command:
            - /bin/sh
            - -c
            - |
              /bin/bash <<'EOF'
              echo "Automatically correcting permissions..."
              echo "increasing inotify limits..."
              ( sysctl -w fs.inotify.max_user_watches=524288 || echo "error setting inotify") && ( sysctl -w fs.inotify.max_user_instances=512 || echo "error setting inotify")
              EOF
          volumeMounts: null
        - name: mariadb-init
          image: ghcr.io/truecharts/mariadb:v10.7.4@sha256:dd2042a79c38b92ec14b4c55b97c615c1c5f437f4f5b3e796a8fa7aa1c0a0865
          env:
            - name: MARIADB_HOST
              valueFrom:
                secretKeyRef:
                  name: mariadbcreds
                  key: plainhost
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadbcreds
                  key: mariadb-root-password
          securityContext:
            capabilities:
              drop:
                - ALL
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          command:
            - bash
            - -ec
          args:
            - |
              until
                mysqladmin -uroot -h"${MARIADB_HOST}" -p"${MARIADB_ROOT_PASSWORD}" ping \
                && mysqladmin -uroot -h"${MARIADB_HOST}" -p"${MARIADB_ROOT_PASSWORD}" status;
                do sleep 2;
              done
          imagePullPolicy: IfNotPresent
      containers:
        - name: release-name-kimai
          image: tccr.io/truecharts/kimai:v1.20@sha256:f13b70aa746b3d8a754bcf1f78dbdfde95b94f443ee17b9e3474ab0ebf6068e3
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: PUID
              value: "568"
            - name: USER_ID
              value: "568"
            - name: UID
              value: "568"
            - name: UMASK
              value: "2"
            - name: UMASK_SET
              value: "2"
            - name: PGID
              value: "568"
            - name: GROUP_ID
              value: "568"
            - name: GID
              value: "568"
            - name: S6_READ_ONLY_ROOT
              value: "1"
            - name: NVIDIA_VISIBLE_DEVICES
              value: void
            - name: TZ
              value: UTC
            - name: APP_ENV
              value: prod
            - name: APP_SECRET
              valueFrom:
                secretKeyRef:
                  key: APP_SECRET
                  name: kimai-secrets
            - name: DB_BASE
              value: kimai
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: plainhost
                  name: mariadbcreds
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  key: mariadb-password
                  name: mariadbcreds
            - name: DB_PORT
              value: "3306"
            - name: DB_TYPE
              value: mysql
            - name: DB_USER
              value: kimai
            - name: TRUSTED_HOSTS
              value: 127.0.0.1,localhost
            - name: trust_hosts
              value: 127.0.0.1
          envFrom:
            - secretRef:
                name: release-name-kimai
          ports:
            - name: main
              containerPort: 8001
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/kimai/var/data
              name: data
            - mountPath: /opt/kimai/var/plugins
              name: plugins
            - mountPath: /shared
              name: shared
            - mountPath: /tmp
              name: temp
            - mountPath: /var/logs
              name: varlogs
          livenessProbe:
            tcpSocket:
              port: 8001
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8001
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8001
            initialDelaySeconds: 10
            failureThreshold: 60
            timeoutSeconds: 2
            periodSeconds: 5
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-kimai-data
        - name: plugins
          persistentVolumeClaim:
            claimName: release-name-kimai-plugins
        - name: shared
          emptyDir: {}
        - name: temp
          emptyDir:
            medium: Memory
        - name: varlogs
          emptyDir: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mariadb
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 10.7.4
    helm-revision: "1"
    helm.sh/chart: mariadb-3.0.5
spec:
  revisionHistoryLimit: 3
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: release-name
  serviceName: release-name-mariadb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mariadb
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 0
        runAsUser: 568
        supplementalGroups:
          - 568
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      enableServiceLinks: false
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: autopermissions
          image: ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583
          securityContext:
            runAsUser: 10590
            privileged: true
            allowPrivilegeEscalation: false
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          command:
            - /bin/sh
            - -c
            - |
              /bin/bash <<'EOF'
              echo "Automatically correcting permissions..."
              echo "increasing inotify limits..."
              ( sysctl -w fs.inotify.max_user_watches=524288 || echo "error setting inotify") && ( sysctl -w fs.inotify.max_user_instances=512 || echo "error setting inotify")
              EOF
          volumeMounts: null
      containers:
        - name: release-name-mariadb
          image: ghcr.io/truecharts/mariadb:v10.7.4@sha256:dd2042a79c38b92ec14b4c55b97c615c1c5f437f4f5b3e796a8fa7aa1c0a0865
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: PUID
              value: "568"
            - name: USER_ID
              value: "568"
            - name: UID
              value: "568"
            - name: UMASK
              value: "2"
            - name: UMASK_SET
              value: "2"
            - name: PGID
              value: "568"
            - name: GROUP_ID
              value: "568"
            - name: GID
              value: "568"
            - name: S6_READ_ONLY_ROOT
              value: "1"
            - name: NVIDIA_VISIBLE_DEVICES
              value: void
            - name: TZ
              value: UTC
            - name: MARIADB_DATABASE
              value: kimai
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mariadb-password
                  name: mariadbcreds
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mariadb-root-password
                  name: mariadbcreds
            - name: MARIADB_USER
              value: kimai
          envFrom: null
          ports:
            - name: main
              containerPort: 3306
              protocol: TCP
          volumeMounts:
            - mountPath: /shared
              name: shared
            - mountPath: /tmp
              name: temp
            - mountPath: /var/logs
              name: varlogs
            - mountPath: /bitnami/mariadb
              name: data
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - until /opt/bitnami/scripts/mariadb/healthcheck.sh; do sleep 2; done
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - until /opt/bitnami/scripts/mariadb/healthcheck.sh; do sleep 2; done
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          startupProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - until /opt/bitnami/scripts/mariadb/healthcheck.sh; do sleep 2; done
            failureThreshold: 60
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: shared
          emptyDir: {}
        - name: temp
          emptyDir:
            medium: Memory
        - name: varlogs
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 999Gi
