[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-etcd-operator",
      "labels": {
        "chart": "etcd-operator-0.1.1",
        "app": "release-name-etcd-operator",
        "heritage": "Helm",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-etcd",
      "labels": {
        "chart": "etcd-0.1.3",
        "app": "release-name-etcd",
        "heritage": "Helm",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "controller-acct"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-etcd-configmap"
    },
    "data": {
      "cluster.yml": "apiVersion: \"etcd.database.coreos.com/v1beta2\"\nkind: \"EtcdCluster\"\nmetadata:\n  labels:\n    chart: \"etcd-0.1.3\"\n    app: \"release-name-etcd\"\n    heritage: \"Helm\"\n    release: \"release-name\"\n  name: \"etcd-cluster\"\nspec:\n  size: 3\n  version: \"v3.2.9\"\n  pod:\n    antiAffinity: false\nnodeSelector: {}\nresources:\n  limits:\n    cpu: 100m\n    memory: 128Mi\n  requests:\n    cpu: 100m\n    memory: 128Mi"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-kafka-jmx-exporter",
      "labels": {
        "app": "kafka",
        "chart": "kafka-0.3.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "config.yaml": "lowercaseOutputName: true\nrules:\n- pattern : kafka.cluster<type=(.+), name=(.+), topic=(.+), partition=(.+)><>Value\n  name: kafka_cluster_$1_$2\n  labels:\n    topic: \"$3\"\n    partition: \"$4\"\n- pattern : kafka.log<type=Log, name=(.+), topic=(.+), partition=(.+)><>Value\n  name: kafka_log_$1\n  labels:\n    topic: \"$2\"\n    partition: \"$3\"\n- pattern : kafka.controller<type=(.+), name=(.+)><>(Count|Value)\n  name: kafka_controller_$1_$2\n- pattern : kafka.network<type=(.+), name=(.+)><>Value\n  name: kafka_network_$1_$2\n- pattern : kafka.network<type=(.+), name=(.+)PerSec, request=(.+)><>Count\n  name: kafka_network_$1_$2_total\n  labels:\n    request: \"$3\"\n- pattern : kafka.network<type=(.+), name=(\\w+), networkProcessor=(.+)><>Count\n  name: kafka_network_$1_$2\n  labels:\n    request: \"$3\"\n  type: COUNTER\n- pattern : kafka.network<type=(.+), name=(\\w+), request=(\\w+)><>Count\n  name: kafka_network_$1_$2\n  labels:\n    request: \"$3\"\n  type: COUNTER\n- pattern : kafka.network<type=(.+), name=(\\w+)><>Count\n  name: kafka_network_$1_$2\n  type: COUNTER\n- pattern : kafka.server<type=(.+), name=(.+)PerSec\\w*, topic=(.+)><>Count\n  name: kafka_server_$1_$2_total\n  labels:\n    topic: \"$3\"\n  type: COUNTER\n- pattern : kafka.server<type=(.+), name=(.+)PerSec\\w*><>Count\n  name: kafka_server_$1_$2_total\n  type: COUNTER\n- pattern : kafka.server<type=(.+), name=(.+), clientId=(.+), topic=(.+), partition=(.*)><>(Count|Value)\n  name: kafka_server_$1_$2\n  labels:\n    clientId: \"$3\"\n    topic: \"$4\"\n    partition: \"$5\"\n- pattern : kafka.server<type=(.+), name=(.+), topic=(.+), partition=(.*)><>(Count|Value)\n  name: kafka_server_$1_$2\n  labels:\n    topic: \"$3\"\n    partition: \"$4\"\n- pattern : kafka.server<type=(.+), name=(.+), topic=(.+)><>(Count|Value)\n  name: kafka_server_$1_$2\n  labels:\n    topic: \"$3\"\n  type: COUNTER\n- pattern : kafka.server<type=(.+), name=(.+), clientId=(.+), brokerHost=(.+), brokerPort=(.+)><>(Count|Value)\n  name: kafka_server_$1_$2\n  labels:\n    clientId: \"$3\"\n    broker: \"$4:$5\"\n- pattern : kafka.server<type=(.+), name=(.+), clientId=(.+)><>(Count|Value)\n  name: kafka_server_$1_$2\n  labels:\n    clientId: \"$3\"\n- pattern : kafka.server<type=(.+), name=(.+)><>(Count|Value)\n  name: kafka_server_$1_$2\n- pattern : kafka.(\\w+)<type=(.+), name=(.+)PerSec\\w*><>Count\n  name: kafka_$1_$2_$3_total\n  type: COUNTER\n- pattern : kafka.(\\w+)<type=(.+), name=(.+)PerSec\\w*, topic=(.+)><>Count\n  name: kafka_$1_$2_$3_total\n  labels:\n    topic: \"$4\"\n  type: COUNTER\n- pattern : kafka.(\\w+)<type=(.+), name=(.+)PerSec\\w*, topic=(.+), partition=(.+)><>Count\n  name: kafka_$1_$2_$3_total\n  labels:\n    topic: \"$4\"\n    partition: \"$5\"\n  type: COUNTER\n- pattern : kafka.(\\w+)<type=(.+), name=(.+)><>(Count|Value)\n  name: kafka_$1_$2_$3_$4\n  type: COUNTER\n- pattern : kafka.(\\w+)<type=(.+), name=(.+), (\\w+)=(.+)><>(Count|Value)\n  name: kafka_$1_$2_$3_$6\n  labels:\n    \"$4\": \"$5\"\n"
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1beta1",
    "description": "Kubernetes Native Serverless Framework",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "functions.k8s.io",
      "labels": {
        "app": "kubeless",
        "heritage": "Helm",
        "release": "release-name",
        "chart": "kubeless-0.0.4"
      }
    },
    "spec": {
      "group": "k8s.io",
      "names": {
        "kind": "Function",
        "plural": "functions",
        "singular": "function"
      },
      "scope": "Namespaced",
      "version": "v1"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-etcd-operator",
      "labels": {
        "chart": "etcd-operator-0.1.1",
        "app": "release-name-etcd-operator",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "etcd.coreos.com"
        ],
        "resources": [
          "clusters"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "etcd.database.coreos.com"
        ],
        "resources": [
          "etcdclusters"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "thirdpartyresources"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "apiextensions.k8s.io"
        ],
        "resources": [
          "customresourcedefinitions"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "storage.k8s.io"
        ],
        "resources": [
          "storageclasses"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "services",
          "endpoints",
          "persistentvolumeclaims",
          "events"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "deployments"
        ],
        "verbs": [
          "*"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-etcd",
      "labels": {
        "chart": "etcd-0.1.3",
        "app": "release-name-etcd",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "apiextensions.k8s.io"
        ],
        "resources": [
          "customresourcedefinitions"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "etcd.database.coreos.com"
        ],
        "resources": [
          "etcdclusters"
        ],
        "verbs": [
          "*"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "kubeless-controller-deployer"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services",
          "configmaps"
        ],
        "verbs": [
          "create",
          "get",
          "delete",
          "list",
          "update",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "apps",
          "extensions"
        ],
        "resources": [
          "deployments"
        ],
        "verbs": [
          "create",
          "get",
          "delete",
          "list",
          "update",
          "patch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "list",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "k8s.io"
        ],
        "resources": [
          "functions"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "cronjobs"
        ],
        "verbs": [
          "create",
          "get",
          "delete",
          "list",
          "update",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "autoscaling"
        ],
        "resources": [
          "horizontalpodautoscalers"
        ],
        "verbs": [
          "create",
          "get",
          "delete",
          "list",
          "update",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "monitoring.coreos.com"
        ],
        "resources": [
          "alertmanagers",
          "prometheuses",
          "servicemonitors"
        ],
        "verbs": [
          "*"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "release-name-etcd-operator",
      "labels": {
        "chart": "etcd-operator-0.1.1",
        "app": "release-name-etcd-operator",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-etcd-operator",
        "namespace": "default"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-etcd-operator"
    }
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "release-name-etcd",
      "labels": {
        "chart": "etcd-0.1.3",
        "app": "release-name-etcd",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-etcd",
        "namespace": "default"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-etcd"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "kubeless-controller-deployer"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "kubeless-controller-deployer"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "controller-acct",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "kafka-dns",
      "labels": {
        "app": "kafka",
        "chart": "kafka-0.3.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "ports": [
        {
          "port": 9092
        }
      ],
      "clusterIP": "None",
      "selector": {
        "app": "kafka"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "kafka-topic-creator"
    },
    "spec": {
      "containers": [
        {
          "name": "kafka-topic-creator",
          "image": "banzaicloud/kafka:2.12-1.2.0-etcd-0.0.1",
          "command": [
            "/bin/bash",
            "-c",
            "--"
          ],
          "args": [
            "while true; do sleep 3000; done;"
          ]
        }
      ]
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-etcd-operator",
      "labels": {
        "chart": "etcd-operator-0.1.1",
        "app": "release-name-etcd-operator",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "spec": {
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "chart": "etcd-operator-0.1.1",
            "app": "release-name-etcd-operator",
            "heritage": "Helm",
            "release": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-etcd-operator",
          "containers": [
            {
              "name": "etcd-operator",
              "image": "quay.io/coreos/etcd-operator:v0.6.1",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/usr/local/bin/etcd-operator"
              ],
              "env": [
                {
                  "name": "MY_POD_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "MY_POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "100m",
                  "memory": "128Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-kubeless-controller",
      "labels": {
        "app": "kubeless",
        "heritage": "Helm",
        "release": "release-name",
        "chart": "kubeless-0.0.4",
        "kubeless": "release-name-kubeless-controller"
      }
    },
    "spec": {
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "kubeless": "release-name-kubeless-controller",
            "release": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "controller",
              "image": "bitnami/kubeless-controller@sha256:53592e0f023353665569313a1662a3aff18141e48caf4beca54d68436e71e0dc",
              "imagePullPolicy": "IfNotPresent"
            }
          ],
          "serviceAccountName": "controller-acct"
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "kafka",
      "labels": {
        "app": "kafka",
        "chart": "kafka-0.3.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "kafka",
          "chart": "kafka-0.3.3",
          "release": "release-name",
          "heritage": "Helm"
        }
      },
      "serviceName": "kafka-dns",
      "replicas": 3,
      "updateStrategy": {
        "type": "OnDelete"
      },
      "template": {
        "metadata": {
          "annotations": {
            "prometheus.io/port": "9020",
            "prometheus.io/probe": "kafka",
            "prometheus.io/scrape": "true"
          },
          "labels": {
            "app": "kafka",
            "chart": "kafka-0.3.3",
            "release": "release-name",
            "heritage": "Helm"
          }
        },
        "spec": {
          "initContainers": [
            {
              "name": "wait-for-etcd-to-come-up",
              "image": "tenstartups/etcdctl",
              "command": [
                "sh",
                "-c",
                "until ETCDCTL_API=3 etcdctl --endpoints=etcd-cluster-client:2379 get \"\" --prefix; do echo waiting for etcd to come up; sleep 1; done;"
              ]
            },
            {
              "name": "jmx-export",
              "image": "banzaicloud/jmx_exporter:latest",
              "command": [
                "cp",
                "/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.3.1-SNAPSHOT.jar",
                "/opt/jmx-exporter/"
              ],
              "volumeMounts": [
                {
                  "name": "jmx-jar-data",
                  "mountPath": "/opt/jmx-exporter/"
                }
              ]
            }
          ],
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "broker",
              "image": "banzaicloud/kafka:2.12-2.0.0-etcd-0.0.3",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "KAFKA_LOG4J_OPTS",
                  "value": "-Dlog4j.configuration=file:config/log4j.properties"
                },
                {
                  "name": "KAFKA_OPTS",
                  "value": "-javaagent:/opt/jmx-exporter/jmx_prometheus_javaagent-0.3.1-SNAPSHOT.jar=9020:/etc/jmx-exporter/config.yaml"
                }
              ],
              "ports": [
                {
                  "name": "kafka",
                  "containerPort": 9092
                },
                {
                  "name": "prometheus",
                  "containerPort": 9020
                }
              ],
              "command": [
                "sh",
                "-c",
                "./bin/kafka-server-start.sh config/server.properties --override metastore.connect=etcd://etcd-cluster-client:2379 --override log.retention.hours=168 --override log.dirs=/var/lib/kafka/data/topics --override auto.create.topics.enable=false --override broker.id=${HOSTNAME##*-}"
              ],
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "512Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 9092
                },
                "timeoutSeconds": 1
              },
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/var/lib/kafka/data"
                },
                {
                  "name": "jmx-jar-data",
                  "mountPath": "/opt/jmx-exporter/",
                  "readOnly": true
                },
                {
                  "name": "jmx-config",
                  "mountPath": "/etc/jmx-exporter/",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "jmx-jar-data",
              "emptyDir": {}
            },
            {
              "name": "jmx-config",
              "configMap": {
                "name": "release-name-kafka-jmx-exporter"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "1Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "labels": {
        "chart": "etcd-0.1.3",
        "app": "release-name-etcd",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "etcd-cluster"
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-etcd",
            "release": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "release-name-etcd-init",
              "image": "solsson/kafka-initutils@sha256:c98d7fb5e9365eab391a5dcd4230fc6e72caf929c60f29ff091e3b0215124713",
              "command": [
                "/bin/bash",
                "-c",
                "until kubectl get crd -o name | grep -q etcdclusters.etcd.database.coreos.com; do echo waiting for crd ; sleep 3 ; done ;kubectl create -f /etcd_chart/cluster.yml;"
              ],
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etcd_chart"
                }
              ]
            }
          ],
          "restartPolicy": "OnFailure",
          "serviceAccountName": "release-name-etcd",
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-etcd-configmap"
              }
            }
          ]
        }
      }
    }
  },
  null
]