[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-kubernetes-ingress",
      "namespace": "xXutOPWslAK",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-ingress",
        "helm.sh/chart": "kubernetes-ingress-1.22.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.0"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-kubernetes-ingress-default-backend",
      "namespace": "xXutOPWslAK",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-ingress",
        "helm.sh/chart": "kubernetes-ingress-1.22.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.0"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-kubernetes-ingress",
      "namespace": "xXutOPWslAK",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-ingress",
        "helm.sh/chart": "kubernetes-ingress-1.22.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.0"
      }
    },
    "data": null
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-kubernetes-ingress",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-ingress",
        "helm.sh/chart": "kubernetes-ingress-1.22.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.0"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "endpoints",
          "nodes",
          "pods",
          "services",
          "namespaces",
          "events",
          "serviceaccounts"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses",
          "ingresses/status",
          "ingressclasses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses/status"
        ],
        "verbs": [
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "discovery.k8s.io"
        ],
        "resources": [
          "endpointslices"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "core.haproxy.org"
        ],
        "resources": [
          "*"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "update"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-kubernetes-ingress",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-ingress",
        "helm.sh/chart": "kubernetes-ingress-1.22.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.0"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-kubernetes-ingress"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-kubernetes-ingress",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-kubernetes-ingress",
      "namespace": "xXutOPWslAK",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-ingress",
        "helm.sh/chart": "kubernetes-ingress-1.22.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.0"
      },
      "annotations": null
    },
    "spec": {
      "type": "NodePort",
      "ports": [
        {
          "name": "http",
          "port": 80,
          "protocol": "TCP",
          "appProtocol": "http",
          "targetPort": "http"
        },
        {
          "name": "https",
          "port": 443,
          "protocol": "TCP",
          "appProtocol": "https",
          "targetPort": "https"
        },
        {
          "name": "stat",
          "port": 1024,
          "protocol": "TCP",
          "targetPort": "stat"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "kubernetes-ingress",
        "app.kubernetes.io/instance": "release-name"
      },
      "externalIPs": null
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-kubernetes-ingress-default-backend",
      "namespace": "xXutOPWslAK",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-ingress",
        "helm.sh/chart": "kubernetes-ingress-1.22.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.0"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "http",
          "port": 8080,
          "protocol": "TCP",
          "appProtocol": "http",
          "targetPort": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "release-name-kubernetes-ingress-default-backend",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-kubernetes-ingress",
      "namespace": "xXutOPWslAK",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-ingress",
        "helm.sh/chart": "kubernetes-ingress-1.22.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.0"
      }
    },
    "spec": {
      "replicas": 2,
      "minReadySeconds": 0,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "kubernetes-ingress",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "kubernetes-ingress",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-kubernetes-ingress",
          "terminationGracePeriodSeconds": 60,
          "dnsPolicy": "ClusterFirst",
          "containers": [
            {
              "name": "kubernetes-ingress-controller",
              "image": "haproxytech/kubernetes-ingress:1.8.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--default-ssl-certificate=default/release-name-kubernetes-ingress-default-cert",
                "--configmap=default/release-name-kubernetes-ingress",
                "--default-backend-service=default/release-name-kubernetes-ingress-default-backend",
                "--ingress.class=haproxy",
                "--publish-service=default/release-name-kubernetes-ingress",
                "--log=info"
              ],
              "securityContext": {
                "runAsUser": 10135,
                "runAsGroup": 1000,
                "capabilities": {
                  "drop": [
                    "ALL"
                  ],
                  "add": [
                    "NET_BIND_SERVICE"
                  ]
                },
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true
              },
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80,
                  "protocol": "TCP"
                },
                {
                  "name": "https",
                  "containerPort": 443,
                  "protocol": "TCP"
                },
                {
                  "name": "stat",
                  "containerPort": 1024,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/healthz",
                  "port": 1042,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 0,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/healthz",
                  "port": 1042,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 0,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "startupProbe": {
                "failureThreshold": 20,
                "httpGet": {
                  "path": "/healthz",
                  "port": 1042,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 0,
                "periodSeconds": 1,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "POD_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "POD_IP",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "status.podIP"
                    }
                  }
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "64Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-kubernetes-ingress-default-backend",
      "namespace": "xXutOPWslAK",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-ingress",
        "helm.sh/chart": "kubernetes-ingress-1.22.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.0"
      }
    },
    "spec": {
      "replicas": 2,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "release-name-kubernetes-ingress-default-backend",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "release-name-kubernetes-ingress-default-backend",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "kubernetes-ingress-default-backend",
              "image": "k8s.gcr.io/defaultbackend-amd64:1.5",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "10m",
                  "memory": "16Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "serviceAccountName": "release-name-kubernetes-ingress-default-backend",
          "terminationGracePeriodSeconds": 60
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "type": "kubernetes.io/tls",
    "metadata": {
      "name": "release-name-kubernetes-ingress-default-cert",
      "namespace": "xXutOPWslAK",
      "labels": {
        "app.kubernetes.io/name": "kubernetes-ingress",
        "helm.sh/chart": "kubernetes-ingress-1.22.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.0"
      },
      "annotations": {
        "helm.sh/hook": "pre-install",
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "data": {
      "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lRY3hlcWtyK0pycWZSc3pRaWxUaVFYREFOQmdrcWhraUc5dzBCQVFzRkFEQWcKTVI0d0hBWURWUVFERXhWcmRXSmxjbTVsZEdWekxXbHVaM0psYzNNdFkyRXdIaGNOTWpJd05qRXlNVFF3TlRBeQpXaGNOTWpNd05qRXlNVFF3TlRBeVdqQWZNUjB3R3dZRFZRUURFeFJ5Wld4bFlYTmxMVzVoYldVdVpHVm1ZWFZzCmREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5QdCttRGwzSkhLRDRHdkFCRWMKSUJvaXphVDJzM1diS3pKd3NoeU1FV2laUERQSU9MZzJBVjU5djRnbWpBREhLbVN3SXhpQ3RzNFAvK2FqSk5HYwpYcnpBTVNHcnVHU2FkbEg3KzIvczZhVmFqZnkyQ3dJdXIwVURkUWMrYm5jV3dqcjNqTkVJUnE0VFB6ZDliaktnClUyU3lVdG1MNHVvbWFIRWk0Y3VMREJYdzQwTDFuK0pVc0FHWUhQMnpkUmU0ZDl2cHpJMExCaEZOcmpILy9PMC8KNDhUVW9NbWpCd0VOY25RODhLbTEveWorejNOa1RHcVdtcVJtd3RIODB0dFNQQ2JNVEZQS3lhbjlERWFXWGZQSgpvMUwrdUJ2bTJYYTFQQ2ZobTEyTXJSWTlZdDh0bHptWWloNXVXSVJ3QUxLODg3TE1wZjd4eldpN0tTdk1PSmw3CmhFOENBd0VBQWFOZ01GNHdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkV2c0t3ZFlrRHRBbWhJWApxNGMrUWE3OEdVRnFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFNQlVLM2JWc1NpUk9RYm9aOXZ6UHFSRmVmCm1wWkRtYXZrdEJUR2NuNUR4Z0lEd2kxNnpnaXVCcTE1Vy80K1pLVlQwMVVSOEE0WnFGaXJjZHN1NFp6RmFCYjIKOEZsblc5NERWRlZIaHRydGdSZE5rdVJGcmx3VzJoNlpLSDNYZXVlQnA4MkwwOGNWWlowMjZvUEZ2TERDSlNXZwp4MGMzZHh0cTR6S3d1V2hCNXEveWpUWG1tNUo0QXhrbm5acHE0a2VzNFd6T0dTWHJMWHlLRTFVMFF1cm1tdFROCmQwaVQ2dnVWQTZua0tZYnc2Mmc2eDkzWjdldjNhOVl6TU12cHFxeHB4eGNrYks2TElveGVyaUwyYnlxODhFSzQKOFE5bDFod2srRXdlMjBBUUdobXJCYXNNYXBxVHhNZU1zd0FoaEQ5UTJNRThSQWphSlJGeHdHNExTbzJNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
      "tls.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMCszNllPWGNrY29QZ2E4QUVSd2dHaUxOcFBhemRac3JNbkN5SEl3UmFKazhNOGc0CnVEWUJYbjIvaUNhTUFNY3FaTEFqR0lLMnpnLy81cU1rMFp4ZXZNQXhJYXU0WkpwMlVmdjdiK3pwcFZxTi9MWUwKQWk2dlJRTjFCejV1ZHhiQ092ZU0wUWhHcmhNL04zMXVNcUJUWkxKUzJZdmk2aVpvY1NMaHk0c01GZkRqUXZXZgo0bFN3QVpnYy9iTjFGN2gzMituTWpRc0dFVTJ1TWYvODdUL2p4TlNneWFNSEFRMXlkRHp3cWJYL0tQN1BjMlJNCmFwYWFwR2JDMGZ6UzIxSThKc3hNVThySnFmME1ScFpkODhtalV2NjRHK2JaZHJVOEorR2JYWXl0RmoxaTN5MlgKT1ppS0htNVloSEFBc3J6enNzeWwvdkhOYUxzcEs4dzRtWHVFVHdJREFRQUJBb0lCQUVQdVlUWlVGOHFIZVViNQpZRTBidGRLSzIxNElVZWZkc0EvLy9hZVc0akdrQko4WWk4M0lTZElPL3FqV3FrUEprM1lvMjJjTTV5blFDUmZWCnJZU2UyZU1vdTlidUl6SGtMUThFZFVrZ0tKaC9HVW9xMUFhRURseFJ5bDVqRGFlUW5QdW53L1J3OGE3MHJtdk0KQWRtcWVIQ3JsRkQxUE93UEdhVkNLQnhGV3I5aEhKTk9VaFE3L2cxbjNPMzNBTlljVDFUZ3lIYnNQc3ZqSFNNQgo2ZkpDM0hCTnFFVHFZZWdYRXAyU2Fmb3hOYVNsNkJ6blNrUnJEekxYcGl3NVBRcS9sSmFhZlZiNGN2UjlqbzlsCkZBWlI5Znd1Wll2YVJSZ2dlazQ0c3VKYzBJMHdYNmdvN09sS2MxcXVTN29SdWpyZy91cmdMeDFaRlhlUURVM3AKS2JIUmdna0NnWUVBLzFWWTY0ZkhqNnhHUTdQdlF4RlgzWlE0ckc0aHNKa1Izb2VwWHhwbFNTbnRaUjcxTWZMdwpGNHFIR2dxMDBPNCt1M1BFUTk3d2lBU2VmRllIMTR3ZGJoVlVDTTd6R1Q5NENkSTZsY3lPRXp0NjdGVWp2RlpsCnQ5aGhuVm1tRHRBd1UyYWRqMDFwR1AxalBBNXNZOXdDVUhYTlRDM2V5aXNmejBhQzl3MVNsZzBDZ1lFQTFIdWYKSmplQWxUNnd5ZjhOWTdJQ1Q1eVJvYkMybDlLMDZFU3R2Tnc5WkFJSkpCRWNMckZRdkpSRllCenZ6Z1Q5Uk41TgpkTWJQVGRiUmFqcC9yQWwwc2Joc05rcUNQU2hncm1mSlcySjRrNVp1Z25qYlRmQ3QyOWxtd0wyL1VYQXhTdUtwCm9qeU00U1VlTUt4K2VQRkJrVzk4Q3RlZHJ5SmpaSXdLRXdVZXFNc0NnWUF5bGY0ZjY2NmwwRU83ZGhLWS92NmgKYjVRcTFVYm5iZXdVWWx3ejgwN054L2k0YUFHNys1MkZqSFJudkdkR1hXMGdSamRFR3c4Y1k0M2lwRWk1YzVFQgpGa2luMWhoamtDZUFDcDZBdng0R3dXb0JHSDBUK3luNzJtcThlZDVrWU9xeUcwcHI4Ykk0dVRySDB6TzJOUWhnCldIWnIrVXFDVXpqaUg5NGloQWt3b1FLQmdHWjlGbCs5cDdUVkh6cmZYaHIzVXF3SnppamFic2crWnVvZHJsdUoKTThkWVFBWjRoa3B6Vm9rUFQ0TXprZXVpZG5OUWNyWGY2MEFWWEw5TFppZWFEQUpvL1RFV3NVbEVmNVhBRTl5VApXNnQ4aE9ORDNpdnk2amsvM0pNZE12bmFEcnliSmMxT1BYbWZpTGRiakVsVHZSZWtXWVYxU09hZnhLZEw4TlFKCnhTY1BBb0dCQU5xbTBpU09NM2dXNFZwRzZmL21WR05BaHVQblFBZHhuNzVoVnA1ZUVEN3puRzlVVU90YnorM3QKSlg1cjdvYkd6ZTZza3poWGRwQmR6b2hDa1JFdzJNNDRxZFNqUVc3SUlnMDIwdld3YVppVkVqckxZN244YnFGUApiTEhvUkJtdS83bUNoNUdST2JVanovNko4TTlnUWVXa3VnWWc2TzBiRkVGSEJmZnZWKytGCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
    }
  }
]