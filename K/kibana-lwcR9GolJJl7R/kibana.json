[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name"
    },
    "data": {
      "kibana.yml": "# Kibana is served by a back end server. This setting specifies the port to use.\n#server.port: 5601\n\n# Specifies the address to which the Kibana server will bind. IP addresses and host names are both valid values.\n# The default is 'localhost', which usually means remote machines will not be able to connect.\n# To allow connections from remote users, set this parameter to a non-loopback address.\nserver.host: '0.0.0.0'\n\n# Enables you to specify a path to mount Kibana at if you are running behind a proxy. This only affects\n# the URLs generated by Kibana, your proxy is expected to remove the basePath value before forwarding requests\n# to Kibana. This setting cannot end in a slash.\n#server.basePath: \"\"\n\n# The maximum payload size in bytes for incoming server requests.\n#server.maxPayloadBytes: 1048576\n\n# The Kibana server's name.  This is used for display purposes.\n#server.name: \"your-hostname\"\n\n# The URL of the Elasticsearch instance to use for all your queries.\nelasticsearch.url: 'http://elasticsearch.logging.svc:9200'\n\n# When this setting's value is true Kibana uses the hostname specified in the server.host\n# setting. When the value of this setting is false, Kibana uses the hostname of the host\n# that connects to this Kibana instance.\n#elasticsearch.preserveHost: true\n\n# Kibana uses an index in Elasticsearch to store saved searches, visualizations and\n# dashboards. Kibana creates a new index if the index doesn't already exist.\n#kibana.index: \".kibana\"\n\n# The default application to load.\n#kibana.defaultAppId: \"discover\"\n\n# If your Elasticsearch is protected with basic authentication, these settings provide\n# the username and password that the Kibana server uses to perform maintenance on the Kibana\n# index at startup. Your Kibana users still need to authenticate with Elasticsearch, which\n# is proxied through the Kibana server.\n#elasticsearch.username: \"user\"\n#elasticsearch.password: \"pass\"\n\n# Enables SSL and paths to the PEM-format SSL certificate and SSL key files, respectively.\n# These settings enable SSL for outgoing requests from the Kibana server to the browser.\n#server.ssl.enabled: false\n#server.ssl.certificate: /path/to/your/server.crt\n#server.ssl.key: /path/to/your/server.key\n\n# Optional settings that provide the paths to the PEM-format SSL certificate and key files.\n# These files validate that your Elasticsearch backend uses the same key files.\n#elasticsearch.ssl.certificate: /path/to/your/client.crt\n#elasticsearch.ssl.key: /path/to/your/client.key\n\n# Optional setting that enables you to specify a path to the PEM file for the certificate\n# authority for your Elasticsearch instance.\n#elasticsearch.ssl.certificateAuthorities: [ \"/path/to/your/CA.pem\" ]\n\n# To disregard the validity of SSL certificates, change this setting's value to 'none'.\n#elasticsearch.ssl.verificationMode: full\n\n# Time in milliseconds to wait for Elasticsearch to respond to pings. Defaults to the value of\n# the elasticsearch.requestTimeout setting.\n#elasticsearch.pingTimeout: 1500\n\n# Time in milliseconds to wait for responses from the back end or Elasticsearch. This value\n# must be a positive integer.\n#elasticsearch.requestTimeout: 30000\n\n# List of Kibana client-side headers to send to Elasticsearch. To send *no* client-side\n# headers, set this value to [] (an empty list).\n#elasticsearch.requestHeadersWhitelist: [ authorization ]\n\n# Header names and values that are sent to Elasticsearch. Any custom headers cannot be overwritten\n# by client-side headers, regardless of the elasticsearch.requestHeadersWhitelist configuration.\n#elasticsearch.customHeaders: {}\n\n# Time in milliseconds for Elasticsearch to wait for responses from shards. Set to 0 to disable.\n#elasticsearch.shardTimeout: 0\n\n# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying.\n#elasticsearch.startupTimeout: 5000\n\n# Specifies the path where Kibana creates the process ID file.\n#pid.file: /var/run/kibana.pid\n\n# Enables you specify a file where Kibana stores log output.\n#logging.dest: stdout\n\n# Set the value of this setting to true to suppress all logging output.\n#logging.silent: false\n\n# Set the value of this setting to true to suppress all logging output other than error messages.\n#logging.quiet: false\n\n# Set the value of this setting to true to log all events, including system usage information\n# and all requests.\n#logging.verbose: false\n\n# Set the interval in milliseconds to sample system and process performance\n# metrics. Minimum is 100ms. Defaults to 5000.\n#ops.interval: 5000\n\n# The default locale. This locale can be used in certain circumstances to substitute any missing\n# translations.\ni18n.defaultLocale: \"cn\"\n"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "auth-proxy",
      "labels": {
        "choerodon.io/release": "release-name",
        "choerodon.io/infra": "auth-proxy",
        "choerodon.io/logs-parser": "docker"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "choerodon.io/release": "release-name",
          "choerodon.io/infra": "auth-proxy"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "choerodon.io/release": "release-name",
            "choerodon.io/infra": "auth-proxy"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "auth-proxy",
              "image": "registry.choerodon.com.cn/choerodon-infra/auth-proxy:0.1.0",
              "imagePullPolicy": "Always",
              "env": [
                {
                  "name": "AUTH_TYPE",
                  "value": "oauth"
                },
                {
                  "name": "BASE_URL",
                  "value": "http://app.example.com"
                },
                {
                  "name": "CHOERODON_API_URL",
                  "value": "http://api.example.com"
                },
                {
                  "name": "CHOERODON_ORG_CODE",
                  "value": "4"
                },
                {
                  "name": "CHOERODON_RROJECT_CODE",
                  "value": "ops"
                },
                {
                  "name": "OAUTH_AUTH_URL",
                  "value": "http://api.example.com/oauth/oauth/authorize"
                },
                {
                  "name": "OAUTH_CHECK_URL",
                  "value": "http://api.example.com/iam/v1/users/self"
                },
                {
                  "name": "OAUTH_CLIENT_ID",
                  "value": "kibana"
                },
                {
                  "name": "OAUTH_CLIENT_SECRET",
                  "value": "choerodon"
                },
                {
                  "name": "OAUTH_TOKEN_URL",
                  "value": "http://api.example.com/oauth/oauth/token"
                },
                {
                  "name": "PROXY_URL",
                  "value": "https://vinkdong.com"
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 9081,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "100m",
                  "memory": "128Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-kibana",
      "labels": {
        "choerodon.io/release": "release-name",
        "choerodon.io/infra": "kibana",
        "choerodon.io/logs-parser": "docker"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "choerodon.io/release": "release-name",
          "choerodon.io/infra": "kibana"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "choerodon.io/release": "release-name",
            "choerodon.io/infra": "kibana"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "kibana",
              "image": "registry.cn-shanghai.aliyuncs.com/c7n/kibana:6.4.2",
              "volumeMounts": [
                {
                  "name": "kibana",
                  "mountPath": "/usr/share/kibana/config/kibana.yml",
                  "subPath": "kibana.yml"
                }
              ],
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 5601,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "300m",
                  "memory": "1024Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "256Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "kibana",
              "configMap": {
                "name": "release-name"
              }
            }
          ]
        }
      }
    }
  }
]