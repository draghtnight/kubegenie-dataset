apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kong
  namespace: 6EOxa
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.9.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.8"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.9.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.8"
  name: release-name-kong
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - endpoints/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - configuration.konghq.com
    resources:
      - kongconsumers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - configuration.konghq.com
    resources:
      - kongconsumers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - configuration.konghq.com
    resources:
      - kongingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - configuration.konghq.com
    resources:
      - kongingresses/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - configuration.konghq.com
    resources:
      - kongplugins
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - configuration.konghq.com
    resources:
      - kongplugins/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - configuration.konghq.com
    resources:
      - tcpingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - configuration.konghq.com
    resources:
      - tcpingresses/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - configuration.konghq.com
    resources:
      - udpingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - configuration.konghq.com
    resources:
      - udpingresses/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - list
      - watch
  - apiGroups:
      - configuration.konghq.com
    resources:
      - kongclusterplugins
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - configuration.konghq.com
    resources:
      - kongclusterplugins/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.9.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.8"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kong
subjects:
  - kind: ServiceAccount
    name: release-name-kong
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-kong
  namespace: 6EOxa
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.9.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.8"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - kong-ingress-controller-leader-kong-kong
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-kong
  namespace: 6EOxa
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.9.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.8"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-kong
subjects:
  - kind: ServiceAccount
    name: release-name-kong
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-kong-proxy
  namespace: 6EOxa
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.9.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.8"
    enable-metrics: "true"
spec:
  type: LoadBalancer
  ports:
    - name: kong-proxy
      port: 80
      targetPort: 8000
      appProtocol: http
      protocol: TCP
    - name: kong-proxy-tls
      port: 443
      targetPort: 8443
      appProtocol: https
      protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kong
  namespace: 6EOxa
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.9.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.8"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        kuma.io/gateway: enabled
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.9.1
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "2.8"
        app.kubernetes.io/component: app
        app: release-name-kong
        version: "2.8"
    spec:
      serviceAccountName: release-name-kong
      automountServiceAccountToken: true
      initContainers:
        - name: clear-stale-pid
          image: kong:2.8
          imagePullPolicy: IfNotPresent
          securityContext: {}
          resources: {}
          command:
            - rm
            - -vrf
            - $KONG_PREFIX/pids
          env:
            - name: KONG_ADMIN_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_ADMIN_ERROR_LOG
              value: /dev/stderr
            - name: KONG_ADMIN_GUI_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_ADMIN_GUI_ERROR_LOG
              value: /dev/stderr
            - name: KONG_ADMIN_LISTEN
              value: 127.0.0.1:8444 http2 ssl
            - name: KONG_CLUSTER_LISTEN
              value: "off"
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_KIC
              value: "on"
            - name: KONG_LUA_PACKAGE_PATH
              value: /opt/?.lua;/opt/?/init.lua;;
            - name: KONG_NGINX_WORKER_PROCESSES
              value: "2"
            - name: KONG_PLUGINS
              value: bundled
            - name: KONG_PORTAL_API_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_PORTAL_API_ERROR_LOG
              value: /dev/stderr
            - name: KONG_PORT_MAPS
              value: 80:8000, 443:8443
            - name: KONG_PREFIX
              value: /kong_prefix/
            - name: KONG_PROXY_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_PROXY_ERROR_LOG
              value: /dev/stderr
            - name: KONG_PROXY_LISTEN
              value: 0.0.0.0:8000, 0.0.0.0:8443 http2 ssl
            - name: KONG_STATUS_LISTEN
              value: 0.0.0.0:8100
            - name: KONG_STREAM_LISTEN
              value: "off"
          volumeMounts:
            - name: release-name-kong-prefix-dir
              mountPath: /kong_prefix/
            - name: release-name-kong-tmp
              mountPath: /tmp
      containers:
        - name: ingress-controller
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          args: null
          ports:
            - name: cmetrics
              containerPort: 10255
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CONTROLLER_ELECTION_ID
              value: kong-ingress-controller-leader-kong
            - name: CONTROLLER_INGRESS_CLASS
              value: kong
            - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
              value: "true"
            - name: CONTROLLER_KONG_ADMIN_URL
              value: https://localhost:8444
            - name: CONTROLLER_PUBLISH_SERVICE
              value: default/release-name-kong-proxy
          image: kong/kubernetes-ingress-controller:2.3
          imagePullPolicy: IfNotPresent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          terminationGracePeriodSeconds: null
          volumeMounts: null
        - name: proxy
          image: kong:2.8
          imagePullPolicy: IfNotPresent
          securityContext: {}
          env:
            - name: KONG_ADMIN_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_ADMIN_ERROR_LOG
              value: /dev/stderr
            - name: KONG_ADMIN_GUI_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_ADMIN_GUI_ERROR_LOG
              value: /dev/stderr
            - name: KONG_ADMIN_LISTEN
              value: 127.0.0.1:8444 http2 ssl
            - name: KONG_CLUSTER_LISTEN
              value: "off"
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_KIC
              value: "on"
            - name: KONG_LUA_PACKAGE_PATH
              value: /opt/?.lua;/opt/?/init.lua;;
            - name: KONG_NGINX_WORKER_PROCESSES
              value: "2"
            - name: KONG_PLUGINS
              value: bundled
            - name: KONG_PORTAL_API_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_PORTAL_API_ERROR_LOG
              value: /dev/stderr
            - name: KONG_PORT_MAPS
              value: 80:8000, 443:8443
            - name: KONG_PREFIX
              value: /kong_prefix/
            - name: KONG_PROXY_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_PROXY_ERROR_LOG
              value: /dev/stderr
            - name: KONG_PROXY_LISTEN
              value: 0.0.0.0:8000, 0.0.0.0:8443 http2 ssl
            - name: KONG_STATUS_LISTEN
              value: 0.0.0.0:8100
            - name: KONG_STREAM_LISTEN
              value: "off"
            - name: KONG_NGINX_DAEMON
              value: "off"
          lifecycle:
            preStop:
              exec:
                command:
                  - kong
                  - quit
                  - --wait=15
          ports:
            - name: proxy
              containerPort: 8000
              protocol: TCP
            - name: proxy-tls
              containerPort: 8443
              protocol: TCP
            - name: status
              containerPort: 8100
              protocol: TCP
          volumeMounts:
            - name: release-name-kong-prefix-dir
              mountPath: /kong_prefix/
            - name: release-name-kong-tmp
              mountPath: /tmp
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: status
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: status
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations: []
      volumes:
        - name: release-name-kong-prefix-dir
          emptyDir: {}
        - name: release-name-kong-tmp
          emptyDir: {}
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-test-ingress
  annotations:
    helm.sh/hook: test
spec:
  restartPolicy: OnFailure
  containers:
    - name: release-name-curl
      image: curlimages/curl
      command:
        - curl
        - http://release-name-kong-proxy.default.svc.cluster.local/httpbin
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-test-httproute
  annotations:
    helm.sh/hook: test
spec:
  restartPolicy: OnFailure
  containers:
    - name: release-name-curl
      image: curlimages/curl
      command:
        - curl
        - http://release-name-kong-proxy.default.svc.cluster.local/httproute
