apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kratos
  labels:
    app.kubernetes.io/name: kratos
    helm.sh/chart: kratos-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.9.0-alpha.2
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kratos-config
  namespace: UrROrWbiWKf
  labels:
    app.kubernetes.io/name: kratos
    helm.sh/chart: kratos-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.9.0-alpha.2
    app.kubernetes.io/managed-by: Helm
data:
  kratos.yaml: |
    courier:
      smtp: {}
    serve:
      admin:
        port: 4434
      public:
        port: 4433
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-kratos-admin
  namespace: UrROrWbiWKf
  labels:
    app.kubernetes.io/component: admin
    app.kubernetes.io/name: kratos
    helm.sh/chart: kratos-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.9.0-alpha.2
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-admin
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kratos
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-kratos-public
  namespace: UrROrWbiWKf
  labels:
    app.kubernetes.io/component: public
    app.kubernetes.io/name: kratos
    helm.sh/chart: kratos-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.9.0-alpha.2
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-public
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kratos
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-kratos-courier
  namespace: UrROrWbiWKf
  labels:
    app.kubernetes.io/component: courier
    app.kubernetes.io/name: kratos
    helm.sh/chart: kratos-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.9.0-alpha.2
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  clusterIP: None
  ports:
    - port: 80
      targetPort: http-public
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: release-name-kratos-courier
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kratos
  namespace: UrROrWbiWKf
  labels:
    app.kubernetes.io/name: kratos
    helm.sh/chart: kratos-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.9.0-alpha.2
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  progressDeadlineSeconds: 3600
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 30%
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: kratos
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kratos
        helm.sh/chart: kratos-0.23.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: v0.9.0-alpha.2
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/kratos-config: 52079ed9e76c83b428f524ab3c46a2a16ffc064bcf4f8edb6b3a1b71dbae23b6
        checksum/kratos-templates: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/kratos-secrets: 47cbbff312e95f8d297638a972816f1974386d0c5fe2901eb29ef83aeeb86be6
    spec:
      volumes:
        - name: kratos-config-volume
          configMap:
            name: release-name-kratos-config
      automountServiceAccountToken: true
      serviceAccountName: release-name-kratos
      containers:
        - name: kratos
          image: oryd/kratos:v0.9.0-alpha.2
          imagePullPolicy: IfNotPresent
          command:
            - kratos
          args:
            - serve
            - all
            - --config
            - /etc/config/kratos.yaml
          volumeMounts:
            - name: kratos-config-volume
              mountPath: /etc/config
              readOnly: true
          env:
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: release-name-kratos
                  key: dsn
            - name: SECRETS_DEFAULT
              valueFrom:
                secretKeyRef:
                  name: release-name-kratos
                  key: secretsDefault
                  optional: true
            - name: SECRETS_COOKIE
              valueFrom:
                secretKeyRef:
                  name: release-name-kratos
                  key: secretsCookie
                  optional: true
            - name: SECRETS_CIPHER
              valueFrom:
                secretKeyRef:
                  name: release-name-kratos
                  key: secretsCipher
                  optional: true
            - name: COURIER_SMTP_CONNECTION_URI
              valueFrom:
                secretKeyRef:
                  name: release-name-kratos
                  key: smtpConnectionURI
          ports:
            - name: http-admin
              containerPort: 4434
              protocol: TCP
            - name: http-public
              containerPort: 4433
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /admin/health/alive
              port: http-admin
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /admin/health/ready
              port: http-admin
            initialDelaySeconds: 30
            periodSeconds: 10
          resources: null
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 100
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-kratos-courier
  namespace: UrROrWbiWKf
  labels:
    app.kubernetes.io/name: kratos
    helm.sh/chart: kratos-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.9.0-alpha.2
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: release-name-kratos-courier
      app.kubernetes.io/instance: release-name
  serviceName: release-name-kratos-courier
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: release-name-kratos-courier
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/kratos-config: 52079ed9e76c83b428f524ab3c46a2a16ffc064bcf4f8edb6b3a1b71dbae23b6
        checksum/kratos-templates: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/kratos-secrets: e51c4ae4458bddc1db1d7a960477efc133718b3a6e44a193f03f419768e9fb7b
    spec:
      serviceAccountName: release-name-kratos
      containers:
        - name: release-name-kratos-courier
          image: oryd/kratos:v0.9.0-alpha.2
          imagePullPolicy: IfNotPresent
          args:
            - courier
            - watch
            - --config
            - /etc/config/kratos.yaml
          volumeMounts:
            - name: release-name-kratos-config-volume
              mountPath: /etc/config
              readOnly: true
          env:
            - name: LOG_FORMAT
              value: json
            - name: LOG_LEVEL
              value: trace
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: release-name-kratos
                  key: dsn
            - name: SECRETS_DEFAULT
              valueFrom:
                secretKeyRef:
                  name: release-name-kratos
                  key: secretsDefault
                  optional: true
            - name: SECRETS_COOKIE
              valueFrom:
                secretKeyRef:
                  name: release-name-kratos
                  key: secretsCookie
                  optional: true
            - name: SECRETS_CIPHER
              valueFrom:
                secretKeyRef:
                  name: release-name-kratos
                  key: secretsCipher
                  optional: true
            - name: COURIER_SMTP_CONNECTION_URI
              valueFrom:
                secretKeyRef:
                  name: release-name-kratos
                  key: smtpConnectionURI
          resources: null
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 100
      volumes:
        - name: release-name-kratos-config-volume
          configMap:
            name: release-name-kratos-config
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kratos-job
  labels:
    app.kubernetes.io/name: kratos
    helm.sh/chart: kratos-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.9.0-alpha.2
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "0"
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kratos
  namespace: UrROrWbiWKf
  labels:
    app.kubernetes.io/name: kratos
    helm.sh/chart: kratos-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.9.0-alpha.2
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "0"
    helm.sh/resource-policy: keep
type: Opaque
data:
  dsn: PG5vIHZhbHVlPg==
  secretsDefault: RzhvNTh2Z1l0NnBrRGtnQjBIWmdHeGxMNmc1bmsxRkw=
  secretsCookie: VzRmdUhSbGczYU9HS3VvcGdmRkl6MzliNGVaU3IzVVM=
  secretsCipher: Snd2elpzc1VwVmhUTEZKWVJzSjNvUUpEWG0wNnFHNVc=
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-kratos-test-connection
  labels:
    app.kubernetes.io/name: kratos
    helm.sh/chart: kratos-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.9.0-alpha.2
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-kratos-admin:80/admin/health/ready
  restartPolicy: Never
