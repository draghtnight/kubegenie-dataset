[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-kafka-ui",
      "labels": {
        "helm.sh/chart": "kafka-ui-v0.4.0",
        "app.kubernetes.io/name": "kafka-ui",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v0.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-kafka-ui",
      "labels": {
        "helm.sh/chart": "kafka-ui-v0.4.0",
        "app.kubernetes.io/name": "kafka-ui",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v0.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {}
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-kafka-ui",
      "labels": {
        "helm.sh/chart": "kafka-ui-v0.4.0",
        "app.kubernetes.io/name": "kafka-ui",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v0.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {}
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-kafka-ui",
      "labels": {
        "helm.sh/chart": "kafka-ui-v0.4.0",
        "app.kubernetes.io/name": "kafka-ui",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v0.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "kafka-ui",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-kafka-ui",
      "labels": {
        "helm.sh/chart": "kafka-ui-v0.4.0",
        "app.kubernetes.io/name": "kafka-ui",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v0.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "kafka-ui",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "53d9d411df4f7578fa87923a698c3fc274c692f119c45fb4daef593a4c6187f0",
            "checksum/secret": "e51069c8e4129489f59f03a325b26f53bc7465935185503190d4fbd72b0b491e"
          },
          "labels": {
            "app.kubernetes.io/name": "kafka-ui",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-kafka-ui",
          "securityContext": {},
          "containers": [
            {
              "name": "kafka-ui",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "docker.io/provectuslabs/kafka-ui:v0.4.0",
              "imagePullPolicy": "IfNotPresent",
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "release-name-kafka-ui"
                  }
                },
                {
                  "secretRef": {
                    "name": "release-name-kafka-ui"
                  }
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/actuator/health",
                  "port": "http"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 30,
                "timeoutSeconds": 10
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/actuator/health",
                  "port": "http"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 30,
                "timeoutSeconds": 10
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  }
]