[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "kibana",
      "namespace": "6g8c1t75KuT6Dk"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "flush-kibana-metadata",
      "namespace": "6g8c1t75KuT6Dk"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "register-kibana-indexes",
      "namespace": "6g8c1t75KuT6Dk"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "kibana-etc"
    },
    "type": "Opaque",
    "data": {
      "kibana.yml": "ZWxhc3RpY3NlYXJjaDoKICBwaW5nVGltZW91dDogMTUwMAogIHByZXNlcnZlSG9zdDogdHJ1ZQogIHJlcXVlc3RUaW1lb3V0OiAzMDAwMAogIHNoYXJkVGltZW91dDogMAogIHN0YXJ0dXBUaW1lb3V0OiA1MDAwCmtpYmFuYToKICBkZWZhdWx0QXBwSWQ6IGRpc2NvdmVyCmxvZ2dpbmc6CiAgcXVpZXQ6IGZhbHNlCiAgc2lsZW50OiBmYWxzZQogIHZlcmJvc2U6IGZhbHNlCm9wczoKICBpbnRlcnZhbDogNTAwMApzZXJ2ZXI6CiAgaG9zdDogbG9jYWxob3N0CiAgbWF4UGF5bG9hZEJ5dGVzOiAxMDQ4NTc2CiAgbmFtZToga2liYW5hCiAgcG9ydDogNTYwMQogIHJld3JpdGVCYXNlUGF0aDogZmFsc2UKICBzc2w6CiAgICBlbmFibGVkOiBmYWxzZQ==",
      "httpd.conf": "U2VydmVyUm9vdCAiL3Vzci9sb2NhbC9hcGFjaGUyIgoKTGlzdGVuIDgwCgpMb2FkTW9kdWxlIG1wbV9ldmVudF9tb2R1bGUgbW9kdWxlcy9tb2RfbXBtX2V2ZW50LnNvCkxvYWRNb2R1bGUgYXV0aG5fZmlsZV9tb2R1bGUgbW9kdWxlcy9tb2RfYXV0aG5fZmlsZS5zbwpMb2FkTW9kdWxlIGF1dGhuX2NvcmVfbW9kdWxlIG1vZHVsZXMvbW9kX2F1dGhuX2NvcmUuc28KTG9hZE1vZHVsZSBhdXRoel9ob3N0X21vZHVsZSBtb2R1bGVzL21vZF9hdXRoel9ob3N0LnNvCkxvYWRNb2R1bGUgYXV0aHpfZ3JvdXBmaWxlX21vZHVsZSBtb2R1bGVzL21vZF9hdXRoel9ncm91cGZpbGUuc28KTG9hZE1vZHVsZSBhdXRoel91c2VyX21vZHVsZSBtb2R1bGVzL21vZF9hdXRoel91c2VyLnNvCkxvYWRNb2R1bGUgYXV0aHpfY29yZV9tb2R1bGUgbW9kdWxlcy9tb2RfYXV0aHpfY29yZS5zbwpMb2FkTW9kdWxlIGFjY2Vzc19jb21wYXRfbW9kdWxlIG1vZHVsZXMvbW9kX2FjY2Vzc19jb21wYXQuc28KTG9hZE1vZHVsZSBhdXRoX2Jhc2ljX21vZHVsZSBtb2R1bGVzL21vZF9hdXRoX2Jhc2ljLnNvCkxvYWRNb2R1bGUgbGRhcF9tb2R1bGUgbW9kdWxlcy9tb2RfbGRhcC5zbwpMb2FkTW9kdWxlIGF1dGhuel9sZGFwX21vZHVsZSBtb2R1bGVzL21vZF9hdXRobnpfbGRhcC5zbwpMb2FkTW9kdWxlIHJlcXRpbWVvdXRfbW9kdWxlIG1vZHVsZXMvbW9kX3JlcXRpbWVvdXQuc28KTG9hZE1vZHVsZSBmaWx0ZXJfbW9kdWxlIG1vZHVsZXMvbW9kX2ZpbHRlci5zbwpMb2FkTW9kdWxlIHByb3h5X2h0bWxfbW9kdWxlIG1vZHVsZXMvbW9kX3Byb3h5X2h0bWwuc28KTG9hZE1vZHVsZSBsb2dfY29uZmlnX21vZHVsZSBtb2R1bGVzL21vZF9sb2dfY29uZmlnLnNvCkxvYWRNb2R1bGUgZW52X21vZHVsZSBtb2R1bGVzL21vZF9lbnYuc28KTG9hZE1vZHVsZSBoZWFkZXJzX21vZHVsZSBtb2R1bGVzL21vZF9oZWFkZXJzLnNvCkxvYWRNb2R1bGUgc2V0ZW52aWZfbW9kdWxlIG1vZHVsZXMvbW9kX3NldGVudmlmLnNvCkxvYWRNb2R1bGUgdmVyc2lvbl9tb2R1bGUgbW9kdWxlcy9tb2RfdmVyc2lvbi5zbwpMb2FkTW9kdWxlIHByb3h5X21vZHVsZSBtb2R1bGVzL21vZF9wcm94eS5zbwpMb2FkTW9kdWxlIHByb3h5X2Nvbm5lY3RfbW9kdWxlIG1vZHVsZXMvbW9kX3Byb3h5X2Nvbm5lY3Quc28KTG9hZE1vZHVsZSBwcm94eV9odHRwX21vZHVsZSBtb2R1bGVzL21vZF9wcm94eV9odHRwLnNvCkxvYWRNb2R1bGUgcHJveHlfYmFsYW5jZXJfbW9kdWxlIG1vZHVsZXMvbW9kX3Byb3h5X2JhbGFuY2VyLnNvCkxvYWRNb2R1bGUgcmVtb3RlaXBfbW9kdWxlIG1vZHVsZXMvbW9kX3JlbW90ZWlwLnNvCkxvYWRNb2R1bGUgc2xvdG1lbV9zaG1fbW9kdWxlIG1vZHVsZXMvbW9kX3Nsb3RtZW1fc2htLnNvCkxvYWRNb2R1bGUgc2xvdG1lbV9wbGFpbl9tb2R1bGUgbW9kdWxlcy9tb2Rfc2xvdG1lbV9wbGFpbi5zbwpMb2FkTW9kdWxlIHVuaXhkX21vZHVsZSBtb2R1bGVzL21vZF91bml4ZC5zbwpMb2FkTW9kdWxlIHN0YXR1c19tb2R1bGUgbW9kdWxlcy9tb2Rfc3RhdHVzLnNvCkxvYWRNb2R1bGUgYXV0b2luZGV4X21vZHVsZSBtb2R1bGVzL21vZF9hdXRvaW5kZXguc28KCjxJZk1vZHVsZSB1bml4ZF9tb2R1bGU+ClVzZXIgZGFlbW9uCkdyb3VwIGRhZW1vbgo8L0lmTW9kdWxlPgoKPERpcmVjdG9yeSAvPgogICAgQWxsb3dPdmVycmlkZSBub25lCiAgICBSZXF1aXJlIGFsbCBkZW5pZWQKPC9EaXJlY3Rvcnk+Cgo8RmlsZXMgIi5odCoiPgogICAgUmVxdWlyZSBhbGwgZGVuaWVkCjwvRmlsZXM+CgpFcnJvckxvZyAvZGV2L3N0ZGVycgoKTG9nTGV2ZWwgd2FybgoKPElmTW9kdWxlIGxvZ19jb25maWdfbW9kdWxlPgogICAgTG9nRm9ybWF0ICIlYSAlbCAldSAldCBcIiVyXCIgJT5zICViIFwiJXtSZWZlcmVyfWlcIiBcIiV7VXNlci1BZ2VudH1pXCIiIGNvbWJpbmVkCiAgICBMb2dGb3JtYXQgIiV7WC1Gb3J3YXJkZWQtRm9yfWkgJWwgJXUgJXQgXCIlclwiICU+cyAlYiBcIiV7UmVmZXJlcn1pXCIgXCIle1VzZXItQWdlbnR9aVwiIiBwcm94eQogICAgTG9nRm9ybWF0ICIlaCAlbCAldSAldCBcIiVyXCIgJT5zICViIiBjb21tb24KCiAgICA8SWZNb2R1bGUgbG9naW9fbW9kdWxlPgogICAgICBMb2dGb3JtYXQgIiVhICVsICV1ICV0IFwiJXJcIiAlPnMgJWIgXCIle1JlZmVyZXJ9aVwiIFwiJXtVc2VyLUFnZW50fWlcIiAlSSAlTyIgY29tYmluZWRpbwogICAgPC9JZk1vZHVsZT4KCiAgICBTZXRFbnZJZiBYLUZvcndhcmRlZC1Gb3IgIl4uKlwuLipcLi4qXC4uKiIgZm9yd2FyZGVkCiAgICBDdXN0b21Mb2cgL2Rldi9zdGRvdXQgY29tbW9uCiAgICBDdXN0b21Mb2cgL2Rldi9zdGRvdXQgY29tYmluZWQKICAgIEN1c3RvbUxvZyAvZGV2L3N0ZG91dCBwcm94eSBlbnY9Zm9yd2FyZGVkCjwvSWZNb2R1bGU+Cgo8RGlyZWN0b3J5ICIvdXNyL2xvY2FsL2FwYWNoZTIvY2dpLWJpbiI+CiAgICBBbGxvd092ZXJyaWRlIE5vbmUKICAgIE9wdGlvbnMgTm9uZQogICAgUmVxdWlyZSBhbGwgZ3JhbnRlZAo8L0RpcmVjdG9yeT4KCjxJZk1vZHVsZSBoZWFkZXJzX21vZHVsZT4KICAgIFJlcXVlc3RIZWFkZXIgdW5zZXQgUHJveHkgZWFybHkKPC9JZk1vZHVsZT4KCjxJZk1vZHVsZSBwcm94eV9odG1sX21vZHVsZT4KSW5jbHVkZSBjb25mL2V4dHJhL3Byb3h5LWh0bWwuY29uZgo8L0lmTW9kdWxlPgoKPFZpcnR1YWxIb3N0ICo6ODA+CiAgUmVtb3RlSVBIZWFkZXIgWC1PcmlnaW5hbC1Gb3J3YXJkZWQtRm9yCiAgPExvY2F0aW9uIC8+CiAgICAgIFByb3h5UGFzcyBodHRwOi8vbG9jYWxob3N0OjU2MDEvCiAgICAgIFByb3h5UGFzc1JldmVyc2UgaHR0cDovL2xvY2FsaG9zdDo1NjAxLwogIDwvTG9jYXRpb24+CiAgPFByb3h5ICo+CiAgICAgIEF1dGhOYW1lICJLaWJhbmEiCiAgICAgIEF1dGhUeXBlIEJhc2ljCiAgICAgIEF1dGhCYXNpY1Byb3ZpZGVyIGZpbGUgbGRhcAogICAgICBBdXRoVXNlckZpbGUgL3Vzci9sb2NhbC9hcGFjaGUyL2NvbmYvLmh0cGFzc3dkCiAgICAgIEF1dGhMREFQQmluZEROIGNuPWFkbWluLGRjPWNsdXN0ZXIsZGM9bG9jYWwKICAgICAgQXV0aExEQVBCaW5kUGFzc3dvcmQgcGFzc3dvcmQKICAgICAgQXV0aExEQVBVUkwgImxkYXA6Ly9sZGFwLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWw6Mzg5L291PVBlb3BsZSxkYz1jbHVzdGVyLGRjPWxvY2FsIgogICAgICBSZXF1aXJlIHZhbGlkLXVzZXIKICA8L1Byb3h5Pgo8L1ZpcnR1YWxIb3N0Pg=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "kibana-elasticsearch-user"
    },
    "type": "Opaque",
    "data": {
      "ELASTICSEARCH_USERNAME": "YWRtaW4=",
      "ELASTICSEARCH_PASSWORD": "Y2hhbmdlbWU=",
      "BIND_DN": "Y249YWRtaW4sZGM9Y2x1c3RlcixkYz1sb2NhbA==",
      "BIND_PASSWORD": "cGFzc3dvcmQ="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "kibana-bin"
    },
    "data": {
      "apache.sh": "#!/bin/bash\n\n\n\nset -ev\n\nCOMMAND=\"${@:-start}\"\n\nfunction start () {\n\n  if [ -f /etc/apache2/envvars ]; then\n     # Loading Apache2 ENV variables\n     source /etc/httpd/apache2/envvars\n  fi\n  # Apache gets grumpy about PID files pre-existing\n  rm -f /etc/httpd/logs/httpd.pid\n\n  if [ -f /usr/local/apache2/conf/.htpasswd ]; then\n    htpasswd -b /usr/local/apache2/conf/.htpasswd \"$ELASTICSEARCH_USERNAME\" \"$ELASTICSEARCH_PASSWORD\"\n  else\n    htpasswd -cb /usr/local/apache2/conf/.htpasswd \"$ELASTICSEARCH_USERNAME\" \"$ELASTICSEARCH_PASSWORD\"\n  fi\n\n  #Launch Apache on Foreground\n  exec httpd -DFOREGROUND\n}\n\nfunction stop () {\n  apachectl -k graceful-stop\n}\n\n$COMMAND\n",
      "kibana.sh": "#!/bin/bash\n\n\nset -e\nCOMMAND=\"${@:-start}\"\n\nfunction start () {\n  exec /usr/share/kibana/bin/kibana \\\n    --elasticsearch.hosts=\"${ELASTICSEARCH_HOSTS}\" \\\n    --elasticsearch.username=\"${ELASTICSEARCH_USERNAME}\" \\\n    --elasticsearch.password=\"${ELASTICSEARCH_PASSWORD}\"\n}\n\nfunction stop () {\n  kill -TERM 1\n}\n\n$COMMAND\n",
      "create_kibana_index_patterns.sh": "#!/bin/bash\n\nset -ex\ncurl -K- <<< \"--user ${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}\" \\\n  -XPOST \"${KIBANA_ENDPOINT}/api/saved_objects/index-pattern/openstack*\" -H 'kbn-xsrf: true' \\\n  -H 'Content-Type: application/json' -d \\\n  '{\"attributes\":{\"title\":\"openstack-*\",\"timeFieldName\":\"@timestamp\"}}'\ncurl -K- <<< \"--user ${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}\" \\\n  -XPOST \"${KIBANA_ENDPOINT}/api/saved_objects/index-pattern/logstash*\" -H 'kbn-xsrf: true' \\\n  -H 'Content-Type: application/json' -d \\\n  '{\"attributes\":{\"title\":\"logstash-*\",\"timeFieldName\":\"@timestamp\"}}'\ncurl -K- <<< \"--user ${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}\" \\\n  -XPOST \"${KIBANA_ENDPOINT}/api/saved_objects/index-pattern/journal*\" -H 'kbn-xsrf: true' \\\n  -H 'Content-Type: application/json' -d \\\n  '{\"attributes\":{\"title\":\"journal-*\",\"timeFieldName\":\"@timestamp\"}}'\ncurl -K- <<< \"--user ${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}\" \\\n  -XPOST \"${KIBANA_ENDPOINT}/api/saved_objects/index-pattern/kernel*\" -H 'kbn-xsrf: true' \\\n  -H 'Content-Type: application/json' -d \\\n  '{\"attributes\":{\"title\":\"kernel-*\",\"timeFieldName\":\"@timestamp\"}}'\n\ncurl -K- <<< \"--user ${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}\" \\\n  -XPOST \"${KIBANA_ENDPOINT}/api/kibana/settings/defaultIndex\" -H 'kbn-xsrf: true' \\\n  -H 'Content-Type: application/json' -d \\\n  '{\"value\" : \"logstash*\"}'\n",
      "flush_kibana_metadata.sh": "#!/bin/bash\n\nset -ex\necho \"Deleting index created for metadata\"\n\ncurl -K- <<< \"--user ${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}\" \\\n  -XDELETE \"${ELASTICSEARCH_ENDPOINT}/.kibana*\"\n",
      "image-repo-sync.sh": "#!/bin/sh\nset -ex\n\nIFS=','; for IMAGE in ${IMAGE_SYNC_LIST}; do\n  docker pull ${IMAGE}\n  docker tag ${IMAGE} ${LOCAL_REPO}/${IMAGE}\n  docker push ${LOCAL_REPO}/${IMAGE}\ndone\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-kibana",
      "namespace": "6g8c1t75KuT6Dk"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-flush-kibana-metadata",
      "namespace": "6g8c1t75KuT6Dk"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-register-kibana-indexes",
      "namespace": "6g8c1t75KuT6Dk"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-kibana",
      "namespace": "6g8c1t75KuT6Dk"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-kibana"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "kibana",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-flush-kibana-metadata",
      "namespace": "6g8c1t75KuT6Dk"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-flush-kibana-metadata"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "flush-kibana-metadata",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-register-kibana-indexes",
      "namespace": "6g8c1t75KuT6Dk"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-register-kibana-indexes"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "register-kibana-indexes",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "kibana"
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 80
        },
        {
          "name": "https",
          "port": 443
        }
      ],
      "selector": {
        "app": "ingress-api"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "kibana-dash"
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 80
        }
      ],
      "selector": {
        "release_group": "release-name",
        "application": "kibana",
        "component": "dashboard"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "kibana",
      "annotations": {
        "openstackhelm.openstack.org/release_uuid": ""
      },
      "labels": {
        "release_group": "release-name",
        "application": "kibana",
        "component": "dashboard"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "kibana",
          "component": "dashboard"
        }
      },
      "revisionHistoryLimit": 3,
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": 3
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "kibana",
            "component": "dashboard"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "de58fc8c682fe7ff471812572cf279ceae99e6d701bbe6477d48fba2f13d5579",
            "configmap-etc-hash": "ada5439680beda6680472ef22be1bc543aaf6be026200f1a02820d44bc4b2a54"
          }
        },
        "spec": {
          "securityContext": {
            "runAsUser": 1000
          },
          "serviceAccountName": "kibana",
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "release_group",
                          "operator": "In",
                          "values": [
                            "release-name"
                          ]
                        },
                        {
                          "key": "application",
                          "operator": "In",
                          "values": [
                            "kibana"
                          ]
                        },
                        {
                          "key": "component",
                          "operator": "In",
                          "values": [
                            "dashboard"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 10
                }
              ]
            }
          },
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:elasticsearch-logging"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "flush-kibana-metadata"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "apache-proxy",
              "image": "docker.io/httpd:2.4",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "readOnlyRootFilesystem": true,
                "runAsUser": 11401,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "command": [
                "/tmp/apache.sh",
                "start"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80
                }
              ],
              "readinessProbe": {
                "tcpSocket": {
                  "port": 80
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 30
              },
              "env": [
                {
                  "name": "ELASTICSEARCH_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "kibana-elasticsearch-user",
                      "key": "ELASTICSEARCH_USERNAME"
                    }
                  }
                },
                {
                  "name": "ELASTICSEARCH_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "kibana-elasticsearch-user",
                      "key": "ELASTICSEARCH_PASSWORD"
                    }
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "kibana-bin",
                  "mountPath": "/tmp/apache.sh",
                  "subPath": "apache.sh",
                  "readOnly": true
                },
                {
                  "name": "kibana-etc",
                  "mountPath": "/usr/local/apache2/conf/httpd.conf",
                  "subPath": "httpd.conf",
                  "readOnly": true
                }
              ]
            },
            {
              "name": "kibana",
              "image": "docker.elastic.co/kibana/kibana-oss:7.1.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": true
              },
              "command": [
                "/tmp/kibana.sh",
                "start"
              ],
              "ports": [
                {
                  "name": "kibana",
                  "containerPort": 5601
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "httpHeaders": [
                    {
                      "name": "Authorization",
                      "value": "Basic YWRtaW46Y2hhbmdlbWU="
                    }
                  ],
                  "path": "/status",
                  "port": 80
                },
                "initialDelaySeconds": 180,
                "periodSeconds": 60
              },
              "readinessProbe": {
                "httpGet": {
                  "httpHeaders": [
                    {
                      "name": "Authorization",
                      "value": "Basic YWRtaW46Y2hhbmdlbWU="
                    }
                  ],
                  "path": "/status",
                  "port": 80
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 30
              },
              "env": [
                {
                  "name": "ELASTICSEARCH_HOSTS",
                  "value": "http://elasticsearch-logging.default.svc.cluster.local"
                },
                {
                  "name": "ELASTICSEARCH_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "kibana-elasticsearch-user",
                      "key": "ELASTICSEARCH_USERNAME"
                    }
                  }
                },
                {
                  "name": "ELASTICSEARCH_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "kibana-elasticsearch-user",
                      "key": "ELASTICSEARCH_PASSWORD"
                    }
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "pod-run",
                  "mountPath": "/run"
                },
                {
                  "name": "kibana-bin",
                  "mountPath": "/tmp/kibana.sh",
                  "subPath": "kibana.sh",
                  "readOnly": true
                },
                {
                  "name": "pod-etc-kibana",
                  "mountPath": "/usr/share/kibana/config"
                },
                {
                  "name": "pod-optimize-kibana",
                  "mountPath": "/usr/share/kibana/optimize"
                },
                {
                  "name": "kibana-etc",
                  "mountPath": "/usr/share/kibana/config/kibana.yml",
                  "subPath": "kibana.yml",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "pod-run",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "pod-etc-kibana",
              "emptyDir": {}
            },
            {
              "name": "pod-optimize-kibana",
              "emptyDir": {}
            },
            {
              "name": "kibana-bin",
              "configMap": {
                "name": "kibana-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "kibana-etc",
              "secret": {
                "secretName": "kibana-etc",
                "defaultMode": 292
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "flush-kibana-metadata"
    },
    "spec": {
      "backoffLimit": 6,
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "kibana",
            "component": "flush_kibana_metadata"
          },
          "annotations": {
            "helm.sh/hook": "pre-install, post-delete, pre-upgrade",
            "helm.sh/hook-delete-policy": "hook-succeeded",
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "de58fc8c682fe7ff471812572cf279ceae99e6d701bbe6477d48fba2f13d5579",
            "configmap-etc-hash": "ada5439680beda6680472ef22be1bc543aaf6be026200f1a02820d44bc4b2a54"
          }
        },
        "spec": {
          "securityContext": {
            "runAsUser": 1000
          },
          "serviceAccountName": "flush-kibana-metadata",
          "activeDeadlineSeconds": 600,
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:elasticsearch-logging"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "flush-kibana-metadata",
              "image": "docker.io/openstackhelm/heat:newton-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "env": [
                {
                  "name": "ELASTICSEARCH_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "kibana-elasticsearch-user",
                      "key": "ELASTICSEARCH_USERNAME"
                    }
                  }
                },
                {
                  "name": "ELASTICSEARCH_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "kibana-elasticsearch-user",
                      "key": "ELASTICSEARCH_PASSWORD"
                    }
                  }
                },
                {
                  "name": "KIBANA_ENDPOINT",
                  "value": "kibana-dash.default.svc.cluster.local:80"
                },
                {
                  "name": "ELASTICSEARCH_ENDPOINT",
                  "value": "elasticsearch-logging.default.svc.cluster.local:80"
                }
              ],
              "command": [
                "/tmp/flush_kibana_metadata.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "pod-run",
                  "mountPath": "/run"
                },
                {
                  "name": "kibana-bin",
                  "mountPath": "/tmp/flush_kibana_metadata.sh",
                  "subPath": "flush_kibana_metadata.sh",
                  "readOnly": false
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "pod-run",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "kibana-bin",
              "configMap": {
                "name": "kibana-bin",
                "defaultMode": 493
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "register-kibana-indexes"
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "kibana",
            "component": "register_kibana_indexes"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "de58fc8c682fe7ff471812572cf279ceae99e6d701bbe6477d48fba2f13d5579",
            "configmap-etc-hash": "ada5439680beda6680472ef22be1bc543aaf6be026200f1a02820d44bc4b2a54"
          }
        },
        "spec": {
          "securityContext": {
            "runAsUser": 1000
          },
          "serviceAccountName": "register-kibana-indexes",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:kibana-dash"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "flush-kibana-metadata"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "register-kibana-indexes",
              "image": "docker.io/openstackhelm/heat:newton-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "env": [
                {
                  "name": "ELASTICSEARCH_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "kibana-elasticsearch-user",
                      "key": "ELASTICSEARCH_USERNAME"
                    }
                  }
                },
                {
                  "name": "ELASTICSEARCH_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "kibana-elasticsearch-user",
                      "key": "ELASTICSEARCH_PASSWORD"
                    }
                  }
                },
                {
                  "name": "KIBANA_ENDPOINT",
                  "value": "kibana-dash.default.svc.cluster.local:80"
                },
                {
                  "name": "ELASTICSEARCH_ENDPOINT",
                  "value": "elasticsearch-logging.default.svc.cluster.local:80"
                }
              ],
              "command": [
                "/tmp/create_kibana_index_patterns.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "pod-run",
                  "mountPath": "/run"
                },
                {
                  "name": "kibana-bin",
                  "mountPath": "/tmp/create_kibana_index_patterns.sh",
                  "subPath": "create_kibana_index_patterns.sh",
                  "readOnly": false
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "pod-run",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "kibana-bin",
              "configMap": {
                "name": "kibana-bin",
                "defaultMode": 493
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "kibana",
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "nginx.ingress.kubernetes.io/affinity": "cookie",
        "nginx.ingress.kubernetes.io/rewrite-target": "/",
        "nginx.ingress.kubernetes.io/session-cookie-expires": "600",
        "nginx.ingress.kubernetes.io/session-cookie-hash": "sha1",
        "nginx.ingress.kubernetes.io/session-cookie-max-age": "600",
        "nginx.ingress.kubernetes.io/session-cookie-name": "kube-ingress-session-kibana"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "kibana",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "kibana-dash",
                  "servicePort": "http"
                }
              }
            ]
          }
        },
        {
          "host": "kibana.default",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "kibana-dash",
                  "servicePort": "http"
                }
              }
            ]
          }
        },
        {
          "host": "kibana.default.svc.cluster.local",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "kibana-dash",
                  "servicePort": "http"
                }
              }
            ]
          }
        }
      ]
    }
  }
]