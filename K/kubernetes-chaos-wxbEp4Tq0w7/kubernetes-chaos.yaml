apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-chaos-admin
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-chaos-admin
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
rules:
  - apiGroups:
      - ""
      - apps
      - batch
      - extensions
      - apps.openshift.io
      - argoproj.io
      - litmuschaos.io
    resources:
      - jobs
      - pods
      - pods/exec
      - pods/log
      - pods/eviction
      - daemonsets
      - replicasets
      - deployments
      - statefulsets
      - services
      - events
      - configmaps
      - secrets
      - networkpolicies
      - replicationcontrollers
      - deploymentconfigs
      - rollouts
      - chaosengines
      - chaosexperiments
      - chaosresults
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - deletecollection
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-chaos-admin
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-chaos-admin
subjects:
  - kind: ServiceAccount
    name: k8s-chaos-admin
    namespace: default
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: "Kills a container belonging to an application pod \n"
kind: ChaosExperiment
metadata:
  name: container-kill
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - apps
          - batch
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - events
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - update
          - patch
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name container-kill
    command:
      - /bin/bash
    env:
      - name: TARGET_CONTAINER
        value: ""
      - name: RAMP_TIME
        value: ""
      - name: CHAOS_INTERVAL
        value: "10"
      - name: SIGNAL
        value: SIGKILL
      - name: TOTAL_CHAOS_DURATION
        value: "20"
      - name: CONTAINER_RUNTIME
        value: docker
      - name: SOCKET_PATH
        value: /var/run/docker.sock
      - name: LIB
        value: litmus
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: TARGET_PODS
        value: ""
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: SEQUENCE
        value: parallel
    labels:
      name: container-kill
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Fillup Ephemeral Storage of a Resource
kind: ChaosExperiment
metadata:
  name: disk-fill
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - apps
          - batch
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/exec
          - pods/log
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name disk-fill
    command:
      - /bin/bash
    env:
      - name: TARGET_CONTAINER
        value: ""
      - name: FILL_PERCENTAGE
        value: "80"
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: litmus
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: DATA_BLOCK_SIZE
        value: "256"
      - name: TARGET_PODS
        value: ""
      - name: EPHEMERAL_STORAGE_MEBIBYTES
        value: ""
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: SEQUENCE
        value: parallel
      - name: CONTAINER_PATH
        value: /var/lib/docker/containers
    labels:
      name: disk-fill
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/host-path-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Detaching a persistent disk from a node/instance. Supports only for AWS and GCP
kind: ChaosExperiment
metadata:
  name: disk-loss
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - batch
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - events
          - pods/log
          - secrets
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
    image: litmuschaos/ansible-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ansible-playbook ./experiments/generic/disk_loss/disk_loss_ansible_logic.yml -i /etc/ansible/hosts -vv; exit 0
    command:
      - /bin/bash
    env:
      - name: ANSIBLE_STDOUT_CALLBACK
        value: default
      - name: TOTAL_CHAOS_DURATION
        value: "15"
      - name: RAMP_TIME
        value: ""
      - name: APP_CHECK
        value: "true"
      - name: CLOUD_PLATFORM
        value: GKE
      - name: PROJECT_ID
        value: ""
      - name: LIB
        value: litmus
      - name: NODE_NAME
        value: ""
      - name: DISK_NAME
        value: ""
      - name: ZONE_NAME
        value: ""
      - name: DEVICE_NAME
        value: ""
    labels:
      name: disk-loss
      app.kubernetes.io/part-of: litmus
    secrets:
      - name: cloud-secret
        mountPath: /tmp/
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Kills the docker service on the application node to check the resiliency.
kind: ChaosExperiment
metadata:
  name: docker-service-kill
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
      - apiGroups:
          - ""
        resources:
          - nodes
        verbs:
          - get
          - list
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name docker-service-kill
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "90"
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: litmus
      - name: NODE_LABEL
        value: ""
      - name: LIB_IMAGE
        value: ubuntu:16.04
      - name: TARGET_NODE
        value: ""
    labels:
      name: docker-service-kill
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/host-path-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Kills the kubelet service on the application node to check the resiliency.
kind: ChaosExperiment
metadata:
  name: kubelet-service-kill
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - batch
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
      - apiGroups:
          - ""
        resources:
          - nodes
        verbs:
          - get
          - list
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name kubelet-service-kill
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "90"
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: litmus
      - name: NODE_LABEL
        value: ""
      - name: LIB_IMAGE
        value: ubuntu:16.04
      - name: TARGET_NODE
        value: ""
    labels:
      name: kubelet-service-kill
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/host-path-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Give a cpu spike on a node belonging to a deployment
kind: ChaosExperiment
metadata:
  name: node-cpu-hog
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - batch
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
      - apiGroups:
          - ""
        resources:
          - nodes
        verbs:
          - get
          - list
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name node-cpu-hog
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: RAMP_TIME
        value: ""
      - name: NODE_CPU_CORE
        value: "1"
      - name: CPU_LOAD
        value: "0"
      - name: TARGET_NODES
        value: ""
      - name: NODE_LABEL
        value: ""
      - name: LIB
        value: litmus
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: NODES_AFFECTED_PERC
        value: ""
      - name: SEQUENCE
        value: parallel
    labels:
      name: node-cpu-hog
      app.kubernetes.io/part-of: litmus
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Drain the node where application pod is scheduled
kind: ChaosExperiment
metadata:
  name: node-drain
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - batch
          - litmuschaos.io
          - apps
        resources:
          - jobs
          - pods
          - events
          - pods/log
          - pods/exec
          - daemonsets
          - pods/eviction
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
      - apiGroups:
          - ""
        resources:
          - nodes
        verbs:
          - get
          - list
          - patch
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name node-drain
    command:
      - /bin/bash
    env:
      - name: TARGET_NODE
        value: ""
      - name: NODE_LABEL
        value: ""
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: LIB
        value: litmus
      - name: RAMP_TIME
        value: ""
    labels:
      name: node-drain
      app.kubernetes.io/part-of: litmus
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Give IO disk stress on a node belonging to a deployment
kind: ChaosExperiment
metadata:
  name: node-io-stress
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - batch
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
      - apiGroups:
          - ""
        resources:
          - nodes
        verbs:
          - get
          - list
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name node-io-stress
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "120"
      - name: FILESYSTEM_UTILIZATION_PERCENTAGE
        value: "10"
      - name: FILESYSTEM_UTILIZATION_BYTES
        value: ""
      - name: CPU
        value: "1"
      - name: NUMBER_OF_WORKERS
        value: "4"
      - name: VM_WORKERS
        value: "1"
      - name: TARGET_NODES
        value: ""
      - name: NODE_LABEL
        value: ""
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: litmus
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: NODES_AFFECTED_PERC
        value: ""
      - name: SEQUENCE
        value: parallel
    labels:
      name: node-io-stress
      app.kubernetes.io/part-of: litmus
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Give a memory hog on a node belonging to a deployment
kind: ChaosExperiment
metadata:
  name: node-memory-hog
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - batch
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
      - apiGroups:
          - ""
        resources:
          - nodes
        verbs:
          - get
          - list
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name node-memory-hog
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "120"
      - name: MEMORY_CONSUMPTION_PERCENTAGE
        value: "0"
      - name: MEMORY_CONSUMPTION_MEBIBYTES
        value: "0"
      - name: NUMBER_OF_WORKERS
        value: "1"
      - name: TARGET_NODES
        value: ""
      - name: NODE_LABEL
        value: ""
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: litmus
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: NODES_AFFECTED_PERC
        value: ""
      - name: SEQUENCE
        value: parallel
    labels:
      name: node-memory-hog
      app.kubernetes.io/part-of: litmus
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Taint the node where application pod is scheduled
kind: ChaosExperiment
metadata:
  name: node-taint
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - events
          - pods/log
          - pods/exec
          - daemonsets
          - pods/eviction
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
      - apiGroups:
          - ""
        resources:
          - nodes
        verbs:
          - get
          - list
          - patch
          - update
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name node-taint
    command:
      - /bin/bash
    env:
      - name: TARGET_NODE
        value: ""
      - name: NODE_LABEL
        value: ""
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: LIB
        value: litmus
      - name: RAMP_TIME
        value: ""
      - name: TAINTS
        value: ""
    labels:
      name: node-taint
      app.kubernetes.io/part-of: litmus
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Scale the application replicas and test the node autoscaling on cluster
kind: ChaosExperiment
metadata:
  name: pod-autoscaler
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - pods/exec
          - deployments
          - statefulsets
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
      - apiGroups:
          - ""
        resources:
          - nodes
        verbs:
          - get
          - list
          - create
          - patch
          - update
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-autoscaler
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: RAMP_TIME
        value: ""
      - name: REPLICA_COUNT
        value: "5"
      - name: LIB
        value: litmus
    labels:
      name: pod-autoscaler
      app.kubernetes.io/part-of: litmus
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Injects cpu consumption on pods belonging to an app deployment
kind: ChaosExperiment
metadata:
  name: pod-cpu-hog-exec
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - events
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-cpu-hog-exec
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: CPU_CORES
        value: "1"
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: litmus
      - name: SEQUENCE
        value: parallel
      - name: TARGET_PODS
        value: ""
    labels:
      name: pod-cpu-hog-exec
      app.kubernetes.io/part-of: litmus
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Injects cpu consumption on pods belonging to an app deployment
kind: ChaosExperiment
metadata:
  name: pod-cpu-hog
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - events
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-cpu-hog
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: CPU_CORES
        value: "1"
      - name: CPU_LOAD
        value: "100"
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: litmus
      - name: SEQUENCE
        value: parallel
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: STRESS_IMAGE
        value: :latest-ubuntu
      - name: TARGET_PODS
        value: ""
      - name: CONTAINER_RUNTIME
        value: docker
      - name: SOCKET_PATH
        value: /var/run/docker.sock
    labels:
      name: pod-cpu-hog
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Deletes a pod belonging to a deployment/statefulset/daemonset
kind: ChaosExperiment
metadata:
  name: pod-delete
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - apps
          - apps.openshift.io
          - argoproj.io
          - batch
          - litmuschaos.io
        resources:
          - deployments
          - jobs
          - pods
          - pods/log
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-delete
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "15"
      - name: RAMP_TIME
        value: ""
      - name: FORCE
        value: "true"
      - name: CHAOS_INTERVAL
        value: "5"
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: LIB
        value: litmus
      - name: TARGET_PODS
        value: ""
      - name: SEQUENCE
        value: parallel
    labels:
      name: pod-delete
      app.kubernetes.io/part-of: litmus
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Pod DNS Error injects dns failure/error in target pod containers
kind: ChaosExperiment
metadata:
  name: pod-dns-error
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - events
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-dns-error
    command:
      - /bin/bash
    env:
      - name: TARGET_CONTAINER
        value: ""
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: RAMP_TIME
        value: ""
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: TARGET_PODS
        value: ""
      - name: CONTAINER_RUNTIME
        value: docker
      - name: SOCKET_PATH
        value: /var/run/docker.sock
      - name: SEQUENCE
        value: parallel
      - name: TARGET_HOSTNAMES
        value: ""
      - name: MATCH_SCHEME
        value: exact
    labels:
      name: pod-dns-error
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Pod DNS Spoof can spoof particular dns requests in target pod container to desired target hostnames
kind: ChaosExperiment
metadata:
  name: pod-dns-spoof
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - events
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-dns-spoof
    command:
      - /bin/bash
    env:
      - name: TARGET_CONTAINER
        value: ""
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: RAMP_TIME
        value: ""
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: TARGET_PODS
        value: ""
      - name: CONTAINER_RUNTIME
        value: docker
      - name: SOCKET_PATH
        value: /var/run/docker.sock
      - name: SEQUENCE
        value: parallel
      - name: SPOOF_MAP
        value: ""
    labels:
      name: pod-dns-spoof
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    IO stress on a app pods belonging to an app deployment
kind: ChaosExperiment
metadata:
  name: pod-io-stress
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-io-stress
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "120"
      - name: FILESYSTEM_UTILIZATION_PERCENTAGE
        value: "10"
      - name: FILESYSTEM_UTILIZATION_BYTES
        value: ""
      - name: NUMBER_OF_WORKERS
        value: "4"
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: VOLUME_MOUNT_PATH
        value: ""
      - name: TARGET_PODS
        value: ""
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: pumba
      - name: SEQUENCE
        value: parallel
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: SOCKET_PATH
        value: /var/run/docker.sock
    labels:
      name: pod-io-stress
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Injects memory consumption on pods belonging to an app deployment
kind: ChaosExperiment
metadata:
  name: pod-memory-hog-exec
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-memory-hog-exec
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: MEMORY_CONSUMPTION
        value: "500"
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: litmus
      - name: CHAOS_KILL_COMMAND
        value: kill $(find /proc -name exe -lname '*/dd' 2>&1 | grep -v 'Permission denied' | awk -F/ '{print $(NF-1)}' | head -n 1)
      - name: TARGET_PODS
        value: ""
      - name: SEQUENCE
        value: parallel
    labels:
      name: pod-memory-hog-exec
      app.kubernetes.io/part-of: litmus
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Injects memory consumption on pods belonging to an app deployment
kind: ChaosExperiment
metadata:
  name: pod-memory-hog
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-memory-hog
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: MEMORY_CONSUMPTION
        value: "500"
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: litmus
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: STRESS_IMAGE
        value: :latest-ubuntu
      - name: TARGET_PODS
        value: ""
      - name: SEQUENCE
        value: parallel
      - name: CONTAINER_RUNTIME
        value: docker
      - name: SOCKET_PATH
        value: /var/run/docker.sock
    labels:
      name: pod-memory-hog
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Inject network packet corruption into application pod
kind: ChaosExperiment
metadata:
  name: pod-network-corruption
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - delete
          - list
          - patch
          - update
          - get
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-network-corruption
    command:
      - /bin/bash
    env:
      - name: TARGET_CONTAINER
        value: ""
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: NETWORK_INTERFACE
        value: eth0
      - name: TC_IMAGE
        value: gaiadocker/iproute2
      - name: NETWORK_PACKET_CORRUPTION_PERCENTAGE
        value: "100"
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: litmus
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: TARGET_PODS
        value: ""
      - name: SEQUENCE
        value: parallel
      - name: DESTINATION_IPS
        value: ""
      - name: DESTINATION_HOSTS
        value: ""
      - name: CONTAINER_RUNTIME
        value: docker
      - name: SOCKET_PATH
        value: /var/run/docker.sock
    labels:
      name: pod-network-corruption
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Injects network packet duplication on pods belonging to an app deployment
kind: ChaosExperiment
metadata:
  name: pod-network-duplication
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - get
          - list
          - patch
          - create
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-network-duplication
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: RAMP_TIME
        value: ""
      - name: TARGET_CONTAINER
        value: ""
      - name: NETWORK_INTERFACE
        value: eth0
      - name: TC_IMAGE
        value: gaiadocker/iproute2
      - name: NETWORK_PACKET_DUPLICATION_PERCENTAGE
        value: "100"
      - name: LIB
        value: litmus
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: TARGET_PODS
        value: ""
      - name: SEQUENCE
        value: parallel
      - name: DESTINATION_IPS
        value: ""
      - name: DESTINATION_HOSTS
        value: ""
      - name: CONTAINER_RUNTIME
        value: docker
      - name: SOCKET_PATH
        value: /var/run/docker.sock
    labels:
      name: pod-network-duplication
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Injects network latency on pods belonging to an app deployment
kind: ChaosExperiment
metadata:
  name: pod-network-latency
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - create
          - list
          - get
          - patch
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-network-latency
    command:
      - /bin/bash
    env:
      - name: TARGET_CONTAINER
        value: ""
      - name: NETWORK_INTERFACE
        value: eth0
      - name: TC_IMAGE
        value: gaiadocker/iproute2
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: NETWORK_LATENCY
        value: "2000"
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: RAMP_TIME
        value: ""
      - name: JITTER
        value: "0"
      - name: LIB
        value: litmus
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: TARGET_PODS
        value: ""
      - name: SEQUENCE
        value: parallel
      - name: DESTINATION_IPS
        value: ""
      - name: DESTINATION_HOSTS
        value: ""
      - name: CONTAINER_RUNTIME
        value: docker
      - name: SOCKET_PATH
        value: /var/run/docker.sock
    labels:
      name: pod-network-latency
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Injects network packet loss on pods belonging to an app deployment
kind: ChaosExperiment
metadata:
  name: pod-network-loss
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - batch
          - apps
          - apps.openshift.io
          - argoproj.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - replicationcontrollers
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - deploymentconfigs
          - rollouts
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - get
          - list
          - patch
          - create
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-network-loss
    command:
      - /bin/bash
    env:
      - name: TARGET_CONTAINER
        value: ""
      - name: LIB_IMAGE
        value: litmuschaos/go-runner:2.8.0
      - name: NETWORK_INTERFACE
        value: eth0
      - name: TC_IMAGE
        value: gaiadocker/iproute2
      - name: NETWORK_PACKET_LOSS_PERCENTAGE
        value: "100"
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: litmus
      - name: PODS_AFFECTED_PERC
        value: ""
      - name: TARGET_PODS
        value: ""
      - name: SEQUENCE
        value: parallel
      - name: DESTINATION_IPS
        value: ""
      - name: DESTINATION_HOSTS
        value: ""
      - name: CONTAINER_RUNTIME
        value: docker
      - name: SOCKET_PATH
        value: /var/run/docker.sock
    labels:
      name: pod-network-loss
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/runtime-api-usage: "true"
---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Injects 100% network packet loss on pods belonging to an app deployment
kind: ChaosExperiment
metadata:
  name: pod-network-partition
  labels:
    app.kubernetes.io/component: kubernetes-chaos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k8s
    app.kubernetes.io/part-of: k8s
    app.kubernetes.io/version: 2.23.0
    helm.sh/chart: kubernetes-chaos-2.23.0
    litmuschaos.io/version: 2.9.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - batch
          - networking.k8s.io
          - litmuschaos.io
        resources:
          - jobs
          - pods
          - pods/log
          - networkpolicies
          - pods/exec
          - events
          - chaosengines
          - chaosexperiments
          - chaosresults
        verbs:
          - get
          - list
          - patch
          - create
          - update
          - delete
          - deletecollection
    image: litmuschaos/go-runner:2.8.0
    imagePullPolicy: Always
    args:
      - -c
      - ./experiments -name pod-network-partition
    command:
      - /bin/bash
    env:
      - name: TOTAL_CHAOS_DURATION
        value: "60"
      - name: RAMP_TIME
        value: ""
      - name: LIB
        value: litmus
      - name: DESTINATION_IPS
        value: ""
      - name: DESTINATION_HOSTS
        value: ""
      - name: POLICY_TYPES
        value: all
      - name: POD_SELECTOR
        value: ""
      - name: NAMESPACE_SELECTOR
        value: ""
      - name: PORTS
        value: ""
    labels:
      name: pod-network-partition
      app.kubernetes.io/part-of: litmus
