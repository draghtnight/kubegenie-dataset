apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-k8s-aws-ebs-tagger
  labels:
    helm.sh/chart: k8s-aws-ebs-tagger-1.2.5
    app.kubernetes.io/name: k8s-aws-ebs-tagger
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.0.8
    app.kubernetes.io/managed-by: Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-k8s-aws-ebs-tagger
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-k8s-aws-ebs-tagger
subjects:
  - kind: ServiceAccount
    name: release-name-k8s-aws-ebs-tagger
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-k8s-aws-ebs-tagger
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-k8s-aws-ebs-tagger
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-k8s-aws-ebs-tagger
subjects:
  - kind: ServiceAccount
    name: release-name-k8s-aws-ebs-tagger
    namespace: default
roleRef:
  kind: Role
  name: release-name-k8s-aws-ebs-tagger
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-k8s-aws-ebs-tagger
  labels:
    helm.sh/chart: k8s-aws-ebs-tagger-1.2.5
    app.kubernetes.io/name: k8s-aws-ebs-tagger
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.0.8
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8000
      targetPort: http
    - name: metrics
      port: 8001
      targetPort: metrics
  selector:
    app.kubernetes.io/name: k8s-aws-ebs-tagger
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-k8s-aws-ebs-tagger
  labels:
    helm.sh/chart: k8s-aws-ebs-tagger-1.2.5
    app.kubernetes.io/name: k8s-aws-ebs-tagger
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.0.8
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-aws-ebs-tagger
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-aws-ebs-tagger
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-k8s-aws-ebs-tagger
      securityContext: {}
      containers:
        - name: k8s-aws-ebs-tagger
          args:
            - --lease-id=$(POD_NAME)
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: ghcr.io/mtougeron/k8s-aws-ebs-tagger:v0.0.8
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: metrics
              containerPort: 8001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
