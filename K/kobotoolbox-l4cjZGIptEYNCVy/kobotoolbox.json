[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-mongodb",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "secrets": [
      {
        "name": "release-name-mongodb"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-mongodb",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "mongodb"
      }
    },
    "type": "Opaque",
    "data": {
      "mongodb-root-password": "a29ibw==",
      "mongodb-password": "a29ibw=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "postgresql-postgres-password": "YWRtaW4=",
      "postgresql-password": "a29ibw=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-rediscache",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app": "rediscache",
        "chart": "rediscache-10.7.17",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "redis-password": "YnJGZFM5YjdYcA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-redismain",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app": "redismain",
        "chart": "redismain-10.7.17",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "redis-password": "YnJGZFM5YjdYcA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-enketo",
      "namespace": "l4cjZGIptEYNCVy"
    },
    "stringData": {
      "config.json": "{\n  \"app name\": \"Enketo Express for KoBo Toolbox\",\n  \"linked form and data server\": {\n    \"name\": \"KoBo Toolbox\",\n    \"server url\": \"\",\n    \"api key\": \"WEHQJCXHJ2XOBXGOGMXCUJYXQP9ZZFVY4FHLCSKJIWAWPTCMGMECGNBCHXVBFCFT1H5TQTQCKB0J7DF2X23WC7EHOCCVQ7K8CY6QO9C8NMERACUM6S2QQEER\"\n  },\n  \"encryption key\": \"w0RkyuQSB33md8cZB5Xx\",\n  \"less secure encryption key\": \"wUNQWPwA3bDVzckKKtS4\",\n  \"widgets\": [\n    \"note\",\n    \"select-desktop\",\n    \"select-mobile\",\n    \"autocomplete\",\n    \"geo\",\n    \"textarea\",\n    \"url\",\n    \"table\",\n    \"radio\",\n    \"date\",\n    \"time\",\n    \"datetime\",\n    \"select-media\",\n    \"file\",\n    \"draw\",\n    \"rank\",\n    \"likert\",\n    \"range\",\n    \"columns\",\n    \"image-view\",\n    \"comment\",\n    \"image-map\",\n    \"date-native\",\n    \"date-native-ios\",\n    \"date-mobile\",\n    \"text-max\",\n    \"text-print\",\n    \"rating\",\n    \"thousands-sep\"\n  ],\n  \"redis\": {\n    \"cache\": {\n      \"host\": \"release-name-rediscache-master\",\n      \"password\": \"brFdS9b7Xp\",\n      \"port\": \"6379\"\n    },\n    \"main\": {\n      \"host\": \"release-name-redismain-master\",\n      \"password\": \"brFdS9b7Xp\",\n      \"port\": \"6379\"\n    }\n  },\n  \"google\": {\n    \"api key\": \"\",\n    \"analytics\": {\n      \"ua\": \"\",\n      \"domain\": \"http://ee.example.com\"\n    }\n  },\n  \"payload limit\": \"1mb\",\n  \"text field character limit\": 1000000,\n  \"maps\": [\n    {\n      \"name\": \"humanitarian\",\n      \"tiles\": [ \"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\" ],\n      \"attribution\": \"&copy; <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap</a> & <a href=\\\"https://www.hotosm.org/updates/2013-09-29_a_new_window_on_openstreetmap_data\\\">Yohan Boniface & Humanitarian OpenStreetMap Team</a> | <a href=\\\"https://www.openstreetmap.org/copyright\\\">Terms</a>\"\n    },\n    {\n      \"name\": \"satellite\",\n      \"tiles\": [ \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\" ],\n      \"attribution\": \"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n    },\n    {\n      \"name\": \"terrain\",\n      \"tiles\": [ \"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\" ],\n      \"attribution\": \"&copy; <a href=\\\"https://openstreetmap.org\\\">OpenStreetMap</a> | <a href=\\\"https://www.openstreetmap.org/copyright\\\">Terms</a>\"\n    },\n    {\n      \"name\": \"streets\",\n      \"tiles\": [ \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" ],\n      \"attribution\": \"&copy; <a href=\\\"https://openstreetmap.org\\\">OpenStreetMap</a> | <a href=\\\"https://www.openstreetmap.org/copyright\\\">Terms</a>\"\n    }\n  ]\n}"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-secrets",
      "namespace": "l4cjZGIptEYNCVy"
    },
    "data": {
      "ENKETO_API_KEY": "V0VIUUpDWEhKMlhPQlhHT0dNWENVSllYUVA5WlpGVlk0RkhMQ1NLSklXQVdQVENNR01FQ0dOQkNIWFZCRkNGVDFINVRRVFFDS0IwSjdERjJYMjNXQzdFSE9DQ1ZRN0s4Q1k2UU85QzhOTUVSQUNVTTZTMlFRRUVS",
      "ENKETO_API_TOKEN": "V0VIUUpDWEhKMlhPQlhHT0dNWENVSllYUVA5WlpGVlk0RkhMQ1NLSklXQVdQVENNR01FQ0dOQkNIWFZCRkNGVDFINVRRVFFDS0IwSjdERjJYMjNXQzdFSE9DQ1ZRN0s4Q1k2UU85QzhOTUVSQUNVTTZTMlFRRUVS",
      "ENKETO_LINKED_FORM_AND_DATA_SERVER_API_KEY": "V0VIUUpDWEhKMlhPQlhHT0dNWENVSllYUVA5WlpGVlk0RkhMQ1NLSklXQVdQVENNR01FQ0dOQkNIWFZCRkNGVDFINVRRVFFDS0IwSjdERjJYMjNXQzdFSE9DQ1ZRN0s4Q1k2UU85QzhOTUVSQUNVTTZTMlFRRUVS",
      "ENKETO_ENCRYPTION_KEY": "dzBSa3l1UVNCMzNtZDhjWkI1WHg=",
      "DJANGO_SECRET_KEY": "RUtNdlJ0VDJSRkIzeER2RnR5NFNWQ3NUeWFRQUhTOWFBMm1rUnF0VHA5elFZejQ4ZnA=",
      "KOBO_SUPERUSER_PASSWORD": "a29ibw==",
      "MONGO_INITDB_ROOT_PASSWORD": "a29ibw==",
      "KOBO_MONGO_PASSWORD": "a29ibw==",
      "KOBOCAT_MONGO_PASS": "a29ibw==",
      "KPI_MONGO_PASS": "a29ibw==",
      "postgresPostgresPassword": "a29ibw==",
      "POSTGRES_PASSWORD": "a29ibw==",
      "KC_DATABASE_URL": "cG9zdGdpczovL3Bvc3RncmVzOmtvYm9AcmVsZWFzZS1uYW1lLXBvc3RncmVzcWw6NTQzMi9rb2JvY2F0",
      "KPI_DATABASE_URL": "cG9zdGdpczovL3Bvc3RncmVzOmtvYm9AcmVsZWFzZS1uYW1lLXBvc3RncmVzcWw6NTQzMi9rb2JvZm9ybQ==",
      "KPI_URL": "cG9zdGdpczovL3Bvc3RncmVzOmtvYm9AcmVsZWFzZS1uYW1lLXBvc3RncmVzcWw6NTQzMi9rb2JvZm9ybQ==",
      "EMAIL_HOST_PASSWORD": "",
      "REDIS_PASSWORD": "YnJGZFM5YjdYcA==",
      "REDIS_SESSION_URL": "cmVkaXM6Ly86YnJGZFM5YjdYcEByZWxlYXNlLW5hbWUtcmVkaXNjYWNoZS1tYXN0ZXI6NjM3OS8y",
      "REDIS_LOCK_URL": "cmVkaXM6Ly86YnJGZFM5YjdYcEByZWxlYXNlLW5hbWUtcmVkaXNjYWNoZS1tYXN0ZXI6NjM3OS8z",
      "KOBOCAT_BROKER_URL": "cmVkaXM6Ly86YnJGZFM5YjdYcEByZWxlYXNlLW5hbWUtcmVkaXNtYWluLW1hc3Rlcjo2Mzc5LzI=",
      "KPI_BROKER_URL": "cmVkaXM6Ly86YnJGZFM5YjdYcEByZWxlYXNlLW5hbWUtcmVkaXNtYWluLW1hc3Rlcjo2Mzc5LzE="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-mongodb-init-scripts",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "mongodb"
      }
    },
    "data": {
      "create-user.js": "db.createUser({\n  user: \"kobo\",\n  pwd: \"kobo\",\n  roles: [ { role: 'readWrite', db: \"formhub\" } ]\n})\n",
      "index.js": "db.getSiblingDB('formhub').instances.createIndex( { _userform_id: 1 } )\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-rediscache",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app": "rediscache",
        "chart": "rediscache-10.7.17",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "redis.conf": "# User-supplied configuration:\n# Enable AOF https://redis.io/topics/persistence#append-only-file\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"",
      "master.conf": "dir /data\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"",
      "replica.conf": "dir /data\nslave-read-only yes\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-rediscache-health",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app": "rediscache",
        "chart": "rediscache-10.7.17",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "ping_readiness_local.sh": "#!/bin/bash\nno_auth_warning=$([[ \"$(redis-cli --version)\" =~ (redis-cli 5.*) ]] && echo --no-auth-warning)\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -a $REDIS_PASSWORD $no_auth_warning \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_local.sh": "#!/bin/bash\nno_auth_warning=$([[ \"$(redis-cli --version)\" =~ (redis-cli 5.*) ]] && echo --no-auth-warning)\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -a $REDIS_PASSWORD $no_auth_warning \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_master.sh": "#!/bin/bash\nno_auth_warning=$([[ \"$(redis-cli --version)\" =~ (redis-cli 5.*) ]] && echo --no-auth-warning)\n response=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -a $REDIS_MASTER_PASSWORD $no_auth_warning \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_master.sh": "#!/bin/bash\nno_auth_warning=$([[ \"$(redis-cli --version)\" =~ (redis-cli 5.*) ]] && echo --no-auth-warning)\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -a $REDIS_MASTER_PASSWORD $no_auth_warning \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redismain",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app": "redismain",
        "chart": "redismain-10.7.17",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "redis.conf": "# User-supplied configuration:\n# Enable AOF https://redis.io/topics/persistence#append-only-file\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"",
      "master.conf": "dir /data\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"",
      "replica.conf": "dir /data\nslave-read-only yes\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redismain-health",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app": "redismain",
        "chart": "redismain-10.7.17",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "ping_readiness_local.sh": "#!/bin/bash\nno_auth_warning=$([[ \"$(redis-cli --version)\" =~ (redis-cli 5.*) ]] && echo --no-auth-warning)\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -a $REDIS_PASSWORD $no_auth_warning \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_local.sh": "#!/bin/bash\nno_auth_warning=$([[ \"$(redis-cli --version)\" =~ (redis-cli 5.*) ]] && echo --no-auth-warning)\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -a $REDIS_PASSWORD $no_auth_warning \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_master.sh": "#!/bin/bash\nno_auth_warning=$([[ \"$(redis-cli --version)\" =~ (redis-cli 5.*) ]] && echo --no-auth-warning)\n response=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -a $REDIS_MASTER_PASSWORD $no_auth_warning \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_master.sh": "#!/bin/bash\nno_auth_warning=$([[ \"$(redis-cli --version)\" =~ (redis-cli 5.*) ]] && echo --no-auth-warning)\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -a $REDIS_MASTER_PASSWORD $no_auth_warning \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-assets",
      "namespace": "l4cjZGIptEYNCVy"
    },
    "binaryData": {
      "favicon.ico": "",
      "icon_180x180.png": "iVBORw0KGgoAAAANSUhEUgAAALQAAAC0CAYAAAA9zQYyAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsSAAALEgHS3X78AAAAB3RJTUUH4AMfDScxFomtNwAAD+hJREFUeNrtnW2QHMV5gJ/u2d3b+z7d6RsdtiRAfElgQwgBBAFTgOOisBPswsSk8lGYHymSciVOftlVpir8CAlRAnEcpZJUTEwMSRljBI6xnaIA23wIJPMpEJIAgZD1cbrTne72dne686Nn7lYnnaST7q7net6namuvBrT7Tvez77zd0zOjyAhrv/rgxE0RYAALdAM3ANcDq4ElQCfQ7DvuABkGBoCPgFeAHyWvA4ACNBA3/oNn7rnVd8xjKN8BwBEyNzbaYuArwG04iW1WYs4Zu4AHgHXAbg5PNkB2pPYuxzFk/gPgb3DZ2Ta8VMNLmBkma+8+4M+BfyejUmvfATTQKOg/A/8GdAF1XKNpXCNqROaZJk0saXtbXD904fpl/YT/NzN4DeYo2dkC3wFuBWqMN6iQDUzyKgDfBb7IeL8B/rN0VmSJcI1yD+MyFzMUn+DQOJlrwC3A3+L6LfIdWIq3DN2QnSNczfwZYEPyt5QV2cbiMnUE3AT8gPF+9JqlfWdAlTRCM3B3wzaROds09tHdQAuuH733m2+h0+//IrCG8ewsZB+NGyieh+s/yEDp4Vsek7z/nu+GEE6KNCOn/Ref7AdNFz6FTqeDVgKXZCAeYeqk/XUJcBbj06veA/L53Z/E1dCZqMGEKZGOgcrAJxq2eSMLGXFV8m5P6VMEX6T9dm7ynnuhF/kOQJgWMtGPWRB6nu8AhGlh2HcAkA2hC74DEKaFqu8AIBtCS+0cBllwKRNByMxGGGQiMWVBaEGYNkRoIShEaCEoRGghKERoIShEaCEoRGghKERoIShEaCEoRGghKERoIShEaCEoRGghKERoIShEaCEoRGghKERoIShEaCEoRGghKERoIShEaCEoRGghKERoISjkrkWToBQo1NhdQ3zePMQ2/GGx2EzcASObiNANKAVaKayFemyoxTGxMZkQSCmItKYYaQoFjQKMsdm4u0uGEKETIq2oxYbBSpVIa7o7yizqaqWno5lyMUJ5TNHWQqUWs//gCL86cIj9gxWMMbSUixQjTWxE65TcC62VwlhL/6FR5nc0c8NFy7lqdS/n9PbQ015G+TR5AtZa9h+s8MbO/Tz16vs8/eoH9A2O0N5SQuH2I+/kWuhIK0aqdbRS3HbNeXzp6nNZ2NWCtYxlZJvUrb5RKJRSzO9sZm3HMq48fxm7bzjEt3/6Oo/8fCsA5VKU+2ydW6EjrRgcqfHxhR18/dbLWLN8AdaO16UaUEqNDw4zgrUWY90gdVFXK39x8yV86sKPcdeDP2dX3xBt5WKupc7ltJ2TucqFKxaw/k+uZ83yBcTGYrForYi0ylSp0YhSLj6tFBZLbCwXnbGIf/nT6zmnt4fBkRqRzmbss0HuhNZacahS49ze+dx7+zV0t5eJjR2TZC6hE7ljY1nY2cK6L1/DyiVdDI/W0TmVOldCKwW1uqGrtcw3brucjpbSmMxzmVTq7vYyd33pclqaisSx8Toz44tcCa2VolKtc8dvXcDyRZ3Exsx5mVOc1IZVy7r5o+tWc6hSm3NHnOkgN0JrpRgerbNm+QJuuvQMwJ2oCAmd7M/NV5zF2b09jFTrmR0LzFgb+A5gtlAKarHhty87i0KgJyMUEBtLuVTgpkvPoFqLCeQAdMLkQmiloFqPWTKvlSvOO83teKCZKxX4qtW99HQ0U4tNhiYdZ2H/fQcwGyilqNRizj29h3ltZYy1wQ6YlFJYa1k8r5VVy7oZrca5KjvyITQQx5aze3sAMrHYaCZJq6lVp3VTz9lsRy6EBncoXjKv1XcYs8qS7nztL+REaGshijRtzSXfocwqbc0ldKQysBJl9siF0ODKjhwdeZN9ztIqlNkht4uTpgtj3RUkinSF3lQUsslqvvGLC6aXPOVmhwh9EljcqjytkvUfJ+2hOmzAZq37gWidv8w6XYjQU8RYi8KdajbW8s6ufjZv38O2j/rZ2z/MSLV+wp/V3FRgUVcrK5Z0ceGKhaxY1Emk3bSbIdy58plEhJ4CxrjsWasbfrxpB4/8Yitv7tzPoUoNhVvJN5U5X2vt2BnLtnKRc3p7+NxlZ3LthR+nWNBj3yecOCL0CZKuyntlx17+7vsb2bx9D8VIUy4V6GptApKKdSpla0O1EhvL5u172Lh1Nw8/8xZf+ezFrFm+QKSeIrmZ5TgVTCLzw89s4Y77nuT19/bR1dpES1MRcDLGxmKMxdgpvJJ/l2bplqYina1NvP7ePu6470kefmYLWitMgOtOZgrJ0MchHaT9649e4b7HNtHRUqKsZ+baPZNMebQml1Hd/dDzDByqcvsNa1wcUlMfF8nQxyCdyfjez97m/g2b6GptQik14yv1YmNRStHV1sQ3N2zif559212dLpn6uIjQk5Bm5i0797Pu0ZdoK5ewuIHcbGCT+e225hJ//+hG3nh/vys/Ql+IcoqI0JOQzgT/44ZNDI/WKERq1mROsdZSiNytFu5/7GVApvKOhwh9FIxxy0uffeNDnnvrI9qaS94uCIiNpa25xItv7+bp13aOxSccHRH6aCRJcMPz25zcvuMBDJbHnt/mwstCQBlFhJ6Ate6wvn9whF/u2EO5VPBet1pjaS4WeOXdvewZGB5bxC8ciQg9gVTerR8eYN/BEYqR9n5BgAUKkabvYIWtHx5I4vTcUBlFhJ6Ed/cczNTVHkpBbAzv7hnwHUqmEaEnoW9wJBO1cyMW2Dcw4juMTCNCT8LBQ1XfIRyVKJIuOxbSOpNQjWPfIRyVpkLkO4RMI0JPQlaX2MvsxrERoeca2fydZQYRWggKEVoIChFaCAoRWggKEVoIChFaCAoRWggKEVoIChFaCAoRWggKEVoIChFaCAoRWggKEVoIChFaCAoRWggKEVoIChFaCAoRWggKEVoIChFaCAoRWggKEVoIChFaCAoRWggKEVoIChFaCAoReq4h92o8JiL0JLSWi75DOCrDozXfIWQaEXoSOlpKvkM4AgWUS/I062MhQk/Cku62TB7dl/a0+w4h04jQE0gfErRicSetTUVvD9yciLGWcqnAyiWdh8UpHI4IPQGVmHLm0nn0LuygWo/HtvmMabQWc/qCDs5a2n1YnMLhiNATULjHERcizW+u7qVSjb0/X1srxWg15srVyygWNHFGnm6bRUToo6ATW2789ZXM72imFsfeDvEKqMcx3e1lbrr0zMPiE45EhD4KSimMsSztbuMLV65iaKRKpP00VRRpBkeqfH7tKk7raXPPHpdyY1JE6ElQSRr8/WvP56IzFzNwaJTCLD8jsBBpDg6P8smVi/jD61YfFpdwdEToSVC4R6iVChHf+N3LWdrTxtBIddakLkSaoZEqi+e1cddtV1AqRBgrtfPxEKGPgVIKYy3L5rez7svXsLSnjf6hCoVIz9hhXylFIdL0D1VY2tPGujuuYdn8doy13gencwER+jjopJ5euaSL9Xdez9rze+kbrFCtxURaobU65QGjUqC1ItKKai2mb7DC2vN7WX/n9ZyxpAtjROYTRc6jngBau0y9sKuFe2+/mg0vbOPbP32dHbv70VpRKkQUIu3knsLnWsAYS61uGK3FWGDFok5u+9R53HjJyrHv1VI3nzAi9AmilcJai1Jw06VncO2FH+Pp13byf798ny0f9HFgqMKh4dqUTpcroKWpwPzOZs5e1sPVa07nqtXLaGkqYqzFSpkxZUToKaCUy8DGWFrLRT598Qo+ffEKBkeqfLBvkANDFUZG65gTeB63VormpiLd7WWWzW+nrWF1nzGSlU8WEfok0FphrVtfoRS0N5c4p7fnlD7TZWQnush88ojQJ4lSECXlgLVgcUKezOcolCstxONTJl9Cz5AwqZSZEzKH9Xc+pu2UO6TX6sZ3JLNKrR5jbPZ+ZzNJLoR2C3ws/UMV36HMKgeGKhiTrx9xLoQGt0Jt2+5+IPyMlVYa23cPoD0tqvJFLvbWWrc24s3397u53YBnESxupqRaj3nrgz5KBU1GLrqZFXIhdHr50tZdB9jyQd/YthCxyX69/t4+dvxqgKZiNLYtD+RCaIBIK4YqNX64cQfASU2xzQXS/Xrixe2MZuBqm9kmN0KnZ/d+uHE7O/cOEiXrJELCWEukFVt3HeDHm96jtVzE5KneIEdCW6AYafoGK3zric1uW0B93bgr//T4ZoYqVaJIZfJWDDNJboQGd/Fre0uJ/31pBw89vYVIK+pxGNNacWzQSvEfP3mNp17dSXtzKXfZGXImNIBNSo91j77ETza/RyHSxMbM2fLDWDt2lfrjL2znm49vpr2cnfuJzDb5OvWNOzQrpShoxdceeJbBkSqf+40zsYkYSjEnBlKHL2aCh57ewr2PbKRUjJLrx3xH6IfcCQ0kc9GaorL81Xd/was79vLHN36CnvZmbPLf0wSXJbfTg4hW7kepFewdGOYffvAyT7y4ndZyEZWs284ruRQaGFus31Yu8f3n3uG5Lbv4nStW8ZlfW8Hiea1EGRJ5jIaYdvUNseGFbXzvZ2+zd2CE9pYS1thcyww5FhrGl312tpQYGK5y/2Mv8+BTb3DB8oVcsGIhKxZ1sqCzBa1hpJrcbGY2fUm+r1wqYIxlz8AwO3b3s3n7Hl7ZsZe+oQotTUU6Wkq5rZknkmuhU9ygStHV2sRoLR67tKpU0MkV3mAMfhaB2PSCAks9NlTrhkKkaC4V6GptGhsUCg4ROsFaiK0lUoq25lJyXw5XmligEPmNTeEuxm0tu4OENSLy0RChJ5DKcsR2z+6kg9W8zl6cKLmbhxbCRoQWgkKEFoJChBaCQoQWgkKEFoJChBaCQoQWgkKEFoJChBaCQoQWgkKEFoJChBaCQoQWgkKEFoJChBaCQoQWgkKEFoJChBaCQoQWgkKEFoIiC0LLdcxhkIl7TWVB6Ew0hHDKZOK+xFkQuu47AGFaKPkOALIhdL/vAIRpocV3AJANoff6DkCYFjLRj1kQ+q3kXWrpuUnab28m714H+T6FTgcRm4AKEPluDGHKWFy/VYHNDdu84VtohcvQLzVsE+YOqbwvAW/g+tNrH/ouOdKb1H4neZcMPbdI5X0gefd402GHb6Hj5P0/cZm6gGTpuYLB9dc7uP6D8f70hm+h0xpsEPhawzYh+6SJ5+u4/svEGMib0M/cc2v6Z5zE8d/At5KGqfluGOGY1HDZeT3wX7j+i+GwfvWC7wydkv6y7wQeA4q4RvP+ixcOw+L6pQg8juuvdHsm8Cp0w6/Z4kbIdeALwEO4RjPJtsw0WE6xjPdDEdc/N+Om68aeDeY7O0N2MjSMS10FbgH+LPk7fQ6MwR3WRO7ZweLaO62VC8Aorl9uYYLMWSETZ+fWfvXBiTGlNdlK4C+BzwNdjEsvzA5pe/fjsvJfA9tx4xxDg8xZyM6QITkmkTpttGXAZ4HrgPOApUDZd8wBMwLsAl4DngQeBT7kyH4BsiMzwP8D4JdJ9UGqOnQAAAAldEVYdGRhdGU6Y3JlYXRlADIwMTYtMDMtMzFUMTM6Mzk6NDktMDQ6MDBb97bjAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE2LTAzLTMxVDEzOjM5OjQ5LTA0OjAwKqoOXwAAAABJRU5ErkJggg=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-kobo",
      "namespace": "l4cjZGIptEYNCVy"
    },
    "data": {
      "kpi_uwsgi.ini": "[uwsgi]\n\n# directory structure\nchdir       = $(KPI_SRC_DIR)\n# logto       = $(KPI_LOGS_DIR)/uwsgi.log\n\n# Run the application at a non-root URL path, e.g. http://hostname/KPI_PREFIX.\n# See http://uwsgi-docs.readthedocs.org/en/latest/Nginx.html#hosting-multiple-apps-in-the-same-process-aka-managing-script-name-and-path-info\n# This supersedes `wsgi-file = $(KPI_SRC_DIR)/kobo/wsgi.py`.\nmanage-script-name = true\nmount              = $(KPI_PREFIX)=$(KPI_SRC_DIR)/kobo/wsgi.py\n\n\n# process related settings\nmaster              = true\nharakiri            = $(KPI_UWSGI_HARAKIRI)\nworker-reload-mercy = $(KPI_UWSGI_WORKER_RELOAD_MERCY)\n\n# monitoring (use with `uwsgitop :1717`, for example)\nstats = :1818\nmemory-report = true\n\n# Overrideable default of 2 uWSGI processes.\nif-env = KPI_UWSGI_WORKERS_COUNT\nworkers = %(_)\nendif =\nif-not-env = KPI_UWSGI_WORKERS_COUNT\nworkers = 2\nendif =\n\n# activate cheaper mode\nif-env = KPI_UWSGI_CHEAPER_WORKERS_COUNT\ncheaper-algo = spare\ncheaper = %(_)\ncheaper-initial = %(_)\ncheaper-step = 2\ncheaper-overload = 1\nendif =\n\n# stop spawning new workers if total memory consumption grows too large\nif-env = KPI_UWSGI_CHEAPER_RSS_LIMIT_SOFT\ncheaper-rss-limit-soft = %(_)\nendif =\nif-not-env = KPI_UWSGI_CHEAPER_RSS_LIMIT_SOFT\ncheaper-rss-limit-soft = %(2 * 1024 * 1024 * 1024)\nendif =\n\n# respawn processes after serving KPI_UWSGI_MAX_REQUESTS requests (default 5000)\nif-env = KPI_UWSGI_MAX_REQUESTS\nmax-requests = %(_)\nendif =\n\n# respawn workers when their memory consumption grows too large\nif-env = KPI_UWSGI_RELOAD_ON_RSS_MB\nreload-on-rss = %(_)\nendif =\nif-not-env = KPI_UWSGI_RELOAD_ON_RSS_MB\nreload-on-rss = 512\nendif =\n\nsocket          = 0.0.0.0:8003\nbuffer-size     = 32768\nlisten          = @(/proc/sys/net/core/somaxconn)\n\n#uid             = wsgi\n#gid             = wsgi\ndie-on-term     = true\n\n# uWSGI does not pass locale information to the application by default\nenv = LC_ALL=en_US.UTF-8\n\n# Required for Raven/Sentry\nenable-threads  = true\n",
      "kc_uwsgi.ini": "[uwsgi]\n\n# directory structure\nchdir           = $(KOBOCAT_SRC_DIR)\nmodule          = onadata.apps.main.wsgi\n# logto           = $(KOBOCAT_LOGS_DIR)/uwsgi.log\n\n# process related settings\nmaster              = true\nharakiri            = $(KC_UWSGI_HARAKIRI)\nworker-reload-mercy = $(KC_UWSGI_WORKER_RELOAD_MERCY)\n\n# monitoring (use with `uwsgitop :1717`, for example)\nstats = :1717\nmemory-report = true\n\n# Overrideable default of 2 uWSGI processes.\nif-env = KC_UWSGI_WORKERS_COUNT\nworkers = %(_)\nendif =\nif-not-env = KC_UWSGI_WORKERS_COUNT\nworkers = 2\nendif =\n\n# activate cheaper mode\nif-env = KC_UWSGI_CHEAPER_WORKERS_COUNT\ncheaper-algo = spare\ncheaper = %(_)\ncheaper-initial = %(_)\ncheaper-step = 2\ncheaper-overload = 1\nendif =\n\n# stop spawning new workers if total memory consumption grows too large\nif-env = KC_UWSGI_CHEAPER_RSS_LIMIT_SOFT\ncheaper-rss-limit-soft = %(_)\nendif =\nif-not-env = KC_UWSGI_CHEAPER_RSS_LIMIT_SOFT\ncheaper-rss-limit-soft = %(2 * 1024 * 1024 * 1024)\nendif =\n\n# respawn processes after serving KC_UWSGI_MAX_REQUESTS requests (default 5000)\nif-env = KC_UWSGI_MAX_REQUESTS\nmax-requests = %(_)\nendif =\n\n# respawn individual workers when their memory consumption grows too large\nif-env = KC_UWSGI_RELOAD_ON_RSS_MB\nreload-on-rss = %(_)\nendif =\nif-not-env = KC_UWSGI_RELOAD_ON_RSS_MB\nreload-on-rss = 512\nendif =\n\nsocket          = 0.0.0.0:8001\nbuffer-size     = 32768\nlisten          = @(/proc/sys/net/core/somaxconn)\n\nuid             = $(UWSGI_USER)\ngid             = $(UWSGI_GROUP)\ndie-on-term     = true\n\n# Required for Raven/Sentry\nenable-threads  = true\n",
      "empty_script": "#!/bin/bash\nset -e\necho Skipping $0\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-postgres-init",
      "namespace": "l4cjZGIptEYNCVy"
    },
    "data": {
      "init.sql": "ALTER USER \"postgres\" WITH SUPERUSER;\nCREATE DATABASE \"kobocat\" OWNER \"postgres\";\n\\c \"kobocat\"\nCREATE EXTENSION IF NOT EXISTS postgis;\nCREATE EXTENSION IF NOT EXISTS postgis_topology;\nCREATE EXTENSION IF NOT EXISTS fuzzystrmatch;\nCREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\nCREATE DATABASE \"koboform\" OWNER \"postgres\";\n\\c \"koboform\"\nCREATE EXTENSION IF NOT EXISTS postgis;\nCREATE EXTENSION IF NOT EXISTS postgis_topology;\nCREATE EXTENSION IF NOT EXISTS fuzzystrmatch;\nCREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-nginx-confd",
      "namespace": "l4cjZGIptEYNCVy"
    },
    "data": {
      "default.conf": "charset     utf-8;\ngzip on;\ngzip_disable \"msie6\";\n\n# TODO: explore if we can use paths instead of subdomains...?\n\n# Default configuration\nserver {\n  listen 80 default_server;\n  listen [::]:80 default_server;\n\n  root /var/www/html;\n\n  # Add index.php to the list if you are using PHP\n  index index.html index.htm index.nginx-debian.html;\n\n  server_name $hostname;\n\n  location / {\n    # return empty response\n    return 204;\n  }\n\n  # Proxy ELB status\n  location ~ /elb/([^/]*)/(.*)$ {\n    resolver 127.0.0.1;\n    proxy_pass http://127.0.0.1/$2;\n    proxy_set_header Host $1;\n    proxy_intercept_errors on;\n    access_log  off;\n  }\n}\n\n# KoBoCAT HTTP.\nserver {\n  listen      80;\n  server_name kc.kobo.local kc.docker.internal kc.example.com;\n\n  # Allow 100M upload\n  client_max_body_size 100M;\n  # Support bigger headers. Useful for huge cookies\n  large_client_header_buffers 8 16k;\n\n  location / {\n    uwsgi_read_timeout 130;\n    uwsgi_send_timeout 130;\n    uwsgi_pass localhost:8001;\n    # For setting HTTP headers, see http://stackoverflow.com/a/14133533/1877326.\n    uwsgi_param HTTP_X_REAL_IP $remote_addr;\n    uwsgi_param HTTP_X_FORWARDED_FOR $remote_addr;\n    # uwsgi_param HTTP_X_FORWARDED_PROTO $scheme;\n    include /etc/nginx/uwsgi_params;\n\n    # Support longer query strings. See issue #147\n    uwsgi_buffers 8 16k;\n    uwsgi_buffer_size 16k;\n  }\n\n  location /static {\n    alias /srv/www/kobocat;\n  }\n\n  # media files\n  location /protected/ {\n    internal;\n    alias /media/;\n  }\n}\n\n# KoBoForm HTTP.\nserver {\n  listen      80;\n  server_name kobo.kobo.local kobo.docker.internal kobo.example.com;\n\n  # Allow 100M upload\n  client_max_body_size 100M;\n  # Support bigger headers. Useful for huge cookies\n  large_client_header_buffers 8 16k;\n\n  location ~ ^/forms/(.*) {\n    return 301 /$1;\n  }\n\n  location /static {\n    alias /srv/www/kpi;\n\n    # gzip configs from here\n    # http://stackoverflow.com/a/12644530/3088435\n    gzip on;\n    gzip_disable \"msie6\";\n    gzip_comp_level 6;\n    gzip_min_length 1100;\n    gzip_buffers 16 8k;\n    gzip_proxied any;\n    gzip_types\n      text/plain\n      text/css\n      text/js\n      text/xml\n      text/javascript\n      application/javascript\n      application/x-javascript\n      application/json\n      application/xml\n      application/xml+rss;\n  }\n\n  # public media, e.g. custom logos (KPI `ConfigurationFile`s)\n  location /media/__public {\n      alias /srv/kpi_media/__public;\n  }\n\n  error_page 418 = /static/html/Offline.html;\n\n  location / {\n    uwsgi_read_timeout 130;\n    uwsgi_send_timeout 130;\n    uwsgi_pass localhost:8003;\n    # For setting HTTP headers, see http://stackoverflow.com/a/14133533/1877326.\n    uwsgi_param HTTP_X_REAL_IP $remote_addr;\n    uwsgi_param HTTP_X_FORWARDED_FOR $remote_addr;\n    # uwsgi_param HTTP_X_FORWARDED_PROTO $scheme;\n    include /etc/nginx/uwsgi_params;\n\n    # Support longer query strings. See issue #147\n    uwsgi_buffers 8 16k;\n    uwsgi_buffer_size 16k;\n  }\n}\n"
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-mongodb",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "mongodb"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "8Gi"
        }
      },
      "storageClassName": "standard"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "name": "release-name-kobo-media",
      "namespace": "default"
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "storageClassName": "standard",
      "resources": {
        "requests": {
          "storage": "10Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-mongodb",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "mongodb"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "mongodb",
          "port": 27017,
          "targetPort": "mongodb",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "mongodb",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "mongodb"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql-headless",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "publishNotReadyAddresses": true,
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name",
        "role": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-rediscache-headless",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app": "rediscache",
        "chart": "rediscache-10.7.17",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "rediscache",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-rediscache-master",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app": "rediscache",
        "chart": "rediscache-10.7.17",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "rediscache",
        "release": "release-name",
        "role": "master"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redismain-headless",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app": "redismain",
        "chart": "redismain-10.7.17",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "redismain",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redismain-master",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app": "redismain",
        "chart": "redismain-10.7.17",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "redismain",
        "release": "release-name",
        "role": "master"
      }
    }
  },
  {
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-enketo",
      "namespace": "l4cjZGIptEYNCVy"
    },
    "spec": {
      "selector": {
        "org.kobotoolbox.instance": "release-name-enketo"
      },
      "ports": [
        {
          "targetPort": 8005,
          "port": 8005,
          "name": "enketo"
        }
      ],
      "type": "ClusterIP"
    }
  },
  {
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-kobo",
      "namespace": "l4cjZGIptEYNCVy"
    },
    "spec": {
      "selector": {
        "org.kobotoolbox.instance": "release-name-kobo"
      },
      "ports": [
        {
          "targetPort": 80,
          "port": 80,
          "name": "www"
        },
        {
          "targetPort": 8003,
          "port": 8003,
          "name": "kpi"
        },
        {
          "targetPort": 8001,
          "port": 8001,
          "name": "kobocat"
        }
      ],
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-mongodb",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "mongodb"
      }
    },
    "spec": {
      "strategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "mongodb",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "mongodb"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "mongodb",
            "helm.sh/chart": "mongodb-10.1.4",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "mongodb"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-mongodb",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "mongodb",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "mongodb"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001,
            "sysctls": []
          },
          "containers": [
            {
              "name": "mongodb",
              "image": "docker.io/bitnami/mongodb:4.4.2-debian-10-r0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 10226,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "MONGODB_USERNAME",
                  "value": "kobo"
                },
                {
                  "name": "MONGODB_DATABASE",
                  "value": "formhub"
                },
                {
                  "name": "MONGODB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-mongodb",
                      "key": "mongodb-password"
                    }
                  }
                },
                {
                  "name": "MONGODB_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-mongodb",
                      "key": "mongodb-root-password"
                    }
                  }
                },
                {
                  "name": "ALLOW_EMPTY_PASSWORD",
                  "value": "no"
                },
                {
                  "name": "MONGODB_SYSTEM_LOG_VERBOSITY",
                  "value": "0"
                },
                {
                  "name": "MONGODB_DISABLE_SYSTEM_LOG",
                  "value": "no"
                },
                {
                  "name": "MONGODB_ENABLE_IPV6",
                  "value": "no"
                },
                {
                  "name": "MONGODB_ENABLE_DIRECTORY_PER_DB",
                  "value": "no"
                }
              ],
              "ports": [
                {
                  "name": "mongodb",
                  "containerPort": 27017
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "mongo",
                    "--eval",
                    "db.adminCommand('ping')"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "mongo",
                    "--eval",
                    "db.adminCommand('ping')"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "datadir",
                  "mountPath": "/bitnami/mongodb",
                  "subPath": null
                },
                {
                  "name": "custom-init-scripts",
                  "mountPath": "/docker-entrypoint-initdb.d"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "custom-init-scripts",
              "configMap": {
                "name": "release-name-mongodb-init-scripts"
              }
            },
            {
              "name": "datadir",
              "persistentVolumeClaim": {
                "claimName": "release-name-mongodb"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-enketo",
      "namespace": "l4cjZGIptEYNCVy"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "org.kobotoolbox.instance": "release-name-enketo"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "a5e50a96a695355e5cc94e2fc0cb24860e105e2b889d5fa5e53cb3ed205a6dd8"
          },
          "labels": {
            "org.kobotoolbox.instance": "release-name-enketo"
          }
        },
        "spec": {
          "initContainers": [
            {
              "name": "copy-config",
              "image": "busybox",
              "command": [
                "sh",
                "-c",
                "cp /config-init/config.json /srv/src/enketo_express/config/\n"
              ],
              "volumeMounts": [
                {
                  "name": "enketo-config",
                  "mountPath": "/config-init/config.json",
                  "subPath": "config.json",
                  "readOnly": true
                },
                {
                  "name": "cache-volume",
                  "subPath": "config",
                  "mountPath": "/srv/src/enketo_express/config"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "enketo",
              "image": "enketo/enketo-express:3.0.4",
              "terminationMessagePolicy": "FallbackToLogsOnError",
              "volumeMounts": [
                {
                  "name": "cache-volume",
                  "subPath": "config/config.json",
                  "mountPath": "/srv/src/enketo_express/config/config.json"
                },
                {
                  "name": "kobo-assets",
                  "mountPath": "/srv/src/enketo_express/public/images/favicon.ico",
                  "subPath": "favicon.ico",
                  "readOnly": true
                },
                {
                  "name": "kobo-assets",
                  "mountPath": "/srv/src/enketo_express/public/images/icon_180x180.png",
                  "subPath": "icon_180x180.png",
                  "readOnly": true
                }
              ],
              "ports": [
                {
                  "containerPort": 8005
                }
              ],
              "env": [
                {
                  "name": "ENKETO_BUILD_IE11",
                  "value": "true"
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 8005
                },
                "initialDelaySeconds": 600,
                "periodSeconds": 20
              }
            }
          ],
          "volumes": [
            {
              "name": "enketo-config",
              "secret": {
                "secretName": "release-name-enketo"
              }
            },
            {
              "name": "kobo-assets",
              "configMap": {
                "name": "release-name-assets"
              }
            },
            {
              "name": "cache-volume",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-kobo",
      "namespace": "l4cjZGIptEYNCVy"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "org.kobotoolbox.instance": "release-name-kobo"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "7a53b295ab7e3e12ad3ce50eeadda05d399592df076230ff31fc8ff212e87e70",
            "checksum/nginx_conf": "cab3523095bd22b81ba5b0d79beda50b3dc57b221ce8e7eeb84e04b78b449408",
            "co.elastic.logs/enabled": "true"
          },
          "labels": {
            "org.kobotoolbox.instance": "release-name-kobo"
          }
        },
        "spec": {
          "hostAliases": [
            {
              "ip": "127.0.0.1",
              "hostnames": [
                "kobo.kobo.local",
                "kc.kobo.local"
              ]
            }
          ],
          "initContainers": [
            {
              "name": "wait-db",
              "image": "jwilder/dockerize",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c",
                "dockerize -timeout=120s -wait tcp://${KOBO_MONGO_HOST}:${KOBO_MONGO_PORT} -wait tcp://${POSTGRES_HOST}:${POSTGRES_PORT}"
              ],
              "env": [
                {
                  "name": "KOBO_MONGO_PORT",
                  "value": "27017"
                },
                {
                  "name": "KOBO_MONGO_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "MONGO_INITDB_ROOT_USERNAME",
                  "value": "root"
                },
                {
                  "name": "MONGO_INITDB_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "MONGO_INITDB_ROOT_PASSWORD"
                    }
                  }
                },
                {
                  "name": "MONGO_INITDB_DATABASE",
                  "value": "formhub"
                },
                {
                  "name": "KOBO_MONGO_USERNAME",
                  "value": "kobo"
                },
                {
                  "name": "KOBO_MONGO_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KOBO_MONGO_PASSWORD"
                    }
                  }
                },
                {
                  "name": "KOBOCAT_MONGO_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "KOBOCAT_MONGO_PORT",
                  "value": "27017"
                },
                {
                  "name": "KOBOCAT_MONGO_NAME",
                  "value": "formhub"
                },
                {
                  "name": "KOBOCAT_MONGO_USER",
                  "value": "kobo"
                },
                {
                  "name": "KOBOCAT_MONGO_PASS",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KOBOCAT_MONGO_PASS"
                    }
                  }
                },
                {
                  "name": "KPI_MONGO_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "KPI_MONGO_PORT",
                  "value": "27017"
                },
                {
                  "name": "KPI_MONGO_NAME",
                  "value": "formhub"
                },
                {
                  "name": "KPI_MONGO_USER",
                  "value": "kobo"
                },
                {
                  "name": "KPI_MONGO_PASS",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KPI_MONGO_PASS"
                    }
                  }
                },
                {
                  "name": "POSTGRES_PORT",
                  "value": "5432"
                },
                {
                  "name": "POSTGRES_HOST",
                  "value": "release-name-postgresql"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgres"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "POSTGRES_PASSWORD"
                    }
                  }
                },
                {
                  "name": "KC_POSTGRES_DB",
                  "value": "kobocat"
                },
                {
                  "name": "KPI_POSTGRES_DB",
                  "value": "koboform"
                },
                {
                  "name": "KC_DATABASE_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KC_DATABASE_URL"
                    }
                  }
                },
                {
                  "name": "KPI_DATABASE_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KPI_DATABASE_URL"
                    }
                  }
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "nginx",
              "image": "nginx:1.19",
              "volumeMounts": [
                {
                  "name": "nginx-confd",
                  "mountPath": "/etc/nginx/conf.d"
                },
                {
                  "name": "nginx-init",
                  "mountPath": "/docker-entrypoint.d"
                },
                {
                  "name": "cache-volume",
                  "subPath": "static",
                  "mountPath": "/srv/www"
                },
                {
                  "name": "media",
                  "subPath": "kobocat_media_uploads",
                  "mountPath": "/media"
                },
                {
                  "name": "media",
                  "subPath": "kpi_media",
                  "mountPath": "/srv/kpi_media"
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/api/v2/",
                  "port": 80,
                  "httpHeaders": [
                    {
                      "name": "Host",
                      "value": "kobo.kobo.local"
                    }
                  ]
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 60,
                "failureThreshold": 15
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/api/v2/",
                  "port": 80,
                  "httpHeaders": [
                    {
                      "name": "Host",
                      "value": "kobo.kobo.local"
                    }
                  ]
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 30
              }
            },
            {
              "name": "kobocat",
              "image": "kobotoolbox/kobocat:2.021.24b",
              "terminationMessagePolicy": "FallbackToLogsOnError",
              "ports": [
                {
                  "containerPort": 8001
                }
              ],
              "env": [
                {
                  "name": "PUBLIC_REQUEST_SCHEME",
                  "value": "http"
                },
                {
                  "name": "PUBLIC_DOMAIN_NAME",
                  "value": "example.com"
                },
                {
                  "name": "SESSION_COOKIE_DOMAIN",
                  "value": ".example.com"
                },
                {
                  "name": "INTERNAL_DOMAIN_NAME",
                  "value": "kobo.local"
                },
                {
                  "name": "KOBOFORM_PUBLIC_SUBDOMAIN",
                  "value": "kobo"
                },
                {
                  "name": "KOBOCAT_PUBLIC_SUBDOMAIN",
                  "value": "kc"
                },
                {
                  "name": "ENKETO_EXPRESS_PUBLIC_SUBDOMAIN",
                  "value": "ee"
                },
                {
                  "name": "ENKETO_API_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "ENKETO_API_KEY"
                    }
                  }
                },
                {
                  "name": "ENKETO_API_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "ENKETO_API_KEY"
                    }
                  }
                },
                {
                  "name": "DJANGO_SECRET_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "DJANGO_SECRET_KEY"
                    }
                  }
                },
                {
                  "name": "ENKETO_ENCRYPTION_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "ENKETO_ENCRYPTION_KEY"
                    }
                  }
                },
                {
                  "name": "KOBO_SUPERUSER_USERNAME",
                  "value": "kobo"
                },
                {
                  "name": "KOBO_SUPERUSER_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KOBO_SUPERUSER_PASSWORD"
                    }
                  }
                },
                {
                  "name": "KOBO_SUPPORT_EMAIL",
                  "value": "support@example.com"
                },
                {
                  "name": "BACKUPS_DIR",
                  "value": "/srv/backups"
                },
                {
                  "name": "DJANGO_ALLOWED_HOSTS",
                  "value": ".example.com .kobo.local localhost"
                },
                {
                  "name": "KOBO_MONGO_PORT",
                  "value": "27017"
                },
                {
                  "name": "KOBO_MONGO_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "MONGO_INITDB_ROOT_USERNAME",
                  "value": "root"
                },
                {
                  "name": "MONGO_INITDB_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "MONGO_INITDB_ROOT_PASSWORD"
                    }
                  }
                },
                {
                  "name": "MONGO_INITDB_DATABASE",
                  "value": "formhub"
                },
                {
                  "name": "KOBO_MONGO_USERNAME",
                  "value": "kobo"
                },
                {
                  "name": "KOBO_MONGO_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KOBO_MONGO_PASSWORD"
                    }
                  }
                },
                {
                  "name": "KOBOCAT_MONGO_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "KOBOCAT_MONGO_PORT",
                  "value": "27017"
                },
                {
                  "name": "KOBOCAT_MONGO_NAME",
                  "value": "formhub"
                },
                {
                  "name": "KOBOCAT_MONGO_USER",
                  "value": "kobo"
                },
                {
                  "name": "KOBOCAT_MONGO_PASS",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KOBOCAT_MONGO_PASS"
                    }
                  }
                },
                {
                  "name": "KPI_MONGO_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "KPI_MONGO_PORT",
                  "value": "27017"
                },
                {
                  "name": "KPI_MONGO_NAME",
                  "value": "formhub"
                },
                {
                  "name": "KPI_MONGO_USER",
                  "value": "kobo"
                },
                {
                  "name": "KPI_MONGO_PASS",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KPI_MONGO_PASS"
                    }
                  }
                },
                {
                  "name": "POSTGRES_PORT",
                  "value": "5432"
                },
                {
                  "name": "POSTGRES_HOST",
                  "value": "release-name-postgresql"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgres"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "POSTGRES_PASSWORD"
                    }
                  }
                },
                {
                  "name": "KC_POSTGRES_DB",
                  "value": "kobocat"
                },
                {
                  "name": "KPI_POSTGRES_DB",
                  "value": "koboform"
                },
                {
                  "name": "KC_DATABASE_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KC_DATABASE_URL"
                    }
                  }
                },
                {
                  "name": "KPI_DATABASE_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KPI_DATABASE_URL"
                    }
                  }
                },
                {
                  "name": "REDIS_SESSION_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "REDIS_SESSION_URL"
                    }
                  }
                },
                {
                  "name": "REDIS_LOCK_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "REDIS_LOCK_URL"
                    }
                  }
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "REDIS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "GOOGLE_ANALYTICS_TOKEN",
                  "value": ""
                },
                {
                  "name": "KOBOCAT_RAVEN_DSN",
                  "value": ""
                },
                {
                  "name": "KPI_RAVEN_DSN",
                  "value": ""
                },
                {
                  "name": "KPI_RAVEN_JS_DSN",
                  "value": ""
                },
                {
                  "name": "KOBOCAT_DJANGO_DEBUG",
                  "value": "False"
                },
                {
                  "name": "TEMPLATE_DEBUG",
                  "value": "False"
                },
                {
                  "name": "USE_X_FORWARDED_HOST",
                  "value": "False"
                },
                {
                  "name": "ENKETO_VERSION",
                  "value": "Express"
                },
                {
                  "name": "KOBOCAT_BROKER_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KOBOCAT_BROKER_URL"
                    }
                  }
                },
                {
                  "name": "KOBOCAT_CELERY_LOG_FILE",
                  "value": "/srv/logs/celery.log"
                },
                {
                  "name": "ENKETO_OFFLINE_SURVEYS",
                  "value": "True"
                },
                {
                  "name": "KOBOCAT_MONGO_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "KOBOFORM_URL",
                  "value": "http://kobo.example.com"
                },
                {
                  "name": "KOBOFORM_INTERNAL_URL",
                  "value": "http://kobo.kobo.local"
                },
                {
                  "name": "KOBOCAT_URL",
                  "value": "http://kc.example.com"
                },
                {
                  "name": "ENKETO_URL",
                  "value": "http://ee.example.com"
                },
                {
                  "name": "DATABASE_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KC_DATABASE_URL"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "kobocat"
                },
                {
                  "name": "KPI_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KPI_URL"
                    }
                  }
                },
                {
                  "name": "KPI_INTERNAL_URL",
                  "value": "http://kobo.kobo.local"
                },
                {
                  "name": "DJANGO_DEBUG",
                  "value": "False"
                },
                {
                  "name": "RAVEN_DSN",
                  "value": ""
                },
                {
                  "name": "KC_UWSGI_MAX_REQUESTS",
                  "value": "512"
                },
                {
                  "name": "KC_UWSGI_WORKERS_COUNT",
                  "value": "2"
                },
                {
                  "name": "KC_UWSGI_CHEAPER_RSS_LIMIT_SOFT",
                  "value": "134217728"
                },
                {
                  "name": "KC_UWSGI_CHEAPER_WORKERS_COUNT",
                  "value": "1"
                },
                {
                  "name": "KC_UWSGI_HARAKIRI",
                  "value": "120"
                },
                {
                  "name": "KC_UWSGI_WORKER_RELOAD_MERCY",
                  "value": "120"
                },
                {
                  "name": "EMAIL_BACKEND",
                  "value": "django.core.mail.backends.smtp.EmailBackend"
                },
                {
                  "name": "EMAIL_HOST",
                  "value": "smtp.gmail.com"
                },
                {
                  "name": "EMAIL_PORT",
                  "value": "587"
                },
                {
                  "name": "EMAIL_HOST_USER",
                  "value": ""
                },
                {
                  "name": "EMAIL_HOST_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "EMAIL_HOST_PASSWORD"
                    }
                  }
                },
                {
                  "name": "EMAIL_USE_TLS",
                  "value": "True"
                },
                {
                  "name": "DEFAULT_FROM_EMAIL",
                  "value": ""
                },
                {
                  "name": "ENKETO_PROTOCOL",
                  "value": "http"
                },
                {
                  "name": "KPI_PORT",
                  "value": "8003"
                }
              ],
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/srv/init/wait_for_mongo.bash",
                  "subPath": "empty_script",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "mountPath": "/srv/init/wait_for_postgres.bash",
                  "subPath": "empty_script",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "mountPath": "/srv/src/kobocat/docker/kobocat.ini",
                  "subPath": "kc_uwsgi.ini",
                  "readOnly": true
                },
                {
                  "name": "media",
                  "subPath": "kobocat_media_uploads",
                  "mountPath": "/srv/src/kobocat/media"
                },
                {
                  "name": "cache-volume",
                  "subPath": "static/kobocat",
                  "mountPath": "/srv/static"
                }
              ],
              "readinessProbe": {
                "tcpSocket": {
                  "port": 8001
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 20
              },
              "livenessProbe": {
                "tcpSocket": {
                  "port": 8001
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 20
              }
            },
            {
              "name": "kpi",
              "image": "kobotoolbox/kpi:2.021.41",
              "terminationMessagePolicy": "FallbackToLogsOnError",
              "env": [
                {
                  "name": "PUBLIC_REQUEST_SCHEME",
                  "value": "http"
                },
                {
                  "name": "PUBLIC_DOMAIN_NAME",
                  "value": "example.com"
                },
                {
                  "name": "SESSION_COOKIE_DOMAIN",
                  "value": ".example.com"
                },
                {
                  "name": "INTERNAL_DOMAIN_NAME",
                  "value": "kobo.local"
                },
                {
                  "name": "KOBOFORM_PUBLIC_SUBDOMAIN",
                  "value": "kobo"
                },
                {
                  "name": "KOBOCAT_PUBLIC_SUBDOMAIN",
                  "value": "kc"
                },
                {
                  "name": "ENKETO_EXPRESS_PUBLIC_SUBDOMAIN",
                  "value": "ee"
                },
                {
                  "name": "ENKETO_API_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "ENKETO_API_KEY"
                    }
                  }
                },
                {
                  "name": "ENKETO_API_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "ENKETO_API_KEY"
                    }
                  }
                },
                {
                  "name": "DJANGO_SECRET_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "DJANGO_SECRET_KEY"
                    }
                  }
                },
                {
                  "name": "ENKETO_ENCRYPTION_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "ENKETO_ENCRYPTION_KEY"
                    }
                  }
                },
                {
                  "name": "KOBO_SUPERUSER_USERNAME",
                  "value": "kobo"
                },
                {
                  "name": "KOBO_SUPERUSER_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KOBO_SUPERUSER_PASSWORD"
                    }
                  }
                },
                {
                  "name": "KOBO_SUPPORT_EMAIL",
                  "value": "support@example.com"
                },
                {
                  "name": "BACKUPS_DIR",
                  "value": "/srv/backups"
                },
                {
                  "name": "DJANGO_ALLOWED_HOSTS",
                  "value": ".example.com .kobo.local localhost"
                },
                {
                  "name": "KOBO_MONGO_PORT",
                  "value": "27017"
                },
                {
                  "name": "KOBO_MONGO_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "MONGO_INITDB_ROOT_USERNAME",
                  "value": "root"
                },
                {
                  "name": "MONGO_INITDB_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "MONGO_INITDB_ROOT_PASSWORD"
                    }
                  }
                },
                {
                  "name": "MONGO_INITDB_DATABASE",
                  "value": "formhub"
                },
                {
                  "name": "KOBO_MONGO_USERNAME",
                  "value": "kobo"
                },
                {
                  "name": "KOBO_MONGO_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KOBO_MONGO_PASSWORD"
                    }
                  }
                },
                {
                  "name": "KOBOCAT_MONGO_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "KOBOCAT_MONGO_PORT",
                  "value": "27017"
                },
                {
                  "name": "KOBOCAT_MONGO_NAME",
                  "value": "formhub"
                },
                {
                  "name": "KOBOCAT_MONGO_USER",
                  "value": "kobo"
                },
                {
                  "name": "KOBOCAT_MONGO_PASS",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KOBOCAT_MONGO_PASS"
                    }
                  }
                },
                {
                  "name": "KPI_MONGO_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "KPI_MONGO_PORT",
                  "value": "27017"
                },
                {
                  "name": "KPI_MONGO_NAME",
                  "value": "formhub"
                },
                {
                  "name": "KPI_MONGO_USER",
                  "value": "kobo"
                },
                {
                  "name": "KPI_MONGO_PASS",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KPI_MONGO_PASS"
                    }
                  }
                },
                {
                  "name": "POSTGRES_PORT",
                  "value": "5432"
                },
                {
                  "name": "POSTGRES_HOST",
                  "value": "release-name-postgresql"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgres"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "POSTGRES_PASSWORD"
                    }
                  }
                },
                {
                  "name": "KC_POSTGRES_DB",
                  "value": "kobocat"
                },
                {
                  "name": "KPI_POSTGRES_DB",
                  "value": "koboform"
                },
                {
                  "name": "KC_DATABASE_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KC_DATABASE_URL"
                    }
                  }
                },
                {
                  "name": "KPI_DATABASE_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KPI_DATABASE_URL"
                    }
                  }
                },
                {
                  "name": "REDIS_SESSION_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "REDIS_SESSION_URL"
                    }
                  }
                },
                {
                  "name": "REDIS_LOCK_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "REDIS_LOCK_URL"
                    }
                  }
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "REDIS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "GOOGLE_ANALYTICS_TOKEN",
                  "value": ""
                },
                {
                  "name": "KOBOCAT_RAVEN_DSN",
                  "value": ""
                },
                {
                  "name": "KPI_RAVEN_DSN",
                  "value": ""
                },
                {
                  "name": "KPI_RAVEN_JS_DSN",
                  "value": ""
                },
                {
                  "name": "KPI_DJANGO_DEBUG",
                  "value": "False"
                },
                {
                  "name": "TEMPLATE_DEBUG",
                  "value": "False"
                },
                {
                  "name": "USE_X_FORWARDED_HOST",
                  "value": "False"
                },
                {
                  "name": "ENKETO_VERSION",
                  "value": "Express"
                },
                {
                  "name": "KPI_PREFIX",
                  "value": "/"
                },
                {
                  "name": "KPI_BROKER_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KPI_BROKER_URL"
                    }
                  }
                },
                {
                  "name": "KPI_MONGO_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "DKOBO_PREFIX",
                  "value": "False"
                },
                {
                  "name": "KOBO_SURVEY_PREVIEW_EXPIRATION",
                  "value": "24"
                },
                {
                  "name": "SKIP_CELERY",
                  "value": "False"
                },
                {
                  "name": "EMAIL_FILE_PATH",
                  "value": "./emails"
                },
                {
                  "name": "SYNC_KOBOCAT_XFORMS_PERIOD_MINUTES",
                  "value": "30"
                },
                {
                  "name": "KPI_UWSGI_PROCESS_COUNT",
                  "value": "2"
                },
                {
                  "name": "KOBOFORM_URL",
                  "value": "http://kobo.example.com"
                },
                {
                  "name": "ENKETO_URL",
                  "value": "http://ee.example.com"
                },
                {
                  "name": "ENKETO_INTERNAL_URL",
                  "value": "http://release-name-enketo:8005"
                },
                {
                  "name": "KOBOCAT_URL",
                  "value": "http://kc.example.com"
                },
                {
                  "name": "KOBOCAT_INTERNAL_URL",
                  "value": "http://kc.kobo.local"
                },
                {
                  "name": "DATABASE_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "KPI_DATABASE_URL"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "koboform"
                },
                {
                  "name": "DJANGO_DEBUG",
                  "value": "False"
                },
                {
                  "name": "RAVEN_DSN",
                  "value": ""
                },
                {
                  "name": "RAVEN_JS_DSN",
                  "value": ""
                },
                {
                  "name": "KPI_URL",
                  "value": "http://kobo.example.com"
                },
                {
                  "name": "KPI_UWSGI_MAX_REQUESTS",
                  "value": "512"
                },
                {
                  "name": "KPI_UWSGI_WORKERS_COUNT",
                  "value": "2"
                },
                {
                  "name": "KPI_UWSGI_CHEAPER_RSS_LIMIT_SOFT",
                  "value": "134217728"
                },
                {
                  "name": "KPI_UWSGI_CHEAPER_WORKERS_COUNT",
                  "value": "1"
                },
                {
                  "name": "KPI_UWSGI_HARAKIRI",
                  "value": "120"
                },
                {
                  "name": "KPI_UWSGI_WORKER_RELOAD_MERCY",
                  "value": "120"
                },
                {
                  "name": "EMAIL_BACKEND",
                  "value": "django.core.mail.backends.smtp.EmailBackend"
                },
                {
                  "name": "EMAIL_HOST",
                  "value": "smtp.gmail.com"
                },
                {
                  "name": "EMAIL_PORT",
                  "value": "587"
                },
                {
                  "name": "EMAIL_HOST_USER",
                  "value": ""
                },
                {
                  "name": "EMAIL_HOST_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secrets",
                      "key": "EMAIL_HOST_PASSWORD"
                    }
                  }
                },
                {
                  "name": "EMAIL_USE_TLS",
                  "value": "True"
                },
                {
                  "name": "DEFAULT_FROM_EMAIL",
                  "value": ""
                },
                {
                  "name": "SYNC_KOBOCAT_XFORMS",
                  "value": "True"
                },
                {
                  "name": "C_FORCE_ROOT",
                  "value": "True"
                },
                {
                  "name": "DJANGO_LANGUAGE_CODES",
                  "value": "en fr es ar zh-hans hi ku"
                },
                {
                  "name": "KOBO_SUPPORT_URL",
                  "value": "http://support.kobotoolbox.org/"
                }
              ],
              "ports": [
                {
                  "containerPort": 8003
                }
              ],
              "volumeMounts": [
                {
                  "name": "config",
                  "subPath": "empty_script",
                  "mountPath": "/srv/init/wait_for_mongo.bash",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "subPath": "empty_script",
                  "mountPath": "/srv/init/wait_for_postgres.bash",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "subPath": "empty_script",
                  "mountPath": "/etc/profile.d/runtime_variables_kpi.source.bash.sh",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "subPath": "kpi_uwsgi.ini",
                  "mountPath": "/srv/src/kpi/uwsgi.ini",
                  "readOnly": true
                },
                {
                  "name": "cache-volume",
                  "subPath": "static/kpi",
                  "mountPath": "/srv/static"
                },
                {
                  "name": "media",
                  "subPath": "kpi_media",
                  "mountPath": "/srv/src/kpi/media"
                },
                {
                  "name": "media",
                  "subPath": "kobocat_media_uploads",
                  "mountPath": "/srv/src/kobocat/media"
                }
              ],
              "readinessProbe": {
                "tcpSocket": {
                  "port": 8003
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 20
              },
              "livenessProbe": {
                "tcpSocket": {
                  "port": 8003
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 20
              }
            }
          ],
          "volumes": [
            {
              "name": "nginx-confd",
              "configMap": {
                "name": "release-name-nginx-confd"
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-kobo",
                "defaultMode": 493
              }
            },
            {
              "name": "kobo-assets",
              "configMap": {
                "name": "release-name-assets"
              }
            },
            {
              "name": "media",
              "persistentVolumeClaim": {
                "claimName": "release-name-kobo-media"
              }
            },
            {
              "name": "cache-volume",
              "emptyDir": {}
            },
            {
              "name": "nginx-init",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "serviceName": "release-name-postgresql-headless",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "postgresql",
          "app.kubernetes.io/instance": "release-name",
          "role": "primary"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-postgresql",
          "labels": {
            "app.kubernetes.io/name": "postgresql",
            "helm.sh/chart": "postgresql-10.1.4",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "role": "primary"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "containers": [
            {
              "name": "release-name-postgresql",
              "image": "docker.io/bitnami/postgresql:11.10.0-debian-10-r24",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "securityContext": {
                "runAsUser": 10846,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432"
                },
                {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql"
                },
                {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgres"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_ENABLE_TLS",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_LOG_HOSTNAME",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_CONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_DISCONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PGAUDIT_LOG_CATALOG",
                  "value": "off"
                },
                {
                  "name": "POSTGRESQL_CLIENT_MIN_MESSAGES",
                  "value": "error"
                },
                {
                  "name": "POSTGRESQL_SHARED_PRELOAD_LIBRARIES",
                  "value": "pgaudit"
                }
              ],
              "ports": [
                {
                  "name": "tcp-postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \"postgres\" -h 127.0.0.1 -p 5432"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "exec pg_isready -U \"postgres\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": [
                {
                  "name": "custom-init-scripts",
                  "mountPath": "/docker-entrypoint-initdb.d/"
                },
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql",
                  "subPath": null
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "custom-init-scripts",
              "configMap": {
                "name": "release-name-postgres-init"
              }
            },
            {
              "name": "dshm",
              "emptyDir": {
                "medium": "Memory",
                "sizeLimit": "1Gi"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            },
            "storageClassName": "standard"
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-rediscache-master",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app": "rediscache",
        "chart": "rediscache-10.7.17",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "rediscache",
          "release": "release-name",
          "role": "master"
        }
      },
      "serviceName": "release-name-rediscache-headless",
      "template": {
        "metadata": {
          "labels": {
            "app": "rediscache",
            "chart": "rediscache-10.7.17",
            "release": "release-name",
            "role": "master"
          },
          "annotations": {
            "checksum/health": "9dc181c846c204bcebbe1d0bfc1ee68e24abdedb2735500577f8da1e0ed750e2",
            "checksum/configmap": "a45045e69bfc1427f9405e2ed458f6ded3d33807d341ac385e1cb1af309e144b",
            "checksum/secret": "a6485e4d6292cedbe1f0e117fc6e84d9f28f09dd44768a46bc0a9eceb1dddde4"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "default",
          "containers": [
            {
              "name": "rediscache",
              "image": "docker.io/bitnami/redis:6.0.6-debian-10-r22",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 11641,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "command": [
                "/bin/bash",
                "-c",
                "if [[ -n $REDIS_PASSWORD_FILE ]]; then\n  password_aux=`cat ${REDIS_PASSWORD_FILE}`\n  export REDIS_PASSWORD=$password_aux\nfi\nif [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/master.conf\")\n/run.sh ${ARGS[@]}\n"
              ],
              "env": [
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "master"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-rediscache",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_TLS_ENABLED",
                  "value": "no"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 5"
                  ]
                }
              },
              "resources": null,
              "volumeMounts": [
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc/"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "health",
              "configMap": {
                "name": "release-name-rediscache-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-rediscache"
              }
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "redis-data",
            "labels": {
              "app": "rediscache",
              "release": "release-name",
              "heritage": "Helm",
              "component": "master"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            },
            "storageClassName": "standard",
            "selector": null
          }
        }
      ],
      "updateStrategy": {
        "type": "RollingUpdate"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-redismain-master",
      "namespace": "l4cjZGIptEYNCVy",
      "labels": {
        "app": "redismain",
        "chart": "redismain-10.7.17",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "redismain",
          "release": "release-name",
          "role": "master"
        }
      },
      "serviceName": "release-name-redismain-headless",
      "template": {
        "metadata": {
          "labels": {
            "app": "redismain",
            "chart": "redismain-10.7.17",
            "release": "release-name",
            "role": "master"
          },
          "annotations": {
            "checksum/health": "966090318a2ff2077f7f23e789981e8c99bb91a0a08b3de5ced1b61fc53f0745",
            "checksum/configmap": "2fc04172f5c66cab994de12ae95db407f7d382440ac8e08b38d05a160af72415",
            "checksum/secret": "e8c0ee46f5475c30e3a302254997f6819b572feaf0f99954b8441c95f9ccfee0"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "default",
          "containers": [
            {
              "name": "redismain",
              "image": "docker.io/bitnami/redis:6.0.6-debian-10-r22",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 11046,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "command": [
                "/bin/bash",
                "-c",
                "if [[ -n $REDIS_PASSWORD_FILE ]]; then\n  password_aux=`cat ${REDIS_PASSWORD_FILE}`\n  export REDIS_PASSWORD=$password_aux\nfi\nif [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/master.conf\")\n/run.sh ${ARGS[@]}\n"
              ],
              "env": [
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "master"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-redismain",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_TLS_ENABLED",
                  "value": "no"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 5"
                  ]
                }
              },
              "resources": null,
              "volumeMounts": [
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc/"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "health",
              "configMap": {
                "name": "release-name-redismain-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-redismain"
              }
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "redis-data",
            "labels": {
              "app": "redismain",
              "release": "release-name",
              "heritage": "Helm",
              "component": "master"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            },
            "storageClassName": "standard",
            "selector": null
          }
        }
      ],
      "updateStrategy": {
        "type": "RollingUpdate"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-test-kobo-api",
      "namespace": "l4cjZGIptEYNCVy",
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "restartPolicy": "Never",
      "containers": [
        {
          "name": "test-http",
          "image": "blacktop/httpie",
          "imagePullPolicy": "IfNotPresent",
          "command": [
            "sh",
            "-ce",
            "http --ignore-stdin --check-status \"http://release-name-kobo/api/v2/\" Host:kobo.kobo.local\nhttp --ignore-stdin --check-status \"http://release-name-kobo/api/v1/\" Host:kc.kobo.local\n"
          ]
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-test-kobo-connections",
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "image": "jwilder/dockerize",
          "imagePullPolicy": "IfNotPresent",
          "name": "test-connections",
          "args": [
            "-timeout=5m",
            "-wait=tcp://release-name-postgresql:5432",
            "-wait=tcp://release-name-mongodb:27017",
            "-wait=http://release-name-kobo/",
            "-wait=http://release-name-enketo:8005/"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]