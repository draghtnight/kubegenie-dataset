apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kitcaddy-config
  namespace: SMtYGXLwL
data:
  config.json: |
    {
      "logging": {
        "logs": {
          "default": {
            "level": "INFO"
          }
        }
      },
      "admin": {
        "disabled": true
      },
      "apps": {
        "tls": {
        },
        "http": {
          "servers": {
          }
        }
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-kitcaddy
  namespace: SMtYGXLwL
  labels:
    helm.sh/chart: kitcaddy-1.3.9
    app: release-name
    app.kubernetes.io/name: kitcaddy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.9
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: proxy-port
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kitcaddy
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kitcaddy
  namespace: SMtYGXLwL
  labels:
    helm.sh/chart: kitcaddy-1.3.9
    app: release-name
    app.kubernetes.io/name: kitcaddy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.9
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kitcaddy
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 9b8a26fbcd1ca3e48c1a5799d7d75f8bfccc585163dcf36bfd592fb01a1c6219
      labels:
        app.kubernetes.io/name: kitcaddy
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext: {}
      containers:
        - name: kitcaddy
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
          args:
            - -config
            - /config/config.json
          env: []
          image: kvalitetsit/kitcaddy:1.3.9
          ports:
            - containerPort: 80
              name: proxy-port
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - mountPath: /config
              name: caddy-config
        - name: release-name-kitcaddy
          securityContext:
            readOnlyRootFilesystem: true
          image: nginx:1.3.9
          imagePullPolicy: IfNotPresent
          env: []
          ports:
            - name: container-port
              containerPort: 80
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - configMap:
            name: release-name-kitcaddy-config
          name: caddy-config
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: kitcaddy
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-kitcaddy
  namespace: SMtYGXLwL
  labels:
    helm.sh/chart: kitcaddy-1.3.9
    app: release-name
    app.kubernetes.io/name: kitcaddy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.9
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: chart-example.local
      http:
        paths: null
