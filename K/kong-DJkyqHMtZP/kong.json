[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-kong",
      "namespace": "DJkyqHMtZP",
      "labels": {
        "app.kubernetes.io/name": "kong",
        "helm.sh/chart": "kong-6.3.8",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      }
    },
    "automountServiceAccountToken": true
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql",
      "namespace": "DJkyqHMtZP",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-11.6.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "postgres-password": "R3lXOEU4clhkSA==",
      "password": "YjlJU2lzZVBsVQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-kong-scripts",
      "namespace": "DJkyqHMtZP",
      "labels": {
        "app.kubernetes.io/name": "kong",
        "helm.sh/chart": "kong-6.3.8",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      }
    },
    "data": {
      "kong-container-health.sh": "#!/bin/bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n\n# Load libraries\n. /opt/bitnami/scripts/libos.sh\n. /opt/bitnami/scripts/libkong.sh\n\n# Load Kong environment variables\neval \"$(kong_env)\"\n\nis_kong_running",
      "ingress-container-wait-for-kong.sh": "#!/bin/bash\n\necho \"Waiting for the Kong container to be ready\"\nif wait-for-port --timeout=300 --host=127.0.0.1 --state=inuse 8000; then\n  echo \"Kong container ready\"\nelse\n  echo \"Kong not ready after 300 seconds\"\n  exit 1\nfi",
      "ingress-container-start.sh": "#!/bin/bash\n\n. /health/ingress-container-wait-for-kong.sh\n\nkong-ingress-controller"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-kong",
      "labels": {
        "app.kubernetes.io/name": "kong",
        "helm.sh/chart": "kong-6.3.8",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "endpoints"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "endpoints/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create",
          "patch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "kongclusterplugins"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "kongclusterplugins/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "kongconsumers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "kongconsumers/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "kongingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "kongingresses/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "kongplugins"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "kongplugins/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "tcpingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "tcpingresses/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "udpingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "udpingresses/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "ingresses/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "gateway.networking.k8s.io"
        ],
        "resources": [
          "gatewayclasses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "gateway.networking.k8s.io"
        ],
        "resources": [
          "gatewayclasses/status"
        ],
        "verbs": [
          "get",
          "update"
        ]
      },
      {
        "apiGroups": [
          "gateway.networking.k8s.io"
        ],
        "resources": [
          "gateways"
        ],
        "verbs": [
          "get",
          "list",
          "update",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "gateway.networking.k8s.io"
        ],
        "resources": [
          "gateways/status"
        ],
        "verbs": [
          "get",
          "update"
        ]
      },
      {
        "apiGroups": [
          "gateway.networking.k8s.io"
        ],
        "resources": [
          "httproutes"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "gateway.networking.k8s.io"
        ],
        "resources": [
          "httproutes/status"
        ],
        "verbs": [
          "get",
          "update"
        ]
      },
      {
        "apiGroups": [
          "gateway.networking.k8s.io"
        ],
        "resources": [
          "tcproutes"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "gateway.networking.k8s.io"
        ],
        "resources": [
          "tcproutes/status"
        ],
        "verbs": [
          "get",
          "update"
        ]
      },
      {
        "apiGroups": [
          "gateway.networking.k8s.io"
        ],
        "resources": [
          "udproutes"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "gateway.networking.k8s.io"
        ],
        "resources": [
          "udproutes/status"
        ],
        "verbs": [
          "get",
          "update"
        ]
      },
      {
        "apiGroups": [
          "networking.internal.knative.dev"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "networking.internal.knative.dev"
        ],
        "resources": [
          "ingresses/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "ingressclasses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-kong",
      "labels": {
        "app.kubernetes.io/name": "kong",
        "helm.sh/chart": "kong-6.3.8",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-kong"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-kong",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-kong",
      "namespace": "DJkyqHMtZP",
      "labels": {
        "app.kubernetes.io/name": "kong",
        "helm.sh/chart": "kong-6.3.8",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "pods",
          "secrets",
          "namespaces"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "resourceNames": [
          "kong-ingress-controller-leader-kong-kong"
        ],
        "verbs": [
          "get",
          "update"
        ]
      },
      {
        "apiGroups": [
          "",
          "coordination.k8s.io"
        ],
        "resources": [
          "configmaps",
          "leases"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "patch",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "endpoints"
        ],
        "verbs": [
          "get"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-kong",
      "namespace": "DJkyqHMtZP",
      "labels": {
        "app.kubernetes.io/name": "kong",
        "helm.sh/chart": "kong-6.3.8",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-kong"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-kong",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql-hl",
      "namespace": "DJkyqHMtZP",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-11.6.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "publishNotReadyAddresses": true,
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "namespace": "DJkyqHMtZP",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-11.6.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "sessionAffinity": "None",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-kong",
      "namespace": "DJkyqHMtZP",
      "labels": {
        "app.kubernetes.io/name": "kong",
        "helm.sh/chart": "kong-6.3.8",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "sessionAffinity": "None",
      "ports": [
        {
          "port": 80,
          "targetPort": "http-proxy",
          "protocol": "TCP",
          "name": "http-proxy",
          "nodePort": null
        },
        {
          "port": 443,
          "targetPort": "https-proxy",
          "protocol": "TCP",
          "name": "https-proxy",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "kong",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "server"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-kong",
      "namespace": "DJkyqHMtZP",
      "labels": {
        "app.kubernetes.io/name": "kong",
        "helm.sh/chart": "kong-6.3.8",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      }
    },
    "spec": {
      "replicas": 2,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "kong",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "server"
        }
      },
      "strategy": {
        "rollingUpdate": {},
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "kong",
            "helm.sh/chart": "kong-6.3.8",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "server"
          },
          "annotations": {
            "checksum/configmap-kong": "cf5148e6cf441c486fb2da13003027337b70a55f300e2d89616d8c60a9f2edfe"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-kong",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "kong",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "server"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "containers": [
            {
              "name": "kong",
              "image": "docker.io/bitnami/kong:2.8.1-debian-11-r3",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 10001,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "KONG_DATABASE",
                  "value": "postgres"
                },
                {
                  "name": "KONG_PG_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "password"
                    }
                  }
                },
                {
                  "name": "KONG_PG_HOST",
                  "value": "release-name-postgresql"
                },
                {
                  "name": "KONG_PG_PORT",
                  "value": "5432"
                },
                {
                  "name": "KONG_PG_USER",
                  "value": "kong"
                }
              ],
              "ports": [
                {
                  "name": "http-proxy",
                  "containerPort": 8000,
                  "protocol": "TCP"
                },
                {
                  "name": "https-proxy",
                  "containerPort": 8443,
                  "protocol": "TCP"
                },
                {
                  "name": "http-admin",
                  "containerPort": 8001,
                  "protocol": "TCP"
                },
                {
                  "name": "https-admin",
                  "containerPort": 8444,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 120,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "/health/kong-container-health.sh"
                  ]
                }
              },
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "/health/kong-container-health.sh"
                  ]
                }
              },
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/bin/sh",
                      "-c",
                      "kong quit"
                    ]
                  }
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "health",
                  "mountPath": "/health"
                }
              ]
            },
            {
              "name": "kong-ingress-controller",
              "image": "docker.io/bitnami/kong-ingress-controller:2.3.1-debian-11-r3",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 1001
              },
              "command": [
                "bash",
                "-ec",
                "/health/ingress-container-start.sh"
              ],
              "env": [
                {
                  "name": "CONTROLLER_KONG_ADMIN_URL",
                  "value": "http://127.0.0.1:8001"
                },
                {
                  "name": "CONTROLLER_PUBLISH_SERVICE",
                  "value": "default/release-name-kong"
                },
                {
                  "name": "CONTROLLER_INGRESS_CLASS",
                  "value": "kong"
                },
                {
                  "name": "CONTROLLER_ELECTION_ID",
                  "value": "kong-ingress-controller-leader-kong"
                },
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "POD_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "name": "http-health",
                  "containerPort": 10254,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 120,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "httpGet": {
                  "path": "/healthz",
                  "port": "http-health",
                  "scheme": "HTTP"
                }
              },
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "httpGet": {
                  "path": "/healthz",
                  "port": "http-health",
                  "scheme": "HTTP"
                }
              },
              "resources": {
                "limits": {},
                "requests": {}
              },
              "volumeMounts": [
                {
                  "name": "health",
                  "mountPath": "/health"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "health",
              "configMap": {
                "name": "release-name-kong-scripts",
                "defaultMode": 493
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-postgresql",
      "namespace": "DJkyqHMtZP",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-11.6.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null
    },
    "spec": {
      "replicas": 1,
      "serviceName": "release-name-postgresql-hl",
      "updateStrategy": {
        "rollingUpdate": {},
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "postgresql",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "primary"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-postgresql",
          "labels": {
            "app.kubernetes.io/name": "postgresql",
            "helm.sh/chart": "postgresql-11.6.5",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "primary"
          },
          "annotations": null
        },
        "spec": {
          "serviceAccountName": "default",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "postgresql",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "hostNetwork": false,
          "hostIPC": false,
          "initContainers": null,
          "containers": [
            {
              "name": "postgresql",
              "image": "docker.io/bitnami/postgresql:11.16.0-debian-11-r3",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 10461,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432"
                },
                {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql"
                },
                {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "kong"
                },
                {
                  "name": "POSTGRES_POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgres-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "kong"
                },
                {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_ENABLE_TLS",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_LOG_HOSTNAME",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_CONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_DISCONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PGAUDIT_LOG_CATALOG",
                  "value": "off"
                },
                {
                  "name": "POSTGRESQL_CLIENT_MIN_MESSAGES",
                  "value": "error"
                },
                {
                  "name": "POSTGRESQL_SHARED_PRELOAD_LIBRARIES",
                  "value": "pgaudit"
                }
              ],
              "ports": [
                {
                  "name": "tcp-postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \"kong\" -d \"dbname=kong\" -h 127.0.0.1 -p 5432"
                  ]
                }
              },
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "exec pg_isready -U \"kong\" -d \"dbname=kong\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "dshm",
              "emptyDir": {
                "medium": "Memory"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "release-name-kong-migrate",
      "namespace": "DJkyqHMtZP",
      "labels": {
        "app.kubernetes.io/name": "kong",
        "helm.sh/chart": "kong-6.3.8",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      },
      "annotations": {
        "helm.sh/hook": "post-install, pre-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "kong",
            "helm.sh/chart": "kong-6.3.8",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "migration"
          }
        },
        "spec": {
          "restartPolicy": "OnFailure",
          "containers": [
            {
              "name": "kong-migrate",
              "image": "docker.io/bitnami/kong:2.8.1-debian-11-r3",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 10458,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "KONG_MIGRATE",
                  "value": "yes"
                },
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "KONG_EXIT_AFTER_MIGRATE",
                  "value": "yes"
                },
                {
                  "name": "KONG_DATABASE",
                  "value": "postgres"
                },
                {
                  "name": "KONG_PG_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "password"
                    }
                  }
                },
                {
                  "name": "KONG_PG_HOST",
                  "value": "release-name-postgresql"
                },
                {
                  "name": "KONG_PG_PORT",
                  "value": "5432"
                },
                {
                  "name": "KONG_PG_USER",
                  "value": "kong"
                }
              ],
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  }
]