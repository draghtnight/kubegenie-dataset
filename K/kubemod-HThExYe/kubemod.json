[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-kubemod",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-kubemod-manager",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "api.kubemod.io"
        ],
        "resources": [
          "modrules"
        ],
        "verbs": [
          "create",
          "delete",
          "get",
          "list",
          "patch",
          "update",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-kubemod-manager",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-kubemod-manager"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-kubemod",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-kubemod-webapp-service",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "api",
          "port": 8081,
          "targetPort": "api"
        },
        {
          "name": "metrics",
          "port": 8082,
          "targetPort": "metrics"
        },
        {
          "name": "health",
          "port": 8083,
          "targetPort": "health"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-kubemod-webhook-service",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 443,
          "targetPort": 9443
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-kubemod",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "kubemod",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "kubemod",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-kubemod",
          "securityContext": {},
          "containers": [
            {
              "name": "kubemod",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "kubemod/kubemod:v0.13.0",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/kubemod",
                "-operator",
                "-webapp"
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 8083
                }
              },
              "ports": [
                {
                  "containerPort": 8081,
                  "name": "api",
                  "protocol": "TCP"
                },
                {
                  "containerPort": 8082,
                  "name": "metrics",
                  "protocol": "TCP"
                },
                {
                  "containerPort": 8083,
                  "name": "health",
                  "protocol": "TCP"
                },
                {
                  "containerPort": 9443,
                  "name": "webhook-server",
                  "protocol": "TCP"
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/readyz",
                  "port": 8083
                }
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                  "name": "cert",
                  "readOnly": true
                }
              ]
            }
          ],
          "terminationGracePeriodSeconds": 10,
          "volumes": [
            {
              "name": "cert",
              "secret": {
                "defaultMode": 420,
                "secretName": "webhook-server-cert"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "admissionregistration.k8s.io/v1",
    "kind": "MutatingWebhookConfiguration",
    "metadata": {
      "name": "release-name-kubemod-mutating-webhook-configuration",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "creationTimestamp": null
    },
    "webhooks": [
      {
        "admissionReviewVersions": [
          "v1beta1"
        ],
        "clientConfig": {
          "caBundle": "Cg==",
          "service": {
            "name": "release-name-kubemod-webhook-service",
            "namespace": "default",
            "path": "/mutate-api-kubemod-io-v1beta1-modrule"
          }
        },
        "failurePolicy": "Fail",
        "name": "mmodrule.kubemod.io",
        "rules": [
          {
            "apiGroups": [
              "api.kubemod.io"
            ],
            "apiVersions": [
              "v1beta1"
            ],
            "operations": [
              "CREATE",
              "UPDATE"
            ],
            "resources": [
              "modrules"
            ]
          }
        ],
        "sideEffects": "None",
        "timeoutSeconds": 5
      },
      {
        "admissionReviewVersions": [
          "v1beta1"
        ],
        "clientConfig": {
          "caBundle": "Cg==",
          "service": {
            "name": "release-name-kubemod-webhook-service",
            "namespace": "default",
            "path": "/dragnet-webhook"
          }
        },
        "failurePolicy": "Ignore",
        "matchPolicy": "Equivalent",
        "name": "dragnet.kubemod.io",
        "namespaceSelector": {
          "matchExpressions": [
            {
              "key": "admission.kubemod.io/ignore",
              "operator": "NotIn",
              "values": [
                "true"
              ]
            }
          ]
        },
        "reinvocationPolicy": "IfNeeded",
        "rules": [
          {
            "apiGroups": [
              "*"
            ],
            "apiVersions": [
              "*"
            ],
            "operations": [
              "CREATE",
              "UPDATE"
            ],
            "resources": [
              "namespaces",
              "nodes",
              "configmaps",
              "persistentvolumeclaims",
              "persistentvolumes",
              "secrets",
              "services",
              "daemonsets",
              "deployments",
              "replicasets",
              "statefulsets",
              "horizontalpodautoscalers",
              "ingresses",
              "pods",
              "cronjobs",
              "jobs",
              "serviceaccounts",
              "clusterrolebindings",
              "clusterroles",
              "rolebindings",
              "roles"
            ],
            "scope": "*"
          }
        ],
        "sideEffects": "None",
        "timeoutSeconds": 3
      }
    ]
  },
  {
    "apiVersion": "admissionregistration.k8s.io/v1",
    "kind": "ValidatingWebhookConfiguration",
    "metadata": {
      "creationTimestamp": null,
      "name": "release-name-kubemod-validating-webhook-configuration",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "webhooks": [
      {
        "admissionReviewVersions": [
          "v1beta1"
        ],
        "clientConfig": {
          "caBundle": "Cg==",
          "service": {
            "name": "release-name-kubemod-webhook-service",
            "namespace": "default",
            "path": "/validate-api-kubemod-io-v1beta1-modrule"
          }
        },
        "failurePolicy": "Fail",
        "name": "vmodrule.kubemod.io",
        "rules": [
          {
            "apiGroups": [
              "api.kubemod.io"
            ],
            "apiVersions": [
              "v1beta1"
            ],
            "operations": [
              "CREATE",
              "UPDATE"
            ],
            "resources": [
              "modrules"
            ]
          }
        ],
        "sideEffects": "None",
        "timeoutSeconds": 5
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-kubemod-crt",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-kubemod-crt",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "admissionregistration.k8s.io"
        ],
        "resourceNames": [
          "release-name-kubemod-mutating-webhook-configuration",
          "release-name-kubemod-validating-webhook-configuration"
        ],
        "resources": [
          "mutatingwebhookconfigurations",
          "validatingwebhookconfigurations"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "patch",
          "delete"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-kubemod-crt",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-kubemod-crt"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-kubemod-crt",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-kubemod-crt",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "patch",
          "delete"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-kubemod-crt",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-kubemod-crt"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-kubemod-crt",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "release-name-kubemod-crt-create-secret",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "pre-install",
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "spec": {
      "backoffLimit": 4,
      "template": {
        "spec": {
          "containers": [
            {
              "command": [
                "/bin/sh",
                "-c",
                "./cert-generate.sh && \\\nkubectl create secret tls webhook-server-cert -n default --cert=server.pem --key=server-key.pem --dry-run=client -o yaml > webhook-server-cert.yaml && \\\nkubectl apply -f webhook-server-cert.yaml -n default && \\\nkubectl create secret generic release-name-kubemod-crt-ca --from-file=ca.pem --dry-run=client -o yaml > ca-secret.yaml && \\\nkubectl apply -f ca-secret.yaml -n default\n"
              ],
              "image": "desaintmartin/kubemod-crt:latest",
              "imagePullPolicy": "Always",
              "name": "kubemod-crt"
            }
          ],
          "restartPolicy": "Never",
          "serviceAccountName": "release-name-kubemod-crt"
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "release-name-kubemod-crt-patch-webhooks",
      "labels": {
        "helm.sh/chart": "kubemod-0.1.5",
        "app.kubernetes.io/name": "kubemod",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.13.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "spec": {
      "backoffLimit": 4,
      "template": {
        "spec": {
          "containers": [
            {
              "command": [
                "/bin/sh",
                "-c",
                "ca_bundle=$(cat /tmp/ca/ca.pem | base64 - | tr -d '\\n' ) && \\\nsed -r -i \"s|Cg==|$ca_bundle|\" patch-mutating-webhook-configuration.json && \\\nsed -r -i \"s|Cg==|$ca_bundle|\" patch-validating-webhook-configuration.json && \\\necho \"Applying mutating webhook configuration patch...\" && \\\nkubectl patch mutatingwebhookconfiguration release-name-kubemod-mutating-webhook-configuration --type=json --patch \"$(cat patch-mutating-webhook-configuration.json)\" && \\\necho \"Applying validating webhook configuration patch...\" && \\\nkubectl patch validatingwebhookconfiguration release-name-kubemod-validating-webhook-configuration --type=json --patch \"$(cat patch-validating-webhook-configuration.json)\"\n"
              ],
              "image": "desaintmartin/kubemod-crt:latest",
              "imagePullPolicy": "Always",
              "name": "kubemod-crt",
              "volumeMounts": [
                {
                  "mountPath": "/tmp/ca",
                  "name": "ca",
                  "readOnly": true
                }
              ]
            }
          ],
          "restartPolicy": "Never",
          "serviceAccountName": "release-name-kubemod-crt",
          "volumes": [
            {
              "name": "ca",
              "secret": {
                "defaultMode": 420,
                "secretName": "release-name-kubemod-crt-ca"
              }
            }
          ]
        }
      }
    }
  }
]