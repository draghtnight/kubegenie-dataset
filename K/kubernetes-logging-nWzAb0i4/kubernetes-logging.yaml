apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-fluentbit
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-priv
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-logstash
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-opensearch-dashboards-config
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
stringData:
  opensearch_dashboards.yml: |-
    server.name: opensearch-dashboards
    server.host: "0"

    logging.quiet: true
    logging.verbose: false
    logging.json: true

    opensearch.logQueries: false
    opensearch.hosts: ["https://release-name-client.default.svc.cluster.local:9200"]
    opensearch.ssl.verificationMode: none
    opensearch.username: opensearch
    opensearch.password: opensearch
    opensearch.requestHeadersWhitelist: ["securitytenant","authorization"]

    # Optional setting that enables you to specify a path to the PEM file for the certificate
    # authority for your opensearch instance.
    opensearch.ssl.certificateAuthorities:
    - /opt/opensearch-dashboards/config/root-ca.pem

    opensearch_security.readonly_mode.roles: ["opensearch-dashboards_read_only"]



    opensearch_security.multitenancy.enabled: true
    opensearch_security.multitenancy.tenants.enable_global: true
    opensearch_security.multitenancy.tenants.enable_private: true
    opensearch_security.multitenancy.tenants.preferred: ["Developer","Global","Private"]
    opensearch_security.cookie.secure: false
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
stringData:
  opensearch.yml: |-
    cluster.name: "logging"
    path.data: /data

    network.host: 0.0.0.0

    discovery.seed_hosts:
      - release-name-master-0

    cluster.initial_master_nodes:
      - release-name-master-0

    node.master: ${NODE_MASTER:true}
    node.data: ${NODE_DATA:true}
    node.ingest: ${NODE_INGEST:true}

    node.name: ${HOSTNAME}

    thread_pool.write.queue_size: 1000
    thread_pool.search.queue_size: 1000
    thread_pool.get.queue_size: 1000
    thread_pool.analyze.queue_size: 1000
    thread_pool.listener.queue_size: 1000

    plugins.security.allow_unsafe_democertificates: true
    plugins.security.allow_default_init_securityindex: true
    # plugins.security.audit.type: internal_opensearch
    # plugins.security.enable_snapshot_restore_privilege: true
    # plugins.security.check_snapshot_restore_write_privileges: true
    # cluster.routing.allocation.disk.threshold_enabled: false
    # plugins.security.audit.config.disabled_rest_categories: NONE
    # plugins.security.audit.config.disabled_transport_categories: NONE

    # TLS Configuration Transport Layer
    plugins.security.nodes_dn:
      - 'CN=*.default.svc.cluster.local'
    plugins.security.authcz.admin_dn:
      - 'CN=admin'
    plugins.security.ssl.transport.pemcert_filepath: node.pem
    plugins.security.ssl.transport.pemkey_filepath: node-key.key
    plugins.security.ssl.transport.pemtrustedcas_filepath: root-ca.pem
    plugins.security.ssl.transport.enforce_hostname_verification: false


    # TLS Configuration REST Layer
    plugins.security.ssl.http.enabled: true
    plugins.security.ssl.http.pemcert_filepath: ofd-rest.pem
    plugins.security.ssl.http.pemkey_filepath: ofd-rest-key.key
    plugins.security.ssl.http.pemtrustedcas_filepath: root-ca.pem
    plugins.security.restapi.roles_enabled: ["all_access", "administrator"]
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-curator
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
stringData:
  curator.yml: |-
    # Remember, leave a key empty if there is no value.  None will be a string,
    # not a Python "NoneType"
    client:
      hosts:
        - ${os_host}
      url_prefix:
      use_ssl: true
      certificate: /etc/root-ca.pem
      client_cert:
      client_key:
      ssl_no_validate: false
      username: osadmin
      password: osadmin
      timeout: 300
      master_only: false
    logging:
      loglevel: INFO
      logfile:
      logformat: json
      blacklist: ['urllib3']
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-opensearch-certificates
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRZHYzaFNGOW9CeTlBeDBBbW1mNGdQREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkc2IyZG5hVzVuTUI0WERUSXlNRFl4TWpFME1EVXpNRm9YRFRNeU1EWXdPVEUwTURVegpNRm93RWpFUU1BNEdBMVVFQXhNSGJHOW5aMmx1WnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU9BL3Y5dU8zdnB1TzZGR0VCeUJiT3RWa0w3ZVFWT2hNUnZlL25oWjZRQWN2WldXTEpqL2RoTVQKUDIrTGZHY3FrOWxiZTlKcEVnQ2JZcW1ObmI2K01CSHlEdEs0VnYxSVQya1VWcW1pcG9RVXVHVUVNR01PTU0wcgpjZy9TK25MallXN1ErU3A3QWFPVFpWelFZcFIvL1BxV25yNzYvUXE0Yk1kV3FyZllpaXFhNFlNaEM0REF3WU52Ci9JNW1QK1hGMHlESnBDbDU1ZFBaOUpVUTM2QldtdUVPdTkrVnhFWTh6c25SRG1lSm5LRDdjZXdBWER6Vk16dUUKcXhJYTVmT2hhTGYxMGtrZ0R4Q2I1U1Rib1kyTUNEWnk3OFFpNzRmSERZSWN3Q0Rxa0cwdGh5WEQzZ0JDcGNYQgpvVWJ5d2tjc3FYUmFwYVJxME1JdHdtQXRWd3Y3L2dFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRNVlSZDd5U3lEellXNnZYUkovYTNFb3pjalB6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBR1dkTjdnQkU4eTV2TmQwNkgwY0xLakFNWFRScjh4VkdiOUYvYU9xSzZubnhSb1puSHVwTXMzUStOV3JMCjNUeVlPSjdTWTBZdjdvSUpYMjFCNXM5TWlBcmdILzN0eEpVemdXNzB3VGdyTVN0R3RBRTh4dmJKWEx5MUZPdTQKL3ExSEwvREVlcXlYRWhPVDNzL3VwVlI3Vi9WSHl4VC9NdGVKSTVFdnFXY3RsckNsb0JxR2VUS2dyWDRxWnFXdgpQTUFoQkpQbWpTVUpxSEpnQzBNSmhqNzl4SkZkT0h5SFI5VW5qL0RSQ0VKOTlsaWxmVnJBRSs1MVBSNzBZdEo1CkFNRkMvNnB0YVd6RzFDekdKTDFvS2xodVdPZ3ZaTDgzcWhmWHY3R2xxV1dkNXdPSVpVU0NSVHE5WW1VVUZLVFUKK3IyS2MxR3k4YVdwU3hvZmVySkdYL0oza2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUpsL0hzS2RhSDFNTEtoUXl6NFErSk13RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGJHOW5aMmx1WnpBZUZ3MHlNakEyTVRJeE5EQTFNekJhRncwek1qQTJNRGt4TkRBMQpNekJhTUNZeEpEQWlCZ05WQkFNTUd5b3VaR1ZtWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNXhzWEVDTkEyV3BINy93T1gzeVpIbzBjN2EKakFLYURpaEVSMGNtOE9LVXVWUW0rQUFEZ3JQc3k3dWlBVjVzT0Y5MEtYcG5teUl0ODQ2RzFEZGNDRVoyZjczMgpMRnJjMitLR1Z3MlF1NkNkZTRPd0o4TjdIZkVHdEgzUFZNclF3Y2tVdXNXekxiQzIrL3hKZE5KcUo2QmkraVk5Ck5XMjRzQXFLSDF1NVJRR1NVcm1SWnBxbU42RVVqYXUzRGNURDk1NkVjTnphR29nc0VoZHhkVnZTSTZ6cmZSK2kKWUF4NjFZUE9pRVdWTWk5RUJBZDZlVkswdy95L3ZkM1VUYlNrODZrZmg2SUlDd00xSEl3VkJEZDVIZ2h6eTFyYQpVcTNzQTVZU1Z0UG9VeWs1TW1IVXBCbS83cVpQd3VxazVMNDhCZGZ0eENYVlh3L0xNaGRyN29WNStQc0NBd0VBCkFhT0JpVENCaGpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVPV0VYZThrc2c4MkZ1cjEwU2YydAp4S00zSXo4d0pnWURWUjBSQkI4d0hZSWJLaTVrWldaaGRXeDBMbk4yWXk1amJIVnpkR1Z5TG14dlkyRnNNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDYXZNQ1BvTkVnbnM3Mk5KTVFsenY5OCtTT0NDQnlvZTB1NHZrejQ3K1UKekN5S0I1RHNUdWRncTVualp2U1ErTjhUejZJMFRtVzdRVFR2akRUOWc2eWMrKzF3dkdkd24wZ3E5RloxeGswSgpmV3JXOVFmd1pJaEgzbmxBN2U2MzZsNld0SlhCQ1ducGlnVGlMaUh4RXRraE9BSFd4eStqSzYxWDNDbkhwSDFzCmFJOEFIUzNUbDM1MDd4T0hmZVEvR0I3eTN6ZnlLNFFySG9MSkFSV29HY1h3WVVLT2lTSlR1WEFDZGx5L1VSRFUKSlQrVytvUlpaTkdGUXZTUWZTdHNvNC9raFJPREY2aUJMZE9oZEJmNWk4SUNTMEFWY3EwSXpSdkh5b2hSNXJFcAppVXRLSWp3UXZyWnVscy94d2kvVFJ1bm52cXpkZXZ3eTFmOHRSakxTZ0tRSQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdm5HeGNRSTBEWmFrZnYvQTVmZkprZWpSenRxTUFwb09LRVJIUnlidzRwUzVWQ2I0CkFBT0NzK3pMdTZJQlhtdzRYM1FwZW1lYklpM3pqb2JVTjF3SVJuWi92ZllzV3R6YjRvWlhEWkM3b0oxN2c3QW4KdzNzZDhRYTBmYzlVeXREQnlSUzZ4Yk10c0xiNy9FbDAwbW9ub0dMNkpqMDFiYml3Q29vZlc3bEZBWkpTdVpGbQptcVkzb1JTTnE3Y054TVAzbm9SdzNOb2FpQ3dTRjNGMVc5SWpyT3Q5SDZKZ0RIclZnODZJUlpVeUwwUUVCM3A1ClVyVEQvTCs5M2RSTnRLVHpxUitIb2dnTEF6VWNqQlVFTjNrZUNIUExXdHBTcmV3RGxoSlcwK2hUS1RreVlkU2sKR2IvdXBrL0M2cVRrdmp3RjErM0VKZFZmRDhzeUYydnVoWG40K3dJREFRQUJBb0lCQUN0SEVPaTZkSFBHRVBtZgpTd20zaG9IMjQzN2JZVWZTRkhlSUZKNlJ0ZG4zckNuNGRSRWp1eGNDTDhZaTZhYTRkeE1TQmI4QVBsdkZEMzBMCkhMeTcyRkdTNmpLVDk3NXFSRG0xQjZGWWk1clRUdGM5Tjd3UGhWMVpoYmkxWGZKOUFCeWU3bGF4QWlnUFhUSVcKeTBwcHZ6bU9aSVErRXA4dGdpdlMrWTlSaWVIeUpwYVdJQVBwcXByS1RjUFhuVnNHQXdjV0dmZ3lBdEhuSHdacworV053QXFXWC9YcnpvZzdYeW1MbkRHNUFxSnZWS1lrc2pQaU1wSkRoV2pZNnErNkNtZTdFY010RFpoT0YwdUZ4CmZUSFdKbDFpTkwrZTBXTWN0MndGT3E0R2xSUFNGYjZNeFg0WkthWTlVdDUrajdseFpwUlk1THN1MnpoemlGdmoKdzFkQVpRa0NnWUVBeG1hdUJHY2UyM1FtRklqTURwT0hYMVMrZ0t1bW5BRTc0K0VpcGhad0tkdE1OMDYzVGxOSQpES2dDZlBmY1lOK0xGdHVETUxDQ2ZteXRwc2tyOGZjQUdieHU4NWZXQW1mQ0pxNi9PVXpMbnVCZGFBSW5BcG9SCjIyZExpSTY3VGhFZ2gxVTA0elV1U0Z1UnJRZ2hNcWF3aTZiZlk5WnFxeWVkZkVremE0dldseGNDZ1lFQTlidWwKQnhqeFFSeWFjVUxkeGw3clpFNWNTcjJBRzB0N1FwK2t6NUxIZWlURjRPcCtjeklYM0x3VFNicmE3RzE3SCtpaQpVSW4zVStPLzMwcWQ1NDRvY2Q4YWt5OTV4cDV4RkhDU2VoOFpYNGxNMjgvZEw0NSs5V2o4U1dqczBPOVdlSnJrCkVCN1l0dVBRUlJiMy9wNWJ0VGxWVUtaRG4rU3hnUEQxVEN6ckc3MENnWUVBalUyTUdxNm5GMzE5c1pwTVd3VlAKb09IbVhCWGtyNjloVEVlSU9lbzVNRlp6emVCT1JZYWpCZ0NTNVJaUzZ0dkxZQmd2TTNwRE5tK0lyZ1VSTzEvRAp2cENxSk91N0RET0IzN01ObG0zUGgvUWNFbnVWOVJCdUwyaytMcUFaWHR4cjRuY1pGOGxFa1Z4R1FJcE51cGxsCm05RFp3VzF3d3oyUHVIa2FHanFhTnprQ2dZQVphL3c2cTczcHVvZlB4OWNodXBnbm5HTzM1N3JsRi8zOGVuK1cKYWR6eEtmUyt2QU93N3pIQXlFUkdrR290bzNYbGF5Ky9uVVpWQzI3Q0x2bi9CcG53amVBMThlZHJRT0Q1K0Z0dQovdUNsSFpNeCttTXJsRlpXRlRKa2RkSnFHeGliQ1lzbWo4cGp3Vlcra0EyLzdhb1hLWU5HQUsxbVVVWjd6SEhVCkc2R0hFUUtCZ1FDa0VkczFnTkNLa21mRGdNc3ovZkh6UXhFbHFsMFBDY2lvbjV4Um9jN1k4Y3lFbVZSekR1NW4KU0RKL1NxTkRORzlWOGFsM055VlF4K1lIT3pHdVBld1RPd2RHZkdhUGxLMTJkb3hLNVFlZGQ4UEpER2lua1BIdgpzSS9iU01DYytxTnI3Y0t3QW5waDM2OG1ZK0orTDRTQ3BnNzB4ZW91NHhTcDh4VVV1K25EdVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-opensearch-admin-certificate
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRZHYzaFNGOW9CeTlBeDBBbW1mNGdQREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkc2IyZG5hVzVuTUI0WERUSXlNRFl4TWpFME1EVXpNRm9YRFRNeU1EWXdPVEUwTURVegpNRm93RWpFUU1BNEdBMVVFQXhNSGJHOW5aMmx1WnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU9BL3Y5dU8zdnB1TzZGR0VCeUJiT3RWa0w3ZVFWT2hNUnZlL25oWjZRQWN2WldXTEpqL2RoTVQKUDIrTGZHY3FrOWxiZTlKcEVnQ2JZcW1ObmI2K01CSHlEdEs0VnYxSVQya1VWcW1pcG9RVXVHVUVNR01PTU0wcgpjZy9TK25MallXN1ErU3A3QWFPVFpWelFZcFIvL1BxV25yNzYvUXE0Yk1kV3FyZllpaXFhNFlNaEM0REF3WU52Ci9JNW1QK1hGMHlESnBDbDU1ZFBaOUpVUTM2QldtdUVPdTkrVnhFWTh6c25SRG1lSm5LRDdjZXdBWER6Vk16dUUKcXhJYTVmT2hhTGYxMGtrZ0R4Q2I1U1Rib1kyTUNEWnk3OFFpNzRmSERZSWN3Q0Rxa0cwdGh5WEQzZ0JDcGNYQgpvVWJ5d2tjc3FYUmFwYVJxME1JdHdtQXRWd3Y3L2dFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRNVlSZDd5U3lEellXNnZYUkovYTNFb3pjalB6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBR1dkTjdnQkU4eTV2TmQwNkgwY0xLakFNWFRScjh4VkdiOUYvYU9xSzZubnhSb1puSHVwTXMzUStOV3JMCjNUeVlPSjdTWTBZdjdvSUpYMjFCNXM5TWlBcmdILzN0eEpVemdXNzB3VGdyTVN0R3RBRTh4dmJKWEx5MUZPdTQKL3ExSEwvREVlcXlYRWhPVDNzL3VwVlI3Vi9WSHl4VC9NdGVKSTVFdnFXY3RsckNsb0JxR2VUS2dyWDRxWnFXdgpQTUFoQkpQbWpTVUpxSEpnQzBNSmhqNzl4SkZkT0h5SFI5VW5qL0RSQ0VKOTlsaWxmVnJBRSs1MVBSNzBZdEo1CkFNRkMvNnB0YVd6RzFDekdKTDFvS2xodVdPZ3ZaTDgzcWhmWHY3R2xxV1dkNXdPSVpVU0NSVHE5WW1VVUZLVFUKK3IyS2MxR3k4YVdwU3hvZmVySkdYL0oza2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURERENDQWZTZ0F3SUJBZ0lRUjZMaXVjcHpmc3hFR3oxS3RyZTBRREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkc2IyZG5hVzVuTUI0WERUSXlNRFl4TWpFME1EVXpNRm9YRFRNeU1EWXdPVEUwTURVegpNRm93RURFT01Bd0dBMVVFQXhNRllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUREa0wwUmJydkVud0F6NXMvZnIzMEdkUXNVTEZmRGlTREZvcXNDVmtsOXI4alVRMGlYWE8xaVJHQ20KNjlsK2VqNVpOYmpTRUw1Nk4xdDczek5JUW10YkZ5WmxDUERZWGRDckpKMERZeEt5MGk3YmJ6d3QvSG1GQkUzVApPYUZyYVd1VzA0UnZ1L2kzS0lpdmQ5Yi9RVG1jb2dya0pZVGhmWE4raGx1VUNvellyMElUOFB2Z1k4M0QvRUIwCnZhWlk0TlU3b1B4aGdlcTZyaHFSWGN1Nkd6L3RTVTJHWThLY1p2eUgvdXd0djl5dXVPWGJBM0lhZUkwZXJlckgKd2RyYTQ3c2RJd0Y2S0pKNWRqZmxwVThablA2dE5pc0FOUDVlZ2RtOW05b0ZtTDlPRGJCanJWMys0SGhreC8vRAo0cVh6MnZ0NEJPR3ljakhxNHVQZ2hjYTdhZzFSQWdNQkFBR2pZREJlTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkCkJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlYKSFNNRUdEQVdnQlE1WVJkN3lTeUR6WVc2dlhSSi9hM0VvemNqUHpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpFczFrU3FNWG1WWi9SdkNOcEhwYzlhdWpTeFM1TDgxd05vT28zMDZpVjlBNW03MVhEVTdxWHRzOWF0SFhtbVZOCk9HOGY0eURYenZPa0loTjl4aU1hZjN0c1JFeTVwYVRlZklZdDVBeUNBUWxXcktVSktPY0w4UU9nTkdXZXM3MWEKTkJpTFNmTCtuaGZLSkUwQlppYlVKWFg1MmdvbEtYWmVtWHJyb253L0dLUVh5MzBoVndoNDVIVmdkZHkvbzhQTQpsRG9vbnpkcGluQVZ1K0JmdkRHVUsxT1B6SXFiRzBIYXJrazlyeVVmczdXR1NjT3EzMFVCdGpXU3BMZnIrUThHCkNBTitlL0VpRmNHT2VRcXAzclhWOENxblk2Q0Vwd1d1aWV5ZXhSSFRQdUhCQ3ZVL0pXakQxdWptMTBpVTg3RU8KNmdxdjl0clZ0S3M2Q2dQRVliU3Rudz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdzVDOUVXNjd4SjhBTStiUDM2OTlCblVMRkN4WHc0a2d4YUtyQWxaSmZhL0kxRU5JCmwxenRZa1JncHV2WmZubytXVFc0MGhDK2VqZGJlOTh6U0VKcld4Y21aUWp3MkYzUXF5U2RBMk1Tc3RJdTIyODgKTGZ4NWhRUk4wem1oYTJscmx0T0ViN3Y0dHlpSXIzZlcvMEU1bktJSzVDV0U0WDF6Zm9aYmxBcU0ySzlDRS9ENwo0R1BOdy94QWRMMm1XT0RWTzZEOFlZSHF1cTRha1YzTHVocy83VWxOaG1QQ25HYjhoLzdzTGIvY3Jyamwyd055CkduaU5IcTNxeDhIYTJ1TzdIU01CZWlpU2VYWTM1YVZQR1p6K3JUWXJBRFQrWG9IWnZadmFCWmkvVGcyd1k2MWQKL3VCNFpNZi93K0tsODlyN2VBVGhzbkl4NnVMajRJWEd1Mm9OVVFJREFRQUJBb0lCQUQzSm94SzQ2N1pKamlUWAp6ZUdjYm1IMTVOUXcxbUcvRjQyWndYSHhsVEtTc1Y3dkN5WlhnK0RDUGM4L1FPNUc3Ui8rYXpCamZlcmJScG95CmdOOVpyTldRME42bkhvRWQwdW5mbllRT2J6LzBURDJrUFYxQ0lacTNLMmVMRThiOS9iSWZqZjVIWTJOcStSU0gKUm5STFJVcUpuK3RKTjF5TzZFaVhacU8xV1o2ejR6RjdiVDlsclord0ZySXhSU0NJUWFNbzVuMVZMSUpaMDlqcwplcHlwRkVVQnhXY3pKUm5GUVR2bkdpQk04TUxaK1dHdExlTDRDT3c0K3FnUlhzSFJIRldZSGZoL0Z2RXM3TnZLClpzMEhNdlp1b3BleEFtdU11Y2R6bldWOTllL3lyMXZQTzRMR0lVOG41WDdaTCtzcm1odW1iUEJvYjdKVDRpMmoKQjZobmwrRUNnWUVBMkJweHdDSG1sUlBncnVtV2JZK1hGVGRuTXdMUDRORmhTQXVGQUVmUEFvK0M2Yzdpc2IzRApDYWpoMGdqdVZGdEsyOXcvaXFDcFVYZ1pHOG42S0V1OHoxdTAxU3ZEMS9IRitxdHpVRmRESzFNSlEwcHhiNmNHCkQwbkNXM1FxRVVHTjVQTFlsSGxqK0hBcjh2cllOT2VaTHFld0kvYm91LzBaY0pDVHNqZElmL1VDZ1lFQTU2dWYKcEVGb2FjM0lwMWx6dkdsSHZyem44YkpzK2xCN2RJenFMd0l3VmdTb2FraEFBVTRVeW5wU1hTKzhGTHFvRWh3bwpyRFA3SmxVdVIyeWJVNnFnSWFicTAvTFhMRGpjSjNWbXRNSUhpS2Y0MFMzM3Avc2ZjWHRzYi9EUUZreXU0anVwCkdrNE5jd0hmaGJFWXN4MUdkU3BVeUljc01FbXRtZmQ3VXc3Y0NtMENnWUFKRUlybThVVVh5YjZwOTVoY3ZpSXIKUEtpeWhoS3NMbnd6Sm5DTXczWldlQ2lZb0JuNE5LcUN0RGZNdEoweW9xV3dOVHZoRjc0aWNiUXo2elA0RHIwNwp3WEFEWlJPUThrNUlwbnB1eTBwQS9mbXNmZW5tTWc1YUE5RUlQd1lvdFNRN2owZ3dhaXNjVjdBd1AvOWpzTGRICk1yZDd1cmFtZEFabUoxcGFwbUQvSlFLQmdRRGYrWXpkd0Y2eDY4R1NDV2xiUG0yZWVnUEVLRHd6eEp1V2txWFYKek1mdVlaSnhMbWl5MmtvL2R3TXFGSHhCampQdlRrb0VNajBkVWp6cjBKUmF6eHNCYmQ2YUNxejhrL3hFS2J5aQpCUFJEcWlGa0dvelVXblNMd2tlVDhiMDcwZWRCMFd3cmdrcCtaZEV6NzROeHAxdjI2bllOYUtIUURXdEk3M3JMClVoSnFBUUtCZ0FxR3pHSExFbDE0YTNFTHlJbWI4a2VYbkNWbWdGN2JhK0oyc2RkWTFsSXpjMDc1M2QxRllMeTgKRkFPelZmOXBEa0JWOTJRWkhONnMyRDdIQjNuMm96TnZEcll1ZFlPMGNyMVVUbFBhTm5BeG5aRTZzL1NXSHc4QgpvZzNOSTRFK0pkWjRlVEdWdnJwQStlMm1UUTVyVEtqMVlUcWY0UUpueVloVWx4TVdHNzJLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-securityconfig
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
type: Opaque
data:
  action_groups.yml: X21ldGE6CiAgdHlwZTogImFjdGlvbmdyb3VwcyIKICBjb25maWdfdmVyc2lvbjogMgo=
  config.yml: LS0tCl9tZXRhOgogIHR5cGU6ICJjb25maWciCiAgY29uZmlnX3ZlcnNpb246IDIKCmNvbmZpZzoKICBkeW5hbWljOgogICAgIyBTZXQgZmlsdGVyZWRfYWxpYXNfbW9kZSB0byAnZGlzYWxsb3cnIHRvIGZvcmJpZCBtb3JlIHRoYW4gMiBmaWx0ZXJlZCBhbGlhc2VzIHBlciBpbmRleAogICAgIyBTZXQgZmlsdGVyZWRfYWxpYXNfbW9kZSB0byAnd2FybicgdG8gYWxsb3cgbW9yZSB0aGFuIDIgZmlsdGVyZWQgYWxpYXNlcyBwZXIgaW5kZXggYnV0IHdhcm5zIGFib3V0IGl0IChkZWZhdWx0KQogICAgIyBTZXQgZmlsdGVyZWRfYWxpYXNfbW9kZSB0byAnbm93YXJuJyB0byBhbGxvdyBtb3JlIHRoYW4gMiBmaWx0ZXJlZCBhbGlhc2VzIHBlciBpbmRleCBzaWxlbnRseQogICAgI2ZpbHRlcmVkX2FsaWFzX21vZGU6IHdhcm4KICAgIGRvX25vdF9mYWlsX29uX2ZvcmJpZGRlbjogdHJ1ZQogICAga2liYW5hOgogICAgIyBvcGVuc2VhcmNoLWRhc2hib2FyZHMgbXVsdGl0ZW5hbmN5CiAgICAgIG11bHRpdGVuYW5jeV9lbmFibGVkOiB0cnVlCiAgICAgIHNlcnZlcl91c2VybmFtZTogb3BlbnNlYXJjaAogICAgICAjaW5kZXg6ICcua2liYW5hJwogICAgaHR0cDoKICAgICAgYW5vbnltb3VzX2F1dGhfZW5hYmxlZDogZmFsc2UKICAgICAgeGZmOgogICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgI2ludGVybmFsUHJveGllczogJzE5MlwuMTY4XC4wXC4xMHwxOTJcLjE2OFwuMFwuMTEnICMgcmVnZXggcGF0dGVybgogICAgICAgIGludGVybmFsUHJveGllczogJy4qJyAjIHRydXN0IGFsbCBpbnRlcm5hbCBwcm94aWVzLCByZWdleCBwYXR0ZXJuCiAgICAgICAgcmVtb3RlSXBIZWFkZXI6ICAneC1mb3J3YXJkZWQtZm9yJwogICAgICAgICMjIyMjIyBzZWUgaHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzcvZG9jcy9hcGkvamF2YS91dGlsL3JlZ2V4L1BhdHRlcm4uaHRtbCBmb3IgcmVnZXggaGVscAogICAgICAgICMjIyMjIyBtb3JlIGluZm9ybWF0aW9uIGFib3V0IFhGRiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9YLUZvcndhcmRlZC1Gb3IKICAgICAgICAjIyMjIyMgYW5kIGhlcmUgaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzcyMzkKICAgICAgICAjIyMjIyMgYW5kIGh0dHBzOi8vdG9tY2F0LmFwYWNoZS5vcmcvdG9tY2F0LTguMC1kb2MvY29uZmlnL3ZhbHZlLmh0bWwjUmVtb3RlX0lQX1ZhbHZlCiAgICBhdXRoYzoKICAgICAgYmFzaWNfaW50ZXJuYWxfYXV0aF9kb21haW46CiAgICAgICAgZGVzY3JpcHRpb246ICJBdXRoZW50aWNhdGUgdmlhIEhUVFAgQmFzaWMgYWdhaW5zdCBpbnRlcm5hbCB1c2VycyBkYXRhYmFzZSIKICAgICAgICBodHRwX2VuYWJsZWQ6IHRydWUKICAgICAgICB0cmFuc3BvcnRfZW5hYmxlZDogdHJ1ZQogICAgICAgIG9yZGVyOiAwCiAgICAgICAgaHR0cF9hdXRoZW50aWNhdG9yOgogICAgICAgICAgdHlwZTogYmFzaWMKICAgICAgICAgIGNoYWxsZW5nZTogdHJ1ZQogICAgICAgIGF1dGhlbnRpY2F0aW9uX2JhY2tlbmQ6CiAgICAgICAgICB0eXBlOiBpbnRlcm4=
  elasticsearch.yml.example: 
  internal_users.yml: LS0tCiMgVGhpcyBpcyB0aGUgaW50ZXJuYWwgdXNlciBkYXRhYmFzZQojIFRoZSBoYXNoIHZhbHVlIGlzIGEgYmNyeXB0IGhhc2ggYW5kIGNhbiBiZSBnZW5lcmF0ZWQgd2l0aCBwbHVnaW4vdG9vbHMvaGFzaC5zaAoKX21ldGE6CiAgdHlwZTogImludGVybmFsdXNlcnMiCiAgY29uZmlnX3ZlcnNpb246IDIKCiMgRGVmaW5lIHlvdXIgaW50ZXJuYWwgdXNlcnMgaGVyZQoKb3NhZG1pbjoKICBoYXNoOiAiJCRvcGVuc2VhcmNoLVBBU1NXT1JEX0hBU0giCiAgcmVzZXJ2ZWQ6IHRydWUKICBiYWNrZW5kX3JvbGVzOgogIC0gImFkbWluaXN0cmF0b3IiCiAgZGVzY3JpcHRpb246ICJvc2FkbWluIHVzZXIgZm9yIEVTIgoKb3BlbnNlYXJjaDoKICBoYXNoOiAiJCRvcGVuc2VhcmNoLWRhc2hib2FyZHNfUEFTU1dPUkRfSEFTSCIKICByZXNlcnZlZDogdHJ1ZQogIGJhY2tlbmRfcm9sZXM6CiAgLSAiYWRtaW5pc3RyYXRvciIKICBkZXNjcmlwdGlvbjogIm9wZW5zZWFyY2ggdXNlciBmb3Igb3BlbnNlYXJjaC1kYXNoYm9hcmRzIgoKdmlld2VyOgogIGhhc2g6ICIkJG9wZW5zZWFyY2gtZGFzaGJvYXJkc19SRUFET05MWV9QQVNTV09SRF9IQVNIIgogIHJlc2VydmVkOiB0cnVlCiAgYmFja2VuZF9yb2xlczoKICAtICJ2aWV3ZXIiCiAgZGVzY3JpcHRpb246ICJ2aWV3ZXIgcmVhZCBvbmx5IHVzZXIgZm9yIG9wZW5zZWFyY2gtZGFzaGJvYXJkcyIgIAoKZGV2ZWxvcGVyOgogIGhhc2g6ICIkJG9wZW5zZWFyY2gtZGFzaGJvYXJkc19ERVZFTE9QRVJfUEFTU1dPUkRfSEFTSCIKICByZXNlcnZlZDogdHJ1ZQogIGJhY2tlbmRfcm9sZXM6CiAgLSAiZGV2ZWxvcGVyIgogIGRlc2NyaXB0aW9uOiAiZGV2ZWxvcGVyIGRldmVsb3BlciB1c2VyIGZvciBvcGVuc2VhcmNoLWRhc2hib2FyZHMiICAgIA==
  nodes_dn.yml: X21ldGE6CiAgdHlwZTogIm5vZGVzZG4iCiAgY29uZmlnX3ZlcnNpb246IDIKCiMgRGVmaW5lIG5vZGVzZG4gbWFwcGluZyBuYW1lIGFuZCBjb3JyZXNwb25kaW5nIHZhbHVlcwpsb2dnaW5nOgogIG5vZGVzX2RuOgogICAgLSBDTj0qLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWw=
  roles.yml: X21ldGE6CiAgdHlwZTogInJvbGVzIgogIGNvbmZpZ192ZXJzaW9uOiAyCgojIFJlc3RyaWN0IHVzZXJzIHNvIHRoZXkgY2FuIG9ubHkgdmlldyB2aXN1YWxpemF0aW9uIGFuZCBkYXNoYm9hcmQgb24gb3BlbnNlYXJjaC1kYXNoYm9hcmRzCm9wZW5zZWFyY2gtZGFzaGJvYXJkc19yZWFkX29ubHk6CiAgcmVzZXJ2ZWQ6IHRydWUKCmFkbWluaXN0cmF0b3I6CiAgcmVzZXJ2ZWQ6IHRydWUKICBjbHVzdGVyX3Blcm1pc3Npb25zOgogICAgLSAiKiIgICAgCiAgaW5kZXhfcGVybWlzc2lvbnM6CiAgICAtIGluZGV4X3BhdHRlcm5zOgogICAgICAgIC0gIioiCiAgICAgIGFsbG93ZWRfYWN0aW9uczogICAgICAKICAgICAgICAtICIqIgogIHRlbmFudF9wZXJtaXNzaW9uczogICAgCiAgICAtIHRlbmFudF9wYXR0ZXJuczoKICAgICAgICAtICIqIiAgICAKICAgICAgYWxsb3dlZF9hY3Rpb25zOiAgICAKICAgICAgICAtICIqIgoKb3BlbnNlYXJjaC1kYXNoYm9hcmRzX3ZpZXdlcjoKICByZXNlcnZlZDogdHJ1ZQogIGNsdXN0ZXJfcGVybWlzc2lvbnM6CiAgICAtICJjbHVzdGVyX2NvbXBvc2l0ZV9vcHNfcm8iCiAgaW5kZXhfcGVybWlzc2lvbnM6CiAgICAtIGluZGV4X3BhdHRlcm5zOiAgCiAgICAgICAgLSAiKiIKICAgICAgYWxsb3dlZF9hY3Rpb25zOgogICAgICAgIC0gInJlYWQiICAgICAgICAKICAgICAgICAtICJzZWFyY2giCiAgICAgICAgLSAiZ2V0IiAgICAgICAgCiAgdGVuYW50X3Blcm1pc3Npb25zOgogIC0gdGVuYW50X3BhdHRlcm5zOgogICAgICAtICJnbG9iYWxfdGVuYW50IgogICAgYWxsb3dlZF9hY3Rpb25zOgogICAgICAtICJraWJhbmFfYWxsX3JlYWQiICAgCgpvcGVuc2VhcmNoLWRhc2hib2FyZHNfZGV2ZWxvcGVyOgogIHJlc2VydmVkOiB0cnVlCiAgY2x1c3Rlcl9wZXJtaXNzaW9uczoKICAgIC0gImNsdXN0ZXJfY29tcG9zaXRlX29wc19ybyIKICAgIC0gImNsdXN0ZXI6YWRtaW4vb3BlbnNlYXJjaC9yZXBvcnRzLyoiICAgICAKICBpbmRleF9wZXJtaXNzaW9uczoKICAgIC0gaW5kZXhfcGF0dGVybnM6CiAgICAgICAgLSAiKiIKICAgICAgYWxsb3dlZF9hY3Rpb25zOgogICAgICAgIC0gImdldCIKICAgICAgICAtICJyZWFkIiAgICAgICAKICAgICAgICAtICJzZWFyY2giCiAgICAgICAgLSAic3VnZ2VzdCIgICAgICAgIAogICAgICAgIC0gImluZGljZXM6YWRtaW4vcmVzb2x2ZS9pbmRleCIKICAgIC0gaW5kZXhfcGF0dGVybnM6CiAgICAgICAgLSAiLmtpYmFuYV8qX2RldmVsb3Blcl8qIgogICAgICBhbGxvd2VkX2FjdGlvbnM6CiAgICAgICAgLSAiZGF0YV9hY2Nlc3MiCiAgICAgICAgLSAiZ2V0IiAgCiAgICAgICAgLSAicmVhZCIgIAogICAgICAgIC0gIndyaXRlIiAgCiAgICAgICAgLSAibWFuYWdlIgogICAgICAgIC0gInNlYXJjaCIKICAgICAgICAtICJkZWxldGUiCiAgdGVuYW50X3Blcm1pc3Npb25zOgogIC0gdGVuYW50X3BhdHRlcm5zOgogICAgICAtICJnbG9iYWxfdGVuYW50IgogICAgYWxsb3dlZF9hY3Rpb25zOgogICAgICAtICJraWJhbmFfYWxsX3JlYWQiICAKICAtIHRlbmFudF9wYXR0ZXJuczoKICAgICAgLSAiRGV2ZWxvcGVyIiAgICAgIAogICAgYWxsb3dlZF9hY3Rpb25zOgogICAgICAtICJraWJhbmFfYWxsX3JlYWQiCiAgICAgIC0gImtpYmFuYV9hbGxfd3JpdGUiCiAgCiMgVGhlIHNlY3VyaXR5IFJFU1QgQVBJIGFjY2VzcyByb2xlIGlzIHVzZWQgdG8gYXNzaWduIHNwZWNpZmljIHVzZXJzIGFjY2VzcyB0byBjaGFuZ2UgdGhlIHNlY3VyaXR5IHNldHRpbmdzIHRocm91Z2ggdGhlIFJFU1QgQVBJLgpzZWN1cml0eV9yZXN0X2FwaV9hY2Nlc3M6CiAgcmVzZXJ2ZWQ6IHRydWUKIAojIEFsbG93cyB1c2VycyB0byB2aWV3IGFsZXJ0cwphbGVydGluZ192aWV3X2FsZXJ0czoKICByZXNlcnZlZDogdHJ1ZQogIGluZGV4X3Blcm1pc3Npb25zOgogICAgLSBpbmRleF9wYXR0ZXJuczoKICAgICAgLSAiLm9wZW5zZWFyY2gtYWxlcnRpbmctYWxlcnQqIgogICAgICBhbGxvd2VkX2FjdGlvbnM6CiAgICAgICAgLSByZWFkIAoKIyBBbGxvd3MgdXNlcnMgdG8gdmlldyBhbmQgYWNrbm93bGVkZ2UgYWxlcnRzCmFsZXJ0aW5nX2NydWRfYWxlcnRzOgogIHJlc2VydmVkOiB0cnVlCiAgaW5kZXhfcGVybWlzc2lvbnM6CiAgICAtIGluZGV4X3BhdHRlcm5zOgogICAgICAtICIub3BlbnNlYXJjaC1hbGVydGluZy1hbGVydCoiCiAgICAgIGFsbG93ZWRfYWN0aW9uczoKICAgICAgIC0gY3J1ZCAKCiMgQWxsb3dzIHVzZXJzIHRvIHVzZSBhbGwgYWxlcnRpbmcgZnVuY3Rpb25hbGl0eQphbGVydGluZ19mdWxsX2FjY2VzczoKICByZXNlcnZlZDogdHJ1ZQogIGluZGV4X3Blcm1pc3Npb25zOgogICAgLSBpbmRleF9wYXR0ZXJuczoKICAgICAgLSAiLm9wZW5zZWFyY2gtYWxlcnRpbmctY29uZmlnIgogICAgICAtICIub3BlbnNlYXJjaC1hbGVydGluZy1hbGVydCoiCiAgICAgIGFsbG93ZWRfYWN0aW9uczoKICAgICAgICAtIGNydWQgICAg
  roles_mapping.yml: LS0tCiMgSW4gdGhpcyBmaWxlIHVzZXJzLCBiYWNrZW5kcm9sZXMgYW5kIGhvc3RzIGNhbiBiZSBtYXBwZWQgdG8gT3BlbiBEaXN0cm8gU2VjdXJpdHkgcm9sZXMuCiMgUGVybWlzc2lvbnMgZm9yIE9wZW5kaXN0cm8gcm9sZXMgYXJlIGNvbmZpZ3VyZWQgaW4gcm9sZXMueW1sCgpfbWV0YToKICB0eXBlOiAicm9sZXNtYXBwaW5nIgogIGNvbmZpZ192ZXJzaW9uOiAyCgojIEFkbWluaXN0cmF0b3IgcHJpdmlsZWdlcwphbGxfYWNjZXNzOgogIHJlc2VydmVkOiB0cnVlCiAgYmFja2VuZF9yb2xlczogCiAgLSBhZG1pbmlzdHJhdG9yCiAgZGVzY3JpcHRpb246ICJNYXBzIGV4dGVybmFsIG9zIHVzZXIgdG8gYWRtaW4gcm9sZSIKCmFkbWluaXN0cmF0b3I6CiAgcmVzZXJ2ZWQ6IHRydWUKICBiYWNrZW5kX3JvbGVzOiAKICAtIGFkbWluaXN0cmF0b3IKICBkZXNjcmlwdGlvbjogIk1hcHMgZXh0ZXJuYWwgb3MgdXNlciB0byBhZG1pbiByb2xlIgoKYWxlcnRpbmdfZnVsbF9hY2Nlc3M6CiAgcmVzZXJ2ZWQ6IHRydWUKICBiYWNrZW5kX3JvbGVzOiAKICAtIGFkbWluaXN0cmF0b3IKICBkZXNjcmlwdGlvbjogIk1hcHMgZXh0ZXJuYWwgb3MgdXNlciB0byBhZG1pbiByb2xlIgoKIyBWaWV3ZXIgLSByZWFkb25seSBhY2Nlc3MKb3BlbnNlYXJjaC1kYXNoYm9hcmRzX3ZpZXdlcjoKICByZXNlcnZlZDogdHJ1ZQogIHVzZXJzOgogICAgLSB2aWV3ZXIKICBiYWNrZW5kX3JvbGVzOiAKICAtIHZpZXdlcgogIGRlc2NyaXB0aW9uOiAiTWFwcyB2aWV3ZXIgYmFja2VuZCByb2xlIgoKYWxlcnRpbmdfdmlld19hbGVydHM6CiAgcmVzZXJ2ZWQ6IHRydWUKICB1c2VyczoKICAgIC0gdmlld2VyCiAgYmFja2VuZF9yb2xlczogCiAgLSB2aWV3ZXIKICBkZXNjcmlwdGlvbjogIk1hcHMgdmlld2VyIGJhY2tlbmQgcm9sZSIKCgojIERldmVsb3BlciBhY2Nlc3MKb3BlbnNlYXJjaC1kYXNoYm9hcmRzX2RldmVsb3BlcjoKICByZXNlcnZlZDogdHJ1ZQogIHVzZXJzOgogICAgLSBkZXZlbG9wZXIKICBiYWNrZW5kX3JvbGVzOiAKICAtIGRldmVsb3BlciAgCiAgZGVzY3JpcHRpb246ICJNYXBzIGRldmVsb3BlciBiYWNrZW5kIHJvbGUiCgphbGVydGluZ19jcnVkX2FsZXJ0czoKICByZXNlcnZlZDogdHJ1ZQogIHVzZXJzOgogICAgLSBkZXZlbG9wZXIKICBiYWNrZW5kX3JvbGVzOiAKICAtIGRldmVsb3BlcgogIGRlc2NyaXB0aW9uOiAiTWFwcyBkZXZlbG9wZXIgYmFja2VuZCByb2xlIgoKIyBraWJhbmEgdXNlciAgYWNjZXNzCmtpYmFuYV91c2VyOgogIHJlc2VydmVkOiB0cnVlCiAgYmFja2VuZF9yb2xlczogCiAgLSB2aWV3ZXIKICAtIGRldmVsb3BlcgogIGRlc2NyaXB0aW9uOiAiTWFwcyB2aWV3ZXIgYW5kIGRldmVsb3BlciBiYWNrZW5kIHJvbGVzIHRvIG9wZW5zZWFyY2gtZGFzaGJvYXJkc191c2VyIHJvbGUiICAgICAg
  tenants.yml: LS0tCl9tZXRhOgogIHR5cGU6ICJ0ZW5hbnRzIgogIGNvbmZpZ192ZXJzaW9uOiAyCgpEZXZlbG9wZXI6CiAgcmVzZXJ2ZWQ6IHRydWUKICBkZXNjcmlwdGlvbjogIm9wZW5zZWFyY2gtZGFzaGJvYXJkcyB0ZW5hbnQgZm9yIGRldmVsb3BlcnMiCg==
  whitelist.yml: LS0tCl9tZXRhOgogIHR5cGU6ICJ3aGl0ZWxpc3QiCiAgY29uZmlnX3ZlcnNpb246IDIKCiMgRGVzY3JpcHRpb246CiMgZW5hYmxlZCAtIGZlYXR1cmUgZmxhZy4KIyBpZiBlbmFibGVkIGlzIGZhbHNlLCB0aGUgd2hpdGVsaXN0aW5nIGZlYXR1cmUgaXMgcmVtb3ZlZC4KIyBUaGlzIGlzIGxpa2UgcmVtb3ZpbmcgdGhlIGNoZWNrIHRoYXQgY2hlY2tzIGlmIGFuIEFQSSBpcyB3aGl0ZWxpc3RlZC4KIyBUaGlzIGlzIGVxdWl2YWxlbnQgdG8gY29udGludWluZyB3aXRoIHRoZSB1c3VhbCBhY2Nlc3MgY29udHJvbCBjaGVja3MsIGFuZCByZW1vdmluZyBhbGwgdGhlIGNvZGUgdGhhdCBpbXBsZW1lbnRzIHdoaXRlbGlzdGluZy4KIyBpZiBlbmFibGVkIGlzIHRydWUsIHRoZW4gYWxsIHVzZXJzIGV4Y2VwdCBTdXBlckFkbWluIGNhbiBhY2Nlc3Mgb25seSB0aGUgQVBJcyBpbiByZXF1ZXN0cwojIFN1cGVyQWRtaW4gY2FuIGFjY2VzcyBhbGwgQVBJcy4KIyBTdXBlckFkbWluIGlzIGRlZmluZWQgYnkgdGhlIFN1cGVyQWRtaW4gY2VydGlmaWNhdGUsIHdoaWNoIGlzIGNvbmZpZ3VyZWQgaW4gdGhlIG9wZW5zZWFyY2gueW1sIHNldHRpbmc6IHBsdWdpbnMuc2VjdXJpdHkuYXV0aGN6LmFkbWluX2RuOgojIFJlZmVyIHRvIHRoZSBleGFtcGxlIHNldHRpbmcgaW4gb3BlbnNlYXJjaC55bWwuZXhhbXBsZSwgYW5kIHRoZSBvcGVuZGlzdHJvIGRvY3VtZW50YXRpb24gdG8ga25vdyBtb3JlIGFib3V0IGNvbmZpZ3VyaW5nIFN1cGVyQWRtaW4uCiMKIyByZXF1ZXN0cyAtIG1hcCBvZiB3aGl0ZWxpc3RlZCBlbmRwb2ludHMsIGFuZCB0aGUgd2hpdGVsaXN0ZWQgSFRUUCByZXF1ZXN0cyBmb3IgdGhvc2UgZW5kcG9pbnRzCgojIEV4YW1wbGVzIHNob3dpbmcgaG93IHRvIGNvbmZpZ3VyZSB0aGlzIHltbCBmaWxlIChtYWtlIHN1cmUgdGhlIF9tZXRhIGRhdGEgZnJvbSBhYm92ZSBpcyBhbHNvIHRoZXJlKToKIyBFeGFtcGxlIDE6CiMgVG8gZW5hYmxlIHdoaXRlbGlzdGluZyBhbmQgd2hpdGVsaXN0IEdFVCAvX2NsdXN0ZXIvc2V0dGluZ3MKIwojY29uZmlnOgojICBlbmFibGVkOiB0cnVlCiMgIHJlcXVlc3RzOgojICAgIC9fY2x1c3Rlci9zZXR0aW5nczoKIyAgICAgIC0gR0VUCiMKIyBFeGFtcGxlIDI6CiMgSWYgeW91IHdhbnQgdG8gd2hpdGVsaXN0IG11bHRpcGxlIHJlcXVlc3QgbWV0aG9kcyBmb3IgL19jbHVzdGVyL3NldHRpbmdzIChHRVQsUFVUKToKIwojY29uZmlnOgojICBlbmFibGVkOiB0cnVlCiMgIHJlcXVlc3RzOgojICAgIC9fY2x1c3Rlci9zZXR0aW5nczoKIyAgICAgIC0gR0VUCiMgICAgICAtIFBVVAojCiMgRXhhbXBsZSAzOgojIElmIHlvdSB3YW50IHRvIHdoaXRlbGlzdCBvdGhlciBBUElzIGFzIHdlbGwsIGZvciBleGFtcGxlIEdFVCAvX2NhdC9ub2RlcywgYW5kIEdFVCAvX2NhdC9zaGFyZHM6CiMKI2NvbmZpZzoKIyAgZW5hYmxlZDogdHJ1ZQojICByZXF1ZXN0czoKIyAgICAvX2NsdXN0ZXIvc2V0dGluZ3M6CiMgICAgICAtIEdFVAojICAgICAgLSBQVVQKIyAgICAvX2NhdC9ub2RlczoKIyAgICAgIC0gR0VUCiMgICAgL19jYXQvc2hhcmRzOgojICAgICAgLSBHRVQKIwojIEV4YW1wbGUgNDoKIyBJZiB5b3Ugd2FudCB0byBkaXNhYmxlIHRoZSB3aGl0ZWxpc3RpbmcgZmVhdHVyZSwgc2V0IGVuYWJsZWQgdG8gZmFsc2UuCiMgIGVuYWJsZWQ6IGZhbHNlCiMgIHJlcXVlc3RzOgojICAgIC9fY2x1c3Rlci9zZXR0aW5nczoKIyAgICAgIC0gR0VUCiMKI0F0IHRoaXMgcG9pbnQsIGFsbCBBUElzIGJlY29tZSB3aGl0ZWxpc3RlZCBiZWNhdXNlIHRoZSBmZWF0dXJlIHRvIHdoaXRlbGlzdCBpcyBvZmYsIHNvIHJlcXVlc3RzIGlzIGlycmVsZXZhbnQuCgoKI3RoaXMgbmFtZSBtdXN0IGJlIGNvbmZpZwpjb25maWc6CiAgZW5hYmxlZDogZmFsc2UKICByZXF1ZXN0czoKICAgIC9fY2x1c3Rlci9zZXR0aW5nczoKICAgICAgLSBHRVQKICAgIC9fY2F0L25vZGVzOgogICAgICAtIEdFVAo=
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-opensearch-credentials-admin
data:
  username: b3NhZG1pbg==
  password: b3NhZG1pbg==
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-opensearch-dashboards-credentials-admin
data:
  username: b3BlbnNlYXJjaA==
  password: b3BlbnNlYXJjaA==
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-opensearch-dashboards-credentials-developer
data:
  username: ZGV2ZWxvcGVy
  password: ZGV2ZWxvcA==
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-opensearch-dashboards-credentials-readonly
data:
  username: dmlld2Vy
  password: dmlldw==
type: Opaque
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-fluentbit
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
    k8s-app: fluent-bit
data:
  fluent-bit.conf: |-
    [SERVICE]
        Flush                         1
        Log_Level                     info
        Daemon                        off
        Parsers_File                  parsers.conf
        HTTP_Server                   On
        HTTP_Listen                   0.0.0.0
        HTTP_Port                     2020
        storage.type                  filesystem
        storage.path                  /var/log/flb-storage/
        storage.sync                  normal
        storage.checksum              off
        storage.backlog.mem_limit     50M
        storage.max_chunks_up         1000
        storage.metrics               on

    @INCLUDE _input-tail.conf
    @INCLUDE _input-systemd.conf


    # Filter order does matter
    @INCLUDE _filter-kubernetes.conf
    @INCLUDE _filter-de_dot.conf

    @INCLUDE filter-*.conf
    @INCLUDE _output-kafka.conf
  _input-tail.conf: |-
    [INPUT]
        Name              tail
        Tag               kube.<pod_id>.<namespace_name>.<pod_name>.<container_name>
        Tag_Regex         /var/log/pods/(?<namespace_name>[^_/]+)_(?<pod_name>[^_/]+)_(?<pod_id>[^_/]+)/(?<container_name>[^/]+)/.*
        Path              /var/log/pods/*/*/*.log
        DB                /var/log/flb_kube.db
        Exclude_Path      /var/log/pods/*/*/*.gz,/var/log/pods/*/*/*.zip
        Skip_Long_Lines   Off
        Refresh_Interval  10
        Read_from_Head    False
        multiline.parser  cri, go, java
  _input-systemd.conf: |-
    [INPUT]
        Name                systemd
        Tag                 systemd.*
        Systemd_Filter      _SYSTEMD_UNIT=kubelet.service
        Systemd_Filter      _SYSTEMD_UNIT=docker.service
        Systemd_Filter_Type Or
        Read_From_Tail      On
        Path                /run/log/journal
        Strip_Underscores   On
  _filter-kubernetes.conf: |-
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_Tag_Prefix     kube.
        Regex_Parser        kube-tag
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Merge_Log           On
        Keep_Log            On
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
        Labels              On
        Kube_Meta_Cache_TTL 60s
        Annotations         Off
  _filter-de_dot.conf: |-
    [FILTER]
        Name    lua
        Match   kube.*
        script  /fluent-bit/etc/dedot.lua
        call    dedot
  _output-opensearch-journals.conf: |-
    [OUTPUT]
        Name                opensearch
        Match               systemd.*
        Host                ${FLUENT_opensearch_HOST}
        Port                ${FLUENT_opensearch_PORT}
        HTTP_User           ${FLUENT_opensearch_USER}
        HTTP_Passwd         ${FLUENT_opensearch_PASSWORD}
        Logstash_Format     On
        Logstash_Prefix     systemd
        Replace_Dots        On
        Retry_Limit         False
        Trace_Error         On
        Suppress_Type_Name  On
        Include_Tag_Key     Off
        Time_Key_Nanos      Off
        Generate_ID         On
        tls                 On
        tls.Verify          On
        tls.ca_file         /fluent-bit/ssl/root-ca.pem
        tls.crt_file        /fluent-bit/ssl/admin.pem
        tls.key_file        /fluent-bit/ssl/admin-key.pem
  _output-opensearch-containers.conf: |-
    [OUTPUT]
        Name                opensearch
        Match               kube.*
        Host                ${FLUENT_opensearch_HOST}
        Port                ${FLUENT_opensearch_PORT}
        HTTP_User           ${FLUENT_opensearch_USER}
        HTTP_Passwd         ${FLUENT_opensearch_PASSWORD}
        Logstash_Format     On
        Logstash_Prefix     containers
        Replace_Dots        On
        Retry_Limit         False
        Trace_Error         On
        Suppress_Type_Name  On
        Include_Tag_Key     Off
        Time_Key_Nanos      Off
        Generate_ID         On
        tls                 On
        tls.Verify          On
        tls.ca_file         /fluent-bit/ssl/root-ca.pem
        tls.crt_file        /fluent-bit/ssl/admin.pem
        tls.key_file        /fluent-bit/ssl/admin-key.pem
        Buffer_Size         1024kb
  _output-kafka.conf: |-
    [OUTPUT]
        Name                             kafka
        Match                            *
        Brokers                          release-name-kafka-0:9092
        Topics                           containers
        Retry_Limit                      False
        timestamp_format                 iso8601
        rdkafka.log.connection.close     false
        rdkafka.request.required.acks    all
        rdkafka.message.max.bytes        10000000
        rdkafka.queue.buffering.max.ms   50
        rdkafka.client.id                ${HOSTNAME}
  dedot.lua: |-
    function dedot(tag, timestamp, record)
      if record["kubernetes"] == nil then
        return 0, 0, 0
      end
      dedot_keys(record["kubernetes"]["annotations"])
      dedot_keys(record["kubernetes"]["labels"])
      return 1, timestamp, record
    end

    function dedot_keys(map)
        if map == nil then
            return
        end
        local new_map = {}
        local changed_keys = {}
        for k, v in pairs(map) do
            local dedotted = string.gsub(k, "%.", "_")
            if dedotted ~= k then
                new_map[dedotted] = v
                changed_keys[k] = true
            end
        end
        for k in pairs(changed_keys) do
            map[k] = nil
        end
        for k, v in pairs(new_map) do
            map[k] = v
        end
    end
  parsers.conf: "[PARSER]\n    Name        kube-tag\n    Format      regex\n    Regex       ^(?<pod_id>[^_/]+)\\.(?<namespace_name>[^_/]+)\\.(?<pod_name>[^_/]+)\\.(?<container_name>[^/]+)$\n\n[PARSER]\n    Name        syslog\n    Format      regex\n    Regex       ^\\<(?<pri>[0-9]+)\\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?<pid>[0-9]+)\\])?(?:[^\\:]*\\:)? *(?<message>.*)$\n    Time_Key    time\n    Time_Format %b %d %H:%M:%S\n\n# Appending any additional parsers from fluentbit-custom-files\n# parsers.conf must be the LAST file as parsers.conf \n# does NOT support the @INCLUDE syntax to append more.\n#\n# Using regexMatch (and others) from https://github.com/Masterminds/sprig/blob/master/regex.go\n\n\n\n#fluentbit-configs/parser-nginx.conf\n[PARSER]\n    Name        k8s-nginx-ingress\n    Format      regex\n    Regex       ^(?<host>[^ ]*) - (?<user>[^ ]*) \\[(?<time>[^\\]]*)\\] \"(?<method>\\S+)(?: +(?<path>[^\\\"]*?)(?: +\\S*)?)?\" (?<code>[^ ]*) (?<size>[^ ]*) \"(?<referrer>[^\\\"]*)\" \"(?<agent>[^\\\"]*)\" (?<request_length>[^ ]*) (?<request_time>[^ ]*) \\[(?<proxy_upstream_name>[^ ]*)\\] (\\[(?<proxy_alternative_upstream_name>[^ ]*)\\] )?(?<upstream_addr>[^ ]*) (?<upstream_response_length>[^ ]*) (?<upstream_response_time>[^ ]*) (?<upstream_status>[^ ]*) (?<reg_id>[^ ]*).*$\n    Time_Key    time\n    Time_Format %d/%b/%Y:%H:%M:%S %z"
  filter-nginx.conf: |-
    [FILTER]
        Name          rewrite_tag
        Match         kube.*
        Rule          $kubernetes['labels']['app_kubernetes_io/name'] "^(ingress-nginx)$" nginx false
    [FILTER]
        Name                parser
        Match               nginx
        Key_Name            log
        Parser              k8s-nginx-ingress
        Reserve_Data        True
  output-nginx.conf: |-
    [OUTPUT]
        Name                opensearch
        Match               nginx
        Host                ${FLUENT_opensearch_HOST}
        Port                ${FLUENT_opensearch_PORT}
        HTTP_User           ${FLUENT_opensearch_USER}
        HTTP_Passwd         ${FLUENT_opensearch_PASSWORD}
        Logstash_Format     On
        Logstash_Prefix     nginx
        Replace_Dots        On
        Retry_Limit         False
        Trace_Error         On
        Suppress_Type_Name  On
        Include_Tag_Key     Off
        Time_Key_Nanos      Off
        Generate_ID         On
        tls                 On
        tls.Verify          On
        tls.ca_file         /fluent-bit/ssl/root-ca.pem
        tls.crt_file        /fluent-bit/ssl/admin.pem
        tls.key_file        /fluent-bit/ssl/admin-key.pem
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-init
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
data:
  check_host_port.sh: |-
    #!/bin/bash
    set -e

    if [[ $1 == http* ]]; then
      # extract the protocol
      proto="$(echo $1 | grep :// | sed -e's,^\(.*://\).*,\1,g')"
      # remove the protocol
      url="$(echo ${1/$proto/})"
      # extract the user (if any)
      user="$(echo $url | grep @ | cut -d@ -f1)"
      # extract the host and port
      hostport="$(echo ${url/$user@/} | cut -d/ -f1)"
      # by request host without port
      host="$(echo $hostport | sed -e 's,:.*,,g')"
      # by request - try to extract the port
      port=`echo $hostport | grep : | cut -d: -f2`
      if [[ -z $port ]]; then
        if [[ $proto = http:// ]]; then
          port=80
        fi
        if [[ $proto == https:// ]]; then
          port=443
        fi
     fi
     else
       host=$1
       port=$2
     fi

     echo "checking $host:$port"

     until $(nc -z -w 5 $host $port); do
       echo "retrying $host:$port"
       sleep 5
     done

     echo "initialized"
  check_os.sh: |-
    #!/bin/bash
    set -e

    if [ -z ${os_url+x} ]; then
      echo "opensearch url env variable (os_url) is expected but not found";
      exit -1
    elif [ -z ${os_user+x} ]; then
      echo "opensearch user env variable (os_user) is expected but not found";
      exit -1
    elif [ -z ${os_pass+x} ]; then
      echo "opensearch password env variable (os_pass) is expected but not found";
      exit -1
    fi

    echo "checking opensearch $os_url"

    check="curl -sk -w "%{http_code}" -u$os_user:$os_pass $os_url -o /dev/null"

    until [[ $($check) == "200" ]]; do
      echo "retrying $os_url"
      sleep 5
    done
  init_os_node.sh: |-
    #!/bin/bash
    set -e

    for f in /config/*.pem
    do
      echo "converting $f key to pkcs8"

      filename=$(basename -- "$f")
      filename="${filename%.*}"

      openssl pkcs8 -topk8 -inform PEM -outform PEM  \
      -v1 PBE-SHA1-3DES -in $f -out "/shared/$filename.key" -nocrypt

    done
    chown 1000:1000 /shared && chmod 644 /shared/*

    if [ "$1" = "-only-keys" ]; then
      exit 0
    fi

    /sbin/sysctl -w vm.max_map_count=262144
    chown 1000:1000  /data

    if [ -d /snapshot ]; then
      chown 1000:1000 /snapshot
    fi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-logstash
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
data:
  pipelines.yml: |-
    - pipeline.id: distributor
      path.config: /usr/share/logstash/pipeline/{00_input,01_filter,02_distributor}.conf
    - pipeline.id: containers-pipeline.conf
      path.config: /usr/share/logstash/pipeline/containers-pipeline.conf

    - pipeline.id: nginx-pipeline.conf
      path.config: /usr/share/logstash/pipeline/nginx-pipeline.conf

    - pipeline.id: systemd-pipeline.conf
      path.config: /usr/share/logstash/pipeline/systemd-pipeline.conf
  log4j2.properties: |-
    status = error
    name = LogstashPropertiesConfig

    appender.console.type = Console
    appender.console.name = plain_console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c] %m%n

    appender.json_console.type = Console
    appender.json_console.name = json_console
    appender.json_console.layout.type = JSONLayout
    appender.json_console.layout.compact = true
    appender.json_console.layout.eventEol = true

    rootLogger.level = ${sys:ls.log.level}

    rootLogger.appenderRef.console.ref = ${sys:ls.log.format}_console

    logger.opensearch_output.name = logstash.outputs.opensearch
    logger.opensearch_output.level = warn

    logger.inputs_kafka.name=logstash.inputs.kafka
    logger.inputs_kafka.level=warn

    #slowlog.threshold.warn: 2s
    #slowlog.threshold.info: 1s
    #slowlog.threshold.debug: 500ms
    #slowlog.threshold.trace: 100ms

    #logger.inputs.name=logstash.inputs.file
    #logger.inputs.level=warn
    #logger.outputs.name=logstash.outputs.kafka
    #logger.outputs.level=debug
    #logger.pipeline.name=logstash.pipeline
    #logger.pipeline.level=debug
    #logger.grok.name=logstash.filters.grok
    #logger.grok.level=debug
    #logger.mutate.name=logstash.filters.mutate
    #logger.mutate.level=debug
  logstash.yml: |-
    http.host: "0.0.0.0"
    path.settings: /usr/share/logstash/config

    queue.type: persisted
    queue.drain: true

    pipeline.batch.size: 1000
    pipeline.workers: 10
    pipeline.ecs_compatibility: disabled

    log.format: plain
    log.level: warn

    config.reload.automatic: true
  jvm.options: |-
    ## JVM configuration

    # Xms represents the initial size of total heap space
    # Xmx represents the maximum size of total heap space

    -Xms1g
    -Xmx1g

    ################################################################
    ## Expert settings
    ################################################################
    ##
    ## All settings below this section are considered
    ## expert settings. Don't tamper with them unless
    ## you understand what you are doing
    ##
    ################################################################

    ## GC configuration
    8-13:-XX:+UseConcMarkSweepGC
    8-13:-XX:CMSInitiatingOccupancyFraction=75
    8-13:-XX:+UseCMSInitiatingOccupancyOnly

    ## Locale
    # Set the locale language
    #-Duser.language=en

    # Set the locale country
    #-Duser.country=US

    # Set the locale variant, if any
    #-Duser.variant=

    ## basic

    # set the I/O temp directory
    #-Djava.io.tmpdir=$HOME

    # set to headless, just in case
    -Djava.awt.headless=true

    # ensure UTF-8 encoding by default (e.g. filenames)
    -Dfile.encoding=UTF-8

    # use our provided JNA always versus the system one
    #-Djna.nosys=true

    # Turn on JRuby invokedynamic
    -Djruby.compile.invokedynamic=true
    # Force Compilation
    -Djruby.jit.threshold=0
    # Make sure joni regexp interruptability is enabled
    -Djruby.regexp.interruptible=true

    ## heap dumps

    # generate a heap dump when an allocation from the Java heap fails
    # heap dumps are created in the working directory of the JVM
    -XX:+HeapDumpOnOutOfMemoryError

    # specify an alternative path for heap dumps
    # ensure the directory exists and has sufficient space
    #-XX:HeapDumpPath=${LOGSTASH_HOME}/heapdump.hprof

    ## GC logging
    #-XX:+PrintGCDetails
    #-XX:+PrintGCTimeStamps
    #-XX:+PrintGCDateStamps
    #-XX:+PrintClassHistogram
    #-XX:+PrintTenuringDistribution
    #-XX:+PrintGCApplicationStoppedTime

    # log GC status to a file with time stamps
    # ensure the directory exists
    #-Xloggc:${LS_GC_LOG_FILE}

    # Entropy source for randomness
    -Djava.security.egd=file:/dev/urandom

    # Copy the logging context from parent threads to children
    -Dlog4j2.isThreadContextMapInheritable=true

    17-:--add-opens java.base/sun.nio.ch=ALL-UNNAMED
    17-:--add-opens java.base/java.io=ALL-UNNAMED
  startup.options: |-
    ################################################################################
    # These settings are ONLY used by $LS_HOME/bin/system-install to create a custom
    # startup script for Logstash and is not used by Logstash itself. It should
    # automagically use the init system (systemd, upstart, sysv, etc.) that your
    # Linux distribution uses.
    #
    # After changing anything here, you need to re-run $LS_HOME/bin/system-install
    # as root to push the changes to the init script.
    ################################################################################

    # Override Java location
    #JAVACMD=/usr/bin/java

    # Set a home directory
    LS_HOME=/usr/share/logstash

    # logstash settings directory, the path which contains logstash.yml
    LS_SETTINGS_DIR=/etc/logstash

    # Arguments to pass to logstash
    LS_OPTS="--path.settings ${LS_SETTINGS_DIR}"

    # Arguments to pass to java
    LS_JAVA_OPTS=""

    # pidfiles aren't used the same way for upstart and systemd; this is for sysv users.
    LS_PIDFILE=/var/run/logstash.pid

    # user and group id to be invoked as
    LS_USER=logstash
    LS_GROUP=logstash

    # Enable GC logging by uncommenting the appropriate lines in the GC logging
    # section in jvm.options
    LS_GC_LOG_FILE=/var/log/logstash/gc.log

    # Open file limit
    LS_OPEN_FILES=16384

    # Nice level
    LS_NICE=19

    # Change these to have the init script named and described differently
    # This is useful when running multiple instances of Logstash on the same
    # physical box or vm
    SERVICE_NAME="logstash"
    SERVICE_DESCRIPTION="logstash"

    # If you need to run a command or script before launching Logstash, put it
    # between the lines beginning with `read` and `EOM`, and uncomment those lines.
    ###
    ## read -r -d '' PRESTART << EOM
    ## EOM
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-logstash-pipelines
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
data:
  00_input.conf: |-
    input {

      kafka {
        bootstrap_servers => ["${kafka_brokers}"]
        topics => ["containers"]
        client_id => "logstash"
        group_id => "logstash"
        auto_offset_reset => "latest"
        consumer_threads => 5
        receive_buffer_bytes => 1000000
        enable_metric => "true"
        codec => "json"
      }

    }
  01_filter.conf: |-
    filter {

      # generate id
      uuid {
        target => "[@metadata][uuid]"
      }

      #some logs keep timestamps in ts field
      if [ts] {
        date {
            match => [ "ts", "MMM dd, yyyy @ HH:mm:ss.SSS", "ISO8601" ]
            target => "@timestamp"
            tag_on_failure => ["_dateparsefailure"]
            remove_field => ["ts"]
        }
      }

      if [time] {
        date {
            match => [ "time", "MMM dd, yyyy @ HH:mm:ss.SSS", "ISO8601" ]
            target => "@timestamp"
            tag_on_failure => ["_dateparsefailure"]
            remove_field => ["time"]
        }
      }

      #some logs keep timestamps in timestamp field
      if [timestamp] {
        date {
            match => [ "timestamp", "MMM dd, yyyy @ HH:mm:ss.SSS", "ISO8601" ]
            target => "@timestamp"
            tag_on_failure => ["_dateparsefailure"]
            remove_field => ["timestamp"]
        }
      }

    # end of filter
    }
  02_distributor.conf: |-
    output {

      if [SYSTEMD_UNIT] {

        pipeline { send_to => systemd }

      } else if "ingress-nginx" in [kubernetes][labels][app_kubernetes_io/name] {

        pipeline { send_to => nginx }

      } else {

        pipeline { send_to => containers }

      }

    }
  containers-pipeline.conf: |-
    input {
      pipeline { address => "containers" }
    }

    output {
      opensearch {
          hosts => ["${os_url}"]
          user => "${os_user:\"\"}"
          password => "${os_pass:\"\"}"
          cacert => "/usr/share/logstash/certs/root-ca.pem"
          index => "containers-%{+YYYY.MM.dd}"
          ssl => "true"
          document_id => "%{[@metadata][uuid]}"
        }
    }
  nginx-pipeline.conf: |-
    input {
      pipeline { address => "nginx" }
    }

    output {
      opensearch {
          hosts => ["${os_url}"]
          user => "${os_user:\"\"}"
          password => "${os_pass:\"\"}"
          cacert => "/usr/share/logstash/certs/root-ca.pem"
          index => "nginx-%{+YYYY.MM.dd}"
          ssl => "true"
          document_id => "%{[@metadata][uuid]}"
        }
    }
  systemd-pipeline.conf: |-
    input {
      pipeline { address => "systemd" }
    }

    output {
      opensearch {
          hosts => ["${os_url}"]
          user => "${os_user:\"\"}"
          password => "${os_pass:\"\"}"
          cacert => "/usr/share/logstash/certs/root-ca.pem"
          index => "systemd-%{+YYYY.MM.dd}"
          ssl => "true"
          document_id => "%{[@metadata][uuid]}"
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-opensearch-dashboards-index-pattern
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
data:
  check_opensearch-dashboards.sh: |-
    #!/bin/bash

    echo "opensearch-dashboards URL: $opensearch_dashboards_URL"

    state="down"
    while [[ ! $state =~ "green" ]]; do
      state=`curl -sS -X GET -u$opensearch_dashboards_USER:$opensearch_dashboards_PASSWORD \
        $opensearch_dashboards_URL/api/status | jq '.status.overall.state'`
      echo "opensearch_dashboards overall state $state"
      sleep 2
    done

    echo "opensearch-dashboards is up"
  create_index_pattern.sh: |-
    #!/bin/bash

    echo "opensearch_dashboards URL: $opensearch_dashboards_URL"
    version=`curl -sS -X GET -u$opensearch_dashboards_USER:$opensearch_dashboards_PASSWORD \
        $opensearch_dashboards_URL/api/status | jq '.version.number'`

    version="${version%\"}"
    version="${version#\"}"
    echo "opensearch-dashboards VERSION: ${version}"
    echo "INDEX_PATTERNS: $INDEX_PATTERNS"
    echo "TENANTS: $TENANTS"

    if [ -z $INDEX_PATTERNS ]; then
      echo "no index patterns defined"
      exit 0
    fi

    IFS=',' read -ra PATTERNS <<< "$INDEX_PATTERNS"
    IFS=',' read -ra TENANTS <<< "$TENANTS"

    for tenant in "${TENANTS[@]}"; do
      echo
      echo "### setting up ${tenant} tenant ###"

      if [ $tenant == "Developer" ]; then
        opensearch_dashboards_USER_=$opensearch_dashboards_DEVELOPER_USER
        opensearch_dashboards_PASSWORD_=$opensearch_dashboards_DEVELOPER_PASSWORD
      else
        opensearch_dashboards_USER_=$opensearch_dashboards_USER
        opensearch_dashboards_PASSWORD_=$opensearch_dashboards_PASSWORD
      fi

      echo "Importing saved objects for ${tenant} tenant"
      for f in /saved_objects/* ; do
        result=`curl -s -w "%{http_code}" -X POST -u${opensearch_dashboards_USER_}:${opensearch_dashboards_PASSWORD_} \
          ${opensearch_dashboards_URL}/api/saved_objects/_import\?overwrite=true \
          -H "securitytenant: ${tenant}" -H "osd-xsrf: true" --form file=@${f}`

        if [[ "${result}" =~ "200" ]]; then
          echo "${f} imported"
        else
          echo "importing ${f} failed"
          echo "${result}"
        fi
      done

      for pattern in "${PATTERNS[@]}"; do

            result=`curl -s -w "%{http_code}" -X POST -u${opensearch_dashboards_USER_}:${opensearch_dashboards_PASSWORD_} \
              ${opensearch_dashboards_URL}/api/saved_objects/index-pattern/${pattern}-*\?overwrite=true \
              -H "securitytenant: ${tenant}" -H "osd-xsrf: true" -H "Content-Type: application/json" \
              -d "{ \
                    \"attributes\": { \
                        \"title\":\"${pattern}-*\", \
                        \"timeFieldName\":\"@timestamp\", \
                        \"refresh_fields\":true \
                    } \
                  }"`

            if [[ "${result}" =~ "200" ]]; then
              echo "index pattern ${tenant}/${pattern}-* created successfully"
            else
              echo "creating index pattern: ${tenant}/${pattern}-* failed"
              echo "${result}"
            fi

      done

      default="${PATTERNS[0]}"
      result=`curl -s -w "%{http_code}" -X POST -u${opensearch_dashboards_USER_}:${opensearch_dashboards_PASSWORD_} \
          ${opensearch_dashboards_URL}/api/saved_objects/config/${version}\?overwrite=true \
          -H "securitytenant: ${tenant}" -H "osd-xsrf: true" -H "Content-Type: application/json" \
          -d "{ \
                \"attributes\": { \
                    \"defaultIndex\":\"${default}-*\" \
                } \
              }"`

      if [[ "${result}" =~ "200" ]]; then
        echo "default index pattern ${tenant}/${default}-* set successfully"
      else
        echo "setting default index pattern ${tenant}/${default}-* failed"
        echo "${result}"
      fi

    done
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-opensearch-dashboards-saved-objects
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
data:
  container-logs-dashboard.ndjson: |-
    {"attributes":{"fields":"[{\"count\":0,\"name\":\"@timestamp\",\"type\":\"date\",\"esTypes\":[\"date\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"_id\",\"type\":\"string\",\"esTypes\":[\"_id\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_index\",\"type\":\"string\",\"esTypes\":[\"_index\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_score\",\"type\":\"number\",\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_source\",\"type\":\"_source\",\"esTypes\":[\"_source\"],\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_type\",\"type\":\"string\",\"esTypes\":[\"_type\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"count\":0,\"name\":\"kubernetes.annotations.checksum/config\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.annotations.checksum/secret\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.annotations.kubeadm_kubernetes_io/etcd_advertise-client-urls\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.annotations.kubeadm_kubernetes_io/kube-apiserver_advertise-address_endpoint\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.annotations.kubectl_kubernetes_io/last-applied-configuration\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.annotations.kubernetes_io/config_hash\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.annotations.kubernetes_io/config_mirror\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.annotations.kubernetes_io/config_seen\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.annotations.kubernetes_io/config_source\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.annotations.sidecar_istio_io/inject\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.container_hash\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.container_image\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.container_name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.docker_id\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.host\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.addonmanager_kubernetes_io/mode\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.app\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.app_kubernetes_io/instance\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.app_kubernetes_io/name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.component\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.controller-revision-hash\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.controller-uid\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.integration-test\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.job-name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.k8s-app\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.node\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.pod-template-generation\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.pod-template-hash\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.statefulset_kubernetes_io/pod-name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.tier\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.type\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.namespace_name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.pod_id\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.pod_name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"location\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":1,\"name\":\"log\",\"type\":\"string\",\"esTypes\":[\"text\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"stream\",\"type\":\"string\",\"esTypes\":[\"text\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"stream.keyword\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true,\"subType\":{\"multi\":{\"parent\":\"stream\"}}}]","timeFieldName":"@timestamp","title":"containers-*"},"id":"containers-*","migrationVersion":{"index-pattern":"7.6.0"},"references":[],"type":"index-pattern","updated_at":"2021-07-19T06:58:15.869Z","version":"WzU0LDFd"}
    {"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"Logs Count","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Logs Count\",\"type\":\"metric\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{\"customLabel\":\"Logs\"},\"schema\":\"metric\"}],\"params\":{\"addTooltip\":true,\"addLegend\":false,\"type\":\"metric\",\"metric\":{\"percentageMode\":false,\"useRanges\":false,\"colorSchema\":\"Green to Red\",\"metricColorMode\":\"None\",\"colorsRange\":[{\"from\":0,\"to\":10000}],\"labels\":{\"show\":true},\"invertColors\":false,\"style\":{\"bgFill\":\"#000\",\"bgColor\":false,\"labelColor\":false,\"subText\":\"\",\"fontSize\":40}}}}"},"id":"12285dd0-e85d-11eb-aa9a-fbf14463643d","migrationVersion":{"visualization":"7.10.0"},"references":[{"id":"containers-*","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","updated_at":"2021-07-19T07:06:12.984Z","version":"WzEyMCwxXQ=="}
    {"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"Logs Namespace Cloud","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Logs Namespace Cloud\",\"type\":\"tagcloud\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{},\"schema\":\"metric\"},{\"id\":\"2\",\"enabled\":true,\"type\":\"terms\",\"params\":{\"field\":\"kubernetes.namespace_name\",\"orderBy\":\"1\",\"order\":\"desc\",\"size\":5,\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\"},\"schema\":\"segment\"}],\"params\":{\"scale\":\"linear\",\"orientation\":\"single\",\"minFontSize\":8,\"maxFontSize\":35,\"showLabel\":true}}"},"id":"2df733b0-e85d-11eb-aa9a-fbf14463643d","migrationVersion":{"visualization":"7.10.0"},"references":[{"id":"containers-*","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","updated_at":"2021-07-19T07:04:20.278Z","version":"WzkxLDFd"}
    {"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"Logs Pods Cloud","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Logs Pods Cloud\",\"type\":\"tagcloud\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{},\"schema\":\"metric\"},{\"id\":\"2\",\"enabled\":true,\"type\":\"terms\",\"params\":{\"field\":\"kubernetes.pod_name\",\"orderBy\":\"1\",\"order\":\"desc\",\"size\":5,\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\"},\"schema\":\"segment\"}],\"params\":{\"scale\":\"linear\",\"orientation\":\"single\",\"minFontSize\":8,\"maxFontSize\":35,\"showLabel\":true}}"},"id":"4bda4390-e85d-11eb-aa9a-fbf14463643d","migrationVersion":{"visualization":"7.10.0"},"references":[{"id":"containers-*","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","updated_at":"2021-07-19T07:03:59.058Z","version":"WzgzLDFd"}
    {"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"title":"Logs Namespace Pod Control","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Logs Namespace Pod Control\",\"type\":\"input_control_vis\",\"aggs\":[],\"params\":{\"controls\":[{\"id\":\"1626677527954\",\"fieldName\":\"kubernetes.namespace_name\",\"parent\":\"\",\"label\":\"Namespace\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":true,\"dynamicOptions\":true,\"size\":5,\"order\":\"desc\"},\"indexPatternRefName\":\"control_0_index_pattern\"},{\"id\":\"1626677575527\",\"fieldName\":\"kubernetes.pod_name\",\"parent\":\"1626677527954\",\"label\":\"Pod\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":true,\"dynamicOptions\":true,\"size\":5,\"order\":\"desc\"},\"indexPatternRefName\":\"control_1_index_pattern\"}],\"updateFiltersOnChange\":true,\"useTimeFilter\":true,\"pinFilters\":false}}"},"id":"15c9ab00-e85e-11eb-aa9a-fbf14463643d","migrationVersion":{"visualization":"7.10.0"},"references":[{"id":"containers-*","name":"control_0_index_pattern","type":"index-pattern"},{"id":"containers-*","name":"control_1_index_pattern","type":"index-pattern"}],"type":"visualization","updated_at":"2021-07-19T06:53:55.503Z","version":"WzQ5LDFd"}
    {"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"title":"Logs Count TSDB","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Logs Count TSDB\",\"type\":\"metrics\",\"aggs\":[],\"params\":{\"id\":\"61ca57f0-469d-11e7-af02-69e470af7417\",\"type\":\"timeseries\",\"series\":[{\"id\":\"61ca57f1-469d-11e7-af02-69e470af7417\",\"color\":\"#68BC00\",\"split_mode\":\"everything\",\"split_color_mode\":\"opensearchDashboards\",\"metrics\":[{\"id\":\"61ca57f2-469d-11e7-af02-69e470af7417\",\"type\":\"count\"}],\"separate_axis\":0,\"axis_position\":\"right\",\"formatter\":\"number\",\"chart_type\":\"line\",\"line_width\":1,\"point_size\":1,\"fill\":0.5,\"stacked\":\"none\",\"filter\":{\"query\":\"\",\"language\":\"kuery\"}}],\"time_field\":\"@timestamp\",\"index_pattern\":\"containers-*\",\"interval\":\"\",\"axis_position\":\"left\",\"axis_formatter\":\"number\",\"axis_scale\":\"normal\",\"show_legend\":1,\"show_grid\":1,\"tooltip_mode\":\"show_all\",\"default_index_pattern\":\"containers-*\",\"default_timefield\":\"@timestamp\",\"isModelInvalid\":false,\"axis_min\":\"0\",\"background_color_rules\":[{\"id\":\"61b952f0-e85d-11eb-9ef2-95dd2f6242e4\"}]}}"},"id":"7feea180-e85d-11eb-aa9a-fbf14463643d","migrationVersion":{"visualization":"7.10.0"},"references":[],"type":"visualization","updated_at":"2021-07-19T07:05:46.362Z","version":"WzEwMywxXQ=="}
    {"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"Logs Namespace Table","uiStateJSON":"{\"vis\":{\"params\":{\"sort\":{\"columnIndex\":null,\"direction\":null}}}}","version":1,"visState":"{\"title\":\"Logs Namespace Table\",\"type\":\"table\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{},\"schema\":\"metric\"},{\"id\":\"2\",\"enabled\":true,\"type\":\"terms\",\"params\":{\"field\":\"kubernetes.namespace_name\",\"orderBy\":\"1\",\"order\":\"desc\",\"size\":5,\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\"},\"schema\":\"bucket\"}],\"params\":{\"perPage\":10,\"showPartialRows\":false,\"showMetricsAtAllLevels\":false,\"sort\":{\"columnIndex\":null,\"direction\":null},\"showTotal\":false,\"totalFunc\":\"sum\",\"percentageCol\":\"\"}}"},"id":"ca311930-e85d-11eb-aa9a-fbf14463643d","migrationVersion":{"visualization":"7.10.0"},"references":[{"id":"containers-*","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","updated_at":"2021-07-19T06:51:48.674Z","version":"WzQ3LDFd"}
    {"attributes":{"columns":["log"],"description":"","hits":0,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"highlightAll\":true,\"version\":true,\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"sort":[],"title":"Logs Search","version":1},"id":"bde51950-e85e-11eb-aa9a-fbf14463643d","migrationVersion":{"search":"7.9.3"},"references":[{"id":"containers-*","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"search","updated_at":"2021-07-19T06:58:37.541Z","version":"WzU1LDFd"}
    {"attributes":{"description":"Shows current log stream","hits":0,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"language\":\"kuery\",\"query\":\"\"},\"filter\":[]}"},"optionsJSON":"{\"hidePanelTitles\":false,\"useMargins\":true}","panelsJSON":"[{\"version\":\"1.0.0\",\"gridData\":{\"x\":0,\"y\":0,\"w\":12,\"h\":6,\"i\":\"7d52ecf7-6aab-46ff-858e-ff46b1cd54a3\"},\"panelIndex\":\"7d52ecf7-6aab-46ff-858e-ff46b1cd54a3\",\"embeddableConfig\":{},\"panelRefName\":\"panel_0\"},{\"version\":\"1.0.0\",\"gridData\":{\"x\":12,\"y\":0,\"w\":17,\"h\":15,\"i\":\"cec0e115-d5ab-4cbc-b9b5-7c596603a9a0\"},\"panelIndex\":\"cec0e115-d5ab-4cbc-b9b5-7c596603a9a0\",\"embeddableConfig\":{},\"panelRefName\":\"panel_1\"},{\"version\":\"1.0.0\",\"gridData\":{\"x\":29,\"y\":0,\"w\":19,\"h\":15,\"i\":\"c7a4d95b-17de-4494-9d08-c4e2810bf9ac\"},\"panelIndex\":\"c7a4d95b-17de-4494-9d08-c4e2810bf9ac\",\"embeddableConfig\":{},\"panelRefName\":\"panel_2\"},{\"version\":\"1.0.0\",\"gridData\":{\"x\":0,\"y\":6,\"w\":12,\"h\":9,\"i\":\"6e8e1ef8-4eb4-4fe4-9706-585580bc64ea\"},\"panelIndex\":\"6e8e1ef8-4eb4-4fe4-9706-585580bc64ea\",\"embeddableConfig\":{},\"panelRefName\":\"panel_3\"},{\"version\":\"1.0.0\",\"gridData\":{\"x\":0,\"y\":15,\"w\":34,\"h\":8,\"i\":\"ec31ce18-44e4-45e4-ab6e-a36c177a3592\"},\"panelIndex\":\"ec31ce18-44e4-45e4-ab6e-a36c177a3592\",\"embeddableConfig\":{},\"panelRefName\":\"panel_4\"},{\"version\":\"1.0.0\",\"gridData\":{\"x\":34,\"y\":15,\"w\":14,\"h\":8,\"i\":\"36fee8a3-26f9-47bf-a84b-d826ac40e5f3\"},\"panelIndex\":\"36fee8a3-26f9-47bf-a84b-d826ac40e5f3\",\"embeddableConfig\":{},\"panelRefName\":\"panel_5\"},{\"version\":\"1.0.0\",\"gridData\":{\"x\":0,\"y\":23,\"w\":48,\"h\":15,\"i\":\"9c62c5d9-46f3-4af8-8b8c-1830c10f4905\"},\"panelIndex\":\"9c62c5d9-46f3-4af8-8b8c-1830c10f4905\",\"embeddableConfig\":{},\"panelRefName\":\"panel_6\"}]","timeRestore":false,"title":"Containers Logs Dashboard","version":1},"id":"fc9480e0-e85f-11eb-aa9a-fbf14463643d","migrationVersion":{"dashboard":"7.9.3"},"references":[{"id":"12285dd0-e85d-11eb-aa9a-fbf14463643d","name":"panel_0","type":"visualization"},{"id":"2df733b0-e85d-11eb-aa9a-fbf14463643d","name":"panel_1","type":"visualization"},{"id":"4bda4390-e85d-11eb-aa9a-fbf14463643d","name":"panel_2","type":"visualization"},{"id":"15c9ab00-e85e-11eb-aa9a-fbf14463643d","name":"panel_3","type":"visualization"},{"id":"7feea180-e85d-11eb-aa9a-fbf14463643d","name":"panel_4","type":"visualization"},{"id":"ca311930-e85d-11eb-aa9a-fbf14463643d","name":"panel_5","type":"visualization"},{"id":"bde51950-e85e-11eb-aa9a-fbf14463643d","name":"panel_6","type":"search"}],"type":"dashboard","updated_at":"2021-07-19T08:13:43.767Z","version":"WzI0NiwxXQ=="}
  nginx-access-logs.ndjson: |-
    {"attributes":{"fields":"[{\"count\":0,\"name\":\"@timestamp\",\"type\":\"date\",\"esTypes\":[\"date\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"@version\",\"type\":\"string\",\"esTypes\":[\"text\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"@version.keyword\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true,\"subType\":{\"multi\":{\"parent\":\"@version\"}}},{\"count\":0,\"name\":\"_id\",\"type\":\"string\",\"esTypes\":[\"_id\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_index\",\"type\":\"string\",\"esTypes\":[\"_index\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_score\",\"type\":\"number\",\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_source\",\"type\":\"_source\",\"esTypes\":[\"_source\"],\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_type\",\"type\":\"string\",\"esTypes\":[\"_type\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"count\":0,\"name\":\"agent\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"code\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"host\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.container_hash\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.container_image\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.container_name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.docker_id\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.host\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.app_kubernetes_io/component\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.app_kubernetes_io/instance\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.app_kubernetes_io/name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.firewall_cs_sap_com/access-to-cluster-allowed\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.firewall_cs_sap_com/external-traffic-policy\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.pod-template-hash\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.namespace_name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.pod_id\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.pod_name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"location\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"log\",\"type\":\"string\",\"esTypes\":[\"text\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"method\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"path\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"proxy_upstream_name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"referrer\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"reg_id\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"request_length\",\"type\":\"number\",\"esTypes\":[\"long\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"request_time\",\"type\":\"number\",\"esTypes\":[\"double\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"size\",\"type\":\"number\",\"esTypes\":[\"long\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"stream\",\"type\":\"string\",\"esTypes\":[\"text\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"stream.keyword\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true,\"subType\":{\"multi\":{\"parent\":\"stream\"}}},{\"count\":0,\"name\":\"upstream_addr\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"upstream_response_length\",\"type\":\"number\",\"esTypes\":[\"long\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"upstream_response_time\",\"type\":\"number\",\"esTypes\":[\"double\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"upstream_status\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"user\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true}]","refresh_fields":true,"timeFieldName":"@timestamp","title":"nginx-*"},"id":"nginx-*","migrationVersion":{"index-pattern":"7.6.0"},"references":[],"type":"index-pattern","updated_at":"2022-02-02T11:15:23.508Z","version":"WzMyLDFd"}
    {"attributes":{"columns":["_source"],"description":"","hits":0,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"highlightAll\":true,\"version\":true,\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[{\"meta\":{\"alias\":null,\"negate\":true,\"disabled\":false,\"type\":\"exists\",\"key\":\"log\",\"value\":\"exists\",\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.filter[0].meta.index\"},\"exists\":{\"field\":\"log\"},\"$state\":{\"store\":\"appState\"}}],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"sort":[],"title":"nginx access logs","version":1},"id":"4ed55c80-3e0f-11ec-ace2-89e9a2c6be56","migrationVersion":{"search":"7.9.3"},"references":[{"id":"nginx-*","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"},{"id":"nginx-*","name":"kibanaSavedObjectMeta.searchSourceJSON.filter[0].meta.index","type":"index-pattern"}],"type":"search","updated_at":"2022-02-02T11:14:47.893Z","version":"WzI5LDFd"}
  nginx-controller-logs.ndjson: |-
    {"attributes":{"fields":"[{\"count\":0,\"name\":\"@timestamp\",\"type\":\"date\",\"esTypes\":[\"date\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"@version\",\"type\":\"string\",\"esTypes\":[\"text\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"@version.keyword\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true,\"subType\":{\"multi\":{\"parent\":\"@version\"}}},{\"count\":0,\"name\":\"_id\",\"type\":\"string\",\"esTypes\":[\"_id\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_index\",\"type\":\"string\",\"esTypes\":[\"_index\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_score\",\"type\":\"number\",\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_source\",\"type\":\"_source\",\"esTypes\":[\"_source\"],\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_type\",\"type\":\"string\",\"esTypes\":[\"_type\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"count\":0,\"name\":\"agent\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"code\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"host\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.container_hash\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.container_image\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.container_name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.docker_id\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.host\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.app_kubernetes_io/component\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.app_kubernetes_io/instance\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.app_kubernetes_io/name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.firewall_cs_sap_com/access-to-cluster-allowed\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.firewall_cs_sap_com/external-traffic-policy\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.labels.pod-template-hash\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.namespace_name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.pod_id\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"kubernetes.pod_name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"location\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"log\",\"type\":\"string\",\"esTypes\":[\"text\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"method\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"path\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"proxy_upstream_name\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"referrer\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"reg_id\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"request_length\",\"type\":\"number\",\"esTypes\":[\"long\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"request_time\",\"type\":\"number\",\"esTypes\":[\"double\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"size\",\"type\":\"number\",\"esTypes\":[\"long\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"stream\",\"type\":\"string\",\"esTypes\":[\"text\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"stream.keyword\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true,\"subType\":{\"multi\":{\"parent\":\"stream\"}}},{\"count\":0,\"name\":\"upstream_addr\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"upstream_response_length\",\"type\":\"number\",\"esTypes\":[\"long\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"upstream_response_time\",\"type\":\"number\",\"esTypes\":[\"double\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"upstream_status\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"user\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true}]","refresh_fields":true,"timeFieldName":"@timestamp","title":"nginx-*"},"id":"nginx-*","migrationVersion":{"index-pattern":"7.6.0"},"references":[],"type":"index-pattern","updated_at":"2022-02-02T11:15:23.508Z","version":"WzMyLDFd"}
    {"attributes":{"columns":["kubernetes.labels.app_kubernetes_io/instance","log"],"description":"","hits":0,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"highlightAll\":true,\"version\":true,\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[{\"meta\":{\"alias\":null,\"negate\":false,\"disabled\":false,\"type\":\"exists\",\"key\":\"log\",\"value\":\"exists\",\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.filter[0].meta.index\"},\"exists\":{\"field\":\"log\"},\"$state\":{\"store\":\"appState\"}}],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"sort":[],"title":"nginx controller logs","version":1},"id":"07619530-3e0f-11ec-ace2-89e9a2c6be56","migrationVersion":{"search":"7.9.3"},"references":[{"id":"nginx-*","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"},{"id":"nginx-*","name":"kibanaSavedObjectMeta.searchSourceJSON.filter[0].meta.index","type":"index-pattern"}],"type":"search","updated_at":"2022-02-02T11:15:09.654Z","version":"WzMwLDFd"}
  systemd-logs-dashboard.ndjson: |-
    {"attributes":{"fields":"[{\"count\":0,\"name\":\"@timestamp\",\"type\":\"date\",\"esTypes\":[\"date\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"BOOT_ID\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"CAP_EFECTIVE\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"CAP_EFFECTIVE\",\"type\":\"string\",\"esTypes\":[\"text\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"CAP_EFFECTIVE.keyword\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true,\"subType\":{\"multi\":{\"parent\":\"CAP_EFFECTIVE\"}}},{\"count\":0,\"name\":\"CMDLINE\",\"type\":\"string\",\"esTypes\":[\"text\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"CMDLINE.keyword\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true,\"subType\":{\"multi\":{\"parent\":\"CMDLINE\"}}},{\"count\":0,\"name\":\"CMD_LINE\",\"type\":\"string\",\"esTypes\":[\"text\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"COMM\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"EXE\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"GID\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"HOSTNAME\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"MACHINE_ID\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":1,\"name\":\"MESSAGE\",\"type\":\"string\",\"esTypes\":[\"text\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"PID\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"PRIORITY\",\"type\":\"number\",\"esTypes\":[\"short\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"STREAM_ID\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"SYSLOG_FACILITY\",\"type\":\"number\",\"esTypes\":[\"short\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"SYSLOG_IDENTIFIER\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"SYSTEMD_CGROUP\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"SYSTEMD_INVOCATION_ID\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"SYSTEMD_SLICE\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"SYSTEMD_UNIT\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"TRANSPORT\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"UID\",\"type\":\"string\",\"esTypes\":[\"keyword\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"count\":0,\"name\":\"_id\",\"type\":\"string\",\"esTypes\":[\"_id\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_index\",\"type\":\"string\",\"esTypes\":[\"_index\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_score\",\"type\":\"number\",\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_source\",\"type\":\"_source\",\"esTypes\":[\"_source\"],\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"count\":0,\"name\":\"_type\",\"type\":\"string\",\"esTypes\":[\"_type\"],\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false}]","timeFieldName":"@timestamp","title":"systemd-*"},"id":"systemd-*","migrationVersion":{"index-pattern":"7.6.0"},"references":[],"type":"index-pattern","updated_at":"2021-07-19T07:16:50.213Z","version":"WzE3NSwxXQ=="}
    {"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"Systemd Count","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Systemd Count\",\"type\":\"metric\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{},\"schema\":\"metric\"}],\"params\":{\"addTooltip\":true,\"addLegend\":false,\"type\":\"metric\",\"metric\":{\"percentageMode\":false,\"useRanges\":false,\"colorSchema\":\"Green to Red\",\"metricColorMode\":\"None\",\"colorsRange\":[{\"from\":0,\"to\":10000}],\"labels\":{\"show\":true},\"invertColors\":false,\"style\":{\"bgFill\":\"#000\",\"bgColor\":false,\"labelColor\":false,\"subText\":\"\",\"fontSize\":45}}}}"},"id":"c42278b0-e860-11eb-aa9a-fbf14463643d","migrationVersion":{"visualization":"7.10.0"},"references":[{"id":"systemd-*","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","updated_at":"2021-07-19T07:13:07.002Z","version":"WzE1MiwxXQ=="}
    {"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"Systemd system units Cloud","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Systemd system units Cloud\",\"type\":\"tagcloud\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{},\"schema\":\"metric\"},{\"id\":\"2\",\"enabled\":true,\"type\":\"terms\",\"params\":{\"field\":\"SYSTEMD_UNIT\",\"orderBy\":\"1\",\"order\":\"desc\",\"size\":5,\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\"},\"schema\":\"segment\"}],\"params\":{\"scale\":\"linear\",\"orientation\":\"single\",\"minFontSize\":8,\"maxFontSize\":35,\"showLabel\":true}}"},"id":"22312550-e861-11eb-aa9a-fbf14463643d","migrationVersion":{"visualization":"7.10.0"},"references":[{"id":"systemd-*","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","updated_at":"2021-07-19T07:17:59.548Z","version":"WzE4MCwxXQ=="}
    {"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"title":"Systemd Unit Table","uiStateJSON":"{\"vis\":{\"params\":{\"sort\":{\"columnIndex\":null,\"direction\":null}}}}","version":1,"visState":"{\"title\":\"Systemd Unit Table\",\"type\":\"table\",\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"params\":{},\"schema\":\"metric\"},{\"id\":\"2\",\"enabled\":true,\"type\":\"terms\",\"params\":{\"field\":\"SYSTEMD_UNIT\",\"orderBy\":\"1\",\"order\":\"desc\",\"size\":5,\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\"},\"schema\":\"bucket\"}],\"params\":{\"perPage\":10,\"showPartialRows\":false,\"showMetricsAtAllLevels\":false,\"sort\":{\"columnIndex\":null,\"direction\":null},\"showTotal\":false,\"totalFunc\":\"sum\",\"percentageCol\":\"\"}}"},"id":"fa25dff0-e861-11eb-aa9a-fbf14463643d","migrationVersion":{"visualization":"7.10.0"},"references":[{"id":"systemd-*","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"visualization","updated_at":"2021-07-19T07:21:47.119Z","version":"WzE4NywxXQ=="}
    {"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"title":"Systemd Node Unit Control","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Systemd Node Unit Control\",\"type\":\"input_control_vis\",\"aggs\":[],\"params\":{\"controls\":[{\"id\":\"1626679132839\",\"fieldName\":\"HOSTNAME\",\"parent\":\"\",\"label\":\"Node\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":false,\"dynamicOptions\":true,\"size\":5,\"order\":\"desc\"},\"indexPatternRefName\":\"control_0_index_pattern\"},{\"id\":\"1626679157044\",\"fieldName\":\"SYSTEMD_UNIT\",\"parent\":\"1626679132839\",\"label\":\"Systemd Unit\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":false,\"dynamicOptions\":true,\"size\":5,\"order\":\"desc\"},\"indexPatternRefName\":\"control_1_index_pattern\"}],\"updateFiltersOnChange\":true,\"useTimeFilter\":true,\"pinFilters\":false}}"},"id":"c7fe84f0-e861-11eb-aa9a-fbf14463643d","migrationVersion":{"visualization":"7.10.0"},"references":[{"id":"systemd-*","name":"control_0_index_pattern","type":"index-pattern"},{"id":"systemd-*","name":"control_1_index_pattern","type":"index-pattern"}],"type":"visualization","updated_at":"2021-07-19T07:20:22.975Z","version":"WzE4MiwxXQ=="}
    {"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"title":"Systemd Count TSDB","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"Systemd Count TSDB\",\"type\":\"metrics\",\"aggs\":[],\"params\":{\"id\":\"61ca57f0-469d-11e7-af02-69e470af7417\",\"type\":\"timeseries\",\"series\":[{\"id\":\"61ca57f1-469d-11e7-af02-69e470af7417\",\"color\":\"#68BC00\",\"split_mode\":\"everything\",\"split_color_mode\":\"opensearchDashboards\",\"metrics\":[{\"id\":\"61ca57f2-469d-11e7-af02-69e470af7417\",\"type\":\"count\"}],\"separate_axis\":0,\"axis_position\":\"right\",\"formatter\":\"number\",\"chart_type\":\"line\",\"line_width\":1,\"point_size\":1,\"fill\":0.5,\"stacked\":\"none\"}],\"time_field\":\"@timestamp\",\"index_pattern\":\"systemd-*\",\"interval\":\"\",\"axis_position\":\"left\",\"axis_formatter\":\"number\",\"axis_scale\":\"normal\",\"show_legend\":1,\"show_grid\":1,\"tooltip_mode\":\"show_all\",\"default_index_pattern\":\"containers-*\",\"default_timefield\":\"@timestamp\",\"isModelInvalid\":false}}"},"id":"e1ac4500-e860-11eb-aa9a-fbf14463643d","migrationVersion":{"visualization":"7.10.0"},"references":[],"type":"visualization","updated_at":"2021-07-19T07:13:56.560Z","version":"WzE2MywxXQ=="}
    {"attributes":{"columns":["MESSAGE"],"description":"","hits":0,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"highlightAll\":true,\"version\":true,\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"sort":[],"title":"Systemd Search","version":1},"id":"53859ff0-e861-11eb-aa9a-fbf14463643d","migrationVersion":{"search":"7.9.3"},"references":[{"id":"systemd-*","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"}],"type":"search","updated_at":"2021-07-19T07:17:07.567Z","version":"WzE3NiwxXQ=="}
    {"attributes":{"description":"","hits":0,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"language\":\"kuery\",\"query\":\"\"},\"filter\":[]}"},"optionsJSON":"{\"hidePanelTitles\":false,\"useMargins\":true}","panelsJSON":"[{\"version\":\"1.0.0\",\"gridData\":{\"x\":0,\"y\":0,\"w\":11,\"h\":8,\"i\":\"aa26ece2-d991-4d83-856c-f91e7c7da7b2\"},\"panelIndex\":\"aa26ece2-d991-4d83-856c-f91e7c7da7b2\",\"embeddableConfig\":{},\"panelRefName\":\"panel_0\"},{\"version\":\"1.0.0\",\"gridData\":{\"x\":11,\"y\":0,\"w\":23,\"h\":8,\"i\":\"ab340c71-106a-4ce2-9971-263cd93b5bb5\"},\"panelIndex\":\"ab340c71-106a-4ce2-9971-263cd93b5bb5\",\"embeddableConfig\":{},\"panelRefName\":\"panel_1\"},{\"version\":\"1.0.0\",\"gridData\":{\"x\":34,\"y\":0,\"w\":14,\"h\":8,\"i\":\"afa85aef-5d4d-408c-a3d3-6495d723757a\"},\"panelIndex\":\"afa85aef-5d4d-408c-a3d3-6495d723757a\",\"embeddableConfig\":{},\"panelRefName\":\"panel_2\"},{\"version\":\"1.0.0\",\"gridData\":{\"x\":0,\"y\":8,\"w\":11,\"h\":8,\"i\":\"8e366122-9c8d-4181-b583-870964a733bb\"},\"panelIndex\":\"8e366122-9c8d-4181-b583-870964a733bb\",\"embeddableConfig\":{},\"panelRefName\":\"panel_3\"},{\"version\":\"1.0.0\",\"gridData\":{\"x\":11,\"y\":8,\"w\":37,\"h\":8,\"i\":\"f522813c-d1f7-4410-923a-556f82b89aa3\"},\"panelIndex\":\"f522813c-d1f7-4410-923a-556f82b89aa3\",\"embeddableConfig\":{},\"panelRefName\":\"panel_4\"},{\"version\":\"1.0.0\",\"gridData\":{\"x\":0,\"y\":16,\"w\":48,\"h\":15,\"i\":\"c35f5bad-5d82-4b0d-9649-c3cd921ee2ce\"},\"panelIndex\":\"c35f5bad-5d82-4b0d-9649-c3cd921ee2ce\",\"embeddableConfig\":{},\"panelRefName\":\"panel_5\"}]","timeRestore":false,"title":"Systemd Logs Dashboard","version":1},"id":"adf36d30-e863-11eb-aa9a-fbf14463643d","migrationVersion":{"dashboard":"7.9.3"},"references":[{"id":"c42278b0-e860-11eb-aa9a-fbf14463643d","name":"panel_0","type":"visualization"},{"id":"22312550-e861-11eb-aa9a-fbf14463643d","name":"panel_1","type":"visualization"},{"id":"fa25dff0-e861-11eb-aa9a-fbf14463643d","name":"panel_2","type":"visualization"},{"id":"c7fe84f0-e861-11eb-aa9a-fbf14463643d","name":"panel_3","type":"visualization"},{"id":"e1ac4500-e860-11eb-aa9a-fbf14463643d","name":"panel_4","type":"visualization"},{"id":"53859ff0-e861-11eb-aa9a-fbf14463643d","name":"panel_5","type":"search"}],"type":"dashboard","updated_at":"2021-07-19T08:13:04.195Z","version":"WzI0MCwxXQ=="}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
data:
  livenessProbe.sh: |-
    #!/bin/bash

    curl -sSk -u$os_user:$os_pass $os_url
  log4j2.properties: |-
    status = info

    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = OpenSearchJsonLayout
    appender.console.layout.type_name = logging
    #appender.console.layout.type = PatternLayout
    #appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] [%node_name]%marker %m%n

    rootLogger.level = warn
    rootLogger.appenderRef.console.ref = console

    logger.discovery.name = org.opensearch.discovery
    logger.discovery.level = info

    logger.bootsrap.name = org.opensearch.bootsrap
    logger.bootsrap.level = info

    logger.security.name = org.opensearch.security
    logger.security.level = info

    logger.coordination.name = org.opensearch.cluster.coordination
    logger.coordination.level = info

    logger.jwt.name = com.amazon.dlic.auth.http.jwt
    logger.jwt.level = info

    logger.oidc.name = com.amazon.dlic.auth.http.jwt.oidc.json
    logger.oidc.level = info

    logger.keybyoidc.name = com.amazon.dlic.auth.http.jwt.keybyoidc
    logger.keybyoidc.level = info

    logger.saml.name = com.amazon.dlic.auth.http.saml
    logger.saml.level = info
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-curator
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
data:
  actions.yml: |
    actions:
      1:
        action: delete_indices
        description: >-
          Delete indices older than 7 days.
          Ignore the error if the filter does not result in an
          actionable list of indices (ignore_empty_list) and exit cleanly.
        options:
          ignore_empty_list: True
          timeout_override:
          continue_if_exception: False
          disable_action: False
        filters:
        - filtertype: age
          source: creation_date
          direction: older
          timestring: '%Y.%m.%d'
          unit: days
          unit_count: 7
          exclude:
        - filtertype: kibana
          exclude: True
        - filtertype: pattern
          kind: prefix
          value: .opendistro
          exclude: True
        - filtertype: pattern
          kind: prefix
          value: .tasks
          exclude: True
      2:
        action: alias
        description: >-
          Alias newly created indices under containers alias
        options:
          ignore_empty_list: True
          name: containers
          warn_if_no_indices: False
          disable_action: False
        add:
          filters:
          - filtertype: pattern
            kind: prefix
            value: containers-
            exclude:
      3:
        action: alias
        description: >-
          Alias newly created indices under systemd alias
        options:
          ignore_empty_list: True
          name: systemd
          warn_if_no_indices: False
          disable_action: False
        add:
          filters:
          - filtertype: pattern
            kind: prefix
            value: systemd-
            exclude:
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-index-templates
data:
  containers_index_template.json: |-
    {
       "index_patterns":[
          "containers-*"
       ],
       "composed_of":[
             "kubernetes-metadata"
       ],
       "template":{
          "settings":{
             "index":{
                "mapping":{
                   "total_fields":{
                      "limit":10000
                   }
                },
                "max_docvalue_fields_search":200,
                "number_of_shards":"1",
                "number_of_replicas":"0"
             }
          },
          "mappings":{
             "_source":{
                "enabled":true
             },
             "properties":{
                "level":{
                   "type":"keyword"
                },
                "message":{
                   "type":"text"
                }
             }
          }
       }
    }
  kubernetes-metadata_component_template.json: |-
    {
       "template":{
           "settings":{
             "query":{
                "default_field":[
                   "log",
                   "kubernetes.pod_name",
                   "kubernetes.namespace_name"
                ]
             },
             "refresh_interval":"5s"
          },
          "mappings":{
             "dynamic_templates":[
                {
                   "kubernetes.annotations.*/*":{
                      "mapping":{
                         "type":"keyword"
                      },
                      "match_mapping_type":"*",
                      "path_match":"kubernetes.annotations.*/*"
                   }
                },
                {
                   "kubernetes.labels.*":{
                      "mapping":{
                         "type":"keyword"
                      },
                      "match_mapping_type":"*",
                      "path_match":"kubernetes.labels.*"
                   }
                }
             ],
             "properties":{
                "@timestamp":{
                   "type":"date"
                },
                "location":{
                   "type":"keyword"
                },
                "log":{
                   "type":"text"
                },
                "kubernetes":{
                   "properties":{
                      "container_name":{
                         "type":"keyword",
                         "ignore_above":"256"
                      },
                      "container_image":{
                         "type":"keyword",
                         "ignore_above":"256"
                      },
                      "container_hash":{
                         "type":"keyword",
                         "ignore_above":"256"
                      },
                      "docker_id":{
                         "type":"keyword",
                         "ignore_above":"256"
                      },
                      "host":{
                         "type":"keyword",
                         "ignore_above":"256"
                      },
                      "namespace_name":{
                         "type":"keyword",
                         "ignore_above":"256"
                      },
                      "pod_id":{
                         "type":"keyword",
                         "ignore_above":"256"
                      },
                      "pod_name":{
                         "type":"keyword",
                         "ignore_above":"256"
                      }
                   }
                }
             }
          }
       }
    }
  nginx_index_template.json: |-
    {
       "index_patterns":[
          "nginx-*"
       ],
       "composed_of":[
          "kubernetes-metadata"
       ],
       "template":{
          "settings":{
             "index":{
                "codec":"best_compression",
                "mapping":{
                   "total_fields":{
                      "limit":1000
                   }
                },
                "number_of_shards":"1",
                "number_of_replicas":"0",
                "refresh_interval":"5s"
             }
          },
          "mappings":{
             "_source":{
                "enabled":true
             },
             "properties":{
                "log":{
                   "type":"text"
                },
                "agent":{
                   "type":"keyword"
                },
                "code":{
                   "type":"keyword"
                },
                "host":{
                   "type":"keyword"
                },
                "method":{
                   "type":"keyword"
                },
                "path":{
                   "type":"keyword"
                },
                "proxy_upstream_name":{
                   "type":"keyword"
                },
                "referrer":{
                   "type":"keyword"
                },
                "reg_id":{
                   "type":"keyword"
                },
                "request_length":{
                   "type":"long"
                },
                "request_time":{
                   "type":"double"
                },
                "size":{
                   "type":"long"
                },
                "upstream_addr":{
                   "type":"keyword"
                },
                "upstream_response_length":{
                   "type":"long"
                },
                "upstream_response_time":{
                   "type":"double"
                },
                "upstream_status":{
                   "type":"keyword"
                },
                "user":{
                   "type":"keyword"
                }
             }
          }
       }
    }
  systemd_index_template.json: "{   \n   \"index_patterns\":[\n      \"systemd-*\"\n   ],\n   \"template\":{\n     \"settings\":{\n        \"index\":{\n           \"codec\":\"best_compression\",\n           \"mapping\":{\n              \"total_fields\":{\n                 \"limit\":2000\n              }\n           },\n           \"max_docvalue_fields_search\":200,\n           \"number_of_shards\":\"1\",\n           \"number_of_replicas\":\"0\",\n           \"refresh_interval\":\"5s\"\n        }\n     },\n     \"mappings\":{\n        \"_source\":{\n           \"enabled\":true\n        },\n        \"dynamic_templates\":[],\n        \"properties\":{\n           \"@timestamp\":{\n              \"type\":\"date\"\n           },\n           \"BOOT_ID\":{\n              \"type\":\"keyword\"\n           },\n           \"CAP_EFECTIVE\":{\n              \"type\":\"keyword\"\n           },\n           \"CMD_LINE\":{\n              \"type\":\"text\"\n           },\n           \"COMM\":{\n              \"type\":\"keyword\"\n           },\n           \"EXE\":{\n              \"type\":\"keyword\"\n           },\n           \"GID\":{\n              \"type\":\"keyword\"\n           },\n           \"HOSTNAME\":{\n              \"type\":\"keyword\"\n           },\n           \"MACHINE_ID\":{\n              \"type\":\"keyword\"\n           },\n           \"MESSAGE\":{\n              \"type\":\"text\"\n           },\n           \"PID\":{\n              \"type\":\"keyword\"\n           },\n           \"PRIORITY\":{\n              \"type\":\"short\"\n           },\n           \"STREAM_ID\":{\n              \"type\":\"keyword\"\n           },\n           \"SYSLOG_FACILITY\":{\n              \"type\":\"short\"\n           },\n           \"SYSLOG_IDENTIFIER\":{\n              \"type\":\"keyword\"\n           },\n           \"SYSTEMD_CGROUP\":{\n              \"type\":\"keyword\"\n           },\n           \"SYSTEMD_INVOCATION_ID\":{\n              \"type\":\"keyword\"\n           },\n           \"SYSTEMD_SLICE\":{\n              \"type\":\"keyword\"\n           },\n           \"SYSTEMD_UNIT\":{\n              \"type\":\"keyword\"\n           },\n           \"TRANSPORT\":{\n              \"type\":\"keyword\"\n           },\n           \"UID\":{\n              \"type\":\"keyword\"\n           }\n        }\n     }\n   }\n}"
  templates.sh: |-
    #!/bin/bash

    set -e

    if [ -z ${os_url+x} ]; then
      echo "opensearch url env variable (os_url) is expected but not found";
      exit -1
    elif [ -z ${os_user+x} ]; then
      echo "opensearch user env variable (os_user) is expected but not found";
      exit -1
    elif [ -z ${os_pass+x} ]; then
      echo "opensearch password env variable (os_pass) is expected but not found";
      exit -1
    fi


    templates=("component" "index")
    for type in ${templates[@]}; do
      echo
      echo "### seting up $type templates ###"
      for file in `find /templates/ -name "*_${type}_template.json" -type f`; do
        name="$(basename -- $file)"
        template=$(echo $name| cut -d'_' -f 1| cut -d'/' -f 3)

        echo "cleanup depricated cluster _template: $template"
        curl -sk -w "%{http_code}" -X DELETE -H "Content-Type: application/json" \
          -u$os_user:$os_pass "$os_url/_template/$template"
        echo
        echo "creating $type template: $template"
        curl -sk -w "%{http_code}" -X PUT -H "Content-Type: application/json" \
          -u$os_user:$os_pass "$os_url/_${type}_template/$template" -d @$file
        echo
      done
    done
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-securityadmin
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
data:
  setup.sh: |-
    #!/bin/bash

    set -e

    echo "seting up users"
    echo "node $os_node"

    export JAVA_HOME=/usr/share/opensearch/jdk
    export PATH=$PATH:$JAVA_HOME/bin

    chmod +x /usr/share/opensearch/plugins/opensearch-security/tools/hash.sh

    os_pass_hash=`/usr/share/opensearch/plugins/opensearch-security/tools/hash.sh -env os_pass`
    ki_pass_hash=`/usr/share/opensearch/plugins/opensearch-security/tools/hash.sh -env ki_pass`
    ki_ro_pass_hash=`/usr/share/opensearch/plugins/opensearch-security/tools/hash.sh -env ki_ro_pass`
    ki_dev_pass_hash=`/usr/share/opensearch/plugins/opensearch-security/tools/hash.sh -env ki_dev_pass`

    cp /usr/share/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml /tmp/internal_users.yml

    chmod +w /tmp/internal_users.yml

    sed -i -e "s|\$\$opensearch-PASSWORD_HASH|$os_pass_hash|" /tmp/internal_users.yml
    sed -i -e "s|\$\$opensearch-dashboards_PASSWORD_HASH|$ki_pass_hash|" /tmp/internal_users.yml
    sed -i -e "s|\$\$opensearch-dashboards_READONLY_PASSWORD_HASH|$ki_ro_pass_hash|" /tmp/internal_users.yml
    sed -i -e "s|\$\$opensearch-dashboards_DEVELOPER_PASSWORD_HASH|$ki_dev_pass_hash|" /tmp/internal_users.yml

    echo "##### internal_users.yml #####"

    echo "##### setting up security configuration #####"
    chmod +x /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh
    /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh \
      -cacert /usr/share/opensearch/config/root-ca.pem \
      -cert /usr/share/opensearch/config/admin.pem \
      -key /usr/share/opensearch/config/admin-key.key \
      -cd /usr/share/opensearch/plugins/opensearch-security/securityconfig/ \
      -h $os_node -sniff -nhnv -icl

    echo "##### setting up users configuration #####"
    chmod +x /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh
    /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh \
      -cacert /usr/share/opensearch/config/root-ca.pem \
      -cert /usr/share/opensearch/config/admin.pem \
      -key /usr/share/opensearch/config/admin-key.key \
      -f /tmp/internal_users.yml \
      -h $os_node -sniff -nhnv -icl
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-fluentbit
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - namespaces
      - endpoints
      - pods
    verbs:
      - get
      - watch
      - list
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-psp
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
rules:
  - apiGroups:
      - extensions
    resources:
      - podsecuritypolicies
    resourceNames:
      - release-name
    verbs:
      - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-fluentbit
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-fluentbit
subjects:
  - kind: ServiceAccount
    name: release-name-fluentbit
    namespace: default
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
subjects:
  - kind: ServiceAccount
    name: release-name
    namespace: default
  - kind: ServiceAccount
    name: release-name-priv
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-psp
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
subjects:
  - kind: ServiceAccount
    name: release-name-priv
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-psp
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  clusterIP: None
  ports:
    - port: 9092
      name: kafka
    - port: 9093
      name: broker
  selector:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    type: kafka
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-kafka-0
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  ports:
    - port: 9092
      name: kafka
    - port: 9093
      name: broker
    - port: 12345
      name: jmx
  selector:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    statefulset.kubernetes.io/pod-name: release-name-kafka-0
    type: kafka
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-zk-0
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  ports:
    - port: 2181
      name: client
    - port: 2888
      name: peer
    - port: 3888
      name: leader
    - port: 8080
      name: admin
  selector:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    statefulset.kubernetes.io/pod-name: release-name-zk-0
    type: zk
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-logstash
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  type: ClusterIP
  ports:
    - name: monitoring-api
      port: 9600
      targetPort: monitoring-api
  selector:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    type: logstash
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-opensearch-dashboards
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  type: ClusterIP
  ports:
    - name: ui
      port: 5601
      targetPort: ui
  selector:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    type: opensearch-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-client
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  ports:
    - name: http
      port: 9200
      targetPort: http
  selector:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    type: client
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-data-0
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  ports:
    - port: 9300
      name: transport
  selector:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    statefulset.kubernetes.io/pod-name: release-name-data-0
    type: data
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-master-0
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  ports:
    - port: 9300
      name: transport
  selector:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    statefulset.kubernetes.io/pod-name: release-name-master-0
    type: master
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-fluentbit
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    k8s-app: fluentbit
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-logging
      app.kubernetes.io/instance: release-name
      k8s-app: fluentbit
  template:
    metadata:
      annotations:
        checksum/config: d19791366fed256e6a43fe2c8f8ace1bf5c94d3e7eba7843530d9d543d0b5e08
      labels:
        app.kubernetes.io/name: kubernetes-logging
        app.kubernetes.io/instance: release-name
        k8s-app: fluentbit
    spec:
      priorityClassName: logging
      securityContext:
        runAsUser: 0
      serviceAccountName: release-name-fluentbit
      initContainers:
        - name: init
          imagePullPolicy: IfNotPresent
          image: nickytd/init-container:1.0.2
          command:
            - sh
            - -c
            - /init/check_os.sh && /init/check_host_port.sh $kafka 9092
          env:
            - name: os_url
              value: https://release-name-client.default.svc.cluster.local:9200
            - name: os_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: username
            - name: os_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: password
            - name: kafka
              value: release-name-kafka-0
          volumeMounts:
            - mountPath: /init
              name: init
      containers:
        - name: fluentbit
          image: fluent/fluent-bit:1.9.3
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 100Mi
            requests:
              memory: 50Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: http
              containerPort: 2020
          env:
            - name: FLUENT_opensearch_HOST
              value: release-name-client.default.svc.cluster.local
            - name: FLUENT_opensearch_PORT
              value: "9200"
            - name: FLUENT_opensearch_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: username
            - name: FLUENT_opensearch_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: password
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
          volumeMounts:
            - name: containerslog
              mountPath: /var/log/pods
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
            - name: journallog
              mountPath: /run/log
              readOnly: true
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc
            - name: certificates
              mountPath: /fluent-bit/ssl/root-ca.pem
              subPath: ca.crt
            - name: admin-certificate
              mountPath: /fluent-bit/ssl/admin.pem
              subPath: tls.crt
            - name: admin-certificate
              mountPath: /fluent-bit/ssl/admin-key.pem
              subPath: tls.key
        - name: fluentbit-config-watcher
          image: nickytd/config-watcher:0.1.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc
      terminationGracePeriodSeconds: 10
      shareProcessNamespace: true
      volumes:
        - name: init
          configMap:
            name: release-name-init
            defaultMode: 493
        - name: journallog
          hostPath:
            path: /var/log
        - name: containerslog
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: fluent-bit-config
          configMap:
            name: release-name-fluentbit
        - name: certificates
          secret:
            secretName: release-name-opensearch-certificates
        - name: admin-certificate
          secret:
            secretName: release-name-opensearch-admin-certificate
      tolerations:
        - operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-logstash
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-logging
      app.kubernetes.io/instance: release-name
      type: logstash
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-logging
        app.kubernetes.io/instance: release-name
        type: logstash
      annotations:
        checksum/config: d90e9c36066b63c74d39180a9769d1b863b340fc54a6540952eb297a866ae62b
    spec:
      priorityClassName: logging
      serviceAccountName: release-name-logstash
      initContainers:
        - name: init
          imagePullPolicy: IfNotPresent
          image: nickytd/init-container:1.0.2
          command:
            - sh
            - -c
            - /init/check_os.sh && /init/check_host_port.sh $kafka 9092
          env:
            - name: os_url
              value: https://release-name-client.default.svc.cluster.local:9200
            - name: os_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: username
            - name: os_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: password
            - name: kafka
              value: release-name-kafka-0
          volumeMounts:
            - mountPath: /init
              name: init
      containers:
        - name: logstash
          image: opensearchproject/logstash-oss-with-opensearch-output-plugin:7.16.3
          resources:
            limits:
              memory: 700Mi
            requests:
              memory: 700Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 9600
              name: monitoring-api
              protocol: TCP
          env:
            - name: os_url
              value: https://release-name-client.default.svc.cluster.local:9200
            - name: os_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: username
            - name: os_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: password
            - name: kafka_brokers
              value: release-name-kafka-0:9092
            - name: LS_JAVA_OPTS
              value: -Xms256M -Xmx256M
          volumeMounts:
            - mountPath: /usr/share/logstash/config
              name: config
            - mountPath: /usr/share/logstash/pipeline
              name: pipelines
            - name: certificates
              mountPath: /usr/share/logstash/certs/root-ca.pem
              subPath: ca.crt
      volumes:
        - name: init
          configMap:
            name: release-name-init
            defaultMode: 493
        - name: config
          configMap:
            name: release-name-logstash
        - name: pipelines
          configMap:
            name: release-name-logstash-pipelines
        - name: certificates
          secret:
            secretName: release-name-opensearch-certificates
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-opensearch-dashboards
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-logging
      app.kubernetes.io/instance: release-name
      type: opensearch-dashboards
  template:
    metadata:
      annotations:
        checksum/secret: 9a0895f7b79edc993285e6a2980c5fd9f03d6eec0f230948654ffb7103c466e1
      labels:
        app.kubernetes.io/name: kubernetes-logging
        app.kubernetes.io/instance: release-name
        type: opensearch-dashboards
    spec:
      priorityClassName: logging
      initContainers:
        - name: init
          image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - /init/check_os.sh
          env:
            - name: os_url
              value: https://release-name-client.default.svc.cluster.local:9200
            - name: os_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: username
            - name: os_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: password
          volumeMounts:
            - mountPath: /init
              name: init
      containers:
        - name: main
          image: opensearchproject/opensearch-dashboards:1.3.2
          resources:
            limits:
              memory: 500Mi
            requests:
              memory: 500Mi
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: NODE_OPTIONS
              value: --max-old-space-size=350
          ports:
            - containerPort: 5601
              name: ui
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /usr/share/opensearch-dashboards/config/opensearch_dashboards.yml
              subPath: opensearch_dashboards.yml
            - name: certificates
              mountPath: /opt/opensearch-dashboards/config/root-ca.pem
              subPath: ca.crt
            - name: admin-certificate
              mountPath: /opt/opensearch-dashboards/config/admin.pem
              subPath: tls.crt
            - name: certificates
              mountPath: /opt/opensearch-dashboards/config/admin-key.pem
              subPath: tls.key
      volumes:
        - name: config
          secret:
            secretName: release-name-opensearch-dashboards-config
        - name: init
          configMap:
            name: release-name-init
            defaultMode: 493
        - name: certificates
          secret:
            secretName: release-name-opensearch-certificates
        - name: admin-certificate
          secret:
            secretName: release-name-opensearch-admin-certificate
        - name: securityconfig
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-client
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
    node: os
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-logging
      app.kubernetes.io/instance: release-name
      type: client
      node: os
  template:
    metadata:
      annotations:
        checksum/config: 0fe0db9cddc761303206ffec3220b058fb3a3a5c6ececd02f6ad10b203c8e30e
        checksum/secret1: 03ae9165828e45412c5d291a89e2bedc971cdcaadffb9998cdbdb1301311cc1f
        checksum/secret2: ce72d8eba23ba6fa2a977964f6ffe33f83354e0bee932bc37d36a6c7d42e68d0
      labels:
        app.kubernetes.io/name: kubernetes-logging
        app.kubernetes.io/instance: release-name
        type: client
        node: os
    spec:
      priorityClassName: logging
      serviceAccountName: release-name-priv
      initContainers:
        - name: init
          image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - '/init/check_host_port.sh $os_master 9300 && /init/init_os_node.sh '
          env:
            - name: os_master
              value: release-name-master-0
          volumeMounts:
            - name: shared
              mountPath: /shared
            - name: certificates
              mountPath: /config/node-key.pem
              subPath: tls.key
            - name: certificates
              mountPath: /config/ofd-rest-key.pem
              subPath: tls.key
            - name: os-data
              mountPath: /data
            - mountPath: /init
              name: init
          securityContext:
            runAsUser: 0
            privileged: true
      containers:
        - name: main
          image: opensearchproject/opensearch:1.3.2
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 2000Mi
            requests:
              memory: 1000Mi
            seccompProfile:
              type: RuntimeDefault
          livenessProbe:
            tcpSocket:
              port: transport
            initialDelaySeconds: 60
            periodSeconds: 60
          ports:
            - containerPort: 9300
              name: transport
            - containerPort: 9200
              name: http
          volumeMounts:
            - name: opensearch
              mountPath: /livenessProbe.sh
              subPath: livenessProbe.sh
            - name: opensearchsecret
              mountPath: /usr/share/opensearch/config/opensearch.yml
              subPath: opensearch.yml
            - name: opensearch
              mountPath: /usr/share/opensearch/config/log4j2.properties
              subPath: log4j2.properties
            - name: os-data
              mountPath: /data
            - name: certificates
              mountPath: /usr/share/opensearch/config/node.pem
              subPath: tls.crt
            - name: certificates
              mountPath: /usr/share/opensearch/config/root-ca.pem
              subPath: ca.crt
            - name: certificates
              mountPath: /usr/share/opensearch/config/ofd-rest.pem
              subPath: tls.crt
            - name: shared
              mountPath: /usr/share/opensearch/config/node-key.key
              subPath: node-key.key
            - name: shared
              mountPath: /usr/share/opensearch/config/ofd-rest-key.key
              subPath: ofd-rest-key.key
          env:
            - name: os_url
              value: https://localhost:9200
            - name: os_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: username
            - name: os_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: password
            - name: OPENSEARCH_JAVA_OPTS
              value: -Xms512M -Xmx512M -Djava.net.preferIPv4Stack=true -XshowSettings:properties -XshowSettings:vm -XshowSettings:system -Djava.util.logging.config.file=/usr/share/opensearch/config/logging.properties
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_MASTER
              value: "false"
            - name: NODE_DATA
              value: "false"
            - name: NODE_INGEST
              value: "false"
      volumes:
        - name: opensearch
          configMap:
            name: release-name
            defaultMode: 493
        - name: opensearchsecret
          secret:
            secretName: release-name
            defaultMode: 420
        - name: init
          configMap:
            name: release-name-init
            defaultMode: 493
        - name: os-data
          emptyDir: {}
        - name: certificates
          secret:
            secretName: release-name-opensearch-certificates
        - name: admin-certificate
          secret:
            secretName: release-name-opensearch-admin-certificate
        - name: securityconfig
          secret:
            secretName: release-name-securityconfig
        - name: shared
          emptyDir: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-kafka
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-logging
      app.kubernetes.io/instance: release-name
      type: kafka
  serviceName: kafka
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-logging
        app.kubernetes.io/instance: release-name
        type: kafka
    spec:
      priorityClassName: logging
      initContainers:
        - name: init
          image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - /init/check_host_port.sh $zk 2181
          env:
            - name: zk
              value: release-name-zk-0
          volumeMounts:
            - mountPath: /init
              name: init
      containers:
        - name: kafka
          image: bitnami/kafka:3.1.0
          imagePullPolicy: null
          ports:
            - containerPort: 9092
              name: kafka
            - containerPort: 9093
              name: broker
            - containerPort: 12345
              name: jmx
          resources:
            limits:
              memory: 600Mi
            requests:
              memory: 600Mi
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: release-name-zk-0:2181/kafka/logging
            - name: BROKER_ID_COMMAND
              value: hostname | awk -F'-' '{print $NF}'
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://:9092
            - name: KAFKA_HEAP_OPTS
              value: -Xmx256M -Xms256M
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
          lifecycle:
            preStop:
              exec:
                command:
                  - /opt/bitnami/kafka/bin/kafka-server-stop.sh
          readinessProbe:
            tcpSocket:
              port: kafka
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: kafka-data
              mountPath: /kafka
      terminationGracePeriodSeconds: 10
      volumes:
        - name: init
          configMap:
            name: release-name-init
            defaultMode: 493
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  metadata: null
  name: release-name-zk
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-logging
      app.kubernetes.io/instance: release-name
      type: zk
  serviceName: zk
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-logging
        app.kubernetes.io/instance: release-name
        type: zk
    spec:
      priorityClassName: logging
      initContainers:
        - image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - until mkdir -p /volumes/data /volumes/logs && rm -f /volumes/data/myid && echo ${MY_POD_NAME##*-} > /volumes/data/myid; do echo "retry create data and logs folders" && sleep 2; done
          name: init
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - mountPath: /volumes
              name: zk-data
      containers:
        - name: zk
          image: zookeeper:3.8.0
          imagePullPolicy: null
          ports:
            - containerPort: 2181
              name: client
            - containerPort: 2888
              name: peer
            - containerPort: 3888
              name: leader
            - containerPort: 8080
              name: admin
          env:
            - name: JVMFLAGS
              value: -Xmx128M
            - name: ZOO_CFG_EXTRA
              value: metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7070
            - name: ZOO_SERVERS
              value: 'server.0=release-name-zk-0:2888:3888;2181 '
            - name: ZOO_DATA_DIR
              value: /volumes/data
            - name: ZOO_DATA_LOG_DIR
              value: /volumes/logs
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            limits:
              memory: 300Mi
            requests:
              memory: 300Mi
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /volumes
              name: zk-data
  volumeClaimTemplates:
    - metadata:
        name: zk-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-data
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  updateStrategy:
    type: RollingUpdate
  serviceName: release-name-data
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-logging
      app.kubernetes.io/instance: release-name
      node: os
      type: data
  template:
    metadata:
      annotations:
        checksum/config: 0fe0db9cddc761303206ffec3220b058fb3a3a5c6ececd02f6ad10b203c8e30e
        checksum/secret1: 3cb64277b9a23058962eca652fda672ac020b15f69cc8a44e201f69088475702
        checksum/secret2: ce72d8eba23ba6fa2a977964f6ffe33f83354e0bee932bc37d36a6c7d42e68d0
      labels:
        app.kubernetes.io/name: kubernetes-logging
        app.kubernetes.io/instance: release-name
        node: os
        type: data
    spec:
      priorityClassName: logging
      serviceAccountName: release-name-priv
      initContainers:
        - name: init
          image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - '/init/init_os_node.sh '
          volumeMounts:
            - name: init
              mountPath: init
            - name: os-data
              mountPath: /data
            - name: shared
              mountPath: /shared
            - name: certificates
              mountPath: /config/node-key.pem
              subPath: tls.key
            - name: certificates
              mountPath: /config/ofd-rest-key.pem
              subPath: tls.key
          securityContext:
            runAsUser: 0
            privileged: true
      containers:
        - name: main
          image: opensearchproject/opensearch:1.3.2
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 2000Mi
            requests:
              memory: 1000Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 9300
              name: transport
          livenessProbe:
            tcpSocket:
              port: transport
            initialDelaySeconds: 60
            periodSeconds: 60
          volumeMounts:
            - name: os-data
              mountPath: /data
            - name: opensearchsecret
              mountPath: /usr/share/opensearch/config/opensearch.yml
              subPath: opensearch.yml
            - name: opensearch
              mountPath: /usr/share/opensearch/config/log4j2.properties
              subPath: log4j2.properties
            - name: certificates
              mountPath: /usr/share/opensearch/config/node.pem
              subPath: tls.crt
            - name: certificates
              mountPath: /usr/share/opensearch/config/root-ca.pem
              subPath: ca.crt
            - name: certificates
              mountPath: /usr/share/opensearch/config/ofd-rest.pem
              subPath: tls.crt
            - name: shared
              mountPath: /usr/share/opensearch/config/node-key.key
              subPath: node-key.key
            - name: shared
              mountPath: /usr/share/opensearch/config/ofd-rest-key.key
              subPath: ofd-rest-key.key
          env:
            - name: os_url
              value: https://localhost:9200
            - name: os_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: username
            - name: os_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: password
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPENSEARCH_JAVA_OPTS
              value: -Xms512M -Xmx512M -Djava.net.preferIPv4Stack=true -XshowSettings:properties -XshowSettings:vm -XshowSettings:system
            - name: NODE_MASTER
              value: "false"
            - name: NODE_DATA
              value: "true"
      volumes:
        - name: init
          configMap:
            name: release-name-init
            defaultMode: 493
        - name: opensearch
          configMap:
            name: release-name
            defaultMode: 493
        - name: opensearchsecret
          secret:
            secretName: release-name
            defaultMode: 420
        - name: certificates
          secret:
            secretName: release-name-opensearch-certificates
        - name: securityconfig
          secret:
            defaultMode: 420
            secretName: release-name-securityconfig
        - name: shared
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: os-data
      spec:
        resources:
          requests:
            storage: 1Gi
        accessModes:
          - ReadWriteOnce
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-master
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
    node: os
spec:
  updateStrategy:
    type: RollingUpdate
  serviceName: release-name-master
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-logging
      app.kubernetes.io/instance: release-name
      type: master
      node: os
  template:
    metadata:
      annotations:
        checksum/config: 0fe0db9cddc761303206ffec3220b058fb3a3a5c6ececd02f6ad10b203c8e30e
        checksum/secret1: 03056d25ff31f4c6add1a7078bd6507f45bd5f94fd3dfaa670692befc89806da
        checksum/secret2: ce72d8eba23ba6fa2a977964f6ffe33f83354e0bee932bc37d36a6c7d42e68d0
      labels:
        app.kubernetes.io/name: kubernetes-logging
        app.kubernetes.io/instance: release-name
        type: master
        node: os
    spec:
      priorityClassName: logging
      serviceAccountName: release-name-priv
      initContainers:
        - name: init
          image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - '/init/init_os_node.sh '
          volumeMounts:
            - name: init
              mountPath: /init
            - name: shared
              mountPath: /shared
            - name: certificates
              mountPath: /config/node-key.pem
              subPath: tls.key
            - name: certificates
              mountPath: /config/ofd-rest-key.pem
              subPath: tls.key
            - name: os-data
              mountPath: /data
          securityContext:
            privileged: true
            runAsUser: 0
      containers:
        - name: main
          image: opensearchproject/opensearch:1.3.2
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 700Mi
            requests:
              memory: 700Mi
            seccompProfile:
              type: RuntimeDefault
          livenessProbe:
            tcpSocket:
              port: transport
            initialDelaySeconds: 60
            periodSeconds: 60
          ports:
            - containerPort: 9300
              name: transport
          volumeMounts:
            - name: os-data
              mountPath: /data
            - name: opensearchsecret
              mountPath: /usr/share/opensearch/config/opensearch.yml
              subPath: opensearch.yml
            - name: opensearch
              mountPath: /usr/share/opensearch/config/log4j2.properties
              subPath: log4j2.properties
            - name: certificates
              mountPath: /usr/share/opensearch/config/node.pem
              subPath: tls.crt
            - name: certificates
              mountPath: /usr/share/opensearch/config/root-ca.pem
              subPath: ca.crt
            - name: certificates
              mountPath: /usr/share/opensearch/config/ofd-rest.pem
              subPath: tls.crt
            - name: shared
              mountPath: /usr/share/opensearch/config/node-key.key
              subPath: node-key.key
            - name: shared
              mountPath: /usr/share/opensearch/config/ofd-rest-key.key
              subPath: ofd-rest-key.key
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPENSEARCH_JAVA_OPTS
              value: -Xms256M -Xmx256M -Djava.net.preferIPv4Stack=true -XshowSettings:properties -XshowSettings:vm -XshowSettings:system
            - name: NODE_DATA
              value: "false"
            - name: NODE_INGEST
              value: "false"
            - name: NODE_MASTER
              value: "true"
      volumes:
        - name: init
          configMap:
            name: release-name-init
            defaultMode: 493
        - name: opensearch
          configMap:
            name: release-name
        - name: opensearchsecret
          secret:
            secretName: release-name
        - name: certificates
          secret:
            secretName: release-name-opensearch-certificates
        - name: securityconfig
          secret:
            secretName: release-name-securityconfig
        - name: shared
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: os-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: release-name-curator
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
spec:
  schedule: 10 0 * * *
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
          labels:
            app.kubernetes.io/name: kubernetes-logging
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/opensearch: 1.3.2
            type: es-curator
        spec:
          initContainers:
            - name: init
              image: nickytd/init-container:1.0.2
              imagePullPolicy: IfNotPresent
              command:
                - sh
                - -c
                - /init/check_os.sh
              env:
                - name: os_url
                  value: https://release-name-client.default.svc.cluster.local:9200
                - name: os_user
                  valueFrom:
                    secretKeyRef:
                      name: release-name-opensearch-credentials-admin
                      key: username
                - name: os_pass
                  valueFrom:
                    secretKeyRef:
                      name: release-name-opensearch-credentials-admin
                      key: password
              volumeMounts:
                - mountPath: /init
                  name: init
          containers:
            - name: es-curator
              image: nickytd/os-curator:5.8.4
              imagePullPolicy: IfNotPresent
              env:
                - name: os_host
                  value: https://release-name-client.default.svc.cluster.local:9200
              command:
                - /curator/curator
                - --config
                - /config/curator.yml
                - /config/actions.yml
              volumeMounts:
                - name: actions
                  mountPath: /config/actions.yml
                  subPath: actions.yml
                - name: curator
                  mountPath: /config/curator.yml
                  subPath: curator.yml
                - name: certificates
                  mountPath: /etc/root-ca.pem
                  subPath: ca.crt
          restartPolicy: OnFailure
          volumes:
            - name: init
              configMap:
                name: release-name-init
                defaultMode: 493
            - name: actions
              configMap:
                name: release-name-curator
            - name: curator
              secret:
                secretName: release-name-curator
            - name: certificates
              secret:
                secretName: release-name-opensearch-certificates
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: logging
  namespace: default
value: 500
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: logging-data
  namespace: default
value: 1000
---
kind: Job
apiVersion: batch/v1
metadata:
  name: release-name-topics-config
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
  annotations:
    helm.sh/hook: post-install, post-upgrade
    helm.sh/hook-weight: "-8"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  backoffLimit: 10
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      initContainers:
        - name: init
          image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - /init/check_host_port.sh $kafka 9092
          env:
            - name: kafka
              value: release-name-kafka-0
          volumeMounts:
            - mountPath: /init
              name: init
      containers:
        - name: kafka-topic-config
          image: bitnami/kafka:3.1.0
          command:
            - /bin/sh
            - -c
            - '/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server $kafka --create  --topic containers --partitions 1 --replication-factor 0 --if-not-exists || true &&  /opt/bitnami/kafka/bin/kafka-configs.sh --bootstrap-server $kafka  --alter --entity-type topics --entity-name containers --add-config max.message.bytes=10000000,retention.bytes=134217728,retention.ms=3600000,message.timestamp.difference.max.ms=3600000,message.timestamp.type=LogAppendTime || true && /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server $kafka  --alter  --topic containers --partitions 1 --if-exists || true && true '
          env:
            - name: kafka
              value: release-name-kafka-0:9092
      restartPolicy: Never
      volumes:
        - name: init
          configMap:
            name: release-name-init
            defaultMode: 493
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-opensearch-dashboards-index-pattern-job
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "-7"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  backoffLimit: 3
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      initContainers:
        - name: init
          image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - /init/check_os.sh && /config/check_opensearch-dashboards.sh
          env:
            - name: opensearch_dashboards_URL
              value: http://release-name-opensearch-dashboards.default.svc.cluster.local:5601
            - name: os_url
              value: https://release-name-client.default.svc.cluster.local:9200
            - name: os_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: username
            - name: os_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: password
          volumeMounts:
            - name: config
              mountPath: /config
            - name: init
              mountPath: /init
      containers:
        - name: main
          image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - /config/create_index_pattern.sh
          env:
            - name: opensearch_dashboards_URL
              value: http://release-name-opensearch-dashboards.default.svc.cluster.local:5601
            - name: opensearch_dashboards_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-dashboards-credentials-admin
                  key: username
            - name: opensearch_dashboards_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-dashboards-credentials-admin
                  key: password
            - name: opensearch_dashboards_DEVELOPER_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-dashboards-credentials-developer
                  key: username
            - name: opensearch_dashboards_DEVELOPER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-dashboards-credentials-developer
                  key: password
            - name: INDEX_PATTERNS
              value: containers,systemd,nginx
            - name: TENANTS
              value: Global,Developer
          volumeMounts:
            - name: config
              mountPath: /config
            - name: saved-objects
              mountPath: /saved_objects
      volumes:
        - name: config
          configMap:
            name: release-name-opensearch-dashboards-index-pattern
            defaultMode: 493
        - name: saved-objects
          configMap:
            name: release-name-opensearch-dashboards-saved-objects
        - name: init
          configMap:
            name: release-name-init
            defaultMode: 493
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-aliases
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  backoffLimit: 10
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/name: kubernetes-logging
        app.kubernetes.io/instance: release-name
        type: es-aliases
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: init
          image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - /init/check_os.sh
          env:
            - name: os_url
              value: https://release-name-client.default.svc.cluster.local:9200
            - name: os_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: username
            - name: os_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: password
          volumeMounts:
            - mountPath: /init
              name: init
      containers:
        - name: os-curator
          image: nickytd/os-curator:5.8.4
          imagePullPolicy: IfNotPresent
          env:
            - name: os_host
              value: https://release-name-client.default.svc.cluster.local:9200
          command:
            - /curator/curator
            - --config
            - /config/curator.yml
            - /config/actions.yml
          volumeMounts:
            - name: actions
              mountPath: /config/actions.yml
              subPath: actions.yml
            - name: curator
              mountPath: /config/curator.yml
              subPath: curator.yml
            - name: certificates
              mountPath: /etc/root-ca.pem
              subPath: ca.crt
      volumes:
        - name: init
          configMap:
            name: release-name-init
            defaultMode: 493
        - name: actions
          configMap:
            name: release-name-curator
        - name: curator
          secret:
            secretName: release-name-curator
        - name: certificates
          secret:
            secretName: release-name-opensearch-certificates
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-index-templates
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "-9"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  backoffLimit: 10
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: init
          image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - /init/check_os.sh
          env:
            - name: os_url
              value: https://release-name-client.default.svc.cluster.local:9200
            - name: os_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: username
            - name: os_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: password
          volumeMounts:
            - name: init
              mountPath: /init
      containers:
        - name: main
          image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - /templates/templates.sh
          env:
            - name: os_url
              value: https://release-name-client.default.svc.cluster.local:9200
            - name: os_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: username
            - name: os_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: password
          volumeMounts:
            - name: templates
              mountPath: /templates
      volumes:
        - name: init
          configMap:
            name: release-name-init
            defaultMode: 493
        - name: templates
          configMap:
            name: release-name-index-templates
            defaultMode: 493
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-securityadmin
  labels:
    app.kubernetes.io/name: kubernetes-logging
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/opensearch: 1.3.2
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "-10"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  backoffLimit: 10
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: init
          image: nickytd/init-container:1.0.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - /init/check_host_port.sh $os_master 9300 && /init/init_os_node.sh -only-keys
          env:
            - name: os_master
              value: release-name-master-0
          volumeMounts:
            - mountPath: /init
              name: init
            - mountPath: /shared
              name: shared
            - name: certificates
              mountPath: /config/node-key.pem
              subPath: tls.key
            - name: certificates
              mountPath: /config/ofd-rest-key.pem
              subPath: tls.key
            - name: admin-certificate
              mountPath: /config/admin-key.pem
              subPath: tls.key
      containers:
        - name: main
          image: opensearchproject/opensearch:1.3.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - /setup.sh
          env:
            - name: os_url
              value: https://release-name-client.default.svc.cluster.local:9200
            - name: os_node
              value: release-name-master-0
            - name: os_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: username
            - name: os_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-credentials-admin
                  key: password
            - name: ki_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-dashboards-credentials-admin
                  key: username
            - name: ki_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-dashboards-credentials-admin
                  key: password
            - name: ki_ro_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-dashboards-credentials-readonly
                  key: username
            - name: ki_ro_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-dashboards-credentials-readonly
                  key: password
            - name: ki_dev_user
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-dashboards-credentials-developer
                  key: username
            - name: ki_dev_pass
              valueFrom:
                secretKeyRef:
                  name: release-name-opensearch-dashboards-credentials-developer
                  key: password
          volumeMounts:
            - name: setup
              mountPath: /setup.sh
              subPath: setup.sh
            - name: certificates
              mountPath: /usr/share/opensearch/config/node.pem
              subPath: tls.crt
            - name: certificates
              mountPath: /usr/share/opensearch/config/root-ca.pem
              subPath: ca.crt
            - name: admin-certificate
              mountPath: /usr/share/opensearch/config/admin.pem
              subPath: tls.crt
            - name: shared
              mountPath: /usr/share/opensearch/config/node-key.key
              subPath: node-key.key
            - name: shared
              mountPath: /usr/share/opensearch/config/ofd-rest-key.key
              subPath: ofd-rest-key.key
            - name: shared
              mountPath: /usr/share/opensearch/config/admin-key.key
              subPath: admin-key.key
            - name: securityconfig
              mountPath: /usr/share/opensearch/plugins/opensearch-security/securityconfig
      volumes:
        - name: certificates
          secret:
            secretName: release-name-opensearch-certificates
        - name: admin-certificate
          secret:
            secretName: release-name-opensearch-admin-certificate
        - name: securityconfig
          secret:
            secretName: release-name-securityconfig
            defaultMode: 420
        - name: init
          configMap:
            name: release-name-init
            defaultMode: 493
        - name: setup
          configMap:
            name: release-name-securityadmin
            defaultMode: 493
        - name: shared
          emptyDir: {}
