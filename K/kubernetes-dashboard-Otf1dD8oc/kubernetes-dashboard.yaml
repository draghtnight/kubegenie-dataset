apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kubernetes-dashboard
    chart: kubernetes-dashboard-0.9.2
    heritage: Helm
    release: release-name
  name: release-name-kubernetes-dashboard
  namespace: Otf1dD8oc
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: kubernetes-dashboard
    chart: kubernetes-dashboard-0.9.2
    heritage: Helm
    release: release-name
  name: release-name-kubernetes-dashboard
  namespace: Otf1dD8oc
type: Opaque
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app: kubernetes-dashboard
    chart: kubernetes-dashboard-0.9.2
    heritage: Helm
    release: release-name
  name: release-name-kubernetes-dashboard
  namespace: Otf1dD8oc
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - secrets
    resourceNames:
      - kubernetes-dashboard-key-holder
      - release-name-kubernetes-dashboard
    verbs:
      - get
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - kubernetes-dashboard-settings
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - services
    resourceNames:
      - heapster
    verbs:
      - proxy
  - apiGroups:
      - ""
    resources:
      - services/proxy
    resourceNames:
      - heapster
      - 'http:heapster:'
      - 'https:heapster:'
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app: kubernetes-dashboard
    chart: kubernetes-dashboard-0.9.2
    heritage: Helm
    release: release-name
  name: release-name-kubernetes-dashboard
  namespace: Otf1dD8oc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: release-name-kubernetes-dashboard
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubernetes-dashboard
  labels:
    app: kubernetes-dashboard
    chart: kubernetes-dashboard-0.9.2
    release: release-name
    heritage: Helm
    kubernetes.io/cluster-service: "true"
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 8443
  selector:
    app: kubernetes-dashboard
    release: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubernetes-dashboard
  labels:
    app: kubernetes-dashboard
    chart: kubernetes-dashboard-0.9.2
    release: release-name
    heritage: Helm
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: kubernetes-dashboard
      chart: kubernetes-dashboard-0.9.2
      release: release-name
      heritage: Helm
      kubernetes.io/cluster-service: "true"
  template:
    metadata:
      labels:
        app: kubernetes-dashboard
        chart: kubernetes-dashboard-0.9.2
        release: release-name
        heritage: Helm
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: release-name-kubernetes-dashboard
      containers:
        - name: kubernetes-dashboard
          image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0
          imagePullPolicy: IfNotPresent
          args:
            - --auto-generate-certificates
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          volumeMounts:
            - name: kubernetes-dashboard-certs
              mountPath: /certs
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /
              port: 8443
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
      volumes:
        - name: kubernetes-dashboard-certs
          secret:
            secretName: release-name-kubernetes-dashboard
        - name: tmp-volume
          emptyDir: {}
