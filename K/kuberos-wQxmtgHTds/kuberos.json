[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-kuberos",
      "labels": {
        "app.kubernetes.io/name": "kuberos",
        "helm.sh/chart": "kuberos-2.0.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "template.yaml": "apiVersion: v1\nkind: Config\ncurrent-context: k8s\nclusters:\n- name: k8s\n  cluster:\n    certificate-authority-data: CA_CRT\n    server: https://k8s.example.com:6443",
      "OIDCSecret": "secret"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-kuberos",
      "labels": {
        "app.kubernetes.io/name": "kuberos",
        "helm.sh/chart": "kuberos-2.0.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "kuberos",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-kuberos",
      "labels": {
        "app.kubernetes.io/name": "kuberos",
        "helm.sh/chart": "kuberos-2.0.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "kuberos",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "kuberos",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-kuberos"
              }
            },
            {
              "name": "config-pad",
              "emptyDir": {}
            }
          ],
          "initContainers": [
            {
              "name": "template-config",
              "image": "negz/kuberos:7bc1e72",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/sh",
                "-ec"
              ],
              "args": [
                "sed \\\n  -e \"s/CA_CRT/$(base64 < /var/run/secrets/kubernetes.io/serviceaccount/ca.crt | tr -d '\\n')/g\" \\\n  < /etc/kuberos/config/template.yaml \\\n  > /etc/kuberos/edited/template.yaml\ncp /etc/kuberos/config/OIDCSecret /etc/kuberos/edited/OIDCSecret"
              ],
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etc/kuberos/config"
                },
                {
                  "name": "config-pad",
                  "mountPath": "/etc/kuberos/edited"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "kuberos",
              "image": "negz/kuberos:7bc1e72",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/kuberos"
              ],
              "args": [
                "https://auth.example.com",
                "kuberos",
                "/etc/kuberos/OIDCSecret",
                "/etc/kuberos/template.yaml"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 10003
                }
              ],
              "volumeMounts": [
                {
                  "name": "config-pad",
                  "mountPath": "/etc/kuberos"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": "http"
                }
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  }
]