kind: ServiceAccount
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/name: k10restore
    helm.sh/chart: k10restore-5.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 5.0.0
    app.kubernetes.io/managed-by: Helm
  name: release-name-k10restore
  namespace: l5I5kimkQuUzQ1
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: k10restore
    helm.sh/chart: k10restore-5.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 5.0.0
    app.kubernetes.io/managed-by: Helm
  name: release-name-cluster-role
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: k10restore
    helm.sh/chart: k10restore-5.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 5.0.0
    app.kubernetes.io/managed-by: Helm
  name: default-release-name-k10restore-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cluster-role
subjects:
  - kind: ServiceAccount
    name: release-name-k10restore
    namespace: default
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: k10restore
    helm.sh/chart: k10restore-5.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 5.0.0
    app.kubernetes.io/managed-by: Helm
  name: release-name-role
  namespace: l5I5kimkQuUzQ1
rules:
  - apiGroups:
      - config.kio.kasten.io
    resources:
      - profiles
    verbs:
      - get
  - apiGroups:
      - cr.kanister.io
    resources:
      - profiles
    verbs:
      - get
      - create
      - update
      - delete
  - apiGroups:
      - config.kio.kasten.io
      - cr.kanister.io
    resources:
      - policies
      - blueprints
      - actionsets
    verbs:
      - get
      - create
      - delete
  - apiGroups:
      - ""
      - apps
    resources:
      - deployments
      - replicasets
      - persistentvolumes
      - persistentvolumeclaims
    verbs:
      - get
      - update
      - list
  - apiGroups:
      - ""
    resources:
      - secrets
      - pods
      - pods/exec
      - services
    verbs:
      - get
      - create
      - list
      - delete
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - create
      - list
      - delete
  - apiGroups:
      - ""
      - actions.kio.kasten.io
    resources:
      - events
      - restoreactions
      - configmaps
      - endpoints
    verbs:
      - list
      - get
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: k10restore
    helm.sh/chart: k10restore-5.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 5.0.0
    app.kubernetes.io/managed-by: Helm
  name: default-release-name-k10restore
  namespace: l5I5kimkQuUzQ1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-role
subjects:
  - kind: ServiceAccount
    name: release-name-k10restore
    namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-k10restore
  labels:
    app.kubernetes.io/name: k10restore
    helm.sh/chart: k10restore-5.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 5.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k10restore
        app.kubernetes.io/instance: release-name
    spec:
      restartPolicy: Never
      serviceAccountName: release-name-k10restore
      containers:
        - name: k10restore
          image: gcr.io/kasten-images/restorectl:5.0.0
          imagePullPolicy: Always
          args:
            - restore
            - -c=
            - -p=
            - -n=default
          resources: null
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
