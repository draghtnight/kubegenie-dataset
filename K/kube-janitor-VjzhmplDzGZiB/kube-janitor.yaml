apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kube-janitor
  labels:
    app: kube-janitor
    chart: kube-janitor-0.1.0
    release: release-name
    heritage: Helm
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-kube-janitor
  labels:
    app: kube-janitor
    chart: kube-janitor-0.1.0
    release: release-name
    heritage: Helm
rules:
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - get
      - list
      - delete
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - delete
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: release-name-kube-janitor
  labels:
    app: kube-janitor
    chart: kube-janitor-0.1.0
    release: release-name
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kube-janitor
subjects:
  - kind: ServiceAccount
    name: release-name-kube-janitor
    namespace: default
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-kube-janitor
  labels:
    app: kube-janitor
    chart: kube-janitor-0.1.0
    release: release-name
    heritage: Helm
spec:
  schedule: '*/1 * * * *'
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: release-name-kube-janitor
          restartPolicy: Never
          containers:
            - name: kube-janitor
              image: themagicalkarp/kube-janitor:v0.1.0
              imagePullPolicy: IfNotPresent
              command:
                - /kube-janitor
                - -expiration
                - "60"
                - -namespace
                - ""
                - -annotation
                - kube.janitor.io
                - -pendingJobExpiration
                - "60"
                - -verbose
              resources: {}
