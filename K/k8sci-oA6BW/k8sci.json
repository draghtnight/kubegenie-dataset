[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-k8sci",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "secrets": [
      {
        "name": "release-name-k8sci-git-auth"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-k8sci",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "GITHUB_USER": "b2N0b2NhdA==",
      "GITHUB_TOKEN": "dG9rZW4=",
      "GITEA_USER": "Z2l0ZWE=",
      "GITEA_TOKEN": "dG9rZW4=",
      "slackWebhook": "aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMvVFRUVFRUVFRUVC9CMDAwMDAwMDAwL2IxMjM0NTY3ODkwQUJDREVGMTIzNDU2",
      "webhookSecretToken": "dG9rZW5fdXNlZF9ieV9naWh1Yi9naXRlYQ=="
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-k8sci",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cluster-admin"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-k8sci",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "batch/v1beta1",
    "kind": "CronJob",
    "metadata": {
      "name": "release-name-k8sci-cleaner-cronjob",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "schedule": "12 * * * *",
      "jobTemplate": {
        "spec": {
          "template": {
            "spec": {
              "serviceAccountName": "release-name-k8sci",
              "volumes": [
                {
                  "name": "workspace",
                  "emptyDir": {}
                }
              ],
              "containers": [
                {
                  "name": "trigger",
                  "image": "gcr.io/tekton-releases/dogfooding/tkn",
                  "command": [
                    "/bin/sh"
                  ],
                  "args": [
                    "-ce",
                    "set -ex\n# A safety check, to avoid deleting too much!\nif [[ 200 -eq 0 || 200 == \"\" ]]; then\n  echo \"This task cannot be used to delete *all* resources from a cluster\" >&2\n  echo \"Please specifcy a value for keep > 0\"\n  exit 1\nfi\n# Cleanup pipelineruns first, as this will delete tasksruns too\ntkn pr delete -n default --keep 200\n# Keep double the amount of tr, for standalone trs\ntkn tr delete -n default  --keep 400 #X2\n"
                  ]
                }
              ],
              "restartPolicy": "Never"
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-k8sci-dashboard",
      "namespace": "tekton-pipelines",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "dashboard.chart-example.local",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "tekton-dashboard",
                  "servicePort": 9097
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-k8sci",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "chart-example.local",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "el-release-name-k8sci-gh-interceptor",
                  "servicePort": 8080
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "tekton.dev/v1beta1",
    "kind": "Task",
    "metadata": {
      "name": "release-name-k8sci-run-command-gitea",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "resources": {
        "inputs": [
          {
            "name": "git-repo",
            "type": "git"
          }
        ]
      },
      "params": [
        {
          "name": "org"
        },
        {
          "name": "repo"
        },
        {
          "name": "git_sha"
        },
        {
          "name": "ref"
        },
        {
          "name": "image"
        },
        {
          "name": "commands"
        },
        {
          "name": "statuses"
        },
        {
          "name": "htmlurl"
        },
        {
          "name": "pipelineName"
        },
        {
          "name": "pipelineType"
        }
      ],
      "results": [
        {
          "name": "description"
        },
        {
          "name": "output"
        }
      ],
      "steps": [
        {
          "name": "post-pending-status-gitea",
          "image": "$(params.image)",
          "env": [
            {
              "name": "GITHUB_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITHUB_USER"
                }
              }
            },
            {
              "name": "GITHUB_TOKEN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITHUB_TOKEN"
                }
              }
            },
            {
              "name": "GITEA_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITEA_USER"
                }
              }
            },
            {
              "name": "GITEA_TOKEN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITEA_TOKEN"
                }
              }
            }
          ],
          "command": [
            "bash"
          ],
          "args": [
            "-cx",
            "declare -a STATUSES\nSTATUSES=($(params.statuses))\n\n# extract the protocol\nproto=\"$(echo $(params.htmlurl) | grep :// | sed -e's,^\\(.*://\\).*,\\1,g')\"\n\n# remove the protocol\nurl=$(echo $(params.htmlurl) | sed -e s,$proto,,g)\n\n# extract the host and port\nhostport=$(echo $url |  cut -d/ -f1)\nAPI_END_POINT=${proto}${hostport}/api/v1\n\nfor status in \"${STATUSES[@]}\"\ndo\n  :\n  # pending,success,error,failure,warning\n  curl -X POST ${API_END_POINT}/repos/$(params.org)/$(params.repo)/statuses/$(params.git_sha) \\\n  -H \"accept: application/json\" \\\n  -H \"Authorization: token ${GITEA_TOKEN}\" \\\n  -H \"Content-Type: application/json\" -i -k -d \"{\\\n    \\\"context\\\": \\\"${status}\\\",\\\n    \\\"description\\\": \\\"pending...\\\",\\\n    \\\"state\\\": \\\"pending\\\",\\\n    \\\"target_url\\\": \\\"chart-example.local/dashboard\\\"\\\n  };\"\ndone\n"
          ]
        },
        {
          "name": "run",
          "image": "$(params.image)",
          "workingDir": "/workspace/git-repo",
          "securityContext": {
            "privileged": true
          },
          "env": [
            {
              "name": "GITHUB_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITHUB_USER"
                }
              }
            },
            {
              "name": "GITHUB_TOKEN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITHUB_TOKEN"
                }
              }
            },
            {
              "name": "GITEA_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITEA_USER"
                }
              }
            },
            {
              "name": "GITEA_TOKEN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITEA_TOKEN"
                }
              }
            },
            {
              "name": "GIT-REF",
              "value": "$(params.ref)"
            }
          ],
          "command": [
            "bash"
          ],
          "args": [
            "-cx",
            "set +e;\nRESULT=0;\nINDEX=0;\ndeclare -a STATUSES\nSTATUSES=($(params.statuses))\ndeclare -a COMMANDS\nCOMMANDS=($(params.commands))\nfor command in \"${COMMANDS[@]}\"\ndo\n   :\n   status=${STATUSES[$INDEX]};\n   ${command} &>> /tekton/home/output;\n   RESULT=$?;\n   [ $RESULT -ne 0 ] && [ \"$status\" != \"\" ] && echo \"failure\" > /tekton/home/status/${status} && break\n   [ $RESULT -eq 0 ] && [ \"$status\" != \"\" ] && echo \"success\" > /tekton/home/status/${status}\n   ((INDEX++))\ndone\n[ $RESULT -eq 0 ] && echo \"succeeded.\" > /tekton/home/description || echo \"build failed.\" > /tekton/home/description;\ncat /tekton/home/output;\nexit 0;\n"
          ],
          "volumeMounts": [
            {
              "mountPath": "/tekton/home",
              "name": "home"
            },
            {
              "mountPath": "/var/lib/docker",
              "name": "dind-storage"
            },
            {
              "mountPath": "/var/run/",
              "name": "dind-socket"
            },
            {
              "mountPath": "/root/.ssh",
              "name": "ssh-creds"
            }
          ]
        },
        {
          "name": "post-commit-status-gitea",
          "image": "$(params.image)",
          "env": [
            {
              "name": "GITHUB_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITHUB_USER"
                }
              }
            },
            {
              "name": "GITHUB_TOKEN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITHUB_TOKEN"
                }
              }
            },
            {
              "name": "GITEA_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITEA_USER"
                }
              }
            },
            {
              "name": "GITEA_TOKEN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITEA_TOKEN"
                }
              }
            }
          ],
          "command": [
            "bash"
          ],
          "args": [
            "-cx",
            "declare -a STATUSES\nSTATUSES=($(params.statuses))\n# extract the protocol\nproto=\"$(echo $(params.htmlurl) | grep :// | sed -e's,^\\(.*://\\).*,\\1,g')\"\n\n# remove the protocol\nurl=$(echo $(params.htmlurl) | sed -e s,$proto,,g)\n\n# extract the host and port\nhostport=$(echo $url |  cut -d/ -f1)\nAPI_END_POINT=${proto}${hostport}/api/v1\nfor status in \"${STATUSES[@]}\"\ndo\n  :\n  description=\"check passed.\"\n  state=$(cat /tekton/home/status/${status})\n  [ \"$state\" != \"success\" ] && description=\"check did not pass.\"\n  # pending,success,error,failure,warning\n  [ \"$status\" != \"\" ] && curl -X POST ${API_END_POINT}/repos/$(params.org)/$(params.repo)/statuses/$(params.git_sha) \\\n  -H \"accept: application/json\" \\\n  -H \"Authorization: token ${GITEA_TOKEN}\" \\\n  -H \"Content-Type: application/json\" -i -k -d \"{\\\n    \\\"context\\\": \\\"$status\\\",\\\n    \\\"description\\\": \\\"$description\\\",\\\n    \\\"state\\\": \\\"$state\\\",\\\n    \\\"target_url\\\": \\\"chart-example.local/dashboard\\\"\\\n  }\"\ndone\n"
          ],
          "volumeMounts": [
            {
              "mountPath": "/tekton/home",
              "name": "home"
            }
          ]
        },
        {
          "name": "slack-notify",
          "image": "$(params.image)",
          "env": [
            {
              "name": "SLACK_WEBHOOK",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "slackWebhook"
                }
              }
            },
            {
              "name": "PIPELINE_RUN",
              "valueFrom": {
                "fieldRef": {
                  "fieldPath": "metadata.labels['tekton.dev/pipelineRun']"
                }
              }
            }
          ],
          "workingDir": "/workspace/git-repo",
          "command": [
            "bash"
          ],
          "args": [
            "-cx",
            "declare -a COMMANDS\nCOMMANDS=($(params.commands))\nexport DESCRIPTION=$(cat /tekton/home/description);\n[ \"$DESCRIPTION\" != \"succeeded.\" ] && export SYMBOL=\":no_entry:\" || export SYMBOL=\":thumbsup:\";\nexport SLACK_TITLE=\"${SYMBOL} gitea Pipeline: $(params.pipelineName) $(params.pipelineType)\\n\\nStatus: ${STATUS}\\n\\nRepo: <$(params.htmlurl)|$(params.org)/$(params.repo)>\\n\\n<https://dashboard.chart-example.local:<PORT>/#/namespaces/cicd/pipelineruns/${PIPELINE_RUN}|build information>\";\nexport SLACK_MESSAGE=\"$(printf '%s\\n' \"${COMMANDS[@]}\")\\n $DESCRIPTION\";\n## TODO SLACK API too picky with text - figure out how to do a snippet\n# [ \"$STATUS\" != \"success\" ] && export SLACK_MESSAGE=\"\\`\\`\\`$(cat /tekton/home/output | sed \"s/\\\"/\\\\\\\"/g\" | sed \"s/'//g\" | sed \"s/\\`/\\\\\\`/g\" )\\`\\`\\`\";\nPAYLOAD=$( cat <<EOT\n{\n  \"blocks\": [\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"$SLACK_TITLE\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"$SLACK_MESSAGE\"\n      }\n    }\n  ]\n}\nEOT\n);\ncurl -d \"$PAYLOAD\" -H \"Content-Type: application/json\" -X POST $SLACK_WEBHOOK\n"
          ],
          "volumeMounts": [
            {
              "mountPath": "/tekton/home",
              "name": "home"
            }
          ]
        }
      ],
      "sidecars": [
        {
          "image": "docker:18.05-dind",
          "name": "server",
          "securityContext": {
            "privileged": true
          },
          "volumeMounts": [
            {
              "mountPath": "/var/lib/docker",
              "name": "dind-storage"
            },
            {
              "mountPath": "/var/run/",
              "name": "dind-socket"
            }
          ]
        },
        {
          "image": "$(params.image)",
          "name": "init-ssh-creds",
          "command": [
            "sh"
          ],
          "args": [
            "-c",
            "cp /secretsDir/*  /root/.ssh\nmv ~/.ssh/ssh-privatekey ~/.ssh/id_rsa\nchmod 600 ~/.ssh/id_rsa\nmkdir -p /tekton/home/status\nssh-keyscan github.com >> ~/.ssh/known_hosts\n"
          ],
          "volumeMounts": [
            {
              "mountPath": "/root/.ssh",
              "name": "ssh-creds"
            },
            {
              "mountPath": "/secretsDir",
              "name": "git-auth"
            },
            {
              "mountPath": "/tekton/home",
              "name": "home"
            }
          ]
        }
      ],
      "volumes": [
        {
          "name": "home",
          "emptyDir": {}
        },
        {
          "name": "dind-storage",
          "emptyDir": {}
        },
        {
          "name": "dind-socket",
          "emptyDir": {}
        },
        {
          "name": "ssh-creds",
          "emptyDir": {}
        },
        {
          "name": "git-auth",
          "secret": {
            "secretName": "release-name-k8sci-git-auth"
          }
        }
      ]
    }
  },
  {
    "apiVersion": "tekton.dev/v1beta1",
    "kind": "Task",
    "metadata": {
      "name": "release-name-k8sci-run-command-github",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "resources": {
        "inputs": [
          {
            "name": "git-repo",
            "type": "git"
          }
        ]
      },
      "params": [
        {
          "name": "org"
        },
        {
          "name": "repo"
        },
        {
          "name": "git_sha"
        },
        {
          "name": "ref"
        },
        {
          "name": "image"
        },
        {
          "name": "commands"
        },
        {
          "name": "statuses"
        },
        {
          "name": "htmlurl"
        },
        {
          "name": "pipelineName"
        },
        {
          "name": "pipelineType"
        }
      ],
      "results": [
        {
          "name": "status"
        },
        {
          "name": "description"
        },
        {
          "name": "output"
        }
      ],
      "steps": [
        {
          "name": "post-pending-status-github",
          "image": "$(params.image)",
          "env": [
            {
              "name": "GITHUB_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITHUB_USER"
                }
              }
            },
            {
              "name": "GITHUB_TOKEN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITHUB_TOKEN"
                }
              }
            },
            {
              "name": "GITEA_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITEA_USER"
                }
              }
            },
            {
              "name": "GITEA_TOKEN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITEA_TOKEN"
                }
              }
            }
          ],
          "command": [
            "bash"
          ],
          "args": [
            "-cx",
            "declare -a STATUSES\nSTATUSES=($(params.statuses))\nfor status in \"${STATUSES[@]}\"\ndo\n  :\n  # pending,success,error,failure\n  # /repos/:owner/:repo/statuses/:sha\n  curl -X POST https://api.github.com/repos/$(params.org)/$(params.repo)/statuses/$(params.git_sha) \\\n  -H \"accept: application/json\" \\\n  -H \"Authorization: token ${GITHUB_TOKEN}\" \\\n  -H \"Content-Type: application/json\" -i -k -d \"{\\\n    \\\"context\\\": \\\"$status\\\",\\\n    \\\"description\\\": \\\"pending...\\\",\\\n    \\\"state\\\": \\\"pending\\\"\n  }\"\ndone\n"
          ]
        },
        {
          "name": "run",
          "image": "$(params.image)",
          "workingDir": "/workspace/git-repo",
          "securityContext": {
            "privileged": true
          },
          "env": [
            {
              "name": "GITHUB_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITHUB_USER"
                }
              }
            },
            {
              "name": "GITHUB_TOKEN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITHUB_TOKEN"
                }
              }
            },
            {
              "name": "GITEA_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITEA_USER"
                }
              }
            },
            {
              "name": "GITEA_TOKEN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITEA_TOKEN"
                }
              }
            },
            {
              "name": "COMMANDS",
              "value": "$(params.commands)"
            },
            {
              "name": "GIT-REF",
              "value": "$(params.ref)"
            }
          ],
          "command": [
            "bash"
          ],
          "args": [
            "-cx",
            "RESULT=0;\nINDEX=0;\ndeclare -a STATUSES\nSTATUSES=($(params.statuses))\ndeclare -a COMMANDS\nCOMMANDS=($(params.commands))\nfor command in \"${COMMANDS[@]}\"\ndo\n   :\n   status=${STATUSES[$INDEX]};\n   ${command} &>> /tekton/home/output;\n   RESULT=$?;\n   [ $RESULT -ne 0 ] && [ \"$status\" != \"\" ] && echo \"failure\" > /tekton/home/status/${status} && break\n   [ $RESULT -eq 0 ] && [ \"$status\" != \"\" ] && echo \"success\" > /tekton/home/status/${status}\n   ((INDEX++))\ndone\n[ $RESULT -eq 0 ] && echo \"succeeded.\" > /tekton/home/description || echo \"build failed.\" > /tekton/home/description;\ncat /tekton/home/output;\nexit 0;\n"
          ],
          "volumeMounts": [
            {
              "mountPath": "/tekton/home",
              "name": "home"
            },
            {
              "mountPath": "/var/lib/docker",
              "name": "dind-storage"
            },
            {
              "mountPath": "/var/run/",
              "name": "dind-socket"
            },
            {
              "mountPath": "/root/.ssh",
              "name": "ssh-creds"
            }
          ]
        },
        {
          "name": "post-commit-status-github",
          "image": "$(params.image)",
          "env": [
            {
              "name": "GITHUB_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITHUB_USER"
                }
              }
            },
            {
              "name": "GITHUB_TOKEN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITHUB_TOKEN"
                }
              }
            },
            {
              "name": "GITEA_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITEA_USER"
                }
              }
            },
            {
              "name": "GITEA_TOKEN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "GITEA_TOKEN"
                }
              }
            },
            {
              "name": "PIPELINE_RUN",
              "valueFrom": {
                "fieldRef": {
                  "fieldPath": "metadata.labels['tekton.dev/pipelineRun']"
                }
              }
            }
          ],
          "command": [
            "bash"
          ],
          "args": [
            "-cx",
            "declare -a STATUSES\nSTATUSES=($(params.statuses))\nfor status in \"${STATUSES[@]}\"\ndo\n  :\n  description=\"check passed.\"\n  state=$(cat /tekton/home/status/${status})\n  [ \"$state\" != \"success\" ] && description=\"check did not pass.\"\n\n  # pending,success,error,failure\n  # /repos/:owner/:repo/statuses/:sha\n  curl -X POST https://api.github.com/repos/$(params.org)/$(params.repo)/statuses/$(params.git_sha) \\\n  -H \"accept: application/json\" \\\n  -H \"Authorization: token ${GITHUB_TOKEN}\" \\\n  -H \"Content-Type: application/json\" -i -k -d \"{\\\n    \\\"context\\\": \\\"$status\\\",\\\n    \\\"description\\\": \\\"$desription\\\",\\\n    \\\"state\\\": \\\"$state\\\"\n  }\"\ndone\n"
          ],
          "volumeMounts": [
            {
              "mountPath": "/tekton/home",
              "name": "home"
            }
          ]
        },
        {
          "name": "slack-notify",
          "image": "$(params.image)",
          "env": [
            {
              "name": "SLACK_WEBHOOK",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-k8sci",
                  "key": "slackWebhook"
                }
              }
            },
            {
              "name": "PIPELINE_RUN",
              "valueFrom": {
                "fieldRef": {
                  "fieldPath": "metadata.labels['tekton.dev/pipelineRun']"
                }
              }
            }
          ],
          "workingDir": "/workspace/git-repo",
          "command": [
            "bash"
          ],
          "args": [
            "-cx",
            "declare -a COMMANDS\nCOMMANDS=($(params.commands))\nexport DESCRIPTION=$(cat /tekton/home/description);\n[ \"$DESCRIPTION\" != \"succeeded.\" ] && export SYMBOL=\":no_entry:\" || export SYMBOL=\":thumbsup:\";\nexport SLACK_TITLE=\"${SYMBOL} github Pipeline: $(params.pipelineName) $(params.pipelineType)\\n\\nStatus: ${STATUS}\\n\\nRepo: <$(params.htmlurl)|$(params.org)/$(params.repo)>\\n\\n<https://dashboard.chart-example.local:<PORT>/#/namespaces/cicd/pipelineruns/${PIPELINE_RUN}|build information>\";\nexport SLACK_MESSAGE=\"$(printf '%s\\n' \"${COMMANDS[@]}\")\\n $DESCRIPTION\";\n## TODO SLACK API too picky with text - figure out how to do a snippet\n# [ \"$STATUS\" != \"success\" ] && export SLACK_MESSAGE=\"\\`\\`\\`$(cat /tekton/home/output | sed \"s/\\\"/\\\\\\\"/g\" | sed \"s/'//g\" | sed \"s/\\`/\\\\\\`/g\" )\\`\\`\\`\";\nPAYLOAD=$( cat <<EOT\n{\n  \"blocks\": [\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"$SLACK_TITLE\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"$SLACK_MESSAGE\"\n      }\n    }\n  ]\n}\nEOT\n);\ncurl -d \"$PAYLOAD\" -H \"Content-Type: application/json\" -X POST $SLACK_WEBHOOK\n"
          ],
          "volumeMounts": [
            {
              "mountPath": "/tekton/home",
              "name": "home"
            }
          ]
        }
      ],
      "sidecars": [
        {
          "image": "docker:18.05-dind",
          "name": "server",
          "securityContext": {
            "privileged": true
          },
          "volumeMounts": [
            {
              "mountPath": "/var/lib/docker",
              "name": "dind-storage"
            },
            {
              "mountPath": "/var/run/",
              "name": "dind-socket"
            }
          ]
        },
        {
          "image": "$(params.image)",
          "name": "init-ssh-creds",
          "command": [
            "sh"
          ],
          "args": [
            "-c",
            "cp /secretsDir/*  /root/.ssh\nmv ~/.ssh/ssh-privatekey ~/.ssh/id_rsa\nchmod 600 ~/.ssh/id_rsa\nmkdir -p /tekton/home/status\nssh-keyscan github.com >> ~/.ssh/known_hosts\n"
          ],
          "volumeMounts": [
            {
              "mountPath": "/root/.ssh",
              "name": "ssh-creds"
            },
            {
              "mountPath": "/secretsDir",
              "name": "git-auth"
            },
            {
              "mountPath": "/tekton/home",
              "name": "home"
            }
          ]
        }
      ],
      "volumes": [
        {
          "name": "home",
          "emptyDir": {}
        },
        {
          "name": "dind-storage",
          "emptyDir": {}
        },
        {
          "name": "dind-socket",
          "emptyDir": {}
        },
        {
          "name": "ssh-creds",
          "emptyDir": {}
        },
        {
          "name": "git-auth",
          "secret": {
            "secretName": "release-name-k8sci-git-auth"
          }
        }
      ]
    }
  },
  {
    "apiVersion": "triggers.tekton.dev/v1alpha1",
    "kind": "TriggerBinding",
    "metadata": {
      "name": "release-name-k8sci-pr-gitea-tb",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "params": [
        {
          "name": "gitrevision",
          "value": "$(body.pull_request.head.sha)"
        },
        {
          "name": "gitrepositorysshurl",
          "value": "$(body.repository.ssh_url)"
        },
        {
          "name": "contenttype",
          "value": "$(header.Content-Type)"
        },
        {
          "name": "repo",
          "value": "$(body.repository.name)"
        },
        {
          "name": "org",
          "value": "$(body.repository.owner.login)"
        },
        {
          "name": "ref",
          "value": "$(body.pull_request.head.ref)"
        },
        {
          "name": "type",
          "value": "gitea"
        },
        {
          "name": "htmlurl",
          "value": "$(body.repository.html_url)"
        }
      ]
    }
  },
  {
    "apiVersion": "triggers.tekton.dev/v1alpha1",
    "kind": "TriggerBinding",
    "metadata": {
      "name": "release-name-k8sci-push-gitea-tb",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "params": [
        {
          "name": "gitrevision",
          "value": "$(body.after)"
        },
        {
          "name": "gitrepositorysshurl",
          "value": "$(body.repository.ssh_url)"
        },
        {
          "name": "contenttype",
          "value": "$(header.Content-Type)"
        },
        {
          "name": "repo",
          "value": "$(body.repository.name)"
        },
        {
          "name": "org",
          "value": "$(body.repository.owner.login)"
        },
        {
          "name": "ref",
          "value": "$(body.ref)"
        },
        {
          "name": "type",
          "value": "gitea"
        },
        {
          "name": "htmlurl",
          "value": "$(body.repository.html_url)"
        }
      ]
    }
  },
  {
    "apiVersion": "triggers.tekton.dev/v1alpha1",
    "kind": "TriggerBinding",
    "metadata": {
      "name": "release-name-k8sci-pr-github-tb",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "params": [
        {
          "name": "gitrevision",
          "value": "$(body.pull_request.head.sha)"
        },
        {
          "name": "gitrepositorysshurl",
          "value": "$(body.pull_request.head.repo.ssh_url)"
        },
        {
          "name": "contenttype",
          "value": "$(header.Content-Type)"
        },
        {
          "name": "repo",
          "value": "$(body.pull_request.base.repo.name)"
        },
        {
          "name": "org",
          "value": "$(body.pull_request.base.repo.owner.login)"
        },
        {
          "name": "ref",
          "value": "$(body.pull_request.head.ref)"
        },
        {
          "name": "type",
          "value": "github"
        },
        {
          "name": "htmlurl",
          "value": "$(body.pull_request.head.repo.html_url)"
        }
      ]
    }
  },
  {
    "apiVersion": "triggers.tekton.dev/v1alpha1",
    "kind": "TriggerBinding",
    "metadata": {
      "name": "release-name-k8sci-push-github-tb",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "params": [
        {
          "name": "gitrevision",
          "value": "$(body.head_commit.id)"
        },
        {
          "name": "gitrepositorysshurl",
          "value": "$(body.repository.ssh_url)"
        },
        {
          "name": "contenttype",
          "value": "$(header.Content-Type)"
        },
        {
          "name": "repo",
          "value": "$(body.repository.name)"
        },
        {
          "name": "org",
          "value": "$(body.repository.owner.name)"
        },
        {
          "name": "ref",
          "value": "$(body.ref)"
        },
        {
          "name": "type",
          "value": "github"
        },
        {
          "name": "htmlurl",
          "value": "$(body.repository.html_url)"
        }
      ]
    }
  },
  {
    "apiVersion": "triggers.tekton.dev/v1alpha1",
    "kind": "TriggerTemplate",
    "metadata": {
      "name": "release-name-k8sci-cd",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "params": [
        {
          "name": "gitrevision",
          "description": "The git revision",
          "default": "master"
        },
        {
          "name": "gitrepositorysshurl",
          "description": "The git repo url"
        },
        {
          "name": "org",
          "description": "The github/gitea org of the PR"
        },
        {
          "name": "repo",
          "description": "The github/gitea repo of the PR"
        },
        {
          "name": "message",
          "description": "Notification message text",
          "default": "build"
        },
        {
          "name": "ref",
          "description": "git ref"
        },
        {
          "name": "image",
          "description": "run image"
        },
        {
          "name": "ciCommands",
          "description": "continuous integration command"
        },
        {
          "name": "ciStatuses",
          "description": "continuous integration statuses"
        },
        {
          "name": "cdCommands",
          "description": "continuous delivery command"
        },
        {
          "name": "cdStatuses",
          "description": "continuous delivery statuses"
        },
        {
          "name": "type",
          "description": "type of pipeline: ex gitea/github"
        },
        {
          "name": "htmlurl",
          "description": "repo url"
        },
        {
          "name": "pipelineName",
          "description": "Name of the pipeline being run"
        }
      ],
      "resourcetemplates": [
        {
          "apiVersion": "tekton.dev/v1beta1",
          "kind": "PipelineRun",
          "metadata": {
            "generateName": "cd-"
          },
          "spec": {
            "serviceAccountName": "release-name-k8sci",
            "pipelineSpec": {
              "resources": [
                {
                  "name": "source-repo",
                  "type": "git"
                }
              ],
              "tasks": [
                {
                  "name": "runtask-cd",
                  "when": [
                    {
                      "input": "$(tt.params.ref)",
                      "operator": "in",
                      "values": [
                        "refs/heads/master",
                        "refs/heads/main"
                      ]
                    }
                  ],
                  "params": [
                    {
                      "name": "org",
                      "value": "$(tt.params.org)"
                    },
                    {
                      "name": "repo",
                      "value": "$(tt.params.repo)"
                    },
                    {
                      "name": "git_sha",
                      "value": "$(tt.params.gitrevision)"
                    },
                    {
                      "name": "ref",
                      "value": "$(tt.params.ref)"
                    },
                    {
                      "name": "image",
                      "value": "$(tt.params.image)"
                    },
                    {
                      "name": "commands",
                      "value": "$(tt.params.cdCommands)"
                    },
                    {
                      "name": "statuses",
                      "value": "$(tt.params.cdStatuses)"
                    },
                    {
                      "name": "htmlurl",
                      "value": "$(tt.params.htmlurl)"
                    },
                    {
                      "name": "pipelineType",
                      "value": "Continuous Deployment"
                    },
                    {
                      "name": "pipelineName",
                      "value": "$(tt.params.pipelineName)"
                    }
                  ],
                  "resources": {
                    "inputs": [
                      {
                        "name": "git-repo",
                        "resource": "source-repo"
                      }
                    ]
                  },
                  "taskRef": {
                    "name": "release-name-k8sci-run-command-$(tt.params.type)"
                  }
                }
              ]
            },
            "resources": [
              {
                "name": "source-repo",
                "resourceSpec": {
                  "type": "git",
                  "params": [
                    {
                      "name": "revision",
                      "value": "$(tt.params.gitrevision)"
                    },
                    {
                      "name": "url",
                      "value": "$(tt.params.gitrepositorysshurl)"
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "triggers.tekton.dev/v1alpha1",
    "kind": "TriggerTemplate",
    "metadata": {
      "name": "release-name-k8sci-ci",
      "labels": {
        "helm.sh/chart": "k8sci-0.1.13",
        "app.kubernetes.io/name": "k8sci",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.15.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "params": [
        {
          "name": "gitrevision",
          "description": "The git revision",
          "default": "master"
        },
        {
          "name": "gitrepositorysshurl",
          "description": "The git repo url"
        },
        {
          "name": "org",
          "description": "The github/gitea org of the PR"
        },
        {
          "name": "repo",
          "description": "The github/gitea repo of the PR"
        },
        {
          "name": "message",
          "description": "Notification message text",
          "default": "build"
        },
        {
          "name": "ref",
          "description": "git ref"
        },
        {
          "name": "image",
          "description": "run image"
        },
        {
          "name": "ciCommands",
          "description": "continuous integration command"
        },
        {
          "name": "ciStatuses",
          "description": "continuous integration statuses"
        },
        {
          "name": "cdCommands",
          "description": "continuous delivery command"
        },
        {
          "name": "cdStatuses",
          "description": "continuous delivery statuses"
        },
        {
          "name": "type",
          "description": "type of pipeline: ex gitea/github"
        },
        {
          "name": "htmlurl",
          "description": "repo url"
        },
        {
          "name": "pipelineName",
          "description": "Name of the pipeline being run"
        }
      ],
      "resourcetemplates": [
        {
          "apiVersion": "tekton.dev/v1beta1",
          "kind": "PipelineRun",
          "metadata": {
            "generateName": "ci-"
          },
          "spec": {
            "serviceAccountName": "release-name-k8sci",
            "pipelineSpec": {
              "resources": [
                {
                  "name": "source-repo",
                  "type": "git"
                }
              ],
              "tasks": [
                {
                  "name": "runtask-ci",
                  "when": [
                    {
                      "input": "$(tt.params.ref)",
                      "operator": "notin",
                      "values": [
                        "refs/heads/master",
                        "refs/heads/main"
                      ]
                    }
                  ],
                  "params": [
                    {
                      "name": "org",
                      "value": "$(tt.params.org)"
                    },
                    {
                      "name": "repo",
                      "value": "$(tt.params.repo)"
                    },
                    {
                      "name": "git_sha",
                      "value": "$(tt.params.gitrevision)"
                    },
                    {
                      "name": "ref",
                      "value": "$(tt.params.ref)"
                    },
                    {
                      "name": "image",
                      "value": "$(tt.params.image)"
                    },
                    {
                      "name": "commands",
                      "value": "$(tt.params.ciCommands)"
                    },
                    {
                      "name": "statuses",
                      "value": "$(tt.params.ciStatuses)"
                    },
                    {
                      "name": "htmlurl",
                      "value": "$(tt.params.htmlurl)"
                    },
                    {
                      "name": "pipelineType",
                      "value": "Continuous Intgegration"
                    },
                    {
                      "name": "pipelineName",
                      "value": "$(tt.params.pipelineName)"
                    }
                  ],
                  "resources": {
                    "inputs": [
                      {
                        "name": "git-repo",
                        "resource": "source-repo"
                      }
                    ]
                  },
                  "taskRef": {
                    "name": "release-name-k8sci-run-command-$(tt.params.type)"
                  }
                }
              ]
            },
            "resources": [
              {
                "name": "source-repo",
                "resourceSpec": {
                  "type": "git",
                  "params": [
                    {
                      "name": "revision",
                      "value": "$(tt.params.gitrevision)"
                    },
                    {
                      "name": "url",
                      "value": "$(tt.params.gitrepositorysshurl)"
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  }
]