apiVersion: v1
kind: Service
metadata:
  name: release-name-kratos-selfservice-ui-node
  labels:
    app.kubernetes.io/name: kratos-selfservice-ui-node
    helm.sh/chart: kratos-selfservice-ui-node-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.0-alpha.3
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kratos-selfservice-ui-node
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kratos-selfservice-ui-node
  namespace: zlduTTlf9BS
  labels:
    app.kubernetes.io/name: kratos-selfservice-ui-node
    helm.sh/chart: kratos-selfservice-ui-node-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.0-alpha.3
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kratos-selfservice-ui-node
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kratos-selfservice-ui-node
        helm.sh/chart: kratos-selfservice-ui-node-0.23.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: v0.8.0-alpha.3
        app.kubernetes.io/managed-by: Helm
      annotations: null
    spec:
      automountServiceAccountToken: false
      containers:
        - name: kratos-selfservice-ui-node
          image: oryd/kratos-selfservice-ui-node:v0.8.0-alpha.3
          imagePullPolicy: IfNotPresent
          env:
            - name: KRATOS_PUBLIC_URL
              value: http://kratos-public
            - name: KRATOS_BROWSER_URL
              value: http://kratos-browserui
            - name: PROJECT_NAME
              value: SecureApp
            - name: BASE_URL
              value: ""
            - name: JWKS_URL
              value: http://oathkeeper-api
            - name: KRATOS_ADMIN_URL
              value: http://kratos-admin
            - name: SECURITY_MODE
              value: null
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/alive
              port: http
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-kratos-selfservice-ui-node-test-connection
  labels:
    app.kubernetes.io/name: kratos-selfservice-ui-node
    helm.sh/chart: kratos-selfservice-ui-node-0.23.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.0-alpha.3
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-kratos-selfservice-ui-node:80/health/ready
  restartPolicy: Never
