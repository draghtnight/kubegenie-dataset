apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: grafana-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      release: release-name
      app: grafana
  ingress:
    - {}
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: prometheus-server
  namespace: default
  labels:
    component: server
    app: prometheus
    release: release-name
    chart: prometheus-15.8.5
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      component: server
      app: prometheus
      release: release-name
  ingress:
    - ports:
        - port: 9090
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny
  namespace: default
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
spec:
  podSelector: {}
  policyTypes:
    - Ingress
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: cross-services-allow
  namespace: default
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
spec:
  podSelector:
    matchLabels:
      release: release-name
  ingress:
    - from:
        - podSelector:
            matchLabels:
              release: release-name
      ports:
        - protocol: TCP
          port: 8000
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: logging-allow-internal
  namespace: default
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
spec:
  podSelector:
    matchLabels:
      release: release-name
      run: logging-svc
  ingress:
    - from:
        - podSelector:
            matchLabels:
              release: release-name
      ports:
        - protocol: TCP
          port: 24224
        - protocol: TCP
          port: 24225
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-external
  namespace: default
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
spec:
  podSelector:
    matchLabels:
      service: gateway
      release: release-name
  ingress:
    - from: []
      ports:
        - protocol: TCP
          port: 8000
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-all-api
  namespace: default
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
spec:
  podSelector:
    matchLabels:
      run: aggregatedapis-svc
      release: release-name
  ingress:
    - from: null
      ports:
        - protocol: TCP
          port: 10250
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-gateway-admin
  namespace: default
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
spec:
  podSelector:
    matchLabels:
      release: release-name
      service: gateway
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: prometheus
              component: server
              release: release-name
      ports:
        - protocol: TCP
          port: 8877
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: crypto-svc-allow-secondary-services
  namespace: default
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
spec:
  podSelector:
    matchLabels:
      release: release-name
      run: crypto-svc
  ingress:
    - from:
        - podSelector:
            matchLabels:
              release: release-name
      ports:
        - protocol: TCP
          port: 8001
        - protocol: TCP
          port: 8002
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: state-svc-allow-secondary-services
  namespace: default
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
spec:
  podSelector:
    matchLabels:
      release: release-name
      run: state-svc
  ingress:
    - from:
        - podSelector:
            matchLabels:
              release: release-name
      ports:
        - protocol: TCP
          port: 8001
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: grafana-6.29.2
    app: grafana
    release: release-name
    app.kubernetes.io/version: 8.5.0
    app.kubernetes.io/managed-by: Helm
  name: release-name-grafana
  namespace: ZNfw9Wo0e
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: server
    app: prometheus
    release: release-name
    chart: prometheus-15.8.5
    heritage: Helm
  name: prometheus-server
  namespace: ZNfw9Wo0e
  annotations: {}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
  name: release-name-k10
  namespace: ZNfw9Wo0e
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-grafana
  namespace: ZNfw9Wo0e
  labels:
    helm.sh/chart: grafana-6.29.2
    app: grafana
    release: release-name
    app.kubernetes.io/version: 8.5.0
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  admin-user: YWRtaW4=
  admin-password: NVlJSHNsVmtOWldWcElSd2NOQ21JQWNxTVo3ejRqOXNpMzd6YkpjSw==
  ldap-toml: ""
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: kopia-tls-cert
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRVE94Nmt2L3cvNU9aeHlpN3BpVXFvVEFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGa1lYUmhMVzF2ZG1WeUxYTjJZeTFqWVRBZUZ3MHlNakEyTVRJeE1URTRNakphRncweQpNekEyTVRJeE1URTRNakphTUJreEZ6QVZCZ05WQkFNVERtUmhkR0V0Ylc5MlpYSXRjM1pqTUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNUczbkZKSEhZNmRESE5ETk9kOGFnUSt6MUxaRHkyQ1AKaVBOMi8yUXJCVHRYOXp4NGhpZUtodFU0Ymp3Z3E3KzVqMVFiSUtsRjI5ekJ4UEgyZmUycjM5a2E3OXRickx5egp0dmwvZmM1dWxGUjZZeGU3VmNXYVIxYjRiOGR3YU9ZTWJLVnY0Umdscis5ZXRnQWdHVjZlWkJhb3dqSFIxL0RWCjl5azhpRmx1cUpDc1FXOStwK3RDb0I1TzYwc1RZK0NRVVRuWWNjTE9vbUN3QTBhRkswMkpibkpZUUczUGRJOUUKMVllR1ZOL1pYdTNPMlFKZTE0YWpBVEdCOWlBYkc4NTFxYzBtbWVhcUlNSmJORnY5bythQnRVVUwwVk55MnE5SAo0QnQxa0xieHlxRUdvTmt5ZzlPUW1vT2dhSDd6WU95NmFMM0NWZXdncmhnYkpsUUExc0JEb3dJREFRQUJvNEdnCk1JR2RNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRbTE5cnd3NzYvTXU5NDVHKzEva1F2ZmNhdApJREE5QmdOVkhSRUVOakEwZ2haa1lYUmhMVzF2ZG1WeUxYTjJZeTVrWldaaGRXeDBnaHBrWVhSaExXMXZkbVZ5CkxYTjJZeTVrWldaaGRXeDBMbk4yWXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWUydzZUZnNLMy8rLzJtaFUKK25jaVNQYTZmbWVTVmp3MFRaL0VsQUk1aGlKbUpsd24xcHdjdHQ5Y1dVT0l4WVhidkIxYW9JNVZ4NWFOMnNlUAptUU1xRUZ2RHRsZ0FXblFTem4yOUJVWnJsL0FFcUJwU24yNHU0R3E4a1N5MExtTW9mWTBTQVZtVEtZM0RsQVdOCmNQL3c2SVZCWURGdWRSOGxhN0FqaEpXc1ZpK2JsZDJhaERhaFBpaUdMOUdKNVdDWVAyTVpyQmk1cmdmMGR2R2oKYm4yNExUWTlPM0xqNmFyQXU4QjBZclJVa2hNdTNkWkFidUtzZDhWZ01rMVdJSHQyMjRlOGloMExGSU01SDVOTQpXNGs2UGZVc0FRUG9tVU1hOTVydjNpeXIvZDFveDRKUVIrcGpybVNCaTFKMmE5UTJJMkhRazkxM1QwTHdZb1J2Cm5wYUZ2QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: kopia-tls-key
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
data:
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNUczbkZKSEhZNmRESE5ETk9kOGFnUSt6MUxaRHkyQ1BpUE4yLzJRckJUdFg5eng0CmhpZUtodFU0Ymp3Z3E3KzVqMVFiSUtsRjI5ekJ4UEgyZmUycjM5a2E3OXRickx5enR2bC9mYzV1bEZSNll4ZTcKVmNXYVIxYjRiOGR3YU9ZTWJLVnY0Umdscis5ZXRnQWdHVjZlWkJhb3dqSFIxL0RWOXlrOGlGbHVxSkNzUVc5KwpwK3RDb0I1TzYwc1RZK0NRVVRuWWNjTE9vbUN3QTBhRkswMkpibkpZUUczUGRJOUUxWWVHVk4vWlh1M08yUUplCjE0YWpBVEdCOWlBYkc4NTFxYzBtbWVhcUlNSmJORnY5bythQnRVVUwwVk55MnE5SDRCdDFrTGJ4eXFFR29Oa3kKZzlPUW1vT2dhSDd6WU95NmFMM0NWZXdncmhnYkpsUUExc0JEb3dJREFRQUJBb0lCQVFDak1BeU1lbFNLVWJ5MQpRa25LMVNMWEhzT202NHJsS1JlQmpBVHdFTHhYSVgwSFNERUdEZ3Q5cGFlSndQVEtIYzdQb1JNOE14R1FMMVpTCmYxVkx3MVl0TmFsenZ5N3Y2V011RFhIU0MzNmVBdmZvQU5VNVFsQ2tOSEtKVUY1eTRoM3dKQVFZTjZyODFESEMKTGJiQXlRSzRtQ041a0NQTWMrWTNpME1PV1cyZmgxbHF0YzNTMStTQzlaYTNXVTc5cGFCUlQwSW5Kd0d3TkEzUwpVMGViZ2V1TDkyZlNSUXFtNTZLajRMOWZjbDdXZ3Y1b1p4OVkwYisrQko2NXF1dy9GR3oxOU1XbDg2WlY1V0l6CmtZUTZ6L2JEbGl2akpXTmJsTGhPUlhVWHk3c3VNc0FTSkI0RXN2Q0RDSStrUWtsZG1UK0xGTVVYUDRFaWR2aUcKdmR4cFBGZHBBb0dCQU9ndjR0SjVGN3lkbzVsc0ZzQXdlbDBGb25mdTBaYUNKNmdmdnBVL0ZOM2htbGpod0d6ZwpIZGp6RVBQdEVZbmkvNnA2QWtUck9RMlRZa3NKTE84Y1RmQXpFQVB1cnY5OWdJcGdONzVoRENtUkp5dThJT3Q1CkFQWjQyR29sc0ZmQ2phZnplbDFxVHkvUW1xS3hBSXdqUllVcEtIWDRDbnR4YzVRNytQZ1NZUXMzQW9HQkFQdmIKV3pVVmM1SkpMYVFrYVF5OStwa3pRdnBiekFSS0UwSTN5T2dnY1N0VnRpV3JKV2tlcGJKYmJUaHhEeFkwRVNjNwo3VFlPT0Q2NTdQU25Tb3lBR2tGeEJWaWgrRHQyUzk3Z09pUTh0aUNpUG9zUkVyYkxLVDNmU0dnV0NNUmdCV3pnCnZBclJKbTc3d3AvMTArdzV0UnlzaWlYODJHNFZLMm54VzVvaE43ajFBb0dBQ2ZIYkhqYXZqSldYNXo5WTdoeGwKY1V5SGUrbVBzb21hbHpuYzJObWQxQzhRaEZRUEFOck1qSGxFdFozbXpXZ2FtVHVta3pzYjgzZm5rdDB1dm9NUQoxNFBvWUxLOWJoWDdCbkkra1BucEluS2tJZHhwOEl2N1BaTkplYXBwbGlpd0ZveDRKajRpYkNMY0xMRzJHMHA3CmRNdWhmd1FEdHV2U0RueFBHcGoyN1JzQ2dZQnFLM2RRY21HTTJsSm1MbjhtUXZQZ0h5N3Q4VUtZMEUwOERkNGcKbElTQWV4cFUyTWZsZjJqa1BneFZ6YnRKWmR1UlNYN2UyYkcySjVTUE1mS0lOZnhiZC9TRC80dHdMWmNnTmkvcwpWTGVHSEQ3M1N0UXp3SUw3TlNRRjFMd1BaRmNGSmR1L1I1bkhFVlJqTURNTkV1cVpVdGJOMnIrMThEQ2o4WDNuCkJIZkQvUUtCZ1FETWFjeGltcG9FOUFBeGtGZS90RnhTWGt2bm1Kd2FQdHBoN0luTTF5L0NCYVFOSkppNElWYzcKRGFSVzM4R0pWaUJzeHNONFhmeHh3WnNVZkdNeHNlWWNZNnhCNXh0djhiV0hQWG1Zb0ExaUdDLzdkd0FFN0tPSwpyeHM5aVNGREdPMi9IUFJaY0RaUVhWUGxZS1Jxc01CNHRrc3diRHczMUQxWnZ0SmpiWms3VGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
  namespace: ZNfw9Wo0e
  name: k10-trial-license
type: Opaque
data:
  license: Y3VzdG9tZXJOYW1lOiB0cmlhbHN0YXJ0ZXItbGljZW5zZQpkYXRlRW5kOiAnMjEwMC0wMS0wMVQwMDowMDowMC4wMDBaJwpkYXRlU3RhcnQ6ICcyMDIwLTAxLTAxVDAwOjAwOjAwLjAwMFonCmZlYXR1cmVzOgogIHRyaWFsOiBudWxsCmlkOiB0cmlhbC0wOWY4MzE5Zi0xODBmLTRhOTAtOTE3My1kOTJiNzZmMTgzNWUKcHJvZHVjdDogSzEwCnJlc3RyaWN0aW9uczoKICBub2RlczogNTAwCnNlcnZpY2VBY2NvdW50S2V5OiBudWxsCnZlcnNpb246IHYxLjAuMApzaWduYXR1cmU6IEYxbnVLUFV5STJtbDJGMmV1VHdGOXNZRTZMVU5rQ3ZiR2tTV1ZkT0ZqdERCb1B6SjUyVWFsVkFmRjVmQUxpcm5BcVhkcERnYi9YcnpxSEYrTE0xS2pEMVdXUFd0ZUdXNFc1anBPSFN0T296Y0c5M0pUUHF5M2l6TVk3RmczZVFLYTZzWDhBdnFwOXArWXVBMWNwTENlQ2dsR2dnOTVzSUFmYmRMMTBmV2d2RmR6QUt4dUZLN2psRzVtbG1CRVF5R0hrYWdoZFIrVGxzeUNTNEFkbXVBOEZodVUwZnRBdXN0b1M3R2JKd1BuTFI3STFZY1Q4OW8wU2xRZEJ2Yjg2QzdKbm1OdnY0aHhiSUo5TTJvWGJPSnQ4ZnBNcjhNWFR6YWRMTWJzSndhZ3VBVHlNUWF2cExHNXRPb0U2ZE1uMVlFVDZLdWZiYy9NdThVRDVYYXlDYTdkZz09Cg==
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
  namespace: ZNfw9Wo0e
  name: k10-license
type: Opaque
data:
  license: Y3VzdG9tZXJOYW1lOiBzdGFydGVyLWxpY2Vuc2UKZGF0ZUVuZDogJzIxMDAtMDEtMDFUMDA6MDA6MDAuMDAwWicKZGF0ZVN0YXJ0OiAnMjAyMC0wMS0wMVQwMDowMDowMC4wMDBaJwpmZWF0dXJlczogbnVsbAppZDogc3RhcnRlci00ZjE4NDJjMC0wNzQ1LTQxYTUtYWFhNy1hMDFkNzQ4YjFjMzAKcHJvZHVjdDogSzEwCnJlc3RyaWN0aW9uczoKICBub2RlczogJzEwJwpzZXJ2aWNlQWNjb3VudEtleTogbnVsbAp2ZXJzaW9uOiB2MS4wLjAKc2lnbmF0dXJlOiBqT1N5NDNQZG5ZMFVCZitValhOdU1oUEFSb1J2ZkpzWElQWnhBWFNCaGpKbUwxNlNodi8vVzgyV2NMeGZJM25NZTA0TThtRU03eThPcnArQks1ekxpeFd3clpncmZSbTBEaWlELyttRjR5U3l1Rko0QW1neHV6NDhQTmdnU1VyWUM3S1FVcFYxSEJZV1ZaNm9udEJDeE1rVWtkaDVqdzZJdWMzN3lDaktIYy92bWZaenBzTVhybmxUdGhha2RjVVk0azNyVHJDa3VDcnFUMkpjM1o1amFGalZSZW1Zd1NBVXpkRldNazdQdkp3eHVFdE5rNitPV0pCVERQbnNYdldKdjdNc3NneDBJTmdtNUlJWDRVeEVhQWI4QXpTNkMyQ21XQzlhWURFTDg1aEFpeWhONXUwU0tQczA3ZXB0R1VHYmc3cWtPUVN0d0NhcDFKUURvbDVDT0E9PQo=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-grafana
  namespace: ZNfw9Wo0e
  labels:
    helm.sh/chart: grafana-6.29.2
    app: grafana
    release: release-name
    app.kubernetes.io/version: 8.5.0
    app.kubernetes.io/managed-by: Helm
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      editable: false
      isDefault: true
      name: Prometheus
      type: prometheus
      url: http://prometheus-server-exp/k10/prometheus
      jsonData:
        timeInterval: '1m'
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [auth]
    disable_login_form = true
    disable_signout_menu = true
    [auth.anonymous]
    enabled = true
    org_name = Main Org.
    org_role = Admin
    [auth.basic]
    enabled = false
    [dashboards]
    default_home_dashboard_path = /var/lib/grafana/dashboards/default/default.json
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [server]
    root_url=/release-name/grafana
    serve_from_sub_path=true
  dashboardproviders.yaml: |
    apiVersion: 1
    providers:
    - disableDeletion: true
      editable: false
      folder: ""
      name: default
      options:
        path: /var/lib/grafana/dashboards
      orgId: 1
      type: file
  download_dashboards.sh: |
    #!/usr/bin/env sh
    set -euf
    mkdir -p /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-grafana-dashboards-default
  namespace: ZNfw9Wo0e
  labels:
    helm.sh/chart: grafana-6.29.2
    app: grafana
    release: release-name
    app.kubernetes.io/version: 8.5.0
    app.kubernetes.io/managed-by: Helm
    dashboard-provider: default
data:
  default.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 1,
      "iteration": 1645712665620,
      "links": [],
      "panels": [
        {
          "collapsed": false,
          "datasource": null,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 18,
          "panels": [],
          "title": "Applications",
          "type": "row"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "yellow",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 5,
            "x": 0,
            "y": 1
          },
          "id": 24,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_backup_ended_overall{cluster=\"$cluster\", state=\"succeeded\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Backups Completed",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 3,
            "x": 5,
            "y": 1
          },
          "id": 33,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_backup_ended_overall{cluster=\"$cluster\", state=~\"failed|cancelled\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Backups Failed",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 3,
            "x": 8,
            "y": 1
          },
          "id": 34,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_backup_skipped_overall{cluster=\"$cluster\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Backups Skipped",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 5,
            "x": 13,
            "y": 1
          },
          "id": 35,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_restore_ended_overall{cluster=\"$cluster\", state=\"succeeded\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Restores Completed",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 3,
            "x": 18,
            "y": 1
          },
          "id": 36,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_restore_ended_overall{cluster=\"$cluster\", state=~\"failed|cancelled\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Restores Failed",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 3,
            "x": 21,
            "y": 1
          },
          "id": 23,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_restore_skipped_overall{cluster=\"$cluster\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Restores Skipped",
          "type": "stat"
        },
        {
          "collapsed": false,
          "datasource": null,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 8
          },
          "id": 16,
          "panels": [],
          "title": "Cluster",
          "type": "row"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "yellow",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 5,
            "x": 0,
            "y": 9
          },
          "id": 10,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_backup_cluster_ended_overall{cluster=\"$cluster\", state=\"succeeded\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Cluster Backups Completed",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 3,
            "x": 5,
            "y": 9
          },
          "id": 19,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_backup_cluster_ended_overall{cluster=\"$cluster\", state=~\"failed|cancelled\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Cluster Backups Failed",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 3,
            "x": 8,
            "y": 9
          },
          "id": 28,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_backup_cluster_skipped_overall{cluster=\"$cluster\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Cluster Backups Skipped",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 5,
            "x": 13,
            "y": 9
          },
          "id": 21,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_restore_cluster_ended_overall{cluster=\"$cluster\", state=\"succeeded\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Cluster Restores Completed",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 3,
            "x": 18,
            "y": 9
          },
          "id": 22,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_restore_cluster_ended_overall{cluster=\"$cluster\", state=~\"failed|cancelled\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Cluster Restores Failed",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 3,
            "x": 21,
            "y": 9
          },
          "id": 25,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_restore_cluster_skipped_overall{cluster=\"$cluster\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Cluster Restores Skipped",
          "type": "stat"
        },
        {
          "collapsed": false,
          "datasource": null,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 16
          },
          "id": 31,
          "panels": [],
          "title": "Backup Exports",
          "type": "row"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 5,
            "x": 0,
            "y": 17
          },
          "id": 38,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_export_ended_overall{cluster=\"$cluster\", state=\"succeeded\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Exports Completed",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 5,
            "y": 17
          },
          "id": 29,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_export_ended_overall{cluster=\"$cluster\", state=~\"failed|cancelled\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Exports Failed",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 8,
            "y": 17
          },
          "id": 20,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_export_skipped_overall{cluster=\"$cluster\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Exports Skipped",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 5,
            "x": 13,
            "y": 17
          },
          "id": 27,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_import_ended_overall{cluster=\"$cluster\", state=\"succeeded\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Imports Completed",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 18,
            "y": 17
          },
          "id": 39,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_import_ended_overall{cluster=\"$cluster\", state=~\"failed|cancelled\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Imports Failed",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "#EAB839",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 21,
            "y": 17
          },
          "id": 37,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_import_skipped_overall{cluster=\"$cluster\"}[$__range])))",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Imports Skipped",
          "type": "stat"
        },
        {
          "collapsed": false,
          "datasource": null,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 23
          },
          "id": 14,
          "panels": [],
          "title": "System",
          "type": "row"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 1
                  }
                ]
              },
              "unit": "runs"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 0,
            "y": 24
          },
          "id": 12,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_run_ended_overall{cluster=\"$cluster\", state=\"succeeded\"}[$__range])))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "",
              "queryType": "randomWalk",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "title": "Policy Runs",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "0": {
                      "index": 0,
                      "text": "-"
                    }
                  },
                  "type": "value"
                }
              ],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "yellow",
                    "value": 1
                  }
                ]
              },
              "unit": "runs"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 3,
            "y": 24
          },
          "id": 40,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "sum(round(increase(action_run_skipped_overall{cluster=\"$cluster\"}[$__range])))",
              "format": "time_series",
              "interval": "",
              "legendFormat": "",
              "queryType": "randomWalk",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "title": "Policy Runs Skipped",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#ccccdc",
                    "value": null
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 6,
            "y": 24
          },
          "id": 6,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": true,
              "expr": "catalog_persistent_volume_disk_space_used_bytes{cluster=\"$cluster\"}",
              "interval": "",
              "legendFormat": "",
              "queryType": "randomWalk",
              "refId": "A"
            }
          ],
          "title": "Catalog Volume Used",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 100,
              "min": 0,
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "yellow",
                    "value": 70
                  },
                  {
                    "color": "orange",
                    "value": 80
                  },
                  {
                    "color": "red",
                    "value": 90
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 9,
            "y": 24
          },
          "id": 2,
          "options": {
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "text": {}
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": true,
              "expr": "100-catalog_persistent_volume_free_space_percent{cluster=\"$cluster\"}",
              "interval": "",
              "legendFormat": "",
              "queryType": "randomWalk",
              "refId": "A"
            }
          ],
          "title": "Catalog Volume Used Space",
          "type": "gauge"
        },
        {
          "datasource": "Prometheus",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#ccccdc",
                    "value": null
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 12,
            "y": 24
          },
          "id": 8,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": true,
              "expr": "jobs_persistent_volume_disk_space_used_bytes{cluster=\"$cluster\"}",
              "interval": "",
              "legendFormat": "",
              "queryType": "randomWalk",
              "refId": "A"
            }
          ],
          "title": "Jobs Volume Used",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 100,
              "min": 0,
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "yellow",
                    "value": 70
                  },
                  {
                    "color": "orange",
                    "value": 80
                  },
                  {
                    "color": "red",
                    "value": 90
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 15,
            "y": 24
          },
          "id": 4,
          "options": {
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "text": {}
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": true,
              "expr": "100-jobs_persistent_volume_free_space_percent{cluster=\"$cluster\"}",
              "interval": "",
              "legendFormat": "",
              "queryType": "randomWalk",
              "refId": "A"
            }
          ],
          "title": "Jobs Volume Used Space",
          "type": "gauge"
        },
        {
          "datasource": "Prometheus",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#ccccdc",
                    "value": null
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 18,
            "y": 24
          },
          "id": 7,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": true,
              "expr": "logging_persistent_volume_disk_space_used_bytes{cluster=\"$cluster\"}",
              "interval": "",
              "legendFormat": "",
              "queryType": "randomWalk",
              "refId": "A"
            }
          ],
          "title": "Logging Volume Used",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 100,
              "min": 0,
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "yellow",
                    "value": 70
                  },
                  {
                    "color": "orange",
                    "value": 80
                  },
                  {
                    "color": "red",
                    "value": 90
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 21,
            "y": 24
          },
          "id": 3,
          "options": {
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "text": {}
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": true,
              "expr": "100-logging_persistent_volume_free_space_percent{cluster=\"$cluster\"}",
              "interval": "",
              "legendFormat": "",
              "queryType": "randomWalk",
              "refId": "A"
            }
          ],
          "title": "Logging Volume Used Space",
          "type": "gauge"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "text",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 0,
            "y": 30
          },
          "id": 41,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "compliance_count{state=\"Compliant\"}",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Compliant Applications",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 3,
            "y": 30
          },
          "id": 42,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "compliance_count{state=\"NotCompliant\"}",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Non-Compliant Applications",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 6,
            "y": 30
          },
          "id": 43,
          "interval": "1m",
          "options": {
            "colorMode": "value",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": false,
              "expr": "compliance_count{state=\"Unmanaged\"}",
              "hide": false,
              "interval": "",
              "legendFormat": "",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "title": "Unmanaged Applications",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#ccccdc",
                    "value": null
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 12,
            "y": 30
          },
          "id": 44,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": true,
              "expr": "snapshot_storage_size_bytes{cluster=\"$cluster\", type=\"physical\"}",
              "interval": "",
              "legendFormat": "",
              "queryType": "randomWalk",
              "refId": "A"
            }
          ],
          "title": "Snapshot Size (Physical)",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#ccccdc",
                    "value": null
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 15,
            "y": 30
          },
          "id": 45,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": true,
              "expr": "snapshot_storage_size_bytes{cluster=\"$cluster\", type=\"logical\"}",
              "interval": "",
              "legendFormat": "",
              "queryType": "randomWalk",
              "refId": "A"
            }
          ],
          "title": "Snapshot Size (Logical)",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#ccccdc",
                    "value": null
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 18,
            "y": 30
          },
          "id": 46,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": true,
              "expr": "export_storage_size_bytes{cluster=\"$cluster\", type=\"physical\"}",
              "interval": "",
              "legendFormat": "",
              "queryType": "randomWalk",
              "refId": "A"
            }
          ],
          "title": "Export Size (Physical)",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "noValue": "-",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "#ccccdc",
                    "value": null
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 21,
            "y": 30
          },
          "id": 47,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.8",
          "targets": [
            {
              "exemplar": true,
              "expr": "export_storage_size_bytes{cluster=\"$cluster\", type=\"logical\"}",
              "interval": "",
              "legendFormat": "",
              "queryType": "randomWalk",
              "refId": "A"
            }
          ],
          "title": "Export Size (Logical)",
          "type": "stat"
        }
      ],
      "schemaVersion": 30,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "description": null,
            "error": null,
            "hide": 2,
            "label": "Cluster",
            "name": "cluster",
            "query": "",
            "skipUrlSync": false,
            "type": "constant"
          }
        ]
      },
      "time": {
        "from": "now-24h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "K10 Dashboard",
      "uid": "8Ebb3xS7k",
      "version": 1
    }
---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
  namespace: ZNfw9Wo0e
  name: release-name-k10-metering-config
data:
  config: |
    metrics:
    - name: node_time
      type: int
      passthrough: {}
      endpoints:
      - name: on_disk
    endpoints:
    - name: on_disk
      disk:
        reportDir: /var/reports/ubbagent/reports
        expireSeconds: 3600
  prometheusTargets: |
    - service: admin
      metricsPath: /metrics
      scheme: http
      fqdn: state-svc.default.svc.cluster.local
      port: 8001
      application: release-name
    - service: auth
      metricsPath: /metrics
      scheme: http
      fqdn: auth-svc.default.svc.cluster.local
      port: 8000
      application: release-name
    - service: bloblifecyclemanager
      metricsPath: /metrics
      scheme: http
      fqdn: crypto-svc.default.svc.cluster.local
      port: 8001
      application: release-name
    - service: catalog
      metricsPath: /metrics
      scheme: http
      fqdn: catalog-svc.default.svc.cluster.local
      port: 8000
      application: release-name
    - service: controllermanager
      metricsPath: /metrics
      scheme: http
      fqdn: controllermanager-svc.default.svc.cluster.local
      port: 8000
      application: release-name
    - service: crypto
      metricsPath: /metrics
      scheme: http
      fqdn: crypto-svc.default.svc.cluster.local
      port: 8000
      application: release-name
    - service: dashboardbff
      metricsPath: /metrics
      scheme: http
      fqdn: dashboardbff-svc.default.svc.cluster.local
      port: 8000
      application: release-name
    - service: events
      metricsPath: /metrics
      scheme: http
      fqdn: crypto-svc.default.svc.cluster.local
      port: 8002
      application: release-name
    - service: executor
      metricsPath: /metrics
      scheme: http
      fqdn: executor-svc.default.svc.cluster.local
      port: 8000
      application: release-name
    - service: jobs
      metricsPath: /metrics
      scheme: http
      fqdn: jobs-svc.default.svc.cluster.local
      port: 8000
      application: release-name
    - service: logging
      metricsPath: /metrics
      scheme: http
      fqdn: logging-svc.default.svc.cluster.local
      port: 8000
      application: release-name
    - service: metering
      metricsPath: /metrics
      scheme: http
      fqdn: metering-svc.default.svc.cluster.local
      port: 8000
      application: release-name
    - service: mccontrollermanager
      metricsPath: /metrics
      scheme: http
      fqdn: mccontrollermanager-svc.default.svc.cluster.local
      port: 8000
      application: release-name
    - service: state
      metricsPath: /metrics
      scheme: http
      fqdn: state-svc.default.svc.cluster.local
      port: 8000
      application: release-name
    - service: kanister
      metricsPath: /metrics
      scheme: http
      fqdn: kanister-svc.default.svc.cluster.local
      port: 8000
      application: release-name
    - service: kanister
      metricsPath: /metrics
      scheme: http
      fqdn: kanister-svc.default.svc.cluster.local
      port: 8000
      application: release-name
---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
  namespace: ZNfw9Wo0e
  name: fluentbit-configmap
data:
  fluentbit.conf: |
    [SERVICE]
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_PORT 24225

    [INPUT]
        Name tcp
        Listen 0.0.0.0
        Port 24224

    [OUTPUT]
        Name stdout
        Match *

    [OUTPUT]
        Name file
        Match *
        File /mnt/k10state/k10.log
  logrotate.conf: |
    /mnt/k10state/k10.log {
      create
      missingok
      rotate 6
      size 1G
    }
---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
  namespace: ZNfw9Wo0e
  name: k10-config
data:
  loglevel: info
  version: 5.0.0
  multiClusterVersion: "2"
  modelstoredirname: //mnt/k10state/kasten-io/
  apiDomain: kio.kasten.io
  concurrentSnapConversions: "3"
  concurrentWorkloadSnapshots: "5"
  k10DataStoreParallelUpload: "8"
  k10DataStoreGeneralContentCacheSizeMB: "0"
  k10DataStoreGeneralMetadataCacheSizeMB: "500"
  k10DataStoreRestoreContentCacheSizeMB: "500"
  k10DataStoreRestoreMetadataCacheSizeMB: "500"
  K10BackupBufferFileHeadroomFactor: "1.1"
  AWSAssumeRoleDuration: 60m
  KanisterBackupTimeout: "45"
  KanisterRestoreTimeout: "600"
  KanisterDeleteTimeout: "45"
  KanisterHookTimeout: "20"
  KanisterCheckRepoTimeout: "20"
  KanisterStatsTimeout: "20"
  KanisterEFSPostRestoreTimeout: "45"
  KanisterPodReadyWaitTimeout: "15"
  K10MutatingWebhookTLSCertDir: /etc/ssl/certs/webhook
  K10LimiterGenericVolumeSnapshots: "10"
  K10LimiterGenericVolumeCopies: "10"
  K10LimiterGenericVolumeRestores: "10"
  K10LimiterCsiSnapshots: "10"
  K10LimiterProviderSnapshots: "10"
  efsBackupVaultName: k10vault
  kanisterFunctionVersion: v1.0.0-alpha
---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
  namespace: ZNfw9Wo0e
  name: k10-eula
data:
  text: "KASTEN END USER LICENSE AGREEMENT\r\n\r\nThis End User License Agreement is a binding agreement between Kasten, Inc., a\r\nDelaware Corporation (\"Kasten\"), and you (\"Licensee\"), and establishes the terms\r\nunder which Licensee may use the Software and Documentation (as defined below),\r\nincluding without limitation terms and conditions relating to license grant,\r\nintellectual property rights, disclaimers /exclusions / limitations of warranty,\r\nindemnity and liability, governing law and limitation periods. All components\r\ncollectively are referred to herein as the \"Agreement.\"\r\n\r\nLICENSEE ACKNOWLEDGES IT HAS HAD THE OPPORTUNITY TO REVIEW THE AGREEMENT, PRIOR\r\nTO ACCEPTANCE OF THIS AGREEMENT. LICENSEE'S ACCEPTANCE OF THIS AGREEMENT IS\r\nEVIDENCED BY LICENSEE'S DOWNLOADING, COPYING, INSTALLING  OR USING THE KASTEN\r\nSOFTWARE. IF YOU ARE ACTING ON BEHALF OF A COMPANY, YOU REPRESENT THAT YOU ARE\r\nAUTHORIZED TO BIND THE COMPANY. IF YOU DO NOT AGREE TO ALL TERMS OF THIS\r\nAGREEMENT, DO NOT DOWNLOAD, COPY, INSTALL, OR USE THE SOFTWARE, AND PERMANENTLY\r\nDELETE THE SOFTWARE.\r\n\r\n1. DEFINITIONS\r\n\r\n1.1 \"Authorized Persons\" means trained technical employees and contractors of\r\nLicensee who are subject to a written agreement with Licensee that includes use\r\nand confidentiality restrictions that are at least as protective as those set\r\nforth in this Agreement.\r\n\r\n1.2 \"Authorized Reseller\" means a distributor or reseller, including cloud\r\ncomputing platform providers, authorized by Kasten to resell licenses to the\r\nSoftware through the channel through or in the territory in which Licensee is\r\npurchasing.\r\n\r\n1.3 \"Confidential Information\" means all non-public information disclosed in\r\nwritten, oral or visual form by either party to the other.  Confidential\r\nInformation may include, but is not limited to, services, pricing information,\r\ncomputer programs, source code, names and expertise of employees and\r\nconsultants, know-how, and other technical, business, financial and product\r\ndevelopment information.  \"Confidential Information\" does not include any\r\ninformation that the receiving party can demonstrate by its written records (1)\r\nwas rightfully known to it without obligation of confidentiality prior to its\r\ndisclosure hereunder by the disclosing party; (2) is or becomes publicly known\r\nthrough no wrongful act of the receiving party; (3) has been rightfully received\r\nwithout obligation of confidentiality from a third party authorized to make such\r\na disclosure; or (4) is independently developed by the receiving party without\r\nreference to confidential information disclosed hereunder.\r\n\r\n1.4 \"Documentation\" means any administration guides, installation and user\r\nguides, and release notes that are provided by Kasten to Licensee with the\r\nSoftware.\r\n\r\n1.5  \"Intellectual Property Rights\" means patents, design patents, copyrights,\r\ntrademarks, Confidential Information, know-how, trade secrets, moral rights, and\r\nany other intellectual property rights recognized in any country or jurisdiction\r\nin the world.\r\n\r\n1.6 \"Node\" means a single physical or virtual computing machine recognizable by\r\nthe Software as a unique device. Nodes must be owned or leased by Licensee or an\r\nentity controlled by, controlling or under common control with Licensee.\r\n\r\n1.7 \"Edition\" means a unique identifier for each distinct product that is made\r\navailable by Kasten and that can be licensed, including summary information\r\nregarding any associated functionality, features, or restrictions specific to\r\nthe Edition.\r\n\r\n1.8 \"Open Source Software\" means software delivered to Licensee hereunder that\r\nis subject to the provisions of any open source license agreement.\r\n\r\n1.9 \"Purchase Agreement\" means a separate commercial agreement, if applicable,\r\nbetween Kasten and the Licensee that contains the terms for the licensing of a\r\nspecific Edition of the Software.\r\n\r\n1.10 \"Software\" means any and all software product Editions licensed to Licensee\r\nunder this Agreement, all as developed by Kasten and delivered to Licensee\r\nhereunder. Software also includes any Updates provided by Kasten to Licensee.\r\nFor the avoidance of doubt, the definition of Software shall exclude any\r\nThird-Party Software and Open Source Software.\r\n\r\n1.11 \"Third-Party Software\" means certain software Kasten licenses from third\r\nparties and provides to Licensee with the Software, which may include Open\r\nSource Software.\r\n\r\n1.12 \"Update\" means a revision of the Software that Kasten makes available to\r\ncustomers at no additional cost. The Update includes, if and when applicable and\r\navailable, bug fix patches, maintenance release, minor release, or new major\r\nreleases. Updates are limited only to the Software licensed by Licensee, and\r\nspecifically exclude new product offerings, features, options or functionality\r\nof the Software that Kasten may choose to license separately, or for an\r\nadditional fee.\r\n\r\n1.13 \"Use\" means to install activate the processing capabilities of the\r\nSoftware, load, execute, access, employ the Software, or display information\r\nresulting from such capabilities.\r\n\r\n\r\n2. LICENSE GRANT AND RESTRICTIONS\r\n\r\n2.1 Enterprise License.  Subject to Licensee\"s compliance with the terms and\r\nconditions of this Agreement (including any additional restrictions on\r\nLicensee\"s use of the Software set forth in the Purchase Agreement, if one\r\nexists, between Licensee and Kasten), Kasten grants to Licensee a non-exclusive,\r\nnon-transferable (except in connection with a permitted assignment of this\r\nAgreement under Section 14.10 (Assignment), non-sublicensable, limited term\r\nlicense to install and use the Software, in object code form only, solely for\r\nLicensee\"s use, unless terminated in accordance with Section 4 (Term and\r\nTermination).\r\n\r\n2.2 Starter License.  This section shall only apply when the Licensee licenses\r\nStarter Edition of the Software. The license granted herein is for a maximum of\r\n5 Nodes and for a period of 12 months from the date of the Software release that\r\nembeds the specific license instance. Updating to a newer Software (minor or\r\nmajor) release will always extend the validity of the license by 12 months. If\r\nthe Licensee wishes to upgrade to an Enterprise License instead, the Licensee\r\nwill have to enter into a Purchase Agreement with Kasten which will supersede\r\nthis Agreement. The Licensee is required to provide accurate email and company\r\ninformation, if representing a company, when accepting this Agreement. Under no\r\ncircumstances will a Starter License be construed to mean that the Licensee is\r\nauthorized to distribute the Software to any third party for any reason\r\nwhatsoever.\r\n\r\n2.3 Evaluation License.  This section shall only apply when the Licensee has\r\nlicensed the Software for an initial evaluation period. The license granted\r\nherein is valid only one time 30 days, starting from date of installation,\r\nunless otherwise explicitly designated by Kasten (\"Evaluation Period\"). Under\r\nthis license the Software can only be used for evaluation purposes. Under no\r\ncircumstances will an Evaluation License be construed to mean that the Licensee\r\nis authorized to distribute the Software to any third party for any reason\r\nwhatsoever. If the Licensee wishes to upgrade to an Enterprise License instead,\r\nthe Licensee will have to enter into a Purchase Agreement with Kasten which will\r\nsupersede this Agreement.. If the Licensee does not wish to upgrade to an\r\nEnterprise License   at the end of the Evaluation Period the Licensee\"s rights\r\nunder the Agreement shall terminate, and the Licensee shall delete all Kasten\r\nSoftware.\r\n\r\n2.4 License Restrictions.  Except to the extent permitted under this Agreement,\r\nLicensee will not nor will Licensee allow any third party to:  (i) copy, modify,\r\nadapt, translate or otherwise create derivative works of the Software or the\r\nDocumentation; (ii) reverse engineer, decompile, disassemble or otherwise\r\nattempt to discover the source code of the Software; (iii) rent, lease, sell,\r\nassign or otherwise transfer rights in or to the Software or Documentation; (iv)\r\nremove any proprietary notices or labels from the Software or Documentation; (v)\r\npublicly disseminate performance information or analysis (including, without\r\nlimitation, benchmarks) relating to the Software. Licensee will comply with all\r\napplicable laws and regulations in Licensee\"s use of and access to the Software\r\nand Documentation.\r\n\r\n2.5 Responsibility for Use.  The Software and Documentation may be used only by\r\nAuthorized Persons and in conformance with this Agreement.  Licensee shall be\r\nresponsible for the proper use and protection of the Software and Documentation\r\nand is responsible for: (i) installing, managing, operating, and physically\r\ncontrolling the Software and the results obtained from using the Software; (ii)\r\nusing the Software within the operating environment specified in the\r\nDocumentation; and; (iii) establishing and maintaining such recovery and data\r\nprotection and security procedures as necessary for Licensee's service and\r\noperation and/or as may be specified by Kasten from time to time.\r\n\r\n2.6 United States Government Users.  The Software licensed under this Agreement\r\nis \"commercial computer software\" as that term is described in DFAR\r\n252.227-7014(a)(1). If acquired by or on behalf of a civilian agency, the U.S.\r\nGovernment acquires this commercial computer software and/or commercial computer\r\nsoftware documentation subject to the terms and this Agreement as specified in\r\n48 C.F.R. 12.212 (Computer Software) and 12.211 (Technical Data) of the Federal\r\nAcquisition Regulations (\"FAR\") and its successors. If acquired by or on behalf\r\nof any agency within the Department of Defense (\"DOD\"), the U.S. Government\r\nacquires this commercial computer software and/or commercial computer software\r\ndocumentation subject to the terms of this Agreement as specified in 48 C.F.R.\r\n227.7202 of the DOD FAR Supplement and its successors.\r\n\r\n\r\n3. SUPPORT\r\n\r\n3.1          During the Term (as defined below) and subject to Licensee’s compliance \r\nwith the terms and conditions of this Agreement, Licensee may submit queries and \r\nrequests for support for Enterprise Licenses by submitting Service Requests via Veeam \r\nSupport Portal (https://my.veeam.com). Support is not provided for Starter and Evaluation \r\nLicenses.  Licensee shall be entitled to the support service-level agreement specified \r\nin the relevant order form or purchase order (“Order Form”) between Licensee and the \r\nReseller and as set forth in Kasten’s Support Policy, a copy of which can be found \r\nat https://www.kasten.io/support-services-policy. Licensee shall also be permitted to \r\ndownload and install all Updates released by Kasten during the Term and made generally \r\navailable to users of the Software. Software versions with all updates and upgrades \r\ninstalled is supported for six months from the date of release of that version. \r\n\r\n3.2          Starter Edition Support.  If the Licensee has licensed Starter Edition of \r\nthe Software, you will have access to the Kasten K10 Support Community \r\n(https://community.veeam.com/groups/kasten-k10-support-92), but Kasten cannot guarantee \r\na service level of any sort. Should a higher level of support be needed, Licensee has \r\nthe option to consider entering into a Purchase Agreement with Kasten for licensing a \r\ndifferent Edition of the Software.\r\n\r\n\r\n\r\n4. TERM AND TERMINATION\r\n\r\n4.1 Term. The term of this Agreement, except for Starter and Evaluation\r\nLicenses, shall commence on the Effective Date and shall, unless terminated\r\nearlier in accordance with the provisions of Section 4.2 below, remain in force\r\nfor the Subscription Period as set forth in the applicable Order Form(s) (the\r\n\"Term\"). The parties may extend the Term of this Agreement beyond the\r\nSubscription Period by executing additional Order Form(s) and Licensee\"s payment\r\nof additional licensing fees. The term of this Agreement for the Starter and\r\nEvaluation Licenses will coincide with the term for Starter Edition (as stated\r\nin section 2.2) and the term for Evaluation Period (as stated in section 2.3),\r\nrespectively\r\n\r\n4.2 Termination.  Either party may immediately terminate this\r\nAgreement and the licenses granted hereunder if the other party (1) becomes\r\ninsolvent and\"becomes unwilling or unable to meet its obligations under this\r\nAgreement, (2) files a petition in bankruptcy, (3) is subject to the filing of\r\nan involuntary petition for bankruptcy which is not rescinded within a period of\r\nforty-five (45) days, (4) fails to cure a material breach of any material term\r\nor condition of this Agreement within thirty (30) days of receipt of written\r\nnotice specifying such breach, or (5) materially breaches its obligations of\r\nconfidentiality hereunder.\r\n\r\n4.3 Effects of Termination. Upon expiration or\r\ntermination of this Agreement for any reason, (i) any amounts owed to Kasten\r\nunder this Agreement will be immediately due and payable; (ii) all licensed\r\nrights granted in this Agreement will immediately cease; and (iii) Licensee will\r\npromptly discontinue all use of the Software and Documentation and return to\r\nKasten any Kasten Confidential Information in Licensee\"s possession or control.\r\n\r\n4.4 Survival.  The following Sections of this Agreement will remain in effect\r\nfollowing the expiration or termination of these General Terms for any reason:\r\n4.3 (Effects of Termination), 4.4 (Survival), 5 (Third Party Software) 5\r\n(Confidentiality), 9 (Ownership), 10.2 (Third-Party Software), 10.3 (Warranty\r\nDisclaimer), 11 (Limitations of Liability), 12.2 (Exceptions to Kasten\r\nObligation), 13 (Export) and 14 (General).\r\n\r\n\r\n5. THIRD PARTY AND OPEN SOURCE SOFTWARE Certain Third-Party Software or Open\r\nSource Software (Kasten can provide a list upon request) that may be provided\r\nwith the Software may be subject to various other terms and conditions imposed\r\nby the licensors of such Third-Party Software or Open Source Software.  The\r\nterms of Licensee\"s use of the Third-Party Software or Open Source Software is\r\nsubject to and governed by the respective Third-Party Software and Open Source\r\nlicenses, except that this Section 5 (Third-Party Software), Section 10.2 (Third\r\nParty Software), 10.3 (Warranty Disclaimer), Section 11 (Limitations of\r\nLiability), and Section 14 (General) of this Agreement also govern Licensee\"s\r\nuse of the Third-Party Software.  To the extent applicable to Licensee\"s use of\r\nsuch Third-Party Software and Open Source, Licensee agrees to comply with the\r\nterms and conditions contained in all such Third-Party Software and Open Source\r\nlicenses.\r\n\r\n\r\n6. CONFIDENTIALITY Neither party will use any Confidential Information of the\r\nother party except as expressly permitted by this Agreement or as expressly\r\nauthorized in writing by the disclosing party.  The receiving party shall use\r\nthe same degree of care to protect the disclosing party\"s Confidential\r\nInformation as it uses to protect its own Confidential Information of like\r\nnature, but in no circumstances less than a commercially reasonable standard of\r\ncare.  The receiving party may not disclose the disclosing party\"s Confidential\r\nInformation to any person or entity other than to (i) (a) Authorized Persons in\r\nthe case the receiving party is Licensee, and (b) Kasten\"s employees and\r\ncontractors in the case the receiving party is Kasten, and (ii) who need access\r\nto such Confidential Information solely for the purpose of fulfilling that\r\nparty\"s obligations or exercising that party\"s rights hereunder.  The foregoing\r\nobligations will not restrict the receiving party from disclosing Confidential\r\nInformation of the disclosing party: (1) pursuant to the order or requirement of\r\na court, administrative agency, or other governmental body, provided that the\r\nreceiving party required to make such a disclosure gives reasonable notice to\r\nthe disclosing party prior to such disclosure; and (2) on a confidential basis\r\nto its legal and financial advisors.  Kasten may identify Licensee in its\r\ncustomer lists in online and print marketing materials.\r\n\r\n\r\n7. FEES Fees for Enterprise License shall be set forth in separate Order Form(s)\r\nattached to a Purchase Agreement, between the Licensee and Kasten.\r\n\r\nIf Licensee has obtained the Software through an Authorized Reseller, fees for\r\nlicensing shall be invoiced directly by the Authorized Reseller.\r\n\r\nIf no Purchase Agreement exists, during the term of this Agreement,  Kasten\r\nshall license the Starter Edition only and no other Edition of the Software\r\n\"at no charge\" to Licensee.\r\n\r\n\r\n8. USAGE DATA Kasten may collect, accumulate, and aggregate certain usage\r\nstatistics in order to analyze usage of the Software, make improvements, and\r\npotentially develop new products. Kasten may use aggregated anonymized data for\r\nany purpose that Kasten, at its own discretion, may consider appropriate.\r\n\r\n\r\n9. OWNERSHIP As between Kasten and Licensee, all right, title and interest in\r\nthe Software, Documentation and any other Kasten materials furnished or made\r\navailable hereunder, all modifications and enhancements thereof, and all\r\nsuggestions, ideas and feedback proposed by Licensee regarding the Software and\r\nDocumentation, including all copyright rights, patent rights and other\r\nIntellectual Property Rights in each of the foregoing, belong to and are\r\nretained solely by Kasten or Kasten\"s licensors and providers, as applicable.\r\nLicensee hereby does and will irrevocably assign to Kasten all evaluations,\r\nideas, feedback and suggestions made by Licensee to Kasten regarding the\r\nSoftware and Documentation (collectively, \"Feedback\") and all Intellectual\r\nProperty Rights in and to the Feedback.  Except as expressly provided herein, no\r\nlicenses of any kind are granted hereunder, whether by implication, estoppel, or\r\notherwise.\r\n\r\n\r\n10. LIMITED WARRANTY AND DISCLAIMERS\r\n\r\n10.1 Limited Warranty.  Kasten warrants for a period of thirty (30) days from\r\nthe Effective Date that the Software will materially conform to Kasten\"s\r\nthen-current Documentation (the \"Warranty Period\") when properly installed on a\r\ncomputer for which a license is granted hereunder. Licensee\"s exclusive remedy\r\nfor a breach of this Section 10.1 is that Kasten shall, at its option, use\r\ncommercially reasonable efforts to correct  or replace the Software, or refund\r\nall or a portion of the fees paid by Licensee pursuant to the Purchase\r\nAgreement. Kasten, in its sole discretion, may revise this limited warranty from\r\ntime to time.\r\n\r\n10.2 Third-Party Software.  Except as expressly set forth in this Agreement,\r\nThird-Party Software (including any Open Source Software) are provided on an\r\n\"as-is\" basis at the sole risk of Licensee. Notwithstanding any language to the\r\ncontrary in this Agreement, Kasten makes no express or implied warranties of any\r\nkind with respect to Third-Party Software provided to Licensee and shall not be\r\nliable for any damages regarding the use or operation of the Third-Party\r\nSoftware furnished under this Agreement.  Any and all express or implied\r\nwarranties, if any, arising from the license of Third-Party Software shall be\r\nthose warranties running from the third party manufacturer or licensor to\r\nLicensee.\r\n\r\n10.3 Warranty Disclaimer.  EXCEPT FOR THE LIMITED WARRANTY PROVIDED ABOVE,\r\nKASTEN AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, WHETHER EXPRESS, IMPLIED,\r\nSTATUTORY OR OTHERWISE, RELATING TO THE SOFTWARE OR TO KASTEN\"S MAINTENANCE,\r\nPROFESSIONAL OR OTHER SERVICES.  KASTEN SPECIFICALLY DISCLAIMS ALL IMPLIED\r\nWARRANTIES OF DESIGN, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE\r\nAND NON-INFRINGEMENT. KASTEN AND ITS SUPPLIERS AND LICENSORS DO NOT WARRANT OR\r\nREPRESENT THAT THE SOFTWARE WILL BE FREE FROM BUGS OR THAT ITS USE WILL BE\r\nUNINTERRUPTED OR ERROR-FREE. THIS DISCLAIMER SHALL APPLY NOTWITHSTANDING THE\r\nFAILURE OF THE ESSENTIAL PURPOSE OF ANY LIMITED REMEDY PROVIDED HEREIN. EXCEPT\r\nAS STATED ABOVE, KASTEN AND ITS SUPPLIERS PROVIDE THE SOFTWARE ON AN \"AS IS\"\r\nBASIS.  KASTEN  PROVIDES NO WARRANTIES WITH RESPECT TO THIRD PARTY SOFTWARE AND\r\nOPEN SOURCE SOFTWARE.\r\n\r\n\r\n11. LIMITATIONS OF LIABILITY\r\n\r\n11.1 EXCLUSION OF CERTAIN DAMAGES.  EXCEPT FOR BREACHES OF SECTION 6\r\n(CONFIDENTIALITY) OR SECTION 9 (OWNERSHIP),  IN NO EVENT WILL EITHER PARTY BE\r\nLIABLE FOR ANY INDIRECT, CONSEQUENTIAL, EXEMPLARY, SPECIAL, INCIDENTAL OR\r\nRELIANCE DAMAGES, INCLUDING ANY LOST DATA, LOSS OF USE AND LOST PROFITS, ARISING\r\nFROM OR RELATING TO THIS AGREEMENT, THE SOFTWARE OR DOCUMENTATION, EVEN IF SUCH\r\nPARTY KNEW OR SHOULD HAVE KNOWN OF THE POSSIBILITY OF, OR COULD REASONABLY HAVE\r\nPREVENTED, SUCH DAMAGES.\r\n\r\n11.2 LIMITATION OF DAMAGES.  EXCEPT FOR THE BREACHES OF SECTION 6\r\n(CONFIDENTIALITY) OR SECTION 9 (OWNERSHIP), EACH PARTY\"S TOTAL CUMULATIVE\r\nLIABILITY ARISING FROM OR RELATED TO THIS AGREEMENT OR THE SOFTWARE,\r\nDOCUMENTATION, OR SERVICES PROVIDED BY KASTEN, WILL NOT EXCEED THE AMOUNT OF\r\nFEES PAID OR PAYABLE BY LICENSEE FOR THE SOFTWARE, DOCUMENTATION OR SERVICES\r\nGIVING RISE TO THE CLAIM IN THE TWELVE (12) MONTHS FOLLOWING THE EFFECTIVE DATE.\r\nLICENSEE AGREES THAT KASTEN\"S SUPPLIERS AND LICENSORS WILL HAVE NO LIABILITY OF\r\nANY KIND UNDER OR AS A RESULT OF THIS AGREEMENT. IN THE CASE OF KASTEN\"S\r\nINDEMNIFICATION OBLIGATIONS, KASTEN\"S CUMULATIVE LIABILITY UNDER THIS AGREEMENT\r\nSHALL BE LIMITED TO THE SUM OF THE LICENSE FEES PAID OR PAYABLE BY LICENSEE FOR\r\nTHE SOFTWARE, DOCUMENTATION OR SERVICES GIVING RISE TO THE CLAIM IN THE TWELVE\r\n(12) MONTHS FOLLOWING THE EFFECTIVE DATE.\r\n\r\n11.3 THIRD PARTY SOFTWARE.  NOTWITHSTANDING ANY LANGUAGE TO THE CONTRARY IN THIS\r\nAGREEMENT, KASTEN SHALL NOT BE LIABLE FOR ANY DAMAGES REGARDING THE USE OR\r\nOPERATION OF ANY THIRD-PARTY SOFTWARE FURNISHED UNDER THIS AGREEMENT.\r\n\r\n11.4 LIMITATION OF ACTIONS.  IN NO EVENT MAY LICENSEE BRING ANY CAUSE OF ACTION\r\nRELATED TO THIS AGREEMENT MORE THAN ONE (1) YEAR AFTER THE OCCURRENCE OF THE\r\nEVENT GIVING RISE TO THE LIABILITY.\r\n\r\n\r\n12. EXPORT\r\nThe Software, Documentation and related technical data may be subject\r\nto U.S. export control laws, including without limitation the U.S. Export\r\nAdministration Act and its associated regulations, and may be subject to export\r\nor import regulations in other countries. Licensee shall comply with all such\r\nregulations and agrees to obtain all necessary licenses to export, re-export, or\r\nimport the Software, Documentation and related technical data.\r\n\r\n\r\n13. GENERAL\r\n\r\n13.1 No Agency. Kasten and Licensee each acknowledge and agree that the\r\nrelationship established by this Agreement is that of independent contractors,\r\nand nothing contained in this Agreement shall be construed to: (1) give either\r\nparty the power to direct or control the day\x1Eto\x1Eday activities of the other; (2)\r\ndeem the parties to be acting as partners, joint venturers, co\x1Eowners or\r\notherwise as participants in a joint undertaking; or (3) permit either party or\r\nany of either party\"s officers, directors, employees, agents or representatives\r\nto create or assume any obligation on behalf of or for the account of the other\r\nparty for any purpose whatsoever.\r\n\r\n13.2 Compliance with Laws.  Each party agrees to comply with all applicable\r\nlaws, regulations, and ordinances relating to their performance hereunder.\r\nWithout limiting the foregoing, Licensee warrants and covenants that it will\r\ncomply with all then current laws and regulations of the United States and other\r\njurisdictions relating or applicable to Licensee\"s use of the Software and\r\nDocumentation including, without limitation, those concerning Intellectual\r\nProperty Rights, invasion of privacy, defamation, and the import and export of\r\nSoftware and Documentation.\r\n\r\n13.3 Force Majeure.  Except for the duty to pay money, neither party shall be\r\nliable hereunder by reason of any failure or delay in the performance of its\r\nobligations hereunder on account of strikes, riots, fires, flood, storm,\r\nexplosions, acts of God, war, governmental action, earthquakes, or any other\r\ncause which is beyond the reasonable control of such party.\r\n\r\n13.4 Governing Law; Venue and Jurisdiction.  This Agreement shall be interpreted\r\naccording to the laws of the State of California without regard to or\r\napplication of choice\x1Eof\x1Elaw rules or principles.  The parties expressly agree\r\nthat the United Nations Convention on Contracts for the International Sale of\r\nGoods and the Uniform Computer Information Transactions Act will not apply.  Any\r\nlegal action or proceeding arising under this Agreement will be brought\r\nexclusively in the federal or state courts located in Santa Clara County,\r\nCalifornia and the parties hereby consent to the personal jurisdiction and venue\r\ntherein.\r\n\r\n13.5 Injunctive Relief.  The parties agree that monetary damages would not be an\r\nadequate remedy for the breach of certain provisions of this Agreement,\r\nincluding, without limitation, all provisions concerning infringement,\r\nconfidentiality and nondisclosure, or limitation on permitted use of the\r\nSoftware or Documentation.  The parties further agree that, in the event of such\r\nbreach, injunctive relief would be necessary to prevent irreparable injury.\r\nAccordingly, either party shall have the right to seek injunctive relief or\r\nsimilar equitable remedies to enforce such party's rights under the pertinent\r\nprovisions of this Agreement, without limiting its right to pursue any other\r\nlegal remedies available to it.\r\n\r\n13.6 Entire Agreement and Waiver.  This Agreement and any exhibits  hereto shall\r\nconstitute the entire agreement and contains all terms and conditions between\r\nKasten and Licensee with respect to the subject matter hereof and all prior\r\nagreements, representations, and statement with respect to such subject matter\r\nare superseded hereby.  This Agreement may be changed only by written agreement\r\nsigned by both Kasten and Licensee.  No failure of either party to exercise or\r\nenforce any of its rights under this Agreement shall act as a waiver of\r\nsubsequent breaches; and the waiver of any breach shall not act as a waiver of\r\nsubsequent breaches.\r\n\r\n13.7 Severability.  In the event any provision of this Agreement is held by a\r\ncourt or other tribunal of competent jurisdiction to be unenforceable, that\r\nprovision will be enforced to the maximum extent permissible under applicable\r\nlaw and the other provisions of this Agreement will remain in full force and\r\neffect.  The parties further agree that in the event such provision is an\r\nessential part of this Agreement, they will begin negotiations for a suitable\r\nreplacement provision.\r\n\r\n13.8 Counterparts.  This Agreement may be executed in any number of\r\ncounterparts, each of which, when so executed and delivered (including by\r\nfacsimile), shall be deemed an original, and all of which shall constitute one\r\nand the same agreement.\r\n\r\n13.9 Binding Effect.  This Agreement shall be binding upon and shall inure to\r\nthe benefit of the respective parties hereto, their respective successors and\r\npermitted assigns.\r\n\r\n13.10 Assignment.  Neither party may, without the prior written consent of the\r\nother party (which shall not be unreasonably withheld), assign this Agreement,\r\nin whole or in part, either voluntarily or by operation of law, and any attempt\r\nto do so shall be a material default of this Agreement and shall be void.\r\nNotwithstanding the foregoing, Kasten  may assign its rights and benefits and\r\ndelegate its duties and obligations under this Agreement without the consent of\r\nLicensee in connection with a merger, reorganization or sale of all or\r\nsubstantially all relevant assets of the assigning party; in each case provided\r\nthat such successor assumes the assigning party\"s obligations under this\r\nAgreement.\r\n\r\n"
---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
  namespace: ZNfw9Wo0e
  name: release-name-k10-prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 1m
      scrape_timeout: 10s
      evaluation_interval: 1m
    scrape_configs:
      - job_name: httpServiceDiscovery
        http_sd_configs:
          - url: http://metering-svc.default.svc.cluster.local:8000/v0/listScrapeTargets
      - job_name: prometheus
        metrics_path: /k10/prometheus/metrics
        static_configs:
          - targets:
              - "localhost:9090"
            labels:
              app: prometheus
              component: server
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-6.29.2
    app: grafana
    release: release-name
    app.kubernetes.io/version: 8.5.0
    app.kubernetes.io/managed-by: Helm
  finalizers:
    - kubernetes.io/pvc-protection
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    component: server
    app: prometheus
    release: release-name
    chart: prometheus-15.8.5
    heritage: Helm
  name: prometheus-server
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: catalog-pv-claim
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: catalog
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: jobs-pv-claim
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: jobs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: logging-pv-claim
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: logging
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: metering-pv-claim
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: metering
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    k10.kasten.io/default-rbac-object: "true"
  name: release-name-admin
rules:
  - apiGroups:
      - actions.kio.kasten.io
      - apps.kio.kasten.io
      - config.kio.kasten.io
      - reporting.kio.kasten.io
      - vault.kio.kasten.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - cr.kanister.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - create
      - get
      - list
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    k10.kasten.io/default-rbac-object: "true"
  name: release-name-mc-admin
rules:
  - apiGroups:
      - auth.kio.kasten.io
      - config.kio.kasten.io
      - dist.kio.kasten.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - '*'
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    k10.kasten.io/default-rbac-object: "true"
  name: release-name-basic
rules:
  - apiGroups:
      - actions.kio.kasten.io
    resources:
      - backupactions
      - backupactions/details
      - restoreactions
      - restoreactions/details
      - exportactions
      - exportactions/details
      - cancelactions
    verbs:
      - '*'
  - apiGroups:
      - apps.kio.kasten.io
    resources:
      - restorepoints
      - restorepoints/details
      - applications
      - applications/details
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - config.kio.kasten.io
    resources:
      - policies
    verbs:
      - '*'
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    k10.kasten.io/default-rbac-object: "true"
  name: release-name-config-view
rules:
  - apiGroups:
      - config.kio.kasten.io
    resources:
      - profiles
      - policies
    verbs:
      - get
      - list
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
  name: default-release-name-k10-cluster-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: release-name-k10
    namespace: default
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
  name: default-release-name-k10-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-admin
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: k10:admins
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-grafana
  namespace: ZNfw9Wo0e
  labels:
    helm.sh/chart: grafana-6.29.2
    app: grafana
    release: release-name
    app.kubernetes.io/version: 8.5.0
    app.kubernetes.io/managed-by: Helm
rules: []
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    k10.kasten.io/default-rbac-object: "true"
  name: release-name-ns-admin
  namespace: ZNfw9Wo0e
rules:
  - apiGroups:
      - ""
      - apps
    resources:
      - deployments
      - pods
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - update
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-grafana
  namespace: ZNfw9Wo0e
  labels:
    helm.sh/chart: grafana-6.29.2
    app: grafana
    release: release-name
    app.kubernetes.io/version: 8.5.0
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-grafana
subjects:
  - kind: ServiceAccount
    name: release-name-grafana
    namespace: default
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
  name: default-release-name-k10-ns-admin
  namespace: ZNfw9Wo0e
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ns-admin
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: k10:admins
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-grafana
  namespace: ZNfw9Wo0e
  labels:
    helm.sh/chart: grafana-6.29.2
    app: grafana
    release: release-name
    app.kubernetes.io/version: 8.5.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: getambassador.io/v3alpha1
      kind:  Mapping
      name:  grafana-server-mapping
      prefix: /release-name/grafana/
      rewrite: /
      service: release-name-grafana:80
      timeout_ms: 15000
      hostname: "*"
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: grafana
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: server
    app: prometheus
    release: release-name
    chart: prometheus-15.8.5
    heritage: Helm
  name: prometheus-server
  namespace: ZNfw9Wo0e
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    component: server
    app: prometheus
    release: release-name
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  labels:
    service: gateway
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
  name: gateway
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: getambassador.io/v3alpha1
      kind:  AuthService
      name:  authentication
      auth_service: "auth-svc:8000"
      path_prefix: "/v0/authz"
      allowed_request_headers:
      - "x-forwarded-access-token"
      ---
      apiVersion: getambassador.io/v3alpha1
      kind: Host
      name: ambassadorhost
      hostname: "*"
      requestPolicy:
        insecure:
          action: Route
      ---
      apiVersion: getambassador.io/v3alpha1
      kind: Listener
      name: ambassadorlistener
      port: 8000
      securityModel: XFP
      protocol: HTTPS
      hostBinding:
        namespace:
          from: SELF
      ---
      apiVersion: getambassador.io/v3alpha1
      kind:  Module
      name:  ambassador
      config:
        service_port: 8000
spec:
  ports:
    - name: http
      port: 8000
      targetPort: 8000
  selector:
    service: gateway
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: gateway-admin
  labels:
    service: gateway
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
spec:
  ports:
    - name: metrics
      port: 8877
      targetPort: 8877
  selector:
    service: gateway
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: prometheus-server-exp
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: prometheus-server
    run: prometheus-server
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: getambassador.io/v3alpha1
      kind:  Mapping
      name:  prometheus-server-mapping
      rewrite: /k10/prometheus/
      prefix: /release-name/prometheus/
      service: prometheus-server:80
      timeout_ms: 15000
      hostname: "*"
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 9090
  selector:
    app: prometheus
    component: server
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: auth-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: auth
    run: auth-svc
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: getambassador.io/v3alpha1
      kind:  Mapping
      name:  auth-mapping
      prefix: /release-name/auth-svc/
      rewrite: /
      service: auth-svc.default:8000
      timeout_ms: 30000
      hostname: "*"
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
  selector:
    run: auth-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: catalog-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: catalog
    run: catalog-svc
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
  selector:
    run: catalog-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: controllermanager-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: controllermanager
    run: controllermanager-svc
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
  selector:
    run: controllermanager-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: crypto-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: crypto
    run: crypto-svc
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
    - name: bloblifecyclemanager
      protocol: TCP
      port: 8001
      targetPort: 8001
    - name: events
      protocol: TCP
      port: 8002
      targetPort: 8002
  selector:
    run: crypto-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: dashboardbff-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: dashboardbff
    run: dashboardbff-svc
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: getambassador.io/v3alpha1
      kind:  Mapping
      name:  dashboardbff-mapping
      prefix: /release-name/dashboardbff-svc/
      rewrite: /
      service: dashboardbff-svc.default:8000
      timeout_ms: 30000
      hostname: "*"
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
  selector:
    run: dashboardbff-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: executor-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: executor
    run: executor-svc
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
  selector:
    run: executor-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: jobs-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: jobs
    run: jobs-svc
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
  selector:
    run: jobs-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: logging-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: logging
    run: logging-svc
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
    - name: logging
      protocol: TCP
      port: 24224
      targetPort: 24224
    - name: logging-metrics
      protocol: TCP
      port: 24225
      targetPort: 24225
  selector:
    run: logging-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: metering-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: metering
    run: metering-svc
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
  selector:
    run: metering-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: state-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: state
    run: state-svc
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
    - name: admin
      protocol: TCP
      port: 8001
      targetPort: 8001
  selector:
    run: state-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: frontend-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: frontend
    run: frontend-svc
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: getambassador.io/v3alpha1
      kind:  Mapping
      name:  frontend-mapping
      prefix: /release-name/
      rewrite: /
      service: frontend-svc.default:8000
      timeout_ms: 30000
      hostname: "*"
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
  selector:
    run: frontend-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: aggregatedapis-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: aggregatedapis
    run: aggregatedapis-svc
spec:
  ports:
    - name: http
      port: 443
      protocol: TCP
      targetPort: 10250
  selector:
    run: aggregatedapis-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: ZNfw9Wo0e
  name: kanister-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: kanister
    run: kanister-svc
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
  selector:
    run: kanister-svc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-grafana
  namespace: ZNfw9Wo0e
  labels:
    helm.sh/chart: grafana-6.29.2
    app: grafana
    release: release-name
    app.kubernetes.io/version: 8.5.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
      release: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: grafana
        release: release-name
      annotations:
        checksum/config: 5c819ff09c271502e27ac2444073903339fc8eb26aa8a78cd3a95a7d34a6fe20
        checksum/dashboards-json-config: 3634d8bf2b5d90b9a9c614fe567999de5ac1509ad42fd1d5218819daff64bdc9
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: 5820191932d20673ad48d9333f9312fd536d88d000b999e31f30f57bb8dd9696
    spec:
      serviceAccountName: release-name-grafana
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      initContainers:
        - name: init-chown-data
          image: registry.access.redhat.com/ubi8/ubi-minimal:8.6-751
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command:
            - chown
            - -R
            - 472:472
            - /var/lib/grafana
          resources: {}
          volumeMounts:
            - name: storage
              mountPath: /var/lib/grafana
        - name: download-dashboards
          image: registry.access.redhat.com/ubi8/ubi-minimal:8.6-751
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
          args:
            - -c
            - mkdir -p /var/lib/grafana/dashboards/default && /bin/sh -x /etc/grafana/download_dashboards.sh
          resources: {}
          env: null
          volumeMounts:
            - name: config
              mountPath: /etc/grafana/download_dashboards.sh
              subPath: download_dashboards.sh
            - name: storage
              mountPath: /var/lib/grafana
      enableServiceLinks: true
      containers:
        - name: grafana
          image: grafana/grafana:8.5.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: storage
              mountPath: /var/lib/grafana
            - name: dashboards-default
              mountPath: /var/lib/grafana/dashboards/default/default.json
              subPath: default.json
            - name: config
              mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              subPath: datasources.yaml
            - name: config
              mountPath: /etc/grafana/provisioning/dashboards/dashboardproviders.yaml
              subPath: dashboardproviders.yaml
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana
                  key: admin-password
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config
          configMap:
            name: release-name-grafana
        - name: dashboards-default
          configMap:
            name: release-name-grafana-dashboards-default
        - name: storage
          persistentVolumeClaim:
            claimName: release-name-grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: server
    app: prometheus
    release: release-name
    chart: prometheus-15.8.5
    heritage: Helm
  name: prometheus-server
  namespace: ZNfw9Wo0e
spec:
  selector:
    matchLabels:
      component: server
      app: prometheus
      release: release-name
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: server
        app: prometheus
        release: release-name
        chart: prometheus-15.8.5
        heritage: Helm
    spec:
      enableServiceLinks: true
      serviceAccountName: prometheus-server
      containers:
        - name: prometheus-server-configmap-reload
          image: jimmidyson/configmap-reload:v0.5.0
          imagePullPolicy: IfNotPresent
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/k10/prometheus/-/reload
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
        - name: prometheus-server
          image: quay.io/prometheus/prometheus:v2.34.0
          imagePullPolicy: IfNotPresent
          args:
            - --storage.tsdb.retention.time=30d
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
            - --web.route-prefix=/k10/prometheus
            - --web.external-url=/k10/prometheus/
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /k10/prometheus/-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 4
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /k10/prometheus/-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          resources: {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
              subPath: ""
      hostNetwork: false
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: release-name-k10-prometheus-config
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: auth-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: auth
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: auth
      run: auth-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: auth
        run: auth-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      containers:
        - name: auth-svc
          image: gcr.io/kasten-images/auth:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 2m
              memory: 30Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
          volumeMounts: null
      volumes: null
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: catalog-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: catalog
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: catalog
      run: catalog-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: catalog
        run: catalog-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      initContainers:
        - name: upgrade-init
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: true
          image: gcr.io/kasten-images/upgrade:5.0.0
          imagePullPolicy: Always
          env:
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
          volumeMounts:
            - name: catalog-persistent-storage
              mountPath: /mnt/k10state
        - name: schema-upgrade-check
          image: gcr.io/kasten-images/catalog:5.0.0
          imagePullPolicy: Always
          env:
            - name: INIT_CONTAINER
              value: "true"
            - name: K10_RELEASE_NAME
              value: release-name
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
          volumeMounts:
            - name: catalog-persistent-storage
              mountPath: /mnt/k10state
      containers:
        - name: catalog-svc
          image: gcr.io/kasten-images/catalog:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 200m
              memory: 780Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
          volumeMounts:
            - name: catalog-persistent-storage
              mountPath: /mnt/k10state
        - name: kanister-sidecar
          image: ghcr.io/kanisterio/kanister-tools:0.79.0
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 1200m
              memory: 800Mi
            requests:
              cpu: 100m
              memory: 800Mi
          volumeMounts:
            - name: catalog-persistent-storage
              mountPath: /mnt/k10state
      volumes:
        - name: catalog-persistent-storage
          persistentVolumeClaim:
            claimName: catalog-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: controllermanager-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: controllermanager
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: controllermanager
      run: controllermanager-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: controllermanager
        run: controllermanager-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      containers:
        - name: controllermanager-svc
          image: gcr.io/kasten-images/controllermanager:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 5m
              memory: 30Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: K10_STATEFUL
              value: "true"
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
            - name: K10_PROMETHEUS_HOST
              value: prometheus-server-exp
            - name: K10_PROMETHEUS_PORT
              value: "80"
            - name: K10_PROMETHEUS_BASE_URL
              value: /k10/prometheus/
            - name: K10_GRAFANA_ENABLED
              value: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: crypto-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: crypto
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: crypto
      run: crypto-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: crypto
        run: crypto-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      containers:
        - name: crypto-svc
          image: gcr.io/kasten-images/crypto:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 1m
              memory: 30Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
        - name: bloblifecyclemanager-svc
          image: gcr.io/kasten-images/bloblifecyclemanager:5.0.0
          imagePullPolicy: Always
          args:
            - --port=8001
            - --host=0.0.0.0
          resources:
            requests:
              cpu: 10m
              memory: 40Mi
          ports:
            - containerPort: 8001
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8001
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8001
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
        - name: events-svc
          image: gcr.io/kasten-images/events:5.0.0
          imagePullPolicy: Always
          args:
            - --port=8002
            - --host=0.0.0.0
          resources:
            requests:
              cpu: 3m
              memory: 500Mi
          ports:
            - containerPort: 8002
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8002
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8002
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: dashboardbff-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: dashboardbff
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: dashboardbff
      run: dashboardbff-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: dashboardbff
        run: dashboardbff-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      containers:
        - name: dashboardbff-svc
          image: gcr.io/kasten-images/dashboardbff:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 8m
              memory: 40Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
            - name: K10_PROMETHEUS_HOST
              value: prometheus-server-exp
            - name: K10_PROMETHEUS_PORT
              value: "80"
            - name: K10_PROMETHEUS_BASE_URL
              value: /k10/prometheus/
            - name: K10_GRAFANA_ENABLED
              value: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: executor-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: executor
spec:
  replicas: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: executor
      run: executor-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: executor
        run: executor-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      containers:
        - name: executor-svc
          image: gcr.io/kasten-images/executor:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 3m
              memory: 50Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: DATA_MOVER_IMAGE
              value: gcr.io/kasten-images/datamover:5.0.0
            - name: KANISTER_POD_READY_WAIT_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: KanisterPodReadyWaitTimeout
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: KANISTER_BACKUP_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: KanisterBackupTimeout
            - name: KANISTER_RESTORE_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: KanisterRestoreTimeout
            - name: KANISTER_DELETE_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: KanisterDeleteTimeout
            - name: KANISTER_HOOK_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: KanisterHookTimeout
            - name: KANISTER_CHECKREPO_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: KanisterCheckRepoTimeout
            - name: KANISTER_STATS_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: KanisterStatsTimeout
            - name: KANISTER_EFSPOSTRESTORE_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: KanisterEFSPostRestoreTimeout
            - name: EFS_BACKUP_VAULT_NAME
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: efsBackupVaultName
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
            - name: K10_PROMETHEUS_HOST
              value: prometheus-server-exp
            - name: K10_PROMETHEUS_PORT
              value: "80"
            - name: K10_PROMETHEUS_BASE_URL
              value: /k10/prometheus/
            - name: K10_GRAFANA_ENABLED
              value: "true"
        - name: tools
          image: gcr.io/kasten-images/cephtool:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 1m
              memory: 2Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: jobs-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: jobs
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: jobs
      run: jobs-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: jobs
        run: jobs-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      initContainers:
        - name: upgrade-init
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: true
          image: gcr.io/kasten-images/upgrade:5.0.0
          imagePullPolicy: Always
          env:
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
          volumeMounts:
            - name: jobs-persistent-storage
              mountPath: /mnt/k10state
      containers:
        - name: jobs-svc
          image: gcr.io/kasten-images/jobs:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 30m
              memory: 380Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
          volumeMounts:
            - name: jobs-persistent-storage
              mountPath: /mnt/k10state
      volumes:
        - name: jobs-persistent-storage
          persistentVolumeClaim:
            claimName: jobs-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: logging-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: logging
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: logging
      run: logging-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: logging
        run: logging-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      initContainers:
        - name: upgrade-init
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: true
          image: gcr.io/kasten-images/upgrade:5.0.0
          imagePullPolicy: Always
          env:
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
          volumeMounts:
            - name: logging-persistent-storage
              mountPath: /mnt/k10state
      containers:
        - name: logging-svc
          image: gcr.io/kasten-images/logging:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 2m
              memory: 40Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
            - containerPort: 24224
              protocol: TCP
            - containerPort: 24225
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
          volumeMounts:
            - name: logging-persistent-storage
              mountPath: /mnt/k10state
            - name: logging-configmap-storage
              mountPath: /mnt/conf
      volumes:
        - name: logging-persistent-storage
          persistentVolumeClaim:
            claimName: logging-pv-claim
        - name: logging-configmap-storage
          configMap:
            name: fluentbit-configmap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: metering-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: metering
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: metering
      run: metering-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: metering
        run: metering-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      initContainers:
        - name: upgrade-init
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: true
          image: gcr.io/kasten-images/upgrade:5.0.0
          imagePullPolicy: Always
          env:
            - name: MODEL_STORE_DIR
              value: /var/reports/
          volumeMounts:
            - name: metering-persistent-storage
              mountPath: /var/reports/
      containers:
        - name: metering-svc
          image: gcr.io/kasten-images/metering:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 2m
              memory: 30Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            initialDelaySeconds: 90
            timeoutSeconds: 1
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AGENT_CONFIG_FILE
              value: /var/ubbagent/config.yaml
            - name: AGENT_STATE_DIR
              value: /var/reports/ubbagent
            - name: K10_REPORT_COLLECTION_PERIOD
              value: "1800"
            - name: K10_REPORT_PUSH_PERIOD
              value: "3600"
          volumeMounts:
            - name: meter-config
              mountPath: /var/ubbagent
            - name: metering-persistent-storage
              mountPath: /var/reports/
      volumes:
        - name: meter-config
          configMap:
            name: release-name-k10-metering-config
            items:
              - key: config
                path: config.yaml
              - key: prometheusTargets
                path: prometheusTargets.yaml
        - name: metering-persistent-storage
          persistentVolumeClaim:
            claimName: metering-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: state-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: state
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: state
      run: state-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: state
        run: state-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      containers:
        - name: state-svc
          image: gcr.io/kasten-images/state:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 2m
              memory: 30Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              value: /tmp/k10store
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
        - name: admin-svc
          image: gcr.io/kasten-images/admin:5.0.0
          imagePullPolicy: Always
          args:
            - --port=8001
            - --host=0.0.0.0
          resources:
            requests:
              cpu: 2m
              memory: 160Mi
          ports:
            - containerPort: 8001
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8001
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8001
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: aggregatedapis-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: aggregatedapis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: aggregatedapis
      run: aggregatedapis-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: aggregatedapis
        run: aggregatedapis-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      containers:
        - name: aggregatedapis-svc
          image: gcr.io/kasten-images/aggregatedapis:5.0.0
          imagePullPolicy: Always
          args:
            - --secure-port=10250
            - --cert-dir=/tmp/apiserver.local.config/certificates/
          resources:
            requests:
              cpu: 90m
              memory: 180Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 10250
          livenessProbe:
            tcpSocket:
              port: 10250
            timeoutSeconds: 5
            initialDelaySeconds: 300
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: frontend-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: frontend
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: frontend
      run: frontend-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: frontend
        run: frontend-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      containers:
        - name: frontend-svc
          image: gcr.io/kasten-images/frontend:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 1m
              memory: 40Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  name: kanister-svc
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: kanister
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: k10
      release: release-name
      component: kanister
      run: kanister-svc
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
        component: kanister
        run: kanister-svc
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: release-name-k10
      containers:
        - name: kanister-svc
          image: gcr.io/kasten-images/kanister:5.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 1m
              memory: 30Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            timeoutSeconds: 1
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /v0/healthz
              port: 8000
            initialDelaySeconds: 3
          env:
            - name: VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: version
            - name: MODEL_STORE_DIR
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: modelstoredirname
            - name: DATA_MOVER_IMAGE
              value: gcr.io/kasten-images/datamover:5.0.0
            - name: KANISTER_POD_READY_WAIT_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: KanisterPodReadyWaitTimeout
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: loglevel
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONCURRENT_SNAP_CONVERSIONS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentSnapConversions
            - name: CONCURRENT_WORKLOAD_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: concurrentWorkloadSnapshots
            - name: K10_DATA_STORE_PARALLEL_UPLOAD
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreParallelUpload
            - name: K10_DATA_STORE_GENERAL_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralContentCacheSizeMB
            - name: K10_DATA_STORE_GENERAL_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreGeneralMetadataCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_CONTENT_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreContentCacheSizeMB
            - name: K10_DATA_STORE_RESTORE_METADATA_CACHE_SIZE_MB
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: k10DataStoreRestoreMetadataCacheSizeMB
            - name: K10_LIMITER_GENERIC_VOLUME_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeSnapshots
            - name: K10_LIMITER_GENERIC_VOLUME_COPIES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeCopies
            - name: K10_LIMITER_GENERIC_VOLUME_RESTORES
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterGenericVolumeRestores
            - name: K10_LIMITER_CSI_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterCsiSnapshots
            - name: K10_LIMITER_PROVIDER_SNAPSHOTS
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: K10LimiterProviderSnapshots
            - name: AWS_ASSUME_ROLE_DURATION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: AWSAssumeRoleDuration
            - name: K10_RELEASE_NAME
              value: release-name
            - name: KANISTER_FUNCTION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: k10-config
                  key: kanisterFunctionVersion
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ZNfw9Wo0e
  labels:
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
    component: gateway
  name: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      service: gateway
  template:
    metadata:
      annotations:
        checksum/config: 8789a82e95eaf8dd0ea87680aaa7abb25fd165ed6f587c7286954818f349ee86
        checksum/secret: 545c38b0922de19734fbffde62792c37c2aef6a3216cfa472449173165220f7d
      labels:
        service: gateway
        component: gateway
        heritage: Helm
        helm.sh/chart: k10-5.0.0
        app.kubernetes.io/name: k10
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: k10
        release: release-name
    spec:
      serviceAccountName: release-name-k10
      containers:
        - name: ambassador
          image: docker.io/emissaryingress/emissary:2.2.2
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 300Mi
          env:
            - name: AMBASSADOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AMBASSADOR_SINGLE_NAMESPACE
              value: "true"
            - name: AMBASSADOR_VERIFY_SSL_FALSE
              value: "false"
          livenessProbe:
            httpGet:
              path: /ambassador/v0/check_alive
              port: 8877
            initialDelaySeconds: 30
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /ambassador/v0/check_ready
              port: 8877
            initialDelaySeconds: 30
            periodSeconds: 3
      restartPolicy: Always
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.actions.kio.kasten.io
  labels:
    apiserver: "true"
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
spec:
  version: v1alpha1
  group: actions.kio.kasten.io
  groupPriorityMinimum: 2000
  service:
    namespace: default
    name: aggregatedapis-svc
  versionPriority: 10
  insecureSkipTLSVerify: true
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.apps.kio.kasten.io
  labels:
    apiserver: "true"
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
spec:
  version: v1alpha1
  group: apps.kio.kasten.io
  groupPriorityMinimum: 2000
  service:
    namespace: default
    name: aggregatedapis-svc
  versionPriority: 10
  insecureSkipTLSVerify: true
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.vault.kio.kasten.io
  labels:
    apiserver: "true"
    heritage: Helm
    helm.sh/chart: k10-5.0.0
    app.kubernetes.io/name: k10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: k10
    release: release-name
spec:
  version: v1alpha1
  group: vault.kio.kasten.io
  groupPriorityMinimum: 2000
  service:
    namespace: default
    name: aggregatedapis-svc
  versionPriority: 10
  insecureSkipTLSVerify: true
