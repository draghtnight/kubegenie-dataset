apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-logstash
  namespace: lfalB1
  labels:
    app.kubernetes.io/name: logstash
    helm.sh/chart: logstash-5.0.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-logstash
  namespace: lfalB1
  labels:
    app.kubernetes.io/name: logstash
    helm.sh/chart: logstash-5.0.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  logstash.conf: |-
    input {
      # udp {
      #   port => 1514
      #   type => syslog
      # }
      # tcp {
      #   port => 1514
      #   type => syslog
      # }
      http { port => 8080 }
    }
    output {
      # elasticsearch {
      #   hosts => ["${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
      #   manage_template => false
      #   index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
      # }
      # gelf {
      #   host => "${GRAYLOG_HOST}"
      #   port => ${GRAYLOG_PORT}
      # }
      stdout {}
    }
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-logstash-headless
  namespace: lfalB1
  labels:
    app.kubernetes.io/name: logstash
    helm.sh/chart: logstash-5.0.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: logstash
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-logstash
  namespace: lfalB1
  labels:
    app.kubernetes.io/name: logstash
    helm.sh/chart: logstash-5.0.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: logstash
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-logstash
  namespace: lfalB1
  labels:
    app.kubernetes.io/name: logstash
    helm.sh/chart: logstash-5.0.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: release-name-logstash-headless
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: logstash
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: logstash
        helm.sh/chart: logstash-5.0.8
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/configuration: a3a9e3ce8fdb5292e5b9d3b5adab3e80539b832087747d99d6a598b44c336f61
    spec:
      serviceAccountName: release-name-logstash
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: logstash
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      initContainers: null
      containers:
        - name: logstash
          image: marketplace.azurecr.io/bitnami/logstash:8.2.2-debian-11-r0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 10297
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: LOGSTASH_CONF_FILENAME
              value: logstash.conf
            - name: LOGSTASH_ENABLE_MULTIPLE_PIPELINES
              value: "false"
            - name: LOGSTASH_EXPOSE_API
              value: "yes"
            - name: LOGSTASH_API_PORT_NUMBER
              value: "9600"
          envFrom: null
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9600
              name: monitoring
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /
              port: monitoring
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /
              port: monitoring
          resources:
            limits: {}
            requests: {}
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: configurations
              mountPath: /bitnami/logstash/config
      volumes:
        - name: configurations
          configMap:
            name: release-name-logstash
