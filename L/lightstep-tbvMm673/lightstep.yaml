apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-lightstep
  labels:
    helm.sh/chart: lightstep-2.0.7
    app.kubernetes.io/name: lightstep
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2022-04-28_17-39-22Z
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-lightstep-statsd-mapping
  labels:
    helm.sh/chart: lightstep-2.0.7
    app.kubernetes.io/name: lightstep
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2022-04-28_17-39-22Z
    app.kubernetes.io/managed-by: Helm
data:
  config: |
    mappings:
      - match: "lightstep.prod.us-west-1.client_via_canary.spans.dropped.*"
        name: "lightstep_client_spans"
        match_metric_type: counter
        labels:
          prefix: "lightstep.prod.us-west-1"
          client_prefix: "client_via_canary"
          lightstep_project: "$1"
          action: "dropped"
      - match: "lightstep.prod.us-west-1.satellite-canary.access_tokens.invalid.*"
        name: "lightstep_access_token_invalid"
        match_metric_type: counter
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          lightstep_project: "$1"
      - match: "lightstep.prod.us-west-1.satellite-canary.spans.*.*"
        name: "lightstep_spans"
        match_metric_type: counter
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          action: "$1"
          lightstep_project: "$2"
      - match: "lightstep.prod.us-west-1.satellite-canary.index.queue.*.*"
        name: "lightstep_index_queue_$1"
        match_metric_type: gauge
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          lightstep_project: "$2"
      - match: "lightstep.prod.us-west-1.satellite-canary.bytes.received.*"
        name: "lightstep_bytes"
        match_metric_type: counter
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          action: "received"
          protocol: "$1"
      - match: "lightstep.prod.us-west-1.satellite-canary.bytes.indexed.*"
        name: "lightstep_bytes"
        match_metric_type: counter
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          action: "indexed"
          lightstep_project: "$1"
      - match: "lightstep.prod.us-west-1.satellite-canary.starts.*"
        name: "lightstep_starts"
        match_metric_type: counter
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          lightstep_project: "$1"
      - match: "lightstep.prod.us-west-1.satellite-canary.forward_spans.*.size_exceeded.*"
        name: "lightstep_forward_spans_size_exceeded"
        match_metric_type: counter
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          action: "$1"
          lightstep_project: "$2"
      - match: "lightstep.prod.us-west-1.satellite-canary.forward_spans.*.*"
        name: "lightstep_forward_spans"
        match_metric_type: counter
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          action: "$1"
          lightstep_project: "$2"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lightstep-node-reader
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lightstep-read-nodes
subjects:
  - kind: ServiceAccount
    name: release-name-lightstep
    namespace: default
roleRef:
  kind: ClusterRole
  name: lightstep-node-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: tbvMm673
  name: lightstep-pod-reader
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: lightstep-read-pods
  namespace: tbvMm673
subjects:
  - kind: ServiceAccount
    name: release-name-lightstep
    namespace: default
roleRef:
  kind: Role
  name: lightstep-pod-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-lightstep
  labels:
    helm.sh/chart: lightstep-2.0.7
    app.kubernetes.io/name: lightstep
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2022-04-28_17-39-22Z
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8181
      targetPort: 8181
    - name: grpc-insecure
      port: 8184
      targetPort: 8184
  selector:
    app.kubernetes.io/name: lightstep
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-lightstep
  labels:
    helm.sh/chart: lightstep-2.0.7
    app.kubernetes.io/name: lightstep
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2022-04-28_17-39-22Z
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lightstep
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lightstep
        app.kubernetes.io/instance: release-name
      annotations:
        prometheus.io/port: "9102"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: release-name-lightstep
      securityContext: {}
      containers:
        - name: lightstep-microsatellite
          image: lightstep/microsatellite:2022-04-28_17-39-22Z
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10900
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: COLLECTOR_POOL
              value: my-satellite-pool
            - name: GUID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: COLLECTOR_REPORTER_BYTES_PER_PROJECT
              value: null
            - name: COLLECTOR_DIAGNOSTIC_PORT
              value: "8000"
            - name: COLLECTOR_ADMIN_PLAIN_PORT
              value: "8180"
            - name: COLLECTOR_ADMIN_SECURE_PORT
              value: "9090"
            - name: COLLECTOR_HTTP_PLAIN_PORT
              value: "8181"
            - name: COLLECTOR_HTTP_SECURE_PORT
              value: "9191"
            - name: COLLECTOR_GRPC_PLAIN_PORT
              value: "8184"
            - name: COLLECTOR_GRPC_SECURE_PORT
              value: "9292"
            - name: COLLECTOR_PLAIN_PORT
              value: "8383"
            - name: COLLECTOR_SECURE_PORT
              value: "9393"
          ports:
            - containerPort: 8000
              name: diagnostics
              protocol: TCP
            - containerPort: 8180
              name: admin
              protocol: TCP
            - containerPort: 9090
              name: admin-secure
              protocol: TCP
            - containerPort: 8181
              name: http
              protocol: TCP
            - containerPort: 9191
              name: http-secure
              protocol: TCP
            - containerPort: 8184
              name: grpc-insecure
              protocol: TCP
            - containerPort: 9292
              name: grpc-secure
              protocol: TCP
            - containerPort: 8383
              name: plain-port
              protocol: TCP
            - containerPort: 9393
              name: plain-secure
              protocol: TCP
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 2
              memory: 2Gi
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /_ready
              port: admin
              scheme: HTTP
            timeoutSeconds: 15
            initialDelaySeconds: 5
            periodSeconds: 20
            successThreshold: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /_live
              port: admin
              scheme: HTTP
            timeoutSeconds: 15
            initialDelaySeconds: 60
            periodSeconds: 20
            successThreshold: 1
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-lightstep-test-connection
  labels:
    helm.sh/chart: lightstep-2.0.7
    app.kubernetes.io/name: lightstep
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2022-04-28_17-39-22Z
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - 'release-name-lightstep:'
  restartPolicy: Never
