apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-lighthouse
  labels:
    helm.sh/chart: lighthouse-0.1.0
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: 0uOpUYEMfuUpnV
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-lighthouse-env
  labels:
    helm.sh/chart: lighthouse-0.1.0
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-lighthouse
  labels:
    helm.sh/chart: lighthouse-0.1.0
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-lighthouse
  labels:
    helm.sh/chart: lighthouse-0.1.0
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-lighthouse
subjects:
  - kind: ServiceAccount
    name: release-name-lighthouse
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-lighthouse
  labels:
    helm.sh/chart: lighthouse-0.1.0
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-lighthouse
  labels:
    helm.sh/chart: lighthouse-0.1.0
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-lighthouse
subjects:
  - kind: ServiceAccount
    name: release-name-lighthouse
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-lighthouse-headless
  labels:
    helm.sh/chart: lighthouse-0.1.0
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 9000
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: 9000
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: 5052
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: 5054
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-lighthouse
  labels:
    helm.sh/chart: lighthouse-0.1.0
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: 9000
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: 5052
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: 5054
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-lighthouse
  labels:
    helm.sh/chart: lighthouse-0.1.0
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lighthouse
      app.kubernetes.io/instance: release-name
  serviceName: release-name-lighthouse-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lighthouse
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: f32dddbffce20e1484da850239fa9f3178fdea3205f6250aecf08a2a49c29fdd
    spec:
      serviceAccountName: release-name-lighthouse
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
        - name: init-chown-data
          image: busybox:1.34.0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command:
            - chown
            - -R
            - 10001:10001
            - /data
          resources: {}
          volumeMounts:
            - name: storage
              mountPath: /data
      containers:
        - name: lighthouse
          image: sigp/lighthouse:v1.5.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -ac
            - |
              exec lighthouse beacon_node --datadir=/data --disable-upnp --disable-enr-auto-update --enr-address=$(POD_IP) --enr-tcp-port=9000 --enr-udp-port=9000 --listen-address=0.0.0.0 --port=9000 --discovery-port=9000 --http --http-address=0.0.0.0 --http-port=5052 --metrics --metrics-address=0.0.0.0 --metrics-port=5054
          volumeMounts:
            - name: storage
              mountPath: /data
          ports:
            - name: p2p-tcp
              containerPort: 9000
              protocol: TCP
            - name: p2p-udp
              containerPort: 9000
              protocol: UDP
            - name: http-api
              containerPort: 5052
              protocol: TCP
            - name: metrics
              containerPort: 5054
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            tcpSocket:
              port: http-api
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: http-api
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      nodeSelector: {}
      affinity: {}
      tolerations: []
      terminationGracePeriodSeconds: 30
      volumes:
        - name: storage
          emptyDir: {}
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-lighthouse-test-connection
  labels:
    helm.sh/chart: lighthouse-0.1.0
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-lighthouse:5052/eth/v1/node/version
  restartPolicy: Never
