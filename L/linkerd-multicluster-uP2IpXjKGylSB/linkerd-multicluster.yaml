kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-gateway
  labels:
    linkerd.io/extension: multicluster
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: linkerd-service-mirror-remote-access-default
  labels:
    linkerd.io/extension: multicluster
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: links.multicluster.linkerd.io
  labels:
    linkerd.io/extension: multicluster
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
spec:
  group: multicluster.linkerd.io
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                clusterCredentialsSecret:
                  description: Kubernetes secret of target cluster
                  type: string
                gatewayAddress:
                  description: Gateway address of target cluster
                  type: string
                gatewayIdentity:
                  description: Gateway Identity FQDN
                  type: string
                gatewayPort:
                  description: Gateway Port
                  type: string
                probeSpec:
                  description: Spec for gateway health probe
                  type: object
                  properties:
                    path:
                      description: Path of remote gateway health endpoint
                      type: string
                    period:
                      description: Interval in between probe requests
                      type: string
                    port:
                      description: Port of remote gateway health endpoint
                      type: string
                selector:
                  description: Kubernetes Label Selector
                  type: object
                  properties:
                    matchExpressions:
                      description: List of selector requirements
                      type: array
                      items:
                        description: A selector item requires a key and an operator
                        type: object
                        required:
                          - key
                          - operator
                        properties:
                          key:
                            description: Label key that selector should apply to
                            type: string
                          operator:
                            description: Evaluation of a label in relation to set
                            type: string
                targetClusterName:
                  description: Name of target cluster to link to
                  type: string
                targetClusterDomain:
                  description: Domain name of target cluster to link to
                  type: string
                targetClusterLinkerdNamespace:
                  description: Name of namespace Linkerd control plane is installed in on target cluster
                  type: string
  scope: Namespaced
  names:
    plural: links
    singular: link
    kind: Link
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-service-mirror-remote-access-default
  labels:
    linkerd.io/extension: multicluster
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
    resourceNames:
      - linkerd-config
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-service-mirror-remote-access-default
  labels:
    linkerd.io/extension: multicluster
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-service-mirror-remote-access-default
subjects:
  - kind: ServiceAccount
    name: linkerd-service-mirror-remote-access-default
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: linkerd-gateway
  labels:
    linkerd.io/extension: multicluster
  annotations:
    mirror.linkerd.io/gateway-identity: linkerd-gateway.default.serviceaccount.identity.linkerd.cluster.local
    mirror.linkerd.io/probe-period: "3"
    mirror.linkerd.io/probe-path: /ready
    mirror.linkerd.io/multicluster-gateway: "true"
    linkerd.io/control-plane-component: gateway
    linkerd.io/created-by: linkerd/helm edge-21.12.4
spec:
  ports:
    - name: mc-gateway
      port: 4143
      protocol: TCP
    - name: mc-probe
      port: 4191
      protocol: TCP
  selector:
    app: linkerd-gateway
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
  labels:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-21.12.4
    linkerd.io/control-plane-component: gateway
    app: linkerd-gateway
    linkerd.io/extension: multicluster
  name: linkerd-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: linkerd-gateway
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/helm edge-21.12.4
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-require-identity-inbound-ports: "4143"
        config.linkerd.io/enable-gateway: "true"
      labels:
        app: linkerd-gateway
    spec:
      containers:
        - name: pause
          image: gcr.io/google_containers/pause
      serviceAccountName: linkerd-gateway
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: linkerd-gateway
  labels:
    linkerd.io/extension: multicluster
    app: linkerd-gateway
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
spec:
  podSelector:
    matchLabels:
      app: linkerd-gateway
  port: linkerd-proxy
  proxyProtocol: HTTP/1
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: gateway-proxy-admin
  labels:
    linkerd.io/extension: multicluster
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
spec:
  podSelector:
    matchLabels:
      app: linkerd-gateway
  port: linkerd-admin
  proxyProtocol: HTTP/1
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: service-mirror-proxy-admin
  labels:
    linkerd.io/extension: multicluster
spec:
  podSelector:
    matchLabels:
      linkerd.io/control-plane-component: linkerd-service-mirror
  port: linkerd-admin
  proxyProtocol: HTTP/1
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: service-mirror
  labels:
    linkerd.io/control-plane-component: linkerd-service-mirror
spec:
  podSelector:
    matchLabels:
      linkerd.io/control-plane-component: linkerd-service-mirror
  port: admin-http
  proxyProtocol: HTTP/1
---
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  name: linkerd-gateway
  labels:
    linkerd.io/extension: multicluster
    app: linkerd-gateway
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
spec:
  server:
    name: linkerd-gateway
  client:
    meshTLS:
      identities:
        - '*'
    networks:
      - cidr: 0.0.0.0/0
      - cidr: ::/0
---
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  name: linkerd-gateway-probe
  labels:
    linkerd.io/extension: multicluster
    app: linkerd-gateway
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
spec:
  server:
    name: gateway-proxy-admin
  client:
    meshTLS:
      identities:
        - '*'
    networks:
      - cidr: 0.0.0.0/0
      - cidr: ::/0
---
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  name: proxy-admin
  labels:
    linkerd.io/extension: multicluster
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
spec:
  server:
    name: gateway-proxy-admin
  client:
    unauthenticated: true
---
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  name: service-mirror-proxy-admin
  labels:
    linkerd.io/extension: multicluster
spec:
  server:
    name: service-mirror-proxy-admin
  client:
    unauthenticated: true
---
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  name: service-mirror
  labels:
    linkerd.io/control-plane-component: linkerd-service-mirror
spec:
  server:
    name: service-mirror
  client:
    meshTLS:
      serviceAccounts:
        - name: prometheus
          namespace: linkerd-viz
---
kind: ServiceAccount
apiVersion: v1
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
    helm.sh/hook: post-install
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  name: namespace-metadata
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
    helm.sh/hook: post-install
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  name: namespace-metadata
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - patch
    resourceNames:
      - default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
    helm.sh/hook: post-install
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  name: namespace-metadata
roleRef:
  kind: Role
  name: namespace-metadata
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: namespace-metadata
    namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm edge-21.12.4
    helm.sh/hook: post-install
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: namespace-metadata
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-21.12.4
  name: namespace-metadata
spec:
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/helm edge-21.12.4
      labels:
        app.kubernetes.io/name: namespace-metadata
        app.kubernetes.io/part-of: Linkerd
        app.kubernetes.io/version: edge-21.12.4
    spec:
      restartPolicy: Never
      serviceAccountName: namespace-metadata
      containers:
        - name: namespace-metadata
          image: curlimages/curl:7.78.0
          command:
            - /bin/sh
          args:
            - -c
            - |
              ops=''
              token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
              ns=$(curl -kfv -H "Authorization: Bearer $token" \
                "https://kubernetes.default.svc/api/v1/namespaces/default")

              if echo "$ns" | grep -vq 'labels'; then
                ops="$ops{\"op\": \"add\",\"path\": \"/metadata/labels\",\"value\": {}},"
              fi

              ops="$ops{\"op\": \"add\", \"path\": \"/metadata/labels/linkerd.io~1extension\", \"value\": \"multicluster\"}"

              curl -kfv -XPATCH -H "Content-Type: application/json-patch+json" -H "Authorization: Bearer $token" \
                -d "[$ops]" \
                "https://kubernetes.default.svc/api/v1/namespaces/default?fieldManager=kubectl-label"
