apiVersion: v1
kind: Secret
metadata:
  name: release-name-leaf2mqtt
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: leaf2mqtt
    app.kubernetes.io/version: "0.6"
    helm-revision: "1"
    helm.sh/chart: leaf2mqtt-4.0.3
stringData:
  LEAF_PASSWORD: changeme
  LEAF_USERNAME: leafuser
  MQTT_PASSWORD: changeme
  MQTT_USERNAME: mqttuser
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-leaf2mqtt
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: leaf2mqtt
    app.kubernetes.io/version: "0.6"
    helm-revision: "1"
    helm.sh/chart: leaf2mqtt-4.0.3
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: leaf2mqtt
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: leaf2mqtt
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 0
        runAsUser: 0
        supplementalGroups:
          - 568
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      enableServiceLinks: false
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: autopermissions
          image: ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583
          securityContext:
            runAsUser: 11877
            privileged: true
            allowPrivilegeEscalation: false
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          command:
            - /bin/sh
            - -c
            - |
              /bin/bash <<'EOF'
              echo "Automatically correcting permissions..."
              echo "increasing inotify limits..."
              ( sysctl -w fs.inotify.max_user_watches=524288 || echo "error setting inotify") && ( sysctl -w fs.inotify.max_user_instances=512 || echo "error setting inotify")
              EOF
          volumeMounts: null
      containers:
        - name: release-name-leaf2mqtt
          image: tccr.io/truecharts/leaf2mqtt:v0.6@sha256:a2afcdee61b39e7306f8c4296376e7b9734f39f07ea10fdf6032bc87e05dc1d6
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: PUID
              value: "568"
            - name: USER_ID
              value: "568"
            - name: UID
              value: "568"
            - name: UMASK
              value: "2"
            - name: UMASK_SET
              value: "2"
            - name: PGID
              value: "568"
            - name: GROUP_ID
              value: "568"
            - name: GID
              value: "568"
            - name: NVIDIA_VISIBLE_DEVICES
              value: void
            - name: TZ
              value: UTC
            - name: CHARGING_UPDATE_INTERVAL_MINUTES
              value: "60"
            - name: LEAF_TYPE
              value: ""
            - name: LOG_LEVEL
              value: Warning
            - name: MQTT_BASE_TOPIC
              value: leaf
            - name: MQTT_HOST
              value: ""
            - name: MQTT_PORT
              value: "1883"
            - name: UPDATE_INTERVAL_MINUTES
              value: "60"
          envFrom:
            - secretRef:
                name: release-name-leaf2mqtt
          ports: null
          volumeMounts:
            - mountPath: /shared
              name: shared
            - mountPath: /tmp
              name: temp
            - mountPath: /var/logs
              name: varlogs
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: shared
          emptyDir: {}
        - name: temp
          emptyDir:
            medium: Memory
        - name: varlogs
          emptyDir: {}
