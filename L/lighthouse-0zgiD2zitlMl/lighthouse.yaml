apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-lighthouse
  labels:
    app.kubernetes.io/name: lighthouse
    helm.sh/chart: lighthouse-1.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lighthouse
      app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-lighthouse
  labels:
    app.kubernetes.io/name: lighthouse
    helm.sh/chart: lighthouse-1.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-lighthouse
  labels:
    app.kubernetes.io/name: lighthouse
    helm.sh/chart: lighthouse-1.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-lighthouse
  labels:
    app.kubernetes.io/name: lighthouse
    helm.sh/chart: lighthouse-1.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-lighthouse
subjects:
  - kind: ServiceAccount
    name: release-name-lighthouse
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-lighthouse
  labels:
    app.kubernetes.io/name: lighthouse
    helm.sh/chart: lighthouse-1.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-lighthouse
  labels:
    app.kubernetes.io/name: lighthouse
    helm.sh/chart: lighthouse-1.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-lighthouse
subjects:
  - kind: ServiceAccount
    name: release-name-lighthouse
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-lighthouse
  labels:
    app.kubernetes.io/name: lighthouse
    helm.sh/chart: lighthouse-1.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: release-name
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 86400
  type: ClusterIP
  ports:
    - name: http
      port: 5052
      targetPort: http
    - name: metrics
      port: 5054
      targetPort: metrics
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: release-name-lighthouse
  labels:
    app.kubernetes.io/name: lighthouse
    helm.sh/chart: lighthouse-1.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: lighthouse
      app.kubernetes.io/instance: release-name
  serviceName: release-name-lighthouse
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lighthouse
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: release-name-lighthouse
      priorityClassName: ""
      initContainers:
        - name: init-chown
          image: busybox:1.34
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
          command:
            - chown
            - -R
            - 1001:1001
            - /data
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: lighthouse
          image: sigp/lighthouse:v2.3.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -ac
            - |
              exec lighthouse bn --staking --http-address=0.0.0.0 --eth1-endpoints= --datadir=/data --network=mainnet --disable-upnp --disable-enr-auto-update --target-peers=160 --discovery-port=9000 --enr-address=$(POD_IP) --enr-tcp-port=9000 --enr-udp-port=9000 --subscribe-all-subnets --import-all-attestations --metrics --metrics-port=5054 --metrics-address=0.0.0.0
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 5052
              protocol: TCP
              name: http
            - containerPort: 5054
              name: metrics
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
        - name: sidecar
          image: europe-west4-docker.pkg.dev/stakewiselabs/public/ethnode-sidecar:v1.0.3
          imagePullPolicy: IfNotPresent
          env:
            - name: SERVER_BINDADDR
              value: 0.0.0.0:3000
            - name: CLIENT_PORT
              value: "5052"
          ports:
            - containerPort: 3000
              name: sidecar
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 900
            timeoutSeconds: 3
            periodSeconds: 30
            failureThreshold: 3
            successThreshold: 1
            httpGet:
              path: /eth2/liveness
              port: sidecar
              scheme: HTTP
          readinessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 30
            failureThreshold: 30
            successThreshold: 2
            httpGet:
              path: /eth2/readiness
              port: sidecar
              scheme: HTTP
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: lighthouse
          helm.sh/chart: lighthouse-1.2.3
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/managed-by: Helm
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: null
        resources:
          requests:
            storage: 250Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-lighthouse-test-connection
  labels:
    app.kubernetes.io/name: lighthouse
    helm.sh/chart: lighthouse-1.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-lighthouse:5052
  restartPolicy: Never
