[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-laravel-octane",
      "labels": {
        "helm.sh/chart": "laravel-octane-1.0.0",
        "app.kubernetes.io/name": "laravel-octane",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "8.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-php-ini-config"
    },
    "data": {
      "php.ini": "; Determines if Zend OPCache is enabled\nopcache.enable=1\n\n; Determines if Zend OPCache is enabled for the CLI version of PHP\nopcache.enable_cli=1\n\n; The OPcache shared memory storage size.\nopcache.memory_consumption=128\n\n; The amount of memory for interned strings in Mbytes.\nopcache.interned_strings_buffer=128\n\n; The maximum number of keys (scripts) in the OPcache hash table.\n; Only numbers between 200 and 1000000 are allowed.\nopcache.max_accelerated_files=1000000\n\n; maximum memory allocated to store the results\nrealpath_cache_size=8192K\n\n; save the results for 10 minutes (600 seconds)\nrealpath_cache_ttl=600\n\n; The maximum percentage of \"wasted\" memory until a restart is scheduled.\nopcache.max_wasted_percentage=5\n\n; When this directive is enabled, the OPcache appends the current working\n; directory to the script key, thus eliminating possible collisions between\n; files with the same name (basename). Disabling the directive improves\n; performance, but may break existing applications.\n;opcache.use_cwd=1\n\n; When disabled, you must reset the OPcache manually or restart the\n; webserver for changes to the filesystem to take effect.\nopcache.validate_timestamps=0\n\n; How often (in seconds) to check file timestamps for changes to the shared\n; memory storage allocation. (\"1\" means validate once per second, but only\n; once per request. \"0\" means always validate)\nopcache.revalidate_freq=0\n\n; Enables or disables file search in include_path optimization\n;opcache.revalidate_path=0\n\n; If disabled, all PHPDoc comments are dropped from the code to reduce the\n; size of the optimized code.\n;opcache.save_comments=1\n\n; If enabled, a fast shutdown sequence is used for the accelerated code\n; Depending on the used Memory Manager this may cause some incompatibilities.\nopcache.fast_shutdown=1\n\n; Allow file existence override (file_exists, etc.) performance feature.\n;opcache.enable_file_override=0\n\n; A bitmask, where each bit enables or disables the appropriate OPcache\n; passes\n;opcache.optimization_level=0xffffffff\n\n;opcache.inherited_hack=1\n;opcache.dups_fix=0\n\n; The location of the OPcache blacklist file (wildcards allowed).\n; Each OPcache blacklist file is a text file that holds the names of files\n; that should not be accelerated.\nopcache.blacklist_filename=/etc/php-*/opcache*.blacklist\n\n; Allows exclusion of large files from being cached. By default all files\n; are cached.\n;opcache.max_file_size=0\n\n; Check the cache checksum each N requests.\n; The default value of \"0\" means that the checks are disabled.\n;opcache.consistency_checks=0\n\n; How long to wait (in seconds) for a scheduled restart to begin if the cache\n; is not being accessed.\n;opcache.force_restart_timeout=180\n\n; OPcache error_log file name. Empty string assumes \"stderr\".\n;opcache.error_log=\n\n; All OPcache errors go to the Web server log.\n; By default, only fatal errors (level 0) or errors (level 1) are logged.\n; You can also enable warnings (level 2), info messages (level 3) or\n; debug messages (level 4).\n;opcache.log_verbosity_level=1\n\n; Preferred Shared Memory back-end. Leave empty and let the system decide.\n;opcache.preferred_memory_model=\n\n; Protect the shared memory from unexpected writing during script execution.\n; Useful for internal debugging only.\n;opcache.protect_memory=0\n\n; Allows calling OPcache API functions only from PHP scripts which path is\n; started from specified string. The default \"\" means no restriction\n;opcache.restrict_api=\n\n; Enables and sets the second level cache directory.\n; It should improve performance when SHM memory is full, at server restart or\n; SHM reset. The default \"\" disables file based caching.\n; RPM note : file cache directory must be owned by process owner\n;   for mod_php, see /etc/httpd/conf.d/php.conf\n;   for php-fpm, see /etc/php-fpm.d/*conf\n;opcache.file_cache=\n\n; Enables or disables opcode caching in shared memory.\n;opcache.file_cache_only=0\n\n; Enables or disables checksum validation when script loaded from file cache.\n;opcache.file_cache_consistency_checks=1\n\n; Implies opcache.file_cache_only=1 for a certain process that failed to\n; reattach to the shared memory (for Windows only). Explicitly enabled file\n; cache is required.\n;opcache.file_cache_fallback=1\n\n; Validate cached file permissions.\n; Leads OPcache to check file readability on each access to cached file.\n; This directive should be enabled in shared hosting environment, when few\n; users (PHP-FPM pools) reuse the common OPcache shared memory.\n;opcache.validate_permission=0\n\n; Prevent name collisions in chroot'ed environment.\n; This directive prevents file name collisions in different \"chroot\"\n; environments. It should be enabled for sites that may serve requests in\n; different \"chroot\" environments.\n;opcache.validate_root=0\n\n; Enables or disables copying of PHP code (text segment) into HUGE PAGES.\n; This should improve performance, but requires appropriate OS configuration.\nopcache.huge_code_pages=1\n\n; Maximum amount of memory a script may consume\n; http://php.net/memory-limit\nmemory_limit = 128M\n\n; Maximum execution time of each script, in seconds\n; http://php.net/max-execution-time\n; Note: This directive is hardcoded to 0 for the CLI SAPI\nmax_execution_time = 30\n\n;;;;;;;;;;;;;;;;\n; File Uploads ;\n;;;;;;;;;;;;;;;;\n\n; Whether to allow HTTP file uploads.\n; http://php.net/file-uploads\nfile_uploads = On\n\n; Temporary directory for HTTP uploaded files (will use system default if not\n; specified).\n; http://php.net/upload-tmp-dir\n;upload_tmp_dir =\n\n; Maximum allowed size for uploaded files.\n; http://php.net/upload-max-filesize\nupload_max_filesize = 2M\n\n; Maximum number of files that can be uploaded via a single request\nmax_file_uploads = 20\n\n;;;;;;;;;;;;;;;;;;\n; Fopen wrappers ;\n;;;;;;;;;;;;;;;;;;\n\n; Whether to allow the treatment of URLs (like http:// or ftp://) as files.\n; http://php.net/allow-url-fopen\nallow_url_fopen = On\n\n; Whether to allow include/require to open URLs (like http:// or ftp://) as files.\n; http://php.net/allow-url-include\nallow_url_include = Off\n\n[Session]\n; Handler used to store/retrieve data.\n; http://php.net/session.save-handler\nsession.save_handler = files\n\n; Argument passed to save_handler.  In the case of files, this is the path\n; where data files are stored. Note: Windows users have to change this\n; variable in order to use PHP's session functions.\n;\n; The path can be defined as:\n;\n;     session.save_path = \"N;/path\"\n;\n; where N is an integer.  Instead of storing all the session files in\n; /path, what this will do is use subdirectories N-levels deep, and\n; store the session data in those directories.  This is useful if\n; your OS has problems with many files in one directory, and is\n; a more efficient layout for servers that handle many sessions.\n;\n; NOTE 1: PHP will not create this directory structure automatically.\n;         You can use the script in the ext/session dir for that purpose.\n; NOTE 2: See the section on garbage collection below if you choose to\n;         use subdirectories for session storage\n;\n; The file storage module creates files using mode 600 by default.\n; You can change that by using\n;\n;     session.save_path = \"N;MODE;/path\"\n;\n; where MODE is the octal representation of the mode. Note that this\n; does not overwrite the process's umask.\n; http://php.net/session.save-path\n;session.save_path = \"/tmp\"\n\n; Whether to use strict session mode.\n; Strict session mode does not accept an uninitialized session ID, and\n; regenerates the session ID if the browser sends an uninitialized session ID.\n; Strict mode protects applications from session fixation via a session adoption\n; vulnerability. It is disabled by default for maximum compatibility, but\n; enabling it is encouraged.\n; https://wiki.php.net/rfc/strict_sessions\nsession.use_strict_mode = 0\n\n; Whether to use cookies.\n; http://php.net/session.use-cookies\nsession.use_cookies = 1\n\n; http://php.net/session.cookie-secure\n;session.cookie_secure =\n\n; This option forces PHP to fetch and use a cookie for storing and maintaining\n; the session id. We encourage this operation as it's very helpful in combating\n; session hijacking when not specifying and managing your own session id. It is\n; not the be-all and end-all of session hijacking defense, but it's a good start.\n; http://php.net/session.use-only-cookies\nsession.use_only_cookies = 1\n\n; Name of the session (used as cookie name).\n; http://php.net/session.name\nsession.name = PHPSESSID\n\n; Initialize session on request startup.\n; http://php.net/session.auto-start\nsession.auto_start = 0\n\n; Lifetime in seconds of cookie or, if 0, until browser is restarted.\n; http://php.net/session.cookie-lifetime\nsession.cookie_lifetime = 0\n\n; The path for which the cookie is valid.\n; http://php.net/session.cookie-path\nsession.cookie_path = /\n\n; The domain for which the cookie is valid.\n; http://php.net/session.cookie-domain\nsession.cookie_domain =\n\n; Whether or not to add the httpOnly flag to the cookie, which makes it\n; inaccessible to browser scripting languages such as JavaScript.\n; http://php.net/session.cookie-httponly\nsession.cookie_httponly =\n\n; Add SameSite attribute to cookie to help mitigate Cross-Site Request Forgery (CSRF/XSRF)\n; Current valid values are \"Strict\", \"Lax\" or \"None\". When using \"None\",\n; make sure to include the quotes, as `none` is interpreted like `false` in ini files.\n; https://tools.ietf.org/html/draft-west-first-party-cookies-07\nsession.cookie_samesite =\n\n; Handler used to serialize data. php is the standard serializer of PHP.\n; http://php.net/session.serialize-handler\nsession.serialize_handler = php\n\n; Defines the probability that the 'garbage collection' process is started on every\n; session initialization. The probability is calculated by using gc_probability/gc_divisor,\n; e.g. 1/100 means there is a 1% chance that the GC process starts on each request.\n; Default Value: 1\n; Development Value: 1\n; Production Value: 1\n; http://php.net/session.gc-probability\nsession.gc_probability = 1\n\n; Defines the probability that the 'garbage collection' process is started on every\n; session initialization. The probability is calculated by using gc_probability/gc_divisor,\n; e.g. 1/100 means there is a 1% chance that the GC process starts on each request.\n; For high volume production servers, using a value of 1000 is a more efficient approach.\n; Default Value: 100\n; Development Value: 1000\n; Production Value: 1000\n; http://php.net/session.gc-divisor\nsession.gc_divisor = 1000\n\n; After this number of seconds, stored data will be seen as 'garbage' and\n; cleaned up by the garbage collection process.\n; http://php.net/session.gc-maxlifetime\nsession.gc_maxlifetime = 1440\n\n; NOTE: If you are using the subdirectory option for storing session files\n;       (see session.save_path above), then garbage collection does *not*\n;       happen automatically.  You will need to do your own garbage\n;       collection through a shell script, cron entry, or some other method.\n;       For example, the following script is the equivalent of setting\n;       session.gc_maxlifetime to 1440 (1440 seconds = 24 minutes):\n;          find /path/to/sessions -cmin +24 -type f | xargs rm\n\n; Check HTTP Referer to invalidate externally stored URLs containing ids.\n; HTTP_REFERER has to contain this substring for the session to be\n; considered as valid.\n; http://php.net/session.referer-check\nsession.referer_check =\n\n; Set to {nocache,private,public,} to determine HTTP caching aspects\n; or leave this empty to avoid sending anti-caching headers.\n; http://php.net/session.cache-limiter\nsession.cache_limiter = nocache\n\n; Document expires after n minutes.\n; http://php.net/session.cache-expire\nsession.cache_expire = 180\n\n; trans sid support is disabled by default.\n; Use of trans sid may risk your users' security.\n; Use this option with caution.\n; - User may send URL contains active session ID\n;   to other person via. email/irc/etc.\n; - URL that contains active session ID may be stored\n;   in publicly accessible computer.\n; - User may access your site with the same session ID\n;   always using URL stored in browser's history or bookmarks.\n; http://php.net/session.use-trans-sid\nsession.use_trans_sid = 0\n\n; Set session ID character length. This value could be between 22 to 256.\n; Shorter length than default is supported only for compatibility reason.\n; Users should use 32 or more chars.\n; http://php.net/session.sid-length\n; Default Value: 32\n; Development Value: 26\n; Production Value: 26\nsession.sid_length = 26\n\n; The URL rewriter will look for URLs in a defined set of HTML tags.\n; <form> is special; if you include them here, the rewriter will\n; add a hidden <input> field with the info which is otherwise appended\n; to URLs. <form> tag's action attribute URL will not be modified\n; unless it is specified.\n; Note that all valid entries require a \"=\", even if no value follows.\n; Default Value: \"a=href,area=href,frame=src,form=\"\n; Development Value: \"a=href,area=href,frame=src,form=\"\n; Production Value: \"a=href,area=href,frame=src,form=\"\n; http://php.net/url-rewriter.tags\nsession.trans_sid_tags = \"a=href,area=href,frame=src,form=\"\n\n; URL rewriter does not rewrite absolute URLs by default.\n; To enable rewrites for absolute paths, target hosts must be specified\n; at RUNTIME. i.e. use ini_set()\n; <form> tags is special. PHP will check action attribute's URL regardless\n; of session.trans_sid_tags setting.\n; If no host is defined, HTTP_HOST will be used for allowed host.\n; Example value: php.net,www.php.net,wiki.php.net\n; Use \",\" for multiple hosts. No spaces are allowed.\n; Default Value: \"\"\n; Development Value: \"\"\n; Production Value: \"\"\n;session.trans_sid_hosts=\"\"\n\n; Define how many bits are stored in each character when converting\n; the binary hash data to something readable.\n; Possible values:\n;   4  (4 bits: 0-9, a-f)\n;   5  (5 bits: 0-9, a-v)\n;   6  (6 bits: 0-9, a-z, A-Z, \"-\", \",\")\n; Default Value: 4\n; Development Value: 5\n; Production Value: 5\n; http://php.net/session.hash-bits-per-character\nsession.sid_bits_per_character = 5\n\n; Enable upload progress tracking in $_SESSION\n; Default Value: On\n; Development Value: On\n; Production Value: On\n; http://php.net/session.upload-progress.enabled\n;session.upload_progress.enabled = On\n\n; Cleanup the progress information as soon as all POST data has been read\n; (i.e. upload completed).\n; Default Value: On\n; Development Value: On\n; Production Value: On\n; http://php.net/session.upload-progress.cleanup\n;session.upload_progress.cleanup = On\n\n; A prefix used for the upload progress key in $_SESSION\n; Default Value: \"upload_progress_\"\n; Development Value: \"upload_progress_\"\n; Production Value: \"upload_progress_\"\n; http://php.net/session.upload-progress.prefix\n;session.upload_progress.prefix = \"upload_progress_\"\n\n; The index name (concatenated with the prefix) in $_SESSION\n; containing the upload progress information\n; Default Value: \"PHP_SESSION_UPLOAD_PROGRESS\"\n; Development Value: \"PHP_SESSION_UPLOAD_PROGRESS\"\n; Production Value: \"PHP_SESSION_UPLOAD_PROGRESS\"\n; http://php.net/session.upload-progress.name\n;session.upload_progress.name = \"PHP_SESSION_UPLOAD_PROGRESS\"\n\n; How frequently the upload progress should be updated.\n; Given either in percentages (per-file), or in bytes\n; Default Value: \"1%\"\n; Development Value: \"1%\"\n; Production Value: \"1%\"\n; http://php.net/session.upload-progress.freq\n;session.upload_progress.freq =  \"1%\"\n\n; The minimum delay between updates, in seconds\n; Default Value: 1\n; Development Value: 1\n; Production Value: 1\n; http://php.net/session.upload-progress.min-freq\n;session.upload_progress.min_freq = \"1\"\n\n; Only write session data when session data is changed. Enabled by default.\n; http://php.net/session.lazy-write\n;session.lazy_write = On\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-laravel-octane",
      "labels": {
        "helm.sh/chart": "laravel-octane-1.0.0",
        "app.kubernetes.io/name": "laravel-octane",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "8.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "laravel-octane",
        "app.kubernetes.io/instance": "release-name",
        "octane.laravel.com/pod-type": "web"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-laravel-octane",
      "labels": {
        "helm.sh/chart": "laravel-octane-1.0.0",
        "app.kubernetes.io/name": "laravel-octane",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "8.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "laravel-octane",
          "app.kubernetes.io/instance": "release-name",
          "octane.laravel.com/pod-type": "web"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "laravel-octane",
            "app.kubernetes.io/instance": "release-name",
            "octane.laravel.com/pod-type": "web"
          }
        },
        "spec": {
          "volumes": [
            {
              "name": "env",
              "secret": {
                "secretName": "release-name-env"
              }
            },
            {
              "name": "php-ini-config",
              "configMap": {
                "name": "release-name-php-ini-config"
              }
            }
          ],
          "serviceAccountName": "release-name-laravel-octane",
          "securityContext": {},
          "containers": [
            {
              "name": "octane",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "quay.io/renokico/laravel-helm-demo:octane-0.6.0",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "php",
                "-d",
                "variables_order=EGPCS",
                "artisan",
                "octane:start",
                "--server=swoole",
                "--host=0.0.0.0",
                "--port=80"
              ],
              "volumeMounts": [
                {
                  "name": "env",
                  "mountPath": "/tmp/.env",
                  "subPath": ".env"
                },
                {
                  "name": "php-ini-config",
                  "mountPath": "/usr/local/etc/php/php.ini",
                  "subPath": "php.ini"
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "lifecycle": {
                "postStart": {
                  "exec": {
                    "command": [
                      "/bin/sh",
                      "-c",
                      "cp /tmp/.env /var/www/html/.env && cd /var/www/html && sh deploy.sh"
                    ]
                  }
                }
              }
            },
            {
              "name": "scheduler",
              "securityContext": {},
              "image": "quay.io/renokico/laravel-helm-demo:octane-0.6.0",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "php",
                "artisan",
                "schedule:work"
              ],
              "volumeMounts": [
                {
                  "name": "env",
                  "mountPath": "/tmp/.env",
                  "subPath": ".env"
                },
                {
                  "name": "php-ini-config",
                  "mountPath": "/usr/local/etc/php/php.ini",
                  "subPath": "php.ini"
                }
              ],
              "readinessProbe": {
                "exec": {
                  "command": [
                    "php",
                    "-v"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 5
              },
              "livenessProbe": {
                "exec": {
                  "command": [
                    "php",
                    "-v"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 5
              },
              "resources": {},
              "lifecycle": {
                "postStart": {
                  "exec": {
                    "command": [
                      "/bin/sh",
                      "-c",
                      "cp /tmp/.env /var/www/html/.env && cd /var/www/html && sh deploy.sh"
                    ]
                  }
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-laravel-octane",
      "labels": {
        "helm.sh/chart": "laravel-octane-1.0.0",
        "app.kubernetes.io/name": "laravel-octane",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "8.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "nginx.ingress.kubernetes.io/custom-http-errors": "404"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "test.laravel.com",
          "http": {
            "paths": [
              {
                "path": "/",
                "pathType": "Prefix",
                "backend": {
                  "service": {
                    "name": "release-name-laravel-octane",
                    "port": {
                      "number": 80
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    }
  }
]