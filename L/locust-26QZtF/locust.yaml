apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-worker
  labels:
    heritage: Helm
    release: release-name
    chart: locust-1.0.0
    app: release-name-locust
data:
  tasks.py: |-
    from locust import HttpLocust, TaskSet, task

    class ElbTasks(TaskSet):
      @task
      def status(self):
          self.client.get("/status")

    class ElbWarmer(HttpLocust):
      task_set = ElbTasks
      min_wait = 1000
      max_wait = 3000
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-master-svc
  labels:
    heritage: Helm
    release: release-name
    chart: locust-1.0.0
    app: release-name-locust
    component: master
spec:
  type: NodePort
  ports:
    - name: master-web
      port: 8089
      targetPort: 8089
      nodePort: 0
      protocol: TCP
    - name: master-p1
      port: 5557
      protocol: TCP
      targetPort: 5557
    - name: master-p2
      port: 5558
      protocol: TCP
      targetPort: 5558
  selector:
    app: release-name-locust
    component: master
  sessionAffinity: None
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-master
  labels:
    app: release-name-locust
    heritage: Helm
    release: release-name
    chart: locust-1.0.0
    component: master
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        release: release-name
        app: release-name-locust
        component: master
    spec:
      containers:
        - name: locust
          image: greenbirdit/locust:0.9.0
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: TARGET_HOST
              value: https://site.example.com
            - name: LOCUST_MODE
              value: master
            - name: LOCUST_SCRIPT
              value: /locust-tasks/tasks.py
          ports:
            - containerPort: 8089
              name: loc-master-web
              protocol: TCP
            - containerPort: 5557
              name: loc-master-p1
              protocol: TCP
            - containerPort: 5558
              name: loc-master-p2
              protocol: TCP
          volumeMounts:
            - name: locust-tasks
              mountPath: /locust-tasks/
          livenessProbe:
            periodSeconds: 30
            httpGet:
              path: /
              port: 8089
          readinessProbe:
            periodSeconds: 30
            httpGet:
              path: /
              port: 8089
      volumes:
        - name: locust-tasks
          configMap:
            name: release-name-worker
      restartPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-worker
  labels:
    heritage: Helm
    release: release-name
    chart: locust-1.0.0
    app: release-name-locust
    component: worker
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: release-name-locust
        component: worker
    spec:
      containers:
        - name: locust
          image: greenbirdit/locust:0.9.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: locust-tasks
              mountPath: /locust-tasks/
          env:
            - name: LOCUST_SCRIPT
              value: /locust-tasks/tasks.py
            - name: LOCUST_MODE
              value: worker
            - name: LOCUST_MASTER
              value: release-name-master-svc
            - name: LOCUST_MASTER_WEB
              value: "8089"
            - name: TARGET_HOST
              value: https://site.example.com
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      restartPolicy: Always
      volumes:
        - name: locust-tasks
          configMap:
            name: release-name-worker
