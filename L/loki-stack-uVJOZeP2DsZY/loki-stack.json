[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "release-name-loki",
      "labels": {
        "app": "loki",
        "chart": "loki-2.10.2",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "spec": {
      "privileged": false,
      "allowPrivilegeEscalation": false,
      "volumes": [
        "configMap",
        "emptyDir",
        "persistentVolumeClaim",
        "secret",
        "projected",
        "downwardAPI"
      ],
      "hostNetwork": false,
      "hostIPC": false,
      "hostPID": false,
      "runAsUser": {
        "rule": "MustRunAsNonRoot"
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      },
      "fsGroup": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      },
      "readOnlyRootFilesystem": true,
      "requiredDropCapabilities": [
        "ALL"
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "labels": {
        "app": "loki",
        "chart": "loki-2.10.2",
        "heritage": "Helm",
        "release": "release-name"
      },
      "annotations": {},
      "name": "release-name-loki",
      "namespace": "uVJOZeP2DsZY"
    },
    "automountServiceAccountToken": true
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-promtail",
      "namespace": "uVJOZeP2DsZY",
      "labels": {
        "helm.sh/chart": "promtail-3.11.0",
        "app.kubernetes.io/name": "promtail",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-loki",
      "namespace": "uVJOZeP2DsZY",
      "labels": {
        "app": "loki",
        "chart": "loki-2.10.2",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "loki.yaml": "YXV0aF9lbmFibGVkOiBmYWxzZQpjaHVua19zdG9yZV9jb25maWc6CiAgbWF4X2xvb2tfYmFja19wZXJpb2Q6IDBzCmNvbXBhY3RvcjoKICBzaGFyZWRfc3RvcmU6IGZpbGVzeXN0ZW0KICB3b3JraW5nX2RpcmVjdG9yeTogL2RhdGEvbG9raS9ib2x0ZGItc2hpcHBlci1jb21wYWN0b3IKaW5nZXN0ZXI6CiAgY2h1bmtfYmxvY2tfc2l6ZTogMjYyMTQ0CiAgY2h1bmtfaWRsZV9wZXJpb2Q6IDNtCiAgY2h1bmtfcmV0YWluX3BlcmlvZDogMW0KICBsaWZlY3ljbGVyOgogICAgcmluZzoKICAgICAga3ZzdG9yZToKICAgICAgICBzdG9yZTogaW5tZW1vcnkKICAgICAgcmVwbGljYXRpb25fZmFjdG9yOiAxCiAgbWF4X3RyYW5zZmVyX3JldHJpZXM6IDAKICB3YWw6CiAgICBkaXI6IC9kYXRhL2xva2kvd2FsCmxpbWl0c19jb25maWc6CiAgZW5mb3JjZV9tZXRyaWNfbmFtZTogZmFsc2UKICByZWplY3Rfb2xkX3NhbXBsZXM6IHRydWUKICByZWplY3Rfb2xkX3NhbXBsZXNfbWF4X2FnZTogMTY4aApzY2hlbWFfY29uZmlnOgogIGNvbmZpZ3M6CiAgLSBmcm9tOiAiMjAyMC0xMC0yNCIKICAgIGluZGV4OgogICAgICBwZXJpb2Q6IDI0aAogICAgICBwcmVmaXg6IGluZGV4XwogICAgb2JqZWN0X3N0b3JlOiBmaWxlc3lzdGVtCiAgICBzY2hlbWE6IHYxMQogICAgc3RvcmU6IGJvbHRkYi1zaGlwcGVyCnNlcnZlcjoKICBodHRwX2xpc3Rlbl9wb3J0OiAzMTAwCnN0b3JhZ2VfY29uZmlnOgogIGJvbHRkYl9zaGlwcGVyOgogICAgYWN0aXZlX2luZGV4X2RpcmVjdG9yeTogL2RhdGEvbG9raS9ib2x0ZGItc2hpcHBlci1hY3RpdmUKICAgIGNhY2hlX2xvY2F0aW9uOiAvZGF0YS9sb2tpL2JvbHRkYi1zaGlwcGVyLWNhY2hlCiAgICBjYWNoZV90dGw6IDI0aAogICAgc2hhcmVkX3N0b3JlOiBmaWxlc3lzdGVtCiAgZmlsZXN5c3RlbToKICAgIGRpcmVjdG9yeTogL2RhdGEvbG9raS9jaHVua3MKdGFibGVfbWFuYWdlcjoKICByZXRlbnRpb25fZGVsZXRlc19lbmFibGVkOiBmYWxzZQogIHJldGVudGlvbl9wZXJpb2Q6IDBz"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-promtail",
      "namespace": "uVJOZeP2DsZY",
      "labels": {
        "helm.sh/chart": "promtail-3.11.0",
        "app.kubernetes.io/name": "promtail",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "stringData": {
      "promtail.yaml": "server:\n  log_level: info\n  http_listen_port: 3101\n\nclient:\n  url: http://loki-gateway/loki/api/v1/push\n  \n\npositions:\n  filename: /run/promtail/positions.yaml\n\nscrape_configs:\n  # See also https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet for reference\n  - job_name: kubernetes-pods\n    pipeline_stages:\n      - cri: {}\n    kubernetes_sd_configs:\n      - role: pod\n    relabel_configs:\n      - source_labels:\n          - __meta_kubernetes_pod_controller_name\n        regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?\n        action: replace\n        target_label: __tmp_controller_name\n      - source_labels:\n          - __meta_kubernetes_pod_label_app_kubernetes_io_name\n          - __meta_kubernetes_pod_label_app\n          - __tmp_controller_name\n          - __meta_kubernetes_pod_name\n        regex: ^;*([^;]+)(;.*)?$\n        action: replace\n        target_label: app\n      - source_labels:\n          - __meta_kubernetes_pod_label_app_kubernetes_io_component\n          - __meta_kubernetes_pod_label_component\n        regex: ^;*([^;]+)(;.*)?$\n        action: replace\n        target_label: component\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_pod_node_name\n        target_label: node_name\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_namespace\n        target_label: namespace\n      - action: replace\n        replacement: $1\n        separator: /\n        source_labels:\n        - namespace\n        - app\n        target_label: job\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_pod_name\n        target_label: pod\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_pod_container_name\n        target_label: container\n      - action: replace\n        replacement: /var/log/pods/*$1/*.log\n        separator: /\n        source_labels:\n        - __meta_kubernetes_pod_uid\n        - __meta_kubernetes_pod_container_name\n        target_label: __path__\n      - action: replace\n        regex: true/(.*)\n        replacement: /var/log/pods/*$1/*.log\n        separator: /\n        source_labels:\n        - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash\n        - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash\n        - __meta_kubernetes_pod_container_name\n        target_label: __path__\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-loki-stack",
      "namespace": "uVJOZeP2DsZY",
      "labels": {
        "app": "loki-stack",
        "chart": "loki-stack-2.10.2",
        "release": "release-name",
        "heritage": "Helm",
        "grafana_datasource": "1"
      }
    },
    "data": {
      "loki-stack-datasource.yaml": "apiVersion: 1\ndatasources:\n- name: Loki\n  type: loki\n  access: proxy\n  url: http://release-name-loki:3100\n  version: 1"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-loki-stack-test",
      "labels": {
        "app": "loki-stack",
        "chart": "loki-stack-2.10.2",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "test.sh": "#!/usr/bin/env bash\n\nLOKI_URI=\"http://${LOKI_SERVICE}:${LOKI_PORT}\"\n\nfunction setup() {\n  apk add -u curl jq\n  until (curl -s ${LOKI_URI}/api/prom/label/app/values | jq -e '.values[] | select(. == \"loki\")'); do\n    sleep 1\n  done\n}\n\n@test \"Has labels\" {\n  curl -s ${LOKI_URI}/api/prom/label | \\\n  jq -e '.values[] | select(. == \"app\")'\n}\n\n@test \"Query log entry\" {\n  curl -sG ${LOKI_URI}/api/prom/query?limit=10 --data-urlencode 'query={app=\"loki\"}' | \\\n  jq -e '.streams[].entries | length >= 1'\n}\n\n@test \"Push log entry legacy\" {\n  local timestamp=$(date -Iseconds -u | sed 's/UTC/.000000000+00:00/')\n  local data=$(jq -n --arg timestamp \"${timestamp}\" '{\"streams\": [{\"labels\": \"{app=\\\"loki-test\\\"}\", \"entries\": [{\"ts\": $timestamp, \"line\": \"foobar\"}]}]}')\n\n  curl -s -X POST -H \"Content-Type: application/json\" ${LOKI_URI}/api/prom/push -d \"${data}\"\n\n  curl -sG ${LOKI_URI}/api/prom/query?limit=1 --data-urlencode 'query={app=\"loki-test\"}' | \\\n  jq -e '.streams[].entries[].line == \"foobar\"'\n}\n\n@test \"Push log entry\" {\n  local timestamp=$(date +%s000000000)\n  local data=$(jq -n --arg timestamp \"${timestamp}\" '{\"streams\": [{\"stream\": {\"app\": \"loki-test\"}, \"values\": [[$timestamp, \"foobar\"]]}]}')\n\n  curl -s -X POST -H \"Content-Type: application/json\" ${LOKI_URI}/loki/api/v1/push -d \"${data}\"\n\n  curl -sG ${LOKI_URI}/api/prom/query?limit=1 --data-urlencode 'query={app=\"loki-test\"}' | \\\n  jq -e '.streams[].entries[].line == \"foobar\"'\n}\n"
    }
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-promtail",
      "labels": {
        "helm.sh/chart": "promtail-3.11.0",
        "app.kubernetes.io/name": "promtail",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes",
          "nodes/proxy",
          "services",
          "endpoints",
          "pods"
        ],
        "verbs": [
          "get",
          "watch",
          "list"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-promtail",
      "labels": {
        "helm.sh/chart": "promtail-3.11.0",
        "app.kubernetes.io/name": "promtail",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-promtail",
        "namespace": "default"
      }
    ],
    "roleRef": {
      "kind": "ClusterRole",
      "name": "release-name-promtail",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-loki",
      "namespace": "uVJOZeP2DsZY",
      "labels": {
        "app": "loki",
        "chart": "loki-2.10.2",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ],
        "resourceNames": [
          "release-name-loki"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-loki",
      "namespace": "uVJOZeP2DsZY",
      "labels": {
        "app": "loki",
        "chart": "loki-2.10.2",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-loki"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-loki"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-loki-headless",
      "namespace": "uVJOZeP2DsZY",
      "labels": {
        "app": "loki",
        "chart": "loki-2.10.2",
        "release": "release-name",
        "heritage": "Helm",
        "variant": "headless"
      }
    },
    "spec": {
      "clusterIP": "None",
      "ports": [
        {
          "port": 3100,
          "protocol": "TCP",
          "name": "http-metrics",
          "targetPort": "http-metrics"
        }
      ],
      "selector": {
        "app": "loki",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-loki",
      "namespace": "uVJOZeP2DsZY",
      "labels": {
        "app": "loki",
        "chart": "loki-2.10.2",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {}
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 3100,
          "protocol": "TCP",
          "name": "http-metrics",
          "targetPort": "http-metrics"
        }
      ],
      "selector": {
        "app": "loki",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "loki-gateway",
      "namespace": "uVJOZeP2DsZY",
      "labels": {
        "app": "loki-stack",
        "chart": "loki-stack-2.10.2",
        "release": "release-name"
      },
      "annotations": {}
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "protocol": "TCP",
          "name": "http",
          "targetPort": "http-metrics"
        }
      ],
      "selector": {
        "app": "loki",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "release-name-promtail",
      "namespace": "uVJOZeP2DsZY",
      "labels": {
        "helm.sh/chart": "promtail-3.11.0",
        "app.kubernetes.io/name": "promtail",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "promtail",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "updateStrategy": {},
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "promtail",
            "app.kubernetes.io/instance": "release-name"
          },
          "annotations": {
            "checksum/config": "b15ed369bd14a3d7368b9dce5474d12fdc6684893d5579139d88d2a7fee5b300"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-promtail",
          "securityContext": {
            "runAsGroup": 0,
            "runAsUser": 0
          },
          "containers": [
            {
              "name": "promtail",
              "image": "docker.io/grafana/promtail:2.4.2",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "-config.file=/etc/promtail/promtail.yaml"
              ],
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etc/promtail"
                },
                {
                  "name": "run",
                  "mountPath": "/run/promtail"
                },
                {
                  "mountPath": "/var/lib/docker/containers",
                  "name": "containers",
                  "readOnly": true
                },
                {
                  "mountPath": "/var/log/pods",
                  "name": "pods",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "HOSTNAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "spec.nodeName"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "name": "http-metrics",
                  "containerPort": 3101,
                  "protocol": "TCP"
                }
              ],
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                },
                "readOnlyRootFilesystem": true
              },
              "readinessProbe": {
                "failureThreshold": 5,
                "httpGet": {
                  "path": "/ready",
                  "port": "http-metrics"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1
              }
            }
          ],
          "tolerations": [
            {
              "effect": "NoSchedule",
              "key": "node-role.kubernetes.io/master",
              "operator": "Exists"
            },
            {
              "effect": "NoSchedule",
              "key": "node-role.kubernetes.io/control-plane",
              "operator": "Exists"
            }
          ],
          "volumes": [
            {
              "name": "config",
              "secret": {
                "secretName": "release-name-promtail"
              }
            },
            {
              "name": "run",
              "hostPath": {
                "path": "/run/promtail"
              }
            },
            {
              "hostPath": {
                "path": "/var/lib/docker/containers"
              },
              "name": "containers"
            },
            {
              "hostPath": {
                "path": "/var/log/pods"
              },
              "name": "pods"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-loki",
      "namespace": "uVJOZeP2DsZY",
      "labels": {
        "app": "loki",
        "chart": "loki-2.10.2",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {}
    },
    "spec": {
      "podManagementPolicy": "OrderedReady",
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "loki",
          "release": "release-name"
        }
      },
      "serviceName": "release-name-loki-headless",
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "loki",
            "name": "loki",
            "release": "release-name"
          },
          "annotations": {
            "checksum/config": "57b3f6cfd4fbfb8b090b2d4cf6071bfae5364c4b094d6b94e919b7cebc212296",
            "prometheus.io/port": "http-metrics",
            "prometheus.io/scrape": "true"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-loki",
          "securityContext": {
            "fsGroup": 10001,
            "runAsGroup": 10001,
            "runAsNonRoot": true,
            "runAsUser": 10001
          },
          "initContainers": [],
          "containers": [
            {
              "name": "loki",
              "image": "grafana/loki:2.4.2",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "-config.file=/etc/loki/loki.yaml"
              ],
              "volumeMounts": [
                {
                  "name": "tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "config",
                  "mountPath": "/etc/loki"
                },
                {
                  "name": "storage",
                  "mountPath": "/data",
                  "subPath": null
                }
              ],
              "ports": [
                {
                  "name": "http-metrics",
                  "containerPort": 3100,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/ready",
                  "port": "http-metrics"
                },
                "initialDelaySeconds": 45
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/ready",
                  "port": "http-metrics"
                },
                "initialDelaySeconds": 45
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                },
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "securityContext": {
                "readOnlyRootFilesystem": true,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "env": null
            }
          ],
          "nodeSelector": {},
          "affinity": {},
          "tolerations": [],
          "terminationGracePeriodSeconds": 4800,
          "volumes": [
            {
              "name": "tmp",
              "emptyDir": {}
            },
            {
              "name": "config",
              "secret": {
                "secretName": "release-name-loki"
              }
            },
            {
              "name": "storage",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "annotations": {
        "helm.sh/hook": "test-success"
      },
      "labels": {
        "app": "loki-stack",
        "chart": "loki-stack-2.10.2",
        "release": "release-name",
        "heritage": "Helm"
      },
      "name": "release-name-loki-stack-test"
    },
    "spec": {
      "containers": [
        {
          "name": "test",
          "image": "bats/bats:v1.1.0",
          "args": [
            "/var/lib/loki/test.sh"
          ],
          "env": [
            {
              "name": "LOKI_SERVICE",
              "value": "release-name-loki"
            },
            {
              "name": "LOKI_PORT",
              "value": "3100"
            }
          ],
          "volumeMounts": [
            {
              "name": "tests",
              "mountPath": "/var/lib/loki"
            }
          ]
        }
      ],
      "restartPolicy": "Never",
      "volumes": [
        {
          "name": "tests",
          "configMap": {
            "name": "release-name-loki-stack-test"
          }
        }
      ]
    }
  }
]