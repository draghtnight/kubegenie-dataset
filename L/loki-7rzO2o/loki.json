[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "annotations": {
        "seccomp.security.alpha.kubernetes.io/allowedProfileNames": "runtime/default,docker/default",
        "seccomp.security.alpha.kubernetes.io/defaultProfileName": "runtime/default"
      },
      "labels": {
        "helm.sh/chart": "loki-1.7.3",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "loki",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.1"
      },
      "name": "release-name-loki"
    },
    "spec": {
      "privileged": false,
      "readOnlyRootFilesystem": true,
      "allowPrivilegeEscalation": false,
      "requiredDropCapabilities": [
        "ALL"
      ],
      "fsGroup": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      },
      "runAsUser": {
        "rule": "MustRunAsNonRoot"
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      },
      "volumes": [
        "secret",
        "configMap",
        "emptyDir",
        "downwardAPI",
        "projected",
        "persistentVolumeClaim"
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "labels": {
        "helm.sh/chart": "loki-1.7.3",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "loki",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.1"
      },
      "name": "release-name-loki"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "labels": {
        "helm.sh/chart": "loki-1.7.3",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "loki",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.1"
      },
      "name": "release-name-loki"
    },
    "type": "Opaque",
    "stringData": {
      "loki.yaml": "target: all\nauth_enabled: false\nserver:\n  http_listen_address: 0.0.0.0\n  http_listen_port: 3100\n  grpc_listen_address: 0.0.0.0\n  grpc_listen_port: 9095\n  register_instrumentation: true\n  graceful_shutdown_timeout: 30s\n  http_server_read_timeout: 30s\n  http_server_write_timeout: 30s\n  http_server_idle_timeout: 120s\n  grpc_server_max_recv_msg_size: 4194304\n  grpc_server_max_send_msg_size: 4194304\n  grpc_server_max_concurrent_streams: 100\n  log_level: warn\nquerier:\n  query_timeout: 1m\n  tail_max_duration: 1h\n  extra_query_delay: 0s\n  query_ingesters_within: 0s\n  engine:\n    timeout: 3m\n    max_look_back_period: 30s\nfrontend:\n  max_outstanding_per_tenant: 100\n  compress_responses: false\n  log_queries_longer_than: 0s\ningester:\n  lifecycler:\n    num_tokens: 128\n    heartbeat_period: 5s\n    join_after: 0s\n    min_ready_duration: 1m\n    final_sleep: 30s\n    ring:\n      heartbeat_timeout: 1m\n      replication_factor: 1\n      kvstore:\n        store: inmemory\n  max_transfer_retries: 10\n  concurrent_flushes: 16\n  flush_check_period: 30s\n  flush_op_timeout: 10s\n  chunk_retain_period: 15m\n  chunk_idle_period: 30m\n  chunk_block_size: 262144\n  chunk_target_size: 1536000\n  chunk_encoding: gzip\n  sync_period: 0s\n  sync_min_utilization: 0\n  max_returned_stream_errors: 10\n  max_chunk_age: 1h\n  query_store_max_look_back_period: 0s\nstorage_config:\n  aws:\n    s3forcepathstyle: false\n    insecure: false\n    sse_encryption: false\n    http_config:\n      idle_conn_timeout: 1m30s\n      response_header_timeout: 0s\n      insecure_skip_verify: false\n    dynamodb:\n      api_limit: 2\n      throttle_limit: 10\n      metrics:\n        target_queue_length: 100000\n        scale_up_factor: 1.3\n        ignore_throttle_below: 1\n        queue_length_query: sum(avg_over_time(cortex_ingester_flush_queue_length{job=\"cortex/ingester\"}[2m]))\n        write_throttle_query: sum(rate(cortex_dynamo_throttled_total{operation=\"DynamoDB.BatchWriteItem\"}[1m])) by (table) > 0\n        write_usage_query: sum(rate(cortex_dynamo_consumed_capacity_total{operation=\"DynamoDB.BatchWriteItem\"}[15m])) by (table) > 0\n        read_usage_query: sum(rate(cortex_dynamo_consumed_capacity_total{operation=\"DynamoDB.QueryPages\"}[1h])) by (table) > 0\n        read_error_query: sum(increase(cortex_dynamo_failures_total{operation=\"DynamoDB.QueryPages\",error=\"ProvisionedThroughputExceededException\"}[1m])) by (table) > 0\n      chunk_gang_size: 10\n      chunk_get_max_parallelism: 32\n  bigtable:\n    grpc_client_config:\n      max_recv_msg_size: 104857600\n      max_send_msg_size: 16777216\n      grpc_compression: gzip\n      rate_limit: 0\n      rate_limit_burst: 0\n      backoff_on_ratelimits: false\n  gcs:\n    chunk_buffer_size: 0\n    request_timeout: 0s\n  cassandra:\n    port: 9042\n    consistency: QUORUM\n    replication_factor: 1\n    disable_initial_host_lookup: false\n    SSL: false\n    host_verification: true\n    auth: false\n    timeout: 600ms\n    connect_timeout: 600ms\n  swift:\n    container_name: cortex\n  boltdb:\n    directory: /data/loki/index\n  filesystem:\n    directory: /data/loki/chunks\n  index_cache_validity: 5m\n  max_chunk_batch_size: 50\n  index_queries_cache_config:\n    default_validity: 1h\n    background:\n      writeback_goroutines: 10\n      writeback_buffer: 10\n    memcached:\n      expiration: 1h\n      batch_size: 262144\n      parallelism: 100\n    memcached_client:\n      service: memcached\n      timeout: 100ms\n      max_idle_conns: 100\n      update_interval: 1m\n      consistent_hash: true\n    redis:\n      timeout: 100ms\n      expiration: 0s\n      db: 1\n      pool_size: 0\n      idle_timeout: 0s\n      max_connection_age: 0s\n    fifocache:\n      max_size_items: 0\n      validity: 0s\nchunk_store_config:\n  chunk_cache_config:\n    default_validity: 1h\n    background:\n      writeback_goroutines: 10\n      writeback_buffer: 10\n    memcached:\n      expiration: 1h\n      batch_size: 262144\n      parallelism: 100\n    memcached_client:\n      service: memcached\n      timeout: 100ms\n      max_idle_conns: 100\n      update_interval: 1m\n      consistent_hash: true\n    redis:\n      timeout: 100ms\n      expiration: 0s\n      db: 1\n      pool_size: 0\n      idle_timeout: 0s\n      max_connection_age: 0s\n    fifocache:\n      max_size_items: 0\n      validity: 0s\n  write_dedupe_cache_config:\n    default_validity: 1h\n    background:\n      writeback_goroutines: 10\n      writeback_buffer: 10\n    memcached:\n      expiration: 1h\n      batch_size: 262144\n      parallelism: 100\n    memcached_client:\n      service: memcached\n      timeout: 100ms\n      max_idle_conns: 100\n      update_interval: 1m\n      consistent_hash: true\n    redis:\n      timeout: 100ms\n      expiration: 0s\n      db: 1\n      pool_size: 0\n      idle_timeout: 0s\n      max_connection_age: 0s\n    fifocache:\n      max_size_items: 0\n      validity: 0s\n  cache_lookups_older_than: 0s\n  max_look_back_period: 0s\nschema_config:\n  configs:\n    - from: 2020-11-01\n      store: boltdb\n      object_store: filesystem\n      schema: v11\n      row_shards: 16\n      index:\n        prefix: index_\n        period: 24h\n      chunks:\n        prefix: \n        period: 168h\nlimits_config:\n  ingestion_rate_strategy: local\n  ingestion_rate_mb: 4\n  ingestion_burst_size_mb: 6\n  max_label_name_length: 1024\n  max_label_value_length: 2048\n  max_label_names_per_series: 30\n  reject_old_samples: true\n  reject_old_samples_max_age: 336h\n  creation_grace_period: 10m\n  enforce_metric_name: false\n  max_streams_per_user: 10000\n  max_entries_limit_per_query: 5000\n  max_global_streams_per_user: 0\n  max_chunks_per_query: 2000000\n  max_query_length: 0s\n  max_query_parallelism: 14\n  cardinality_limit: 100000\n  max_streams_matchers_per_query: 1000\n  per_tenant_override_period: 10s\ntable_manager:\n  throughput_updates_disabled: false\n  retention_deletes_enabled: false\n  retention_period: 0s\n  poll_interval: 2m\n  creation_grace_period: 10m\n  index_tables_provisioning:\n    enable_ondemand_throughput_mode: false\n    provisioned_write_throughput: 3000\n    provisioned_read_throughput: 300\n    enable_inactive_throughput_on_demand_mode: false\n    inactive_write_throughput: 1\n    inactive_read_throughput: 300\n    write_scale:\n      enabled: false\n      min_capacity: 3000\n      max_capacity: 6000\n      out_cooldown: 1800\n      in_cooldown: 1800\n      target: 80\n    inactive_write_scale:\n      enabled: false\n      min_capacity: 3000\n      max_capacity: 6000\n      out_cooldown: 1800\n      in_cooldown: 1800\n      target: 80\n    read_scale:\n      enabled: false\n      min_capacity: 3000\n      max_capacity: 6000\n      out_cooldown: 1800\n      in_cooldown: 1800\n      target: 80\n    inactive_read_scale:\n      enabled: false\n      min_capacity: 3000\n      max_capacity: 6000\n      out_cooldown: 1800\n      in_cooldown: 1800\n      target: 80\n  chunk_tables_provisioning:\n    enable_ondemand_throughput_mode: false\n    provisioned_write_throughput: 3000\n    provisioned_read_throughput: 300\n    enable_inactive_throughput_on_demand_mode: false\n    inactive_write_throughput: 1\n    inactive_read_throughput: 300\n    write_scale:\n      enabled: false\n      min_capacity: 3000\n      max_capacity: 6000\n      out_cooldown: 1800\n      in_cooldown: 1800\n      target: 80\n    inactive_write_scale:\n      enabled: false\n      min_capacity: 3000\n      max_capacity: 6000\n      out_cooldown: 1800\n      in_cooldown: 1800\n      target: 80\n    read_scale:\n      enabled: false\n      min_capacity: 3000\n      max_capacity: 6000\n      out_cooldown: 1800\n      in_cooldown: 1800\n      target: 80\n    inactive_read_scale:\n      enabled: false\n      min_capacity: 3000\n      max_capacity: 6000\n      out_cooldown: 1800\n      in_cooldown: 1800\n      target: 80\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "labels": {
        "helm.sh/chart": "loki-1.7.3",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "loki",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.1"
      },
      "name": "release-name-loki"
    },
    "rules": [
      {
        "apiGroups": [
          "policy",
          "extensions"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ],
        "resourceNames": [
          "release-name-loki"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "labels": {
        "helm.sh/chart": "loki-1.7.3",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "loki",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.1"
      },
      "name": "release-name-loki"
    },
    "roleRef": {
      "kind": "Role",
      "name": "release-name-loki",
      "apiGroup": "rbac.authorization.k8s.io"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-loki",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "helm.sh/chart": "loki-1.7.3",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "loki",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.1"
      },
      "name": "release-name-loki"
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "protocol": "TCP",
          "port": 80,
          "targetPort": 3100,
          "nodePort": null
        },
        {
          "name": "grpc",
          "protocol": "TCP",
          "port": 9095,
          "targetPort": 9095,
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "loki",
        "app.kubernetes.io/instance": "release-name"
      },
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "helm.sh/chart": "loki-1.7.3",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "loki",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.1"
      },
      "name": "release-name-loki-pods"
    },
    "spec": {
      "selector": {
        "app.kubernetes.io/name": "loki",
        "app.kubernetes.io/instance": "release-name"
      },
      "ports": [],
      "clusterIP": "None",
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "labels": {
        "helm.sh/chart": "loki-1.7.3",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "loki",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.1"
      },
      "name": "release-name-loki"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "loki",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "creationTimestamp": null,
          "labels": {
            "helm.sh/chart": "loki-1.7.3",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "loki",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "2.2.1"
          },
          "annotations": {
            "checksum/secret": "74e079ff924e961636f10dc86431e38d1d9c3ca7e6b268af0949670b23fc7aad"
          }
        },
        "spec": {
          "volumes": [
            {
              "name": "secrets",
              "secret": {
                "secretName": "release-name-loki"
              }
            },
            {
              "name": "configs",
              "configMap": {
                "name": "release-name-loki",
                "optional": true
              }
            }
          ],
          "containers": [
            {
              "name": "loki",
              "image": "quay.io/kube-ops/loki:2.2.1",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "-config.file=/secrets/loki.yaml"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 3100,
                  "protocol": "TCP"
                },
                {
                  "name": "grpc",
                  "containerPort": 9095,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": "http"
                },
                "initialDelaySeconds": 45
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/ready",
                  "port": "http"
                },
                "initialDelaySeconds": 45
              },
              "securityContext": {
                "runAsGroup": 10001,
                "runAsUser": 10240,
                "readOnlyRootFilesystem": true,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "volumeMounts": [
                {
                  "name": "secrets",
                  "mountPath": "/secrets"
                },
                {
                  "name": "configs",
                  "mountPath": "/configs"
                },
                {
                  "name": "data",
                  "mountPath": "/data"
                }
              ]
            }
          ],
          "serviceAccountName": "release-name-loki",
          "securityContext": {
            "fsGroup": 10001,
            "runAsNonRoot": true
          },
          "terminationGracePeriodSeconds": 4800
        }
      },
      "volumeClaimTemplates": [
        {
          "apiVersion": "v1",
          "kind": "PersistentVolumeClaim",
          "metadata": {
            "name": "data",
            "creationTimestamp": null
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            },
            "volumeMode": "Filesystem"
          }
        }
      ],
      "serviceName": "release-name-loki-pods",
      "podManagementPolicy": "OrderedReady",
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "revisionHistoryLimit": 10
    }
  }
]