apiVersion: v1
kind: ServiceAccount
metadata:
  name: locustswarm-master
  labels:
    helm.sh/chart: locustswarm-0.1.1
    app.kubernetes.io/name: locustswarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.4.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: locustswarm-swarm
  labels:
    helm.sh/chart: locustswarm-0.1.1
    app.kubernetes.io/name: locustswarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.4.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: locustswarm-worker
  labels:
    helm.sh/chart: locustswarm-0.1.1
    app.kubernetes.io/name: locustswarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.4.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: default-config
  labels:
    helm.sh/chart: locustswarm-0.1.1
    app.kubernetes.io/name: locustswarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.4.0
    app.kubernetes.io/managed-by: Helm
data:
  docker-entrypoint.sh: |
    #!/bin/sh

    set -eu

    exec /usr/local/bin/locust $@
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: default-lib
  labels:
    helm.sh/chart: locustswarm-0.1.1
    app.kubernetes.io/name: locustswarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.4.0
    app.kubernetes.io/managed-by: Helm
data: {}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: locustswarm-swarm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - configmaps
      - services
      - endpoints
    verbs:
      - get
      - patch
      - watch
      - list
      - create
      - delete
      - update
  - apiGroups:
      - extensions
      - apps
    resources:
      - deployments
    verbs:
      - get
      - patch
      - watch
      - list
      - create
      - delete
      - update
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - patch
      - watch
      - list
      - create
      - delete
      - update
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: locustswarm-swarm
subjects:
  - kind: ServiceAccount
    name: locustswarm-swarm
roleRef:
  kind: Role
  name: locustswarm-swarm
  apiGroup: ""
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-locustswarm
  labels:
    helm.sh/chart: locustswarm-0.1.1
    app.kubernetes.io/name: locustswarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.4.0
    app.kubernetes.io/managed-by: Helm
    component: swarm
spec:
  type: ClusterIP
  ports:
    - name: swarm-p1
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    component: swarm
    app.kubernetes.io/name: locustswarm
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-locustswarm-swarm
  labels:
    component: swarm
    helm.sh/chart: locustswarm-0.1.1
    app.kubernetes.io/name: locustswarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.4.0
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      component: swarm
      app.kubernetes.io/name: locustswarm
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        component: swarm
        app.kubernetes.io/name: locustswarm
        app.kubernetes.io/instance: release-name
    spec:
      securityContext: {}
      serviceAccountName: locustswarm-swarm
      containers:
        - name: locustswarm
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: gicara/swarmadmin:v0.1.1
          command:
            - node
            - app/index.js
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: NAMESPACE
              value: locustswarm
            - name: LOCUST_IMAGE
              value: locustio/locust:2.4.0
          ports:
            - containerPort: 8080
              name: loc-master-web
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 30
            failureThreshold: 2
            httpGet:
              path: /api/ping
              port: 8080
      restartPolicy: Always
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: release-name-locustswarm
  labels:
    helm.sh/chart: locustswarm-0.1.1
    app.kubernetes.io/name: locustswarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.4.0
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: clusterswarm.lacolhost.com
      http:
        paths:
          - path: /
            backend:
              serviceName: release-name-locustswarm
              servicePort: 8080
