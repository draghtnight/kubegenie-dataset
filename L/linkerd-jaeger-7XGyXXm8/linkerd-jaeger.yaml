kind: Namespace
apiVersion: v1
metadata:
  name: linkerd-jaeger
  labels:
    linkerd.io/extension: jaeger
  annotations:
    linkerd.io/inject: enabled
    config.linkerd.io/proxy-await: enabled
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: collector
  namespace: linkerd-jaeger
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: jaeger-injector
  namespace: linkerd-jaeger
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: jaeger
  namespace: linkerd-jaeger
---
kind: Secret
apiVersion: v1
metadata:
  name: jaeger-injector-k8s-tls
  namespace: linkerd-jaeger
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRTW8rdFBxU1VGbmRYMHdDZ0pxSVJuREFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKcVlXVm5aWEl0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzFxWVdWblpYSXVjM1pqTUI0WApEVEl5TURZeE1qRXhNamt6T1ZvWERUSXpNRFl4TWpFeE1qa3pPVm93TFRFck1Da0dBMVVFQXhNaWFtRmxaMlZ5CkxXbHVhbVZqZEc5eUxteHBibXRsY21RdGFtRmxaMlZ5TG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFOMm9xQXNUc3RVNm5nQWdQRTRvSlZXUWlKYmJ3MFdXZVZZR0FFMjdtN0lKbTM1eQp3ekxRNHhxcWdqQUpCTU5neVdpbFBSa0U4ejdXdGdmRXIxL1lEdmVnTDFSUWhqalZmakpzeXd6cG1ibU5YOFB5CkluSGRiVkdkbVV0Smlja2QycTNHN0tPZ2JoR1ZEeWNiZEI3YnM2V0hlSDQ2ald0ZWJoQnRzaHZzdXBJSDJ5RlMKUjUvWTdnL2pQNW1vMzJQbitxQWkyQi8ya0c2QlNpdWxGTDlZd3hmLzIvTDI5MnI5aSs0UnB6RUhPWDRFWmdqawpWREgyVXl6cjluS0pqMEJLb1NhVjhzdXQvMGphNG96Y2VqaGhpZmVsZUh6eVovQjhqQVFnV211MGxDMnRZT1ZJCi9IbEVQcm9RMUdSK214emYzUXlQSFBjMDFIK2FBUGFqZlliSlBJa0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0ltcGhaV2RsY2kxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTFdwaFpXZGxjaTV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ056Vi9yWkdMSzl6VklLRHF2a0VoUVhZYnkrSTBHd01oeWcKVEVDbW9FbzRVVVRYNVV3eWU0Z1hEdnk1dHFWSHZqYWZCVzBNVDE3cmgrcEN6eVhKM1U1T0MvQlA3b1JtQXAvVgpNeVIxNi9ZdWE1NkhwZzNuTno2dXR3cUhoUmo1dGxZYWNTeVhuekU5WWdwNThuRUdWa0JBMlJuOHNUb0g3YXl2Ck81ZCs1RTRwS1BVOVYyYmUxVU1iczhoUU5WQzF4MjY1ZklEOC9tMG41NGIraExEWFIyUFNFUVZkM2ZwcUlqRnMKT0VtOFN4QWV5WHZ3dzNkdDlLeE85a3c5RGFNc09NU2hmODlEN2EvTDVmdENSRHI2d1Vvb3p6WlJEbHA0Y1VyMApjcXNwVlFFQTBadHZLc2VVcVdhR0lRa2o0K21mL0t6c3hoUHlSL3BhODdWajJjQmNZVXM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM2Fpb0N4T3kxVHFlQUNBOFRpZ2xWWkNJbHR2RFJaWjVWZ1lBVGJ1YnNnbWJmbkxECk10RGpHcXFDTUFrRXcyREphS1U5R1FUelB0YTJCOFN2WDlnTzk2QXZWRkNHT05WK01tekxET21adVkxZncvSWkKY2QxdFVaMlpTMG1KeVIzYXJjYnNvNkJ1RVpVUEp4dDBIdHV6cFlkNGZqcU5hMTV1RUcyeUcreTZrZ2ZiSVZKSApuOWp1RCtNL21hamZZK2Y2b0NMWUgvYVFib0ZLSzZVVXYxakRGLy9iOHZiM2F2Mkw3aEduTVFjNWZnUm1DT1JVCk1mWlRMT3YyY29tUFFFcWhKcFh5eTYzL1NOcmlqTng2T0dHSjk2VjRmUEpuOEh5TUJDQmFhN1NVTGExZzVVajgKZVVRK3VoRFVaSDZiSE4vZERJOGM5elRVZjVvQTlxTjloc2s4aVFJREFRQUJBb0lCQVFDRWRkRldMVU5sWVU0aQpUU0U4bzRrTUJQOWJCNkU5NkpwQjZmd3NkN3luUEU2TDFoRUlRUVEyWDBiRlpkNU8wM3dJNlJZRjZZdGpOZlE1CjJEUGxWcnc3QnFMQ0JBengwY05FWnZkQWxDaWxWZkt3cWZZampXdFNwcGVCQWtVd3hvSno3cmhqWCsvbTJlamcKT2V1K3RSUTZDeWJhYUNzeXlvK0RpY295SGRtd2dad3drOXgyVTlzRWdZcVdTSWEwMW1sZk9Jd2h6L2wrbDd5SgpSZFBhR2ova0g5SWd2eW1OejZvWk9RT2UvN2JpZEhEL2lOMWJKdjZBc21OVkVTRE5JM3ZMVjVPZ2Z3WGN2d2JRCnhXWktyZjBNM3YxK3l6Tk5mSDNzNnllZ1Z0ZzZKTVpCWWNEcnhubjNrTVlnMXFINStSMXM1VDRpR3h1QTdiZ3UKdXBxdWJyb0JBb0dCQVB2SzZDRlpBblZob0lsdVVUMUVZTVdpdUhVcXdrZmpWRnJxek5sdWdkVGcwamFCdFkxQgpsemRwSUU2SXdveHdZZUdUVnFlRHF3SlRqcWlwcFZFZzFOZVRuekZRRXB4M0lQOG1SVnBiN0dtb0ZqMktvWXVpCkEvZUEvZlRJQlNhcmNrZ1lTeDFlc0dxMXZZWjRUVTk3TVNpZU9LRUwwdVZDK2tBalQ4SVlPbHU1QW9HQkFPRmMKMktudm5IR1JCbk11NTI2dkpMTG1qUStkRndldkE2ZXZFQXdMSG84TmxNZUI3YlJ2L0xtbDVLSTFDNDlQZ0k2RwpscmNqcWRNUGUxaVBoZkpCMTBGYjB6cS82UTArVG50Q3ZmdjJLRnlxRFZobTVmeDlBMWZlajd6cmFqMlRad3ZsCmZha01rUityNFZJbDF5MGtEZnlIb1ZKVEg2U0pRRlpvRGxzN2RXOVJBb0dCQUpvMnRTT3ZpMlR2TFU3ZTVSemMKSTFVSWkyY2ZrQ3hOWEYzdXp4WWdxNTRCTUY2MzVNVW1OZ0oyL1pWOEI0UFNWUEMrdCtVVExJclpPRmV1eDVTLwp3ZnhpNnE1ZU4zZmpNcTl5OWlrWWdkeFlXWDdKeUpWbjNud1pZZkVwREphWmpQNEErd2g2OVJ2MlFhVDVTNGh4CmtETXJiTTJlRzBYVlZzWXZtbXJyUWRycEFvR0FiWWxoVGdmR3RIUlcvRGs2QjlSZE5BOVhWTlYzMGlaQTBvb0cKZExRYTRGRXJsV1VUa25ZMEVsQU50c0d0b3JSenVkSzFBc0wwMGo5ZUpvZHNCWG4zRkM5N2xieWRtL0JDMlNweAppVHYyRmtRWlJIU1BLSS9peGh6SkpId1FJV201MWxCdktYR1FRQ0tjMi83RWZZNWV0ZlYrZGJNdFdCM1dCYW1DCkFObi9sR0VDZ1lCTW9IVHV0Y3cxM3pCb0RLbzN6enlldGRWNXdCSDl1dU51dGdqemhEYU5yaGlpaWJwcGovMjcKL29yZjlkdFJ5bmxEQUxzS25STUpVSGZ6eG9UUGhwUlp0Z2VsQ3NQeGFHdjBJQVVBTTJ3WHZqNHBuYXBmS3ZucQorS0JnajYxeGU1RDJsUzVOd0QvR1JNd2lQcWxYTkIyd1lxdk5COTU1aXNyL0l0ZkV4cGNuMEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-config
  namespace: linkerd-jaeger
  labels:
    linkerd.io/extension: jaeger
    component: collector
data:
  collector-config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      opencensus:
      zipkin:
      jaeger:
        protocols:
          grpc:
          thrift_http:
          thrift_compact:
          thrift_binary:
    processors:
      batch:
    extensions:
      health_check:
    exporters:
      jaeger:
        endpoint: jaeger.${POD_NAMESPACE}:14250
        tls:
          insecure: true
    service:
      extensions: [health_check]
      pipelines:
        traces:
          receivers: [otlp,opencensus,zipkin,jaeger]
          processors: [batch]
          exporters: [jaeger]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-jaeger-injector
  labels:
    linkerd.io/extension: jaeger
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-jaeger-injector
  labels:
    linkerd.io/extension: jaeger
subjects:
  - kind: ServiceAccount
    name: jaeger-injector
    namespace: linkerd-jaeger
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-jaeger-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: Service
apiVersion: v1
metadata:
  name: jaeger-injector
  namespace: linkerd-jaeger
  labels:
    linkerd.io/extension: jaeger
    component: jaeger-injector
spec:
  type: ClusterIP
  selector:
    linkerd.io/extension: jaeger
    component: jaeger-injector
  ports:
    - name: jaeger-injector
      port: 443
      targetPort: jaeger-injector
---
apiVersion: v1
kind: Service
metadata:
  name: collector
  namespace: linkerd-jaeger
  labels:
    linkerd.io/extension: jaeger
    component: collector
spec:
  type: ClusterIP
  ports:
    - name: otlp
      port: 4317
      protocol: TCP
      targetPort: 4317
    - name: opencensus
      port: 55678
      protocol: TCP
      targetPort: 55678
    - name: zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    - name: jaeger-thrift
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: jaeger-grpc
      port: 14250
      protocol: TCP
      targetPort: 14250
  selector:
    component: collector
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  namespace: linkerd-jaeger
  labels:
    linkerd.io/extension: jaeger
    component: jaeger
spec:
  type: ClusterIP
  selector:
    component: jaeger
  ports:
    - name: collection
      port: 14268
    - name: grpc
      port: 14250
    - name: ui
      port: 16686
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    linkerd.io/extension: jaeger
    app.kubernetes.io/name: jaeger-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.11.2
    component: jaeger-injector
  name: jaeger-injector
  namespace: linkerd-jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/extension: jaeger
      component: jaeger-injector
  template:
    metadata:
      annotations:
        checksum/config: a8881449d43cf8e41f211277391ec17f49256f91e3e640054ba79ddc7150b27c
      labels:
        linkerd.io/extension: jaeger
        component: jaeger-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - args:
            - -collector-svc-addr=collector.linkerd-jaeger:55678
            - -collector-svc-account=collector
            - -log-level=info
            - -enable-pprof=false
          image: cr.l5d.io/linkerd/jaeger-webhook:stable-2.11.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9995
            initialDelaySeconds: 10
          name: jaeger-injector
          ports:
            - containerPort: 8443
              name: jaeger-injector
            - containerPort: 9995
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9995
          volumeMounts:
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
      serviceAccountName: jaeger-injector
      volumes:
        - name: tls
          secret:
            secretName: jaeger-injector-k8s-tls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    linkerd.io/extension: jaeger
    app.kubernetes.io/name: collector
    app.kubernetes.io/part-of: Linkerd
    component: collector
  name: collector
  namespace: linkerd-jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      component: collector
  minReadySeconds: 5
  progressDeadlineSeconds: 120
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8888"
        prometheus.io/scrape: "true"
      labels:
        linkerd.io/extension: jaeger
        component: collector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - command:
            - /otelcol
            - --config=/conf/collector-config.yaml
          env:
            - name: GOGC
              value: "80"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: otel/opentelemetry-collector:0.43.0
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          name: ot-collector
          ports:
            - containerPort: 13133
            - containerPort: 4317
            - containerPort: 55678
            - containerPort: 9411
            - containerPort: 14268
            - containerPort: 14250
            - containerPort: 8888
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          volumeMounts:
            - mountPath: /conf
              name: collector-config-val
      serviceAccountName: collector
      volumes:
        - configMap:
            items:
              - key: collector-config
                path: collector-config.yaml
            name: collector-config
          name: collector-config-val
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    linkerd.io/extension: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: Linkerd
    component: jaeger
  name: jaeger
  namespace: linkerd-jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      component: jaeger
  template:
    metadata:
      annotations:
        config.linkerd.io/proxy-await: enabled
        prometheus.io/path: /metrics
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
      labels:
        linkerd.io/extension: jaeger
        component: jaeger
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - args:
            - --query.base-path=/jaeger
          image: jaegertracing/all-in-one:1.31
          imagePullPolicy: Always
          name: jaeger
          ports:
            - containerPort: 14269
              name: admin
            - containerPort: 14268
              name: collection
            - containerPort: 14250
              name: grpc
            - containerPort: 16686
              name: ui
      dnsPolicy: ClusterFirst
      serviceAccountName: jaeger
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-jaeger-injector-webhook-config
  labels:
    linkerd.io/extension: jaeger
webhooks:
  - name: jaeger-injector.linkerd.io
    clientConfig:
      service:
        name: jaeger-injector
        namespace: linkerd-jaeger
        path: /
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRTW8rdFBxU1VGbmRYMHdDZ0pxSVJuREFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKcVlXVm5aWEl0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzFxWVdWblpYSXVjM1pqTUI0WApEVEl5TURZeE1qRXhNamt6T1ZvWERUSXpNRFl4TWpFeE1qa3pPVm93TFRFck1Da0dBMVVFQXhNaWFtRmxaMlZ5CkxXbHVhbVZqZEc5eUxteHBibXRsY21RdGFtRmxaMlZ5TG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFOMm9xQXNUc3RVNm5nQWdQRTRvSlZXUWlKYmJ3MFdXZVZZR0FFMjdtN0lKbTM1eQp3ekxRNHhxcWdqQUpCTU5neVdpbFBSa0U4ejdXdGdmRXIxL1lEdmVnTDFSUWhqalZmakpzeXd6cG1ibU5YOFB5CkluSGRiVkdkbVV0Smlja2QycTNHN0tPZ2JoR1ZEeWNiZEI3YnM2V0hlSDQ2ald0ZWJoQnRzaHZzdXBJSDJ5RlMKUjUvWTdnL2pQNW1vMzJQbitxQWkyQi8ya0c2QlNpdWxGTDlZd3hmLzIvTDI5MnI5aSs0UnB6RUhPWDRFWmdqawpWREgyVXl6cjluS0pqMEJLb1NhVjhzdXQvMGphNG96Y2VqaGhpZmVsZUh6eVovQjhqQVFnV211MGxDMnRZT1ZJCi9IbEVQcm9RMUdSK214emYzUXlQSFBjMDFIK2FBUGFqZlliSlBJa0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0ltcGhaV2RsY2kxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTFdwaFpXZGxjaTV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ056Vi9yWkdMSzl6VklLRHF2a0VoUVhZYnkrSTBHd01oeWcKVEVDbW9FbzRVVVRYNVV3eWU0Z1hEdnk1dHFWSHZqYWZCVzBNVDE3cmgrcEN6eVhKM1U1T0MvQlA3b1JtQXAvVgpNeVIxNi9ZdWE1NkhwZzNuTno2dXR3cUhoUmo1dGxZYWNTeVhuekU5WWdwNThuRUdWa0JBMlJuOHNUb0g3YXl2Ck81ZCs1RTRwS1BVOVYyYmUxVU1iczhoUU5WQzF4MjY1ZklEOC9tMG41NGIraExEWFIyUFNFUVZkM2ZwcUlqRnMKT0VtOFN4QWV5WHZ3dzNkdDlLeE85a3c5RGFNc09NU2hmODlEN2EvTDVmdENSRHI2d1Vvb3p6WlJEbHA0Y1VyMApjcXNwVlFFQTBadHZLc2VVcVdhR0lRa2o0K21mL0t6c3hoUHlSL3BhODdWajJjQmNZVXM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
    failurePolicy: Ignore
    admissionReviewVersions:
      - v1
      - v1beta1
    reinvocationPolicy: IfNeeded
    rules:
      - operations:
          - CREATE
        apiGroups:
          - ""
        apiVersions:
          - v1
        resources:
          - pods
    sideEffects: None
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  namespace: linkerd-jaeger
  name: jaeger-injector-webhook
  labels:
    linkerd.io/extension: jaeger
    component: jaeger-injector
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  podSelector:
    matchLabels:
      linkerd.io/extension: jaeger
      component: jaeger-injector
  port: jaeger-injector
  proxyProtocol: TLS
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  namespace: linkerd-jaeger
  name: jaeger-injector-admin
  labels:
    linkerd.io/extension: jaeger
    component: jaeger-injector
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  podSelector:
    matchLabels:
      linkerd.io/extension: jaeger
      component: jaeger-injector
  port: admin-http
  proxyProtocol: HTTP/1
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  namespace: linkerd-jaeger
  name: proxy-admin
  labels:
    linkerd.io/extension: jaeger
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  podSelector:
    matchLabels:
      linkerd.io/extension: jaeger
  port: linkerd-admin
  proxyProtocol: HTTP/1
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  namespace: linkerd-jaeger
  name: collector-otlp
  labels:
    linkerd.io/extension: jaeger
    component: collector
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  podSelector:
    matchLabels:
      component: collector
  port: 4317
  proxyProtocol: gRPC
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  namespace: linkerd-jaeger
  name: collector-opencensus
  labels:
    linkerd.io/extension: jaeger
    component: collector
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  podSelector:
    matchLabels:
      component: collector
  port: 55678
  proxyProtocol: gRPC
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  namespace: linkerd-jaeger
  name: collector-zipkin
  labels:
    linkerd.io/extension: jaeger
    component: collector
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  podSelector:
    matchLabels:
      component: collector
  port: 9411
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  namespace: linkerd-jaeger
  name: collector-jaeger-thrift
  labels:
    linkerd.io/extension: jaeger
    component: collector
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  podSelector:
    matchLabels:
      component: collector
  port: 14268
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  namespace: linkerd-jaeger
  name: collector-jaeger-grpc
  labels:
    linkerd.io/extension: jaeger
    component: collector
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  podSelector:
    matchLabels:
      component: collector
  port: 14250
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  namespace: linkerd-jaeger
  name: collector-admin
  labels:
    linkerd.io/extension: jaeger
    component: collector
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  podSelector:
    matchLabels:
      component: collector
  port: 13133
  proxyProtocol: HTTP/1
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  namespace: linkerd-jaeger
  name: jaeger-grpc
  labels:
    linkerd.io/extension: jaeger
    component: jaeger
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  podSelector:
    matchLabels:
      component: jaeger
  port: grpc
  proxyProtocol: gRPC
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  namespace: linkerd-jaeger
  name: jaeger-admin
  labels:
    linkerd.io/extension: jaeger
    component: jaeger
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  podSelector:
    matchLabels:
      component: jaeger
  port: admin
  proxyProtocol: HTTP/1
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  namespace: linkerd-jaeger
  name: jaeger-ui
  labels:
    linkerd.io/extension: jaeger
    component: jaeger
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  podSelector:
    matchLabels:
      component: jaeger
  port: ui
  proxyProtocol: HTTP/1
---
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  namespace: linkerd-jaeger
  name: jaeger-injector
  labels:
    linkerd.io/extension: jaeger
    component: jaeger-injector
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  server:
    selector:
      matchLabels:
        linkerd.io/extension: jaeger
        component: jaeger-injector
  client:
    unauthenticated: true
---
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  namespace: linkerd-jaeger
  name: proxy-admin
  labels:
    linkerd.io/extension: jaeger
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  server:
    name: proxy-admin
  client:
    unauthenticated: true
---
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  namespace: linkerd-jaeger
  name: collector
  labels:
    linkerd.io/extension: jaeger
    component: collector
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  server:
    selector:
      matchLabels:
        linkerd.io/extension: jaeger
        component: collector
  client:
    unauthenticated: true
---
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  namespace: linkerd-jaeger
  name: jaeger-grpc
  labels:
    linkerd.io/extension: jaeger
    component: jaeger
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  server:
    name: jaeger-grpc
  client:
    meshTLS:
      serviceAccounts:
        - name: collector
---
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  namespace: linkerd-jaeger
  name: jaeger-admin
  labels:
    linkerd.io/extension: jaeger
    component: jaeger
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  server:
    name: jaeger-admin
  client:
    meshTLS:
      serviceAccounts:
        - name: prometheus
          namespace: linkerd-viz
---
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  namespace: linkerd-jaeger
  name: jaeger-ui
  labels:
    linkerd.io/extension: jaeger
    component: jaeger
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  server:
    name: jaeger-ui
  client:
    meshTLS:
      serviceAccounts:
        - name: web
          namespace: linkerd-viz
