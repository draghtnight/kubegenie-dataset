apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-dynamodb
  labels:
    helm.sh/chart: dynamodb-0.1.27
    app.kubernetes.io/name: dynamodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.12.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-dynamodb
  labels:
    helm.sh/chart: dynamodb-0.1.27
    app.kubernetes.io/name: dynamodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.12.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: dynamodb
    - port: 8001
      targetPort: 8001
      protocol: TCP
      name: admin
  selector:
    app.kubernetes.io/name: dynamodb
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-dynamodb
  labels:
    helm.sh/chart: dynamodb-0.1.27
    app.kubernetes.io/name: dynamodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.12.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dynamodb
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dynamodb
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-dynamodb
      securityContext: {}
      containers:
        - name: dynamodb
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: amazon/dynamodb-local:1.12.0
          imagePullPolicy: IfNotPresent
          args:
            - -Djava.library.path=./DynamoDBLocal_lib
            - -jar
            - DynamoDBLocal.jar
            - -dbPath
            - /mnt/data
          ports:
            - name: dynamodb
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: dynamodb
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: dynamodb
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: dynamodb-data
              mountPath: /mnt/data
        - name: admin
          securityContext: {}
          image: aaronshaf/dynamodb-admin:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: dynamodbadmin
              containerPort: 8001
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: dynamodbadmin
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: dynamodbadmin
            initialDelaySeconds: 15
            periodSeconds: 20
          resources: {}
      volumes:
        - name: dynamodb-data
          emptyDir: {}
