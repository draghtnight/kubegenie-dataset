[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "release-name-cert-manager",
      "labels": {
        "app": "cert-manager",
        "chart": "cert-manager-v0.13.1",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "seccomp.security.alpha.kubernetes.io/allowedProfileNames": "docker/default",
        "seccomp.security.alpha.kubernetes.io/defaultProfileName": "docker/default",
        "apparmor.security.beta.kubernetes.io/allowedProfileNames": "runtime/default",
        "apparmor.security.beta.kubernetes.io/defaultProfileName": "runtime/default"
      }
    },
    "spec": {
      "privileged": false,
      "allowPrivilegeEscalation": false,
      "allowedCapabilities": [],
      "volumes": [
        "configMap",
        "emptyDir",
        "projected",
        "secret",
        "downwardAPI"
      ],
      "hostNetwork": false,
      "hostIPC": false,
      "hostPID": false,
      "runAsUser": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1000,
            "max": 1000
          }
        ]
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1000,
            "max": 1000
          }
        ]
      },
      "fsGroup": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1000,
            "max": 1000
          }
        ]
      }
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "release-name-cert-manager-webhook",
      "labels": {
        "app": "webhook",
        "chart": "cert-manager-v0.13.1",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "seccomp.security.alpha.kubernetes.io/allowedProfileNames": "docker/default",
        "seccomp.security.alpha.kubernetes.io/defaultProfileName": "docker/default",
        "apparmor.security.beta.kubernetes.io/allowedProfileNames": "runtime/default",
        "apparmor.security.beta.kubernetes.io/defaultProfileName": "runtime/default"
      }
    },
    "spec": {
      "privileged": false,
      "allowPrivilegeEscalation": false,
      "allowedCapabilities": [],
      "volumes": [
        "configMap",
        "emptyDir",
        "projected",
        "secret",
        "downwardAPI"
      ],
      "hostNetwork": false,
      "hostIPC": false,
      "hostPID": false,
      "runAsUser": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1000,
            "max": 1000
          }
        ]
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1000,
            "max": 1000
          }
        ]
      },
      "fsGroup": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1000,
            "max": 1000
          }
        ]
      }
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "release-name-nginx-ingress",
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "spec": {
      "allowedCapabilities": [
        "NET_BIND_SERVICE"
      ],
      "privileged": false,
      "allowPrivilegeEscalation": true,
      "volumes": [
        "configMap",
        "secret"
      ],
      "hostNetwork": false,
      "hostIPC": false,
      "hostPID": false,
      "runAsUser": {
        "rule": "MustRunAsNonRoot"
      },
      "supplementalGroups": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      },
      "fsGroup": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      },
      "readOnlyRootFilesystem": false,
      "seLinux": {
        "rule": "RunAsAny"
      }
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "release-name-nginx-ingress-backend",
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "spec": {
      "allowPrivilegeEscalation": false,
      "fsGroup": {
        "ranges": [
          {
            "max": 65535,
            "min": 1
          }
        ],
        "rule": "MustRunAs"
      },
      "requiredDropCapabilities": [
        "ALL"
      ],
      "runAsUser": {
        "rule": "MustRunAsNonRoot"
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "ranges": [
          {
            "max": 65535,
            "min": 1
          }
        ],
        "rule": "MustRunAs"
      },
      "volumes": [
        "configMap",
        "emptyDir",
        "projected",
        "secret",
        "downwardAPI"
      ]
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "devspace-default-podsecuritypolicy"
    },
    "spec": {
      "allowPrivilegeEscalation": false,
      "fsGroup": {
        "rule": "RunAsAny"
      },
      "hostPorts": [
        {
          "max": 0,
          "min": 0
        }
      ],
      "runAsUser": {
        "rule": "RunAsAny"
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "RunAsAny"
      },
      "volumes": [
        "secret",
        "configMap",
        "emptyDir",
        "downwardAPI",
        "persistentVolumeClaim"
      ],
      "rule": "MustRunAsNonRoot"
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "devspace-manager-podsecuritypolicy"
    },
    "spec": {
      "allowPrivilegeEscalation": true,
      "fsGroup": {
        "rule": "RunAsAny"
      },
      "hostIPC": false,
      "hostNetwork": false,
      "hostPID": true,
      "privileged": false,
      "runAsUser": {
        "rule": "RunAsAny"
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "RunAsAny"
      },
      "volumes": [
        "*"
      ],
      "rule": "MustRunAsNonRoot"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-nginx-ingress"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-nginx-ingress-backend"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "devspace-default"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "devspace-manager"
    }
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-cert-manager-psp",
      "labels": {
        "app": "cert-manager",
        "chart": "cert-manager-v0.13.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ],
        "resourceNames": [
          "release-name-cert-manager"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-cert-manager-controller-issuers",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "issuers",
          "issuers/status"
        ],
        "verbs": [
          "update"
        ]
      },
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "issuers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create",
          "patch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-cert-manager-controller-clusterissuers",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "clusterissuers",
          "clusterissuers/status"
        ],
        "verbs": [
          "update"
        ]
      },
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "clusterissuers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create",
          "patch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-cert-manager-controller-certificates",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "certificates",
          "certificates/status",
          "certificaterequests",
          "certificaterequests/status"
        ],
        "verbs": [
          "update"
        ]
      },
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "certificates",
          "certificaterequests",
          "clusterissuers",
          "issuers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "certificates/finalizers",
          "certificaterequests/finalizers"
        ],
        "verbs": [
          "update"
        ]
      },
      {
        "apiGroups": [
          "acme.cert-manager.io"
        ],
        "resources": [
          "orders"
        ],
        "verbs": [
          "create",
          "delete",
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create",
          "patch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-cert-manager-controller-orders",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "acme.cert-manager.io"
        ],
        "resources": [
          "orders",
          "orders/status"
        ],
        "verbs": [
          "update"
        ]
      },
      {
        "apiGroups": [
          "acme.cert-manager.io"
        ],
        "resources": [
          "orders",
          "challenges"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "clusterissuers",
          "issuers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "acme.cert-manager.io"
        ],
        "resources": [
          "challenges"
        ],
        "verbs": [
          "create",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "acme.cert-manager.io"
        ],
        "resources": [
          "orders/finalizers"
        ],
        "verbs": [
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create",
          "patch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-cert-manager-controller-challenges",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "acme.cert-manager.io"
        ],
        "resources": [
          "challenges",
          "challenges/status"
        ],
        "verbs": [
          "update"
        ]
      },
      {
        "apiGroups": [
          "acme.cert-manager.io"
        ],
        "resources": [
          "challenges"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "issuers",
          "clusterissuers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create",
          "patch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "services"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "delete",
          "update"
        ]
      },
      {
        "apiGroups": [
          "acme.cert-manager.io"
        ],
        "resources": [
          "challenges/finalizers"
        ],
        "verbs": [
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-cert-manager-controller-ingress-shim",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "certificates",
          "certificaterequests"
        ],
        "verbs": [
          "create",
          "update",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "certificates",
          "certificaterequests",
          "issuers",
          "clusterissuers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "ingresses/finalizers"
        ],
        "verbs": [
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create",
          "patch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-cert-manager-view",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1",
        "rbac.authorization.k8s.io/aggregate-to-view": "true",
        "rbac.authorization.k8s.io/aggregate-to-edit": "true",
        "rbac.authorization.k8s.io/aggregate-to-admin": "true"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "certificates",
          "certificaterequests",
          "issuers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-cert-manager-edit",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1",
        "rbac.authorization.k8s.io/aggregate-to-edit": "true",
        "rbac.authorization.k8s.io/aggregate-to-admin": "true"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "cert-manager.io"
        ],
        "resources": [
          "certificates",
          "certificaterequests",
          "issuers"
        ],
        "verbs": [
          "create",
          "delete",
          "deletecollection",
          "patch",
          "update"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-cert-manager-webhook-psp",
      "labels": {
        "app": "webhook",
        "chart": "cert-manager-v0.13.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ],
        "resourceNames": [
          "release-name-cert-manager-webhook"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-nginx-ingress"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "endpoints",
          "nodes",
          "pods",
          "secrets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services"
        ],
        "verbs": [
          "get",
          "list",
          "update",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses/status"
        ],
        "verbs": [
          "update"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "devspace-default-clusterrole"
    },
    "rules": [
      {
        "apiGroups": [
          "extensions",
          "policy"
        ],
        "resourceNames": [
          "devspace-default-podsecuritypolicy"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "devspace-manager-clusterrole"
    },
    "rules": [
      {
        "apiGroups": [
          "*"
        ],
        "resources": [
          "*"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "policy"
        ],
        "resourceNames": [
          "devspace-manager-podsecuritypolicy"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-cert-manager-psp",
      "labels": {
        "app": "cert-manager",
        "chart": "cert-manager-v0.13.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-cert-manager-psp"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-cert-manager",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-cert-manager-controller-issuers",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-cert-manager-controller-issuers"
    },
    "subjects": [
      {
        "name": "default",
        "namespace": "default",
        "kind": "ServiceAccount"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-cert-manager-controller-clusterissuers",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-cert-manager-controller-clusterissuers"
    },
    "subjects": [
      {
        "name": "default",
        "namespace": "default",
        "kind": "ServiceAccount"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-cert-manager-controller-certificates",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-cert-manager-controller-certificates"
    },
    "subjects": [
      {
        "name": "default",
        "namespace": "default",
        "kind": "ServiceAccount"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-cert-manager-controller-orders",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-cert-manager-controller-orders"
    },
    "subjects": [
      {
        "name": "default",
        "namespace": "default",
        "kind": "ServiceAccount"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-cert-manager-controller-challenges",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-cert-manager-controller-challenges"
    },
    "subjects": [
      {
        "name": "default",
        "namespace": "default",
        "kind": "ServiceAccount"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-cert-manager-controller-ingress-shim",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-cert-manager-controller-ingress-shim"
    },
    "subjects": [
      {
        "name": "default",
        "namespace": "default",
        "kind": "ServiceAccount"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-cert-manager-webhook-psp",
      "labels": {
        "app": "webhook",
        "chart": "cert-manager-v0.13.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-cert-manager-webhook-psp"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-cert-manager-webhook",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-nginx-ingress"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-nginx-ingress"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-nginx-ingress",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "devspace-default-clusterrolebinding"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "devspace-default-clusterrole"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "devspace-default",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "devspace-manager-clusterrolebinding"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "devspace-manager-clusterrole"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "devspace-manager",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-cert-manager:leaderelection",
      "namespace": "kube-system",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "get",
          "create",
          "update",
          "patch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-nginx-ingress"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "pods",
          "secrets",
          "endpoints"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services"
        ],
        "verbs": [
          "get",
          "list",
          "update",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses/status"
        ],
        "verbs": [
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "resourceNames": [
          "ingress-controller-leader-nginx"
        ],
        "verbs": [
          "get",
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "create"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "endpoints"
        ],
        "verbs": [
          "create",
          "get",
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ],
        "resourceNames": [
          "release-name-nginx-ingress"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-nginx-ingress-backend"
    },
    "rules": [
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ],
        "resourceNames": [
          "release-name-nginx-ingress-backend"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-cert-manager:leaderelection",
      "namespace": "kube-system",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-cert-manager:leaderelection"
    },
    "subjects": [
      {
        "apiGroup": "",
        "kind": "ServiceAccount",
        "name": "default",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-nginx-ingress"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-nginx-ingress"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-nginx-ingress",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-nginx-ingress-backend"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-nginx-ingress-backend"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-nginx-ingress-backend",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cert-manager",
      "namespace": "vS5OXEgN",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "protocol": "TCP",
          "port": 9402,
          "targetPort": 9402
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "component": "controller",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-nginx-ingress-controller"
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 80,
          "protocol": "TCP",
          "targetPort": "http"
        },
        {
          "name": "https",
          "port": 443,
          "protocol": "TCP",
          "targetPort": "https"
        }
      ],
      "selector": {
        "app": "nginx-ingress",
        "component": "controller",
        "release": "release-name"
      },
      "type": "LoadBalancer"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "component": "default-backend",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-nginx-ingress-default-backend"
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 80,
          "protocol": "TCP",
          "targetPort": "http"
        }
      ],
      "selector": {
        "app": "nginx-ingress",
        "component": "default-backend",
        "release": "release-name"
      },
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "devspace-auth"
    },
    "spec": {
      "ports": [
        {
          "port": 8080,
          "targetPort": 8080,
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app": "devspace-auth"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "devspace-postgres-headless",
      "labels": {
        "app": "devspace-postgres"
      }
    },
    "spec": {
      "clusterIP": "None",
      "ports": [
        {
          "port": 5432,
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app": "devspace-postgres"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "devspace-postgres",
      "labels": {
        "app": "devspace-postgres"
      }
    },
    "spec": {
      "ports": [
        {
          "port": 5432,
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app": "devspace-postgres"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app": "devspace-hasura"
      },
      "name": "devspace-hasura"
    },
    "spec": {
      "ports": [
        {
          "protocol": "TCP",
          "port": 8080,
          "targetPort": 8080
        }
      ],
      "selector": {
        "app": "devspace-hasura"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "devspace-manager"
    },
    "spec": {
      "ports": [
        {
          "port": 8080,
          "targetPort": 8080,
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app": "devspace-manager"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "devspace-ui"
    },
    "spec": {
      "ports": [
        {
          "port": 8080,
          "targetPort": 5000,
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app": "devspace-ui"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-cert-manager",
      "namespace": "vS5OXEgN",
      "labels": {
        "app": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "cert-manager-v0.13.1"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "cert-manager",
          "app.kubernetes.io/name": "cert-manager",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/managed-by": "Helm"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "helm.sh/chart": "cert-manager-v0.13.1"
          },
          "annotations": {
            "prometheus.io/path": "/metrics",
            "prometheus.io/scrape": "true",
            "prometheus.io/port": "9402"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "containers": [
            {
              "name": "cert-manager",
              "image": "quay.io/jetstack/cert-manager-controller:v0.13.1",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--v=2",
                "--cluster-resource-namespace=$(POD_NAMESPACE)",
                "--leader-election-namespace=kube-system",
                "--acme-http01-solver-resource-request-cpu=0",
                "--acme-http01-solver-resource-request-memory=0",
                "--webhook-namespace=$(POD_NAMESPACE)",
                "--webhook-ca-secret=release-name-cert-manager-webhook-ca",
                "--webhook-serving-secret=release-name-cert-manager-webhook-tls",
                "--webhook-dns-names=release-name-cert-manager-webhook,release-name-cert-manager-webhook.default,release-name-cert-manager-webhook.default.svc"
              ],
              "ports": [
                {
                  "containerPort": 9402,
                  "protocol": "TCP"
                }
              ],
              "env": [
                {
                  "name": "POD_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "component": "controller",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-nginx-ingress-controller",
      "annotations": {}
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "nginx-ingress",
          "release": "release-name"
        }
      },
      "replicas": 1,
      "revisionHistoryLimit": 10,
      "strategy": {},
      "minReadySeconds": 0,
      "template": {
        "metadata": {
          "labels": {
            "app": "nginx-ingress",
            "component": "controller",
            "release": "release-name"
          }
        },
        "spec": {
          "dnsPolicy": "ClusterFirst",
          "containers": [
            {
              "name": "nginx-ingress-controller",
              "image": "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "/nginx-ingress-controller",
                "--default-backend-service=default/release-name-nginx-ingress-default-backend",
                "--publish-service=default/release-name-nginx-ingress-controller",
                "--election-id=ingress-controller-leader",
                "--ingress-class=nginx",
                "--configmap=default/release-name-nginx-ingress-controller"
              ],
              "securityContext": {
                "capabilities": {
                  "drop": [
                    "ALL"
                  ],
                  "add": [
                    "NET_BIND_SERVICE"
                  ]
                },
                "runAsUser": 11025,
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "POD_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80,
                  "protocol": "TCP"
                },
                {
                  "name": "https",
                  "containerPort": 443,
                  "protocol": "TCP"
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "hostNetwork": false,
          "serviceAccountName": "release-name-nginx-ingress",
          "terminationGracePeriodSeconds": 60
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app": "nginx-ingress",
        "chart": "nginx-ingress-1.33.1",
        "component": "default-backend",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-nginx-ingress-default-backend"
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "nginx-ingress",
          "release": "release-name"
        }
      },
      "replicas": 1,
      "revisionHistoryLimit": 10,
      "template": {
        "metadata": {
          "labels": {
            "app": "nginx-ingress",
            "component": "default-backend",
            "release": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "nginx-ingress-default-backend",
              "image": "k8s.gcr.io/defaultbackend-amd64:1.5",
              "imagePullPolicy": "IfNotPresent",
              "args": null,
              "securityContext": {
                "runAsUser": 11780,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 8080,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 8080,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 0,
                "periodSeconds": 5,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "serviceAccountName": "release-name-nginx-ingress-backend",
          "terminationGracePeriodSeconds": 60
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "devspace-auth"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "devspace-auth"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 0
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "devspace-auth"
          }
        },
        "spec": {
          "serviceAccountName": "devspace-default",
          "containers": [
            {
              "name": "default",
              "image": "devspacecloud/auth:0.3.3",
              "env": [
                {
                  "name": "DB_PORT",
                  "value": "5432"
                },
                {
                  "name": "DB_HOST",
                  "value": "devspace-postgres"
                },
                {
                  "name": "DB_DATABASE",
                  "value": "devspace"
                },
                {
                  "name": "DB_USER",
                  "value": "devspace"
                },
                {
                  "name": "DB_PASSWORD",
                  "value": "MY_PASSWORD"
                },
                {
                  "name": "AUTH_TOKEN_CERT",
                  "value": "/auth-cert/tls.crt"
                },
                {
                  "name": "AUTH_TOKEN_KEY",
                  "value": "/auth-cert/tls.key"
                },
                {
                  "name": "AUTH_VERIFY_EMAIL",
                  "value": "false"
                }
              ],
              "volumeMounts": [
                {
                  "name": "auth-cert-volume",
                  "mountPath": "/auth-cert",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "auth-cert-volume",
              "secret": {
                "secretName": "devspace-auth-secret",
                "items": [
                  {
                    "key": "tls.crt",
                    "path": "tls.crt"
                  },
                  {
                    "key": "tls.key",
                    "path": "tls.key"
                  }
                ]
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app": "devspace-hasura",
        "hasuraService": "custom"
      },
      "name": "devspace-hasura"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "devspace-hasura"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "devspace-hasura"
          }
        },
        "spec": {
          "serviceAccountName": "devspace-default",
          "containers": [
            {
              "name": "hasura",
              "image": "devspacecloud/hasura:0.3.3",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "DEVSPACE_JWT_CERT",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "devspace-auth-secret",
                      "key": "tls.crt"
                    }
                  }
                },
                {
                  "name": "HASURA_GRAPHQL_DATABASE_URL",
                  "value": "postgres://devspace:MY_PASSWORD@devspace-postgres:5432/devspace"
                },
                {
                  "name": "HASURA_GRAPHQL_ADMIN_SECRET",
                  "value": "MY_PASSWORD"
                },
                {
                  "name": "HASURA_GRAPHQL_JWT_SECRET",
                  "value": "{\"type\":\"RS256\", \"key\": \"$(DEVSPACE_JWT_CERT)\"}"
                },
                {
                  "name": "HASURA_GRAPHQL_ENABLE_CONSOLE",
                  "value": "true"
                },
                {
                  "name": "HASURA_GRAPHQL_SERVER_PORT",
                  "value": "8080"
                }
              ],
              "ports": [
                {
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "devspace-manager"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "devspace-manager"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 0
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "devspace-manager"
          }
        },
        "spec": {
          "serviceAccountName": "devspace-manager",
          "containers": [
            {
              "name": "default",
              "image": "devspacecloud/manager:0.3.3",
              "env": [
                {
                  "name": "DEVSPACE_NAMESPACE",
                  "value": "default"
                },
                {
                  "name": "DB_PORT",
                  "value": "5432"
                },
                {
                  "name": "DB_HOST",
                  "value": "devspace-postgres"
                },
                {
                  "name": "DB_DATABASE",
                  "value": "devspace"
                },
                {
                  "name": "DB_USER",
                  "value": "devspace"
                },
                {
                  "name": "DB_PASSWORD",
                  "value": "MY_PASSWORD"
                },
                {
                  "name": "DOCKER_REGISTRY_CACERT",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "devspace-auth-secret",
                      "key": "tls.crt"
                    }
                  }
                },
                {
                  "name": "DEFAULT_BACKEND_IMAGE",
                  "value": "devspacecloud/default-backend:0.3.3"
                },
                {
                  "name": "ADMISSION_CONTROLLER_IMAGE",
                  "value": "devspacecloud/admission-controller:0.3.3"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 8080
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 8080
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "devspace-ui"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "devspace-ui"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 0
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "devspace-ui"
          }
        },
        "spec": {
          "serviceAccountName": "devspace-default",
          "containers": [
            {
              "name": "default",
              "image": "devspacecloud/ui:0.3.3",
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 5000
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 5000
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "devspace-postgres"
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "devspace-postgres"
        }
      },
      "serviceName": "devspace-postgres-headless",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "devspace-postgres"
          }
        },
        "spec": {
          "terminationGracePeriodSeconds": 30,
          "serviceAccountName": "devspace-default",
          "containers": [
            {
              "name": "postgres",
              "image": "postgres:11",
              "ports": [
                {
                  "containerPort": 5432
                }
              ],
              "env": [
                {
                  "name": "POSTGRES_PASSWORD",
                  "value": "MY_PASSWORD"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "devspace"
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "devspace"
                },
                {
                  "name": "PGDATA",
                  "value": "/var/lib/postgresql/data/pgdata"
                }
              ],
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/var/lib/postgresql/data"
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "exec pg_isready -U \"devspace\" -d \"devspace\" -h 127.0.0.1 -p 5432"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "exec pg_isready -U \"devspace\" -d \"devspace\" -h 127.0.0.1 -p 5432"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 6,
                "failureThreshold": 1
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "50Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "devspace-hasura-ingress",
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "nginx.ingress.kubernetes.io/proxy-send-timeout": "300",
        "nginx.ingress.kubernetes.io/proxy-read-timeout": "300",
        "nginx.ingress.kubernetes.io/rewrite-target": "/v1/graphql",
        "nginx.ingress.kubernetes.io/ssl-redirect": "true"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "devspace.local",
          "http": {
            "paths": [
              {
                "path": "/graphql",
                "backend": {
                  "serviceName": "devspace-hasura",
                  "servicePort": 8080
                }
              }
            ]
          }
        }
      ],
      "tls": [
        {
          "hosts": [
            "devspace.local"
          ],
          "secretName": "tls-devspace-cloud"
        }
      ]
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "devspace-ingress",
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "nginx.ingress.kubernetes.io/proxy-send-timeout": "300",
        "nginx.ingress.kubernetes.io/proxy-read-timeout": "300",
        "nginx.ingress.kubernetes.io/ssl-redirect": "true"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "devspace.local",
          "http": {
            "paths": [
              {
                "path": "/auth",
                "backend": {
                  "serviceName": "devspace-auth",
                  "servicePort": 8080
                }
              },
              {
                "path": "/",
                "backend": {
                  "serviceName": "devspace-ui",
                  "servicePort": 8080
                }
              },
              {
                "path": "/v1",
                "backend": {
                  "serviceName": "devspace-hasura",
                  "servicePort": 8080
                }
              },
              {
                "path": "/console",
                "backend": {
                  "serviceName": "devspace-hasura",
                  "servicePort": 8080
                }
              }
            ]
          }
        }
      ],
      "tls": [
        {
          "hosts": [
            "devspace.local"
          ],
          "secretName": "tls-devspace-cloud"
        }
      ]
    }
  },
  {
    "apiVersion": "cert-manager.io/v1alpha2",
    "kind": "Certificate",
    "metadata": {
      "name": "devspace-auth-cert"
    },
    "spec": {
      "dnsNames": [
        "localhost"
      ],
      "issuerRef": {
        "kind": "Issuer",
        "name": "devspace-self-signed"
      },
      "secretName": "devspace-auth-secret"
    }
  },
  {
    "apiVersion": "cert-manager.io/v1alpha2",
    "kind": "Certificate",
    "metadata": {
      "name": "devspace-cert"
    },
    "spec": {
      "secretName": "tls-devspace-cloud",
      "dnsNames": [
        "devspace.local"
      ],
      "issuerRef": {
        "name": "lets-encrypt-http-issuer",
        "kind": "ClusterIssuer"
      }
    }
  },
  {
    "apiVersion": "cert-manager.io/v1alpha2",
    "kind": "ClusterIssuer",
    "metadata": {
      "name": "lets-encrypt-http-issuer"
    },
    "spec": {
      "acme": {
        "server": "https://acme-v02.api.letsencrypt.org/directory",
        "email": "noreply@devspace.cloud",
        "privateKeySecretRef": {
          "name": "letsencrypt-account"
        },
        "solvers": [
          {
            "http01": {
              "ingress": {
                "serviceType": "ClusterIP",
                "class": "nginx"
              }
            }
          }
        ]
      }
    }
  },
  {
    "apiVersion": "cert-manager.io/v1alpha2",
    "kind": "Issuer",
    "metadata": {
      "name": "devspace-self-signed"
    },
    "spec": {
      "selfSigned": {}
    }
  }
]