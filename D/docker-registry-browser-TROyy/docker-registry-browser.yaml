apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-docker-registry-browser
  labels:
    helm.sh/chart: docker-registry-browser-0.1.2
    app.kubernetes.io/name: docker-registry-browser
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.5
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-docker-registry-browser
  labels:
    helm.sh/chart: docker-registry-browser-0.1.2
    app.kubernetes.io/name: docker-registry-browser
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.5
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: docker-registry-browser
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-docker-registry-browser
  labels:
    helm.sh/chart: docker-registry-browser-0.1.2
    app.kubernetes.io/name: docker-registry-browser
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.5
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: docker-registry-browser
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: docker-registry-browser
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-docker-registry-browser
      securityContext: {}
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      containers:
        - name: docker-registry-browser
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          image: klausmeyer/docker-registry-browser:1.3.5
          imagePullPolicy: IfNotPresent
          env: null
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          resources:
            limits:
              cpu: 300m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-docker-registry-browser-test-connection
  labels:
    helm.sh/chart: docker-registry-browser-0.1.2
    app.kubernetes.io/name: docker-registry-browser
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.5
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-docker-registry-browser:8080/robots.txt
  restartPolicy: Never
