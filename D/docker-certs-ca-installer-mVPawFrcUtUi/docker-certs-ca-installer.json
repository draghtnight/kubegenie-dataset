[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "release-name-docker-certs-ca-installer",
      "labels": {
        "helm.sh/chart": "docker-certs-ca-installer-1.0.0",
        "app.kubernetes.io/name": "docker-certs-ca-installer",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.33.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "privileged": false,
      "allowPrivilegeEscalation": false,
      "volumes": [
        "hostPath",
        "secret",
        "configMap"
      ],
      "hostNetwork": false,
      "hostIPC": false,
      "hostPID": false,
      "runAsUser": {
        "rule": "RunAsAny"
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "RunAsAny"
      },
      "fsGroup": {
        "rule": "RunAsAny"
      },
      "readOnlyRootFilesystem": false,
      "allowedHostPaths": [
        {
          "pathPrefix": "/etc/docker/certs.d"
        }
      ],
      "rule": "MustRunAsNonRoot"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-docker-certs-ca-installer",
      "labels": {
        "helm.sh/chart": "docker-certs-ca-installer-1.0.0",
        "app.kubernetes.io/name": "docker-certs-ca-installer",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.33.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-docker-certs-ca-installer",
      "labels": {
        "helm.sh/chart": "docker-certs-ca-installer-1.0.0",
        "app.kubernetes.io/name": "docker-certs-ca-installer",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.33.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": null
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-docker-certs-ca-installer-psp",
      "labels": {
        "helm.sh/chart": "docker-certs-ca-installer-1.0.0",
        "app.kubernetes.io/name": "docker-certs-ca-installer",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.33.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ],
        "resourceNames": [
          "release-name-docker-certs-ca-installer"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-docker-certs-ca-installer-psp",
      "labels": {
        "helm.sh/chart": "docker-certs-ca-installer-1.0.0",
        "app.kubernetes.io/name": "docker-certs-ca-installer",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.33.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-docker-certs-ca-installer-psp"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-docker-certs-ca-installer",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "release-name-docker-certs-ca-installer",
      "labels": {
        "helm.sh/chart": "docker-certs-ca-installer-1.0.0",
        "app.kubernetes.io/name": "docker-certs-ca-installer",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.33.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "docker-certs-ca-installer",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "docker-certs-ca-installer",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-docker-certs-ca-installer",
          "securityContext": {},
          "containers": [
            {
              "name": "docker-certs-ca-installer",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "image": "busybox:latest",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh"
              ],
              "args": [
                "-c",
                "echo \"> CA installation started.\"; for FILENAME in /opt/docker-certs-configmap/*.crt; do\n    DOCKER_REGISTRY_HOST=$(basename $FILENAME .crt);\n    echo \">> Installing CA for $DOCKER_REGISTRY_HOST.\";\n    mkdir -p \"/etc/docker/certs.d/$DOCKER_REGISTRY_HOST\";\n    cp \"/opt/docker-certs-configmap/$DOCKER_REGISTRY_HOST.crt\" \"/etc/docker/certs.d/$DOCKER_REGISTRY_HOST/ca.crt\";\ndone; echo \"> CA installation completed.\"; exec tail -f /dev/null\n"
              ],
              "volumeMounts": [
                {
                  "name": "etc-docker-certs-d",
                  "mountPath": "/etc/docker/certs.d"
                },
                {
                  "name": "docker-certs-configmap",
                  "mountPath": "/opt/docker-certs-configmap"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "50m",
                  "memory": "64Mi"
                },
                "requests": {
                  "cpu": "50m",
                  "memory": "64Mi"
                }
              }
            }
          ],
          "terminationGracePeriodSeconds": 5,
          "volumes": [
            {
              "name": "etc-docker-certs-d",
              "hostPath": {
                "path": "/etc/docker/certs.d"
              }
            },
            {
              "name": "docker-certs-configmap",
              "configMap": {
                "name": "release-name-docker-certs-ca-installer"
              }
            }
          ]
        }
      }
    }
  }
]