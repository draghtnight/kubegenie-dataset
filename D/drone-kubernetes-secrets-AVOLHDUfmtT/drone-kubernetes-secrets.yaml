apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-drone-kubernetes-secrets
  labels:
    helm.sh/chart: drone-kubernetes-secrets-0.1.2
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: drone-kubernetes-secrets
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-drone-kubernetes-secrets
  labels:
    helm.sh/chart: drone-kubernetes-secrets-0.1.2
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: drone-kubernetes-secrets
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
data:
  KUBERNETES_NAMESPACE: default
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-drone-kubernetes-secrets
  namespace: AVOLHDUfmtT
  labels:
    helm.sh/chart: drone-kubernetes-secrets-0.1.2
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: drone-kubernetes-secrets
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-drone-kubernetes-secrets
  namespace: AVOLHDUfmtT
  labels:
    helm.sh/chart: drone-kubernetes-secrets-0.1.2
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: drone-kubernetes-secrets
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-drone-kubernetes-secrets
    namespace: default
roleRef:
  kind: Role
  name: release-name-drone-kubernetes-secrets
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-drone-kubernetes-secrets
  labels:
    helm.sh/chart: drone-kubernetes-secrets-0.1.2
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: drone-kubernetes-secrets
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: drone-kubernetes-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-drone-kubernetes-secrets
  labels:
    helm.sh/chart: drone-kubernetes-secrets-0.1.2
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: drone-kubernetes-secrets
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: drone-kubernetes-secrets
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: drone-kubernetes-secrets
  template:
    metadata:
      labels:
        app.kubernetes.io/name: drone-kubernetes-secrets
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: drone-kubernetes-secrets
      annotations:
        checksum/secrets: 7d096859ea67f6d2ab96f02adbd2c397396057a3de58361ab95246d0a5e09df1
    spec:
      serviceAccountName: release-name-drone-kubernetes-secrets
      securityContext: {}
      containers:
        - name: server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: drone/kubernetes-secrets:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            seccompProfile:
              type: RuntimeDefault
          envFrom:
            - configMapRef:
                name: release-name-drone-kubernetes-secrets
