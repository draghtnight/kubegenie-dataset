apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-datacube-dask
  labels:
    app: release-name-datacube-dask
    chart: datacube-dask-0.4.10
    release: release-name
    heritage: Helm
data:
  kubernetes.yaml: |-
    kubernetes:
      count:
        max: 4
        min: 2
        start: 2
      env: {}
      host: 0.0.0.0
      name: dask-{uuid}
      namespace: null
      port: 8786
      worker-template:
        kind: Pod
        metadata:
          annotations:
            iam.amazonaws.com/role: kubernetes-wms
          labels:
            app: dask
        spec:
          containers:
          - args:
            - dask-worker
            - --nthreads
            - "2"
            - --no-bokeh
            - --memory-limit
            - 6GB
            - --death-timeout
            - "60"
            image: opendatacube/dask:latest
            name: dask
            resources:
              limits:
                cpu: "2"
                memory: 6G
              requests:
                cpu: "2"
                memory: 6G
          restartPolicy: Never
      worker-template-path: null
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-datacube-dask
  labels:
    app.kubernetes.io/name: datacube-dask
    helm.sh/chart: datacube-dask-0.4.10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  type: NodePort
  ports:
    - port: 8786
      targetPort: scheduler
      protocol: TCP
      name: scheduler
    - port: 8787
      targetPort: bokeh
      protocol: TCP
      name: bokeh
  selector:
    app.kubernetes.io/name: datacube-dask
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-datacube-dask-scheduler
  labels:
    app.kubernetes.io/name: datacube-dask
    helm.sh/chart: datacube-dask-0.4.10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: datacube-dask
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: datacube-dask
        app.kubernetes.io/instance: release-name
    spec:
      dnsConfig:
        options:
          - name: single-request-reopen
      containers:
        - name: datacube-dask-scheduler
          image: opendatacube/dask:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config/datacube/dask/
          command:
            - dask-scheduler
          args:
            - --port
            - "8786"
            - --bokeh-port
            - "8787"
          env:
            - name: DASK_CONFIG
              value: /etc/config/datacube/dask/kubernetes.yaml
          ports:
            - name: scheduler
              containerPort: 8786
              protocol: TCP
            - name: bokeh
              containerPort: 8787
          livenessProbe:
            exec:
              command:
                - dask-scheduler-health.py
                - --port
                - "8786"
            initialDelaySeconds: 30
            periodSeconds: 60
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config-volume
          configMap:
            name: release-name-datacube-dask
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-datacube-dask-worker
  labels:
    app.kubernetes.io/name: datacube-dask
    helm.sh/chart: datacube-dask-0.4.10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: datacube-dask-worker
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: datacube-dask-worker
        app.kubernetes.io/instance: release-name
      annotations:
        iam.amazonaws.com/role: kubernetes-wms
    spec:
      dnsConfig:
        options:
          - name: single-request-reopen
      containers:
        - name: datacube-dask-worker
          image: opendatacube/dask:latest
          imagePullPolicy: Always
          command:
            - docker-entrypoint.sh
          args:
            - dask-worker
            - release-name-datacube-dask.default:8786
            - --nthreads
            - "2"
            - --no-bokeh
            - --memory-limit
            - 6GB
            - --death-timeout
            - "60"
          env:
            - name: DB_HOSTNAME
              value: localhost
            - name: DB_PORT
              value: "5432"
            - name: DB_DATABASE
              value: datacube
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: datacube
                  key: postgres-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: datacube
                  key: postgres-password
          ports:
            - name: worker
              containerPort: 8789
              protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 6G
            requests:
              cpu: "2"
              memory: 6G
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-datacube-dask-worker
  labels:
    app.kubernetes.io/name: datacube-dask
    helm.sh/chart: datacube-dask-0.4.10
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-datacube-dask-worker
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 75
