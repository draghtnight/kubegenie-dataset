apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-dagster-cloud-agent
  labels:
    helm.sh/chart: dagster-cloud-agent-0.14.20
    app.kubernetes.io/name: dagster-cloud-agent
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.14.20
    app.kubernetes.io/managed-by: Helm
  annotations: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-dagster-cloud-agent-agent-env
  labels:
    app: dagster-cloud-agent
    chart: dagster-cloud-agent-0.14.20
    release: release-name
    heritage: Helm
data:
  DAGSTER_HOME: /opt/dagster/dagster_home
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-dagster-cloud-agent-instance
  labels:
    app: dagster-cloud-agent
    chart: dagster-cloud-agent-0.14.20
    release: release-name
    heritage: Helm
data:
  dagster.yaml: |
    instance_class:
      module: dagster_cloud.instance
      class: DagsterCloudAgentInstance

    dagster_cloud_api:
      agent_token:
        env: DAGSTER_CLOUD_AGENT_TOKEN

    user_code_launcher:
      module: dagster_cloud.workspace.kubernetes
      class: K8sUserCodeLauncher
      config:
        dagster_home: /opt/dagster/dagster_home
        instance_config_map: release-name-dagster-cloud-agent-instance
        service_account_name: release-name-dagster-cloud-agent
        namespace: default
        pull_policy: Always
        env_secrets:
          - "dagster-cloud-agent-token"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-dagster-cloud-agent-role
  labels:
    app: dagster-cloud-agent
    chart: dagster-cloud-agent-0.14.20
    release: release-name
    heritage: Helm
rules:
  - apiGroups:
      - batch
    resources:
      - jobs
      - jobs/status
      - cronjobs
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - deployments
      - deployments/status
      - deployments/revision
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
      - pods/status
      - services
    verbs:
      - '*'
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-dagster-cloud-agent-rolebinding
  labels:
    app: dagster-cloud-agent
    chart: dagster-cloud-agent-0.14.20
    release: release-name
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-dagster-cloud-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-dagster-cloud-agent-role
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-dagster-cloud-agent-agent
  labels:
    helm.sh/chart: dagster-cloud-agent-0.14.20
    app.kubernetes.io/name: dagster-cloud-agent
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.14.20
    app.kubernetes.io/managed-by: Helm
    component: agent
    deployment: agent
  annotations: null
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: dagster-cloud-agent
      app.kubernetes.io/instance: release-name
      component: agent
      deployment: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dagster-cloud-agent
        app.kubernetes.io/instance: release-name
        component: agent
        deployment: agent
      annotations:
        checksum/dagster-instance: 25a93b5ce6be33f9aa246af89546c6baa6a02df6e2018da272e5a1ef9e4c128d
    spec:
      imagePullSecrets: []
      serviceAccountName: release-name-dagster-cloud-agent
      securityContext: {}
      containers:
        - name: dagster-cloud-agent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          imagePullPolicy: Always
          image: docker.io/dagster/dagster-cloud-agent:0.14.20
          command:
            - /bin/bash
            - -c
            - dagster-cloud agent run
          env: null
          envFrom:
            - configMapRef:
                name: release-name-dagster-cloud-agent-agent-env
            - secretRef:
                name: dagster-cloud-agent-token
          volumeMounts:
            - name: dagster-instance
              mountPath: /opt/dagster/dagster_home/dagster.yaml
              subPath: dagster.yaml
          resources:
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
      initContainers: []
      nodeSelector: {}
      volumes:
        - name: dagster-instance
          configMap:
            name: release-name-dagster-cloud-agent-instance
      affinity: {}
      tolerations: []
