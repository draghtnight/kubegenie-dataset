apiVersion: v1
kind: Service
metadata:
  labels:
    app: datacube-ows
    chart: datacube-ows-0.18.21
    release: release-name
    heritage: Helm
  name: release-name-datacube-ows
spec:
  type: NodePort
  ports:
    - name: "80"
      port: 80
      targetPort: 8000
  selector:
    app: datacube-ows
    release: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-datacube-ows-dev
  labels:
    app: datacube-ows
    chart: datacube-ows-0.18.21
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datacube-ows
      release: release-name
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: datacube-ows
        release: release-name
      annotations:
        iam.amazonaws.com/role: kubernetes-wms
    spec:
      dnsConfig:
        options:
          - name: single-request-reopen
      initContainers:
        - name: ows-config
          image: docker.io/geoscienceaustralia/dea-datakube-config:latest
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: null
              name: ows-config-volume
      containers:
        - name: ows
          lifecycle:
            preStop:
              exec:
                command:
                  - /usr/bin/sleep
                  - "15"
          env:
            - value: /
              name: OWS_CONFIG_PATH
            - name: DB_HOSTNAME
              value: localhost
            - name: DB_PORT
              value: "5432"
            - name: DB_DATABASE
              value: datacube
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-datacube-ows
                  key: postgres-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-datacube-ows
                  key: postgres-password
            - name: VIRTUAL_HOST
              value: localhost,127.0.0.
            - name: PROFILER_FILE_PATH
              value: /opt/profiling/
            - name: PROFILER
              value: "1"
          image: docker.io/opendatacube/ows:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          resources:
            limits:
              cpu: "1"
              memory: 2048Mi
          args:
            - gunicorn
            - -b
            - 0.0.0.0:8000
            - -w
            - "4"
            - --keep-alive
            - "50"
            - --timeout
            - "120"
            - datacube_wms.wsgi
          volumeMounts:
            - mountPath: /opt/profiling/
              name: profiling-volume
            - mountPath: null
              name: ows-config-volume
      restartPolicy: Always
      volumes:
        - name: profiling-volume
          emptyDir: {}
        - name: ows-config-volume
          emptyDir: {}
status: {}
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-datacube-ows
  labels:
    app: datacube-ows
    chart: datacube-ows-0.18.21
    release: release-name
    heritage: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-datacube-ows-dev
  minReplicas: 1
  maxReplicas: 2
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-datacube-ows
  labels:
    app: release-name-datacube-ows
    chart: datacube-ows-0.18.21
    release: release-name
    heritage: Helm
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: before-hook-creation
type: Opaque
data:
  postgres-username: cmVsZWFzZS1uYW1l
  postgres-password: cTNvaTlHcXhkVw==
