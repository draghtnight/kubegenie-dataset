apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-dagster-user-deployments-user-deployments
  labels:
    helm.sh/chart: dagster-user-deployments-0.14.20
    app.kubernetes.io/name: dagster-user-deployments
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.14.20
    app.kubernetes.io/managed-by: Helm
  annotations: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-dagster-user-deployments-user-deployments-shared-env
  labels:
    app: dagster-user-deployments
    chart: dagster-user-deployments-0.14.20
    release: release-name
    heritage: Helm
data:
  DAGSTER_HOME: /opt/dagster/dagster_home
  DAGSTER_K8S_PG_PASSWORD_SECRET: dagster-postgresql-secret
  DAGSTER_K8S_INSTANCE_CONFIG_MAP: release-name-dagster-user-deployments-instance
  DAGSTER_K8S_PIPELINE_RUN_NAMESPACE: default
  DAGSTER_K8S_PIPELINE_RUN_ENV_CONFIGMAP: release-name-dagster-user-deployments-pipeline-env
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-dagster-user-deployments-k8s-example-user-code-1-user-env
  labels:
    app: dagster-user-deployments
    chart: dagster-user-deployments-0.14.20
    release: release-name
    heritage: Helm
data: null
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-dagster-user-deployments-role
  labels:
    helm.sh/chart: dagster-user-deployments-0.14.20
    app.kubernetes.io/name: dagster-user-deployments
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.14.20
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - batch
    resources:
      - jobs
      - jobs/status
      - cronjobs
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
      - pods/status
    verbs:
      - '*'
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-dagster-user-deployments-rolebinding
  labels:
    helm.sh/chart: dagster-user-deployments-0.14.20
    app.kubernetes.io/name: dagster-user-deployments
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.14.20
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-dagster-user-deployments-user-deployments
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-dagster-user-deployments-role
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-example-user-code-1
  labels:
    helm.sh/chart: dagster-user-deployments-0.14.20
    app.kubernetes.io/name: dagster-user-deployments
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.14.20
    app.kubernetes.io/managed-by: Helm
    component: user-deployments
    deployment: k8s-example-user-code-1
  annotations: null
spec:
  type: ClusterIP
  ports:
    - port: 3030
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: dagster-user-deployments
    app.kubernetes.io/instance: release-name
    component: user-deployments
    deployment: k8s-example-user-code-1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-dagster-user-deployments-k8s-example-user-code-1
  labels:
    helm.sh/chart: dagster-user-deployments-0.14.20
    app.kubernetes.io/name: dagster-user-deployments
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.14.20
    app.kubernetes.io/managed-by: Helm
    component: user-deployments
    deployment: k8s-example-user-code-1
  annotations: {}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dagster-user-deployments
      app.kubernetes.io/instance: release-name
      component: user-deployments
      deployment: k8s-example-user-code-1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dagster-user-deployments
        app.kubernetes.io/instance: release-name
        component: user-deployments
        deployment: k8s-example-user-code-1
      annotations:
        checksum/dagster-user-deployment: e9b789eb426a7d541c35695985b37de41698222ab40c2764a2a580093d7b81a7
    spec:
      imagePullSecrets: []
      serviceAccountName: release-name-dagster-user-deployments-user-deployments
      securityContext: {}
      containers:
        - name: dagster-user-deployments
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          imagePullPolicy: Always
          image: docker.io/dagster/user-code-example:0.14.20
          command:
            - dagster
          args:
            - api
            - grpc
            - -h
            - 0.0.0.0
            - -p
            - "3030"
            - -f
            - /example_project/example_repo/repo.py
          env:
            - name: DAGSTER_CURRENT_IMAGE
              value: docker.io/dagster/user-code-example:0.14.20
            - name: DAGSTER_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dagster-postgresql-secret
                  key: postgresql-password
          envFrom:
            - configMapRef:
                name: release-name-dagster-user-deployments-user-deployments-shared-env
            - configMapRef:
                name: release-name-dagster-user-deployments-k8s-example-user-code-1-user-env
            - secretRef:
                name: dagster-celery-config-secret
                optional: true
          resources:
            seccompProfile:
              type: RuntimeDefault
          readinessProbe:
            exec:
              command:
                - dagster
                - api
                - grpc-health-check
                - -p
                - "3030"
            periodSeconds: 20
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
      nodeSelector: {}
      affinity: {}
      tolerations: []
