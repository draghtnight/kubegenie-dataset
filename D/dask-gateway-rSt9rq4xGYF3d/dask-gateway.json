[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "controller-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "api-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "traefik-release-name-dask-gateway"
    }
  },
  {
    "kind": "ConfigMap",
    "apiVersion": "v1",
    "metadata": {
      "name": "controller-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "data": {
      "dask_gateway_config.py": "# Configure addresses\nc.KubeController.address = \":8000\"\nc.KubeController.api_url = 'http://api-release-name-dask-gateway.default:8000/api'\nc.KubeController.gateway_instance = 'release-name-dask-gateway'\nc.KubeController.proxy_prefix = \"/\"\nc.KubeController.proxy_web_middlewares = [\n  {\"name\": 'clusters-prefix-release-name-dask-gateway',\n  \"namespace\": 'default'}\n]\nc.KubeController.log_level = \"INFO\"\nc.KubeController.completed_cluster_max_age = 86400\nc.KubeController.completed_cluster_cleanup_period = 600\nc.KubeController.backoff_base_delay = 0.1\nc.KubeController.backoff_max_delay = 300\nc.KubeController.k8s_api_rate_limit = 50\nc.KubeController.k8s_api_rate_limit_burst = 100\nc.KubeController.proxy_tcp_entrypoint = \"web\""
    }
  },
  {
    "kind": "ConfigMap",
    "apiVersion": "v1",
    "metadata": {
      "name": "api-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "data": {
      "dask_gateway_config.py": "import os\nimport json\nimport sys\n\n# Add this directory to path to support extension modules\nsys.path.insert(0, os.path.dirname(os.path.realpath(__file__)))\n\n_PROPERTIES = json.loads(\"{\\\"gateway\\\":{\\\"affinity\\\":{},\\\"annotations\\\":{},\\\"auth\\\":{\\\"custom\\\":{\\\"class\\\":null,\\\"config\\\":{}},\\\"jupyterhub\\\":{\\\"apiToken\\\":null,\\\"apiUrl\\\":null},\\\"kerberos\\\":{\\\"keytab\\\":null},\\\"simple\\\":{\\\"password\\\":null},\\\"type\\\":\\\"simple\\\"},\\\"backend\\\":{\\\"environment\\\":{},\\\"image\\\":{\\\"name\\\":\\\"ghcr.io/dask/dask-gateway\\\",\\\"pullPolicy\\\":\\\"IfNotPresent\\\",\\\"tag\\\":\\\"2022.4.0\\\"},\\\"namespace\\\":null,\\\"scheduler\\\":{\\\"cores\\\":{\\\"limit\\\":null,\\\"request\\\":null},\\\"extraContainerConfig\\\":{},\\\"extraPodConfig\\\":{},\\\"memory\\\":{\\\"limit\\\":null,\\\"request\\\":null}},\\\"worker\\\":{\\\"cores\\\":{\\\"limit\\\":null,\\\"request\\\":null},\\\"extraContainerConfig\\\":{},\\\"extraPodConfig\\\":{},\\\"memory\\\":{\\\"limit\\\":null,\\\"request\\\":null},\\\"threads\\\":null}},\\\"image\\\":{\\\"name\\\":\\\"ghcr.io/dask/dask-gateway-server\\\",\\\"pullPolicy\\\":\\\"IfNotPresent\\\",\\\"tag\\\":\\\"2022.4.0\\\"},\\\"imagePullSecrets\\\":[],\\\"livenessProbe\\\":{\\\"enabled\\\":true,\\\"failureThreshold\\\":6,\\\"initialDelaySeconds\\\":5,\\\"periodSeconds\\\":10,\\\"timeoutSeconds\\\":2},\\\"loglevel\\\":\\\"INFO\\\",\\\"nodeSelector\\\":{},\\\"prefix\\\":\\\"/\\\",\\\"readinessProbe\\\":{\\\"enabled\\\":true,\\\"failureThreshold\\\":3,\\\"initialDelaySeconds\\\":5,\\\"periodSeconds\\\":10,\\\"timeoutSeconds\\\":2},\\\"replicas\\\":1,\\\"resources\\\":{},\\\"service\\\":{\\\"annotations\\\":{}},\\\"tolerations\\\":[]}}\")\n\ndef get_property(key, default=None):\n    \"\"\"Read a property from the configured helm values.\"\"\"\n    value = _PROPERTIES\n    for key2 in key.split(\".\"):\n        if not isinstance(value, dict) or key2 not in value:\n            return default\n        value = value[key2]\n    return value\n\nc.DaskGateway.log_level = \"INFO\"\n\n# Configure addresses\nc.DaskGateway.address = \":8000\"\nc.KubeBackend.api_url = 'http://api-release-name-dask-gateway.default:8000/api'\n\n# Configure the backend\nc.DaskGateway.backend_class = \"dask_gateway_server.backends.kubernetes.KubeBackend\"\nc.KubeBackend.gateway_instance = \"release-name-dask-gateway\"\n\n# Configure the dask cluster image\nimage_name = get_property(\"gateway.backend.image.name\")\nif image_name:\n    image_tag = get_property(\"gateway.backend.image.tag\")\n    c.KubeClusterConfig.image = (\n        \"%s:%s\" % (image_name, image_tag) if image_tag else image_name\n    )\n\n# Forward dask cluster configuration\nfor field, prop_name in [\n    # Scheduler config\n    (\"scheduler_cores\", \"scheduler.cores.request\"),\n    (\"scheduler_cores_limit\", \"scheduler.cores.limit\"),\n    (\"scheduler_memory\", \"scheduler.memory.request\"),\n    (\"scheduler_memory_limit\", \"scheduler.memory.limit\"),\n    (\"scheduler_extra_container_config\", \"scheduler.extraContainerConfig\"),\n    (\"scheduler_extra_pod_config\", \"scheduler.extraPodConfig\"),\n    # Worker config\n    (\"worker_cores\", \"worker.cores.request\"),\n    (\"worker_cores_limit\", \"worker.cores.limit\"),\n    (\"worker_memory\", \"worker.memory.request\"),\n    (\"worker_memory_limit\", \"worker.memory.limit\"),\n    (\"worker_threads\", \"worker.threads\"),\n    (\"worker_extra_container_config\", \"worker.extraContainerConfig\"),\n    (\"worker_extra_pod_config\", \"worker.extraPodConfig\"),\n    # Additional fields\n    (\"image_pull_policy\", \"image.pullPolicy\"),\n    (\"environment\", \"environment\"),\n    (\"namespace\", \"namespace\"),\n]:\n    value = get_property(\"gateway.backend.\" + prop_name)\n    if value is not None:\n        setattr(c.KubeClusterConfig, field, value)\n\n# Authentication\nauth_type = get_property(\"gateway.auth.type\")\nif auth_type == \"simple\":\n    c.DaskGateway.authenticator_class = \"dask_gateway_server.auth.SimpleAuthenticator\"\n    password = get_property(\"gateway.auth.simple.password\")\n    if password is not None:\n        c.SimpleAuthenticator.password = password\nelif auth_type == \"kerberos\":\n    c.DaskGateway.authenticator_class = \"dask_gateway_server.auth.KerberosAuthenticator\"\n    keytab = get_property(\"gateway.auth.kerberos.keytab\")\n    if keytab is not None:\n        c.KerberosAuthenticator.keytab = keytab\nelif auth_type == \"jupyterhub\":\n    c.DaskGateway.authenticator_class = \"dask_gateway_server.auth.JupyterHubAuthenticator\"\n    api_url = get_property(\"gateway.auth.jupyterhub.apiUrl\")\n    if api_url is None:\n        try:\n            api_url = \"http://{HUB_SERVICE_HOST}:{HUB_SERVICE_PORT}/hub/api\".format(**os.environ)\n        except Exception:\n            raise ValueError(\n                \"Failed to infer JupyterHub API url from environment, \"\n                \"please specify `gateway.auth.jupyterhub.apiUrl` in \"\n                \"your config file\"\n            )\n    c.DaskGateway.JupyterHubAuthenticator.jupyterhub_api_url = api_url\nelif auth_type == \"custom\":\n    auth_cls = get_property(\"gateway.auth.custom.class\")\n    c.DaskGateway.authenticator_class = auth_cls\n    auth_cls_name = auth_cls.rsplit('.', 1)[-1]\n    auth_config = c[auth_cls_name]\n    auth_config.update(get_property(\"gateway.auth.custom.config\") or {})\nelse:\n    raise ValueError(\"Unknown authenticator type %r\" % auth_type)"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "controller-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "gateway.dask.org"
        ],
        "resources": [
          "daskclusters",
          "daskclusters/status"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "traefik.containo.us"
        ],
        "resources": [
          "ingressroutes",
          "ingressroutetcps"
        ],
        "verbs": [
          "get",
          "create",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "endpoints"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets",
          "services"
        ],
        "verbs": [
          "create",
          "delete"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "api-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          "gateway.dask.org"
        ],
        "resources": [
          "daskclusters"
        ],
        "verbs": [
          "*"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "traefik-release-name-dask-gateway"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "services",
          "endpoints",
          "secrets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "ingresses/status"
        ],
        "verbs": [
          "update"
        ]
      },
      {
        "apiGroups": [
          "traefik.containo.us"
        ],
        "resources": [
          "ingressroutes",
          "ingressroutetcps",
          "ingressrouteudps",
          "middlewares",
          "middlewaretcps",
          "serverstransports",
          "tlsoptions",
          "tlsstores",
          "traefikservices"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "controller-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "controller-release-name-dask-gateway",
        "namespace": "default"
      }
    ],
    "roleRef": {
      "kind": "ClusterRole",
      "name": "controller-release-name-dask-gateway",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "api-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "api-release-name-dask-gateway",
        "namespace": "default"
      }
    ],
    "roleRef": {
      "kind": "ClusterRole",
      "name": "api-release-name-dask-gateway",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "traefik-release-name-dask-gateway"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "traefik-release-name-dask-gateway"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "traefik-release-name-dask-gateway",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "api-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "selector": {
        "app.kubernetes.io/name": "dask-gateway",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "gateway"
      },
      "ports": [
        {
          "protocol": "TCP",
          "port": 8000,
          "targetPort": 8000
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "traefik-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "spec": {
      "type": "LoadBalancer",
      "selector": {
        "app.kubernetes.io/name": "dask-gateway",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "traefik"
      },
      "ports": [
        {
          "name": "web",
          "targetPort": 8000,
          "port": 80
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "controller-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "spec": {
      "replicas": 1,
      "strategy": {
        "type": "Recreate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "dask-gateway",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "controller"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "dask-gateway",
            "helm.sh/chart": "dask-gateway-2022.4.0",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "2022.4.0",
            "app.kubernetes.io/managed-by": "Helm",
            "gateway.dask.org/instance": "release-name-dask-gateway",
            "app.kubernetes.io/component": "controller"
          },
          "annotations": {
            "checksum/configmap": "0cbbc4de72f1727bf4fe3f7f7c347f147a69689ec43d92b6cf90fbc246bac047"
          }
        },
        "spec": {
          "serviceAccountName": "controller-release-name-dask-gateway",
          "volumes": [
            {
              "name": "configmap",
              "configMap": {
                "name": "controller-release-name-dask-gateway"
              }
            }
          ],
          "containers": [
            {
              "name": "controller",
              "image": "ghcr.io/dask/dask-gateway-server:2022.4.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "dask-gateway-server",
                "kube-controller",
                "--config",
                "/etc/dask-gateway/dask_gateway_config.py"
              ],
              "volumeMounts": [
                {
                  "mountPath": "/etc/dask-gateway/",
                  "name": "configmap"
                }
              ],
              "ports": [
                {
                  "containerPort": 8000,
                  "name": "api"
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "api-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "dask-gateway",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "gateway"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "dask-gateway",
            "helm.sh/chart": "dask-gateway-2022.4.0",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "2022.4.0",
            "app.kubernetes.io/managed-by": "Helm",
            "gateway.dask.org/instance": "release-name-dask-gateway",
            "app.kubernetes.io/component": "gateway",
            "hub.jupyter.org/network-access-hub": "true"
          },
          "annotations": {
            "checksum/configmap": "53297c4f26ddc5a061f085658d95b1653288a7ad5471582b97241eebed085f8a",
            "checksum/secret": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b"
          }
        },
        "spec": {
          "serviceAccountName": "api-release-name-dask-gateway",
          "volumes": [
            {
              "name": "configmap",
              "configMap": {
                "name": "api-release-name-dask-gateway"
              }
            }
          ],
          "containers": [
            {
              "name": "gateway",
              "image": "ghcr.io/dask/dask-gateway-server:2022.4.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "dask-gateway-server",
                "--config",
                "/etc/dask-gateway/dask_gateway_config.py"
              ],
              "volumeMounts": [
                {
                  "mountPath": "/etc/dask-gateway/",
                  "name": "configmap"
                }
              ],
              "env": null,
              "ports": [
                {
                  "containerPort": 8000,
                  "name": "api"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/api/health",
                  "port": "api"
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 2,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/api/health",
                  "port": "api"
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 2,
                "failureThreshold": 3
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "traefik-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "dask-gateway",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "traefik"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "dask-gateway",
            "helm.sh/chart": "dask-gateway-2022.4.0",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "2022.4.0",
            "app.kubernetes.io/managed-by": "Helm",
            "gateway.dask.org/instance": "release-name-dask-gateway",
            "app.kubernetes.io/component": "traefik"
          }
        },
        "spec": {
          "serviceAccountName": "traefik-release-name-dask-gateway",
          "terminationGracePeriodSeconds": 60,
          "containers": [
            {
              "name": "traefik",
              "image": "traefik:2.6.3",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 11096,
                "runAsGroup": 1000,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "args": [
                "--global.checknewversion=False",
                "--global.sendanonymoususage=False",
                "--ping=true",
                "--providers.kubernetescrd",
                "--providers.kubernetescrd.labelselector=gateway.dask.org/instance=release-name-dask-gateway",
                "--providers.kubernetescrd.throttleduration=2",
                "--log.level=WARN",
                "--entryPoints.traefik.address=:9000",
                "--entryPoints.web.address=:8000"
              ],
              "ports": [
                {
                  "name": "traefik",
                  "containerPort": 9000
                },
                {
                  "name": "web",
                  "containerPort": 8000
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/ping",
                  "port": 9000
                },
                "failureThreshold": 1,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 2
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/ping",
                  "port": 9000
                },
                "failureThreshold": 3,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 2
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "traefik.containo.us/v1alpha1",
    "kind": "IngressRoute",
    "metadata": {
      "name": "api-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "spec": {
      "entryPoints": [
        "web"
      ],
      "routes": [
        {
          "match": "PathPrefix(`/`)",
          "kind": "Rule",
          "services": [
            {
              "name": "api-release-name-dask-gateway",
              "port": 8000
            }
          ]
        }
      ]
    }
  },
  {
    "apiVersion": "traefik.containo.us/v1alpha1",
    "kind": "Middleware",
    "metadata": {
      "name": "clusters-prefix-release-name-dask-gateway",
      "labels": {
        "app.kubernetes.io/name": "dask-gateway",
        "helm.sh/chart": "dask-gateway-2022.4.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2022.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "gateway.dask.org/instance": "release-name-dask-gateway"
      }
    },
    "spec": {
      "stripPrefixRegex": {
        "regex": [
          "/clusters/[a-zA-Z0-9.-]+"
        ]
      }
    }
  }
]