[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-dagster-user-deployments-user-deployments",
      "labels": {
        "helm.sh/chart": "dagster-user-deployments-0.14.20",
        "app.kubernetes.io/name": "dagster-user-deployments",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.14.20",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {}
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-dagster",
      "labels": {
        "helm.sh/chart": "dagster-0.14.20",
        "app.kubernetes.io/name": "dagster",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.14.20",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {}
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app": "postgresql",
        "chart": "postgresql-8.1.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "postgresql-password": "dGVzdA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "dagster-postgresql-secret",
      "labels": {
        "app": "dagster",
        "chart": "dagster-0.14.20",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "postgresql-password": "dGVzdA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-dagster-user-deployments-user-deployments-shared-env",
      "labels": {
        "app": "dagster-user-deployments",
        "chart": "dagster-user-deployments-0.14.20",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "DAGSTER_HOME": "/opt/dagster/dagster_home",
      "DAGSTER_K8S_PG_PASSWORD_SECRET": "dagster-postgresql-secret",
      "DAGSTER_K8S_INSTANCE_CONFIG_MAP": "release-name-dagster-user-deployments-instance",
      "DAGSTER_K8S_PIPELINE_RUN_NAMESPACE": "default",
      "DAGSTER_K8S_PIPELINE_RUN_ENV_CONFIGMAP": "release-name-dagster-user-deployments-pipeline-env"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-dagster-user-deployments-k8s-example-user-code-1-user-env",
      "labels": {
        "app": "dagster-user-deployments",
        "chart": "dagster-user-deployments-0.14.20",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": null
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-dagster-daemon-env",
      "labels": {
        "app": "dagster",
        "chart": "dagster-0.14.20",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "DAGSTER_HOME": "/opt/dagster/dagster_home",
      "DAGSTER_K8S_PG_PASSWORD_SECRET": "dagster-postgresql-secret",
      "DAGSTER_K8S_INSTANCE_CONFIG_MAP": "release-name-dagster-instance",
      "DAGSTER_K8S_PIPELINE_RUN_NAMESPACE": "default",
      "DAGSTER_K8S_PIPELINE_RUN_ENV_CONFIGMAP": "release-name-dagster-pipeline-env",
      "DAGSTER_K8S_PIPELINE_RUN_IMAGE": "docker.io/dagster/user-code-example:0.14.20",
      "DAGSTER_K8S_PIPELINE_RUN_IMAGE_PULL_POLICY": "Always"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-dagster-dagit-env",
      "labels": {
        "app": "dagster",
        "chart": "dagster-0.14.20",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "DAGSTER_HOME": "/opt/dagster/dagster_home",
      "DAGSTER_K8S_PG_PASSWORD_SECRET": "dagster-postgresql-secret",
      "DAGSTER_K8S_INSTANCE_CONFIG_MAP": "release-name-dagster-instance",
      "DAGSTER_K8S_PIPELINE_RUN_NAMESPACE": "default",
      "DAGSTER_K8S_PIPELINE_RUN_ENV_CONFIGMAP": "release-name-dagster-pipeline-env",
      "DAGSTER_K8S_PIPELINE_RUN_IMAGE": "docker.io/dagster/user-code-example:0.14.20",
      "DAGSTER_K8S_PIPELINE_RUN_IMAGE_PULL_POLICY": "Always"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-dagster-flower-env",
      "labels": {
        "app": "dagster",
        "chart": "dagster-0.14.20",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "DAGSTER_HOME": "/opt/dagster/dagster_home",
      "DAGSTER_K8S_PG_PASSWORD_SECRET": "dagster-postgresql-secret",
      "DAGSTER_K8S_INSTANCE_CONFIG_MAP": "release-name-dagster-instance",
      "DAGSTER_K8S_PIPELINE_RUN_NAMESPACE": "default",
      "DAGSTER_K8S_PIPELINE_RUN_ENV_CONFIGMAP": "release-name-dagster-pipeline-env",
      "DAGSTER_K8S_PIPELINE_RUN_IMAGE": "docker.io/dagster/user-code-example:0.14.20",
      "DAGSTER_K8S_PIPELINE_RUN_IMAGE_PULL_POLICY": "Always"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-dagster-pipeline-env",
      "labels": {
        "app": "dagster",
        "chart": "dagster-0.14.20",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "DAGSTER_HOME": "/opt/dagster/dagster_home",
      "DAGSTER_K8S_PG_PASSWORD_SECRET": "dagster-postgresql-secret",
      "DAGSTER_K8S_INSTANCE_CONFIG_MAP": "release-name-dagster-instance",
      "DAGSTER_K8S_PIPELINE_RUN_NAMESPACE": "default",
      "DAGSTER_K8S_PIPELINE_RUN_ENV_CONFIGMAP": "release-name-dagster-pipeline-env",
      "DAGSTER_K8S_PIPELINE_RUN_IMAGE": "docker.io/dagster/user-code-example:0.14.20",
      "DAGSTER_K8S_PIPELINE_RUN_IMAGE_PULL_POLICY": "Always"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-dagster-instance",
      "labels": {
        "app": "dagster",
        "chart": "dagster-0.14.20",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "dagster.yaml": "scheduler:      \n  module: dagster.core.scheduler\n  class: DagsterDaemonScheduler\n\nschedule_storage:\n  module: dagster_postgres.schedule_storage\n  class: PostgresScheduleStorage\n  config:        \n    postgres_db:\n      username: test\n      password:\n        env: DAGSTER_PG_PASSWORD\n      hostname: release-name-postgresql\n      db_name: test\n      port: 5432\n      params:\n        {}\n\nrun_launcher:      \n  module: dagster_k8s\n  class: K8sRunLauncher\n  config:\n    load_incluster_config: true\n    job_namespace: default\n    image_pull_policy: Always\n    service_account_name: release-name-dagster\n    dagster_home: \"/opt/dagster/dagster_home\"\n    instance_config_map: \"release-name-dagster-instance\"\n    postgres_password_secret: \"dagster-postgresql-secret\"\n\nrun_storage:\n  module: dagster_postgres.run_storage\n  class: PostgresRunStorage\n  config:        \n    postgres_db:\n      username: test\n      password:\n        env: DAGSTER_PG_PASSWORD\n      hostname: release-name-postgresql\n      db_name: test\n      port: 5432\n      params:\n        {}\n\nevent_log_storage:\n  module: dagster_postgres.event_log\n  class: PostgresEventLogStorage\n  config:        \n    postgres_db:\n      username: test\n      password:\n        env: DAGSTER_PG_PASSWORD\n      hostname: release-name-postgresql\n      db_name: test\n      port: 5432\n      params:\n        {}\ncompute_logs:      \n  module: dagster.core.storage.noop_compute_log_manager\n  class: NoOpComputeLogManager\n\ntelemetry:\n  enabled: true\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-dagster-workspace-yaml",
      "labels": {
        "app": "dagster",
        "chart": "dagster-0.14.20",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "workspace.yaml": "load_from:\n  - grpc_server:\n      host: k8s-example-user-code-1\n      port: 3030\n      location_name: k8s-example-user-code-1\n"
    }
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-dagster-user-deployments-role",
      "labels": {
        "helm.sh/chart": "dagster-user-deployments-0.14.20",
        "app.kubernetes.io/name": "dagster-user-deployments",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.14.20",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "jobs",
          "jobs/status",
          "cronjobs"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "pods/log",
          "pods/status"
        ],
        "verbs": [
          "*"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-dagster-role",
      "labels": {
        "app": "dagster",
        "chart": "dagster-0.14.20",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "jobs",
          "jobs/status",
          "cronjobs"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "pods/log",
          "pods/status"
        ],
        "verbs": [
          "*"
        ]
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-dagster-user-deployments-rolebinding",
      "labels": {
        "helm.sh/chart": "dagster-user-deployments-0.14.20",
        "app.kubernetes.io/name": "dagster-user-deployments",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.14.20",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-dagster-user-deployments-user-deployments"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-dagster-user-deployments-role"
    }
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-dagster-rolebinding",
      "labels": {
        "app": "dagster",
        "chart": "dagster-0.14.20",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-dagster"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-dagster-role"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "k8s-example-user-code-1",
      "labels": {
        "helm.sh/chart": "dagster-user-deployments-0.14.20",
        "app.kubernetes.io/name": "dagster-user-deployments",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.14.20",
        "app.kubernetes.io/managed-by": "Helm",
        "component": "user-deployments",
        "deployment": "k8s-example-user-code-1"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 3030,
          "protocol": "TCP",
          "name": "grpc"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "dagster-user-deployments",
        "app.kubernetes.io/instance": "release-name",
        "component": "user-deployments",
        "deployment": "k8s-example-user-code-1"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql-headless",
      "labels": {
        "app": "postgresql",
        "chart": "postgresql-8.1.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app": "postgresql",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app": "postgresql",
        "chart": "postgresql-8.1.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app": "postgresql",
        "release": "release-name",
        "role": "master"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-dagit",
      "labels": {
        "helm.sh/chart": "dagster-0.14.20",
        "app.kubernetes.io/name": "dagster",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.14.20",
        "app.kubernetes.io/managed-by": "Helm",
        "component": "dagit"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "dagster",
        "app.kubernetes.io/instance": "release-name",
        "component": "dagit"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
      "labels": {
        "helm.sh/chart": "dagster-user-deployments-0.14.20",
        "app.kubernetes.io/name": "dagster-user-deployments",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.14.20",
        "app.kubernetes.io/managed-by": "Helm",
        "component": "user-deployments",
        "deployment": "k8s-example-user-code-1"
      },
      "annotations": {}
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "dagster-user-deployments",
          "app.kubernetes.io/instance": "release-name",
          "component": "user-deployments",
          "deployment": "k8s-example-user-code-1"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "dagster-user-deployments",
            "app.kubernetes.io/instance": "release-name",
            "component": "user-deployments",
            "deployment": "k8s-example-user-code-1"
          },
          "annotations": {
            "checksum/dagster-user-deployment": "f8801c77a5e8b831a89388c5cb7749159d6b5507f878d4d1df2da34cf0c63709"
          }
        },
        "spec": {
          "imagePullSecrets": [],
          "serviceAccountName": "release-name-dagster-user-deployments-user-deployments",
          "securityContext": {},
          "containers": [
            {
              "name": "dagster-user-deployments",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "imagePullPolicy": "Always",
              "image": "docker.io/dagster/user-code-example:0.14.20",
              "command": [
                "dagster"
              ],
              "args": [
                "api",
                "grpc",
                "-h",
                "0.0.0.0",
                "-p",
                "3030",
                "--python-file",
                "/example_project/example_repo/repo.py"
              ],
              "env": [
                {
                  "name": "DAGSTER_CURRENT_IMAGE",
                  "value": "docker.io/dagster/user-code-example:0.14.20"
                },
                {
                  "name": "DAGSTER_PG_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "dagster-postgresql-secret",
                      "key": "postgresql-password"
                    }
                  }
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "release-name-dagster-user-deployments-user-deployments-shared-env"
                  }
                },
                {
                  "configMapRef": {
                    "name": "release-name-dagster-user-deployments-k8s-example-user-code-1-user-env"
                  }
                },
                {
                  "secretRef": {
                    "name": "dagster-celery-config-secret",
                    "optional": true
                  }
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "dagster",
                    "api",
                    "grpc-health-check",
                    "-p",
                    "3030"
                  ]
                },
                "periodSeconds": 20,
                "timeoutSeconds": 3,
                "successThreshold": 1,
                "failureThreshold": 3
              }
            }
          ],
          "nodeSelector": {},
          "affinity": {},
          "tolerations": []
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-dagster-daemon",
      "labels": {
        "helm.sh/chart": "dagster-0.14.20",
        "app.kubernetes.io/name": "dagster",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.14.20",
        "app.kubernetes.io/managed-by": "Helm",
        "component": "dagster-daemon",
        "deployment": "daemon"
      },
      "annotations": null
    },
    "spec": {
      "replicas": 1,
      "strategy": {
        "type": "Recreate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "dagster",
          "app.kubernetes.io/instance": "release-name",
          "component": "dagster-daemon",
          "deployment": "daemon"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "dagster",
            "app.kubernetes.io/instance": "release-name",
            "component": "dagster-daemon",
            "deployment": "daemon"
          },
          "annotations": {
            "checksum/dagster-workspace": "a1b0378c0d096d6abbe022201f6c85b2ba655c426e026cb43357993a2a42f205",
            "checksum/dagster-instance": "c93bf456f78d98c26da560c2c2cc68e67d0b4f37b1b3b3a8bffd42e361d4e130"
          }
        },
        "spec": {
          "imagePullSecrets": [],
          "serviceAccountName": "release-name-dagster",
          "securityContext": {},
          "initContainers": [
            {
              "name": "check-db-ready",
              "image": "library/postgres:9.6.21",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c",
                "until pg_isready -h release-name-postgresql -p 5432 -U test; do echo waiting for database; sleep 2; done;"
              ],
              "securityContext": {}
            },
            {
              "name": "init-user-deployment-k8s-example-user-code-1",
              "image": "docker.io/busybox:1.28",
              "command": [
                "sh",
                "-c",
                "until nslookup k8s-example-user-code-1; do echo waiting for user service; sleep 2; done"
              ]
            }
          ],
          "containers": [
            {
              "name": "dagster",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "imagePullPolicy": "Always",
              "image": "docker.io/dagster/dagster-celery-k8s:0.14.20",
              "command": [
                "/bin/bash",
                "-c",
                "dagster-daemon run -w /dagster-workspace/workspace.yaml"
              ],
              "env": [
                {
                  "name": "DAGSTER_PG_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "dagster-postgresql-secret",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "DAGSTER_DAEMON_HEARTBEAT_TOLERANCE",
                  "value": "300"
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "release-name-dagster-daemon-env"
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "dagster-instance",
                  "mountPath": "/opt/dagster/dagster_home/dagster.yaml",
                  "subPath": "dagster.yaml"
                },
                {
                  "name": "dagster-workspace-yaml",
                  "mountPath": "/dagster-workspace/"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "nodeSelector": {},
          "volumes": [
            {
              "name": "dagster-instance",
              "configMap": {
                "name": "release-name-dagster-instance"
              }
            },
            {
              "name": "dagster-workspace-yaml",
              "configMap": {
                "name": "release-name-dagster-workspace-yaml"
              }
            }
          ],
          "affinity": {},
          "tolerations": []
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-dagit",
      "labels": {
        "helm.sh/chart": "dagster-0.14.20",
        "app.kubernetes.io/name": "dagster",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.14.20",
        "app.kubernetes.io/managed-by": "Helm",
        "component": "dagit"
      },
      "annotations": null
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "dagster",
          "app.kubernetes.io/instance": "release-name",
          "component": "dagit"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "dagster",
            "app.kubernetes.io/instance": "release-name",
            "component": "dagit"
          },
          "annotations": {
            "checksum/dagster-workspace": "a1b0378c0d096d6abbe022201f6c85b2ba655c426e026cb43357993a2a42f205",
            "checksum/dagster-instance": "c93bf456f78d98c26da560c2c2cc68e67d0b4f37b1b3b3a8bffd42e361d4e130"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-dagster",
          "securityContext": {},
          "initContainers": [
            {
              "name": "check-db-ready",
              "image": "library/postgres:9.6.21",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c",
                "until pg_isready -h release-name-postgresql -p 5432 -U test; do echo waiting for database; sleep 2; done;"
              ],
              "securityContext": {}
            },
            {
              "name": "init-user-deployment-k8s-example-user-code-1",
              "image": "docker.io/busybox:1.28",
              "command": [
                "sh",
                "-c",
                "until nslookup k8s-example-user-code-1; do echo waiting for user service; sleep 2; done"
              ]
            }
          ],
          "containers": [
            {
              "name": "dagster",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "imagePullPolicy": "Always",
              "image": "docker.io/dagster/dagster-celery-k8s:0.14.20",
              "command": [
                "/bin/bash",
                "-c",
                " dagit -h 0.0.0.0 -p 80 -w /dagster-workspace/workspace.yaml"
              ],
              "env": [
                {
                  "name": "DAGSTER_PG_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "dagster-postgresql-secret",
                      "key": "postgresql-password"
                    }
                  }
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "release-name-dagster-dagit-env"
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "dagster-instance",
                  "mountPath": "/opt/dagster/dagster_home/dagster.yaml",
                  "subPath": "dagster.yaml"
                },
                {
                  "name": "dagster-workspace-yaml",
                  "mountPath": "/dagster-workspace/"
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/dagit_info",
                  "port": 80
                },
                "periodSeconds": 20,
                "successThreshold": 1,
                "timeoutSeconds": 3
              }
            }
          ],
          "volumes": [
            {
              "name": "dagster-instance",
              "configMap": {
                "name": "release-name-dagster-instance"
              }
            },
            {
              "name": "dagster-workspace-yaml",
              "configMap": {
                "name": "release-name-dagster-workspace-yaml"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app": "postgresql",
        "chart": "postgresql-8.1.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "serviceName": "release-name-postgresql-headless",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app": "postgresql",
          "release": "release-name",
          "role": "master"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-postgresql",
          "labels": {
            "app": "postgresql",
            "chart": "postgresql-8.1.0",
            "release": "release-name",
            "heritage": "Helm",
            "role": "master"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "initContainers": [
            {
              "name": "init-chmod-data",
              "image": "docker.io/bitnami/minideb:stretch",
              "imagePullPolicy": "Always",
              "resources": {
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                }
              },
              "command": [
                "/bin/sh",
                "-c",
                "mkdir -p /bitnami/postgresql/data\nchmod 700 /bitnami/postgresql/data\nfind /bitnami/postgresql -mindepth 0 -maxdepth 1 -not -name \".snapshot\" -not -name \"lost+found\" | \\\n  xargs chown -R 1001:1001\nchmod -R 777 /dev/shm\n"
              ],
              "securityContext": {
                "runAsUser": 0
              },
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql",
                  "subPath": null
                },
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "release-name-postgresql",
              "image": "docker.io/library/postgres:9.6.21",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "securityContext": {
                "runAsUser": 11007,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432"
                },
                {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql"
                },
                {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "test"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "test"
                },
                {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no"
                }
              ],
              "ports": [
                {
                  "name": "tcp-postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \"test\" -d \"test\" -h 127.0.0.1 -p 5432"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "pg_isready -U \"test\" -d \"test\" -h 127.0.0.1 -p 5432\n"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": [
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql",
                  "subPath": null
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "dshm",
              "emptyDir": {
                "medium": "Memory",
                "sizeLimit": "1Gi"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  }
]