apiVersion: v1
kind: ConfigMap
metadata:
  name: simpleexampleservice
data:
  serviceConfig: |
    name: simpleexampleservice
    desired_state: "load"
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: xos-core:50051
    event_bus:
      endpoint: "cord-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.simpleexampleservice
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-simpleexampleservice-tosca
data:
  010-simpleexampleservice-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0

    imports:
      - custom_types/image.yaml
      - custom_types/site.yaml
      - custom_types/simpleexampleservice.yaml
      - custom_types/slice.yaml
      - custom_types/trustdomain.yaml

    description: Configures the simple example service

    topology_template:
      node_templates:

        default_trustdomain:
          type: tosca.nodes.TrustDomain
          properties:
            name: "default"
            must-exist: true

        httpd_image:
          type: tosca.nodes.Image
          properties:
            name: "httpd"
            tag: "2.4"

        service#simpleexampleservice:
          type: tosca.nodes.SimpleExampleService
          properties:
            name: simpleexampleservice
            service_message: hello
        mysite:
          type: tosca.nodes.Site
          properties:
            name: "mysite"
            must-exist: true
        simpleexampleservice_slice:
          type: tosca.nodes.Slice
          properties:
            name: "mysite_simpleexampleservice"
          requirements:
            - site:
                node: mysite
                relationship: tosca.relationships.BelongsToOne
            - trust_domain:
                node: default_trustdomain
                relationship: tosca.relationships.BelongsToOne
            - default_image:
                node: httpd_image
                relationship: tosca.relationships.BelongsToOne
            - service:
                node: service#simpleexampleservice
                relationship: tosca.relationships.BelongsToOne
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-simpleexampleservice
  labels:
    app: simpleexampleservice
    chart: simpleexampleservice-1.2.4
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simpleexampleservice
      release: release-name
  template:
    metadata:
      labels:
        app: simpleexampleservice
        release: release-name
    spec:
      containers:
        - name: simpleexampleservice
          image: xosproject/simpleexampleservice-synchronizer:1.2.3
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: simpleexampleservice-config
              mountPath: /opt/xos/synchronizers/simpleexampleservice/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: simpleexampleservice-config
          configMap:
            name: simpleexampleservice
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-demo-simpleexampleservice-tosca-loader
  labels:
    app: demo-simpleexampleservice
    chart: demo-simpleexampleservice-1.2.4
    release: release-name
    heritage: Helm
spec:
  template:
    metadata:
      labels:
        app: demo-simpleexampleservice
        release: release-name
      annotations:
        checksum/config: b84baace7ffeaccaa926ffca74a55f4a7cd4b2651a73eabb80295d375e6f3a2d
    spec:
      restartPolicy: OnFailure
      containers:
        - name: demo-simpleexampleservice-tosca-loader
          image: xosproject/tosca-loader:2.0.0
          imagePullPolicy: Always
          env:
            - name: XOS_USER
              value: admin@opencord.org
            - name: XOS_PASSWD
              valueFrom:
                secretKeyRef:
                  name: xos-admin-passwd-secret
                  key: password
          volumeMounts:
            - name: demo-simpleexampleservice-tosca
              mountPath: /opt/tosca
      volumes:
        - name: demo-simpleexampleservice-tosca
          configMap:
            name: demo-simpleexampleservice-tosca
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-api-test
  annotations:
    helm.sh/hook: test-success
spec:
  restartPolicy: Never
  containers:
    - name: release-name-api-test
      image: xosproject/xos-api-tester:master
      imagePullPolicy: Always
      volumeMounts:
        - name: log-volume
          mountPath: /src/cord-api/Tests/Log/
      env:
        - name: SERVER_IP
          value: xos-chameleon
        - name: SERVER_PORT
          value: "9101"
        - name: XOS_USER
          value: admin@opencord.org
        - name: XOS_PASSWD
          value: letmein
      command:
        - pybot
        - -L
        - TRACE
        - -d
        - Log
        - -T
        - DemoSimpleExampleService.robot
  volumes:
    - name: log-volume
      hostPath:
        path: /tmp/helm_test_demo-simpleexampleservice_logs_20220612T091026.26Z
        type: DirectoryOrCreate
