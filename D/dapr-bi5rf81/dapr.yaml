apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dashboard-reader
---
apiVersion: v1
kind: Secret
metadata:
  name: dapr-webhook-cert
  labels:
    app: dapr-operator
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwRENDQW95Z0F3SUJBZ0lSQUw1bzNJY3k2SlJlNzFSR2wrQi92WWd3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQXhNUFpHRndjaTEzWldKb2IyOXJMV05oTUI0WERUSXlNRFl4TWpBNE5UWXlORm9YRFRNeQpNRFl3T1RBNE5UWXlORm93RnpFVk1CTUdBMVVFQXhNTVpHRndjaTEzWldKb2IyOXJNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5ZlhleGJhQkFETkVUSE8vVWFjV2FWVWs0ZkludFN0ckNyL3gKZmxNK1p4alVJQ082U3BkbEJqTm1xSHpkZG5PVERUbVVuczIxWGptNjh2UFVoVUFYSndwVVdJZkhDazBQUjd3awpPeWgvNjQxVUc2WEE2R3hGWFFnckt1MnU3Ym91b3VPZVlWcWdqK0VONHlmcXZaNzlVNnpVbmRqVXZVZlprQXZ4CjBuSmtxeCtRN0g5ZlZYR0RQRmNzRzdYOG5MUXRtV1prcEpIcFNQMVdTSVJmLzF6MXY1ZktwK1oyRlRUQVVGYWkKdmphVWIzYysvQzA1TnJVcm10a1RGTlEwUXZua05zaGhvaXNCeVhuN3g3R1pyVElydDE2eXYva0F5RnU0b2hZZQpzeEFobXZhSG5iejBSUEZHd01qbEduTDM3UWkzUEppeEQ4emFrNjc0TzVHUEc1Z0Npd0lEQVFBQm80SG5NSUhrCk1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXcKREFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlQ2dVhwZTkzckJBN2NmcFVobkxIY2gyRWVxNERDQgpnd1lEVlIwUkJId3dlb0lVWkdGd2NpMTNaV0pvYjI5ckxtUmxabUYxYkhTQ0dHUmhjSEl0ZDJWaWFHOXZheTVrClpXWmhkV3gwTG5OMlk0SWdaR0Z3Y2kxM1pXSm9iMjlyTG1SbFptRjFiSFF1YzNaakxtTnNkWE4wWlhLQ0ptUmgKY0hJdGQyVmlhRzl2YXk1a1pXWmhkV3gwTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQk9GMTdFZEVoODlRZ2MwS0R3U08yNTdINjlnb2xjSjliZjZsK0c1YnYrR1Y1aWx3UEd5V2taCjF2T3RzeXlDbFpuQThnUlF0Y051aEU2cEtXYWZLbmZJK3lyRzVxZDdmNVo1SFB3RVFnSFBqMUlWTVM0YnFib20KdFlTeUh1RjhHTDNreVB1SThMYzZJYWxYTHJUcENaN1prLzVpSUhDQ3dPcXpJcnFpdGJMOHNtRVg4UStyK1FWdQo1TXhXWmxUeUhsQUZRM0M4ZlhzT2xpaU1MWWdBekxPY1hvYXk1cW1qb1ZHSmFTSUVVUkNPSlAxQXBrY1IyRTRjCmhvWEMwRDhiNUF1SlBoNzlQTUJkOTBrQjQ0KzF0NXYzRU5Wb3ltUjEvWDZ5VkIvWkM5SXhWenVqcG5SNnppNFMKNFN4WlFQU2RNc1lZb01SWkJ4UXovWDgydnBkQXhTWloKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeWZYZXhiYUJBRE5FVEhPL1VhY1dhVlVrNGZJbnRTdHJDci94ZmxNK1p4alVJQ082ClNwZGxCak5tcUh6ZGRuT1REVG1VbnMyMVhqbTY4dlBVaFVBWEp3cFVXSWZIQ2swUFI3d2tPeWgvNjQxVUc2WEEKNkd4RlhRZ3JLdTJ1N2JvdW91T2VZVnFnaitFTjR5ZnF2Wjc5VTZ6VW5kalV2VWZaa0F2eDBuSmtxeCtRN0g5ZgpWWEdEUEZjc0c3WDhuTFF0bVdaa3BKSHBTUDFXU0lSZi8xejF2NWZLcCtaMkZUVEFVRmFpdmphVWIzYysvQzA1Ck5yVXJtdGtURk5RMFF2bmtOc2hob2lzQnlYbjd4N0daclRJcnQxNnl2L2tBeUZ1NG9oWWVzeEFobXZhSG5iejAKUlBGR3dNamxHbkwzN1FpM1BKaXhEOHphazY3NE81R1BHNWdDaXdJREFRQUJBb0lCQUgvUkNQVnVaTVJBcmZnSQp4VXVqQ004UElQR1N0VWkydXQ4cHpXZmF2VUs0ZHdBRVBKR2FzVWcwWGNOQ2kxSzlJSk1kSHc5R040UHoyM3FKCmtMWG9jdjYxVGQ1ZHlEMmZ1WXozNktJOEpvRm9oNU9iMnJQK1dnUGYrSm9KcFUwMUtQRFVSOWRyYVBUR1JXaS8KU1pSS3ZCOHA0Y0lvaWJObGRxN3dzRkkxTGJzU2RTdTY2MHZseFB2RzhKMVhUUXhJQlY0MnRNYW5SdngwK3R3WQozekZDckRSNzRJeDNBQVQveExjNENsazRxdGJ1Zlo4Mld0dzM3Yy9SandQSjlGZldHb3dZVHBMemJYNnRyeDZ0CmhnY3czeGdJZVhseFZDbjloOUlWV2VzOVF2azZzMk9iVUFxeVc1d3NseG50cmI4bldIcGxlaE9XYUQ2bFlrQUoKUTZTc1Bka0NnWUVBenYra1JockRRYkpja3ZHY0xtUHYwVUZpcGJpQjN1cjJ5L2lqZHFlZ0x6dE5UemhWdjVoZgpsdTdpK3lYTTFDWlpyNDFxQkE1WjBRakk4SllQNHFSSW5RUE1wMldSdm1qYnFFaFBlSE5ocGZWa1poL2twVUNTCjZXRG55blJQelh0V2lXUCsvamx3RCtwbHJIaG5GeEhRNHAzMmprNHRaZHdrSVd4ZWVJRE4wbVVDZ1lFQStjVG8KMU5BTGhHRWdVMjR0OWhKRmNKNGhFY2xVK3BZOXYycVA2MktHN1Y1L3Fyci9TNWZXUGxkWDZGaGZENGdYN3lCdApLdzU2Z3FYRXEyaWI5d0NpZk1jam9kTVJkTEVaK3FxanVvZTAva0dSNkZSTEorU0hPRXN3NkxSK3g1YUxkR2FZCnM4eStrYkdPdFVaM1dVL2RLOEN5aWN5UUliT3pEUXA5NEtlZHVpOENnWUVBc21CVGxHSGRudEJ2dStUZW5JOWMKQ3F2WXNVdzFCZjdlVzlqUUxDQzVCZHFKZlZuamNxNkF1UlQwbmszdG0yZk00MTN1WEw1dElaZjdhRzg0RXl0VQpzNUdobXlNSW05ZkthZEtlUVFMVXcrbVo4Zk5MMmlleU1kQmpEZkI3RUd4WG54OS9qbDI2dHN4YmYydG1FdGcwCmRBU0JnaEhXUnkrVUp3VTJ4NHJmVW8wQ2dZQTlPN1FsTUZnU2ZVbFNpdW1Ec1ZrSzBnbWpkYXQ2djhpbG0vZHEKcXI0UGhhSmc5ZlZPMEF1N1B1aVRVczhEWE1jWlhlYkZyb2dFYmFWNHJHM0lNWVNrZUtIWXM0bE5CWG9zQlJlYwp6RlpvR3lVdFF6VWxzNVlmQy9nU3BPV01BdkZ2ZVJPb3lPSlRqNmMvOCtXZ3BMN0JVajJ6SU02WkpKZ1o4MStHCjZ6RDFDd0tCZ0U5eG95TmlEN2tiRzBoNGVsanhBZDE4NEMvWTlJck5kNDl1N3R6WHc3N2xaQnpNOXplY3Z0OTUKVU52QUxES1l0YnpZYnBBZHpyTVNXc3ZUOFVIb2UwN05OYldZMnFLRUg5MlNvVTQxMnowKzVmYXZXdXdrc2UvWgpCdFpHZnJTSDlENTNlcTR1RXBXdVkxdkJDS3llTVEzZnRBd3NibVduSExsNXQ1N29QUFFYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
apiVersion: v1
kind: Secret
metadata:
  name: dapr-webhook-ca
  labels:
    app: dapr-operator
data:
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJRENDQWdpZ0F3SUJBZ0lSQU9RUnRRNGZHR2RuMDFSL1NRaU11WjB3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQXhNUFpHRndjaTEzWldKb2IyOXJMV05oTUI0WERUSXlNRFl4TWpBNE5UWXlORm9YRFRNeQpNRFl3T1RBNE5UWXlORm93R2pFWU1CWUdBMVVFQXhNUFpHRndjaTEzWldKb2IyOXJMV05oTUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNG1qT2hwZXM5eldkZGRoWTU0WWt6N0JlYWZNcXVZMSsKYXd6a2p0ek5VdmRHT1d3SEVlODlRNlEzNGl6S0NrK1BmV0dXVzFvam1EazEyTE45bjRGSHFmc3ZwVUROeWt3SwptdkJIaGJaS2tQUkNKRXZJZlJSZTQ1YUdEdlRPRDU0YTJtV2REMWVUMlpmeHVLYWp1L0RHZ09KdVBBRlIrMCswCmg1bkxrUzBvbVUzY3E1U2FrMkFiYTlsaDlzeGlYSWZ2S3lqbnFYZml0bVpnVWRlTjNaZm5wL3JkcU9ZY2I5NjkKNXRNUFltbHVPaEpSSi9saENJallUZzFVUVAyY2ZWdURaemZ6YVp6eWFRU3RKMFMrY25CbVVKMGp0VmNrdDU5KwpJWnF5WEsyTllMNG1hU0c3SUt3cWx5NEtNYkxqYkJ0ejY1WEtJbjR1NVVobU12bDVuMHJyQndJREFRQUJvMkV3Clh6QU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRlBxNWVsNzNlc0VEdHgrbFNHY3NkeUhZUjZyZwpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFkTWJwMGM1TUR5QjBaTlNRcWFiZ055ZzEyeXY5K1FKZlFkekd1Ckw3L2M2Vm9FbFJGL2lWR3BDWmh4U25Ndm4wcStPZXRrTmc2b29QcWpXVkdPTnVqWEtrZ2hqU3FXWUN4Zm9kY3MKSFEwQkhNSDQyNHVqQU9meWtHOFllUGZJMFVMNGVXVzMveHZZSFdOQW9KMDVENnl2Rlp2MTcyQzlUa3M4bGRidAptUHdaMlh0QUo4Nnlrb3Q0T1hRUlFNYmRIV3pYMFpzQWFTVG9QY0NvbnZQL051b0ZiQVhZZHFXRlJyVGdYd0NrCitraEpjWkovVEhHRlV0TFFjY0k1Y3pFRXUvM3pLMG5TOWZvWDE5dFhmZStNK1RTQ3FWQ1hodGJYZW1JanY3eEMKN1VxSXZlN0wzcnBBWFNGcUxaS2U4NjY0d1pjZldiQUpHYzFyVnd6eWdDR01OQnB6Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
apiVersion: v1
kind: Secret
metadata:
  name: dapr-trust-bundle
  labels:
    app: dapr-sentry
data: null
---
apiVersion: v1
kind: Secret
metadata:
  name: dapr-sidecar-injector-cert
  labels:
    app: dapr-sidecar-injector
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQzakNDQXNhZ0F3SUJBZ0lSQUxpT2ZvTzhlT2NiQ0FOMGVCVituMFl3RFFZSktvWklodmNOQVFFTEJRQXcKSXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1YW1WamRHOXlMV05oTUI0WERUSXlNRFl4TWpBNApOVFl5TkZvWERUTXlNRFl3T1RBNE5UWXlORm93SURFZU1Cd0dBMVVFQXhNVlpHRndjaTF6YVdSbFkyRnlMV2x1CmFtVmpkRzl5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5Z2d2aTlWbzYvY0YKSjZnVFpBMTRzNmQ2V1czL0dBUHh2b3FOZUIvRW5vYmdrU0tqNWRQNHVYdm9iR0syeE9DbC9DYmdHd1lFQ050SQpkTmhGdHc1bFVkdnhOVzQwM2pqdnZWQ3JxNEMxamRuUnpobitQR3Fwd0FDQkVLMkxJVEhBVkpYNVRZR2IyOUw4Ck1MTEIxalJmQVY1dzMvRjdMZ0dGRjJYMFFTa3Irb2FZeWU1S0h0VDl3UFQrUFd6SjFIRFRWSk1XVWNNRnEySGIKcTlOOThOcmxHMm9YaFJEN3NpcE90VC9JYjQ4TUkxUU9NWFJrRW93RVQ5MDZ2WXJKS3B1THFaVjVadkt1Z2dCaApiblBYZGFUeS9oaEt0Q3hLL1dGeEdMRU5JYlowT1o0UW5jWVNHMW9URFhLanA0MXJkcjJTMDdyTDN6Q00xa044CkdTcDFmTGVPV3dJREFRQUJvNElCRGpDQ0FRb3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUcKQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRlBuagpBMmVJNGhIS2JxVjZLL3lLRkhuMHdNK2tNSUdwQmdOVkhSRUVnYUV3Z1o2Q0hXUmhjSEl0YzJsa1pXTmhjaTFwCmJtcGxZM1J2Y2k1a1pXWmhkV3gwZ2lGa1lYQnlMWE5wWkdWallYSXRhVzVxWldOMGIzSXVaR1ZtWVhWc2RDNXoKZG1PQ0tXUmhjSEl0YzJsa1pXTmhjaTFwYm1wbFkzUnZjaTVrWldaaGRXeDBMbk4yWXk1amJIVnpkR1Z5Z2k5awpZWEJ5TFhOcFpHVmpZWEl0YVc1cVpXTjBiM0l1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiREFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU90M3FBTVVsaktFYW5OZDJ0UktDSElnZFk1VjFWNWhBOEdHaHY2VGkKNkNwTDB1N0laK2pLSVZQUnp0QjY5TncrWSt2YktlZXFGdzd5c054bkYvM1VTZ1BoUjlyWGdaSlFqVnhJRnVVVQpwN2xyeTRZQzc5WnlhMWRxc2pEbjNIVXEwWFdDMDZ0REpMWko0a09KWVFzZU9IL3FwZHBsZENiV3ZQT21vR1pLCmI3MUxVUVQ4TERzYTRLcHZlWnBVWlFmNm1LV2N4QmhDdFdmRGJiT0sxSS9aK3JjKzJabkxFV3p2NWF0aUNVejYKeUh0Y1FwV0V5TDNHNUNnMzRadTBIMmJtRHJvWVROWVRHWG9NZm90a0oyclpidTFQbmNNVUNWdU9sUDdRY3NKZAorekxrdGw5L203ZE1JS1JDN3hGMEcxTFFBdzRsck5DeW9ueFFraVlXQVhNd2ZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeWdndmk5Vm82L2NGSjZnVFpBMTRzNmQ2V1czL0dBUHh2b3FOZUIvRW5vYmdrU0tqCjVkUDR1WHZvYkdLMnhPQ2wvQ2JnR3dZRUNOdElkTmhGdHc1bFVkdnhOVzQwM2pqdnZWQ3JxNEMxamRuUnpobisKUEdxcHdBQ0JFSzJMSVRIQVZKWDVUWUdiMjlMOE1MTEIxalJmQVY1dzMvRjdMZ0dGRjJYMFFTa3Irb2FZeWU1SwpIdFQ5d1BUK1BXekoxSERUVkpNV1VjTUZxMkhicTlOOThOcmxHMm9YaFJEN3NpcE90VC9JYjQ4TUkxUU9NWFJrCkVvd0VUOTA2dllySktwdUxxWlY1WnZLdWdnQmhiblBYZGFUeS9oaEt0Q3hLL1dGeEdMRU5JYlowT1o0UW5jWVMKRzFvVERYS2pwNDFyZHIyUzA3ckwzekNNMWtOOEdTcDFmTGVPV3dJREFRQUJBb0lCQUVEazdqalJYUGxtaUM1Ygp5NWE0eVF1VUFUWFdvampaazM0cnpSTkh5UVZPdDdXRzFmU042UGZUZUMzUWEzckQyaTByWTVMcWxNTXZoSStiCnBKRVBPN1pXbXAwYUFEdGRPSXlyNitpVDJEMXZPUGdsMjBjV3o5M1BpNldLeVFUcGtTamFYNURveitLRlcrSmMKbU95d045QWR3TTMrS0IzMytRTXlDWW9ncW5LMjFJc21BaDFBYkNQWHBNMUhyL29JWWxLcldkSkVGTStoZWU3RQp4QUFJZTFBb21IZzNzUVlhbnpNdmpqci9lUjB2K2tDVHdGak4yaGRwd2VmVWR0YU9qTUd4bEMvZWt2THZFTi9BCitZaERrWElOZDVlNDgyUlh0ZklNbG5kdGxMUjFralZ0SGhZVkh6WU9YNkVNZjRZZkZZUjBzV0ZuK1hXdFhKZGEKSTN1ZnVOa0NnWUVBejdGYm5aMlo1ZVo3SHphUUQ0RlN5dlR3QWI0SWNYQUFyRjFud3RQWU5xL3BsR1lHbEdqRQpBTUk5TlMwVU1DMzMwOVdwMVd3YURyMU9VUU84S3lZKy9TdjJnMWZGWWhLY2h1RVZYVFdVWnJaUXlGNFd5L1g3CnFSWGNwQjR0enBEWUIybVBtbVVkWmd4UjlBZU9LK1paNjhQeWJSZlpTNWI4Y21sOVZJUU9QdWNDZ1lFQStRWEQKOG1EZ1RwWXJzVjBIV1V2QmJEMFVZTDdtdnlPbWJ6dkI1L284aWZRaG5Oc29BeTRwMWlxVGpZeXFUMUkra3dGTgpOeDhCbmlUdDM3anRVTVU5MVpHR09pM3ZWQ0IzSVpNR2xrRUdMWi9OSWIxVi94ZWJXK0Q5MHZqT3AvSHVNZ2M4CjFXOE9kZXppZjdHT1VKZ09NSnVGZ3VoYWZjYkR4UFRBOUFESVNtMENnWUJwWkM2QlJNQWJrV0ZZN1c4Yzd4cjgKTWw2NEE1NTFNY2lscnFCQWxROWFjTm11bkRjcWlCOHQ0Mkw3NE93bHBxM2pxTUNOdEZWa3RWdFFjUHpEU0owZQpDM2tFSFQza0RsMnZjL2hMWEN6NkVmbmNNeUtPVFR4dkNORDExdnFYbjVoLzZta2NoOExyVGNVb2Q4MEZLZGJuCmRIOUlMSm52YWFhZ3lEYjQ5Q25tY1FLQmdDdUN1V0VSVWtBSTl5dHZZTWhXZHo1dFViRXh5ZW1kMWdmYmZoOEYKVnl5WGpvUDB1d0lMUDk0ZTVGYzRPODNPUmdhemxJVk1FcUZLUEpINW91V1pBUnZlNklBajVJeGplODFPL2ppawp0ZXFrNEZmRDJGSFJFeUV6cDhZRUdUKzVBdkNVMlNsRjFWWC9oUGZnMDBmN3VZYit0WTVSQVBhM0V4L0gwQ3NTCk0remxBb0dBUnlnWVNEV3dTeWdFUWhlT1NTbUJWY2puQ1ZRUGJYQ0tSWG9VQzBSSFFjWmxzL1VTbzlZcFQ2V04KOVJGR2VJVElPUmVia3FFUDI1c2QyZXdQTTlqVDFDeCtqMmpsZU43aU00Y1B5bW5EYlgzRG04czMzaUNJYWE4QQpFR0VvMVZBSVFaZTE1aGdZWVRURFU3RTFTUENvVll2VGI1ZG5idG9yYURSK2Nqb3ZKTXc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator-admin
rules:
  - apiGroups:
      - '*'
    resources:
      - customresourcedefinitions
      - serviceaccounts
      - deployments
      - statefulsets
      - services
      - configmaps
      - secrets
      - components
      - configurations
      - subscriptions
      - leases
      - resiliencies
    verbs:
      - get
  - apiGroups:
      - '*'
    resources:
      - deployments
      - statefulsets
      - services
      - components
      - configurations
      - subscriptions
      - leases
      - secrets
      - resiliencies
    verbs:
      - list
  - apiGroups:
      - '*'
    resources:
      - deployments
      - statefulsets
      - services
      - components
      - configurations
      - subscriptions
      - leases
      - secrets
      - resiliencies
    verbs:
      - watch
  - apiGroups:
      - '*'
    resources:
      - services
      - secrets
      - subscriptions
      - configmaps
      - leases
      - services/finalizers
      - deployments/finalizers
      - statefulsets/finalizers
    verbs:
      - update
  - apiGroups:
      - '*'
    resources:
      - customresourcedefinitions
    verbs:
      - patch
  - apiGroups:
      - '*'
    resources:
      - services
      - leases
    verbs:
      - delete
  - apiGroups:
      - '*'
    resources:
      - deployments
      - statefulsets
      - services
      - configmaps
      - events
      - leases
    verbs:
      - create
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dashboard-reader
rules:
  - apiGroups:
      - ""
      - dapr.io
      - apps
      - extensions
    resources:
      - deployments
      - pods
      - pods/log
      - components
      - configurations
      - namespaces
    verbs:
      - get
      - list
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator
subjects:
  - kind: ServiceAccount
    name: dapr-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: dapr-operator-admin
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-role-tokenreview-binding
subjects:
  - kind: ServiceAccount
    name: dapr-operator
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dashboard-reader-global
subjects:
  - kind: ServiceAccount
    name: dashboard-reader
    namespace: default
roleRef:
  kind: ClusterRole
  name: dashboard-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: bi5rf81
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-secret-reader
  namespace: bi5rf81
subjects:
  - kind: ServiceAccount
    name: default
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io
---
kind: Service
apiVersion: v1
metadata:
  name: dapr-dashboard
  annotations: null
spec:
  selector:
    app: dapr-dashboard
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
kind: Service
apiVersion: v1
metadata:
  name: dapr-api
spec:
  selector:
    app: dapr-operator
  ports:
    - protocol: TCP
      port: 80
      targetPort: 6500
---
apiVersion: v1
kind: Service
metadata:
  name: dapr-webhook
spec:
  ports:
    - port: 443
      targetPort: 19443
      protocol: TCP
  selector:
    app: dapr-operator
---
kind: Service
apiVersion: v1
metadata:
  name: dapr-placement-server
  labels:
    app: dapr-placement-server
spec:
  selector:
    app: dapr-placement-server
  publishNotReadyAddresses: true
  ports:
    - name: api
      port: 50005
    - name: raft-node
      port: 8201
  clusterIP: None
---
kind: Service
apiVersion: v1
metadata:
  name: dapr-sentry
spec:
  selector:
    app: dapr-sentry
  ports:
    - protocol: TCP
      port: 80
      targetPort: 50001
---
apiVersion: v1
kind: Service
metadata:
  name: dapr-sidecar-injector
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app: dapr-sidecar-injector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-dashboard
  labels:
    app: dapr-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-dashboard
  template:
    metadata:
      labels:
        app: dapr-dashboard
        app.kubernetes.io/name: release-name
        app.kubernetes.io/version: 1.7.4
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/managed-by: helm
    spec:
      serviceAccountName: dashboard-reader
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - name: dapr-dashboard
          image: docker.io/daprio/dashboard:0.10.0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 8080
          resources:
            seccompProfile:
              type: RuntimeDefault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-operator
  labels:
    app: dapr-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-operator
  template:
    metadata:
      labels:
        app: dapr-operator
        app.kubernetes.io/name: release-name
        app.kubernetes.io/version: 1.7.4
        app.kubernetes.io/component: operator
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/managed-by: helm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: /
    spec:
      containers:
        - name: dapr-operator
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 5
          image: docker.io/daprio/dapr:1.7.4
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 6500
            - name: metrics
              containerPort: 9090
              protocol: TCP
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: credentials
              mountPath: /var/run/dapr/credentials
              readOnly: true
            - name: webhook-creds
              mountPath: /tmp/k8s-webhook-server/serving-certs
              readOnly: true
          command:
            - /operator
          args:
            - --log-level
            - info
            - --enable-metrics
            - --metrics-port
            - "9090"
      serviceAccountName: dapr-operator
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
        - name: webhook-creds
          secret:
            secretName: dapr-webhook-cert
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-sentry
  labels:
    app: dapr-sentry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-sentry
  template:
    metadata:
      labels:
        app: dapr-sentry
        app.kubernetes.io/name: release-name
        app.kubernetes.io/version: 1.7.4
        app.kubernetes.io/component: sentry
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/managed-by: helm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: /
    spec:
      containers:
        - name: dapr-sentry
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 5
          image: docker.io/daprio/dapr:1.7.4
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 50001
            - name: metrics
              containerPort: 9090
              protocol: TCP
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: credentials
              mountPath: /var/run/dapr/credentials
              readOnly: true
          command:
            - /sentry
          args:
            - --log-level
            - info
            - --enable-metrics
            - --metrics-port
            - "9090"
            - --trust-domain
            - cluster.local
      serviceAccountName: dapr-operator
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-sidecar-injector
  labels:
    app: dapr-sidecar-injector
spec:
  selector:
    matchLabels:
      app: dapr-sidecar-injector
  template:
    metadata:
      labels:
        app: dapr-sidecar-injector
        app.kubernetes.io/name: release-name
        app.kubernetes.io/version: 1.7.4
        app.kubernetes.io/component: sidecar-injector
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/managed-by: helm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: /
    spec:
      serviceAccountName: dapr-operator
      containers:
        - name: dapr-sidecar-injector
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 5
          image: docker.io/daprio/dapr:1.7.4
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          command:
            - /injector
          args:
            - --log-level
            - info
            - --enable-metrics
            - --metrics-port
            - "9090"
            - --healthz-port
            - "8080"
          env:
            - name: TLS_CERT_FILE
              value: /dapr/cert/tls.crt
            - name: TLS_KEY_FILE
              value: /dapr/cert/tls.key
            - name: KUBE_CLUSTER_DOMAIN
              value: cluster.local
            - name: SIDECAR_IMAGE
              value: docker.io/daprio/daprd:1.7.4
            - name: SIDECAR_IMAGE_PULL_POLICY
              value: IfNotPresent
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: https
              containerPort: 4000
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: cert
              mountPath: /dapr/cert
              readOnly: true
      volumes:
        - name: cert
          secret:
            secretName: dapr-sidecar-injector-cert
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dapr-placement-server
  labels:
    app: dapr-placement-server
spec:
  replicas: 1
  serviceName: dapr-placement-server
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: dapr-placement-server
  template:
    metadata:
      labels:
        app: dapr-placement-server
        app.kubernetes.io/name: release-name
        app.kubernetes.io/version: 1.7.4
        app.kubernetes.io/component: placement
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/managed-by: helm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: /
    spec:
      containers:
        - name: dapr-placement-server
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 3
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 5
          image: docker.io/daprio/dapr:1.7.4
          imagePullPolicy: IfNotPresent
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: credentials
              mountPath: /var/run/dapr/credentials
              readOnly: true
          ports:
            - containerPort: 50005
              name: api
            - containerPort: 8201
              name: raft-node
            - name: metrics
              containerPort: 9090
              protocol: TCP
          command:
            - /placement
          args:
            - --log-level
            - info
            - --enable-metrics
            - --replicationFactor
            - "100"
            - --metrics-port
            - "9090"
            - --tls-enabled
          securityContext:
            runAsUser: 11013
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: PLACEMENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      serviceAccountName: dapr-operator
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
---
apiVersion: dapr.io/v1alpha1
kind: Configuration
metadata:
  name: daprsystem
spec:
  mtls:
    enabled: true
    workloadCertTTL: 24h
    allowedClockSkew: 15m
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: dapr-sidecar-injector
  labels:
    app: dapr-sidecar-injector
webhooks:
  - name: sidecar-injector.dapr.io
    clientConfig:
      service:
        namespace: default
        name: dapr-sidecar-injector
        path: /mutate
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lSQVBLV0E4SmlYQTRjSElwSjdzRDdvUHd3RFFZSktvWklodmNOQVFFTEJRQXcKSXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1YW1WamRHOXlMV05oTUI0WERUSXlNRFl4TWpBNApOVFl5TkZvWERUTXlNRFl3T1RBNE5UWXlORm93SXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1CmFtVmpkRzl5TFdOaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb0lQUEczamQKRXZOMkFDUTN1VmJIZDl2OFRBb29lbWkxS2VNWUxZQnFKM1pha2NUWHQvU3ZaV0NxRGJaZmNYNkNFM0V2NXllRwplZks5NTV6NVV6Y1cyaUM2bmdhSVY4QUtNNjExWXlBeGpmQjRRQkl2bHB1NmllMng1L3lDWTdNeTFTSGFoSGQzClJrOU9kN29PRS9JT2tva2xxVFFqSEZjbzgzU2FpdEtJcGs2Y2Q0Sm9CWW9RWlR4MU5yMDg5b1RXK1hkWjhXV3IKM3UxRjZXa0tkR1BHenRheWhjR2srbGtXQnJ3WjNtS2hGNUtmOW92VXdoNkhTVkN6OUJTZ2FJT1BxYk05VjZubwpiOUEwZlFiTTd1aWdpUGNIby9Cc3ZWY3EyT2h2SVh1Q1BkeWx6eVVmQlVORnNYdS9td0NpN3RyVmJ0TzAyUWZjCitBd3J5MmRsT2xTeWN3SURBUUFCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRlBuagpBMmVJNGhIS2JxVjZLL3lLRkhuMHdNK2tNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUEyZzZEVTZKbHpLUUNwCkNhNEptMHRrREhqLzRFeEpISmZwQXMrVE42MFk0bVhSVXhhMnJsM09QazVHRG9rNklaS2VCbzBUSGpLVjNuMHgKN2lxZ2hISWVYRGhtTG93aElPV3YzNFdyMUtybmc1cVFlYlJMS2RMRGp3WUV4dmJ4YmRDb1RyVDRIelFNMkhhcgptaThzVnorVnBlVTVqcHpYeVZBZzZsOE1SSHV5ZU9LeXBWTU9mTHEyZnFXcXZSdDVGVDYyN3IzUTZJL1B5eTh4CnQrUjl4ZWc2Y0VCVnFMa2hZUDhadWFxWlg0aS9HR0xhMUUzek5VMGlxV2w0UFFHNmYyVFprN2c1R2lMUGZyUU4KVWFia0k1M0JLc0w1UE9GT0o1WVJ1cXlUVlhuNml0Sm1zN2JrTWVZRUUySnZSNFlTTzdDYzVPU1pCcXFsYU45OApnRW1vNmhCZgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        resources:
          - pods
        operations:
          - CREATE
    failurePolicy: Ignore
    sideEffects: None
    admissionReviewVersions:
      - v1
      - v1beta1
