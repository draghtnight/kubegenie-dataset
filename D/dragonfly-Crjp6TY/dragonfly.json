[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-mysql",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "mysql",
        "helm.sh/chart": "mysql-9.1.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "automountServiceAccountToken": true,
    "secrets": [
      {
        "name": "release-name-mysql"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "automountServiceAccountToken": true,
    "metadata": {
      "name": "release-name-redis",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-mysql",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "mysql",
        "helm.sh/chart": "mysql-9.1.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "mysql-root-password": "ZHJhZ29uZmx5LXJvb3Q=",
      "mysql-password": "ZHJhZ29uZmx5"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-redis",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "redis-password": "ZHJhZ29uZmx5"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-mysql",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "mysql",
        "helm.sh/chart": "mysql-9.1.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      }
    },
    "data": {
      "my.cnf": "[mysqld]\ndefault_authentication_plugin=mysql_native_password\nskip-name-resolve\nexplicit_defaults_for_timestamp\nbasedir=/opt/bitnami/mysql\nplugin_dir=/opt/bitnami/mysql/lib/plugin\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\ndatadir=/bitnami/mysql/data\ntmpdir=/opt/bitnami/mysql/tmp\nmax_allowed_packet=16M\nbind-address=0.0.0.0\npid-file=/opt/bitnami/mysql/tmp/mysqld.pid\nlog-error=/opt/bitnami/mysql/logs/mysqld.log\ncharacter-set-server=UTF8\ncollation-server=utf8_general_ci\nslow_query_log=0\nslow_query_log_file=/opt/bitnami/mysql/logs/mysqld.log\nlong_query_time=10.0\n\n[client]\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\ndefault-character-set=UTF8\nplugin_dir=/opt/bitnami/mysql/lib/plugin\n\n[manager]\nport=3306\nsocket=/opt/bitnami/mysql/tmp/mysql.sock\npid-file=/opt/bitnami/mysql/tmp/mysqld.pid"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-configuration",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "redis.conf": "# User-supplied common configuration:\n# Enable AOF https://redis.io/topics/persistence#append-only-file\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"\n# End of common configuration",
      "master.conf": "dir /data\n# User-supplied master configuration:\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"\n# End of master configuration",
      "replica.conf": "dir /data\nslave-read-only yes\n# User-supplied replica configuration:\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"\n# End of replica configuration"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-health",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "ping_readiness_local.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_local.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nresponseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')\nif [ \"$response\" != \"PONG\" ] && [ \"$responseFirstWord\" != \"LOADING\" ] && [ \"$responseFirstWord\" != \"MASTERDOWN\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_master.sh": "#!/bin/bash\n\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD=\"$(< \"${REDIS_MASTER_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_MASTER_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_master.sh": "#!/bin/bash\n\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD=\"$(< \"${REDIS_MASTER_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_MASTER_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nresponseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')\nif [ \"$response\" != \"PONG\" ] && [ \"$responseFirstWord\" != \"LOADING\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-scripts",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "start-master.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\nif [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/master.conf\")\nexec redis-server \"${ARGS[@]}\"\n",
      "start-replica.sh": "#!/bin/bash\n\nget_port() {\n    hostname=\"$1\"\n    type=\"$2\"\n\n    port_var=$(echo \"${hostname^^}_SERVICE_PORT_$type\" | sed \"s/-/_/g\")\n    port=${!port_var}\n\n    if [ -z \"$port\" ]; then\n        case $type in\n            \"SENTINEL\")\n                echo 26379\n                ;;\n            \"REDIS\")\n                echo 6379\n                ;;\n        esac\n    else\n        echo $port\n    fi\n}\n\nget_full_hostname() {\n    hostname=\"$1\"\n    echo \"${hostname}.${HEADLESS_SERVICE}\"\n}\n\nREDISPORT=$(get_port \"$HOSTNAME\" \"REDIS\")\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD=\"$(< \"${REDIS_MASTER_PASSWORD_FILE}\")\"\nif [[ ! -f /opt/bitnami/redis/etc/replica.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/replica.conf /opt/bitnami/redis/etc/replica.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\n\necho \"\" >> /opt/bitnami/redis/etc/replica.conf\necho \"replica-announce-port $REDISPORT\" >> /opt/bitnami/redis/etc/replica.conf\necho \"replica-announce-ip $(get_full_hostname \"$HOSTNAME\")\" >> /opt/bitnami/redis/etc/replica.conf\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--slaveof\" \"${REDIS_MASTER_HOST}\" \"${REDIS_MASTER_PORT_NUMBER}\")\nARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_MASTER_PASSWORD}\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/replica.conf\")\nexec redis-server \"${ARGS[@]}\"\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-dragonfly-dfdaemon",
      "labels": {
        "app": "release-name-dragonfly",
        "chart": "dragonfly-0.6.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "dfdaemon"
      }
    },
    "data": {
      "dfget.yaml": "aliveTime: 0s\ngcInterval: 1m0s\nkeepStorage: false\nworkHome: /usr/local/dragonfly\ncacheDir: \ndataDir: /var/lib/dragonfly\nlogDir: \nconsole: false\nverbose: false\nscheduler:\n  manager:\n    enable: true\n    netAddrs:\n    - type: tcp\n      addr: release-name-dragonfly-manager.default.svc.cluster.local:65003\n    refreshInterval: 5m\n  scheduleTimeout: 30s\n  disableAutoBackSource: false\n  seedPeer:\n    clusterID: 1\n    enable: false\n    type: super\nhost:\n  advertiseIP: 0.0.0.0\n  idc: \"\"\n  listenIP: 0.0.0.0\n  location: \"\"\n  netTopology: \"\"\n  securityDomain: \"\"\ndownload:\n  calculateDigest: true\n  downloadGRPC:\n    security:\n      insecure: true\n    unixListen:\n      socket: /tmp/dfdamon.sock\n  peerGRPC:\n    security:\n      insecure: true\n    tcpListen:\n      listen: 0.0.0.0\n      port: 65000\n  perPeerRateLimit: 100Mi\n  totalRateLimit: 200Mi\nupload:\n  rateLimit: 100Mi\n  security:\n    insecure: true\n  tcpListen:\n    listen: 0.0.0.0\n    port: 65002\nstorage:\n  diskGCThreshold: 50Gi\n  multiplex: true\n  strategy: io.d7y.storage.v2.simple\n  taskExpireTime: 6h\nproxy:\n  defaultFilter: Expires&Signature\n  tcpListen:\n    namespace: /run/dragonfly/net\n    listen: 0.0.0.0\n    port: 65001\n  security:\n    insecure: true\n  registryMirror:\n    dynamic: true\n    insecure: false\n    url: https://index.docker.io\n  proxies:\n    - regx: blobs/sha256.*"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-dragonfly-manager",
      "labels": {
        "app": "release-name-dragonfly",
        "chart": "dragonfly-0.6.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "manager"
      }
    },
    "data": {
      "manager.yaml": "server:\n  rest:\n    addr: :8080\n  grpc:\n    port:\n      start: 65003\n      end: 65003\ndatabase:\n  mysql:\n    user: dragonfly\n    password: dragonfly\n    host: release-name-mysql.default.svc.cluster.local\n    port: 3306\n    dbname: manager\n    migrate: true\n  redis:\n    password: dragonfly\n    host: release-name-redis-master.default.svc.cluster.local\n    port: 6379\nconsole: false\nverbose: false"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-dragonfly-scheduler",
      "labels": {
        "app": "release-name-dragonfly",
        "chart": "dragonfly-0.6.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "scheduler"
      }
    },
    "data": {
      "scheduler.yaml": "server:\n  port: 8002\n  cacheDir: \n  logDir: \nscheduler:\n  algorithm: default\n  backSourceCount: 3\n  gc:\n    peerGCInterval: 10m\n    peerTTL: 24h\n    taskGCInterval: 10m\n    taskTTL: 24h\n  retryBackSourceLimit: 5\n  retryInterval: 50ms\n  retryLimit: 10\ndynconfig:\n  refreshInterval: 10s\n  type: manager\nhost:\n  idc: \"\"\n  location: \"\"\n  netTopology: \"\"\nmanager:\n  addr: release-name-dragonfly-manager.default.svc.cluster.local:65003\n  schedulerClusterID: 1\n  keepAlive:\n    interval: 5s\nseedPeer:\n  enable: true\njob:\n  redis:\n    password: dragonfly\n    host: release-name-redis-master.default.svc.cluster.local\n    port: 6379\nmetrics:\n  enable: false\n  addr: \":8000\"\n  enablePeerHost: false\nconsole: false\nverbose: false"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-dragonfly-seed-peer",
      "labels": {
        "app": "release-name-dragonfly",
        "chart": "dragonfly-0.6.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "seed-peer"
      }
    },
    "data": {
      "dfget.yaml": "aliveTime: 0s\ngcInterval: 1m0s\nkeepStorage: false\nworkHome: /usr/local/dragonfly\ncacheDir: \ndataDir: /var/lib/dragonfly\nlogDir: \nconsole: false\nverbose: false\nscheduler:\n  manager:\n    enable: true\n    netAddrs:\n    - type: tcp\n      addr: release-name-dragonfly-manager.default.svc.cluster.local:65003\n    refreshInterval: 5m\n    seedPeer:\n      clusterID: 1\n      enable: true\n      keepAlive:\n        interval: 5s\n      type: super\n  scheduleTimeout: 30s\n  disableAutoBackSource: false\nhost:\n  idc: \"\"\n  listenIP: 0.0.0.0\n  location: \"\"\n  netTopology: \"\"\n  securityDomain: \"\"\ndownload:\n  calculateDigest: true\n  downloadGRPC:\n    security:\n      insecure: true\n    unixListen:\n      socket: /tmp/dfdamon.sock\n  peerGRPC:\n    security:\n      insecure: true\n    tcpListen:\n      listen: 0.0.0.0\n      port: 65000\n  perPeerRateLimit: 1024Mi\n  totalRateLimit: 2048Mi\nupload:\n  rateLimit: 2048Mi\n  security:\n    insecure: true\n  tcpListen:\n    listen: 0.0.0.0\n    port: 65002\nstorage:\n  diskGCThresholdPercent: 90\n  multiplex: true\n  strategy: io.d7y.storage.v2.simple\n  taskExpireTime: 6h"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-mysql-headless",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "mysql",
        "helm.sh/chart": "mysql-9.1.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "publishNotReadyAddresses": true,
      "ports": [
        {
          "name": "mysql",
          "port": 3306,
          "targetPort": "mysql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "mysql",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-mysql",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "mysql",
        "helm.sh/chart": "mysql-9.1.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "sessionAffinity": "None",
      "ports": [
        {
          "name": "mysql",
          "port": 3306,
          "protocol": "TCP",
          "targetPort": "mysql",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "mysql",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-headless",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "tcp-redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "redis",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "master"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "internalTrafficPolicy": "Cluster",
      "sessionAffinity": "None",
      "ports": [
        {
          "name": "tcp-redis",
          "port": 6379,
          "targetPort": "redis",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "redis",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "master"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-replicas",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "replica"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "internalTrafficPolicy": "Cluster",
      "sessionAffinity": "None",
      "ports": [
        {
          "name": "tcp-redis",
          "port": 6379,
          "targetPort": "redis",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "redis",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "replica"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-dragonfly-manager",
      "labels": {
        "app": "dragonfly",
        "chart": "dragonfly-0.6.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "manager"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8080,
          "name": "http-rest",
          "protocol": "TCP",
          "targetPort": 8080
        },
        {
          "port": 65003,
          "name": "http-grpc",
          "protocol": "TCP",
          "targetPort": 65003
        }
      ],
      "selector": {
        "app": "release-name-dragonfly",
        "release": "release-name",
        "component": "manager"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "release-name-dragonfly-dfdaemon",
      "labels": {
        "app": "release-name-dragonfly",
        "chart": "dragonfly-0.6.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "dfdaemon"
      },
      "annotations": {
        "checksum/config": "4d64940b896ff4c2f9dc51f72c095bdaa91dc26acd093c623fe80608b6c574fd"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "release-name-dragonfly",
          "component": "dfdaemon",
          "release": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-dragonfly",
            "component": "dfdaemon",
            "release": "release-name"
          }
        },
        "spec": {
          "hostNetwork": false,
          "hostPID": false,
          "containers": [
            {
              "name": "dfdaemon",
              "image": "dragonflyoss/dfdaemon:v2.0.3",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "0",
                  "memory": "0"
                }
              },
              "ports": [
                {
                  "containerPort": 65001,
                  "protocol": "TCP"
                }
              ],
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/grpc_health_probe",
                    "-addr=0.0.0.0:65000"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10
              },
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/grpc_health_probe",
                    "-addr=0.0.0.0:65000"
                  ]
                },
                "initialDelaySeconds": 15,
                "periodSeconds": 10
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etc/dragonfly"
                },
                {
                  "mountPath": "/var/log/dragonfly/daemon",
                  "name": "logs"
                },
                {
                  "name": "run",
                  "mountPath": "/run/dragonfly"
                },
                {
                  "name": "data",
                  "mountPath": "/var/lib/dragonfly"
                }
              ],
              "securityContext": {
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "initContainers": [
            {
              "name": "mount-netns",
              "image": "dragonflyoss/dfdaemon:v2.0.3",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "0",
                  "memory": "0"
                }
              },
              "command": [
                "/bin/sh",
                "-cx",
                "if [ ! -e \"/run/dragonfly/net\" ]; then\n  touch /run/dragonfly/net\nfi\ni1=$(stat -L -c %i /host/ns/net)\ni2=$(stat -L -c %i /run/dragonfly/net)\nif [ \"$i1\" != \"$i2\" ]; then\n  /bin/mount -o bind /host/ns/net /run/dragonfly/net\nfi"
              ],
              "volumeMounts": [
                {
                  "name": "hostns",
                  "mountPath": "/host/ns"
                },
                {
                  "name": "run",
                  "mountPath": "/run/dragonfly",
                  "mountPropagation": "Bidirectional"
                }
              ],
              "securityContext": {
                "privileged": true
              }
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-dragonfly-dfdaemon"
              }
            },
            {
              "name": "hostns",
              "hostPath": {
                "path": "/proc/1/ns"
              }
            },
            {
              "name": "run",
              "hostPath": {
                "path": "/run/dragonfly",
                "type": "DirectoryOrCreate"
              }
            },
            {
              "name": "data",
              "emptyDir": {}
            },
            {
              "emptyDir": {},
              "name": "logs"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app": "release-name-dragonfly",
        "chart": "dragonfly-0.6.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "manager"
      },
      "name": "release-name-dragonfly-manager",
      "annotations": {
        "checksum/config": "31d02eab65799b3496b2f70243175ecb08f51bcdcddad951304766169677365d"
      }
    },
    "spec": {
      "replicas": 3,
      "selector": {
        "matchLabels": {
          "app": "release-name-dragonfly",
          "component": "manager",
          "release": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-dragonfly",
            "component": "manager",
            "release": "release-name"
          }
        },
        "spec": {
          "initContainers": [
            {
              "name": "wait-for-redis",
              "image": "busybox:latest",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c",
                "until nslookup release-name-redis-master.default.svc.cluster.local && nc -vz release-name-redis-master.default.svc.cluster.local 6379; do echo waiting for redis; sleep 2; done;"
              ]
            },
            {
              "name": "wait-for-mysql",
              "image": "busybox:latest",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c",
                "until nslookup release-name-mysql.default.svc.cluster.local && nc -vz release-name-mysql.default.svc.cluster.local 3306; do echo waiting for mysql; sleep 2; done;"
              ]
            }
          ],
          "containers": [
            {
              "name": "manager",
              "image": "dragonflyoss/manager:v2.0.3",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "0",
                  "memory": "0"
                }
              },
              "ports": [
                {
                  "containerPort": 8080,
                  "protocol": "TCP"
                },
                {
                  "containerPort": 65003,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etc/dragonfly"
                },
                {
                  "mountPath": "/var/log/dragonfly/manager",
                  "name": "logs"
                }
              ],
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/grpc_health_probe",
                    "-addr=:65003"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10
              },
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/grpc_health_probe",
                    "-addr=:65003"
                  ]
                },
                "initialDelaySeconds": 15,
                "periodSeconds": 10
              }
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-dragonfly-manager",
                "items": [
                  {
                    "key": "manager.yaml",
                    "path": "manager.yaml"
                  }
                ]
              }
            },
            {
              "emptyDir": {},
              "name": "logs"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-mysql",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "mysql",
        "helm.sh/chart": "mysql-9.1.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      }
    },
    "spec": {
      "replicas": 1,
      "podManagementPolicy": "",
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "mysql",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "primary"
        }
      },
      "serviceName": "release-name-mysql",
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/configuration": "4d5990832e00171ed0ba4c2aa2ac5082739ccfba460c2f1dd0d617aba8334998"
          },
          "labels": {
            "app.kubernetes.io/name": "mysql",
            "helm.sh/chart": "mysql-9.1.2",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "primary"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-mysql",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "mysql",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "initContainers": null,
          "containers": [
            {
              "name": "mysql",
              "image": "docker.io/bitnami/mysql:8.0.29-debian-10-r23",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 11739,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "MYSQL_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-mysql",
                      "key": "mysql-root-password"
                    }
                  }
                },
                {
                  "name": "MYSQL_USER",
                  "value": "dragonfly"
                },
                {
                  "name": "MYSQL_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-mysql",
                      "key": "mysql-password"
                    }
                  }
                },
                {
                  "name": "MYSQL_DATABASE",
                  "value": "manager"
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "mysql",
                  "containerPort": 3306
                }
              ],
              "livenessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                  ]
                }
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                  ]
                }
              },
              "startupProbe": {
                "failureThreshold": 10,
                "initialDelaySeconds": 15,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "password_aux=\"${MYSQL_ROOT_PASSWORD:-}\"\nif [[ -f \"${MYSQL_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MYSQL_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/bitnami/mysql"
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/mysql/conf/my.cnf",
                  "subPath": "my.cnf"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-mysql"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data",
            "labels": {
              "app.kubernetes.io/name": "mysql",
              "app.kubernetes.io/instance": "release-name",
              "app.kubernetes.io/component": "primary"
            },
            "annotations": null
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "master"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "redis",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "master"
        }
      },
      "serviceName": "release-name-redis-headless",
      "updateStrategy": {
        "rollingUpdate": {},
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "redis",
            "helm.sh/chart": "redis-16.10.1",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "master"
          },
          "annotations": {
            "checksum/configmap": "ca5ec5938e97830f841d41643a8112e224b936f41a5c0a3e26b7be8cdbc5b991",
            "checksum/health": "dae93e1c28a413a00b22403f391174f1ddcb6388ba72c595d8ea28a4d6da3b5c",
            "checksum/scripts": "f60e5093bbb17b00451509096a726f7106959a55f95fccbe0d1ac9f0c43c0d5a",
            "checksum/secret": "e19953c44c0d88d4e3a864da1ed9f3212b0519a42f99ff5ffc0152031f5606d8"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "release-name-redis",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "redis",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "master"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "redis",
              "image": "docker.io/bitnami/redis:6.2.7-debian-10-r23",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 11192,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "command": [
                "/bin/bash"
              ],
              "args": [
                "-c",
                "/opt/bitnami/scripts/start-scripts/start-master.sh"
              ],
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "master"
                },
                {
                  "name": "ALLOW_EMPTY_PASSWORD",
                  "value": "no"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-redis",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_TLS_ENABLED",
                  "value": "no"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 5,
                "timeoutSeconds": 6,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 5,
                "timeoutSeconds": 2,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 1"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "start-scripts",
                  "mountPath": "/opt/bitnami/scripts/start-scripts"
                },
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc/"
                },
                {
                  "name": "tmp",
                  "mountPath": "/tmp"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "start-scripts",
              "configMap": {
                "name": "release-name-redis-scripts",
                "defaultMode": 493
              }
            },
            {
              "name": "health",
              "configMap": {
                "name": "release-name-redis-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-redis-configuration"
              }
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            },
            {
              "name": "tmp",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "redis-data",
            "labels": {
              "app.kubernetes.io/name": "redis",
              "app.kubernetes.io/instance": "release-name",
              "app.kubernetes.io/component": "master"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-redis-replicas",
      "namespace": "Crjp6TY",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "replica"
      }
    },
    "spec": {
      "replicas": 3,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "redis",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "replica"
        }
      },
      "serviceName": "release-name-redis-headless",
      "updateStrategy": {
        "rollingUpdate": {},
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "redis",
            "helm.sh/chart": "redis-16.10.1",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "replica"
          },
          "annotations": {
            "checksum/configmap": "ca5ec5938e97830f841d41643a8112e224b936f41a5c0a3e26b7be8cdbc5b991",
            "checksum/health": "dae93e1c28a413a00b22403f391174f1ddcb6388ba72c595d8ea28a4d6da3b5c",
            "checksum/scripts": "f60e5093bbb17b00451509096a726f7106959a55f95fccbe0d1ac9f0c43c0d5a",
            "checksum/secret": "e19953c44c0d88d4e3a864da1ed9f3212b0519a42f99ff5ffc0152031f5606d8"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "release-name-redis",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "redis",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "replica"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "redis",
              "image": "docker.io/bitnami/redis:6.2.7-debian-10-r23",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 11366,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "command": [
                "/bin/bash"
              ],
              "args": [
                "-c",
                "/opt/bitnami/scripts/start-scripts/start-replica.sh"
              ],
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "slave"
                },
                {
                  "name": "REDIS_MASTER_HOST",
                  "value": "release-name-redis-master-0.release-name-redis-headless.default.svc.cluster.local"
                },
                {
                  "name": "REDIS_MASTER_PORT_NUMBER",
                  "value": "6379"
                },
                {
                  "name": "ALLOW_EMPTY_PASSWORD",
                  "value": "no"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-redis",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_MASTER_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-redis",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_TLS_ENABLED",
                  "value": "no"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "startupProbe": {
                "failureThreshold": 22,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "tcpSocket": {
                  "port": "redis"
                }
              },
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 5,
                "timeoutSeconds": 6,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local_and_master.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 5,
                "timeoutSeconds": 2,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local_and_master.sh 1"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "start-scripts",
                  "mountPath": "/opt/bitnami/scripts/start-scripts"
                },
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "start-scripts",
              "configMap": {
                "name": "release-name-redis-scripts",
                "defaultMode": 493
              }
            },
            {
              "name": "health",
              "configMap": {
                "name": "release-name-redis-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-redis-configuration"
              }
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "redis-data",
            "labels": {
              "app.kubernetes.io/name": "redis",
              "app.kubernetes.io/instance": "release-name",
              "app.kubernetes.io/component": "replica"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-dragonfly-scheduler",
      "labels": {
        "app": "release-name-dragonfly",
        "chart": "dragonfly-0.6.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "scheduler"
      },
      "annotations": {
        "checksum/config": "98a1d8f2f75887e785924aedd94f3786ce05f29e244ace7bd773cd1c3ba3c071"
      }
    },
    "spec": {
      "replicas": 3,
      "selector": {
        "matchLabels": {
          "app": "release-name-dragonfly",
          "release": "release-name",
          "component": "scheduler"
        }
      },
      "serviceName": "scheduler",
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-dragonfly",
            "release": "release-name",
            "component": "scheduler"
          }
        },
        "spec": {
          "initContainers": [
            {
              "name": "wait-for-manager",
              "image": "busybox:latest",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c",
                "until nslookup release-name-dragonfly-manager.default.svc.cluster.local && nc -vz release-name-dragonfly-manager.default.svc.cluster.local 8080; do echo waiting for manager; sleep 2; done;"
              ]
            }
          ],
          "containers": [
            {
              "name": "scheduler",
              "image": "dragonflyoss/scheduler:v2.0.3",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "limits": {
                  "cpu": "4",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "0",
                  "memory": "0"
                }
              },
              "ports": [
                {
                  "containerPort": 8002,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etc/dragonfly"
                },
                {
                  "mountPath": "/var/log/dragonfly/scheduler",
                  "name": "logs"
                }
              ],
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/grpc_health_probe",
                    "-addr=:8002"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10
              },
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/grpc_health_probe",
                    "-addr=:8002"
                  ]
                },
                "initialDelaySeconds": 15,
                "periodSeconds": 10
              }
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-dragonfly-scheduler",
                "items": [
                  {
                    "key": "scheduler.yaml",
                    "path": "scheduler.yaml"
                  }
                ]
              }
            },
            {
              "emptyDir": {},
              "name": "logs"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "labels": {
        "app": "release-name-dragonfly",
        "chart": "dragonfly-0.6.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "seed-peer"
      },
      "name": "release-name-dragonfly-seed-peer",
      "annotations": {
        "checksum/config": "5f0c152c619af009479c347b2a2ba1128a7ada12308e140b8f7eae39104cf5d1"
      }
    },
    "spec": {
      "replicas": 3,
      "selector": {
        "matchLabels": {
          "app": "release-name-dragonfly",
          "component": "seed-peer",
          "release": "release-name"
        }
      },
      "serviceName": "seed-peer",
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-dragonfly",
            "component": "seed-peer",
            "release": "release-name"
          }
        },
        "spec": {
          "initContainers": [
            {
              "name": "wait-for-manager",
              "image": "busybox:latest",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c",
                "until nslookup release-name-dragonfly-manager.default.svc.cluster.local && nc -vz release-name-dragonfly-manager.default.svc.cluster.local 8080; do echo waiting for manager; sleep 2; done;"
              ]
            }
          ],
          "containers": [
            {
              "name": "seed-peer",
              "image": "dragonflyoss/dfdaemon:v2.0.3",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "0",
                  "memory": "0"
                }
              },
              "ports": [
                {
                  "containerPort": 65000,
                  "protocol": "TCP"
                },
                {
                  "containerPort": 65002,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etc/dragonfly"
                },
                {
                  "name": "storage",
                  "mountPath": "/var/lib/dragonfly"
                },
                {
                  "mountPath": "/var/log/dragonfly/daemon",
                  "name": "logs"
                }
              ],
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/grpc_health_probe",
                    "-addr=:65000"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10
              },
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/grpc_health_probe",
                    "-addr=:65000"
                  ]
                },
                "initialDelaySeconds": 15,
                "periodSeconds": 10
              }
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-dragonfly-seed-peer",
                "items": [
                  {
                    "key": "dfget.yaml",
                    "path": "dfget.yaml"
                  }
                ]
              }
            },
            {
              "emptyDir": {},
              "name": "logs"
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "storage"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  }
]