apiVersion: v1
kind: Secret
metadata:
  name: exampleservice-keys
  namespace: wP6yNEs
type: Opaque
data:
  id_rsa: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBeStTK2J3N0VOVzVrbm9yTVRIL3htUktyL09hQng3dWtSUk5lMVdLRXdMZ1FiQjBKCnhFem5IRzBFL09ha2djdVRRREFDQXJUbmRlWWwySDVycGRIaFhraDZFSzlSOXlBRjA5SW4rZ0RjVnpwdlAyZHEKNVVUYllUaElMSXcwRlBYNkRjVU9NSkxNb011WHFTcG14SVRLbXhXWTdvK00ySDByVDh4UDRKQlVoUFVJNFNqRgptaVpzaXhYNnZYL0E1d3ZrMHhPTlN1WWhtN2EycHErNmgwbHJDaXN1K1YxZWpHV1N5eFJNYTBLcFdBNVN3TmxkCkdtSHN3cXBkM3dmZWlpWm4raGlVVTk0OTJPNkZtbys0Qk16QXNuQU5rSUQvR1RSUy85a05hb0wwRVhPaU9PdngKMUlqb2R5RS9DMVEzYU5tVkovYXF6V3Bua05jMGUydnNBYjJDRlFJREFRQUJBb0lCQVFER1JaQnlDdGYrWlhWdgpQdVhnVm1Lb1NpSDVjbVl0eG1pOXkxSmpDc1N4YTh4OGRkaHpqWjBJWlhOK1F3TWlQTWJhbWxTNk1SVUw3MXhLCkpOV2xrRzBwOUN6UFlNM0NGTi9WMWYyTi9aeEhMc25UekV1RTIrckJwYXQ1dG5WSEZOT3U1RHNpUFA3RU5uY3EKeDlMYnM0NGFOV3hjUURma3BnT2lPN3BKVTlEODRGWXVKYkg2RWhIQ3QxbnV5VWVIYUc3cXFzRFluYUdvNk5TYwpxcW5tcnZvU0JPUStDSVhncVJ3R3VldE45a05GL25LT1d4V2laK1ZBWUlYYjdjbmttT1dUZzVvalBpZkNXTWVFCnhpVjlhZ0Z6RUVKaFB4aGl2RnRJcTBYdnNpU2xBWnZaY1JFWEtheXc2ekZ4OUpUZ3BPWFlsbit4ZzBwUUVWWHIKTUxXdjdCVFpBb0dCQVBMeTFaN3FqZVI5UHdUWmVuOTcwQVMzQnNBVFFBY0FoNGFFSEdQeHdMbVdEa2h6SlRXNwpDMlU0ZFN5akIxVzZPTDZ5NHU3YWdnTzVuc2hzRVVaNzNoRTM3YjEvc3IxUFlDK05YdVh1VGhEWURGRDNmNUxBCkh3VTBYdngrdWliVjc1K1hwT2tDbFNCa2YyazZlQkZENjhQYUx5amZDU25Fa3p1a1dQdG5neFJUQW9HQkFOYlkKelhGS0lyY1F0QXoycDMrdHhVOVhxYTV4SzJyUWZMdXJjNjZ4eHhDM0tPOG9NaFlQMmh0aWVZUnlnd2c5MUpSMgpCdTZzWDgrdDVNTllTc28xdDhDU08zNnRjZ1VEb3dvKzJYdXZZOUZ3UVVnVmlITktPYjdjRnJOU2dXTVZoYm5nCi9aZ3hLcm5WbDFOUEJpdkRWNWtQZytqRDFCSU9VbFFpbXlyRDZzTDNBb0dCQU9ublJDWnBXczFHakhybHk1dWIKbjg0NlRNUjJoQ2w1cUFHcGhnL3ZmSWJ4WXJUOEx6SUk4RksyeFpHQk1KbW4zZVEwSkdxa2M1S1VqcndWMTVnTgp2K0xCL3lGNEphVkFHN0lNb1BZc3RucGZGNVNJaFFuTDhORzQ5MDZQMERkOXQrUG1RejZYWHU0OTg3RmpPcUFjCnpZdlZyNXZoQ0ZodlN2V2NLSk43dUdiREFvR0JBS3ZKZXF1bExaRFhDRUI5VUh6a3d5bW4zSU1nOWloWVFBUUgKR1Y2THc3SDM0Z0VvVUxRWFJMdzB4eGxDUHNkdU9QWGtVYkt4bllKL2RyVkRlYm1wcmgyS1Q0d0F2M1NHN2V5WgpTR2gvV3Y3eUZTREFKdlNZV3dmakR6dWZNdG01TWMzb3VwemdZMXRvRDdHTE5GSDF4YXNiSHN3VkdSSys1TkZsClFsQzFpcGNOQW9HQkFJeHFHeUNhaTZidHdEbGJwa2RJK2NrMmo3azluZFo4c29zYzBHMnNlOWQ1OHNmc0hkV2UKMXdwcWU2MnQ3bVFacitJZ0V5cTdSdXVFdFJSNlhxYjhSUXFBdUVkU21zMXpjV2MzMFNKSmhQaXd4SWVMTDBkeApseS9IQkJxbm96RDRCTjNFTmlxbkloT2dlWkU3WEhhUzQzbHVZa1lwQk91QmFXWXM1SUlaV2NjdAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: addressmanager
data:
  serviceConfig: |
    name: addressmanager
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: xos-core:50051
    required_models:
      - AddressManagerServiceInstance
    dependency_graph: "/opt/xos/synchronizers/addressmanager/model-deps"
    model_policies_dir: "/opt/xos/synchronizers/addressmanager/model_policies"
    models_dir: "/opt/xos/synchronizers/addressmanager/models"
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.addressmanager
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: exampleservice
data:
  serviceConfig: |
    name: exampleservice
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: xos-core:50051
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.exampleservice
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
    proxy_ssh:
      enabled: true
      user: root
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-exampleservice-tosca
data:
  010-publicnet.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Setup public network
    imports:
      - custom_types/addressmanagerservice.yaml
      - custom_types/addressmanagerserviceinstance.yaml
      - custom_types/addresspool.yaml
      - custom_types/networktemplate.yaml
      - custom_types/network.yaml
      - custom_types/serviceinstancelink.yaml
      - custom_types/site.yaml
      - custom_types/slice.yaml
    topology_template:
      node_templates:
        mysite:
          type: tosca.nodes.Site
          properties:
            name: mysite
            must-exist: true

        public_networking_slice:
          description: This slice exists solely to own the public network
          type: tosca.nodes.Slice
          properties:
            network: noauto
            name: public_networking
          requirements:
            - site:
                node: mysite
                relationship: tosca.relationships.BelongsToOne

        # public network
        public_template:
          type: tosca.nodes.NetworkTemplate
          properties:
            name: public_template
            visibility: public
            translation: none
            vtn_kind: PUBLIC

        public:
          type: tosca.nodes.Network
          properties:
            name: public
            permit_all_slices: true
            subnet: 10.8.1.0/24
            # ip_version: 4
          requirements:
            - template:
                node: public_template
                relationship: tosca.relationships.BelongsToOne
            - owner:
                node: public_networking_slice
                relationship: tosca.relationships.BelongsToOne

        service#addressmanager:
          type: tosca.nodes.AddressManagerService
          properties:
            name: addressmanager

        addresses_public:
          type: tosca.nodes.AddressPool
          properties:
            name: addresses_public
            addresses: 10.8.1.0/24
            gateway_ip: 10.8.1.1
            gateway_mac:  a4:23:05:06:01:01
          requirements:
            - service:
                node: service#addressmanager
                relationship: tosca.relationships.BelongsToOne

        AddressManagerServiceInstancePublicNetwork:
          type: tosca.nodes.AddressManagerServiceInstance
          requirements:
            - owner:
                node: service#addressmanager
                relationship: tosca.relationships.BelongsToOne
            - address_pool:
                node: addresses_public
                relationship: tosca.relationships.BelongsToOne
          properties:
            name: AM_public_net

        public_to_address_manager:
          type: tosca.nodes.ServiceInstanceLink
          requirements:
            - provider_service_instance:
                node: AddressManagerServiceInstancePublicNetwork
                relationship: tosca.relationships.BelongsToOne
            - subscriber_network:
                node: public
                relationship: tosca.relationships.BelongsToOne
  050-exampleservice-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0

    imports:
       - custom_types/slice.yaml
       - custom_types/site.yaml
       - custom_types/image.yaml
       - custom_types/flavor.yaml
       - custom_types/network.yaml
       - custom_types/networktemplate.yaml
       - custom_types/networkslice.yaml
       - custom_types/openstackservice.yaml
       - custom_types/trustdomain.yaml
       - custom_types/exampleservice.yaml
       - custom_types/exampleserviceinstance.yaml

    description: configure exampleservice

    topology_template:
      node_templates:
        service#openstack:
          type: tosca.nodes.OpenStackService
          properties:
              name: "OpenStack"
              must-exist: true

        untrusted_trustdomain:
          type: tosca.nodes.TrustDomain
          properties:
            name: "untrusted-openstack"
          requirements:
            - owner:
                node: service#openstack
                relationship: tosca.relationships.BelongsToOne

    # site, image, fully created in deployment.yaml
        mysite:
          type: tosca.nodes.Site
          properties:
            must-exist: true
            name: mysite

        m1.small:
          type: tosca.nodes.Flavor
          properties:
            name: m1.small
            must-exist: true

        trusty-server-multi-nic:
          type: tosca.nodes.Image
          properties:
            name: "trusty-server-multi-nic"
            container_format: "BARE"
            disk_format: "QCOW2"
            path: "https://github.com/opencord/platform-install/releases/download/vms/trusty-server-cloudimg-amd64-disk1.img.20170201"

    # private network template, fully created somewhere else
        private:
          type: tosca.nodes.NetworkTemplate
          properties:
            must-exist: true
            name: Private

    # management networks, fully created in management-net.yaml
        management_network:
          type: tosca.nodes.Network
          properties:
            must-exist: true
            name: management

    # public network, fully created somewhere else
        public_network:
          type: tosca.nodes.Network
          properties:
            must-exist: true
            name: public

        exampleservice_network:
          type: tosca.nodes.Network
          properties:
              name: exampleservice_network
              labels: exampleservice_private_network
          requirements:
              - template:
                  node: private
                  relationship: tosca.relationships.BelongsToOne
              - owner:
                  node: exampleservice_slice
                  relationship: tosca.relationships.BelongsToOne

    # ExampleService Slices
        exampleservice_slice:
          description: Example Service Slice
          type: tosca.nodes.Slice
          properties:
              name: exampleservice
              default_isolation: vm
              network: noauto
          requirements:
              - site:
                  node: mysite
                  relationship: tosca.relationships.BelongsToOne
              - service:
                  node: exampleservice
                  relationship: tosca.relationships.BelongsToOne
              - default_image:
                  node: trusty-server-multi-nic
                  relationship: tosca.relationships.BelongsToOne
              - default_flavor:
                  node: m1.small
                  relationship: tosca.relationships.BelongsToOne
              - trust_domain:
                  node: untrusted_trustdomain
                  relationship: tosca.relationships.BelongsToOne

    # ExampleService NetworkSlices
        exampleservice_slice_management_network:
          type: tosca.nodes.NetworkSlice
          requirements:
            - network:
                node: management_network
                relationship: tosca.relationships.BelongsToOne
            - slice:
                node: exampleservice_slice
                relationship: tosca.relationships.BelongsToOne

        exampleservice_slice_public_network:
          type: tosca.nodes.NetworkSlice
          requirements:
            - network:
                node: public_network
                relationship: tosca.relationships.BelongsToOne
            - slice:
                node: exampleservice_slice
                relationship: tosca.relationships.BelongsToOne

        exampleservice_slice_exampleservice_network:
          type: tosca.nodes.NetworkSlice
          requirements:
            - network:
                node: exampleservice_network
                relationship: tosca.relationships.BelongsToOne
            - slice:
                node: exampleservice_slice
                relationship: tosca.relationships.BelongsToOne

        exampleservice:
          type: tosca.nodes.ExampleService
          properties:
            name: exampleservice
            public_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDL5L5vDsQ1bmSeisxMf/GZEqv85oHHu6RFE17VYoTAuBBsHQnETOccbQT85qSBy5NAMAICtOd15iXYfmul0eFeSHoQr1H3IAXT0if6ANxXOm8/Z2rlRNthOEgsjDQU9foNxQ4wksygy5epKmbEhMqbFZjuj4zYfStPzE/gkFSE9QjhKMWaJmyLFfq9f8DnC+TTE41K5iGbtramr7qHSWsKKy75XV6MZZLLFExrQqlYDlLA2V0aYezCql3fB96KJmf6GJRT3j3Y7oWaj7gEzMCycA2QgP8ZNFL/2Q1qgvQRc6I46/HUiOh3IT8LVDdo2ZUn9qrNameQ1zR7a+wBvYIV Insecure M-CORD keypair"
            private_key_fn: /opt/xos/services/exampleservice/keys/id_rsa
            service_message: hello

        exampletenant1:
          type: tosca.nodes.ExampleServiceInstance
          properties:
            name: exampletenant1
            tenant_message: world
          requirements:
            - owner:
                node: exampleservice
                relationship: tosca.relationships.BelongsToOne
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-addressmanager
  labels:
    app: addressmanager
    chart: addressmanager-2.0.4
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: addressmanager
      release: release-name
  template:
    metadata:
      labels:
        app: addressmanager
        release: release-name
      annotations:
        checksum/config: e353f1b848906c8261194edcdebd4722ce184bb3e028ea7c8c9fad5276f5aae0
    spec:
      containers:
        - name: addressmanager
          image: xosproject/addressmanager-synchronizer:2.0.4
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: addressmanager-config
              mountPath: /opt/xos/synchronizers/addressmanager/addressmanager_config.yaml
              subPath: addressmanager_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: addressmanager-config
          configMap:
            name: addressmanager
            items:
              - key: serviceConfig
                path: addressmanager_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-exampleservice
  labels:
    app: exampleservice
    chart: exampleservice-2.2.4
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: exampleservice
      release: release-name
  template:
    metadata:
      labels:
        app: exampleservice
        release: release-name
    spec:
      containers:
        - name: exampleservice
          image: xosproject/exampleservice-synchronizer:2.2.4
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: exampleservice-config
              mountPath: /opt/xos/synchronizers/exampleservice/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
            - name: exampleservice-keys
              mountPath: /opt/xos/services/exampleservice/keys
              readOnly: true
            - name: node-key
              mountPath: /opt/cord_profile
              readOnly: true
      volumes:
        - name: exampleservice-config
          configMap:
            name: exampleservice
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
        - name: exampleservice-keys
          secret:
            secretName: exampleservice-keys
        - name: node-key
          secret:
            secretName: node-key
            defaultMode: 256
            optional: true
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-demo-exampleservice-tosca-loader
  labels:
    app: demo-exampleservice
    chart: demo-exampleservice-1.1.3
    release: release-name
    heritage: Helm
spec:
  template:
    metadata:
      labels:
        app: demo-exampleservice
        release: release-name
      annotations:
        checksum/config: 528863decdd4c79e7fbdaf0c5eb22c6d93a28049d05d3e5045976dd2de9f608c
    spec:
      restartPolicy: OnFailure
      containers:
        - name: demo-exampleservice-tosca-loader
          image: xosproject/tosca-loader:1.3.0
          imagePullPolicy: Always
          env:
            - name: XOS_USER
              value: admin@opencord.org
            - name: XOS_PASSWD
              valueFrom:
                secretKeyRef:
                  name: xos-admin-passwd-secret
                  key: password
          volumeMounts:
            - name: demo-exampleservice-tosca
              mountPath: /opt/tosca
      volumes:
        - name: demo-exampleservice-tosca
          configMap:
            name: demo-exampleservice-tosca
