[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "exampleservice-keys",
      "namespace": "wP6yNEs"
    },
    "type": "Opaque",
    "data": {
      "id_rsa": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBeStTK2J3N0VOVzVrbm9yTVRIL3htUktyL09hQng3dWtSUk5lMVdLRXdMZ1FiQjBKCnhFem5IRzBFL09ha2djdVRRREFDQXJUbmRlWWwySDVycGRIaFhraDZFSzlSOXlBRjA5SW4rZ0RjVnpwdlAyZHEKNVVUYllUaElMSXcwRlBYNkRjVU9NSkxNb011WHFTcG14SVRLbXhXWTdvK00ySDByVDh4UDRKQlVoUFVJNFNqRgptaVpzaXhYNnZYL0E1d3ZrMHhPTlN1WWhtN2EycHErNmgwbHJDaXN1K1YxZWpHV1N5eFJNYTBLcFdBNVN3TmxkCkdtSHN3cXBkM3dmZWlpWm4raGlVVTk0OTJPNkZtbys0Qk16QXNuQU5rSUQvR1RSUy85a05hb0wwRVhPaU9PdngKMUlqb2R5RS9DMVEzYU5tVkovYXF6V3Bua05jMGUydnNBYjJDRlFJREFRQUJBb0lCQVFER1JaQnlDdGYrWlhWdgpQdVhnVm1Lb1NpSDVjbVl0eG1pOXkxSmpDc1N4YTh4OGRkaHpqWjBJWlhOK1F3TWlQTWJhbWxTNk1SVUw3MXhLCkpOV2xrRzBwOUN6UFlNM0NGTi9WMWYyTi9aeEhMc25UekV1RTIrckJwYXQ1dG5WSEZOT3U1RHNpUFA3RU5uY3EKeDlMYnM0NGFOV3hjUURma3BnT2lPN3BKVTlEODRGWXVKYkg2RWhIQ3QxbnV5VWVIYUc3cXFzRFluYUdvNk5TYwpxcW5tcnZvU0JPUStDSVhncVJ3R3VldE45a05GL25LT1d4V2laK1ZBWUlYYjdjbmttT1dUZzVvalBpZkNXTWVFCnhpVjlhZ0Z6RUVKaFB4aGl2RnRJcTBYdnNpU2xBWnZaY1JFWEtheXc2ekZ4OUpUZ3BPWFlsbit4ZzBwUUVWWHIKTUxXdjdCVFpBb0dCQVBMeTFaN3FqZVI5UHdUWmVuOTcwQVMzQnNBVFFBY0FoNGFFSEdQeHdMbVdEa2h6SlRXNwpDMlU0ZFN5akIxVzZPTDZ5NHU3YWdnTzVuc2hzRVVaNzNoRTM3YjEvc3IxUFlDK05YdVh1VGhEWURGRDNmNUxBCkh3VTBYdngrdWliVjc1K1hwT2tDbFNCa2YyazZlQkZENjhQYUx5amZDU25Fa3p1a1dQdG5neFJUQW9HQkFOYlkKelhGS0lyY1F0QXoycDMrdHhVOVhxYTV4SzJyUWZMdXJjNjZ4eHhDM0tPOG9NaFlQMmh0aWVZUnlnd2c5MUpSMgpCdTZzWDgrdDVNTllTc28xdDhDU08zNnRjZ1VEb3dvKzJYdXZZOUZ3UVVnVmlITktPYjdjRnJOU2dXTVZoYm5nCi9aZ3hLcm5WbDFOUEJpdkRWNWtQZytqRDFCSU9VbFFpbXlyRDZzTDNBb0dCQU9ublJDWnBXczFHakhybHk1dWIKbjg0NlRNUjJoQ2w1cUFHcGhnL3ZmSWJ4WXJUOEx6SUk4RksyeFpHQk1KbW4zZVEwSkdxa2M1S1VqcndWMTVnTgp2K0xCL3lGNEphVkFHN0lNb1BZc3RucGZGNVNJaFFuTDhORzQ5MDZQMERkOXQrUG1RejZYWHU0OTg3RmpPcUFjCnpZdlZyNXZoQ0ZodlN2V2NLSk43dUdiREFvR0JBS3ZKZXF1bExaRFhDRUI5VUh6a3d5bW4zSU1nOWloWVFBUUgKR1Y2THc3SDM0Z0VvVUxRWFJMdzB4eGxDUHNkdU9QWGtVYkt4bllKL2RyVkRlYm1wcmgyS1Q0d0F2M1NHN2V5WgpTR2gvV3Y3eUZTREFKdlNZV3dmakR6dWZNdG01TWMzb3VwemdZMXRvRDdHTE5GSDF4YXNiSHN3VkdSSys1TkZsClFsQzFpcGNOQW9HQkFJeHFHeUNhaTZidHdEbGJwa2RJK2NrMmo3azluZFo4c29zYzBHMnNlOWQ1OHNmc0hkV2UKMXdwcWU2MnQ3bVFacitJZ0V5cTdSdXVFdFJSNlhxYjhSUXFBdUVkU21zMXpjV2MzMFNKSmhQaXd4SWVMTDBkeApseS9IQkJxbm96RDRCTjNFTmlxbkloT2dlWkU3WEhhUzQzbHVZa1lwQk91QmFXWXM1SUlaV2NjdAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "addressmanager"
    },
    "data": {
      "serviceConfig": "name: addressmanager\naccessor:\n  username: \"admin@opencord.org\"\n  password: \"letmein\"\n  endpoint: xos-core:50051\nrequired_models:\n  - AddressManagerServiceInstance\ndependency_graph: \"/opt/xos/synchronizers/addressmanager/model-deps\"\nmodel_policies_dir: \"/opt/xos/synchronizers/addressmanager/model_policies\"\nmodels_dir: \"/opt/xos/synchronizers/addressmanager/models\"\nlogging:\n  version: 1\n  handlers:\n    console:\n      class: logging.StreamHandler\n    file:\n      class: logging.handlers.RotatingFileHandler\n      filename: /var/log/xos.log\n      maxBytes: 10485760\n      backupCount: 5\n    kafka:\n      class: kafkaloghandler.KafkaLogHandler\n      bootstrap_servers:\n        - \"cord-kafka:9092\"\n      topic: xos.log.addressmanager\n  loggers:\n    '':\n      handlers:\n        - console\n        - file\n        - kafka\n      level: DEBUG\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "exampleservice"
    },
    "data": {
      "serviceConfig": "name: exampleservice\naccessor:\n  username: \"admin@opencord.org\"\n  password: \"letmein\"\n  endpoint: xos-core:50051\nlogging:\n  version: 1\n  handlers:\n    console:\n      class: logging.StreamHandler\n    file:\n      class: logging.handlers.RotatingFileHandler\n      filename: /var/log/xos.log\n      maxBytes: 10485760\n      backupCount: 5\n    kafka:\n      class: kafkaloghandler.KafkaLogHandler\n      bootstrap_servers:\n        - \"cord-kafka:9092\"\n      topic: xos.log.exampleservice\n  loggers:\n    '':\n      handlers:\n        - console\n        - file\n        - kafka\n      level: DEBUG\nproxy_ssh:\n  enabled: true\n  user: root\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "demo-exampleservice-tosca"
    },
    "data": {
      "010-publicnet.yaml": "tosca_definitions_version: tosca_simple_yaml_1_0\ndescription: Setup public network\nimports:\n  - custom_types/addressmanagerservice.yaml\n  - custom_types/addressmanagerserviceinstance.yaml\n  - custom_types/addresspool.yaml\n  - custom_types/networktemplate.yaml\n  - custom_types/network.yaml\n  - custom_types/serviceinstancelink.yaml\n  - custom_types/site.yaml\n  - custom_types/slice.yaml\ntopology_template:\n  node_templates:\n    mysite:\n      type: tosca.nodes.Site\n      properties:\n        name: mysite\n        must-exist: true\n\n    public_networking_slice:\n      description: This slice exists solely to own the public network\n      type: tosca.nodes.Slice\n      properties:\n        network: noauto\n        name: public_networking\n      requirements:\n        - site:\n            node: mysite\n            relationship: tosca.relationships.BelongsToOne\n\n    # public network\n    public_template:\n      type: tosca.nodes.NetworkTemplate\n      properties:\n        name: public_template\n        visibility: public\n        translation: none\n        vtn_kind: PUBLIC\n\n    public:\n      type: tosca.nodes.Network\n      properties:\n        name: public\n        permit_all_slices: true\n        subnet: 10.8.1.0/24\n        # ip_version: 4\n      requirements:\n        - template:\n            node: public_template\n            relationship: tosca.relationships.BelongsToOne\n        - owner:\n            node: public_networking_slice\n            relationship: tosca.relationships.BelongsToOne\n\n    service#addressmanager:\n      type: tosca.nodes.AddressManagerService\n      properties:\n        name: addressmanager\n\n    addresses_public:\n      type: tosca.nodes.AddressPool\n      properties:\n        name: addresses_public\n        addresses: 10.8.1.0/24\n        gateway_ip: 10.8.1.1\n        gateway_mac:  a4:23:05:06:01:01\n      requirements:\n        - service:\n            node: service#addressmanager\n            relationship: tosca.relationships.BelongsToOne\n\n    AddressManagerServiceInstancePublicNetwork:\n      type: tosca.nodes.AddressManagerServiceInstance\n      requirements:\n        - owner:\n            node: service#addressmanager\n            relationship: tosca.relationships.BelongsToOne\n        - address_pool:\n            node: addresses_public\n            relationship: tosca.relationships.BelongsToOne\n      properties:\n        name: AM_public_net\n\n    public_to_address_manager:\n      type: tosca.nodes.ServiceInstanceLink\n      requirements:\n        - provider_service_instance:\n            node: AddressManagerServiceInstancePublicNetwork\n            relationship: tosca.relationships.BelongsToOne\n        - subscriber_network:\n            node: public\n            relationship: tosca.relationships.BelongsToOne\n",
      "050-exampleservice-service.yaml": "tosca_definitions_version: tosca_simple_yaml_1_0\n\nimports:\n   - custom_types/slice.yaml\n   - custom_types/site.yaml\n   - custom_types/image.yaml\n   - custom_types/flavor.yaml\n   - custom_types/network.yaml\n   - custom_types/networktemplate.yaml\n   - custom_types/networkslice.yaml\n   - custom_types/openstackservice.yaml\n   - custom_types/trustdomain.yaml\n   - custom_types/exampleservice.yaml\n   - custom_types/exampleserviceinstance.yaml\n\ndescription: configure exampleservice\n\ntopology_template:\n  node_templates:\n    service#openstack:\n      type: tosca.nodes.OpenStackService\n      properties:\n          name: \"OpenStack\"\n          must-exist: true\n\n    untrusted_trustdomain:\n      type: tosca.nodes.TrustDomain\n      properties:\n        name: \"untrusted-openstack\"\n      requirements:\n        - owner:\n            node: service#openstack\n            relationship: tosca.relationships.BelongsToOne\n\n# site, image, fully created in deployment.yaml\n    mysite:\n      type: tosca.nodes.Site\n      properties:\n        must-exist: true\n        name: mysite\n\n    m1.small:\n      type: tosca.nodes.Flavor\n      properties:\n        name: m1.small\n        must-exist: true\n\n    trusty-server-multi-nic:\n      type: tosca.nodes.Image\n      properties:\n        name: \"trusty-server-multi-nic\"\n        container_format: \"BARE\"\n        disk_format: \"QCOW2\"\n        path: \"https://github.com/opencord/platform-install/releases/download/vms/trusty-server-cloudimg-amd64-disk1.img.20170201\"\n\n# private network template, fully created somewhere else\n    private:\n      type: tosca.nodes.NetworkTemplate\n      properties:\n        must-exist: true\n        name: Private\n\n# management networks, fully created in management-net.yaml\n    management_network:\n      type: tosca.nodes.Network\n      properties:\n        must-exist: true\n        name: management\n\n# public network, fully created somewhere else\n    public_network:\n      type: tosca.nodes.Network\n      properties:\n        must-exist: true\n        name: public\n\n    exampleservice_network:\n      type: tosca.nodes.Network\n      properties:\n          name: exampleservice_network\n          labels: exampleservice_private_network\n      requirements:\n          - template:\n              node: private\n              relationship: tosca.relationships.BelongsToOne\n          - owner:\n              node: exampleservice_slice\n              relationship: tosca.relationships.BelongsToOne\n\n# ExampleService Slices\n    exampleservice_slice:\n      description: Example Service Slice\n      type: tosca.nodes.Slice\n      properties:\n          name: exampleservice\n          default_isolation: vm\n          network: noauto\n      requirements:\n          - site:\n              node: mysite\n              relationship: tosca.relationships.BelongsToOne\n          - service:\n              node: exampleservice\n              relationship: tosca.relationships.BelongsToOne\n          - default_image:\n              node: trusty-server-multi-nic\n              relationship: tosca.relationships.BelongsToOne\n          - default_flavor:\n              node: m1.small\n              relationship: tosca.relationships.BelongsToOne\n          - trust_domain:\n              node: untrusted_trustdomain\n              relationship: tosca.relationships.BelongsToOne\n\n# ExampleService NetworkSlices\n    exampleservice_slice_management_network:\n      type: tosca.nodes.NetworkSlice\n      requirements:\n        - network:\n            node: management_network\n            relationship: tosca.relationships.BelongsToOne\n        - slice:\n            node: exampleservice_slice\n            relationship: tosca.relationships.BelongsToOne\n\n    exampleservice_slice_public_network:\n      type: tosca.nodes.NetworkSlice\n      requirements:\n        - network:\n            node: public_network\n            relationship: tosca.relationships.BelongsToOne\n        - slice:\n            node: exampleservice_slice\n            relationship: tosca.relationships.BelongsToOne\n\n    exampleservice_slice_exampleservice_network:\n      type: tosca.nodes.NetworkSlice\n      requirements:\n        - network:\n            node: exampleservice_network\n            relationship: tosca.relationships.BelongsToOne\n        - slice:\n            node: exampleservice_slice\n            relationship: tosca.relationships.BelongsToOne\n\n    exampleservice:\n      type: tosca.nodes.ExampleService\n      properties:\n        name: exampleservice\n        public_key: \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDL5L5vDsQ1bmSeisxMf/GZEqv85oHHu6RFE17VYoTAuBBsHQnETOccbQT85qSBy5NAMAICtOd15iXYfmul0eFeSHoQr1H3IAXT0if6ANxXOm8/Z2rlRNthOEgsjDQU9foNxQ4wksygy5epKmbEhMqbFZjuj4zYfStPzE/gkFSE9QjhKMWaJmyLFfq9f8DnC+TTE41K5iGbtramr7qHSWsKKy75XV6MZZLLFExrQqlYDlLA2V0aYezCql3fB96KJmf6GJRT3j3Y7oWaj7gEzMCycA2QgP8ZNFL/2Q1qgvQRc6I46/HUiOh3IT8LVDdo2ZUn9qrNameQ1zR7a+wBvYIV Insecure M-CORD keypair\"\n        private_key_fn: /opt/xos/services/exampleservice/keys/id_rsa\n        service_message: hello\n\n    exampletenant1:\n      type: tosca.nodes.ExampleServiceInstance\n      properties:\n        name: exampletenant1\n        tenant_message: world\n      requirements:\n        - owner:\n            node: exampleservice\n            relationship: tosca.relationships.BelongsToOne\n"
    }
  },
  {
    "apiVersion": "apps/v1beta2",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-addressmanager",
      "labels": {
        "app": "addressmanager",
        "chart": "addressmanager-2.0.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "addressmanager",
          "release": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "addressmanager",
            "release": "release-name"
          },
          "annotations": {
            "checksum/config": "e353f1b848906c8261194edcdebd4722ce184bb3e028ea7c8c9fad5276f5aae0"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "addressmanager",
              "image": "xosproject/addressmanager-synchronizer:2.0.4",
              "imagePullPolicy": "Always",
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "addressmanager-config",
                  "mountPath": "/opt/xos/synchronizers/addressmanager/addressmanager_config.yaml",
                  "subPath": "addressmanager_config.yaml"
                },
                {
                  "name": "certchain-volume",
                  "mountPath": "/usr/local/share/ca-certificates/local_certs.crt",
                  "subPath": "config/ca_cert_chain.pem"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "addressmanager-config",
              "configMap": {
                "name": "addressmanager",
                "items": [
                  {
                    "key": "serviceConfig",
                    "path": "addressmanager_config.yaml"
                  }
                ]
              }
            },
            {
              "name": "certchain-volume",
              "configMap": {
                "name": "ca-certificates",
                "items": [
                  {
                    "key": "chain",
                    "path": "config/ca_cert_chain.pem"
                  }
                ]
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1beta2",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-exampleservice",
      "labels": {
        "app": "exampleservice",
        "chart": "exampleservice-2.2.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "exampleservice",
          "release": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "exampleservice",
            "release": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "exampleservice",
              "image": "xosproject/exampleservice-synchronizer:2.2.4",
              "imagePullPolicy": "Always",
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "exampleservice-config",
                  "mountPath": "/opt/xos/synchronizers/exampleservice/mounted_config.yaml",
                  "subPath": "mounted_config.yaml"
                },
                {
                  "name": "certchain-volume",
                  "mountPath": "/usr/local/share/ca-certificates/local_certs.crt",
                  "subPath": "config/ca_cert_chain.pem"
                },
                {
                  "name": "exampleservice-keys",
                  "mountPath": "/opt/xos/services/exampleservice/keys",
                  "readOnly": true
                },
                {
                  "name": "node-key",
                  "mountPath": "/opt/cord_profile",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "exampleservice-config",
              "configMap": {
                "name": "exampleservice",
                "items": [
                  {
                    "key": "serviceConfig",
                    "path": "mounted_config.yaml"
                  }
                ]
              }
            },
            {
              "name": "certchain-volume",
              "configMap": {
                "name": "ca-certificates",
                "items": [
                  {
                    "key": "chain",
                    "path": "config/ca_cert_chain.pem"
                  }
                ]
              }
            },
            {
              "name": "exampleservice-keys",
              "secret": {
                "secretName": "exampleservice-keys"
              }
            },
            {
              "name": "node-key",
              "secret": {
                "secretName": "node-key",
                "defaultMode": 256,
                "optional": true
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "release-name-demo-exampleservice-tosca-loader",
      "labels": {
        "app": "demo-exampleservice",
        "chart": "demo-exampleservice-1.1.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "app": "demo-exampleservice",
            "release": "release-name"
          },
          "annotations": {
            "checksum/config": "528863decdd4c79e7fbdaf0c5eb22c6d93a28049d05d3e5045976dd2de9f608c"
          }
        },
        "spec": {
          "restartPolicy": "OnFailure",
          "containers": [
            {
              "name": "demo-exampleservice-tosca-loader",
              "image": "xosproject/tosca-loader:1.3.0",
              "imagePullPolicy": "Always",
              "env": [
                {
                  "name": "XOS_USER",
                  "value": "admin@opencord.org"
                },
                {
                  "name": "XOS_PASSWD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "xos-admin-passwd-secret",
                      "key": "password"
                    }
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "demo-exampleservice-tosca",
                  "mountPath": "/opt/tosca"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "demo-exampleservice-tosca",
              "configMap": {
                "name": "demo-exampleservice-tosca"
              }
            }
          ]
        }
      }
    }
  }
]