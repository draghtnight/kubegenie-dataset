apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    control-plane: release-name-dex-controller
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
  name: release-name-dex-controller-sa
  namespace: zhX328WjGf9R
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: clients.dex.mesosphere.io
  labels:
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
spec:
  additionalPrinterColumns:
    - JSONPath: .spec.displayName
      name: DisplayName
      type: string
    - JSONPath: .spec.clientSecretRef
      name: ClientSecretRef
      type: string
  group: dex.mesosphere.io
  names:
    kind: Client
    listKind: ClientList
    plural: clients
    singular: client
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Client is the Schema for the clients API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClientSpec defines the desired state of Client OAuth2 Client representation https://github.com/dexidp/dex/blob/4bede5eb80822fc3a7fc9edca0ed2605cd339d17/storage/storage.go#L109-L136
          properties:
            clientSecretRef:
              description: 'Reference to a secret that contains the client secret. The secret should contain `client-secret` key like the following: ------- apiVersion: v1 kind: Secret metadata: name: static-client-secret type: Opaque data:   client-secret: ...'
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            displayName:
              description: The display name for the Client
              type: string
            logoURL:
              description: LogoURL used when displaying this client to the end user.
              type: string
            public:
              description: Public clients must use either use a redirectURL 127.0.0.1:X or "urn:ietf:wg:oauth:2.0:oob"
              type: boolean
            redirectURIs:
              description: A registered set of redirect URIs. When redirecting from dex to the client, the URI requested to redirect to MUST match one of these values, unless the client is "public".
              items:
                type: string
              type: array
            trustedPeers:
              description: "TrustedPeers are a list of peers which can issue tokens on this client's behalf using the dynamic \"oauth2:server:client_id:(client_id)\" scope. If a peer makes such a request, this client's ID will appear as the ID Token's audience. \n Clients inherently trust themselves."
              items:
                type: string
              type: array
          required:
            - clientSecretRef
            - displayName
          type: object
        status:
          description: ClientStatus defines the observed state of Client
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: connectors.dex.mesosphere.io
  labels:
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
spec:
  additionalPrinterColumns:
    - JSONPath: .spec.enabled
      name: Enabled
      type: boolean
    - JSONPath: .spec.displayName
      name: DisplayName
      type: string
    - JSONPath: .spec.type
      name: Type
      type: string
  group: dex.mesosphere.io
  names:
    kind: Connector
    listKind: ConnectorList
    plural: connectors
    singular: connector
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Connector is the Schema for the connectors API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ConnectorSpec defines the desired state of Connector
          properties:
            displayName:
              description: The display name for the Connector. The display name will be shown in the UI of the login page.
              type: string
            enabled:
              description: Whether this Connector is enabled or not. This allows the admin to create the Connector configuration first, and later enable it by toggling this field.
              type: boolean
            github:
              properties:
                clientSecretRef:
                  description: 'Reference to secret that contains the client ID and client secret. The secret should contain two keys `client-id` and `client-secret` like the following: ------- apiVersion: v1 kind: Secret metadata: name: github-client-secret type: Opaque data:   client-id: ...   client-secret: ...'
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                hostName:
                  description: Github API host name. Default to "api.github.com".
                  type: string
                loadAllGroups:
                  description: Flag which indicates that all user groups and teams should be loaded.
                  type: boolean
                orgs:
                  description: "Optional organizations and teams, communicated through the \"groups\" scope. \n NOTE: This is an EXPERIMENTAL config option and will likely change. \n Dex queries the following organizations for group information if the \"groups\" scope is provided. Group claims are formatted as \"(org):(team)\".  For example if a user is part of the \"engineering\" team of the \"coreos\" org, the group claim would include \"coreos:engineering\". \n If orgs are specified in the config then user MUST be a member of at least one of the specified orgs to authenticate with dex. \n If 'orgs' is not specified in the config and 'loadAllGroups' setting set to true then user authenticate with ALL user's Github groups. Typical use case for this setup: provide read-only access to everyone and give full permissions if user has 'my-organization:admins-team' group claim. \n Examples:  orgs:  - name: my-organization   # Include all teams as claims.  - name: my-organization-with-teams  # A white list of teams. Only include group claims for these teams.  teams:  - red-team  - blue-team"
                  items:
                    properties:
                      name:
                        description: Organization name in github (not slug, full name). Only users in this github organization can authenticate.
                        type: string
                      teams:
                        description: Names of teams in a github organization. A user will be able to authenticate if they are members of at least one of these teams. Users in the organization can authenticate if this field is omitted from the config file.
                        items:
                          type: string
                        type: array
                    required:
                      - name
                    type: object
                  type: array
                redirectURI:
                  description: Dex's issuer URL + "/callback"
                  type: string
                rootCASecretRef:
                  description: A secret reference to the root CA that will be used for TLS validation. The secret should have type "Opaque" and contain the key "tls.crt". If not specified, the root CA of the host will be used.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                teamNameField:
                  description: "Optional choice between 'name' (default), 'slug', or 'both'. \n As an example, group claims for member of 'Site Reliability Engineers' in Acme organization would yield:   - ['acme:Site Reliability Engineers'] for 'name'   - ['acme:site-reliability-engineers'] for 'slug'   - ['acme:Site Reliability Engineers',      'acme:site-reliability-engineers'] for 'both'"
                  type: string
                useLoginAsID:
                  description: Flag which will switch from using the internal GitHub id to the users handle (@mention) as the user id. It is possible for a user to change their own user name but it is very rare for them to do so.
                  type: boolean
              required:
                - clientSecretRef
                - redirectURI
              type: object
            ldap:
              description: 'This config for LDAP is derived from: https://github.com/dexidp/dex/blob/v2.19.0/connector/ldap/ldap.go#L53'
              properties:
                bindDN:
                  description: The name of the application service account to authenticate with the LDAP server. The connector uses the specified service account search for users and groups. Not required if the LDAP server provides access for anonymous auth.
                  type: string
                bindSecretRef:
                  description: 'A secret reference to the password of the application service account to authenticate with the LDAP server. The connector uses the specified service account search for users and groups. Not required if the LDAP server provides access for anonymous auth. The secret should contain the key `password` like the following: ------- apiVersion: v1 kind: Secret metadata: name: ldap-bind-secret type: Opaque data:   password: ... -------'
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                groupSearch:
                  description: Group search queries for groups given a user entry.
                  properties:
                    baseDN:
                      description: BaseDN to start the search from. It will translate to the query "(&(objectClass=group)(member=<user uid>))".
                      type: string
                    filter:
                      description: Optional filter to apply when searching the directory. For example "(objectClass=posixGroup)"
                      type: string
                    groupAttr:
                      type: string
                    nameAttr:
                      description: The attribute of the group that represents its name.
                      type: string
                    scope:
                      description: 'Can either be: * "sub" - search the whole sub tree * "one" - only search one level Default to "sub" if not specified.'
                      type: string
                    userAttr:
                      description: 'Following two fields are used to match a user to a group.  It adds an additional requirement to the filter that an attribute in the group match the user''s attribute value. For example that the "members" attribute of a group matches the "uid" of the user. The exact filter being added is:   (<groupAttr>=<userAttr value>)'
                      type: string
                  required:
                    - baseDN
                  type: object
                host:
                  description: Host and optional port of the LDAP server in the form "host:port". If the port is not supplied, it will be guessed based on `insecureNoSSL`, and `startTLS` fields. 389 for insecure or StartTLS connections, 636 otherwise.
                  type: string
                insecureNoSSL:
                  description: Following field is required if the LDAP host is not using TLS (port 389). Because this option inherently leaks passwords to anyone on the same network as dex, THIS OPTION MAY BE REMOVED WITHOUT WARNING IN A FUTURE RELEASE.
                  type: boolean
                insecureSkipVerify:
                  description: If a custom certificate isn't provide, this option can be used to turn off TLS certificate checks. As noted, it is insecure and shouldn't be used outside of explorative phases.
                  type: boolean
                rootCASecretRef:
                  description: A secret reference to the root CA that will be used for TLS validation. The secret should have type "Opaque" and contain the key "tls.crt". If not specified, the root CA of the host will be used.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                startTLS:
                  description: Connect to the insecure port then issue a StartTLS command to negotiate a secure connection. If unsupplied secure connections will use the LDAPS protocol.
                  type: boolean
                userSearch:
                  description: User search queries for users.
                  properties:
                    baseDN:
                      description: BaseDN to start the search from. It will translate to the query "(&(objectClass=person)(uid=<username>))". For example "cn=users,dc=example,dc=com"
                      type: string
                    emailAttr:
                      description: A mapping of attributes on the user entry to the email claim. Default to "mail" if not specified.
                      type: string
                    emailSuffix:
                      description: If this is set, the email claim of the id token will be constructed from the idAttr and value of emailSuffix. This should not include the @ character.
                      type: string
                    filter:
                      description: Optional filter to apply when searching the directory. For example "(objectClass=person)"
                      type: string
                    idAttr:
                      description: A mapping of attributes on the user entry to the name claim. Default to "uid" if not specified.
                      type: string
                    nameAttr:
                      description: Maps to display name of users.
                      type: string
                    scope:
                      description: 'Can either be: * "sub" - search the whole sub tree * "one" - only search one level Default to "sub" if not specified.'
                      type: string
                    username:
                      description: Username attribute used for comparing user entries. This will be translated and combined with the other filter as "(<attr>=<username>)".
                      type: string
                  required:
                    - baseDN
                    - username
                  type: object
              required:
                - host
              type: object
            oidc:
              properties:
                basicAuthUnsupported:
                  description: Some providers require passing client secret via POST parameters instead of basic auth, despite the OAuth2 RFC discouraging it. Many of these cases are caught internally, but some may need to uncommented the following field.
                  type: boolean
                clientSecretRef:
                  description: 'Reference to secret that contains the client ID and client secret. The secret should contain two keys `client-id` and `client-secret` like the following: ------- apiVersion: v1 kind: Secret metadata: name: oidc-client-secret type: Opaque data:   client-id: ...   client-secret: ...'
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                getUserInfo:
                  description: When enabled, the OpenID Connector will query the UserInfo endpoint for additional claims. UserInfo claims take priority over claims returned by the IDToken. This option should be used when the IDToken doesn't contain all the claims requested. https://openid.net/specs/openid-connect-core-1_0.html#UserInfo
                  type: boolean
                hostedDomains:
                  description: 'Google supports whitelisting allowed domains when using G Suite (Google Apps). The following field can be set to a list of domains that can log in:'
                  items:
                    type: string
                  type: array
                insecureSkipEmailVerified:
                  description: Some providers return claims without "email_verified", when they had no usage of emails verification in enrollment process or if they are acting as a proxy for another IDP (e.g., AWS Cognito with an upstream SAML IDP). This can be overridden with the below option.
                  type: boolean
                issuer:
                  description: 'Canonical URL of the provider, also used for configuration discovery. This value MUST match the value returned in the provider config discovery. See: https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig'
                  type: string
                redirectURI:
                  description: Dex's issuer URL + "/callback"
                  type: string
                scopes:
                  description: List of additional scopes to request in token response. Defaults to "profile" and "email"
                  items:
                    type: string
                  type: array
                userIDKey:
                  description: Configurable key which contains the user id claim. Default to "sub" if not specified. Claims list at https://openid.net/specs/openid-connect-core-1_0.html#Claims
                  type: string
                userNameKey:
                  description: Configurable key which contains the user name claim. Default to "name" if not specified.
                  type: string
              required:
                - clientSecretRef
                - issuer
                - redirectURI
              type: object
            type:
              description: The type of the Connector.
              type: string
          required:
            - displayName
            - enabled
            - type
          type: object
        status:
          description: ConnectorStatus defines the observed state of Connector
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: release-name-dex-controller-manager-role
  labels:
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dex.mesosphere.io
    resources:
      - clients
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dex.mesosphere.io
    resources:
      - clients/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - dex.mesosphere.io
    resources:
      - connectors
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - dex.mesosphere.io
    resources:
      - connectors/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-dex-controller-proxy-role
  labels:
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-dex-controller-manager-rolebinding
  labels:
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-dex-controller-manager-role
subjects:
  - kind: ServiceAccount
    name: release-name-dex-controller-sa
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-dex-controller-proxy-rolebinding
  labels:
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-dex-controller-proxy-role
subjects:
  - kind: ServiceAccount
    name: release-name-dex-controller-sa
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-dex-controller-leader-election-role
  namespace: zhX328WjGf9R
  labels:
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-dex-controller-leader-election-rolebinding
  namespace: zhX328WjGf9R
  labels:
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-dex-controller-leader-election-role
subjects:
  - kind: ServiceAccount
    name: release-name-dex-controller-sa
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: release-name-dex-controller
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
  name: release-name-dex-controller-manager-metrics-service
  namespace: zhX328WjGf9R
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
    control-plane: release-name-dex-controller
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-dex-controller-webhook-service
  namespace: zhX328WjGf9R
  labels:
    control-plane: release-name-dex-controller
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    control-plane: release-name-dex-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: release-name-dex-controller
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
  name: release-name-dex-controller
  namespace: zhX328WjGf9R
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: release-name-dex-controller
  template:
    metadata:
      labels:
        control-plane: release-name-dex-controller
        chart: dex-controller-0.2.4
        release: release-name
        heritage: Helm
    spec:
      serviceAccountName: release-name-dex-controller-sa
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
          resources: null
        - args:
            - --metrics-addr=127.0.0.1:8080
          command:
            - /manager
          image: mesosphere/dex-controller:v0.2.0
          imagePullPolicy: IfNotPresent
          name: manager
          ports:
            - containerPort: 443
              name: webhook-server
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 20Mi
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: release-name-dex-controller-webhook-serving-cert
  namespace: default
  labels:
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
spec:
  commonName: release-name-dex-controller-webhook-service.kubeaddons.svc
  dnsNames:
    - release-name-dex-controller-webhook-service.kubeaddons.svc.cluster.local
    - release-name-dex-controller-webhook-service.kubeaddons.svc.cluster
    - release-name-dex-controller-webhook-service.kubeaddons.svc
  issuerRef:
    kind: Issuer
    name: release-name-dex-controller-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Issuer
metadata:
  name: release-name-dex-controller-selfsigned-issuer
  namespace: default
  labels:
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    certmanager.k8s.io/inject-ca-from: default/release-name-dex-controller-webhook-serving-cert
  name: release-name-dex-controller-mutating-webhook-configuration
  labels:
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: release-name-dex-controller-webhook-service
        namespace: default
        path: /mutate-dex-mesosphere-io-v1alpha1-connector
    failurePolicy: Fail
    name: mconnector.kb.io
    rules:
      - apiGroups:
          - dex.mesosphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - connectors
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    certmanager.k8s.io/inject-ca-from: default/release-name-dex-controller-webhook-serving-cert
  name: release-name-dex-controller-validating-webhook-configuration
  labels:
    chart: dex-controller-0.2.4
    release: release-name
    heritage: Helm
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: release-name-dex-controller-webhook-service
        namespace: default
        path: /validate-dex-mesosphere-io-v1alpha1-connector
    failurePolicy: Fail
    name: vconnector.kb.io
    rules:
      - apiGroups:
          - dex.mesosphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - connectors
