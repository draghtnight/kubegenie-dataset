apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-yatai
  namespace: SVUqHN
  labels:
    helm.sh/chart: yatai-0.3.4
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.3.4
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.13.11
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: SVUqHN
type: Opaque
data:
  postgresql-password: aHI4NmtMMzhTaw==
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-yatai
  labels:
    helm.sh/chart: yatai-0.3.4
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.3.4
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  initialization_token: 6syL01BZhatAr0x5
  session_secret_key: cK6brjTQv9Nr2B99
  config.yaml: |
    in_cluster: true

    server:  # the server config section
      enable_https: false  # if the yatai is deployed as an https server, set it to ture
      port: 7777  # the server port
      migration_dir: /app/db/migrations  # the migrations sql files directory
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-yatai
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-yatai
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-yatai
subjects:
  - kind: ServiceAccount
    name: release-name-yatai
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.13.11
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: SVUqHN
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.13.11
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
  namespace: SVUqHN
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-yatai
  labels:
    helm.sh/chart: yatai-0.3.4
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.3.4
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: http
      nodePort: 30080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-yatai
  labels:
    helm.sh/chart: yatai-0.3.4
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.3.4
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: yatai
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: yatai
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-yatai
      securityContext: {}
      containers:
        - name: yatai
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: quay.io/bentoml/yatai:0.3.4
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - exec /app/api-server serve -c /conf/config.yaml
          ports:
            - name: http
              containerPort: 7777
              protocol: TCP
          env:
            - name: PG_HOST
              value: release-name-postgresql
            - name: PG_DATABASE
              value: yatai
            - name: PG_PORT
              value: "5432"
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: PG_USER
              value: postgres
            - name: SESSION_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-yatai
                  key: session_secret_key
            - name: YATAI_INITIALIZATION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: release-name-yatai
                  key: initialization_token
            - name: DOCKER_IMAGE_BUILDER_PRIVILEGED
              value: "false"
          livenessProbe:
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            httpGet:
              path: /
              port: http
          readinessProbe:
            failureThreshold: 60
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            httpGet:
              path: /
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /conf
              name: config
              readOnly: true
            - mountPath: /etc/localtime
              name: host-timezone
              readOnly: true
      volumes:
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-timezone
        - name: config
          secret:
            secretName: release-name-yatai
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.13.11
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
  namespace: SVUqHN
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.13.11
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      automountServiceAccountToken: false
      containers:
        - name: release-name-postgresql
          image: docker.io/bitnami/postgresql:11.14.0-debian-10-r17
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          securityContext:
            runAsUser: 10210
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: yatai
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -d "dbname=yatai" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -d "dbname=yatai" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: null
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-yatai
  labels:
    helm.sh/chart: yatai-0.3.4
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.3.4
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: yatai-ingress
  rules:
    - host: yatai.127.0.0.1.sslip.io
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-yatai
                port:
                  number: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-yatai-test-connection
  labels:
    helm.sh/chart: yatai-0.3.4
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.3.4
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-yatai:80
  restartPolicy: Never
