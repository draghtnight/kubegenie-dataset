[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-bpa-core",
      "labels": {
        "helm.sh/chart": "bpa-0.11.2",
        "app.kubernetes.io/name": "release-name-bpa-core",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.10.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.16.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "L7bVjD2xFtPKx"
    },
    "type": "Opaque",
    "data": {
      "postgresql-password": "Y2hhbmdlLW1l"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "annotations": {
        "helm.sh/resource-policy": "keep"
      },
      "name": "release-name-bpa-acapy",
      "labels": {
        "helm.sh/chart": "bpa-0.11.2",
        "app.kubernetes.io/name": "release-name-bpa-acapy",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.10.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "L7bVjD2xFtPKx"
    },
    "type": "Opaque",
    "data": {
      "seed": "R09meEVpRHBxMm9PbmtkM3YzNG01eE0xYUJoRlprdVU="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-bpa-acapy",
      "labels": {
        "helm.sh/chart": "bpa-0.11.2",
        "app.kubernetes.io/name": "release-name-bpa-acapy",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.10.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "acapy-static-args.yaml": "auto-accept-invites: true\nauto-accept-requests: false\nauto-respond-messages: false\nauto-respond-credential-proposal: false\nauto-respond-credential-offer: false\nauto-respond-credential-request: false\nauto-respond-presentation-proposal: true\nauto-respond-presentation-request: false\nauto-store-credential: true\nauto-verify-presentation: true\nauto-ping-connection: true\nauto-provision: true\nauto-disclose-features: true\nnotify-revocation: true\nmonitor-revocation-notification: true\nmonitor-ping: true\nemit-new-didcomm-prefix: true\nemit-new-didcomm-mime-type: true\nenable-undelivered-queue: true\nexch-use-unencrypted-tags: true\npreserve-exchange-records: false\npublic-invites: true\nplugin: 'aries_cloudagent.messaging.jsonld'\noutbound-transport: http\nwallet-type: askar\nlog-level: info\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-bpa-core",
      "labels": {
        "helm.sh/chart": "bpa-0.11.2",
        "app.kubernetes.io/name": "release-name-bpa-core",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.10.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "AGENT_NAME": "ReleaseName",
      "ACAPY_URL": "http://release-name-bpa-acapy:8031",
      "ACAPY_ENDPOINT": "https://release-name-bpa-acapy.stage.economyofthings.io",
      "ACAPY_API_KEY": "2f9729eef0be49608c1cffd49ee3cc4a",
      "BPA_PG_URL": "jdbc:postgresql://release-name-postgresql:5432/postgres",
      "POSTGRESQL_USER": "postgres",
      "BPA_SECURITY_ENABLED": "true",
      "BPA_LEDGER_BROWSER": "https://indy-test.bosch-digital.de",
      "BPA_HOST": "release-name-bpa.stage.economyofthings.io",
      "BPA_SCHEME": "https",
      "BPA_WEB_MODE": "false",
      "BPA_BOOTSTRAP_UN": "admin",
      "BPA_BOOTSTRAP_PW": "changeme",
      "BPA_CREDDEF_REVOCATION_REGISTRY_SIZE": "3000",
      "BPA_TITLE": "ReleaseName",
      "BPA_I18N_LOCALE": "en",
      "BPA_I18N_FALLBACK_LOCALE": "en",
      "BPA_WEBHOOK_KEY": "changeme"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-bpa-core-schemas",
      "labels": {
        "helm.sh/chart": "bpa-0.11.2",
        "app.kubernetes.io/name": "release-name-bpa-core",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.10.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "schemas.yml": "bpa:\n  schemas:\n    bank-account:\n      id: \"M6Mbe3qx7vB4wpZF4sBRjt:2:bank_account:1.0\"\n      label: \"Bank Account\"\n      defaultAttributeName: \"iban\"\n      restrictions:\n        - issuerDid: \"${bpa.did.prefix}M6Mbe3qx7vB4wpZF4sBRjt\"\n          label: \"Demo Bank\"\n    commercial-register:\n      id: \"5mwQSWnRePrZ3oF67C4KqD:2:commercialregister:1.0\"\n      label: \"Commercial Register\"\n      defaultAttributeName: \"companyName\"\n      restrictions:\n        - issuerDid: \"${bpa.did.prefix}5mwQSWnRePrZ3oF67C4KqD\"\n          label: \"Commercial Register\""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql-headless",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.16.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      },
      "namespace": "L7bVjD2xFtPKx"
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "publishNotReadyAddresses": true,
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.16.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null,
      "namespace": "L7bVjD2xFtPKx"
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name",
        "role": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-bpa-acapy",
      "labels": {
        "helm.sh/chart": "bpa-0.11.2",
        "app.kubernetes.io/name": "release-name-bpa-acapy",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.10.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8030,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        },
        {
          "port": 8031,
          "targetPort": "admin",
          "protocol": "TCP",
          "name": "admin"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "release-name-bpa-acapy",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-bpa-core",
      "labels": {
        "helm.sh/chart": "bpa-0.11.2",
        "app.kubernetes.io/name": "release-name-bpa-core",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.10.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "release-name-bpa-core",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-bpa-acapy",
      "labels": {
        "helm.sh/chart": "bpa-0.11.2",
        "app.kubernetes.io/name": "release-name-bpa-acapy",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.10.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "release-name-bpa-acapy",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "5b7afc9476bc769ad1cab2277bbc852b7adce82dd980f05d2176c3909b086062"
          },
          "labels": {
            "app.kubernetes.io/name": "release-name-bpa-acapy",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "securityContext": {},
          "initContainers": [
            {
              "name": "acapy-provision",
              "image": "bcgovimages/aries-cloudagent:py36-1.16-1_0.7.3",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "-c",
                "curl -d '{\"seed\":\"$(WALLET_SEED)\", \"role\":\"TRUST_ANCHOR\", \"alias\":\"release-name-bpa-core\"}' -X POST https://indy-test.bosch-digital.de/register; sleep 15; aca-py provision --endpoint https://release-name-bpa-acapy.stage.economyofthings.io --wallet-type askar --wallet-storage-type 'postgres_storage' --wallet-name mywallet --wallet-key 123 --wallet-storage-config '{\"url\":\"release-name-postgresql:5432\",\"max_connections\":5}' --wallet-storage-creds '{\"account\":\"postgres\",\"password\":\"$(POSTGRES_PASSWORD)\",\"admin_account\":\"postgres\",\"admin_password\":\"$(POSTGRES_PASSWORD)\"}' --seed \"$(WALLET_SEED)\" --replace-public-did --genesis-url 'https://indy-test.bosch-digital.de/genesis' --log-level info "
              ],
              "command": [
                "/bin/bash"
              ],
              "env": [
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "WALLET_SEED",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-bpa-acapy",
                      "key": "seed"
                    }
                  }
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "acapy",
              "securityContext": {
                "runAsUser": 10317,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "bcgovimages/aries-cloudagent:py36-1.16-1_0.7.3",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "-c",
                "aca-py start --auto-provision --arg-file acapy-static-args.yml --inbound-transport http '0.0.0.0' 8030 --webhook-url http://release-name-bpa-core:80/log#changeme  --genesis-url 'https://indy-test.bosch-digital.de/genesis' --endpoint https://release-name-bpa-acapy.stage.economyofthings.io --wallet-storage-type 'postgres_storage' --wallet-name mywallet --wallet-key 123 --wallet-storage-config '{\"url\":\"release-name-postgresql:5432\",\"max_connections\":5}' --wallet-storage-creds '{\"account\":\"postgres\",\"password\":\"$(POSTGRES_PASSWORD)\"}' --seed \"$(WALLET_SEED)\" --admin '0.0.0.0' 8031 --admin-insecure-mode --label release-name "
              ],
              "command": [
                "/bin/bash"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8030,
                  "protocol": "TCP"
                },
                {
                  "name": "admin",
                  "containerPort": 8031,
                  "protocol": "TCP"
                }
              ],
              "env": [
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "WALLET_SEED",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-bpa-acapy",
                      "key": "seed"
                    }
                  }
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/status/live",
                  "port": 8031
                },
                "initialDelaySeconds": 45,
                "periodSeconds": 3
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/status/ready",
                  "port": 8031
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/home/indy/acapy-static-args.yml",
                  "subPath": "acapy-static-args.yml",
                  "readOnly": true
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-bpa-acapy",
                "items": [
                  {
                    "key": "acapy-static-args.yaml",
                    "path": "acapy-static-args.yml"
                  }
                ]
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-bpa-core",
      "labels": {
        "helm.sh/chart": "bpa-0.11.2",
        "app.kubernetes.io/name": "release-name-bpa-core",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.10.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "release-name-bpa-core",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "2e4e2c9461a2c8abe7b14e0ebf610b76d2480650e1bb8221f7f475560e9d8982",
            "checksum/configSchemas": "fb1d47fc2809e41a905e7bb2ec555760e4c6f8f19e1e68e70024dd371d26a8c2"
          },
          "labels": {
            "app.kubernetes.io/name": "release-name-bpa-core",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-bpa-core",
          "securityContext": {},
          "containers": [
            {
              "name": "bpa",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "image": "ghcr.io/hyperledger-labs/business-partner-agent-new:0.10.0",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/health/readiness",
                  "port": 8080
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/health",
                  "port": 8080
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 20
              },
              "env": [
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "JAVA_OPTS",
                  "value": "-Dbpa.pg.password=$(POSTGRES_PASSWORD)\n-Dmicronaut.config.files=classpath:application.yml,/home/indy/schemas.yml\n-Dlog4j2.configurationFile=log4j2-prod.xml\n"
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "release-name-bpa-core"
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "config-schemas",
                  "mountPath": "/home/indy/schemas.yml",
                  "subPath": "schemas.yml",
                  "readOnly": true
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "384Mi"
                },
                "requests": {
                  "cpu": "0.2",
                  "memory": "384Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "config-schemas",
              "configMap": {
                "name": "release-name-bpa-core-schemas",
                "items": [
                  {
                    "key": "schemas.yml",
                    "path": "schemas.yml"
                  }
                ]
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.16.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null,
      "namespace": "L7bVjD2xFtPKx"
    },
    "spec": {
      "serviceName": "release-name-postgresql-headless",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "postgresql",
          "app.kubernetes.io/instance": "release-name",
          "role": "primary"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-postgresql",
          "labels": {
            "app.kubernetes.io/name": "postgresql",
            "helm.sh/chart": "postgresql-10.16.2",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "role": "primary",
            "app.kubernetes.io/component": "primary"
          }
        },
        "spec": {
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "postgresql",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "automountServiceAccountToken": false,
          "containers": [
            {
              "name": "release-name-postgresql",
              "image": "docker.io/bitnami/postgresql:12",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "securityContext": {
                "runAsUser": 10166,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432"
                },
                {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql"
                },
                {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgres"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "postgres"
                },
                {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_ENABLE_TLS",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_LOG_HOSTNAME",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_CONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_DISCONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PGAUDIT_LOG_CATALOG",
                  "value": "off"
                },
                {
                  "name": "POSTGRESQL_CLIENT_MIN_MESSAGES",
                  "value": "error"
                },
                {
                  "name": "POSTGRESQL_SHARED_PRELOAD_LIBRARIES",
                  "value": "pgaudit"
                }
              ],
              "ports": [
                {
                  "name": "tcp-postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \"postgres\" -d \"dbname=postgres\" -h 127.0.0.1 -p 5432"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "exec pg_isready -U \"postgres\" -d \"dbname=postgres\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": [
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "dshm",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "data",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-bpa-acapy",
      "labels": {
        "helm.sh/chart": "bpa-0.11.2",
        "app.kubernetes.io/name": "release-name-bpa-acapy",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.10.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "release-name-bpa-acapy.stage.economyofthings.io",
          "http": {
            "paths": [
              {
                "path": "/",
                "pathType": "Prefix",
                "backend": {
                  "service": {
                    "name": "release-name-bpa-acapy",
                    "port": {
                      "number": 8030
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-bpa-core",
      "labels": {
        "helm.sh/chart": "bpa-0.11.2",
        "app.kubernetes.io/name": "release-name-bpa-core",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.10.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "release-name-bpa.stage.economyofthings.io",
          "http": {
            "paths": [
              {
                "path": "/",
                "pathType": "Prefix",
                "backend": {
                  "service": {
                    "name": "release-name-bpa-core",
                    "port": {
                      "number": 80
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-bpa-test-connection",
      "labels": {
        "helm.sh/chart": "bpa-0.11.2",
        "app.kubernetes.io/name": "release-name-bpa-core",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.10.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-bpa-core:80/user/signin"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]