apiVersion: v1
kind: Service
metadata:
  name: release-name
  namespace: HsuSJiw0fJCa
  labels:
    app: release-name
    version: env-name
    repo-name: none
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: base-0.1.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: release-name
    version: env-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name
  namespace: HsuSJiw0fJCa
  annotations:
    gitUrl: https://github.com/urbanindo/99-charts.git
    kubernetes.io/change-cause: CHANGE_CAUSE_MESSAGE
    sidecar.istio.io/inject: "true"
  labels:
    app: release-name
    version: env-name
    repo-name: none
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: base-0.1.0
spec:
  selector:
    matchLabels:
      app: release-name
      version: env-name
  template:
    metadata:
      annotations:
        gitUrl: https://github.com/urbanindo/99-charts.git
        kubernetes.io/change-cause: CHANGE_CAUSE_MESSAGE
        sidecar.istio.io/inject: "true"
      labels:
        app: release-name
        version: env-name
    spec:
      serviceAccountName: default
      securityContext: {}
      containers:
        - name: release-name
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: nginx:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /targetPath
              name: configName
              subPath: fileName
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            limits:
              memory: 1024M
            requests:
              cpu: 40m
              memory: 363Mi
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - configMap:
            items:
              - key: fileName
                path: fileName
            name: configName
          name: configName
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name
  namespace: default
  annotations:
    metric-config.external.prometheus-query.prometheus/prometheus-server: http://prometheus-server.monitoring.svc
    metric-config.external.prometheus-query.prometheus/istio-requests-total: |
      sum(rate(istio_requests_total{reporter="destination", destination_workload=release-name, destination_service_namespace=default}[2m]))
  labels:
    app: release-name
    version: env-name
    repo-name: none
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: base-0.1.0
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: External
      external:
        metric:
          name: prometheus-query
          selector:
            matchLabels:
              query-name: istio-requests-total
        target:
          type: AverageValue
          averageValue: "7"
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: release-name
  namespace: default
spec:
  host: release-name.default.svc.cluster.local
  subsets:
    - labels:
        version: env-name
      name: v1
      trafficPolicy:
        portLevelSettings:
          - port:
              number: 80
            loadBalancer:
              simple: LEAST_CONN
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: release-name
  namespace: default
spec:
  hosts:
    - release-name.default.svc.cluster.local
  http:
    - route:
        - destination:
            host: release-name.default.svc.cluster.local
            subset: v1
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-base-test-connection
  labels:
    app: release-name
    version: env-name
    repo-name: none
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: base-0.1.0
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - 'release-name-base:'
  restartPolicy: Never
