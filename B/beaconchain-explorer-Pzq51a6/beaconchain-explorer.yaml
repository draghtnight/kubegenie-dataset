apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-beaconchain-explorer
  labels:
    helm.sh/chart: beaconchain-explorer-0.1.0
    app.kubernetes.io/name: beaconchain-explorer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: Pzq51a6
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.12.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: Pzq51a6
type: Opaque
data:
  postgresql-password: cG9zdGdyZXM=
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-beaconchain-explorer-env
  labels:
    helm.sh/chart: beaconchain-explorer-0.1.0
    app.kubernetes.io/name: beaconchain-explorer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data: null
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-postgresql-init-scripts
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.12.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: Pzq51a6
data:
  init_01.sql: |
    CREATE DATABASE explorer;
  init_02_db.sh: |
    #!/bin/sh
    curl https://raw.githubusercontent.com/gobitfly/eth2-beaconchain-explorer/master/tables.sql -o /tmp/tables.sql
    PGPASSWORD=postgres psql -U postgres -h 127.0.0.1 -d explorer -f /tmp/tables.sql
    rm /tmp/tables.sql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-beaconchain-explorer
  labels:
    helm.sh/chart: beaconchain-explorer-0.1.0
    app.kubernetes.io/name: beaconchain-explorer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    chain:
      genesisTimestamp: 1573489682
      minGenesisActiveValidatorCount: 16384
      secondsPerSlot: 12
      slotsPerEpoch: 32
    database:
      host: beaconchain-explorer-postgresql
      name: explorer
      password: postgres
      port: "5432"
      user: postgres
    frontend:
      csrfAuthKey: 0123456789abcdef000000000000000000000000000000000000000000000000
      database:
        host: beaconchain-explorer-postgresql
        name: explorer
        password: postgres
        port: "5432"
        user: postgres
      enabled: true
      imprint: templates/imprint.example.html}**
      jwtIssuer: beaconchain.localhost
      jwtSigningSecret: 0123456789abcdef000000000000000000000000000000000000000000000000
      jwtValidityInMinutes: 30
      phase0path: ./phase0.yml
      server:
        host: 0.0.0.0
        port: "3333"
      siteName: Ethereum 2.0 Beacon Chain Block Chain Explorer
      siteSubtitle: Watching all the blocks
    indexer:
      enabled: true
      eth1DepositContractAddress: 0x5cA1e00004366Ac85f492887AAab12d0e6418876
      eth1DepositContractFirstBlock: 2523557
      eth1Endpoint: https://goerli.infura.io/v3/<api-token>
      fullIndexOnStartup: false
      indexMissingEpochsOnStartup: false
      node:
        host: prysm-beacon
        pageSize: 500
        port: "4000"
        type: prysm
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.12.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: Pzq51a6
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.12.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
  namespace: Pzq51a6
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-beaconchain-explorer-headless
  labels:
    helm.sh/chart: beaconchain-explorer-0.1.0
    app.kubernetes.io/name: beaconchain-explorer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 3333
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: beaconchain-explorer
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-beaconchain-explorer
  labels:
    helm.sh/chart: beaconchain-explorer-0.1.0
    app.kubernetes.io/name: beaconchain-explorer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3333
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: beaconchain-explorer
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.12.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
  namespace: Pzq51a6
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.12.3
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      automountServiceAccountToken: false
      containers:
        - name: release-name-postgresql
          image: docker.io/bitnami/postgresql:11.13.0-debian-10-r58
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          securityContext:
            runAsUser: 11407
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: POSTGRESQL_INITSCRIPTS_USERNAME
              value: postgres
            - name: POSTGRESQL_INITSCRIPTS_PASSWORD
              value: postgres
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: explorer
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -d "dbname=explorer" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -d "dbname=explorer" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d/
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: null
      volumes:
        - name: custom-init-scripts
          configMap:
            name: release-name-postgresql-init-scripts
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-beaconchain-explorer
  labels:
    helm.sh/chart: beaconchain-explorer-0.1.0
    app.kubernetes.io/name: beaconchain-explorer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: beaconchain-explorer
      app.kubernetes.io/instance: release-name
  serviceName: release-name-beaconchain-explorer-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: beaconchain-explorer
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: 6948c90a7d785aba619b8ebb26976ef481866563bdbc92c05180f165f758beb0
        checksum/secrets: c71689e38786aac0ad8329fe874b357deba58940627933337b95ed9ffe324791
    spec:
      serviceAccountName: release-name-beaconchain-explorer
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers: null
      containers:
        - name: beaconchain-explorer
          image: gobitfly/eth2-beaconchain-explorer:latest
          imagePullPolicy: IfNotPresent
          command:
            - ./explorer
            - --config
            - /config.yaml
          volumeMounts:
            - name: config
              mountPath: /config.yaml
              subPath: config.yaml
              readOnly: true
          ports:
            - name: http
              containerPort: 3333
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            tcpSocket:
              port: http
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env: null
      nodeSelector: {}
      affinity: {}
      tolerations: []
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: release-name-beaconchain-explorer
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-beaconchain-explorer-test-connection
  labels:
    helm.sh/chart: beaconchain-explorer-0.1.0
    app.kubernetes.io/name: beaconchain-explorer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command:
        - curl
      args:
        - --location
        - --request
        - GET
        - release-name-beaconchain-explorer:3333/
  restartPolicy: Never
