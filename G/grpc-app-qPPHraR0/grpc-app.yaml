apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-envoy-conf
data:
  envoy.yaml: "admin:\n  access_log_path: /tmp/admin_access.log\n  address:\n    socket_address:\n      protocol: TCP\n      address: 127.0.0.1\n      port_value: 8090\nstatic_resources:\n  listeners:\n  - name: bookstore-listener\n    address:\n      socket_address:\n        protocol: TCP \n        address: 0.0.0.0\n        port_value: 8000\n    filter_chains:\n    - filters:\n      - name: envoy.http_connection_manager\n        config:\n          codec_type: auto\n          stat_prefix: ingress_https\n          route_config:\n            name: local_route\n            virtual_hosts:\n            - name: https\n              domains: [\"*\"]\n              routes:\n              - match:\n                  prefix: \"/\"\n                route:\n                  cluster: release-name-bookstore-service\n          http_filters:\n          - name: envoy.filters.http.jwt_authn\n            config:\n              providers:\n                oidc_provider:\n                  issuer: test@gmail.com\n                  # audiences:\n                  #   - bookstore\n                  local_jwks:\n                    http_uri: \n                    filename: /etc/jwt/jwt_key.json\n              rules:\n              - match: { prefix: \"/\" }\n                requires:\n                  provider_name: oidc_provider\n          - name: envoy.filters.http.grpc_web\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb\n          - name: envoy.filters.http.cors\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors\n          - name: envoy.filters.http.router\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n      transport_socket:\n        name: envoy.transport_sockets.tls\n        typed_config:\n          \"@type\": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext\n          common_tls_context:\n            alpn_protocols: \"h2,http/1.1\"\n            tls_certificates:\n              - certificate_chain:\n                  filename: \"/etc/ssl/envoy/tls.crt\"\n                private_key:\n                  filename: \"/etc/ssl/envoy/tls.key\"\n  clusters:\n  - name: release-name-bookstore-service\n    connect_timeout: 0.5s\n    type: STRICT_DNS\n    dns_lookup_family: V4_ONLY\n    http2_protocol_options: {}\n    lb_policy: ROUND_ROBIN\n    # tls_context: {}\n    load_assignment:\n      cluster_name: release-name-bookstore-service\n      endpoints:\n      - lb_endpoints:\n        - endpoint:\n            address:\n              socket_address:\n                address: release-name-bookstore-service\n                port_value: 8080\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jwt-key
data:
  jwt_key.json: |
    {
      "keys": [
        {
          "kty": "RSA",
          "n": "rrwuN5mNNd6y20BSbm-JnqjR6SiQew5qW7E9t9SoyL4prSLJ-MDr0GuF5Zxj5a4EeV5wYDBeB3Xtwcg3ZcQL8k-h19wbLqWmx3Zuag4HZHSqX_MvVLe3oRK4WSLtV9RI0SQHkMFUcB_D1-McO1WYpxTFETyY8_S6yuMPSAY3V9twWz8FjQvRWIb4g6B15PE8NPEECUm5IBCaARtWFsA5DFYBY1QVyMx6AyuGRvY-y3ZMOLu03lKyisNcmfHO2K_qTZpCqk27amozFFbrMB8pln4gz64DL9UfdUFs11vGMwMfpYnVWrsKzU9rEsafbBjfbx_u3Or93XWclTsKpfaUbwXmH2YiErS_4zPgVAmWlhIWVBh02WdiPxTdm-aiufg2Fg8edMlmxA6GwPuYAsGWv9lGgkttJGjTOP6lqY0rX1NxsaAhJkYs8FCeQlk0NbA71Yn1F4tPQ8OmS9FUIHWew2pAMcqqRL9X3mkNfWa7wFXFg3VtnLrvsHayThDTIarM2MiJwaQ5JrfpgEqDrS0CiKnBL94Fppbn_hALsRN6Bie-rkR-o5-BKEw284gaY9S3Mqmt_6shpeRdaWC8g740C1sr9lLwCjYeL7hd_kE1ey6uQcFAZem2LrJy4bh1HtkwXgwgPRNxqhjF_46dBlw3blju9gPF9HPseSoWiR-8UdE",
          "e": "AQAB",
          "alg": "RS256",
          "use": "sig"
        }
      ]
    }
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-bookstore-service
spec:
  selector:
    app: release-name-bookstore-app
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-envoy
spec:
  type: NodePort
  selector:
    app: release-name-envoy
  ports:
    - port: 9080
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-bookstore-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: release-name-bookstore-app
  template:
    metadata:
      labels:
        app: release-name-bookstore-app
    spec:
      containers:
        - name: bookstore-container
          image: bookstore:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-envoy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-envoy
  template:
    metadata:
      labels:
        app: release-name-envoy
    spec:
      containers:
        - name: envoy
          image: envoyproxy/envoy-alpine:v1.16.0
          command:
            - envoy
          args:
            - -l
            - trace
            - -c
            - /etc/envoy/envoy.yaml
          ports:
            - name: https
              containerPort: 8000
          volumeMounts:
            - name: config
              mountPath: /etc/envoy/
            - name: certs
              mountPath: /etc/ssl/envoy/
            - name: jwt
              mountPath: /etc/jwt/
      volumes:
        - name: config
          configMap:
            name: release-name-envoy-conf
        - name: certs
          secret:
            secretName: envoy-certs
        - name: jwt
          configMap:
            name: jwt-key
