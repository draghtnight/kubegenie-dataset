[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "gnocchi-api"
    },
    "spec": {
      "minAvailable": 0,
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "gnocchi",
          "component": "api"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "gnocchi-resources-cleaner",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "gnocchi-metricd",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "gnocchi-statsd",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "gnocchi-api",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "gnocchi-clean",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "gnocchi-db-init-indexer",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "gnocchi-db-init",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "gnocchi-db-sync",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "gnocchi-ks-endpoints",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "gnocchi-ks-service",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "gnocchi-ks-user",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "gnocchi-storage-init",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-test",
      "namespace": "lBQfPdJ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "gnocchi-etc"
    },
    "type": "Opaque",
    "data": {
      "gnocchi.conf": "W0RFRkFVTFRdCmNvb3JkaW5hdGlvbl91cmwgPSBtZW1jYWNoZWQ6Ly9tZW1jYWNoZWQuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbDoxMTIxMQpkZWJ1ZyA9IGZhbHNlClthcGldCmF1dGhfbW9kZSA9IGtleXN0b25lCnBvcnQgPSA4MDQxCltkYXRhYmFzZV0KY29ubmVjdGlvbiA9IG15c3FsK3B5bXlzcWw6Ly9nbm9jY2hpOnBhc3N3b3JkQG1hcmlhZGIuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbDozMzA2L2dub2NjaGkKbWF4X3JldHJpZXMgPSAtMQpbaW5kZXhlcl0KZHJpdmVyID0gcG9zdGdyZXNxbAp1cmwgPSBwb3N0Z3Jlc3FsOi8vZ25vY2NoaTpwYXNzd29yZEBwb3N0Z3Jlc3FsLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWw6NTQzMi9nbm9jY2hpCltrZXlzdG9uZV9hdXRodG9rZW5dCmF1dGhfdHlwZSA9IHBhc3N3b3JkCmF1dGhfdXJpID0gaHR0cDovL2tleXN0b25lLWFwaS5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjUwMDAvdjMKYXV0aF91cmwgPSBodHRwOi8va2V5c3RvbmUtYXBpLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWw6NTAwMC92MwphdXRoX3ZlcnNpb24gPSB2MwptZW1jYWNoZV9zZWNyZXRfa2V5ID0gSW1CRGR1RXJSZWpZZUU0ZmVHUXFQd3o4U0FYNEFMMWRNMzBGUHREUXdjUW1vT1dabklzUFBrMWVwa05SYlFuNQptZW1jYWNoZV9zZWN1cml0eV9zdHJhdGVneSA9IEVOQ1JZUFQKbWVtY2FjaGVkX3NlcnZlcnMgPSBtZW1jYWNoZWQuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbDoxMTIxMQpwYXNzd29yZCA9IHBhc3N3b3JkCnByb2plY3RfZG9tYWluX25hbWUgPSBzZXJ2aWNlCnByb2plY3RfbmFtZSA9IHNlcnZpY2UKcmVnaW9uX25hbWUgPSBSZWdpb25PbmUKdXNlcl9kb21haW5fbmFtZSA9IHNlcnZpY2UKdXNlcm5hbWUgPSBnbm9jY2hpClttZXRyaWNkXQp3b3JrZXJzID0gMQpbc3RhdHNkXQpwb3J0ID0gODEyNQpwcm9qZWN0X2lkID0gZjdhOTRhNzYtZmY1Yi00Y2NkLWFiMTUtMGI5YTgxMjZiYjcxCnJlc291cmNlX2lkID0gZjY2OTgwZTMtM2E1NS00MGQwLWI2ZjctZjg0NjcxODE3MTdiCnVzZXJfaWQgPSAwMDQ2YjE2OC1jODViLTRiYTgtYjA0MS01ZWM2Y2M4MGY5MzEKW3N0b3JhZ2VdCmNlcGhfY29uZmZpbGUgPSAvZXRjL2NlcGgvY2VwaC5jb25mCmNlcGhfa2V5cmluZyA9IC9ldGMvY2VwaC9jZXBoLmNsaWVudC5nbm9jY2hpLmtleXJpbmcKY2VwaF9wb29sID0gZ25vY2NoaS5tZXRyaWNzCmNlcGhfdXNlcm5hbWUgPSBnbm9jY2hpCmRyaXZlciA9IGNlcGgKZmlsZV9iYXNlcGF0aCA9IC92YXIvbGliL2dub2NjaGkKcHJvdmlkZWRfa2V5cmluZyA9IDxubyB2YWx1ZT4KW3Rva2VuXQpwcm92aWRlciA9IHV1aWQK",
      "api-paste.ini": "W2FwcDpnbm9jY2hpdjFdCnBhc3RlLmFwcF9mYWN0b3J5ID0gZ25vY2NoaS5yZXN0LmFwcDphcHBfZmFjdG9yeQpyb290ID0gZ25vY2NoaS5yZXN0LlYxQ29udHJvbGxlcgpbYXBwOmdub2NjaGl2ZXJzaW9uc10KcGFzdGUuYXBwX2ZhY3RvcnkgPSBnbm9jY2hpLnJlc3QuYXBwOmFwcF9mYWN0b3J5CnJvb3QgPSBnbm9jY2hpLnJlc3QuVmVyc2lvbnNDb250cm9sbGVyCltjb21wb3NpdGU6Z25vY2NoaSthdXRoXQovID0gZ25vY2NoaXZlcnNpb25zCi92MSA9IGdub2NjaGl2MSthdXRoCnVzZSA9IGVnZzpQYXN0ZSN1cmxtYXAKW2NvbXBvc2l0ZTpnbm9jY2hpK25vYXV0aF0KLyA9IGdub2NjaGl2ZXJzaW9ucwovdjEgPSBnbm9jY2hpdjErbm9hdXRoCnVzZSA9IGVnZzpQYXN0ZSN1cmxtYXAKW2ZpbHRlcjprZXlzdG9uZV9hdXRodG9rZW5dCm9zbG9fY29uZmlnX3Byb2plY3QgPSBnbm9jY2hpCnBhc3RlLmZpbHRlcl9mYWN0b3J5ID0ga2V5c3RvbmVtaWRkbGV3YXJlLmF1dGhfdG9rZW46ZmlsdGVyX2ZhY3RvcnkKW3BpcGVsaW5lOmdub2NjaGl2MSthdXRoXQpwaXBlbGluZSA9IGtleXN0b25lX2F1dGh0b2tlbiBnbm9jY2hpdjEKW3BpcGVsaW5lOmdub2NjaGl2MStub2F1dGhdCnBpcGVsaW5lID0gZ25vY2NoaXYxCltwaXBlbGluZTptYWluXQpwaXBlbGluZSA9IGdub2NjaGkrYXV0aAo=",
      "policy.json": "eyJhZG1pbl9vcl9jcmVhdG9yIjoicm9sZTphZG1pbiBvciBwcm9qZWN0X2lkOiUoY3JlYXRlZF9ieV9wcm9qZWN0X2lkKXMiLCJjcmVhdGUgYXJjaGl2ZSBwb2xpY3kiOiJyb2xlOmFkbWluIiwiY3JlYXRlIGFyY2hpdmUgcG9saWN5IHJ1bGUiOiJyb2xlOmFkbWluIiwiY3JlYXRlIG1ldHJpYyI6IiIsImNyZWF0ZSByZXNvdXJjZSI6IiIsImNyZWF0ZSByZXNvdXJjZSB0eXBlIjoicm9sZTphZG1pbiIsImRlbGV0ZSBhcmNoaXZlIHBvbGljeSI6InJvbGU6YWRtaW4iLCJkZWxldGUgYXJjaGl2ZSBwb2xpY3kgcnVsZSI6InJvbGU6YWRtaW4iLCJkZWxldGUgbWV0cmljIjoicnVsZTphZG1pbl9vcl9jcmVhdG9yIiwiZGVsZXRlIHJlc291cmNlIjoicnVsZTphZG1pbl9vcl9jcmVhdG9yIiwiZGVsZXRlIHJlc291cmNlIHR5cGUiOiJyb2xlOmFkbWluIiwiZGVsZXRlIHJlc291cmNlcyI6InJ1bGU6YWRtaW5fb3JfY3JlYXRvciIsImdldCBhcmNoaXZlIHBvbGljeSI6IiIsImdldCBhcmNoaXZlIHBvbGljeSBydWxlIjoiIiwiZ2V0IG1lYXN1cmVzIjoicnVsZTphZG1pbl9vcl9jcmVhdG9yIG9yIHJ1bGU6bWV0cmljX293bmVyIiwiZ2V0IG1ldHJpYyI6InJ1bGU6YWRtaW5fb3JfY3JlYXRvciBvciBydWxlOm1ldHJpY19vd25lciIsImdldCByZXNvdXJjZSI6InJ1bGU6YWRtaW5fb3JfY3JlYXRvciBvciBydWxlOnJlc291cmNlX293bmVyIiwiZ2V0IHJlc291cmNlIHR5cGUiOiIiLCJnZXQgc3RhdHVzIjoicm9sZTphZG1pbiIsImxpc3QgYWxsIG1ldHJpYyI6InJvbGU6YWRtaW4iLCJsaXN0IGFyY2hpdmUgcG9saWN5IjoiIiwibGlzdCBhcmNoaXZlIHBvbGljeSBydWxlIjoiIiwibGlzdCBtZXRyaWMiOiIiLCJsaXN0IHJlc291cmNlIjoicnVsZTphZG1pbl9vcl9jcmVhdG9yIG9yIHJ1bGU6cmVzb3VyY2Vfb3duZXIiLCJsaXN0IHJlc291cmNlIHR5cGUiOiIiLCJtZXRyaWNfb3duZXIiOiJwcm9qZWN0X2lkOiUocmVzb3VyY2UucHJvamVjdF9pZClzIiwicG9zdCBtZWFzdXJlcyI6InJ1bGU6YWRtaW5fb3JfY3JlYXRvciIsInJlc291cmNlX293bmVyIjoicHJvamVjdF9pZDolKHByb2plY3RfaWQpcyIsInNlYXJjaCBtZXRyaWMiOiJydWxlOmFkbWluX29yX2NyZWF0b3Igb3IgcnVsZTptZXRyaWNfb3duZXIiLCJzZWFyY2ggcmVzb3VyY2UiOiJydWxlOmFkbWluX29yX2NyZWF0b3Igb3IgcnVsZTpyZXNvdXJjZV9vd25lciIsInVwZGF0ZSBhcmNoaXZlIHBvbGljeSI6InJvbGU6YWRtaW4iLCJ1cGRhdGUgcmVzb3VyY2UiOiJydWxlOmFkbWluX29yX2NyZWF0b3IiLCJ1cGRhdGUgcmVzb3VyY2UgdHlwZSI6InJvbGU6YWRtaW4ifQ==",
      "wsgi-gnocchi.conf": "TGlzdGVuIDAuMC4wLjA6ODA0MQoKU2V0RW52SWYgWC1Gb3J3YXJkZWQtRm9yICJeLipcLi4qXC4uKlwuLioiIGZvcndhcmRlZApDdXN0b21Mb2cgL2Rldi9zdGRvdXQgY29tYmluZWQgZW52PSFmb3J3YXJkZWQKQ3VzdG9tTG9nIC9kZXYvc3Rkb3V0IHByb3h5IGVudj1mb3J3YXJkZWQKCjxWaXJ0dWFsSG9zdCAqOjgwNDE+CiAgICBXU0dJRGFlbW9uUHJvY2VzcyBnbm9jY2hpIHByb2Nlc3Nlcz0xIHRocmVhZHM9MiB1c2VyPWdub2NjaGkgZ3JvdXA9Z25vY2NoaSBkaXNwbGF5LW5hbWU9JXtHUk9VUH0KICAgIFdTR0lQcm9jZXNzR3JvdXAgZ25vY2NoaQogICAgV1NHSVNjcmlwdEFsaWFzIC8gIi92YXIvbGliL2tvbGxhL3ZlbnYvbGliL3B5dGhvbjIuNy9zaXRlLXBhY2thZ2VzL2dub2NjaGkvcmVzdC9hcHAud3NnaSIKICAgIFdTR0lBcHBsaWNhdGlvbkdyb3VwICV7R0xPQkFMfQoKICAgIEVycm9yTG9nIC9kZXYvc3RkZXJyCiAgICBTZXRFbnZJZiBYLUZvcndhcmRlZC1Gb3IgIl4uKlwuLipcLi4qXC4uKiIgZm9yd2FyZGVkCiAgICBDdXN0b21Mb2cgL2Rldi9zdGRvdXQgY29tYmluZWQgZW52PSFmb3J3YXJkZWQKICAgIEN1c3RvbUxvZyAvZGV2L3N0ZG91dCBwcm94eSBlbnY9Zm9yd2FyZGVkCgogICAgPERpcmVjdG9yeSAiL3Zhci9saWIva29sbGEvdmVudi9saWIvcHl0aG9uMi43L3NpdGUtcGFja2FnZXMvZ25vY2NoaS9yZXN0Ij4KICAgICAgICAgIFJlcXVpcmUgYWxsIGdyYW50ZWQKICAgIDwvRGlyZWN0b3J5Pgo8L1ZpcnR1YWxIb3N0Pg=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "gnocchi-db-indexer-admin"
    },
    "type": "Opaque",
    "data": {
      "DB_CONNECTION_INDEXER": "cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBhc3N3b3JkQHBvc3RncmVzcWwuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbDo1NDMyL2dub2NjaGk="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "gnocchi-db-indexer-user"
    },
    "type": "Opaque",
    "data": {
      "DB_CONNECTION_INDEXER": "cG9zdGdyZXNxbDovL2dub2NjaGk6cGFzc3dvcmRAcG9zdGdyZXNxbC5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjU0MzIvZ25vY2NoaQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "gnocchi-db-admin"
    },
    "type": "Opaque",
    "data": {
      "DB_CONNECTION": "bXlzcWwrcHlteXNxbDovL3Jvb3Q6cGFzc3dvcmRAbWFyaWFkYi5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjMzMDYvZ25vY2NoaQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "gnocchi-db-user"
    },
    "type": "Opaque",
    "data": {
      "DB_CONNECTION": "bXlzcWwrcHlteXNxbDovL2dub2NjaGk6cGFzc3dvcmRAbWFyaWFkYi5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjMzMDYvZ25vY2NoaQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "gnocchi-keystone-admin"
    },
    "type": "Opaque",
    "data": {
      "OS_AUTH_URL": "aHR0cDovL2tleXN0b25lLWFwaS5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjUwMDAvdjM=",
      "OS_REGION_NAME": "UmVnaW9uT25l",
      "OS_INTERFACE": "aW50ZXJuYWw=",
      "OS_PROJECT_DOMAIN_NAME": "ZGVmYXVsdA==",
      "OS_PROJECT_NAME": "YWRtaW4=",
      "OS_USER_DOMAIN_NAME": "ZGVmYXVsdA==",
      "OS_USERNAME": "YWRtaW4=",
      "OS_PASSWORD": "cGFzc3dvcmQ=",
      "OS_DEFAULT_DOMAIN": "ZGVmYXVsdA==",
      "OS_AUTH_TYPE": "cGFzc3dvcmQ=",
      "OS_TENANT_NAME": "YWRtaW4="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "gnocchi-keystone-user"
    },
    "type": "Opaque",
    "data": {
      "OS_AUTH_URL": "aHR0cDovL2tleXN0b25lLWFwaS5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjUwMDAvdjM=",
      "OS_REGION_NAME": "UmVnaW9uT25l",
      "OS_INTERFACE": "aW50ZXJuYWw=",
      "OS_PROJECT_DOMAIN_NAME": "c2VydmljZQ==",
      "OS_PROJECT_NAME": "c2VydmljZQ==",
      "OS_USER_DOMAIN_NAME": "c2VydmljZQ==",
      "OS_USERNAME": "Z25vY2NoaQ==",
      "OS_PASSWORD": "cGFzc3dvcmQ=",
      "OS_DEFAULT_DOMAIN": "ZGVmYXVsdA==",
      "OS_AUTH_TYPE": "cGFzc3dvcmQ=",
      "OS_TENANT_NAME": "c2VydmljZQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "gnocchi-bin"
    },
    "data": {
      "storage-init.sh": "#!/bin/bash\n\n\n\nset -x\nSECRET=$(mktemp --suffix .yaml)\nKEYRING=$(mktemp --suffix .keyring)\nfunction cleanup {\n    rm -f ${SECRET} ${KEYRING}\n}\ntrap cleanup EXIT\n\nset -ex\nceph -s\nfunction ensure_pool () {\n  ceph osd pool stats $1 || ceph osd pool create $1 $2\n  local test_version=$(ceph tell osd.* version | egrep -c \"nautilus|mimic|luminous\" | xargs echo)\n  if [[ ${test_version} -gt 0 ]]; then\n    ceph osd pool application enable $1 $3\n  fi\n}\nensure_pool ${RBD_POOL_NAME} ${RBD_POOL_CHUNK_SIZE} \"gnocchi-metrics\"\n\nif USERINFO=$(ceph auth get client.${RBD_POOL_USER}); then\n  echo \"Cephx user client.${RBD_POOL_USER} already exist.\"\n  echo \"Update its cephx caps\"\n  ceph auth caps client.${RBD_POOL_USER} \\\n    mon \"profile r\" \\\n    osd \"profile rwx pool=${RBD_POOL_NAME}\" \\\n    mgr \"allow r\"\n  ceph auth get client.${RBD_POOL_USER} -o ${KEYRING}\nelse\n  ceph auth get-or-create client.${RBD_POOL_USER} \\\n    mon \"profile r\" \\\n    osd \"profile rwx pool=${RBD_POOL_NAME}\" \\\n    mgr \"allow r\" \\\n    -o ${KEYRING}\nfi\n\nENCODED_KEYRING=$(sed -n 's/^[[:blank:]]*key[[:blank:]]\\+=[[:blank:]]\\(.*\\)/\\1/p' ${KEYRING} | base64 -w0)\ncat > ${SECRET} <<EOF\napiVersion: v1\nkind: Secret\nmetadata:\n  name: \"${RBD_POOL_SECRET}\"\ntype: kubernetes.io/rbd\ndata:\n  key: $( echo ${ENCODED_KEYRING} )\nEOF\nkubectl apply --namespace ${NAMESPACE} -f ${SECRET}\n",
      "clean-secrets.sh": "#!/bin/bash\n\n\n\nset -ex\n\nexec kubectl delete secret \\\n  --namespace ${NAMESPACE} \\\n  --ignore-not-found=true \\\n  ${RBD_POOL_SECRET}\n",
      "db-init.sh": "#!/bin/bash\n\n\n\nset -ex\nexport HOME=/tmp\n\npgsql_superuser_cmd () {\n  DB_COMMAND=\"$1\"\n  if [[ ! -z $2 ]]; then\n      EXPORT PGDATABASE=$2\n  fi\n  if [[ ! -z \"${ROOT_DB_PASS}\" ]]; then\n      export PGPASSWORD=\"${ROOT_DB_PASS}\"\n  fi\n  psql \\\n  -h ${DB_FQDN} \\\n  -p ${DB_PORT} \\\n  -U ${ROOT_DB_USER} \\\n  --command=\"${DB_COMMAND}\"\n  unset PGPASSWORD\n}\n\nif [[ ! -v ROOT_DB_CONNECTION ]]; then\n    echo \"environment variable ROOT_DB_CONNECTION not set\"\n    exit 1\nelse\n    echo \"Got DB root connection\"\nfi\n\nif [[ -v OPENSTACK_CONFIG_FILE ]]; then\n    if [[ ! -v OPENSTACK_CONFIG_DB_SECTION ]]; then\n        echo \"Environment variable OPENSTACK_CONFIG_DB_SECTION not set\"\n        exit 1\n    elif [[ ! -v OPENSTACK_CONFIG_DB_KEY ]]; then\n        echo \"Environment variable OPENSTACK_CONFIG_DB_KEY not set\"\n        exit 1\n    fi\n\n    echo \"Using ${OPENSTACK_CONFIG_FILE} as db config source\"\n    echo \"Trying to load db config from ${OPENSTACK_CONFIG_DB_SECTION}:${OPENSTACK_CONFIG_DB_KEY}\"\n\n    DB_CONN=$(awk -v key=$OPENSTACK_CONFIG_DB_KEY \"/^\\[${OPENSTACK_CONFIG_DB_SECTION}\\]/{f=1} f==1&&/^$OPENSTACK_CONFIG_DB_KEY/{print \\$3;exit}\" \"${OPENSTACK_CONFIG_FILE}\")\n\n    echo \"Found DB connection: $DB_CONN\"\nelif [[ -v DB_CONNECTION ]]; then\n    DB_CONN=${DB_CONNECTION}\n    echo \"Got config from DB_CONNECTION env var\"\nelse\n    echo \"Could not get dbconfig\"\n    exit 1\nfi\n\nROOT_DB_PROTO=\"$(echo $ROOT_DB_CONNECTION | grep '//' | sed -e's,^\\(.*://\\).*,\\1,g')\"\nROOT_DB_URL=\"$(echo $ROOT_DB_CONNECTION | sed -e s,$ROOT_DB_PROTO,,g)\"\nROOT_DB_USER=\"$(echo $ROOT_DB_URL | grep @ | cut -d@ -f1 | cut -d: -f1)\"\nROOT_DB_PASS=\"$(echo $ROOT_DB_URL | grep @ | cut -d@ -f1 | cut -d: -f2)\"\n\nDB_FQDN=\"$(echo $ROOT_DB_URL | sed -e s,$ROOT_DB_USER:$ROOT_DB_PASS@,,g | cut -d/ -f1 | cut -d: -f1)\"\nDB_PORT=\"$(echo $ROOT_DB_URL | sed -e s,$ROOT_DB_USER:$ROOT_DB_PASS@,,g | cut -d/ -f1 | cut -d: -f2)\"\nDB_NAME=\"$(echo $ROOT_DB_URL | sed -e s,$ROOT_DB_USER:$ROOT_DB_PASS@,,g | cut -d/ -f2 | cut -d? -f1)\"\n\nDB_PROTO=\"$(echo $DB_CONN | grep '//' | sed -e's,^\\(.*://\\).*,\\1,g')\"\nDB_URL=\"$(echo $DB_CONN | sed -e s,$DB_PROTO,,g)\"\nDB_USER=\"$( echo $DB_URL | grep @ | cut -d@ -f1 | cut -d: -f1)\"\nDB_PASS=\"$( echo $DB_URL | grep @ | cut -d@ -f1 | cut -d: -f2)\"\n\n#create db\npgsql_superuser_cmd \"SELECT 1 FROM pg_database WHERE datname = '$DB_NAME'\" | grep -q 1 || pgsql_superuser_cmd \"CREATE DATABASE $DB_NAME\"\n\n#create db user\npgsql_superuser_cmd \"SELECT * FROM pg_roles WHERE rolname = '$DB_USER';\" | tail -n +3 | head -n -2 | grep -q 1 || \\\n    pgsql_superuser_cmd \"CREATE ROLE ${DB_USER} LOGIN PASSWORD '$DB_PASS';\" && pgsql_superuser_cmd \"ALTER USER ${DB_USER} WITH SUPERUSER\"\n\n#give permissions to user\npgsql_superuser_cmd \"GRANT ALL PRIVILEGES ON DATABASE $DB_NAME to $DB_USER;\"\n",
      "db-init.py": "#!/usr/bin/env python\n\n# Creates db and user for an OpenStack Service:\n# Set ROOT_DB_CONNECTION and DB_CONNECTION environment variables to contain\n# SQLAlchemy strings for the root connection to the database and the one you\n# wish the service to use. Alternatively, you can use an ini formatted config\n# at the location specified by OPENSTACK_CONFIG_FILE, and extract the string\n# from the key OPENSTACK_CONFIG_DB_KEY, in the section specified by\n# OPENSTACK_CONFIG_DB_SECTION.\n\nimport os\nimport sys\ntry:\n    import ConfigParser\n    PARSER_OPTS = {}\nexcept ImportError:\n    import configparser as ConfigParser\n    PARSER_OPTS = {\"strict\": False}\nimport logging\nfrom sqlalchemy import create_engine\n\n# Create logger, console handler and formatter\nlogger = logging.getLogger('OpenStack-Helm DB Init')\nlogger.setLevel(logging.DEBUG)\nch = logging.StreamHandler()\nch.setLevel(logging.DEBUG)\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n\n# Set the formatter and add the handler\nch.setFormatter(formatter)\nlogger.addHandler(ch)\n\n\n# Get the connection string for the service db root user\nif \"ROOT_DB_CONNECTION\" in os.environ:\n    db_connection = os.environ['ROOT_DB_CONNECTION']\n    logger.info('Got DB root connection')\nelse:\n    logger.critical('environment variable ROOT_DB_CONNECTION not set')\n    sys.exit(1)\n\nmysql_x509 = os.getenv('MARIADB_X509', \"\")\nssl_args = {}\nif mysql_x509:\n    ssl_args = {'ssl': {'ca': '/etc/mysql/certs/ca.crt',\n                'key': '/etc/mysql/certs/tls.key',\n                'cert': '/etc/mysql/certs/tls.crt'}}\n\n# Get the connection string for the service db\nif \"OPENSTACK_CONFIG_FILE\" in os.environ:\n    os_conf = os.environ['OPENSTACK_CONFIG_FILE']\n    if \"OPENSTACK_CONFIG_DB_SECTION\" in os.environ:\n        os_conf_section = os.environ['OPENSTACK_CONFIG_DB_SECTION']\n    else:\n        logger.critical('environment variable OPENSTACK_CONFIG_DB_SECTION not set')\n        sys.exit(1)\n    if \"OPENSTACK_CONFIG_DB_KEY\" in os.environ:\n        os_conf_key = os.environ['OPENSTACK_CONFIG_DB_KEY']\n    else:\n        logger.critical('environment variable OPENSTACK_CONFIG_DB_KEY not set')\n        sys.exit(1)\n    try:\n        config = ConfigParser.RawConfigParser(**PARSER_OPTS)\n        logger.info(\"Using {0} as db config source\".format(os_conf))\n        config.read(os_conf)\n        logger.info(\"Trying to load db config from {0}:{1}\".format(\n            os_conf_section, os_conf_key))\n        user_db_conn = config.get(os_conf_section, os_conf_key)\n        logger.info(\"Got config from {0}\".format(os_conf))\n    except:\n        logger.critical(\"Tried to load config from {0} but failed.\".format(os_conf))\n        raise\nelif \"DB_CONNECTION\" in os.environ:\n    user_db_conn = os.environ['DB_CONNECTION']\n    logger.info('Got config from DB_CONNECTION env var')\nelse:\n    logger.critical('Could not get db config, either from config file or env var')\n    sys.exit(1)\n\n# Root DB engine\ntry:\n    root_engine_full = create_engine(db_connection)\n    root_user = root_engine_full.url.username\n    root_password = root_engine_full.url.password\n    drivername = root_engine_full.url.drivername\n    host = root_engine_full.url.host\n    port = root_engine_full.url.port\n    root_engine_url = ''.join([drivername, '://', root_user, ':', root_password, '@', host, ':', str (port)])\n    root_engine = create_engine(root_engine_url, connect_args=ssl_args)\n    connection = root_engine.connect()\n    connection.close()\n    logger.info(\"Tested connection to DB @ {0}:{1} as {2}\".format(\n        host, port, root_user))\nexcept:\n    logger.critical('Could not connect to database as root user')\n    raise\n\n# User DB engine\ntry:\n    user_engine = create_engine(user_db_conn, connect_args=ssl_args)\n    # Get our user data out of the user_engine\n    database = user_engine.url.database\n    user = user_engine.url.username\n    password = user_engine.url.password\n    logger.info('Got user db config')\nexcept:\n    logger.critical('Could not get user database config')\n    raise\n\n# Create DB\ntry:\n    root_engine.execute(\"CREATE DATABASE IF NOT EXISTS {0}\".format(database))\n    logger.info(\"Created database {0}\".format(database))\nexcept:\n    logger.critical(\"Could not create database {0}\".format(database))\n    raise\n\n# Create DB User\ntry:\n    root_engine.execute(\n        \"GRANT ALL ON `{0}`.* TO \\'{1}\\'@\\'%%\\' IDENTIFIED BY \\'{2}\\' {3}\".format(\n            database, user, password, mysql_x509))\n    logger.info(\"Created user {0} for {1}\".format(user, database))\nexcept:\n    logger.critical(\"Could not create user {0} for {1}\".format(user, database))\n    raise\n\n# Test connection\ntry:\n    connection = user_engine.connect()\n    connection.close()\n    logger.info(\"Tested connection to DB @ {0}:{1}/{2} as {3}\".format(\n        host, port, database, user))\nexcept:\n    logger.critical('Could not connect to database as user')\n    raise\n\nlogger.info('Finished DB Management')\n",
      "db-sync.sh": "#!/bin/bash\n\n\n\nset -ex\n\nexec gnocchi-upgrade\n",
      "gnocchi-api.sh": "#!/bin/bash\n\n\n\nset -ex\nCOMMAND=\"${@:-start}\"\n\nfunction start () {\n  if [ -f /etc/apache2/envvars ]; then\n    # Loading Apache2 ENV variables\n    source /etc/apache2/envvars\n  fi\n  exec apache2 -DFOREGROUND\n}\n\nfunction stop () {\n  kill -TERM 1\n}\n\n$COMMAND\n",
      "gnocchi-metricd.sh": "#!/bin/bash\n\n\n\nset -x\nexec gnocchi-metricd \\\n      --config-file /etc/gnocchi/gnocchi.conf\n",
      "gnocchi-statsd.sh": "#!/bin/bash\n\n\n\nset -x\nexec gnocchi-statsd \\\n      --config-file /etc/gnocchi/gnocchi.conf\n",
      "gnocchi-resources-cleaner.sh": "\n\nset -ex\n\necho \"Purging the deleted resources with its associated metrics which have lived more than ${DELETED_RESOURCES_TTL}\"\ngnocchi resource batch delete \"ended_at < '-${DELETED_RESOURCES_TTL}'\"\n\nexit 0\n",
      "ks-service.sh": "#!/bin/bash\n\n# Copyright 2017 Pete Birley\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -ex\n\n# Service boilerplate description\nOS_SERVICE_DESC=\"${OS_REGION_NAME}: ${OS_SERVICE_NAME} (${OS_SERVICE_TYPE}) service\"\n\n# Get Service ID if it exists\nunset OS_SERVICE_ID\n\n# FIXME - There seems to be an issue once in a while where the\n# openstack service list fails and encounters an error message such as:\n#   Unable to establish connection to\n#   https://keystone-api.openstack.svc.cluster.local:5000/v3/auth/tokens:\n#   ('Connection aborted.', OSError(\"(104, 'ECONNRESET')\",))\n# During an upgrade scenario, this would cause the OS_SERVICE_ID to be blank\n# and it would attempt to create a new service when it was not needed.\n# This duplciate service would sometimes be used by other services such as\n# Horizon and would give an 'Invalid Service Catalog' error.\n# This loop allows for a 'retry' of the openstack service list in an\n# attempt to get the service list as expected if it does ecounter an error.\n# This loop and recheck can be reverted once the underlying issue is addressed.\n\n# If OS_SERVICE_ID is blank then wait a few seconds to give it\n# additional time and try again\nfor i in $(seq 3)\ndo\n  OS_SERVICE_ID=$( openstack service list -f csv --quote none | \\\n                   grep \",${OS_SERVICE_NAME},${OS_SERVICE_TYPE}$\" | \\\n                   sed -e \"s/,${OS_SERVICE_NAME},${OS_SERVICE_TYPE}//g\" )\n\n  # If the service was found, go ahead and exit successfully.\n  if [[ -n \"${OS_SERVICE_ID}\" ]]; then\n    exit 0\n  fi\n\n  sleep 2\ndone\n\n# If we've reached this point and a Service ID was not found,\n# then create the service\nOS_SERVICE_ID=$(openstack service create -f value -c id \\\n                --name=\"${OS_SERVICE_NAME}\" \\\n                --description \"${OS_SERVICE_DESC}\" \\\n                --enable \\\n                \"${OS_SERVICE_TYPE}\")\n",
      "ks-endpoints.sh": "#!/bin/bash\n\n# Copyright 2017 Pete Birley\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -ex\n\n# Get Service ID\nOS_SERVICE_ID=$( openstack service list -f csv --quote none | \\\n                  grep \",${OS_SERVICE_NAME},${OS_SERVICE_TYPE}$\" | \\\n                    sed -e \"s/,${OS_SERVICE_NAME},${OS_SERVICE_TYPE}//g\" )\n\n# Get Endpoint ID if it exists\nOS_ENDPOINT_ID=$( openstack endpoint list  -f csv --quote none | \\\n                  grep \"^[a-z0-9]*,${OS_REGION_NAME},${OS_SERVICE_NAME},${OS_SERVICE_TYPE},True,${OS_SVC_ENDPOINT},\" | \\\n                  awk -F ',' '{ print $1 }' )\n\n# Making sure only a single endpoint exists for a service within a region\nif [ \"$(echo $OS_ENDPOINT_ID | wc -w)\" -gt \"1\" ]; then\n  echo \"More than one endpoint found, cleaning up\"\n  for ENDPOINT_ID in $OS_ENDPOINT_ID; do\n    openstack endpoint delete ${ENDPOINT_ID}\n  done\n  unset OS_ENDPOINT_ID\nfi\n\n# Determine if Endpoint needs updated\nif [[ ${OS_ENDPOINT_ID} ]]; then\n  OS_ENDPOINT_URL_CURRENT=$(openstack endpoint show ${OS_ENDPOINT_ID} -f value -c url)\n  if [ \"${OS_ENDPOINT_URL_CURRENT}\" == \"${OS_SERVICE_ENDPOINT}\" ]; then\n    echo \"Endpoints Match: no action required\"\n    OS_ENDPOINT_UPDATE=\"False\"\n  else\n    echo \"Endpoints Dont Match: removing existing entries\"\n    openstack endpoint delete ${OS_ENDPOINT_ID}\n    OS_ENDPOINT_UPDATE=\"True\"\n  fi\nelse\n  OS_ENDPOINT_UPDATE=\"True\"\nfi\n\n# Update Endpoint if required\nif [[ \"${OS_ENDPOINT_UPDATE}\" == \"True\" ]]; then\n  OS_ENDPOINT_ID=$( openstack endpoint create -f value -c id \\\n    --region=\"${OS_REGION_NAME}\" \\\n    \"${OS_SERVICE_ID}\" \\\n    ${OS_SVC_ENDPOINT} \\\n    \"${OS_SERVICE_ENDPOINT}\" )\nfi\n\n# Display the Endpoint\nopenstack endpoint show ${OS_ENDPOINT_ID}\n",
      "ks-user.sh": "#!/bin/bash\n\n# Copyright 2017 Pete Birley\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -ex\n\nshopt -s nocasematch\n\nif [[ \"${SERVICE_OS_PROJECT_DOMAIN_NAME}\" == \"Default\" ]]\nthen\n  PROJECT_DOMAIN_ID=\"default\"\nelse\n  # Manage project domain\n  PROJECT_DOMAIN_ID=$(openstack domain create --or-show --enable -f value -c id \\\n    --description=\"Domain for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_PROJECT_DOMAIN_NAME}\" \\\n    \"${SERVICE_OS_PROJECT_DOMAIN_NAME}\")\nfi\n\nif [[ \"${SERVICE_OS_USER_DOMAIN_NAME}\" == \"Default\" ]]\nthen\n  USER_DOMAIN_ID=\"default\"\nelse\n  # Manage user domain\n  USER_DOMAIN_ID=$(openstack domain create --or-show --enable -f value -c id \\\n    --description=\"Domain for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_USER_DOMAIN_NAME}\" \\\n    \"${SERVICE_OS_USER_DOMAIN_NAME}\")\nfi\n\nshopt -u nocasematch\n\n# Manage user project\nUSER_PROJECT_DESC=\"Service Project for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_PROJECT_DOMAIN_NAME}\"\nUSER_PROJECT_ID=$(openstack project create --or-show --enable -f value -c id \\\n    --domain=\"${PROJECT_DOMAIN_ID}\" \\\n    --description=\"${USER_PROJECT_DESC}\" \\\n    \"${SERVICE_OS_PROJECT_NAME}\");\n\n# Manage user\nUSER_DESC=\"Service User for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_USER_DOMAIN_NAME}/${SERVICE_OS_SERVICE_NAME}\"\nUSER_ID=$(openstack user create --or-show --enable -f value -c id \\\n    --domain=\"${USER_DOMAIN_ID}\" \\\n    --project-domain=\"${PROJECT_DOMAIN_ID}\" \\\n    --project=\"${USER_PROJECT_ID}\" \\\n    --description=\"${USER_DESC}\" \\\n    \"${SERVICE_OS_USERNAME}\");\n\n# Manage user password (we do this in a seperate step to ensure the password is updated if required)\nset +x\necho \"Setting user password via: openstack user set --password=xxxxxxx ${USER_ID}\"\nopenstack user set --password=\"${SERVICE_OS_PASSWORD}\" \"${USER_ID}\"\nset -x\n\nfunction ks_assign_user_role () {\n  if [[ \"$SERVICE_OS_ROLE\" == \"admin\" ]]\n  then\n    USER_ROLE_ID=\"$SERVICE_OS_ROLE\"\n  else\n    USER_ROLE_ID=$(openstack role create --or-show -f value -c id \"${SERVICE_OS_ROLE}\");\n  fi\n\n  # Manage user role assignment\n  openstack role add \\\n      --user=\"${USER_ID}\" \\\n      --user-domain=\"${USER_DOMAIN_ID}\" \\\n      --project-domain=\"${PROJECT_DOMAIN_ID}\" \\\n      --project=\"${USER_PROJECT_ID}\" \\\n      \"${USER_ROLE_ID}\"\n}\n\n# Manage user service role\nIFS=','\nfor SERVICE_OS_ROLE in ${SERVICE_OS_ROLES}; do\n  ks_assign_user_role\ndone\n\n# Manage user member role\n: ${MEMBER_OS_ROLE:=\"member\"}\nexport USER_ROLE_ID=$(openstack role create --or-show -f value -c id \\\n    \"${MEMBER_OS_ROLE}\");\nks_assign_user_role\n",
      "ks-domain-user.sh": "#!/bin/bash\n\n# Copyright 2017 Pete Birley\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -ex\n\n# Manage domain\nSERVICE_OS_DOMAIN_ID=$(openstack domain create --or-show --enable -f value -c id \\\n    --description=\"Service Domain for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_DOMAIN_NAME}\" \\\n    \"${SERVICE_OS_DOMAIN_NAME}\")\n\n# Display domain\nopenstack domain show \"${SERVICE_OS_DOMAIN_ID}\"\n\n# Manage user\nSERVICE_OS_USERID=$(openstack user create --or-show --enable -f value -c id \\\n    --domain=\"${SERVICE_OS_DOMAIN_ID}\" \\\n    --description \"Service User for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_DOMAIN_NAME}\" \\\n    --password=\"${SERVICE_OS_PASSWORD}\" \\\n    \"${SERVICE_OS_USERNAME}\")\n\n# Manage user password (we do this to ensure the password is updated if required)\nopenstack user set --password=\"${SERVICE_OS_PASSWORD}\" \"${SERVICE_OS_USERID}\"\n\n# Display user\nopenstack user show \"${SERVICE_OS_USERID}\"\n\n# Manage role\nSERVICE_OS_ROLE_ID=$(openstack role show -f value -c id \\\n    \"${SERVICE_OS_ROLE}\" || openstack role create -f value -c id \\\n    \"${SERVICE_OS_ROLE}\" )\n\n# Manage user role assignment\nopenstack role add \\\n          --domain=\"${SERVICE_OS_DOMAIN_ID}\" \\\n          --user=\"${SERVICE_OS_USERID}\" \\\n          --user-domain=\"${SERVICE_OS_DOMAIN_ID}\" \\\n          \"${SERVICE_OS_ROLE_ID}\"\n\n# Display user role assignment\nopenstack role assignment list \\\n          --role=\"${SERVICE_OS_ROLE_ID}\" \\\n          --user-domain=\"${SERVICE_OS_DOMAIN_ID}\" \\\n          --user=\"${SERVICE_OS_USERID}\"\n",
      "ceph-keyring.sh": "#!/bin/bash\n\n\n\nset -ex\nexport HOME=/tmp\n\ncat <<EOF > /etc/ceph/ceph.client.gnocchi.keyring\n\n[client.gnocchi]\n    key = $(cat /tmp/client-keyring)\nEOF\n\nexit 0\n",
      "ceph-admin-keyring.sh": "#!/bin/bash\n\n\n\nset -ex\nexport HOME=/tmp\n\ncat <<EOF > /etc/ceph/ceph.client.admin.keyring\n[client.admin]\n    key = $(cat /tmp/client-keyring)\nEOF\n\nexit 0\n",
      "gnocchi-test.sh": "#!/bin/bash\n\n\n\nset -ex\nexport HOME=/tmp\n\necho \"Test: list archive policies\"\ngnocchi archive-policy list\n\necho \"Test: create metric\"\ngnocchi metric create --archive-policy-name low\nMETRIC_UUID=$(gnocchi metric list -c id -f value | head -1)\nsleep 5\n\necho \"Test: show metric\"\ngnocchi metric show ${METRIC_UUID}\n\nsleep 5\n\necho \"Test: add measures\"\ngnocchi measures add -m 2017-06-27T12:00:00@31 \\\n  -m 2017-06-27T12:03:27@20 \\\n  -m 2017-06-27T12:06:51@41 \\\n  ${METRIC_UUID}\n\nsleep 15\n\necho \"Test: show measures\"\ngnocchi measures show ${METRIC_UUID}\ngnocchi measures show --aggregation min ${METRIC_UUID}\n\necho \"Test: delete metric\"\ngnocchi metric delete ${METRIC_UUID}\n\nRESOURCE_UUID=b9438359-6a7a-4af2-abb6-f3033da988a3\n\necho \"Test: create resource type\"\ngnocchi resource-type create --attribute name:string --attribute host:string test\n\necho \"Test: list resource types\"\ngnocchi resource-type list\n\necho \"Test: create resource\"\ngnocchi resource create --attribute name:test --attribute host:testnode1 --create-metric cpu:medium --create-metric memory:low --type test ${RESOURCE_UUID}\n\necho \"Test: show resource history\"\ngnocchi resource history --format json --details ${RESOURCE_UUID}\necho \"Test: delete resource\"\ngnocchi resource delete ${RESOURCE_UUID}\necho \"Test: delete resource type\"\ngnocchi resource-type delete test\n\nexit 0\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-gnocchi-resources-cleaner",
      "namespace": "lBQfPdJ"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-gnocchi-metricd",
      "namespace": "lBQfPdJ"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-gnocchi-statsd",
      "namespace": "lBQfPdJ"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-gnocchi-api",
      "namespace": "lBQfPdJ"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "gnocchi-clean"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "delete"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-gnocchi-db-init-indexer",
      "namespace": "lBQfPdJ"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-gnocchi-db-init",
      "namespace": "lBQfPdJ"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-gnocchi-db-sync",
      "namespace": "lBQfPdJ"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-gnocchi-ks-endpoints",
      "namespace": "lBQfPdJ"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-gnocchi-ks-service",
      "namespace": "lBQfPdJ"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-gnocchi-ks-user",
      "namespace": "lBQfPdJ"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "gnocchi-storage-init"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "create",
          "update",
          "patch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-release-name-test",
      "namespace": "lBQfPdJ"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-gnocchi-resources-cleaner",
      "namespace": "lBQfPdJ"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-gnocchi-resources-cleaner"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "gnocchi-resources-cleaner",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-gnocchi-metricd",
      "namespace": "lBQfPdJ"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-gnocchi-metricd"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "gnocchi-metricd",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-gnocchi-statsd",
      "namespace": "lBQfPdJ"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-gnocchi-statsd"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "gnocchi-statsd",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-gnocchi-api",
      "namespace": "lBQfPdJ"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-gnocchi-api"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "gnocchi-api",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "gnocchi-clean"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "gnocchi-clean"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "gnocchi-clean",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-gnocchi-db-init-indexer",
      "namespace": "lBQfPdJ"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-gnocchi-db-init-indexer"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "gnocchi-db-init-indexer",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-gnocchi-db-init",
      "namespace": "lBQfPdJ"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-gnocchi-db-init"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "gnocchi-db-init",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-gnocchi-db-sync",
      "namespace": "lBQfPdJ"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-gnocchi-db-sync"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "gnocchi-db-sync",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-gnocchi-ks-endpoints",
      "namespace": "lBQfPdJ"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-gnocchi-ks-endpoints"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "gnocchi-ks-endpoints",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-gnocchi-ks-service",
      "namespace": "lBQfPdJ"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-gnocchi-ks-service"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "gnocchi-ks-service",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-gnocchi-ks-user",
      "namespace": "lBQfPdJ"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-gnocchi-ks-user"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "gnocchi-ks-user",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "gnocchi-storage-init"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "gnocchi-storage-init"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "gnocchi-storage-init",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-release-name-test",
      "namespace": "lBQfPdJ"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-release-name-test"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-test",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "gnocchi-api"
    },
    "spec": {
      "ports": [
        {
          "name": "gn-api",
          "port": 8041
        }
      ],
      "selector": {
        "release_group": "release-name",
        "application": "gnocchi",
        "component": "api"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "gnocchi"
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 80
        },
        {
          "name": "https",
          "port": 443
        }
      ],
      "selector": {
        "app": "ingress-api"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "gnocchi-statsd"
    },
    "spec": {
      "ports": [
        {
          "name": "gn-stats",
          "port": 8125
        }
      ],
      "selector": {
        "release_group": "release-name",
        "application": "gnocchi",
        "component": "statsd"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "gnocchi-metricd",
      "labels": {
        "release_group": "release-name",
        "application": "gnocchi",
        "component": "metricd"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "gnocchi",
          "component": "metricd"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "gnocchi",
            "component": "metricd"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "19346d04e2867e7e51dd94fdadbf578d346e1132995e741ef58bd57dcf0487bb",
            "configmap-etc-hash": "ba7e45ff56356e1faacd653550c99a26500edb12239cb2c28dda25d576b5fae8"
          }
        },
        "spec": {
          "serviceAccountName": "gnocchi-metricd",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:postgresql,default:gnocchi-api"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "gnocchi-storage-init,gnocchi-db-sync,gnocchi-ks-user,gnocchi-ks-service,gnocchi-ks-endpoints"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": null
            },
            {
              "name": "ceph-keyring-placement",
              "image": "quay.io/attcomdev/ubuntu-source-gnocchi-api:3.0.3",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/tmp/ceph-keyring.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "etcceph",
                  "mountPath": "/etc/ceph"
                },
                {
                  "name": "gnocchi-bin",
                  "mountPath": "/tmp/ceph-keyring.sh",
                  "subPath": "ceph-keyring.sh",
                  "readOnly": true
                },
                {
                  "name": "ceph-keyring",
                  "mountPath": "/tmp/client-keyring",
                  "subPath": "key",
                  "readOnly": true
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "gnocchi-metricd",
              "image": "quay.io/attcomdev/ubuntu-source-gnocchi-metricd:3.0.3",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/tmp/gnocchi-metricd.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "pod-etc-gnocchi",
                  "mountPath": "/etc/gnocchi"
                },
                {
                  "name": "gnocchi-etc",
                  "mountPath": "/etc/gnocchi/gnocchi.conf",
                  "subPath": "gnocchi.conf",
                  "readOnly": true
                },
                {
                  "name": "gnocchi-etc",
                  "mountPath": "/etc/gnocchi/policy.json",
                  "subPath": "policy.json",
                  "readOnly": true
                },
                {
                  "name": "gnocchi-bin",
                  "mountPath": "/tmp/gnocchi-metricd.sh",
                  "subPath": "gnocchi-metricd.sh",
                  "readOnly": true
                },
                {
                  "name": "etcceph",
                  "mountPath": "/etc/ceph"
                },
                {
                  "name": "ceph-etc",
                  "mountPath": "/etc/ceph/ceph.conf",
                  "subPath": "ceph.conf",
                  "readOnly": true
                },
                {
                  "name": "ceph-keyring",
                  "mountPath": "/tmp/client-keyring",
                  "subPath": "key",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "pod-etc-gnocchi",
              "emptyDir": {}
            },
            {
              "name": "gnocchi-etc",
              "secret": {
                "secretName": "gnocchi-etc",
                "defaultMode": 292
              }
            },
            {
              "name": "gnocchi-bin",
              "configMap": {
                "name": "gnocchi-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "etcceph",
              "emptyDir": {}
            },
            {
              "name": "ceph-etc",
              "configMap": {
                "name": "ceph-etc"
              }
            },
            {
              "name": "ceph-keyring",
              "secret": {
                "secretName": "gnocchi-rbd-keyring"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "gnocchi-statsd",
      "labels": {
        "release_group": "release-name",
        "application": "gnocchi",
        "component": "metricd"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "gnocchi",
          "component": "metricd"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "gnocchi",
            "component": "metricd"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "79c80b3469bf612c155fc9fa10b8dad59d134d5a8a9887218a5d0734df619053",
            "configmap-etc-hash": "ba7e45ff56356e1faacd653550c99a26500edb12239cb2c28dda25d576b5fae8"
          }
        },
        "spec": {
          "serviceAccountName": "gnocchi-statsd",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:postgresql,default:gnocchi-api"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "gnocchi-storage-init,gnocchi-db-sync,gnocchi-ks-user,gnocchi-ks-service,gnocchi-ks-endpoints"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": null
            },
            {
              "name": "ceph-keyring-placement",
              "image": "quay.io/attcomdev/ubuntu-source-gnocchi-api:3.0.3",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/tmp/ceph-keyring.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "etcceph",
                  "mountPath": "/etc/ceph"
                },
                {
                  "name": "gnocchi-bin",
                  "mountPath": "/tmp/ceph-keyring.sh",
                  "subPath": "ceph-keyring.sh",
                  "readOnly": true
                },
                {
                  "name": "ceph-keyring",
                  "mountPath": "/tmp/client-keyring",
                  "subPath": "key",
                  "readOnly": true
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "gnocchi-statsd",
              "image": "quay.io/attcomdev/ubuntu-source-gnocchi-statsd:3.0.3",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/tmp/gnocchi-statsd.sh"
              ],
              "ports": [
                {
                  "name": "gn-stats",
                  "containerPort": 8125
                }
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "pod-etc-gnocchi",
                  "mountPath": "/etc/gnocchi"
                },
                {
                  "name": "gnocchi-etc",
                  "mountPath": "/etc/gnocchi/gnocchi.conf",
                  "subPath": "gnocchi.conf",
                  "readOnly": true
                },
                {
                  "name": "gnocchi-etc",
                  "mountPath": "/etc/gnocchi/api-paste.ini",
                  "subPath": "api-paste.ini",
                  "readOnly": true
                },
                {
                  "name": "gnocchi-etc",
                  "mountPath": "/etc/gnocchi/policy.json",
                  "subPath": "policy.json",
                  "readOnly": true
                },
                {
                  "name": "gnocchi-bin",
                  "mountPath": "/tmp/gnocchi-statsd.sh",
                  "subPath": "gnocchi-statsd.sh",
                  "readOnly": true
                },
                {
                  "name": "etcceph",
                  "mountPath": "/etc/ceph"
                },
                {
                  "name": "ceph-etc",
                  "mountPath": "/etc/ceph/ceph.conf",
                  "subPath": "ceph.conf",
                  "readOnly": true
                },
                {
                  "name": "ceph-keyring",
                  "mountPath": "/tmp/client-keyring",
                  "subPath": "key",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "pod-etc-gnocchi",
              "emptyDir": {}
            },
            {
              "name": "gnocchi-etc",
              "secret": {
                "secretName": "gnocchi-etc",
                "defaultMode": 292
              }
            },
            {
              "name": "gnocchi-bin",
              "configMap": {
                "name": "gnocchi-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "etcceph",
              "emptyDir": {}
            },
            {
              "name": "ceph-etc",
              "configMap": {
                "name": "ceph-etc"
              }
            },
            {
              "name": "ceph-keyring",
              "secret": {
                "secretName": "gnocchi-rbd-keyring"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "gnocchi-api",
      "labels": {
        "release_group": "release-name",
        "application": "gnocchi",
        "component": "api"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "gnocchi",
          "component": "api"
        }
      },
      "revisionHistoryLimit": 3,
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": 3
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "gnocchi",
            "component": "api"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "b82725c96dd49ea20de073bd9e1593ce578176c8766364448c2f2448241d8eb9",
            "configmap-etc-hash": "ba7e45ff56356e1faacd653550c99a26500edb12239cb2c28dda25d576b5fae8"
          }
        },
        "spec": {
          "serviceAccountName": "gnocchi-api",
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "release_group",
                          "operator": "In",
                          "values": [
                            "release-name"
                          ]
                        },
                        {
                          "key": "application",
                          "operator": "In",
                          "values": [
                            "gnocchi"
                          ]
                        },
                        {
                          "key": "component",
                          "operator": "In",
                          "values": [
                            "api"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 10
                }
              ]
            }
          },
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "terminationGracePeriodSeconds": 30,
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:keystone-api,default:mariadb"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "gnocchi-storage-init,gnocchi-db-sync,gnocchi-ks-endpoints,gnocchi-ks-service,gnocchi-ks-user"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": null
            },
            {
              "name": "ceph-keyring-placement",
              "image": "quay.io/attcomdev/ubuntu-source-gnocchi-api:3.0.3",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/tmp/ceph-keyring.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "etcceph",
                  "mountPath": "/etc/ceph"
                },
                {
                  "name": "gnocchi-bin",
                  "mountPath": "/tmp/ceph-keyring.sh",
                  "subPath": "ceph-keyring.sh",
                  "readOnly": true
                },
                {
                  "name": "ceph-keyring",
                  "mountPath": "/tmp/client-keyring",
                  "subPath": "key",
                  "readOnly": true
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "gnocchi-api",
              "image": "quay.io/attcomdev/ubuntu-source-gnocchi-api:3.0.3",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/tmp/gnocchi-api.sh",
                "start"
              ],
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/tmp/gnocchi-api.sh",
                      "stop"
                    ]
                  }
                }
              },
              "ports": [
                {
                  "name": "gn-api",
                  "containerPort": 8041
                }
              ],
              "readinessProbe": {
                "tcpSocket": {
                  "port": 8041
                }
              },
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "pod-etc-gnocchi",
                  "mountPath": "/etc/gnocchi"
                },
                {
                  "name": "gnocchi-etc",
                  "mountPath": "/etc/gnocchi/gnocchi.conf",
                  "subPath": "gnocchi.conf",
                  "readOnly": true
                },
                {
                  "name": "gnocchi-etc",
                  "mountPath": "/etc/gnocchi/api-paste.ini",
                  "subPath": "api-paste.ini",
                  "readOnly": true
                },
                {
                  "name": "gnocchi-etc",
                  "mountPath": "/etc/gnocchi/policy.json",
                  "subPath": "policy.json",
                  "readOnly": true
                },
                {
                  "name": "gnocchi-etc",
                  "mountPath": "/etc/apache2/conf-enabled/wsgi-gnocchi.conf",
                  "subPath": "wsgi-gnocchi.conf",
                  "readOnly": true
                },
                {
                  "name": "etcceph",
                  "mountPath": "/etc/ceph"
                },
                {
                  "name": "ceph-etc",
                  "mountPath": "/etc/ceph/ceph.conf",
                  "subPath": "ceph.conf",
                  "readOnly": true
                },
                {
                  "name": "ceph-keyring",
                  "mountPath": "/tmp/client-keyring",
                  "subPath": "key",
                  "readOnly": true
                },
                {
                  "name": "gnocchi-bin",
                  "mountPath": "/tmp/gnocchi-api.sh",
                  "subPath": "gnocchi-api.sh",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "pod-etc-gnocchi",
              "emptyDir": {}
            },
            {
              "name": "gnocchi-etc",
              "secret": {
                "secretName": "gnocchi-etc",
                "defaultMode": 292
              }
            },
            {
              "name": "gnocchi-bin",
              "configMap": {
                "name": "gnocchi-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "etcceph",
              "emptyDir": {}
            },
            {
              "name": "ceph-etc",
              "configMap": {
                "name": "ceph-etc"
              }
            },
            {
              "name": "ceph-keyring",
              "secret": {
                "secretName": "gnocchi-rbd-keyring"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "gnocchi-db-init-indexer"
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "gnocchi",
            "component": "db-init-indexer"
          }
        },
        "spec": {
          "serviceAccountName": "gnocchi-db-init-indexer",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:postgresql"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "gnocchi-db-init-indexer",
              "image": "docker.io/postgres:9.5",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "ROOT_DB_CONNECTION",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-db-indexer-admin",
                      "key": "DB_CONNECTION_INDEXER"
                    }
                  }
                },
                {
                  "name": "OPENSTACK_CONFIG_FILE",
                  "value": "/etc/gnocchi/gnocchi.conf"
                },
                {
                  "name": "OPENSTACK_CONFIG_DB_SECTION",
                  "value": "indexer"
                },
                {
                  "name": "OPENSTACK_CONFIG_DB_KEY",
                  "value": "url"
                }
              ],
              "command": [
                "/tmp/db-init.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "gnocchi-etc",
                  "mountPath": "/etc/gnocchi/gnocchi.conf",
                  "subPath": "gnocchi.conf"
                },
                {
                  "name": "pod-etc-gnocchi",
                  "mountPath": "/etc/gnocchi"
                },
                {
                  "name": "gnocchi-bin",
                  "mountPath": "/tmp/db-init.sh",
                  "subPath": "db-init.sh",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "gnocchi-etc",
              "secret": {
                "secretName": "gnocchi-etc",
                "defaultMode": 292
              }
            },
            {
              "name": "pod-etc-gnocchi",
              "emptyDir": {}
            },
            {
              "name": "gnocchi-bin",
              "configMap": {
                "name": "gnocchi-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "gnocchi-db-init",
      "annotations": {
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "spec": {
      "backoffLimit": 1000,
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "gnocchi",
            "component": "db-init"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": ""
          }
        },
        "spec": {
          "serviceAccountName": "gnocchi-db-init",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:mariadb"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "gnocchi-db-init-0",
              "image": "quay.io/attcomdev/ubuntu-source-gnocchi-api:3.0.3",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "ROOT_DB_CONNECTION",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-db-admin",
                      "key": "DB_CONNECTION"
                    }
                  }
                },
                {
                  "name": "OPENSTACK_CONFIG_FILE",
                  "value": "/etc/gnocchi/gnocchi.conf"
                },
                {
                  "name": "OPENSTACK_CONFIG_DB_SECTION",
                  "value": "database"
                },
                {
                  "name": "OPENSTACK_CONFIG_DB_KEY",
                  "value": "connection"
                }
              ],
              "command": [
                "/tmp/db-init.py"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "db-init-sh",
                  "mountPath": "/tmp/db-init.py",
                  "subPath": "db-init.py",
                  "readOnly": true
                },
                {
                  "name": "etc-service",
                  "mountPath": "/etc/gnocchi"
                },
                {
                  "name": "db-init-conf",
                  "mountPath": "/etc/gnocchi/gnocchi.conf",
                  "subPath": "gnocchi.conf",
                  "readOnly": true
                },
                {
                  "name": "db-init-conf",
                  "mountPath": "/etc/gnocchi/logging.conf",
                  "subPath": "logging.conf",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "db-init-sh",
              "configMap": {
                "name": "gnocchi-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "etc-service",
              "emptyDir": {}
            },
            {
              "name": "db-init-conf",
              "secret": {
                "secretName": "gnocchi-etc",
                "defaultMode": 292
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "gnocchi-db-sync"
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "gnocchi",
            "component": "db-sync"
          }
        },
        "spec": {
          "serviceAccountName": "gnocchi-db-sync",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:postgresql"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "gnocchi-storage-init,gnocchi-db-init,gnocchi-db-init-indexer"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            },
            {
              "name": "ceph-keyring-placement",
              "image": "quay.io/attcomdev/ubuntu-source-gnocchi-api:3.0.3",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/tmp/ceph-keyring.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "etcceph",
                  "mountPath": "/etc/ceph"
                },
                {
                  "name": "gnocchi-bin",
                  "mountPath": "/tmp/ceph-keyring.sh",
                  "subPath": "ceph-keyring.sh",
                  "readOnly": true
                },
                {
                  "name": "ceph-keyring",
                  "mountPath": "/tmp/client-keyring",
                  "subPath": "key",
                  "readOnly": true
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "gnocchi-db-sync",
              "image": "quay.io/attcomdev/ubuntu-source-gnocchi-api:3.0.3",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/tmp/db-sync.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "gnocchi-etc",
                  "mountPath": "/etc/gnocchi/gnocchi.conf",
                  "subPath": "gnocchi.conf"
                },
                {
                  "name": "gnocchi-bin",
                  "mountPath": "/tmp/db-sync.sh",
                  "subPath": "db-sync.sh"
                },
                {
                  "name": "etcceph",
                  "mountPath": "/etc/ceph"
                },
                {
                  "name": "ceph-etc",
                  "mountPath": "/etc/ceph/ceph.conf",
                  "subPath": "ceph.conf",
                  "readOnly": true
                },
                {
                  "name": "ceph-keyring",
                  "mountPath": "/tmp/client-keyring",
                  "subPath": "key",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "gnocchi-etc",
              "secret": {
                "secretName": "gnocchi-etc",
                "defaultMode": 292
              }
            },
            {
              "name": "gnocchi-bin",
              "configMap": {
                "name": "gnocchi-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "etcceph",
              "emptyDir": {}
            },
            {
              "name": "ceph-etc",
              "configMap": {
                "name": "ceph-etc"
              }
            },
            {
              "name": "ceph-keyring",
              "secret": {
                "secretName": "gnocchi-rbd-keyring"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "gnocchi-ks-endpoints",
      "annotations": {
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "spec": {
      "backoffLimit": 1000,
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "gnocchi",
            "component": "ks-endpoints"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": ""
          }
        },
        "spec": {
          "serviceAccountName": "gnocchi-ks-endpoints",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:keystone-api"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "gnocchi-ks-service"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "metric-ks-endpoints-admin",
              "image": "docker.io/openstackhelm/heat:newton-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/tmp/ks-endpoints.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "ks-endpoints-sh",
                  "mountPath": "/tmp/ks-endpoints.sh",
                  "subPath": "ks-endpoints.sh",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "OS_IDENTITY_API_VERSION",
                  "value": "3"
                },
                {
                  "name": "OS_AUTH_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_AUTH_URL"
                    }
                  }
                },
                {
                  "name": "OS_REGION_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_REGION_NAME"
                    }
                  }
                },
                {
                  "name": "OS_INTERFACE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_ENDPOINT_TYPE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PROJECT_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PROJECT_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USER_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_USER_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_USERNAME"
                    }
                  }
                },
                {
                  "name": "OS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "OS_DEFAULT_DOMAIN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_DEFAULT_DOMAIN"
                    }
                  }
                },
                {
                  "name": "OS_SVC_ENDPOINT",
                  "value": "admin"
                },
                {
                  "name": "OS_SERVICE_NAME",
                  "value": "gnocchi"
                },
                {
                  "name": "OS_SERVICE_TYPE",
                  "value": "metric"
                },
                {
                  "name": "OS_SERVICE_ENDPOINT",
                  "value": "http://gnocchi-api.default.svc.cluster.local:8041/"
                }
              ]
            },
            {
              "name": "metric-ks-endpoints-internal",
              "image": "docker.io/openstackhelm/heat:newton-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/tmp/ks-endpoints.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "ks-endpoints-sh",
                  "mountPath": "/tmp/ks-endpoints.sh",
                  "subPath": "ks-endpoints.sh",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "OS_IDENTITY_API_VERSION",
                  "value": "3"
                },
                {
                  "name": "OS_AUTH_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_AUTH_URL"
                    }
                  }
                },
                {
                  "name": "OS_REGION_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_REGION_NAME"
                    }
                  }
                },
                {
                  "name": "OS_INTERFACE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_ENDPOINT_TYPE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PROJECT_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PROJECT_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USER_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_USER_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_USERNAME"
                    }
                  }
                },
                {
                  "name": "OS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "OS_DEFAULT_DOMAIN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_DEFAULT_DOMAIN"
                    }
                  }
                },
                {
                  "name": "OS_SVC_ENDPOINT",
                  "value": "internal"
                },
                {
                  "name": "OS_SERVICE_NAME",
                  "value": "gnocchi"
                },
                {
                  "name": "OS_SERVICE_TYPE",
                  "value": "metric"
                },
                {
                  "name": "OS_SERVICE_ENDPOINT",
                  "value": "http://gnocchi-api.default.svc.cluster.local:8041/"
                }
              ]
            },
            {
              "name": "metric-ks-endpoints-public",
              "image": "docker.io/openstackhelm/heat:newton-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/tmp/ks-endpoints.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "ks-endpoints-sh",
                  "mountPath": "/tmp/ks-endpoints.sh",
                  "subPath": "ks-endpoints.sh",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "OS_IDENTITY_API_VERSION",
                  "value": "3"
                },
                {
                  "name": "OS_AUTH_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_AUTH_URL"
                    }
                  }
                },
                {
                  "name": "OS_REGION_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_REGION_NAME"
                    }
                  }
                },
                {
                  "name": "OS_INTERFACE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_ENDPOINT_TYPE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PROJECT_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PROJECT_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USER_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_USER_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_USERNAME"
                    }
                  }
                },
                {
                  "name": "OS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "OS_DEFAULT_DOMAIN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_DEFAULT_DOMAIN"
                    }
                  }
                },
                {
                  "name": "OS_SVC_ENDPOINT",
                  "value": "public"
                },
                {
                  "name": "OS_SERVICE_NAME",
                  "value": "gnocchi"
                },
                {
                  "name": "OS_SERVICE_TYPE",
                  "value": "metric"
                },
                {
                  "name": "OS_SERVICE_ENDPOINT",
                  "value": "http://gnocchi.default.svc.cluster.local/"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "ks-endpoints-sh",
              "configMap": {
                "name": "gnocchi-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "gnocchi-ks-service",
      "annotations": {
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "spec": {
      "backoffLimit": 1000,
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "gnocchi",
            "component": "ks-service"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": ""
          }
        },
        "spec": {
          "serviceAccountName": "gnocchi-ks-service",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:keystone-api"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "metric-ks-service-registration",
              "image": "docker.io/openstackhelm/heat:newton-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/tmp/ks-service.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "ks-service-sh",
                  "mountPath": "/tmp/ks-service.sh",
                  "subPath": "ks-service.sh",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "OS_IDENTITY_API_VERSION",
                  "value": "3"
                },
                {
                  "name": "OS_AUTH_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_AUTH_URL"
                    }
                  }
                },
                {
                  "name": "OS_REGION_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_REGION_NAME"
                    }
                  }
                },
                {
                  "name": "OS_INTERFACE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_ENDPOINT_TYPE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PROJECT_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PROJECT_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USER_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_USER_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_USERNAME"
                    }
                  }
                },
                {
                  "name": "OS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "OS_DEFAULT_DOMAIN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_DEFAULT_DOMAIN"
                    }
                  }
                },
                {
                  "name": "OS_SERVICE_NAME",
                  "value": "gnocchi"
                },
                {
                  "name": "OS_SERVICE_TYPE",
                  "value": "metric"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "ks-service-sh",
              "configMap": {
                "name": "gnocchi-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "gnocchi-ks-user",
      "annotations": {
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "spec": {
      "backoffLimit": 1000,
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "gnocchi",
            "component": "ks-user"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": ""
          }
        },
        "spec": {
          "serviceAccountName": "gnocchi-ks-user",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:keystone-api"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "ks-user",
              "image": "docker.io/openstackhelm/heat:newton-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/tmp/ks-user.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "ks-user-sh",
                  "mountPath": "/tmp/ks-user.sh",
                  "subPath": "ks-user.sh",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "OS_IDENTITY_API_VERSION",
                  "value": "3"
                },
                {
                  "name": "OS_AUTH_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_AUTH_URL"
                    }
                  }
                },
                {
                  "name": "OS_REGION_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_REGION_NAME"
                    }
                  }
                },
                {
                  "name": "OS_INTERFACE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_ENDPOINT_TYPE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PROJECT_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PROJECT_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USER_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_USER_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_USERNAME"
                    }
                  }
                },
                {
                  "name": "OS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "OS_DEFAULT_DOMAIN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-admin",
                      "key": "OS_DEFAULT_DOMAIN"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_SERVICE_NAME",
                  "value": "gnocchi"
                },
                {
                  "name": "SERVICE_OS_REGION_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-user",
                      "key": "OS_REGION_NAME"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_PROJECT_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-user",
                      "key": "OS_PROJECT_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_PROJECT_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-user",
                      "key": "OS_PROJECT_NAME"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_USER_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-user",
                      "key": "OS_USER_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-user",
                      "key": "OS_USERNAME"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "gnocchi-keystone-user",
                      "key": "OS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_ROLES",
                  "value": "admin"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "ks-user-sh",
              "configMap": {
                "name": "gnocchi-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "gnocchi-storage-init"
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "gnocchi",
            "component": "storage-init"
          }
        },
        "spec": {
          "serviceAccountName": "gnocchi-storage-init",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            },
            {
              "name": "ceph-keyring-placement",
              "image": "quay.io/attcomdev/ubuntu-source-gnocchi-api:3.0.3",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 1000
              },
              "command": [
                "/tmp/ceph-admin-keyring.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "etcceph",
                  "mountPath": "/etc/ceph"
                },
                {
                  "name": "gnocchi-bin",
                  "mountPath": "/tmp/ceph-admin-keyring.sh",
                  "subPath": "ceph-admin-keyring.sh",
                  "readOnly": true
                },
                {
                  "name": "ceph-keyring",
                  "mountPath": "/tmp/client-keyring",
                  "subPath": "key",
                  "readOnly": true
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "gnocchi-storage-init",
              "image": "docker.io/openstackhelm/ceph-config-helper:ubuntu_bionic-20191216",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "RBD_POOL_NAME",
                  "value": "gnocchi.metrics"
                },
                {
                  "name": "RBD_POOL_USER",
                  "value": "gnocchi"
                },
                {
                  "name": "RBD_POOL_CHUNK_SIZE",
                  "value": "8"
                },
                {
                  "name": "RBD_POOL_SECRET",
                  "value": "gnocchi-rbd-keyring"
                }
              ],
              "command": [
                "/tmp/storage-init.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "gnocchi-bin",
                  "mountPath": "/tmp/storage-init.sh",
                  "subPath": "storage-init.sh",
                  "readOnly": true
                },
                {
                  "name": "etcceph",
                  "mountPath": "/etc/ceph"
                },
                {
                  "name": "ceph-etc",
                  "mountPath": "/etc/ceph/ceph.conf",
                  "subPath": "ceph.conf",
                  "readOnly": true
                },
                {
                  "name": "ceph-keyring",
                  "mountPath": "/tmp/client-keyring",
                  "subPath": "key",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "gnocchi-bin",
              "configMap": {
                "name": "gnocchi-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "etcceph",
              "emptyDir": {}
            },
            {
              "name": "ceph-etc",
              "configMap": {
                "name": "ceph-etc",
                "defaultMode": 292
              }
            },
            {
              "name": "ceph-keyring",
              "secret": {
                "secretName": "pvc-ceph-client-key"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1beta1",
    "kind": "CronJob",
    "metadata": {
      "name": "gnocchi-resources-cleaner",
      "annotations": {
        "openstackhelm.openstack.org/release_uuid": ""
      },
      "labels": {
        "release_group": "release-name",
        "application": "gnocchi",
        "component": "resources-cleaner"
      }
    },
    "spec": {
      "schedule": "0 */24 * * *",
      "successfulJobsHistoryLimit": 3,
      "failedJobsHistoryLimit": 1,
      "concurrencyPolicy": "Forbid",
      "jobTemplate": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "gnocchi",
            "component": "resources-cleaner"
          }
        },
        "spec": {
          "template": {
            "metadata": {
              "labels": {
                "release_group": "release-name",
                "application": "gnocchi",
                "component": "resources-cleaner"
              }
            },
            "spec": {
              "serviceAccountName": "gnocchi-resources-cleaner",
              "restartPolicy": "OnFailure",
              "nodeSelector": {
                "openstack-control-plane": "enabled"
              },
              "initContainers": [
                {
                  "name": "init",
                  "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
                  "imagePullPolicy": "IfNotPresent",
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "readOnlyRootFilesystem": true,
                    "runAsUser": 65534
                  },
                  "env": [
                    {
                      "name": "POD_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.name"
                        }
                      }
                    },
                    {
                      "name": "NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    },
                    {
                      "name": "INTERFACE_NAME",
                      "value": "eth0"
                    },
                    {
                      "name": "PATH",
                      "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                    },
                    {
                      "name": "DEPENDENCY_SERVICE",
                      "value": "default:mariadb,default:keystone-api,default:gnocchi-api"
                    },
                    {
                      "name": "DEPENDENCY_JOBS",
                      "value": "gnocchi-storage-init,gnocchi-db-sync,gnocchi-ks-user,gnocchi-ks-endpoints"
                    },
                    {
                      "name": "DEPENDENCY_DAEMONSET",
                      "value": ""
                    },
                    {
                      "name": "DEPENDENCY_CONTAINER",
                      "value": ""
                    },
                    {
                      "name": "DEPENDENCY_POD_JSON",
                      "value": ""
                    },
                    {
                      "name": "DEPENDENCY_CUSTOM_RESOURCE",
                      "value": ""
                    }
                  ],
                  "command": [
                    "kubernetes-entrypoint"
                  ],
                  "volumeMounts": null
                }
              ],
              "containers": [
                {
                  "name": "gnocchi-resources-cleaner",
                  "image": "quay.io/attcomdev/ubuntu-source-gnocchi-base:3.0.3",
                  "imagePullPolicy": "IfNotPresent",
                  "env": [
                    {
                      "name": "OS_IDENTITY_API_VERSION",
                      "value": "3"
                    },
                    {
                      "name": "OS_AUTH_URL",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "gnocchi-keystone-admin",
                          "key": "OS_AUTH_URL"
                        }
                      }
                    },
                    {
                      "name": "OS_REGION_NAME",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "gnocchi-keystone-admin",
                          "key": "OS_REGION_NAME"
                        }
                      }
                    },
                    {
                      "name": "OS_INTERFACE",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "gnocchi-keystone-admin",
                          "key": "OS_INTERFACE"
                        }
                      }
                    },
                    {
                      "name": "OS_ENDPOINT_TYPE",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "gnocchi-keystone-admin",
                          "key": "OS_INTERFACE"
                        }
                      }
                    },
                    {
                      "name": "OS_PROJECT_DOMAIN_NAME",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "gnocchi-keystone-admin",
                          "key": "OS_PROJECT_DOMAIN_NAME"
                        }
                      }
                    },
                    {
                      "name": "OS_PROJECT_NAME",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "gnocchi-keystone-admin",
                          "key": "OS_PROJECT_NAME"
                        }
                      }
                    },
                    {
                      "name": "OS_USER_DOMAIN_NAME",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "gnocchi-keystone-admin",
                          "key": "OS_USER_DOMAIN_NAME"
                        }
                      }
                    },
                    {
                      "name": "OS_USERNAME",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "gnocchi-keystone-admin",
                          "key": "OS_USERNAME"
                        }
                      }
                    },
                    {
                      "name": "OS_PASSWORD",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "gnocchi-keystone-admin",
                          "key": "OS_PASSWORD"
                        }
                      }
                    },
                    {
                      "name": "OS_DEFAULT_DOMAIN",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "gnocchi-keystone-admin",
                          "key": "OS_DEFAULT_DOMAIN"
                        }
                      }
                    },
                    {
                      "name": "OS_AUTH_TYPE",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "gnocchi-keystone-admin",
                          "key": "OS_AUTH_TYPE"
                        }
                      }
                    },
                    {
                      "name": "OS_TENANT_NAME",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "gnocchi-keystone-admin",
                          "key": "OS_TENANT_NAME"
                        }
                      }
                    },
                    {
                      "name": "DELETED_RESOURCES_TTL",
                      "value": "1day"
                    }
                  ],
                  "command": [
                    "/tmp/gnocchi-resources-cleaner.sh"
                  ],
                  "volumeMounts": [
                    {
                      "name": "pod-tmp",
                      "mountPath": "/tmp"
                    },
                    {
                      "name": "gnocchi-bin",
                      "mountPath": "/tmp/gnocchi-resources-cleaner.sh",
                      "subPath": "gnocchi-resources-cleaner.sh",
                      "readOnly": true
                    },
                    {
                      "name": "pod-etc-gnocchi",
                      "mountPath": "/etc/gnocchi"
                    },
                    {
                      "name": "gnocchi-etc",
                      "mountPath": "/etc/gnocchi/gnocchi.conf",
                      "subPath": "gnocchi.conf",
                      "readOnly": true
                    }
                  ]
                }
              ],
              "volumes": [
                {
                  "name": "pod-tmp",
                  "emptyDir": {}
                },
                {
                  "name": "pod-etc-gnocchi",
                  "emptyDir": {}
                },
                {
                  "name": "gnocchi-etc",
                  "secret": {
                    "secretName": "gnocchi-etc",
                    "defaultMode": 292
                  }
                },
                {
                  "name": "gnocchi-bin",
                  "configMap": {
                    "name": "gnocchi-bin",
                    "defaultMode": 365
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "gnocchi",
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "nginx.ingress.kubernetes.io/rewrite-target": "/"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "gnocchi",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "gnocchi-api",
                  "servicePort": "gn-api"
                }
              }
            ]
          }
        },
        {
          "host": "gnocchi.default",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "gnocchi-api",
                  "servicePort": "gn-api"
                }
              }
            ]
          }
        },
        {
          "host": "gnocchi.default.svc.cluster.local",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "gnocchi-api",
                  "servicePort": "gn-api"
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-test",
      "labels": {
        "release_group": "release-name",
        "application": "gnocchi",
        "component": "test"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "nodeSelector": {
        "openstack-control-plane": "enabled"
      },
      "serviceAccountName": "release-name-test",
      "restartPolicy": "Never",
      "initContainers": [
        {
          "name": "init",
          "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
          "imagePullPolicy": "IfNotPresent",
          "securityContext": {
            "allowPrivilegeEscalation": false,
            "readOnlyRootFilesystem": true,
            "runAsUser": 65534
          },
          "env": [
            {
              "name": "POD_NAME",
              "valueFrom": {
                "fieldRef": {
                  "apiVersion": "v1",
                  "fieldPath": "metadata.name"
                }
              }
            },
            {
              "name": "NAMESPACE",
              "valueFrom": {
                "fieldRef": {
                  "apiVersion": "v1",
                  "fieldPath": "metadata.namespace"
                }
              }
            },
            {
              "name": "INTERFACE_NAME",
              "value": "eth0"
            },
            {
              "name": "PATH",
              "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
            },
            {
              "name": "DEPENDENCY_SERVICE",
              "value": "default:keystone-api,default:postgresql,default:gnocchi-api"
            },
            {
              "name": "DEPENDENCY_JOBS",
              "value": "gnocchi-storage-init,gnocchi-db-sync"
            },
            {
              "name": "DEPENDENCY_DAEMONSET",
              "value": ""
            },
            {
              "name": "DEPENDENCY_CONTAINER",
              "value": ""
            },
            {
              "name": "DEPENDENCY_POD_JSON",
              "value": ""
            },
            {
              "name": "DEPENDENCY_CUSTOM_RESOURCE",
              "value": ""
            }
          ],
          "command": [
            "kubernetes-entrypoint"
          ],
          "volumeMounts": []
        }
      ],
      "containers": [
        {
          "name": "release-name-helm-tests",
          "image": "quay.io/attcomdev/ubuntu-source-gnocchi-api:3.0.3",
          "imagePullPolicy": "IfNotPresent",
          "env": [
            {
              "name": "OS_IDENTITY_API_VERSION",
              "value": "3"
            },
            {
              "name": "OS_AUTH_URL",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "gnocchi-keystone-admin",
                  "key": "OS_AUTH_URL"
                }
              }
            },
            {
              "name": "OS_REGION_NAME",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "gnocchi-keystone-admin",
                  "key": "OS_REGION_NAME"
                }
              }
            },
            {
              "name": "OS_INTERFACE",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "gnocchi-keystone-admin",
                  "key": "OS_INTERFACE"
                }
              }
            },
            {
              "name": "OS_ENDPOINT_TYPE",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "gnocchi-keystone-admin",
                  "key": "OS_INTERFACE"
                }
              }
            },
            {
              "name": "OS_PROJECT_DOMAIN_NAME",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "gnocchi-keystone-admin",
                  "key": "OS_PROJECT_DOMAIN_NAME"
                }
              }
            },
            {
              "name": "OS_PROJECT_NAME",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "gnocchi-keystone-admin",
                  "key": "OS_PROJECT_NAME"
                }
              }
            },
            {
              "name": "OS_USER_DOMAIN_NAME",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "gnocchi-keystone-admin",
                  "key": "OS_USER_DOMAIN_NAME"
                }
              }
            },
            {
              "name": "OS_USERNAME",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "gnocchi-keystone-admin",
                  "key": "OS_USERNAME"
                }
              }
            },
            {
              "name": "OS_PASSWORD",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "gnocchi-keystone-admin",
                  "key": "OS_PASSWORD"
                }
              }
            },
            {
              "name": "OS_DEFAULT_DOMAIN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "gnocchi-keystone-admin",
                  "key": "OS_DEFAULT_DOMAIN"
                }
              }
            },
            {
              "name": "OS_AUTH_TYPE",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "gnocchi-keystone-admin",
                  "key": "OS_AUTH_TYPE"
                }
              }
            },
            {
              "name": "OS_TENANT_NAME",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "gnocchi-keystone-admin",
                  "key": "OS_TENANT_NAME"
                }
              }
            }
          ],
          "command": [
            "/tmp/gnocchi-test.sh"
          ],
          "volumeMounts": [
            {
              "name": "pod-tmp",
              "mountPath": "/tmp"
            },
            {
              "name": "gnocchi-etc",
              "mountPath": "/etc/gnocchi/gnocchi.conf",
              "subPath": "gnocchi.conf",
              "readOnly": true
            },
            {
              "name": "gnocchi-bin",
              "mountPath": "/tmp/gnocchi-test.sh",
              "subPath": "gnocchi-test.sh",
              "readOnly": true
            }
          ]
        }
      ],
      "volumes": [
        {
          "name": "pod-tmp",
          "emptyDir": {}
        },
        {
          "name": "gnocchi-etc",
          "secret": {
            "secretName": "gnocchi-etc",
            "defaultMode": 292
          }
        },
        {
          "name": "gnocchi-bin",
          "configMap": {
            "name": "gnocchi-bin",
            "defaultMode": 365
          }
        }
      ]
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "gnocchi-clean",
      "annotations": {
        "helm.sh/hook": "pre-delete",
        "helm.sh/hook-delete-policy": "hook-succeeded"
      }
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "gnocchi",
            "component": "clean"
          }
        },
        "spec": {
          "serviceAccountName": "gnocchi-clean",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "gnocchi-rbd-secret-clean",
              "image": "docker.io/openstackhelm/ceph-config-helper:ubuntu_bionic-20191216",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "RBD_POOL_SECRET",
                  "value": "gnocchi-rbd-keyring"
                }
              ],
              "command": [
                "/tmp/clean-secrets.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "gnocchi-bin",
                  "mountPath": "/tmp/clean-secrets.sh",
                  "subPath": "clean-secrets.sh",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "gnocchi-bin",
              "configMap": {
                "name": "gnocchi-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  }
]