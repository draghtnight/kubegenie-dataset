apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-grafana
  namespace: E7Uin7rp
  labels:
    app.kubernetes.io/name: grafana
    helm.sh/chart: grafana-7.9.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: release-name-grafana-admin
automountServiceAccountToken: false
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-grafana-admin
  namespace: E7Uin7rp
  labels:
    app.kubernetes.io/name: grafana
    helm.sh/chart: grafana-7.9.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: grafana
type: Opaque
data:
  GF_SECURITY_ADMIN_PASSWORD: cXJzR0JicHhjMQ==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-grafana-envvars
  namespace: E7Uin7rp
  labels:
    app.kubernetes.io/name: grafana
    helm.sh/chart: grafana-7.9.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: grafana
data:
  GF_SECURITY_ADMIN_USER: admin
  GF_INSTALL_PLUGINS: ""
  GF_PATHS_PLUGINS: /opt/bitnami/grafana/data/plugins
  GF_AUTH_LDAP_ENABLED: "false"
  GF_AUTH_LDAP_CONFIG_FILE: /opt/bitnami/grafana/conf/ldap.toml
  GF_AUTH_LDAP_ALLOW_SIGN_UP: "false"
  GF_PATHS_PROVISIONING: /opt/bitnami/grafana/conf/provisioning
  GF_PATHS_CONFIG: /opt/bitnami/grafana/conf/grafana.ini
  GF_PATHS_DATA: /opt/bitnami/grafana/data
  GF_PATHS_LOGS: /opt/bitnami/grafana/logs
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    app.kubernetes.io/name: grafana
    helm.sh/chart: grafana-7.9.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: grafana
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-grafana
  namespace: E7Uin7rp
  labels:
    app.kubernetes.io/name: grafana
    helm.sh/chart: grafana-7.9.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: grafana
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - port: 3000
      targetPort: dashboard
      protocol: TCP
      name: http
      nodePort: null
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-grafana
  namespace: E7Uin7rp
  labels:
    app.kubernetes.io/name: grafana
    helm.sh/chart: grafana-7.9.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        helm.sh/chart: grafana-7.9.7
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: grafana
      annotations:
        checksum/secret: 1086edca15be8614b3250557f7c9904d1714735c9fec7f1a4c77c0e4db193f36
        checksum/config: 0dc1402779f22603bdc61b0b31a5d80dc7abf86899a7b5ff50d03659d83fcf7b
        checksum/dashboard-provider: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      serviceAccountName: release-name-grafana
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: grafana
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: grafana
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      initContainers: null
      containers:
        - name: grafana
          image: docker.io/bitnami/grafana:8.5.5-debian-11-r2
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 10056
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          envFrom:
            - configMapRef:
                name: release-name-grafana-envvars
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana-admin
                  key: GF_SECURITY_ADMIN_PASSWORD
          volumeMounts:
            - name: data
              mountPath: /opt/bitnami/grafana/data
          ports:
            - name: dashboard
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/health
              port: dashboard
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /api/health
              port: dashboard
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-grafana
