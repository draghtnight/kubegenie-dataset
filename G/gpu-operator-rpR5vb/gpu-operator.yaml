apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-feature-discovery
  labels:
    helm.sh/chart: node-feature-discovery-0.8.2
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.2
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gpu-operator
  labels:
    app.kubernetes.io/component: gpu-operator
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nfd-worker-conf
  labels:
    helm.sh/chart: node-feature-discovery-0.8.2
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.2
    app.kubernetes.io/managed-by: Helm
data:
  nfd-worker.conf: |-
    sources:
      pci:
        deviceClassWhitelist:
        - "02"
        - "0200"
        - "0207"
        - "0300"
        - "0302"
        deviceLabelFields:
        - vendor
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-node-feature-discovery
  labels:
    helm.sh/chart: node-feature-discovery-0.8.2
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.2
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - patch
      - update
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: gpu-operator
  labels:
    app.kubernetes.io/component: gpu-operator
rules:
  - apiGroups:
      - config.openshift.io
    resources:
      - proxies
    verbs:
      - get
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
      - rolebindings
      - clusterroles
      - clusterrolebindings
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - endpoints
      - persistentvolumeclaims
      - events
      - configmaps
      - secrets
      - serviceaccounts
      - nodes
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - create
      - watch
      - update
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - '*'
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
      - prometheusrules
    verbs:
      - get
      - list
      - create
      - watch
      - update
  - apiGroups:
      - nvidia.com
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - scheduling.k8s.io
    resources:
      - priorityclasses
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - security.openshift.io
    resources:
      - securitycontextconstraints
    verbs:
      - '*'
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - gpu-operator-restricted
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - create
      - get
      - update
      - list
  - apiGroups:
      - config.openshift.io
    resources:
      - clusterversions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - node.k8s.io
    resources:
      - runtimeclasses
    verbs:
      - get
      - list
      - create
      - update
      - watch
  - apiGroups:
      - image.openshift.io
    resources:
      - imagestreams
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-node-feature-discovery
  labels:
    helm.sh/chart: node-feature-discovery-0.8.2
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.2
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-node-feature-discovery
subjects:
  - kind: ServiceAccount
    name: node-feature-discovery
    namespace: default
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gpu-operator
  labels:
    app.kubernetes.io/component: gpu-operator
subjects:
  - kind: ServiceAccount
    name: gpu-operator
    namespace: default
  - kind: ServiceAccount
    name: node-feature-discovery
    namespace: default
roleRef:
  kind: ClusterRole
  name: gpu-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-node-feature-discovery-master
  labels:
    helm.sh/chart: node-feature-discovery-0.8.2
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.2
    app.kubernetes.io/managed-by: Helm
    role: master
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-node-feature-discovery-worker
  labels:
    helm.sh/chart: node-feature-discovery-0.8.2
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.2
    app.kubernetes.io/managed-by: Helm
    role: worker
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: node-feature-discovery
      app.kubernetes.io/instance: release-name
      role: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: release-name
        role: worker
      annotations: {}
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      imagePullSecrets:
        - name: icrlogin
      securityContext: {}
      containers:
        - name: worker
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: icr.io/rocketce/node-feature-discovery:v0.8.2
          imagePullPolicy: Always
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            seccompProfile:
              type: RuntimeDefault
          command:
            - nfd-worker
          args:
            - --sleep-interval=60s
            - --server=release-name-node-feature-discovery-master:8080
          volumeMounts:
            - name: host-boot
              mountPath: /host-boot
              readOnly: true
            - name: host-os-release
              mountPath: /host-etc/os-release
              readOnly: true
            - name: host-sys
              mountPath: /host-sys
              readOnly: true
            - name: source-d
              mountPath: /etc/kubernetes/node-feature-discovery/source.d/
              readOnly: true
            - name: features-d
              mountPath: /etc/kubernetes/node-feature-discovery/features.d/
              readOnly: true
            - name: nfd-worker-conf
              mountPath: /etc/kubernetes/node-feature-discovery
              readOnly: true
      volumes:
        - name: host-boot
          hostPath:
            path: /boot
        - name: host-os-release
          hostPath:
            path: /etc/os-release
        - name: host-sys
          hostPath:
            path: /sys
        - name: source-d
          hostPath:
            path: /etc/kubernetes/node-feature-discovery/source.d/
        - name: features-d
          hostPath:
            path: /etc/kubernetes/node-feature-discovery/features.d/
        - name: nfd-worker-conf
          configMap:
            name: nfd-worker-conf
            items:
              - key: nfd-worker.conf
                path: nfd-worker.conf
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: ""
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Equal
          value: present
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-node-feature-discovery-master
  labels:
    helm.sh/chart: node-feature-discovery-0.8.2
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.2
    app.kubernetes.io/managed-by: Helm
    role: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: node-feature-discovery
      app.kubernetes.io/instance: release-name
      role: master
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-feature-discovery
        app.kubernetes.io/instance: release-name
        role: master
      annotations: {}
    spec:
      imagePullSecrets:
        - name: icrlogin
      serviceAccountName: node-feature-discovery
      securityContext: {}
      containers:
        - name: master
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: icr.io/rocketce/node-feature-discovery:v0.8.2
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: grpc
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - nfd-master
          resources:
            seccompProfile:
              type: RuntimeDefault
          args:
            - --extra-label-ns=nvidia.com
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: In
                    values:
                      - ""
              weight: 1
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gpu-operator
  labels:
    app.kubernetes.io/component: gpu-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: gpu-operator
      app: gpu-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/component: gpu-operator
        app: gpu-operator
      annotations:
        openshift.io/scc: restricted-readonly
    spec:
      serviceAccountName: gpu-operator
      imagePullSecrets:
        - name: icrlogin
      priorityClassName: system-node-critical
      containers:
        - name: gpu-operator
          image: icr.io/rocketce/gpu-operator:v1.9.1-ubi8
          imagePullPolicy: Always
          command:
            - gpu-operator
          args:
            - --leader-elect
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: host-os-release
              mountPath: /host-etc/os-release
              readOnly: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 350Mi
            requests:
              cpu: 200m
              memory: 100Mi
          ports:
            - name: metrics
              containerPort: 8080
      volumes:
        - name: host-os-release
          hostPath:
            path: /etc/os-release
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: In
                    values:
                      - ""
              weight: 1
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: ""
---
apiVersion: nvidia.com/v1
kind: ClusterPolicy
metadata:
  name: cluster-policy
  namespace: default
  labels:
    app.kubernetes.io/component: gpu-operator
spec:
  operator:
    defaultRuntime: crio
    runtimeClass: nvidia
    initContainer:
      repository: icr.io/rocketce
      image: cuda
      version: 11.4.2-base-ubi8
      imagePullPolicy: Always
      imagePullSecrets:
        - icrlogin
  daemonsets:
    tolerations:
      - effect: NoSchedule
        key: nvidia.com/gpu
        operator: Exists
    priorityClassName: system-node-critical
  validator:
    repository: icr.io/rocketce
    image: gpu-operator-validator
    version: v1.9.1
    imagePullPolicy: Always
    imagePullSecrets:
      - icrlogin
    securityContext:
      privileged: true
      seLinuxOptions:
        level: s0
    plugin:
      env:
        - name: WITH_WORKLOAD
          value: "true"
  mig:
    strategy: single
  psp:
    enabled: false
  driver:
    enabled: true
    repository: icr.io/rocketce
    image: driver
    version: 470.82.01
    imagePullPolicy: Always
    imagePullSecrets:
      - icrlogin
    rdma:
      enabled: false
      useHostMofed: false
    manager:
      repository: icr.io/rocketce
      image: k8s-driver-manager
      version: v0.2.0-ubi8
      imagePullPolicy: Always
      env:
        - name: ENABLE_AUTO_DRAIN
          value: "true"
        - name: DRAIN_USE_FORCE
          value: "false"
        - name: DRAIN_POD_SELECTOR_LABEL
          value: ""
        - name: DRAIN_TIMEOUT_SECONDS
          value: 0s
        - name: DRAIN_DELETE_EMPTYDIR_DATA
          value: "false"
    repoConfig:
      configMapName: ""
    certConfig:
      name: ""
    licensingConfig:
      configMapName: ""
      nlsEnabled: false
    virtualTopology:
      config: ""
    securityContext:
      privileged: true
      seLinuxOptions:
        level: s0
  toolkit:
    enabled: true
    repository: icr.io/rocketce
    image: container-toolkit
    version: 1.7.2-ubi8
    imagePullPolicy: Always
    imagePullSecrets:
      - icrlogin
    securityContext:
      privileged: true
      seLinuxOptions:
        level: s0
  devicePlugin:
    repository: icr.io/rocketce
    image: k8s-device-plugin
    version: v0.10.0-ubi8
    imagePullPolicy: Always
    imagePullSecrets:
      - icrlogin
    securityContext:
      privileged: true
    env:
      - name: PASS_DEVICE_SPECS
        value: "true"
      - name: FAIL_ON_INIT_ERROR
        value: "true"
      - name: DEVICE_LIST_STRATEGY
        value: envvar
      - name: DEVICE_ID_STRATEGY
        value: uuid
      - name: NVIDIA_VISIBLE_DEVICES
        value: all
      - name: NVIDIA_DRIVER_CAPABILITIES
        value: all
      - name: DP_DISABLE_HEALTHCHECKS
        value: xids
  dcgm:
    enabled: false
    repository: icr.io/rocketce
    image: dcgm
    version: 2.3.1-ubi8
    imagePullPolicy: Always
    imagePullSecrets:
      - icrlogin
    hostPort: 5555
  dcgmExporter:
    repository: icr.io/rocketce
    image: dcgm-exporter
    version: 2.3.1-2.6.1-ubi8
    imagePullPolicy: Always
    imagePullSecrets:
      - icrlogin
    env:
      - name: DCGM_EXPORTER_LISTEN
        value: :9400
      - name: DCGM_EXPORTER_KUBERNETES
        value: "true"
      - name: DCGM_EXPORTER_COLLECTORS
        value: /etc/dcgm-exporter/dcp-metrics-included.csv
  gfd:
    repository: icr.io/rocketce
    image: gpu-feature-discovery
    version: v0.4.1
    imagePullPolicy: Always
    imagePullSecrets:
      - icrlogin
    env:
      - name: GFD_SLEEP_INTERVAL
        value: 60s
      - name: GFD_FAIL_ON_INIT_ERROR
        value: "true"
  migManager:
    enabled: true
    repository: icr.io/rocketce
    image: k8s-mig-manager
    version: v0.2.0-ubi8
    imagePullPolicy: Always
    imagePullSecrets:
      - icrlogin
    securityContext:
      privileged: true
    env:
      - name: WITH_REBOOT
        value: "false"
    config:
      name: ""
    gpuClientsConfig:
      name: ""
  nodeStatusExporter:
    enabled: false
    repository: icr.io/rocketce
    image: gpu-operator-validator
    version: v1.9.1
    imagePullPolicy: Always
    imagePullSecrets:
      - icrlogin
---
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  labels:
    app.kubernetes.io/component: gpu-operator
  annotations:
    kubernetes.io/description: restricted denies access to all host features and requires pods to be run with a UID, read-only root filesystem and SELinux context that are allocated to the namespace.  This SCC is more restrictive than the default restritive SCC and it is used by default for authenticated users and operators and operands.
  name: restricted-readonly
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: false
allowedCapabilities: []
defaultAddCapabilities: []
fsGroup:
  type: MustRunAs
groups:
  - system:authenticated
priority: 0
readOnlyRootFilesystem: true
requiredDropCapabilities:
  - KILL
  - MKNOD
  - SETUID
  - SETGID
runAsUser:
  type: MustRunAsRange
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
users:
  - system:serviceaccount:default:gpu-operator
volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - projected
  - secret
