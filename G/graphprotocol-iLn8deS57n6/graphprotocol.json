[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-graphprotocol-agent",
      "labels": {
        "helm.sh/chart": "graphprotocol-agent-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-agent",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-graphprotocol-indexnode",
      "labels": {
        "helm.sh/chart": "graphprotocol-indexnode-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-indexnode",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-graphprotocol-querynode",
      "labels": {
        "helm.sh/chart": "graphprotocol-querynode-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-querynode",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-graphprotocol-service",
      "labels": {
        "helm.sh/chart": "graphprotocol-service-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-service",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-graphprotocol-agent-configmap"
    },
    "data": {
      "INDEXER_AGENT_ETHEREUM": "https://rinkeby.alchemyapi.io/jsonrpc/demo/",
      "INDEXER_AGENT_GRAPH_NODE_ADMIN_ENDPOINT": "http://index-node/",
      "INDEXER_AGENT_GRAPH_NODE_QUERY_ENDPOINT": "http://query-node-proxy/",
      "INDEXER_AGENT_GRAPH_NODE_STATUS_ENDPOINT": "http://query-node-proxy/index-node/graphql",
      "INDEXER_AGENT_INDEX_NODE_IDS": "index-node-0",
      "INDEXER_AGENT_INDEXER_GEO_COORDINATES": "51.476852,-0.000500",
      "INDEXER_AGENT_NETWORK_SUBGRAPH_ENDPOINT": "https://api.thegraph.com/subgraphs/name/graphprotocol/graph-network-rinkeby",
      "INDEXER_AGENT_POSTGRES_DATABASE": "indexer-agent",
      "INDEXER_AGENT_PUBLIC_INDEXER_URL": "http://indexer.domain/"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-graphprotocol-indexnode-configmap"
    },
    "data": {
      "BLOCK_INGESTOR": "index-node-0",
      "GRAPH_KILL_IF_UNRESPONSIVE": "true",
      "ethereum": "mainnet:https://eth-mainnet/ rinkeby:https://eth-rinkeby/",
      "ipfs": "https://testnet.thegraph.com/ipfs/",
      "node_role": "index-node",
      "postgres_db": "graph"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-graphprotocol-querynode-configmap"
    },
    "data": {
      "BLOCK_INGESTOR": "index-node-0",
      "GRAPH_KILL_IF_UNRESPONSIVE": "true",
      "ethereum": "mainnet:https://eth-mainnet.alchemyapi.io/jsonrpc/demo rinkeby:https://eth-rinkeby.alchemyapi.io/jsonrpc/demo",
      "ipfs": "https://testnet.thegraph.com/ipfs/",
      "node_role": "query-node",
      "postgres_db": "graph"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-graphprotocol-querynode-proxy-configmap"
    },
    "data": {
      "nginx.conf": "# Increase the number of connections per worker. The default of\n# 512 causes a lot of 502 HTTP errors, and leads nginx to complain\n# that '512 worker_connections are not enough'\n#\n# We now allow 16k connections which is 1/4 of the available port space\nevents {\n  worker_connections  16384;\n}\nhttp {\n  # See http://nginx.org/en/docs/http/websocket.html\n  map $http_upgrade $connection_upgrade {\n      default upgrade;\n      ''      close;\n  }\n  # Tune nginx keepalives to work with the GCP HTTP(S) Load Balancer,\n  # see point 3 in this blog post for why\n  # https://blog.percy.io/tuning-nginx-behind-google-cloud-platform-http-s-load-balancer-305982ddb340\n  keepalive_timeout 650;\n  keepalive_requests 10000;\n  server {\n    location ^~ /index-node/ {\n      # Remove the /index-node/ again\n      rewrite ^/index-node/(.*)$ /$1 break;\n      # Proxy configuration.\n      proxy_pass http://127.0.0.1:8030;\n      proxy_http_version 1.1;\n      proxy_set_header Connection $connection_upgrade;\n      proxy_set_header Host $host;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_cache_bypass $http_upgrade;\n      # Gateway timeout.\n      proxy_read_timeout 30s;\n      proxy_send_timeout 30s;        }\n    location /nginx_status {\n      stub_status;\n      allow 127.0.0.1;\n      deny all;\n    }\n    location / {\n      location = / {\n        return 200;\n      }\n      # Move WebSocket and HTTP requests into /ws/ and /http/ prefixes;\n      # this allows us to forward both types of requests to different\n      # query node ports\n      if ( $connection_upgrade = \"upgrade\" ) {\n        rewrite ^(.*)$ /ws/$1;\n      }\n      if ( $connection_upgrade != \"upgrade\" ) {\n        rewrite ^(.*)$ /http/$1;\n      }\n      location /http/ {\n        # Remove the /http/ again\n        rewrite ^/http/(.*)$ $1 break;\n        # Proxy configuration.\n        proxy_pass http://127.0.0.1:8000;\n        proxy_http_version 1.1;\n        proxy_set_header Connection $connection_upgrade;\n        proxy_set_header Host $host;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_cache_bypass $http_upgrade;\n        proxy_next_upstream error invalid_header http_502;\n        # Gateway timeout.\n        proxy_read_timeout 30s;\n        proxy_send_timeout 30s;\n      }\n      location /ws {\n        # Remove the /ws/ again\n        rewrite ^/ws/(.*)$ $1 break;\n        # Proxy configuration.\n        proxy_pass http://127.0.0.1:8001;\n        proxy_http_version 1.1;\n        proxy_set_header Connection $connection_upgrade;\n        proxy_set_header Host $host;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_cache_bypass $http_upgrade;\n        # Gateway timeout.\n        proxy_read_timeout 1800s;\n        proxy_send_timeout 1800s;\n      }\n    }\n  }\n  log_format timed '$remote_addr (forwarded for $http_x_forwarded_for) '\n        ' - $remote_user [$time_local] '\n        '\"$request\" $status $request_completion $body_bytes_sent '\n        '\"$http_referer\" \"$http_user_agent\" '\n        '$request_time $upstream_response_time $pipe';\n  access_log /var/log/nginx/access.log timed;\n  error_log /var/log/nginx/error.log warn;\n}\nstream {}\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-graphprotocol-service-configmap"
    },
    "data": {
      "INDEXER_SERVICE_ETHEREUM": "https://rinkeby.alchemyapi.io/jsonrpc/demo/",
      "INDEXER_SERVICE_GRAPH_NODE_QUERY_ENDPOINT": "http://query-node-proxy/",
      "INDEXER_SERVICE_GRAPH_NODE_STATUS_ENDPOINT": "http://query-node-proxy/index-node/graphql",
      "INDEXER_SERVICE_NETWORK_SUBGRAPH_ENDPOINT": "https://api.thegraph.com/subgraphs/name/graphprotocol/graph-network-rinkeby",
      "INDEXER_SERVICE_PORT": "7600",
      "SERVER_DB_NAME": "indexer-service"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-graphprotocol-agent",
      "labels": {
        "helm.sh/chart": "graphprotocol-agent-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-agent",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 7600,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        },
        {
          "port": 7300,
          "targetPort": "metrics",
          "protocol": "TCP",
          "name": "metrics"
        },
        {
          "port": 8000,
          "targetPort": "management",
          "protocol": "TCP",
          "name": "management"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "graphprotocol-agent",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-graphprotocol-indexnode",
      "labels": {
        "helm.sh/chart": "graphprotocol-indexnode-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-indexnode",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8000,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        },
        {
          "port": 8001,
          "targetPort": "ws",
          "protocol": "TCP",
          "name": "ws"
        },
        {
          "port": 8030,
          "targetPort": "index-node",
          "protocol": "TCP",
          "name": "index-node"
        },
        {
          "port": 8020,
          "targetPort": "json-rpc",
          "protocol": "TCP",
          "name": "json-rpc"
        },
        {
          "port": 8040,
          "targetPort": "metrics",
          "protocol": "TCP",
          "name": "metrics"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "graphprotocol-indexnode",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-graphprotocol-querynode",
      "labels": {
        "helm.sh/chart": "graphprotocol-querynode-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-querynode",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8000,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        },
        {
          "port": 8001,
          "targetPort": "ws",
          "protocol": "TCP",
          "name": "ws"
        },
        {
          "port": 8030,
          "targetPort": "index-node",
          "protocol": "TCP",
          "name": "index-node"
        },
        {
          "port": 8020,
          "targetPort": "json-rpc",
          "protocol": "TCP",
          "name": "json-rpc"
        },
        {
          "port": 8040,
          "targetPort": "metrics",
          "protocol": "TCP",
          "name": "metrics"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "graphprotocol-querynode",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-graphprotocol-querynode-proxy",
      "labels": {
        "helm.sh/chart": "graphprotocol-querynode-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-querynode",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": "nginx",
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "graphprotocol-querynode",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-graphprotocol-service",
      "labels": {
        "helm.sh/chart": "graphprotocol-service-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-service",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 7600,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        },
        {
          "port": 7300,
          "targetPort": "metrics",
          "protocol": "TCP",
          "name": "metrics"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "graphprotocol-service",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-graphprotocol-agent",
      "labels": {
        "helm.sh/chart": "graphprotocol-agent-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-agent",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "graphprotocol-agent",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/configmap.yaml": "d4d4b8b1fb9b5079d1e9b3d0f652842233de50cd79da08b5f84e0cb24e27220d",
            "prometheus.io/path": "/metrics",
            "prometheus.io/port": "7300",
            "prometheus.io/scrape": "true"
          },
          "labels": {
            "app.kubernetes.io/name": "graphprotocol-agent",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-graphprotocol-agent",
          "securityContext": {},
          "containers": [
            {
              "name": "graphprotocol-agent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "graphprotocol/indexer-agent:latest",
              "imagePullPolicy": "IfNotPresent",
              "command": null,
              "args": null,
              "ports": [
                {
                  "name": "http",
                  "containerPort": 7600,
                  "protocol": "TCP"
                },
                {
                  "name": "metrics",
                  "containerPort": 7300,
                  "protocol": "TCP"
                },
                {
                  "name": "management",
                  "containerPort": 8000
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "release-name-graphprotocol-agent-configmap"
                  }
                }
              ],
              "env": [
                {
                  "name": "INDEXER_AGENT_POSTGRES_HOST",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgres-credentials",
                      "key": "host"
                    }
                  }
                },
                {
                  "name": "INDEXER_AGENT_POSTGRES_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgres-credentials",
                      "key": "user"
                    }
                  }
                },
                {
                  "name": "INDEXER_AGENT_POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgres-credentials",
                      "key": "password"
                    }
                  }
                },
                {
                  "name": "INDEXER_AGENT_MNEMONIC",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "ethereum-accounts",
                      "key": "mnemonic"
                    }
                  }
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-graphprotocol-querynode",
      "labels": {
        "helm.sh/chart": "graphprotocol-querynode-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-querynode",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "graphprotocol-querynode",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/configmap.yaml": "a9b65f9b5bec75c5a87c49a27d87abe97e5719bb9067793a965b2679cc6ffb4c",
            "prometheus.io/path": "/metrics",
            "prometheus.io/port": "8040",
            "prometheus.io/scrape": "true"
          },
          "labels": {
            "app.kubernetes.io/name": "graphprotocol-querynode",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "securityContext": {},
          "containers": [
            {
              "name": "graphprotocol-querynode-nginx",
              "image": "nginx",
              "ports": [
                {
                  "name": "nginx",
                  "containerPort": 80,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "name": "query-node-proxy-config",
                  "mountPath": "/etc/nginx/nginx.conf",
                  "subPath": "nginx.conf"
                }
              ]
            },
            {
              "name": "graphprotocol-querynode",
              "securityContext": {},
              "image": "graphprotocol/graph-node:latest",
              "imagePullPolicy": "IfNotPresent",
              "command": null,
              "args": null,
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8000,
                  "protocol": "TCP"
                },
                {
                  "name": "ws",
                  "containerPort": 8001,
                  "protocol": "TCP"
                },
                {
                  "name": "index-node",
                  "containerPort": 8030,
                  "protocol": "TCP"
                },
                {
                  "name": "json-rpc",
                  "containerPort": 8020,
                  "protocol": "TCP"
                },
                {
                  "name": "metrics",
                  "containerPort": 8040,
                  "protocol": "TCP"
                }
              ],
              "env": [
                {
                  "name": "node_id",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "postgres_host",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgres-credentials",
                      "key": "host"
                    }
                  }
                },
                {
                  "name": "postgres_user",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgres-credentials",
                      "key": "user"
                    }
                  }
                },
                {
                  "name": "postgres_pass",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgres-credentials",
                      "key": "password"
                    }
                  }
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "release-name-graphprotocol-querynode-configmap"
                  }
                }
              ],
              "resources": {}
            }
          ],
          "volumes": [
            {
              "name": "query-node-proxy-config",
              "configMap": {
                "name": "release-name-graphprotocol-querynode-proxy-configmap"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-graphprotocol-service",
      "labels": {
        "helm.sh/chart": "graphprotocol-service-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-service",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "graphprotocol-service",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/configmap.yaml": "df6a8a3ce004e66be9d84d214dbf3637a909bb7069207992b52bb6397d13cfc2",
            "prometheus.io/path": "/metrics",
            "prometheus.io/port": "7300",
            "prometheus.io/scrape": "true"
          },
          "labels": {
            "app.kubernetes.io/name": "graphprotocol-service",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-graphprotocol-service",
          "securityContext": {},
          "containers": [
            {
              "name": "graphprotocol-service",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "graphprotocol/indexer-service:latest",
              "imagePullPolicy": "IfNotPresent",
              "command": null,
              "args": null,
              "ports": [
                {
                  "name": "http",
                  "containerPort": 7600,
                  "protocol": "TCP"
                },
                {
                  "name": "metrics",
                  "containerPort": 7300,
                  "protocol": "TCP"
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "release-name-graphprotocol-service-configmap"
                  }
                }
              ],
              "env": [
                {
                  "name": "INDEXER_SERVICE_POSTGRES_HOST",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgres-credentials",
                      "key": "host"
                    }
                  }
                },
                {
                  "name": "INDEXER_SERVICE_POSTGRES_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgres-credentials",
                      "key": "user"
                    }
                  }
                },
                {
                  "name": "INDEXER_SERVICE_POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgres-credentials",
                      "key": "password"
                    }
                  }
                },
                {
                  "name": "INDEXER_SERVICE_MNEMONIC",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "ethereum-accounts",
                      "key": "mnemonic"
                    }
                  }
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "index-node",
      "labels": {
        "helm.sh/chart": "graphprotocol-indexnode-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-indexnode",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "podManagementPolicy": "Parallel",
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "graphprotocol-indexnode",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "serviceName": "release-name-graphprotocol-indexnode",
      "template": {
        "metadata": {
          "annotations": {
            "checksum/configmap.yaml": "e7ac974c1fcd9e38109c7c6eb2a901e4377e6cb1e7358aa6b8d0cd6502d2bc89",
            "prometheus.io/path": "/metrics",
            "prometheus.io/port": "8040",
            "prometheus.io/scrape": "true"
          },
          "labels": {
            "app.kubernetes.io/name": "graphprotocol-indexnode",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-graphprotocol-indexnode",
          "securityContext": {},
          "containers": [
            {
              "name": "graphprotocol-indexnode",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "graphprotocol/graph-node:latest",
              "imagePullPolicy": "IfNotPresent",
              "command": null,
              "args": null,
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8000,
                  "protocol": "TCP"
                },
                {
                  "name": "ws",
                  "containerPort": 8001,
                  "protocol": "TCP"
                },
                {
                  "name": "index-node",
                  "containerPort": 8030,
                  "protocol": "TCP"
                },
                {
                  "name": "json-rpc",
                  "containerPort": 8020,
                  "protocol": "TCP"
                },
                {
                  "name": "metrics",
                  "containerPort": 8040,
                  "protocol": "TCP"
                }
              ],
              "env": [
                {
                  "name": "node_id",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "postgres_host",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgres-credentials",
                      "key": "host"
                    }
                  }
                },
                {
                  "name": "postgres_user",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgres-credentials",
                      "key": "user"
                    }
                  }
                },
                {
                  "name": "postgres_pass",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgres-credentials",
                      "key": "password"
                    }
                  }
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "release-name-graphprotocol-indexnode-configmap"
                  }
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "name": "release-name-graphprotocol-querynode-metrics"
    },
    "spec": {
      "endpoints": [
        {
          "interval": "5s",
          "path": "/metrics",
          "port": "metrics"
        }
      ],
      "namespaceSelector": {
        "matchNames": [
          "default"
        ]
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "graphprotocol-querynode",
          "app.kubernetes.io/instance": "release-name"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-graphprotocol-agent-test-connection",
      "labels": {
        "helm.sh/chart": "graphprotocol-agent-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-agent",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-graphprotocol-agent:"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-graphprotocol-indexnode-test-connection",
      "labels": {
        "helm.sh/chart": "graphprotocol-indexnode-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-indexnode",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-graphprotocol-indexnode:"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-graphprotocol-querynode-test-connection",
      "labels": {
        "helm.sh/chart": "graphprotocol-querynode-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-querynode",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-graphprotocol-querynode:"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-graphprotocol-service-test-connection",
      "labels": {
        "helm.sh/chart": "graphprotocol-service-0.3.1",
        "app.kubernetes.io/name": "graphprotocol-service",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-graphprotocol-service:"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]