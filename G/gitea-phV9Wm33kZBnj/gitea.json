[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-mariadb",
      "labels": {
        "app": "mariadb",
        "chart": "mariadb-7.3.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "mariadb-root-password": "MTJIVllGOG81Uw==",
      "mariadb-password": "RkdqcXhQYk9rWA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-mariadb",
      "labels": {
        "app": "mariadb",
        "component": "master",
        "chart": "mariadb-7.3.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "my.cnf": "[mysqld]\nskip-name-resolve\nexplicit_defaults_for_timestamp\nbasedir=/opt/bitnami/mariadb\nplugin_dir=/opt/bitnami/mariadb/plugin\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\ntmpdir=/opt/bitnami/mariadb/tmp\nmax_allowed_packet=16M\nbind-address=0.0.0.0\npid-file=/opt/bitnami/mariadb/tmp/mysqld.pid\nlog-error=/opt/bitnami/mariadb/logs/mysqld.log\ncharacter-set-server=UTF8\ncollation-server=utf8_general_ci\n\n[client]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\ndefault-character-set=UTF8\nplugin_dir=/opt/bitnami/mariadb/plugin\n\n[manager]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\npid-file=/opt/bitnami/mariadb/tmp/mysqld.pid"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-mariadb-tests"
    },
    "data": {
      "run.sh": "@test \"Testing MariaDB is accessible\" {\n  mysql -h release-name-mariadb -uroot -p$MARIADB_ROOT_PASSWORD -e 'show databases;'\n}"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-gitea",
      "labels": {
        "app": "release-name-gitea",
        "chart": "gitea-1.3.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "app.ini": "; This file lists the default values used by Gitea\n; Copy required sections to your own app.ini (default is custom/conf/app.ini)\n; and modify as needed.\n\n; see https://docs.gitea.io/en-us/config-cheat-sheet/ for additional documentation.\n\n; App name that shows in every page title\nAPP_NAME = Gitea: Git with a cup of tea\n; Change it if you run locally\nRUN_USER = git\n; Either \"dev\", \"prod\" or \"test\", default is \"dev\"\nRUN_MODE = dev\n\n[repository]\nROOT =\nSCRIPT_TYPE = bash\n; Default ANSI charset\nANSI_CHARSET =\n; Force every new repository to be private\nFORCE_PRIVATE = false\n; Default privacy setting when creating a new repository, allowed values: last, private, public. Default is last which means the last setting used.\nDEFAULT_PRIVATE = last\n; Global limit of repositories per user, applied at creation time. -1 means no limit\nMAX_CREATION_LIMIT = -1\n; Mirror sync queue length, increase if mirror syncing starts hanging\nMIRROR_QUEUE_LENGTH = 1000\n; Patch test queue length, increase if pull request patch testing starts hanging\nPULL_REQUEST_QUEUE_LENGTH = 1000\n; Preferred Licenses to place at the top of the List\n; The name here must match the filename in conf/license or custom/conf/license\nPREFERRED_LICENSES = Apache License 2.0,MIT License\n; Disable the ability to interact with repositories using the HTTP protocol\nDISABLE_HTTP_GIT = false\n; Force ssh:// clone url instead of scp-style uri when default SSH port is used\nUSE_COMPAT_SSH_URI = false\n\n[repository.editor]\n; List of file extensions for which lines should be wrapped in the CodeMirror editor\n; Separate extensions with a comma. To line wrap files without an extension, just put a comma\nLINE_WRAP_EXTENSIONS = .txt,.md,.markdown,.mdown,.mkd,\n; Valid file modes that have a preview API associated with them, such as api/v1/markdown\n; Separate the values by commas. The preview tab in edit mode won't be displayed if the file extension doesn't match\nPREVIEWABLE_FILE_MODES = markdown\n\n[repository.local]\n; Path for local repository copy. Defaults to `tmp/local-repo`\nLOCAL_COPY_PATH = tmp/local-repo\n; Path for local wiki copy. Defaults to `tmp/local-wiki`\nLOCAL_WIKI_PATH = tmp/local-wiki\n\n[repository.upload]\n; Whether repository file uploads are enabled. Defaults to `true`\nENABLED = true\n; Path for uploads. Defaults to `data/tmp/uploads` (tmp gets deleted on gitea restart)\nTEMP_PATH = data/tmp/uploads\n; One or more allowed types, e.g. image/jpeg|image/png. Nothing means any file type\nALLOWED_TYPES =\n; Max size of each file in megabytes. Defaults to 3MB\nFILE_MAX_SIZE = 3\n; Max number of files per upload. Defaults to 5\nMAX_FILES = 5\n\n[repository.pull-request]\n; List of prefixes used in Pull Request title to mark them as Work In Progress\nWORK_IN_PROGRESS_PREFIXES=WIP:,[WIP]\n\n[ui]\n; Number of repositories that are displayed on one explore page\nEXPLORE_PAGING_NUM = 20\n; Number of issues that are displayed on one page\nISSUE_PAGING_NUM = 10\n; Number of maximum commits displayed in one activity feed\nFEED_MAX_COMMIT_NUM = 5\n; Number of maximum commits displayed in commit graph.\nGRAPH_MAX_COMMIT_NUM = 100\n; Number of line of codes shown for a code comment\nCODE_COMMENT_LINES = 4\n; Value of `theme-color` meta tag, used by Android >= 5.0\n; An invalid color like \"none\" or \"disable\" will have the default style\n; More info: https://developers.google.com/web/updates/2014/11/Support-for-theme-color-in-Chrome-39-for-Android\nTHEME_COLOR_META_TAG = `#6cc644`\n; Max size of files to be displayed (default is 8MiB)\nMAX_DISPLAY_FILE_SIZE = 8388608\n; Whether the email of the user should be shown in the Explore Users page\nSHOW_USER_EMAIL = true\n; Set the default theme for the Gitea install\nDEFAULT_THEME = gitea\n\n\n[ui.admin]\n; Number of users that are displayed on one page\nUSER_PAGING_NUM = 50\n; Number of repos that are displayed on one page\nREPO_PAGING_NUM = 50\n; Number of notices that are displayed on one page\nNOTICE_PAGING_NUM = 25\n; Number of organizations that are displayed on one page\nORG_PAGING_NUM = 50\n\n[ui.user]\n; Number of repos that are displayed on one page\nREPO_PAGING_NUM = 15\n\n[ui.meta]\nAUTHOR = Gitea - Git with a cup of tea\nDESCRIPTION = Gitea (Git with a cup of tea) is a painless self-hosted Git service written in Go\nKEYWORDS = go,git,self-hosted,gitea\n\n[markdown]\n; Enable hard line break extension\nENABLE_HARD_LINE_BREAK = false\n; List of custom URL-Schemes that are allowed as links when rendering Markdown\n; for example git,magnet\nCUSTOM_URL_SCHEMES =\n; List of file extensions that should be rendered/edited as Markdown\n; Separate the extensions with a comma. To render files without any extension as markdown, just put a comma\nFILE_EXTENSIONS = .md,.markdown,.mdown,.mkd\n\n[server]\n; The protocol the server listens on. One of 'http', 'https', 'unix' or 'fcgi'.\n\n; PROTOCOL hardcoded to http since tls is delegated to ingress\nPROTOCOL = http\nDOMAIN = gitea.local\nROOT_URL = %(PROTOCOL)s://%(DOMAIN)s; The address to listen on. Either a IPv4/IPv6 address or the path to a unix socket.\nHTTP_ADDR = 0.0.0.0\nHTTP_PORT = 3000\n; If REDIRECT_OTHER_PORT is true, and PROTOCOL is set to https an http server\n; will be started on PORT_TO_REDIRECT and it will redirect plain, non-secure http requests to the main\n; ROOT_URL.  Defaults are false for REDIRECT_OTHER_PORT and 80 for\n; PORT_TO_REDIRECT.\nREDIRECT_OTHER_PORT = false\nPORT_TO_REDIRECT = 80\n; Permission for unix socket\nUNIX_SOCKET_PERMISSION = 666\n; Local (DMZ) URL for Gitea workers (such as SSH update) accessing web service.\n; In most cases you do not need to change the default value.\n; Alter it only if your SSH server node is not the same as HTTP node.\n; Do not set this variable if PROTOCOL is set to 'unix'.\nLOCAL_ROOT_URL = %(PROTOCOL)s://%(HTTP_ADDR)s:%(HTTP_PORT)s/\n; Disable SSH feature when not available\nDISABLE_SSH = false\n; Whether to use the builtin SSH server or not.\nSTART_SSH_SERVER = false\n; Username to use for the builtin SSH server. If blank, then it is the value of RUN_USER.\nBUILTIN_SSH_SERVER_USER =\n; Domain name to be exposed in clone URL\nSSH_DOMAIN = gitea.local\n; THe network interface the builtin SSH server should listen on\nSSH_LISTEN_HOST =\n; Port number to be exposed in clone URL\nSSH_PORT = 8022\n; The port number the builtin SSH server should listen on\nSSH_LISTEN_PORT = 22\n; Root path of SSH directory, default is '~/.ssh', but you have to use '/home/git/.ssh'.\nSSH_ROOT_PATH =\n; Gitea will create a authorized_keys file by default when it is not using the internal ssh server\n; If you intend to use the AuthorizedKeysCommand functionality then you should turn this off.\nSSH_CREATE_AUTHORIZED_KEYS_FILE = true\n; For the built-in SSH server, choose the ciphers to support for SSH connections,\n; for system SSH this setting has no effect\nSSH_SERVER_CIPHERS = aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, arcfour256, arcfour128\n; For the built-in SSH server, choose the key exchange algorithms to support for SSH connections,\n; for system SSH this setting has no effect\nSSH_SERVER_KEY_EXCHANGES = diffie-hellman-group1-sha1, diffie-hellman-group14-sha1, ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521, curve25519-sha256@libssh.org\n; For the built-in SSH server, choose the MACs to support for SSH connections,\n; for system SSH this setting has no effect\nSSH_SERVER_MACS = hmac-sha2-256-etm@openssh.com, hmac-sha2-256, hmac-sha1, hmac-sha1-96\n; Directory to create temporary files in when testing public keys using ssh-keygen,\n; default is the system temporary directory.\nSSH_KEY_TEST_PATH =\n; Path to ssh-keygen, default is 'ssh-keygen' which means the shell is responsible for finding out which one to call.\nSSH_KEYGEN_PATH = ssh-keygen\n; Enable SSH Authorized Key Backup when rewriting all keys, default is true\nSSH_BACKUP_AUTHORIZED_KEYS = true\n; Enable exposure of SSH clone URL to anonymous visitors, default is false\nSSH_EXPOSE_ANONYMOUS = false\n; Indicate whether to check minimum key size with corresponding type\nMINIMUM_KEY_SIZE_CHECK = false\n; Disable CDN even in \"prod\" mode\nOFFLINE_MODE = false\nDISABLE_ROUTER_LOG = false\n; Generate steps:\n; $ ./gitea cert -ca=true -duration=8760h0m0s -host=myhost.example.com\n;\n; Or from a .pfx file exported from the Windows certificate store (do\n; not forget to export the private key):\n; $ openssl pkcs12 -in cert.pfx -out cert.pem -nokeys\n; $ openssl pkcs12 -in cert.pfx -out key.pem -nocerts -nodes\nCERT_FILE = custom/https/cert.pem\nKEY_FILE = custom/https/key.pem\n; Root directory containing templates and static files.\n; default is the path where Gitea is executed\nSTATIC_ROOT_PATH =\n; Default path for App data\nAPP_DATA_PATH = data\n; Application level GZIP support\nENABLE_GZIP = false\n; Application profiling (memory and cpu)\n; For \"web\" command it listens on localhost:6060\n; For \"serve\" command it dumps to disk at PPROF_DATA_PATH as (cpuprofile|memprofile)_<username>_<temporary id>\nENABLE_PPROF = false\n; PPROF_DATA_PATH, use an absolute path when you start gitea as service\nPPROF_DATA_PATH = data/tmp/pprof\n; Landing page, can be \"home\", \"explore\", or \"organizations\"\nLANDING_PAGE = home\n; Enables git-lfs support. true or false, default is false.\nLFS_START_SERVER = false\n; Where your lfs files reside, default is data/lfs.\nLFS_CONTENT_PATH = data/lfs\n; LFS authentication secret, change this yourself\nLFS_JWT_SECRET =\n; LFS authentication validity period (in time.Duration), pushes taking longer than this may fail.\nLFS_HTTP_AUTH_EXPIRY = 20m\n\n\n; Define allowed algorithms and their minimum key length (use -1 to disable a type)\n[ssh.minimum_key_sizes]\nED25519 = 256\nECDSA = 256\nRSA = 2048\nDSA = 1024\n\n[database]\n\n; Either \"mysql\", \"postgres\", \"mssql\" or \"sqlite3\", it's your choice\nDB_TYPE = mysql\nHOST = release-name-mariadb:3306\nNAME = gitea\nUSER = gitea\n; Use PASSWD = `your password` for quoting if you use special characters in the password.\n\nPASSWD = MARIADB_PASSWORD\n\n\n; For \"postgres\" only, either \"disable\", \"require\" or \"verify-full\"\nSSL_MODE = disable\n; For \"sqlite3\" and \"tidb\", use an absolute path when you start gitea as service\nPATH = data/gitea.db\n; For \"sqlite3\" only. Query timeout\nSQLITE_TIMEOUT = 500\n; For iterate buffer, default is 50\nITERATE_BUFFER_SIZE = 50\n; Show the database generated SQL\nLOG_SQL = true\n\n[indexer]\nISSUE_INDEXER_PATH = indexers/issues.bleve\n; repo indexer by default disabled, since it uses a lot of disk space\nREPO_INDEXER_ENABLED = false\nREPO_INDEXER_PATH = indexers/repos.bleve\nUPDATE_BUFFER_LEN = 20\nMAX_FILE_SIZE = 1048576\n\n[admin]\n; Disallow regular (non-admin) users from creating organizations.\nDISABLE_REGULAR_ORG_CREATION = false\n\n[security]\n; Whether the installer is disabled\nINSTALL_LOCK = false\n; !!CHANGE THIS TO KEEP YOUR USER DATA SAFE!!\n\nSECRET_KEY = \"xSj1d9MU4lY3BBPPmSBYvQ2ssuOTYm6vRgStaxG6S31IZoMNeRIxwKqUNX5j8r2y\"\n\n\n\n; How long to remember that an user is logged in before requiring relogin (in days)\nLOGIN_REMEMBER_DAYS = 7\nCOOKIE_USERNAME = gitea_awesome\nCOOKIE_REMEMBER_NAME = gitea_incredible\n; Reverse proxy authentication header name of user name\nREVERSE_PROXY_AUTHENTICATION_USER = X-WEBAUTH-USER\n; The minimum password length for new Users\nMIN_PASSWORD_LENGTH = 6\n; Set to true to allow users to import local server paths\nIMPORT_LOCAL_PATHS = false\n; Set to true to prevent all users (including admin) from creating custom git hooks\nDISABLE_GIT_HOOKS = false\n\n[openid]\n;\n; OpenID is an open, standard and decentralized authentication protocol.\n; Your identity is the address of a webpage you provide, which describes\n; how to prove you are in control of that page.\n;\n; For more info: https://en.wikipedia.org/wiki/OpenID\n;\n; Current implementation supports OpenID-2.0\n;\n; Tested to work providers at the time of writing:\n;  - Any GNUSocial node (your.hostname.tld/username)\n;  - Any SimpleID provider (http://simpleid.koinic.net)\n;  - http://openid.org.cn/\n;  - openid.stackexchange.com\n;  - login.launchpad.net\n;  - <username>.livejournal.com\n;\n; Whether to allow signin in via OpenID\nENABLE_OPENID_SIGNIN = true\n; Whether to allow registering via OpenID\n; Do not include to rely on rhw DISABLE_REGISTRATION setting\n;ENABLE_OPENID_SIGNUP = true\n; Allowed URI patterns (POSIX regexp).\n; Space separated.\n; Only these would be allowed if non-blank.\n; Example value: trusted.domain.org trusted.domain.net\nWHITELISTED_URIS =\n; Forbidden URI patterns (POSIX regexp).\n; Space separated.\n; Only used if WHITELISTED_URIS is blank.\n; Example value: loadaverage.org/badguy stackexchange.com/.*spammer\nBLACKLISTED_URIS =\n\n[service]\n; Time limit to confirm account/email registration\nACTIVE_CODE_LIVE_MINUTES = 180\n; Time limit to perform the reset of a forgotten password\nRESET_PASSWD_CODE_LIVE_MINUTES = 180\n; Whether a new user needs to confirm their email when registering.\nREGISTER_EMAIL_CONFIRM = false\n; List of domain names that are allowed to be used to register on a Gitea instance\n; gitea.io,example.com\nEMAIL_DOMAIN_WHITELIST=\n; Disallow registration, only allow admins to create accounts.\nDISABLE_REGISTRATION = false\n; Allow registration only using third-party services, it works only when DISABLE_REGISTRATION is false\nALLOW_ONLY_EXTERNAL_REGISTRATION = false\n; User must sign in to view anything.\nREQUIRE_SIGNIN_VIEW = false\n; Mail notification\nENABLE_NOTIFY_MAIL = false\n; More detail: https://github.com/gogits/gogs/issues/165\nENABLE_REVERSE_PROXY_AUTHENTICATION = false\nENABLE_REVERSE_PROXY_AUTO_REGISTRATION = false\n; Enable captcha validation for registration\nENABLE_CAPTCHA = false\n; Type of captcha you want to use. Options: image, recaptcha\nCAPTCHA_TYPE = image\n; Enable recaptcha to use Google's recaptcha service\n; Go to https://www.google.com/recaptcha/admin to sign up for a key\nRECAPTCHA_SECRET  =\nRECAPTCHA_SITEKEY =\n; Default value for KeepEmailPrivate\n; Each new user will get the value of this setting copied into their profile\nDEFAULT_KEEP_EMAIL_PRIVATE = false\n; Default value for AllowCreateOrganization\n; Every new user will have rights set to create organizations depending on this setting\nDEFAULT_ALLOW_CREATE_ORGANIZATION = true\n; Default value for EnableDependencies\n; Repositories will use dependencies by default depending on this setting\nDEFAULT_ENABLE_DEPENDENCIES = true\n; Enable heatmap on users profiles.\nENABLE_USER_HEATMAP = true\n; Enable Timetracking\nENABLE_TIMETRACKING = true\n; Default value for EnableTimetracking\n; Repositories will use timetracking by default depending on this setting\nDEFAULT_ENABLE_TIMETRACKING = true\n; Default value for AllowOnlyContributorsToTrackTime\n; Only users with write permissions can track time if this is true\nDEFAULT_ALLOW_ONLY_CONTRIBUTORS_TO_TRACK_TIME = true\n; Default value for the domain part of the user's email address in the git log\n; if he has set KeepEmailPrivate to true. The user's email will be replaced with a\n; concatenation of the user name in lower case, \"@\" and NO_REPLY_ADDRESS.\nNO_REPLY_ADDRESS = noreply.example.org\n\n[webhook]\n; Hook task queue length, increase if webhook shooting starts hanging\nQUEUE_LENGTH = 1000\n; Deliver timeout in seconds\nDELIVER_TIMEOUT = 5\n; Allow insecure certification\nSKIP_TLS_VERIFY = false\n; Number of history information in each page\nPAGING_NUM = 10\n\n[mailer]\nENABLED = false\n; Buffer length of channel, keep it as it is if you don't know what it is.\nSEND_BUFFER_LEN = 100\n; Name displayed in mail title\nSUBJECT = %(APP_NAME)s\n; Mail server\n; Gmail: smtp.gmail.com:587\n; QQ: smtp.qq.com:465\n; Note, if the port ends with \"465\", SMTPS will be used. Using STARTTLS on port 587 is recommended per RFC 6409. If the server supports STARTTLS it will always be used.\nHOST =\n; Disable HELO operation when hostnames are different.\nDISABLE_HELO =\n; Custom hostname for HELO operation, if no value is provided, one is retrieved from system.\nHELO_HOSTNAME =\n; Do not verify the certificate of the server. Only use this for self-signed certificates\nSKIP_VERIFY =\n; Use client certificate\nUSE_CERTIFICATE = false\nCERT_FILE = custom/mailer/cert.pem\nKEY_FILE = custom/mailer/key.pem\n; Should SMTP connection use TLS\nIS_TLS_ENABLED = false\n; Mail from address, RFC 5322. This can be just an email address, or the `\"Name\" <email@example.com>` format\nFROM =\n; Mailer user name and password\nUSER =\n; Use PASSWD = `your password` for quoting if you use special characters in the password.\nPASSWD =\n; Send mails as plain text\nSEND_AS_PLAIN_TEXT = false\n; Enable sendmail (override SMTP)\nUSE_SENDMAIL = false\n; Specify an alternative sendmail binary\nSENDMAIL_PATH = sendmail\n; Specify any extra sendmail arguments\nSENDMAIL_ARGS =\n\n[cache]\n; Either \"memory\", \"redis\", or \"memcache\", default is \"memory\"\nADAPTER = memcache\n; For \"memory\" only, GC interval in seconds, default is 60\nINTERVAL = 60\n; For \"redis\" and \"memcache\", connection host address\n;redis: network=tcp,addr=:6379,password=macaron,db=0,pool_size=100,idle_timeout=180\nHOST = 127.0.0.1:11211\n; Time to keep items in cache if not used, default is 16 hours.\n; Setting it to 0 disables caching\nITEM_TTL = 16h\n\n[session]\n; Either \"memory\", \"file\", or \"redis\", default is \"memory\"\nPROVIDER = memory\n; Provider config options\n; memory: doesn't have any config yet\n; file: session file path, e.g. `data/sessions`\n; redis: network=tcp,addr=:6379,password=macaron,db=0,pool_size=100,idle_timeout=180\n; mysql: go-sql-driver/mysql dsn config string, e.g. `root:password@/session_table`\nPROVIDER_CONFIG = data/sessions\n; Session cookie name\nCOOKIE_NAME = i_like_gitea\n; If you use session in https only, default is false\nCOOKIE_SECURE = false\n; Enable set cookie, default is true\nENABLE_SET_COOKIE = true\n; Session GC time interval in seconds, default is 86400 (1 day)\nGC_INTERVAL_TIME = 86400\n; Session life time in seconds, default is 86400 (1 day)\nSESSION_LIFE_TIME = 86400\n\n[picture]\nAVATAR_UPLOAD_PATH = data/avatars\n; Max Width and Height of uploaded avatars. This is to limit the amount of RAM\n; used when resizing the image.\nAVATAR_MAX_WIDTH = 4096\nAVATAR_MAX_HEIGHT = 3072\n; Chinese users can choose \"duoshuo\"\n; or a custom avatar source, like: http://cn.gravatar.com/avatar/\nGRAVATAR_SOURCE = gravatar\n; This value will always be true in offline mode.\nDISABLE_GRAVATAR = false\n; Federated avatar lookup uses DNS to discover avatar associated\n; with emails, see https://www.libravatar.org\n; This value will always be false in offline mode or when Gravatar is disabled.\nENABLE_FEDERATED_AVATAR = false\n\n[attachment]\n; Whether attachments are enabled. Defaults to `true`\nENABLED = true\n; Path for attachments. Defaults to `data/attachments`\nPATH = data/attachments\n; One or more allowed types, e.g. image/jpeg|image/png\nALLOWED_TYPES = image/jpeg|image/png|application/zip|application/gzip\n; Max size of each file. Defaults to 4MB\nMAX_SIZE = 4\n; Max number of files per upload. Defaults to 5\nMAX_FILES = 5\n\n[log]\nROOT_PATH =\n; Either \"console\", \"file\", \"conn\", \"smtp\" or \"database\", default is \"console\"\n; Use comma to separate multiple modes, e.g. \"console, file\"\nMODE = console\n; Buffer length of the channel, keep it as it is if you don't know what it is.\nBUFFER_LEN = 10000\n; Either \"Trace\", \"Debug\", \"Info\", \"Warn\", \"Error\", \"Critical\", default is \"Trace\"\nLEVEL = Critical\n\n; For \"console\" mode only\n[log.console]\nLEVEL =\n\n; For \"file\" mode only\n[log.file]\nLEVEL =\n; This enables automated log rotate(switch of following options), default is true\nLOG_ROTATE = true\n; Max number of lines in a single file, default is 1000000\nMAX_LINES = 1000000\n; Max size shift of a single file, default is 28 means 1 << 28, 256MB\nMAX_SIZE_SHIFT = 28\n; Segment log daily, default is true\nDAILY_ROTATE = true\n; delete the log file after n days, default is 7\nMAX_DAYS = 7\n\n; For \"conn\" mode only\n[log.conn]\nLEVEL =\n; Reconnect host for every single message, default is false\nRECONNECT_ON_MSG = false\n; Try to reconnect when connection is lost, default is false\nRECONNECT = false\n; Either \"tcp\", \"unix\" or \"udp\", default is \"tcp\"\nPROTOCOL = tcp\n; Host address\nADDR =\n\n; For \"smtp\" mode only\n[log.smtp]\nLEVEL =\n; Name displayed in mail title, default is \"Diagnostic message from server\"\nSUBJECT = Diagnostic message from server\n; Mail server\nHOST =\n; Mailer user name and password\nUSER =\n; Use PASSWD = `your password` for quoting if you use special characters in the password.\nPASSWD =\n; Receivers, can be one or more, e.g. 1@example.com,2@example.com\nRECEIVERS =\n\n; For \"database\" mode only\n[log.database]\nLEVEL =\n; Either \"mysql\" or \"postgres\"\nDRIVER =\n; Based on xorm, e.g.: root:root@localhost/gitea?charset=utf8\nCONN =\n\n[cron]\n; Enable running cron tasks periodically.\nENABLED = true\n; Run cron tasks when Gitea starts.\nRUN_AT_START = false\n\n; Update mirrors\n[cron.update_mirrors]\nSCHEDULE = @every 10m\n\n; Repository health check\n[cron.repo_health_check]\nSCHEDULE = @every 24h\nTIMEOUT = 60s\n; Arguments for command 'git fsck', e.g. \"--unreachable --tags\"\n; see more on http://git-scm.com/docs/git-fsck\nARGS =\n\n; Check repository statistics\n[cron.check_repo_stats]\nRUN_AT_START = true\nSCHEDULE = @every 24h\n\n; Clean up old repository archives\n[cron.archive_cleanup]\n; Whether to enable the job\nENABLED = true\n; Whether to always run at least once at start up time (if ENABLED)\nRUN_AT_START = true\n; Time interval for job to run\nSCHEDULE = @every 24h\n; Archives created more than OLDER_THAN ago are subject to deletion\nOLDER_THAN = 24h\n\n; Synchronize external user data (only LDAP user synchronization is supported)\n[cron.sync_external_users]\n; Synchronize external user data when starting server (default false)\nRUN_AT_START = false\n; Interval as a duration between each synchronization (default every 24h)\nSCHEDULE = @every 24h\n; Create new users, update existing user data and disable users that are not in external source anymore (default)\n;   or only create new users if UPDATE_EXISTING is set to false\nUPDATE_EXISTING = true\n\n[git]\n; Disables highlight of added and removed changes\nDISABLE_DIFF_HIGHLIGHT = false\n; Max number of lines allowed in a single file in diff view\nMAX_GIT_DIFF_LINES = 1000\n; Max number of allowed characters in a line in diff view\nMAX_GIT_DIFF_LINE_CHARACTERS = 5000\n; Max number of files shown in diff view\nMAX_GIT_DIFF_FILES = 100\n; Arguments for command 'git gc', e.g. \"--aggressive --auto\"\n; see more on http://git-scm.com/docs/git-gc/\nGC_ARGS =\n\n; Operation timeout in seconds\n[git.timeout]\nMIGRATE = 600\nMIRROR = 300\nCLONE = 300\nPULL = 300\nGC = 60\n\n[mirror]\n; Default interval as a duration between each check\nDEFAULT_INTERVAL = 8h\n; Min interval as a duration must be > 1m\nMIN_INTERVAL = 10m\n\n[api]\n; Enables Swagger. True or false; default is true.\nENABLE_SWAGGER = true\n; Max number of items in a page\nMAX_RESPONSE_ITEMS = 50\n\n[i18n]\nLANGS = en-US,zh-CN,zh-HK,zh-TW,de-DE,fr-FR,nl-NL,lv-LV,ru-RU,uk-UA,ja-JP,es-ES,pt-BR,pl-PL,bg-BG,it-IT,fi-FI,tr-TR,cs-CZ,sr-SP,sv-SE,ko-KR\nNAMES = English,简体中文,繁體中文（香港）,繁體中文（台灣）,Deutsch,français,Nederlands,latviešu,русский,Українська,日本語,español,português do Brasil,polski,български,italiano,suomi,Türkçe,čeština,српски,svenska,한국어\n\n; Used for datetimepicker\n[i18n.datelang]\nen-US = en\nzh-CN = zh\nzh-HK = zh-HK\nzh-TW = zh-TW\nde-DE = de\nfr-FR = fr\nnl-NL = nl\nlv-LV = lv\nru-RU = ru\nuk-UA = uk\nja-JP = ja\nes-ES = es\npt-BR = pt-BR\npl-PL = pl\nbg-BG = bg\nit-IT = it\nfi-FI = fi\ntr-TR = tr\ncs-CZ = cs-CZ\nsr-SP = sr\nsv-SE = sv\nko-KR = ko\n\n[U2F]\n; Two Factor authentication with security keys\n; https://developers.yubico.com/U2F/App_ID.html\n;APP_ID = %(PROTOCOL)s://%(DOMAIN)s:%(HTTP_PORT)s/\n; Comma seperated list of truisted facets\n;TRUSTED_FACETS = %(PROTOCOL)s://%(DOMAIN)s:%(HTTP_PORT)s/\n\n; Extension mapping to highlight class\n; e.g. .toml=ini\n[highlight.mapping]\n\n[other]\nSHOW_FOOTER_BRANDING = false\n; Show version information about Gitea and Go in the footer\nSHOW_FOOTER_VERSION = true\n; Show template execution time in the footer\nSHOW_FOOTER_TEMPLATE_LOAD_TIME = true\n\n[markup.asciidoc]\nENABLED = false\n; List of file extensions that should be rendered by an external command\nFILE_EXTENSIONS = .adoc,.asciidoc\n; External command to render all matching extensions\nRENDER_COMMAND = \"asciidoc --out-file=- -\"\n; Don't pass the file on STDIN, pass the filename as argument instead.\nIS_INPUT_FILE = false\n\n[metrics]\n; Enables metrics endpoint. True or false; default is false.\nENABLED = false\n; If you want to add authorization, specify a token here\nTOKEN ="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-mariadb",
      "labels": {
        "app": "mariadb",
        "component": "master",
        "chart": "mariadb-7.3.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "mysql",
          "port": 3306,
          "targetPort": "mysql"
        }
      ],
      "selector": {
        "app": "mariadb",
        "component": "master",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-gitea-http",
      "labels": {
        "app": "release-name-gitea",
        "chart": "gitea-1.3.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "http",
          "port": 3000,
          "targetPort": 3000
        }
      ],
      "selector": {
        "app": "release-name-gitea"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-gitea-ssh",
      "labels": {
        "app": "release-name-gitea",
        "chart": "gitea-1.3.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "LoadBalancer",
      "ports": [
        {
          "name": "ssh",
          "port": 22,
          "targetPort": "ssh"
        }
      ],
      "selector": {
        "app": "release-name-gitea"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-gitea",
      "labels": {
        "app": "release-name-gitea",
        "chart": "gitea-1.3.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "release-name-gitea"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-gitea"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "gitea",
              "image": "gitea/gitea:1.11.5",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "DATABASE_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-mariadb",
                      "key": "mariadb-password"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "name": "ssh",
                  "containerPort": 22
                },
                {
                  "name": "http",
                  "containerPort": 3000
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": "http"
                },
                "initialDelaySeconds": 200,
                "timeoutSeconds": 1,
                "periodSeconds": 10,
                "successThreshold": 1,
                "failureThreshold": 10
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": "http"
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "resources": {
                "limits": {
                  "cpu": 1,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "500Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "gitea-data",
                  "mountPath": "/data"
                },
                {
                  "name": "gitea-config",
                  "mountPath": "/etc/gitea"
                }
              ]
            },
            {
              "name": "memcached",
              "image": "memcached:1.5.19-alpine",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "memcached",
                "-m 64",
                "-o",
                "modern",
                "-v"
              ],
              "ports": [
                {
                  "name": "memcache",
                  "containerPort": 11211
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": "memcache"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": "memcache"
                },
                "initialDelaySeconds": 5,
                "timeoutSeconds": 1
              },
              "securityContext": {
                "runAsUser": 1000
              },
              "resources": {
                "requests": {
                  "cpu": "50m",
                  "memory": "64Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "initContainers": [
            {
              "name": "init",
              "image": "gitea/gitea:1.11.5",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "MARIADB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-mariadb",
                      "key": "mariadb-password"
                    }
                  }
                },
                {
                  "name": "SCRIPT",
                  "value": "mkdir -p /datatmp/gitea/conf\nif [ ! -f /datatmp/gitea/conf/app.ini ]; then\n  sed \"s/MARIADB_PASSWORD/${MARIADB_PASSWORD}/g\" < /etc/gitea/app.ini > /datatmp/gitea/conf/app.ini\nfi"
                }
              ],
              "command": [
                "/bin/sh",
                "-c",
                "mkdir -p /datatmp/gitea/conf\nif [ ! -f /datatmp/gitea/conf/app.ini ]; then\n  sed \"s/MARIADB_PASSWORD/${MARIADB_PASSWORD}/g\" < /etc/gitea/app.ini > /datatmp/gitea/conf/app.ini\nfi"
              ],
              "volumeMounts": [
                {
                  "name": "gitea-data",
                  "mountPath": "/datatmp"
                },
                {
                  "name": "gitea-config",
                  "mountPath": "/etc/gitea"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "gitea-data",
              "emptyDir": {}
            },
            {
              "name": "gitea-config",
              "configMap": {
                "name": "release-name-gitea"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-mariadb",
      "labels": {
        "app": "mariadb",
        "chart": "mariadb-7.3.0",
        "release": "release-name",
        "heritage": "Helm",
        "component": "master"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "mariadb",
          "release": "release-name",
          "component": "master"
        }
      },
      "serviceName": "release-name-mariadb",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "mariadb",
            "chart": "mariadb-7.3.0",
            "release": "release-name",
            "component": "master"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "securityContext": {
            "fsGroup": 1001,
            "runAsUser": 1001
          },
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "weight": 1,
                  "podAffinityTerm": {
                    "topologyKey": "kubernetes.io/hostname",
                    "labelSelector": {
                      "matchLabels": {
                        "app": "mariadb",
                        "release": "release-name"
                      }
                    }
                  }
                }
              ]
            }
          },
          "initContainers": null,
          "containers": [
            {
              "name": "mariadb",
              "image": "docker.io/bitnami/mariadb:10.3.20-debian-9-r19",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "MARIADB_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-mariadb",
                      "key": "mariadb-root-password"
                    }
                  }
                },
                {
                  "name": "MARIADB_USER",
                  "value": "gitea"
                },
                {
                  "name": "MARIADB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-mariadb",
                      "key": "mariadb-password"
                    }
                  }
                },
                {
                  "name": "MARIADB_DATABASE",
                  "value": "gitea"
                }
              ],
              "ports": [
                {
                  "name": "mysql",
                  "containerPort": 3306
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\" ]; then\n    password_aux=$(cat $MARIADB_ROOT_PASSWORD_FILE)\nfi\nmysqladmin status -uroot -p$password_aux\n"
                  ]
                },
                "initialDelaySeconds": 120,
                "periodSeconds": 10,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\" ]; then\n    password_aux=$(cat $MARIADB_ROOT_PASSWORD_FILE)\nfi\nmysqladmin status -uroot -p$password_aux\n"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/bitnami/mariadb"
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/mariadb/conf/my.cnf",
                  "subPath": "my.cnf"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-mariadb"
              }
            },
            {
              "name": "data",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-gitea",
      "labels": {
        "app": "release-name-gitea",
        "chart": "gitea-1.3.3",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "rules": [
        {
          "host": "gitea.local",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "release-name-gitea-http",
                  "servicePort": 3000
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-mariadb-test-eygsf",
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "initContainers": [
        {
          "name": "test-framework",
          "image": "docker.io/dduportal/bats:0.4.0",
          "command": [
            "bash",
            "-c",
            "set -ex\n# copy bats to tools dir\ncp -R /usr/local/libexec/ /tools/bats/\n"
          ],
          "volumeMounts": [
            {
              "mountPath": "/tools",
              "name": "tools"
            }
          ]
        }
      ],
      "containers": [
        {
          "name": "mariadb-test",
          "image": "docker.io/bitnami/mariadb:10.3.20-debian-9-r19",
          "imagePullPolicy": "IfNotPresent",
          "command": [
            "/tools/bats/bats",
            "-t",
            "/tests/run.sh"
          ],
          "env": [
            {
              "name": "MARIADB_ROOT_PASSWORD",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-mariadb",
                  "key": "mariadb-root-password"
                }
              }
            }
          ],
          "volumeMounts": [
            {
              "mountPath": "/tests",
              "name": "tests",
              "readOnly": true
            },
            {
              "mountPath": "/tools",
              "name": "tools"
            }
          ]
        }
      ],
      "volumes": [
        {
          "name": "tests",
          "configMap": {
            "name": "release-name-mariadb-tests"
          }
        },
        {
          "name": "tools",
          "emptyDir": {}
        }
      ],
      "restartPolicy": "Never"
    }
  }
]