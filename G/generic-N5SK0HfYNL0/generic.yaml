apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-generic
  labels:
    helm.sh/chart: generic-1.0.2
    app.kubernetes.io/name: generic
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-generic
  labels:
    helm.sh/chart: generic-1.0.2
    app.kubernetes.io/name: generic
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: generic
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-generic
  labels:
    helm.sh/chart: generic-1.0.2
    app.kubernetes.io/name: generic
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: generic
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: generic
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-generic
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: generic
          securityContext:
            capabilities:
              drop:
                - SETPCAP
                - MKNOD
                - AUDIT_WRITE
                - CHOWN
                - NET_RAW
                - DAC_OVERRIDE
                - FOWNER
                - FSETID
                - KILL
                - SETGID
                - SETUID
                - NET_BIND_SERVICE
                - SYS_CHROOT
                - SETFCAP
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          image: :1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
          resources:
            seccompProfile:
              type: RuntimeDefault
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
