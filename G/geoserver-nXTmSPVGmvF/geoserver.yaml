apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-geoserver
  labels:
    helm.sh/chart: geoserver-0.2.0
    app.kubernetes.io/name: geoserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.19.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-geoserver
  labels:
    helm.sh/chart: geoserver-0.2.0
    app.kubernetes.io/name: geoserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.19.0
    app.kubernetes.io/managed-by: Helm
data:
  GEOSERVER_ADMIN_USER: YWRtaW4=
  GEOSERVER_ADMIN_PASSWORD: Z2Vvc2VydmVy
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-geoserver
  labels:
    helm.sh/chart: geoserver-0.2.0
    app.kubernetes.io/name: geoserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.19.0
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-geoserver
  labels:
    helm.sh/chart: geoserver-0.2.0
    app.kubernetes.io/name: geoserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.19.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: geoserver
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-geoserver
  labels:
    helm.sh/chart: geoserver-0.2.0
    app.kubernetes.io/name: geoserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.19.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: geoserver
      app.kubernetes.io/instance: release-name
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: geoserver
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-geoserver
      securityContext: {}
      containers:
        - name: geoserver
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: kartoza/geoserver:2.19.0
          imagePullPolicy: IfNotPresent
          env:
            - name: GEOSERVER_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-geoserver
                  key: GEOSERVER_ADMIN_USER
            - name: GEOSERVER_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-geoserver
                  key: GEOSERVER_ADMIN_PASSWORD
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: release-name-geoserver
              mountPath: /opt/geoserver/data_dir
          startupProbe:
            httpGet:
              path: /geoserver/index.html
              port: http
            failureThreshold: 10
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /geoserver/index.html
              port: http
          readinessProbe:
            httpGet:
              path: /geoserver/index.html
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: release-name-geoserver
          persistentVolumeClaim:
            claimName: release-name-geoserver
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-geoserver-test-connection
  labels:
    helm.sh/chart: geoserver-0.2.0
    app.kubernetes.io/name: geoserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.19.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-geoserver:8080
  restartPolicy: Never
