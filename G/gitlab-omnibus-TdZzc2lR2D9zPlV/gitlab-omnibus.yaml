apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gitlab-omnibus-backup
  namespace: TdZzc2lR2D9zPlV
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-gitlab-omnibus
  namespace: TdZzc2lR2D9zPlV
  labels:
    helm.sh/chart: gitlab-omnibus-0.0.18
    app.kubernetes.io/name: gitlab-omnibus
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 13.10.3-ee.0
    app.kubernetes.io/managed-by: Helm
data:
  gitlab.rb: ZXh0ZXJuYWxfdXJsICdodHRwczovL2dpdGxhYi5leGFtcGxlLmNvbScKZ2l0bGFiX3JhaWxzWydpbml0aWFsX3Jvb3RfcGFzc3dvcmQnXSA9IEVOVlsnR0lUTEFCX0lOSVRJQUxfUk9PVF9QQVNTV09SRCdd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-gitlab-omnibus-backup
  namespace: TdZzc2lR2D9zPlV
rules:
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-gitlab-omnibus-backup
  namespace: TdZzc2lR2D9zPlV
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-gitlab-omnibus-backup
subjects:
  - kind: ServiceAccount
    name: release-name-gitlab-omnibus-backup
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-gitlab-omnibus-monitoring
  namespace: TdZzc2lR2D9zPlV
  labels:
    helm.sh/chart: gitlab-omnibus-0.0.18
    app.kubernetes.io/name: gitlab-omnibus
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 13.10.3-ee.0
    app.kubernetes.io/managed-by: Helm
    component: ui
spec:
  ports:
    - name: http-gitlab-exp
      port: 9168
      targetPort: http-gitlab-exp
    - name: http-node-exp
      port: 9100
      targetPort: http-node-exp
    - name: http-nginx-exp
      port: 8060
      targetPort: http-nginx-exp
    - name: https
      port: 443
      targetPort: https
  selector:
    app.kubernetes.io/name: gitlab-omnibus
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-gitlab-omnibus
  namespace: TdZzc2lR2D9zPlV
  labels:
    helm.sh/chart: gitlab-omnibus-0.0.18
    app.kubernetes.io/name: gitlab-omnibus
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 13.10.3-ee.0
    app.kubernetes.io/managed-by: Helm
    component: monitoring
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
    - name: ssh
      port: 22
      targetPort: ssh
  selector:
    app.kubernetes.io/name: gitlab-omnibus
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-gitlab-omnibus
  namespace: TdZzc2lR2D9zPlV
  labels:
    helm.sh/chart: gitlab-omnibus-0.0.18
    app.kubernetes.io/name: gitlab-omnibus
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 13.10.3-ee.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gitlab-omnibus
      app.kubernetes.io/instance: release-name
  serviceName: release-name-gitlab-omnibus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gitlab-omnibus
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: 9a9b35ee4fb857ffea2de4e6c04b9c03fcd9db0f6f4b12551737c1d6dfb7771c
    spec:
      serviceAccountName: default
      securityContext: {}
      containers:
        - name: gitlab-omnibus
          securityContext:
            privileged: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: gitlab/gitlab-ee:13.10.3-ee.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: ssh
              containerPort: 22
            - name: http-gitlab-exp
              containerPort: 9168
            - name: http-node-exp
              containerPort: 9100
            - name: http-nginx-exp
              containerPort: 8060
          livenessProbe:
            httpGet:
              path: /-/liveness
              port: http
          readinessProbe:
            httpGet:
              path: /-/readiness
              port: http
          startupProbe:
            failureThreshold: 300
            httpGet:
              path: /-/readiness
              port: http
            initialDelaySeconds: 30
            periodSeconds: 2
          resources:
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: GITLAB_OMNIBUS_CONFIG
              value: from_file "/etc/gitlab-provisioned-config.rb"
          volumeMounts:
            - name: data
              mountPath: /var/opt/gitlab
            - name: logs
              mountPath: /var/log/gitlab
            - name: config
              mountPath: /etc/gitlab
            - name: provisioned-config
              mountPath: /etc/gitlab-provisioned-config.rb
              subPath: gitlab.rb
      volumes:
        - name: provisioned-config
          secret:
            secretName: release-name-gitlab-omnibus
            items:
              - key: gitlab.rb
                path: gitlab.rb
                mode: 292
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: config
        - emptyDir: {}
          name: logs
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-gitlab-omnibus-backup
  namespace: TdZzc2lR2D9zPlV
  labels:
    helm.sh/chart: gitlab-omnibus-0.0.18
    app.kubernetes.io/name: gitlab-omnibus
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 13.10.3-ee.0
    app.kubernetes.io/managed-by: Helm
    component: backup
spec:
  concurrencyPolicy: Forbid
  schedule: '@daily'
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: gitlab-omnibus
        app.kubernetes.io/instance: release-name
        component: backup
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: gitlab-omnibus
            app.kubernetes.io/instance: release-name
            component: backup
        spec:
          serviceAccountName: release-name-gitlab-omnibus-backup
          restartPolicy: Never
          containers:
            - name: gitlab-omnibus
              image: daedalusproject/base_kubectl
              command:
                - kubectl
              args:
                - exec
                - sts/release-name-gitlab-omnibus
                - -ndefault
                - --
                - gitlab-backup
                - create
                - SKIP=uploads,builds,artifacts,registry,pages
                - GZIP_RSYNCABLE=yes
                - STRATEGY=copy
              resources:
                requests:
                  cpu: 10m
                  memory: 32Mi
