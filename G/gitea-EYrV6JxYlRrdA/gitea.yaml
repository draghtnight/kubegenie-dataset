apiVersion: v1
kind: Secret
metadata:
  name: release-name-memcached
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: memcached-4.2.20
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  memcached-password: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.7.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgresql-password: Z2l0ZWE=
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-gitea
  labels:
    helm.sh/chart: gitea-2.1.3
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.13.0
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  app.ini: |2-
    [cache]
    ADAPTER = memcache
    ENABLED = true
    HOST = release-name-memcached.default.svc.cluster.local:11211

    [database]
    DB_TYPE = postgres
    HOST = release-name-postgresql.default.svc.cluster.local:5432
    NAME = gitea
    PASSWD = gitea
    USER = gitea

    [security]
    INSTALL_LOCK = true

    [server]
    APP_DATA_PATH = /data
    DOMAIN = git.example.com
    HTTP_PORT = 3000
    PROTOCOL = http
    ROOT_URL = http://git.example.com
    SSH_DOMAIN = git.example.com
    SSH_LISTEN_PORT = 22
    SSH_PORT = 22
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-gitea-init
  labels:
    helm.sh/chart: gitea-2.1.3
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.13.0
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  init_gitea.sh: |-
    #!/bin/bash
    mkdir -p /data/git/.ssh
    chmod -R 700 /data/git/.ssh
    mkdir -p /data/gitea/conf
    cp /etc/gitea/conf/app.ini /data/gitea/conf/app.ini
    chmod a+rwx /data/gitea/conf/app.ini
    nc -v -w2 -z release-name-postgresql 5432 && \
    su git -c ' \
    set -x; \
    gitea migrate; \
    gitea admin create-user --username  gitea_admin --password 'r8sA8CPHD9!bt6d' --email gitea@local.domain --admin --must-change-password=false \
    || \
    gitea admin change-password --username gitea_admin --password 'r8sA8CPHD9!bt6d'; \
    '
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-memcached
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: memcached-4.2.20
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: memcache
      port: 11211
      targetPort: memcache
      nodePort: null
  selector:
    app.kubernetes.io/name: memcached
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.7.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.7.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: master
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-gitea-http
  labels:
    helm.sh/chart: gitea-2.1.3
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.13.0
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  selector:
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-gitea-ssh
  labels:
    helm.sh/chart: gitea-2.1.3
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.13.0
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: ssh
      port: 22
      targetPort: 22
      protocol: TCP
  selector:
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-memcached
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: memcached-4.2.20
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: memcached
      app.kubernetes.io/instance: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: memcached
        helm.sh/chart: memcached-4.2.20
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
        - name: memcached
          image: docker.io/bitnami/memcached:1.6.6-debian-10-r54
          imagePullPolicy: IfNotPresent
          args:
            - /run.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MEMCACHED_USERNAME
              value: ""
            - name: MEMCACHED_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-memcached
                  key: memcached-password
          ports:
            - name: memcache
              containerPort: 11211
          livenessProbe:
            tcpSocket:
              port: memcache
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: memcache
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
      volumes:
        - name: tmp
          emptyDir: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.7.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: master
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-9.7.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: master
    spec:
      securityContext:
        fsGroup: 1001
      containers:
        - name: release-name-postgresql
          image: docker.io/bitnami/postgresql:11.9.0-debian-10-r34
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          securityContext:
            runAsUser: 11935
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_USER
              value: gitea
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: gitea
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "gitea" -d "dbname=gitea" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "gitea" -d "dbname=gitea" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: null
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-gitea
  labels:
    helm.sh/chart: gitea-2.1.3
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.13.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gitea
      app.kubernetes.io/instance: release-name
  serviceName: release-name-gitea
  template:
    metadata:
      annotations:
        checksum/config: ebc577a7ee0c388d5206c380d2c11b1a8af5d9bffe100e7d01999b6ecb2bc0da
      labels:
        app.kubernetes.io/name: gitea
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: init
          image: gitea/gitea:1.13.0
          command:
            - /usr/sbin/init_gitea.sh
          volumeMounts:
            - name: init
              mountPath: /usr/sbin
            - name: config
              mountPath: /etc/gitea/conf
            - name: data
              mountPath: /data
      terminationGracePeriodSeconds: 60
      containers:
        - name: gitea
          image: gitea/gitea:1.13.0
          imagePullPolicy: Always
          env:
            - name: SSH_LISTEN_PORT
              value: "22"
            - name: SSH_PORT
              value: "22"
          ports:
            - name: ssh
              containerPort: 22
            - name: http
              containerPort: 3000
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 200
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: init
          secret:
            secretName: release-name-gitea-init
            defaultMode: 511
        - name: config
          secret:
            secretName: release-name-gitea
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-gitea-test-connection
  labels:
    helm.sh/chart: gitea-2.1.3
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.13.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-gitea-http:3000
  restartPolicy: Never
