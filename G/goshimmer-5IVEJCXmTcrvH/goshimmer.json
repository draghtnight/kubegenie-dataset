[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-goshimmer",
      "labels": {
        "helm.sh/chart": "goshimmer-0.2.14",
        "app.kubernetes.io/name": "goshimmer",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v0.8.6",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-goshimmer-dashboard-credentials",
      "labels": {
        "helm.sh/chart": "goshimmer-0.2.14",
        "app.kubernetes.io/name": "goshimmer",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v0.8.6",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "username": "Z29zaGltbWVy",
      "password": "Z29zaGltbWVy"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-goshimmer",
      "labels": {
        "app.kubernetes.io/component": "http",
        "helm.sh/chart": "goshimmer-0.2.14",
        "app.kubernetes.io/name": "goshimmer",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v0.8.6",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "selector": {
        "app.kubernetes.io/name": "goshimmer",
        "app.kubernetes.io/instance": "release-name"
      },
      "ports": [
        {
          "name": "dashboard",
          "port": 8081,
          "targetPort": "dashboard"
        },
        {
          "name": "api",
          "port": 8080,
          "targetPort": "api"
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-goshimmer-network",
      "labels": {
        "app.kubernetes.io/component": "network",
        "helm.sh/chart": "goshimmer-0.2.14",
        "app.kubernetes.io/name": "goshimmer",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v0.8.6",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "NodePort",
      "selector": {
        "app.kubernetes.io/name": "goshimmer",
        "app.kubernetes.io/instance": "release-name"
      },
      "ports": [
        {
          "name": "gossip",
          "port": 14666,
          "nodePort": 30006,
          "targetPort": "gossip"
        },
        {
          "name": "fpc",
          "port": 10895,
          "nodePort": 30007,
          "targetPort": "fpc"
        },
        {
          "name": "txstream",
          "port": 5000,
          "nodePort": 30008,
          "targetPort": "txstream"
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-goshimmer-network-udp",
      "labels": {
        "app.kubernetes.io/component": "network-udp",
        "helm.sh/chart": "goshimmer-0.2.14",
        "app.kubernetes.io/name": "goshimmer",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v0.8.6",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "NodePort",
      "selector": {
        "app.kubernetes.io/name": "goshimmer",
        "app.kubernetes.io/instance": "release-name"
      },
      "ports": [
        {
          "name": "autopeering",
          "port": 14626,
          "nodePort": 30005,
          "protocol": "UDP",
          "targetPort": "autopeering"
        }
      ],
      "externalTrafficPolicy": "Local"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-goshimmer",
      "labels": {
        "helm.sh/chart": "goshimmer-0.2.14",
        "app.kubernetes.io/name": "goshimmer",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v0.8.6",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "goshimmer",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "strategy": {
        "type": "Recreate"
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/secrets": "35391e2d6382c29bb3ee145864202736eeef08bffaa3ce2281f6cad6c2b16321"
          },
          "labels": {
            "app.kubernetes.io/name": "goshimmer",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-goshimmer",
          "terminationGracePeriodSeconds": 150,
          "containers": [
            {
              "name": "goshimmer",
              "image": "iotaledger/goshimmer:v0.8.6",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--skip-config=true",
                "--logger.level=info",
                "--node.enablePlugins=networkdelay,spammer,prometheus",
                "--node.disablePlugins=",
                "--dashboard.basicAuth.enabled=true"
              ],
              "ports": [
                {
                  "name": "api",
                  "containerPort": 30001
                },
                {
                  "name": "dashboard",
                  "containerPort": 30002
                },
                {
                  "name": "profiling",
                  "containerPort": 30003
                },
                {
                  "name": "prometheus",
                  "containerPort": 30004
                },
                {
                  "name": "autopeering",
                  "protocol": "UDP",
                  "containerPort": 30005
                },
                {
                  "name": "gossip",
                  "containerPort": 30006
                },
                {
                  "name": "fpc",
                  "containerPort": 30007
                },
                {
                  "name": "txstream",
                  "containerPort": 30008
                }
              ],
              "env": [
                {
                  "name": "WEBAPI_BINDADDRESS",
                  "value": "0.0.0.0:30001"
                },
                {
                  "name": "DASHBOARD_BINDADDRESS",
                  "value": "0.0.0.0:30002"
                },
                {
                  "name": "PROFILING_BINDADDRESS",
                  "value": "0.0.0.0:30003"
                },
                {
                  "name": "PROMETHEUS_BINDADDRESS",
                  "value": "0.0.0.0:30004"
                },
                {
                  "name": "AUTOPEERING_BINDADDRESS",
                  "value": "0.0.0.0:30005"
                },
                {
                  "name": "GOSSIP_BINDADDRESS",
                  "value": "0.0.0.0:30006"
                },
                {
                  "name": "FPC_BINDADDRESS",
                  "value": "0.0.0.0:30007"
                },
                {
                  "name": "TXSTREAM_BINDADDRESS",
                  "value": "0.0.0.0:30008"
                },
                {
                  "name": "GIN_MODE",
                  "value": "release"
                },
                {
                  "name": "DASHBOARD_BASICAUTH_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-goshimmer-dashboard-credentials",
                      "key": "username"
                    }
                  }
                },
                {
                  "name": "DASHBOARD_BASICAUTH_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-goshimmer-dashboard-credentials",
                      "key": "password"
                    }
                  }
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/tmp/mainnetdb",
                  "name": "database"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "database",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  }
]