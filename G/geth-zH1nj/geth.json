[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "helm.sh/chart": "geth-0.2.1",
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "zH1nj"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-geth-env",
      "labels": {
        "helm.sh/chart": "geth-0.2.1",
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": null
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "helm.sh/chart": "geth-0.2.1",
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "geth.toml": "[Node.P2P]\nDialRatio = 3\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "helm.sh/chart": "geth-0.2.1",
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "helm.sh/chart": "geth-0.2.1",
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-geth"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-geth",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "helm.sh/chart": "geth-0.2.1",
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "helm.sh/chart": "geth-0.2.1",
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-geth"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-geth"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-geth-headless",
      "labels": {
        "helm.sh/chart": "geth-0.2.1",
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "clusterIP": "None",
      "ports": [
        {
          "port": 30303,
          "targetPort": "p2p-tcp",
          "protocol": "TCP",
          "name": "p2p-tcp"
        },
        {
          "port": 30303,
          "targetPort": "p2p-udp",
          "protocol": "UDP",
          "name": "p2p-udp"
        },
        {
          "port": 8545,
          "targetPort": "http-rpc",
          "protocol": "TCP",
          "name": "http-rpc"
        },
        {
          "port": 8546,
          "targetPort": "ws-rpc",
          "protocol": "TCP",
          "name": "ws-rpc"
        },
        {
          "port": 6060,
          "targetPort": "metrics",
          "protocol": "TCP",
          "name": "metrics"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "helm.sh/chart": "geth-0.2.1",
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 30303,
          "targetPort": "p2p-tcp",
          "protocol": "TCP",
          "name": "p2p-tcp"
        },
        {
          "port": 30303,
          "targetPort": "p2p-udp",
          "protocol": "UDP",
          "name": "p2p-udp"
        },
        {
          "port": 8545,
          "targetPort": "http-rpc",
          "protocol": "TCP",
          "name": "http-rpc"
        },
        {
          "port": 8546,
          "targetPort": "ws-rpc",
          "protocol": "TCP",
          "name": "ws-rpc"
        },
        {
          "port": 6060,
          "targetPort": "metrics",
          "protocol": "TCP",
          "name": "metrics"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "helm.sh/chart": "geth-0.2.1",
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {}
    },
    "spec": {
      "podManagementPolicy": "OrderedReady",
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "geth",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "serviceName": "release-name-geth-headless",
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "geth",
            "app.kubernetes.io/instance": "release-name"
          },
          "annotations": {
            "checksum/config": "ee746aaf2d5c091a8d7b6a21e6484d49c664d487c0f5be7a195425f0aa9c30b1",
            "checksum/secrets": "ed317f8ccffc6fe7ce9bd5c1ce45de7bfdc43b3b1f1aa8a38f6136dc2c950751"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-geth",
          "securityContext": {
            "fsGroup": 10001,
            "runAsGroup": 10001,
            "runAsNonRoot": true,
            "runAsUser": 10001
          },
          "initContainers": [
            {
              "name": "init-chown-data",
              "image": "busybox:1.34.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsNonRoot": false,
                "runAsUser": 0
              },
              "command": [
                "chown",
                "-R",
                "10001:10001",
                "/data"
              ],
              "resources": {},
              "volumeMounts": [
                {
                  "name": "storage",
                  "mountPath": "/data"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "geth",
              "image": "ethereum/client-go:latest",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-ac",
                "exec geth --datadir=/data --config=/config/geth.toml --nat=extip:$(POD_IP) --port=30303 --http --http.addr=0.0.0.0 --http.port=8545 --http.vhosts=* --http.corsdomain=* --ws --ws.addr=0.0.0.0 --ws.port=8546 --ws.origins=* --metrics --metrics.addr=0.0.0.0 --metrics.port=6060\n"
              ],
              "volumeMounts": [
                {
                  "name": "storage",
                  "mountPath": "/data"
                },
                {
                  "name": "config",
                  "mountPath": "/config",
                  "readOnly": true
                }
              ],
              "ports": [
                {
                  "name": "p2p-tcp",
                  "containerPort": 30303,
                  "protocol": "TCP"
                },
                {
                  "name": "p2p-udp",
                  "containerPort": 30303,
                  "protocol": "UDP"
                },
                {
                  "name": "http-rpc",
                  "containerPort": 8545,
                  "protocol": "TCP"
                },
                {
                  "name": "ws-rpc",
                  "containerPort": 8546,
                  "protocol": "TCP"
                },
                {
                  "name": "metrics",
                  "containerPort": 6060,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 60,
                "periodSeconds": 120,
                "tcpSocket": {
                  "port": "http-rpc"
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "tcpSocket": {
                  "port": "http-rpc"
                }
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                },
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "POD_IP",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "status.podIP"
                    }
                  }
                }
              ]
            }
          ],
          "nodeSelector": {},
          "affinity": {},
          "tolerations": [],
          "terminationGracePeriodSeconds": 30,
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-geth"
              }
            },
            {
              "name": "storage",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-geth-test-connection",
      "labels": {
        "helm.sh/chart": "geth-0.2.1",
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "curl",
          "image": "curlimages/curl",
          "command": [
            "curl"
          ],
          "args": [
            "--location",
            "--request",
            "POST",
            "release-name-geth:8545/",
            "--header",
            "Content-Type: application/json",
            "--data-raw",
            "{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":67}"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]