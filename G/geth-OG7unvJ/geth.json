[
  {
    "apiVersion": "policy/v1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "app.kubernetes.io/name": "geth",
        "helm.sh/chart": "geth-1.0.6",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "maxUnavailable": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "geth",
          "app.kubernetes.io/instance": "release-name"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "app.kubernetes.io/name": "geth",
        "helm.sh/chart": "geth-1.0.6",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "app.kubernetes.io/name": "geth",
        "helm.sh/chart": "geth-1.0.6",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "app.kubernetes.io/name": "geth",
        "helm.sh/chart": "geth-1.0.6",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-geth"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-geth",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "app.kubernetes.io/name": "geth",
        "helm.sh/chart": "geth-1.0.6",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "app.kubernetes.io/name": "geth",
        "helm.sh/chart": "geth-1.0.6",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-geth"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-geth"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "app.kubernetes.io/name": "geth",
        "helm.sh/chart": "geth-1.0.6",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "selector": {
        "app.kubernetes.io/name": "geth",
        "app.kubernetes.io/instance": "release-name"
      },
      "sessionAffinity": "ClientIP",
      "sessionAffinityConfig": {
        "clientIP": {
          "timeoutSeconds": 86400
        }
      },
      "type": "ClusterIP",
      "ports": [
        {
          "name": "rpc",
          "port": 8545,
          "targetPort": "rpc"
        },
        {
          "name": "ws",
          "port": 8546,
          "targetPort": "ws"
        },
        {
          "name": "metrics",
          "port": 6060,
          "targetPort": "metrics"
        }
      ]
    }
  },
  {
    "kind": "StatefulSet",
    "apiVersion": "apps/v1",
    "metadata": {
      "name": "release-name-geth",
      "labels": {
        "app.kubernetes.io/name": "geth",
        "helm.sh/chart": "geth-1.0.6",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "geth",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "serviceName": "release-name-geth",
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "geth",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001,
            "runAsUser": 1001
          },
          "serviceAccountName": "release-name-geth",
          "priorityClassName": "",
          "initContainers": [
            {
              "name": "init-chown",
              "image": "busybox:1.34",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 0
              },
              "command": [
                "chown",
                "-R",
                "1001:1001",
                "/data"
              ],
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/data"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "node",
              "image": "ethereum/client-go:v1.10.17",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-ac",
                "exec geth --http --http.addr=0.0.0.0 --http.port=8545 --http.corsdomain= --http.vhosts=* --http.api=web3,eth,net --nat=extip:$(POD_IP) --port=30303 --ws --ws.addr=0.0.0.0 --ws.port=8546 --ws.origins=* --ws.api=web3,eth,net --datadir=/data/ethereum --ethash.dagdir=/data/ethereum/.ethash --ipcdisable --mainnet \"--syncmode=snap\" \"--metrics\" \"--pprof\" \"--pprof.addr=0.0.0.0\" \"--pprof.port=6060\"\n"
              ],
              "env": [
                {
                  "name": "POD_IP",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "status.podIP"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "name": "rpc",
                  "containerPort": 8545
                },
                {
                  "name": "ws",
                  "containerPort": 8546
                },
                {
                  "name": "metrics",
                  "containerPort": 6060
                }
              ],
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/data/ethereum"
                }
              ]
            },
            {
              "name": "sidecar",
              "image": "europe-west4-docker.pkg.dev/stakewiselabs/public/ethnode-sidecar:v1.0.3",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "SERVER_BINDADDR",
                  "value": "0.0.0.0:3000"
                },
                {
                  "name": "CLIENT_PORT",
                  "value": "8545"
                }
              ],
              "ports": [
                {
                  "containerPort": 3000,
                  "name": "sidecar",
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 900,
                "timeoutSeconds": 3,
                "periodSeconds": 30,
                "failureThreshold": 3,
                "successThreshold": 1,
                "httpGet": {
                  "path": "/eth1/liveness",
                  "port": "sidecar",
                  "scheme": "HTTP"
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 30,
                "timeoutSeconds": 3,
                "periodSeconds": 30,
                "failureThreshold": 30,
                "successThreshold": 1,
                "httpGet": {
                  "path": "/eth1/readiness",
                  "port": "sidecar",
                  "scheme": "HTTP"
                }
              }
            }
          ],
          "volumes": null
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data",
            "labels": {
              "app.kubernetes.io/name": "geth",
              "app.kubernetes.io/instance": "release-name"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "storageClassName": null,
            "resources": {
              "requests": {
                "storage": "900Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-geth-test-connection",
      "labels": {
        "app.kubernetes.io/name": "geth",
        "helm.sh/chart": "geth-1.0.6",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-geth:8545"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]