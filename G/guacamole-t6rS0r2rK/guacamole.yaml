apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-guacamole-daemon
  labels:
    helm.sh/chart: guacamole-0.3.0
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: guacd
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: guacamole
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: guacd
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: guacamole
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: frontend
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-guacamole
  labels:
    helm.sh/chart: guacamole-0.3.0
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-guacamole-frontend
  labels:
    helm.sh/chart: guacamole-0.3.0
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: frontend
data:
  POSTGRES_PASSWORD: ""
  POSTGRES_USER: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-guacamole-frontend
  labels:
    helm.sh/chart: guacamole-0.3.0
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: frontend
data:
  setup-proxy-valve.sh: |
    #!/bin/sh
    set -e # Fail on error

    if [ -n "$GUACAMOLE_INTERNAL_PROXIES" ]; then

      echo 'Setting up the proxy valve'

      GUACAMOLE_PROXY_IP_HEADER=${GUACAMOLE_PROXY_IP_HEADER:-X-FORWARDED-FOR}
      GUACAMOLE_PROXY_PROTOCOL_HEADER=${GUACAMOLE_PROXY_PROTOCOL_HEADER:-X-FORWARDED-PROTO}
      GUACAMOLE_PROXY_BY_HEADER=${GUACAMOLE_PROXY_BY_HEADER:-X-FORWARDED-BY}

      cat > /tmp/valve.xml <<EOF
            <Valve className="org.apache.catalina.valves.RemoteIpValve"
              internalProxies="$GUACAMOLE_INTERNAL_PROXIES"
              remoteIpHeader="$GUACAMOLE_PROXY_IP_HEADER"
              remoteIpProxiesHeader="$GUACAMOLE_PROXY_BY_HEADER"
              protocolHeader="$GUACAMOLE_PROXY_PROTOCOL_HEADER" />
    EOF

      LINEN=$(grep -n '</Host>' /usr/local/tomcat/conf/server.xml | cut -d ':' -f 1)
      head -n "$(( LINEN - 1 ))" < /usr/local/tomcat/conf/server.xml > /tmp/head.xml
      tail -n "+$LINEN" < /usr/local/tomcat/conf/server.xml > /tmp/tail.xml

      cat /tmp/head.xml /tmp/valve.xml /tmp/tail.xml > /usr/local/tomcat/conf/server.xml
      cat /usr/local/tomcat/conf/server.xml

      rm -f /tmp/*.xml
    fi
  startup.sh: |
    #!/bin/sh
    set -e

    /opt/guacamole-scripts/setup-proxy-valve.sh

    exec /opt/guacamole/bin/start.sh "$@"
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-guacamole-daemon
  labels:
    helm.sh/chart: guacamole-0.3.0
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: guacd
spec:
  selector:
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: guacd
  ports:
    - name: guacd
      port: 4822
      targetPort: guacd
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-guacamole-frontend
  labels:
    helm.sh/chart: guacamole-0.3.0
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: frontend
spec:
  selector:
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: frontend
  ports:
    - name: http
      port: 80
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-guacamole-daemon
  labels:
    helm.sh/chart: guacamole-0.3.0
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: guacd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: guacamole
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: guacd
  template:
    metadata:
      labels:
        app.kubernetes.io/name: guacamole
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: guacd
    spec:
      serviceAccountName: release-name-guacamole
      containers:
        - name: guacd
          image: guacamole/guacd:1.3.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: guacd
              containerPort: 4822
          livenessProbe:
            tcpSocket:
              port: guacd
          readinessProbe:
            tcpSocket:
              port: guacd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-guacamole-frontend
  labels:
    helm.sh/chart: guacamole-0.3.0
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: guacamole
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: frontend
  template:
    metadata:
      annotations:
        helm.sh/db-config-sha256: 68bcf6ff91655cb311ebb1e66131d43a
      labels:
        app.kubernetes.io/name: guacamole
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: frontend
    spec:
      serviceAccountName: release-name-guacamole
      volumes:
        - name: scripts
          configMap:
            defaultMode: 493
            name: release-name-guacamole-frontend
      containers:
        - name: guacamole
          image: guacamole/guacamole:1.3.0
          imagePullPolicy: IfNotPresent
          command:
            - /opt/guacamole-scripts/startup.sh
          env:
            - name: GUACAMOLE_INTERNAL_PROXIES
              value: .*
            - name: GUACD_HOSTNAME
              value: release-name-guacamole-daemon.default.svc
            - name: GUACD_PORT
              value: "4822"
            - name: POSTGRES_HOSTNAME
              value: null
            - name: POSTGRES_DATABASE
              value: null
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-guacamole-frontend
                  key: POSTGRES_USER
                  optional: false
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-guacamole-frontend
                  key: POSTGRES_PASSWORD
                  optional: false
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - name: scripts
              mountPath: /opt/guacamole-scripts
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-guacamole-frontend-initialize-database
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "-1"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: guacamole-0.3.0
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: hook
data:
  PGPASSWORD: ""
  PGUSER: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-guacamole-frontend-upgrade-database
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-weight: "-1"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: guacamole-0.3.0
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: hook
data:
  PGPASSWORD: ""
  PGUSER: ""
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-guacamole-frontend-initialize-database
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: guacamole-0.3.0
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: hook
spec:
  template:
    metadata:
      labels:
        helm.sh/chart: guacamole-0.3.0
        app.kubernetes.io/name: guacamole
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: 1.3.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: hook
    spec:
      restartPolicy: Never
      volumes:
        - name: scratchpad
          emptyDir: {}
      initContainers:
        - name: create-sql-manifests
          image: guacamole/guacamole:1.3.0
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -ec
          args:
            - /opt/guacamole/bin/initdb.sh --postgres > /scratchpad/init.sql
          volumeMounts:
            - name: scratchpad
              mountPath: /scratchpad
      containers:
        - name: setup-database
          image: postgres:13
          imagePullPolicy: Always
          command:
            - /bin/sh
            - -ec
          args:
            - |-
              psql \
                --file=/scratchpad/init.sql \
                --host= \
                --dbname= \
                --username=${PGUSER}
          envFrom:
            - secretRef:
                name: release-name-guacamole-frontend-initialize-database
          volumeMounts:
            - name: scratchpad
              mountPath: /scratchpad
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-guacamole-frontend-upgrade-database
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: guacamole-0.3.0
    app.kubernetes.io/name: guacamole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: hook
spec:
  template:
    metadata:
      labels:
        helm.sh/chart: guacamole-0.3.0
        app.kubernetes.io/name: guacamole
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: 1.3.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: hook
    spec:
      restartPolicy: Never
      volumes:
        - name: scratchpad
          emptyDir: {}
      initContainers:
        - name: create-sql-manifests
          image: guacamole/guacamole:1.3.0
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -ec
          args:
            - |-
              if [ -f "/opt/guacamole/postgresql/schema/upgrade/upgrade-pre-1.3.0.sql" ]; then
                cp "/opt/guacamole/postgresql/schema/upgrade/upgrade-pre-1.3.0.sql" /scratchpad/update.sql
              fi
          volumeMounts:
            - name: scratchpad
              mountPath: /scratchpad
      containers:
        - name: setup-database
          image: postgres:13
          imagePullPolicy: Always
          command:
            - /bin/sh
            - -ec
          args:
            - |-
              if [ -f "/scratchpad/update.sql" ]; then
                psql \
                  --file=/scratchpad/init.sql \
                  --host= \
                  --dbname= \
                  --username=${PGUSER}
              fi
          envFrom:
            - secretRef:
                name: release-name-guacamole-frontend-upgrade-database
          volumeMounts:
            - name: scratchpad
              mountPath: /scratchpad
