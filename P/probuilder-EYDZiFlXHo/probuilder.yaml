apiVersion: v1
kind: Service
metadata:
  labels:
    app: probuilder
    chart: probuilder-0.2.0
    component: pro-builder
    heritage: Helm
    release: release-name
  name: pro-builder
  namespace: EYDZiFlXHo
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: probuilder
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: probuilder
    component: pro-builder
    chart: probuilder-0.2.0
    heritage: Helm
    release: release-name
    app.kubernetes.io/name: probuilder
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.2.0
    app.kubernetes.io/component: pro-builder
    app.kubernetes.io/part-of: openfaas
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: probuilder-0.2.0
  name: pro-builder
  namespace: EYDZiFlXHo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: probuilder
      component: pro-builder
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "false"
      labels:
        app: probuilder
        component: pro-builder
    spec:
      volumes:
        - name: client-certs
          secret:
            secretName: buildkit-client-certs
        - name: daemon-certs
          secret:
            secretName: buildkit-daemon-certs
        - name: registry-secret
          secret:
            defaultMode: 420
            secretName: registry-secret
        - name: payload-secret
          secret:
            defaultMode: 420
            secretName: payload-secret
        - name: license
          secret:
            defaultMode: 420
            secretName: openfaas-license
        - name: build-workspaces
          emptyDir: {}
      containers:
        - name: pro-builder
          image: ghcr.io/openfaasltd/pro-builder:0.2.0
          imagePullPolicy: Always
          args:
            - -license-file=/var/secrets/license/license
            - --tlscert=/var/secrets/certs/client.crt
            - --tlskey=/var/secrets/certs/client.key
            - --tlscacert=/var/secrets/certs/ca.crt
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 10
            timeoutSeconds: 2
          env:
            - name: buildkit_server_name
              value: 127.0.0.1
            - name: enable_lchown
              value: "false"
            - name: insecure
              value: "false"
            - name: buildkit_url
              value: tcp://127.0.0.1:1234
            - name: disable_hmac
              value: "false"
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: registry-secret
              readOnly: true
              mountPath: /home/app/.docker/
            - name: payload-secret
              readOnly: true
              mountPath: /var/openfaas/secrets/
            - name: license
              readOnly: true
              mountPath: /var/secrets/license
            - name: build-workspaces
              mountPath: /tmp/
              readOnly: false
            - name: client-certs
              readOnly: true
              mountPath: /var/secrets/certs
        - name: buildkit
          args:
            - --addr=tcp://127.0.0.1:1234
            - --tlscert=/var/secrets/certs/server.crt
            - --tlskey=/var/secrets/certs/server.key
            - --tlscacert=/var/secrets/certs/ca.crt
          image: docker.io/moby/buildkit:v0.10.0
          imagePullPolicy: Always
          ports:
            - containerPort: 1234
              protocol: TCP
          volumeMounts:
            - name: daemon-certs
              readOnly: true
              mountPath: /var/secrets/certs
