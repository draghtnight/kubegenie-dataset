[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-periodic-daemonset-controller",
      "labels": {
        "app.kubernetes.io/name": "periodic-daemonset",
        "helm.sh/chart": "periodic-daemonset-2.0.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-periodic-daemonset-job",
      "labels": {
        "app.kubernetes.io/name": "periodic-daemonset",
        "helm.sh/chart": "periodic-daemonset-2.0.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-periodic-daemonset",
      "labels": {
        "app.kubernetes.io/name": "periodic-daemonset",
        "helm.sh/chart": "periodic-daemonset-2.0.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "job.yaml": "apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: release-name-periodic-daemonset-<<NODE_NAME>>\n  labels:\n    app.kubernetes.io/name: periodic-daemonset\n    helm.sh/chart: periodic-daemonset-2.0.0\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/node-name: <<NODE_NAME>>\n    app.kubernetes.io/component: job\nspec:\n  ttlSecondsAfterFinished: 60\n  template:\n    metadata:\n      name: release-name-periodic-daemonset-<<NODE_NAME>>\n      labels:\n        app.kubernetes.io/name: periodic-daemonset\n        helm.sh/chart: periodic-daemonset-2.0.0\n        app.kubernetes.io/instance: release-name\n        app.kubernetes.io/managed-by: Helm\n        app.kubernetes.io/node-name: <<NODE_NAME>>\n        app.kubernetes.io/component: job\n    spec:\n      serviceAccountName: release-name-periodic-daemonset-job\n      restartPolicy: Never\n      nodeName: <<NODE_NAME>>\n      tolerations:\n      - operator: \"Exists\"\n      containers:\n      - args:\n        - echo \"Hello world\"\n        command:\n        - /bin/sh\n        - -c\n        image: alpine:latest\n        imagePullPolicy: Always\n        name: hello-world"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-periodic-daemonset-job",
      "labels": {
        "app.kubernetes.io/name": "periodic-daemonset",
        "helm.sh/chart": "periodic-daemonset-2.0.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cluster-admin"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-periodic-daemonset-job",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-periodic-daemonset-controller",
      "labels": {
        "app.kubernetes.io/name": "periodic-daemonset",
        "helm.sh/chart": "periodic-daemonset-2.0.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "job"
        ],
        "verbs": [
          "create",
          "delete",
          "list",
          "get"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-periodic-daemonset-controller",
      "labels": {
        "app.kubernetes.io/name": "periodic-daemonset",
        "helm.sh/chart": "periodic-daemonset-2.0.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-periodic-daemonset-controller"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-periodic-daemonset-controller",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "batch/v1beta1",
    "kind": "CronJob",
    "metadata": {
      "name": "release-name-periodic-daemonset",
      "labels": {
        "app.kubernetes.io/name": "periodic-daemonset",
        "helm.sh/chart": "periodic-daemonset-2.0.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "concurrencyPolicy": "Forbid",
      "schedule": "*/3 * * * *",
      "jobTemplate": {
        "metadata": {
          "name": "release-name-periodic-daemonset-controller",
          "labels": {
            "app.kubernetes.io/name": "periodic-daemonset",
            "helm.sh/chart": "periodic-daemonset-2.0.0",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "controller"
          }
        },
        "spec": {
          "ttlSecondsAfterFinished": 60,
          "template": {
            "metadata": {
              "name": "release-name-periodic-daemonset-controller",
              "labels": {
                "app.kubernetes.io/name": "periodic-daemonset",
                "helm.sh/chart": "periodic-daemonset-2.0.0",
                "app.kubernetes.io/instance": "release-name",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/component": "controller"
              }
            },
            "spec": {
              "serviceAccountName": "release-name-periodic-daemonset-controller",
              "restartPolicy": "Never",
              "volumes": [
                {
                  "name": "jobspec",
                  "configMap": {
                    "name": "release-name-periodic-daemonset",
                    "optional": false
                  }
                }
              ],
              "containers": [
                {
                  "name": "controller",
                  "image": "bitnami/kubectl:latest",
                  "imagePullPolicy": "Always",
                  "volumeMounts": [
                    {
                      "name": "jobspec",
                      "mountPath": "/etc/periodic-daemonset-data"
                    }
                  ],
                  "command": [
                    "/bin/sh",
                    "-ec"
                  ],
                  "args": [
                    "\nNODE_COUNT=0\nfor node in $(kubectl get node -o jsonpath='{ range .items[*] }{.metadata.name }{\" \"}{ end }')\ndo\n  printf \"Scheduling JOB on node %s\\n\" \"$node\"\n  sed -e \"s/<<NODE_NAME>>/$node/g\" < /etc/periodic-daemonset-data/job.yaml\n  sed -e \"s/<<NODE_NAME>>/$node/g\" < /etc/periodic-daemonset-data/job.yaml | kubectl apply -f -\n  NODE_COUNT=$(( NODE_COUNT + 1 ))\ndone\n\nTIMEOUT=600\nwhile true\ndo\n  COMPLETIONS=0\n  for job in $(kubectl -n default get jobs --selector=\"app.kubernetes.io/name=periodic-daemonset,app.kubernetes.io/instance=release-name,app.kubernetes.io/component=job\" -o jsonpath='{ range .items[*] }{.metadata.name }{\" \"}{ end }')\n  do\n    printf \"Job instance %s\\n\" \"$job\"\n    if [ -z \"$(kubectl -n default get job $job -o jsonpath='{.status.completionTime}')\" ]\n    then\n      printf \"NOT FINISHED\\n\"\n    else\n      COMPLETIONS=$(( COMPLETIONS + 1 ))\n    fi\n  done\n\n  TIMEOUT=$(( TIMEOUT - 1 ))\n  if [ $COMPLETIONS -eq $NODE_COUNT ]\n  then\n    printf \"Jobs terminated\\n\"\n    break\n  fi\n  if [ $TIMEOUT -eq 0 ]\n  then\n    printf \"timed out!\\n\"\n    exit 1\n  fi\ndone\n\nprintf \"Cleaning up...\\n\"\nkubectl -n default delete jobs,pods --selector=\"app.kubernetes.io/name=periodic-daemonset,app.kubernetes.io/instance=release-name,app.kubernetes.io/component=job\""
                  ]
                }
              ]
            }
          }
        }
      }
    }
  },
  null
]