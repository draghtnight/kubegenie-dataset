[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-puppetdb",
      "labels": {
        "app.kubernetes.io/name": "puppetdb",
        "helm.sh/chart": "puppetdb-0.11.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "stringData": {
      "autosign_psk": ""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-puppetdb",
      "labels": {
        "app.kubernetes.io/name": "puppetdb",
        "helm.sh/chart": "puppetdb-0.11.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "puppetdb.ini": "[global]\nvardir = /opt/puppetlabs/server/data/puppetdb\n\n[command-processing]\n\n[database]\nsubname = //postgresql:5432/puppetdb\nusername = puppetdb\npassword = puppetdb\n\n[jetty]\nhost = 127.0.0.1\nport = 8080\nssl-host = 0.0.0.0\nssl-port = 8081\nssl-key = /etc/puppetlabs/puppet/ssl/private_keys/puppetdb.pem\nssl-cert = /etc/puppetlabs/puppet/ssl/certs/puppetdb.pem\nssl-ca-cert = /etc/puppetlabs/puppet/ssl/certs/ca.pem\n\n[nrepl]\nenabled = false\nport = 8082\nhost = 127.0.0.1",
      "metrics.conf": "metrics: {\n    # a server id that will be used as part of the namespace for metrics produced\n    # by this server\n    server-id: puppetdb\n    registries: {\n        puppetserver: {\n            # specify metrics to allow in addition to those in the default list\n            #metrics-allowed: [\"compiler.compile.production\"]\n\n            reporters: {\n                # enable or disable JMX metrics reporter\n                jmx: {\n                    enabled: true\n                }\n                # enable or disable Graphite metrics reporter\n                graphite: {\n                    enabled: true\n                }\n            }\n        }\n    }\n\n    # this section is used to configure settings for reporters that will send\n    # the metrics to various destinations for external viewing\n    reporters: {\n        graphite: {\n            # graphite host\n            host: \"localhost\"\n            # graphite metrics port\n            port: 2003\n            # how often to send metrics to graphite\n            update-interval-seconds: 5\n        }\n    }\n    metrics-webservice: {\n        jolokia: {\n            # Enable or disable the Jolokia-based metrics/v2 endpoint.\n            # Default is true.\n            # enabled: false\n\n            # Configure any of the settings listed at:\n            #   https://jolokia.org/reference/html/agents.html#war-agent-installation\n            servlet-init-params: {\n                # Specify a custom security policy:\n                #  https://jolokia.org/reference/html/security.html\n                policyLocation: \"file:///etc/puppetlabs/puppetdb/jolokia-access.xml\"\n                debug: \"true\"\n                allowErrorDetails: \"false\"\n            }\n        }\n    }\n}"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-puppetdb-postgresql",
      "labels": {
        "app.kubernetes.io/name": "puppetdb",
        "helm.sh/chart": "puppetdb-0.11.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "postgresql.crt": ""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-puppetdb-jmx-exporter",
      "labels": {
        "app.kubernetes.io/name": "puppetdb",
        "helm.sh/chart": "puppetdb-0.11.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "config.yaml": "---\nwhitelistObjectNames:\n  - puppetlabs.puppetdb.population:name=num-nodes\n  - puppetlabs.puppetdb.population:name=num-resources\n  - puppetlabs.puppetdb.population:name=avg-resources-per-node\n  - puppetlabs.puppetdb.population:name=pct-resource-dupes\n  - puppetlabs.puppetdb.database:*\n  - puppetlabs.puppetdb.mq:*\n  - puppetlabs.puppetdb.storage:name=duplicate-pct\n  - puppetlabs.puppetdb.storage:name=gc-time\n  - java.lang:type=Memory\n  - java.lang:type=OperatingSystem\n  - java.lang:type=Threading"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-puppetdb-jolokia",
      "labels": {
        "app.kubernetes.io/name": "puppetdb",
        "helm.sh/chart": "puppetdb-0.11.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "jolokia-access.xml": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<restrict>\n  <remote>\n    <host>127.0.0.1</host>\n  </remote>\n\n  <commands>\n    <command>read</command>\n    <command>list</command>\n    <command>version</command>\n    <command>search</command>\n  </commands>\n\n  <mbean>\n    <name>puppetlabs.puppetdb.population:name=num-nodes</name>\n    <attribute mode=\"read\">Value</attribute>\n    <operation>objectName</operation>\n  </mbean>\n</restrict>"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-puppetdb-prometheus-puppetdb-exporter",
      "labels": {
        "app.kubernetes.io/name": "prometheus-puppetdb-exporter",
        "helm.sh/chart": "puppetdb-0.11.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "prometheus.io/scrape": "true",
        "prometheus.io/port": "9121"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 9121,
          "targetPort": "metrics",
          "protocol": "TCP",
          "name": "metrics"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "prometheus-puppetdb-exporter",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-puppetdb",
      "labels": {
        "app.kubernetes.io/name": "puppetdb",
        "helm.sh/chart": "puppetdb-0.11.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8081,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        },
        {
          "port": 9080,
          "targetPort": "metrics",
          "protocol": "TCP",
          "name": "metrics"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "puppetdb",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-puppetdb-prometheus-puppetdb-exporter",
      "labels": {
        "app.kubernetes.io/name": "prometheus-puppetdb-exporter",
        "helm.sh/chart": "puppetdb-0.11.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "prometheus-puppetdb-exporter",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "prometheus-puppetdb-exporter",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "initContainers": [
            {
              "name": "puppetdb-autosign",
              "image": "docker.io/puppet/puppet-agent:6.15.0",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "psk=$(cat /run/secrets/autosign_psk); hostname=$(puppet config print certname | tr -d '\n'); echo \"custom_attributes:\n  1.2.840.113549.1.9.7: 'hashed;$(echo -n $psk/$hostname/puppetdb/production | openssl dgst -binary -sha256 | openssl base64)'\nextension_requests:\n  pp_role: 'puppetdb'\n  pp_environment: 'production'\" > /etc/puppetlabs/puppet/csr_attributes.yaml; puppet ssl submit_request --environment production --server puppetserver --certificate_revocation=false --waitforcert 60 --confdir /etc/puppetlabs/puppet; cd /etc/puppetlabs/puppet/ssl && cp private_keys/$hostname.pem private_keys/prometheus-puppetdb-exporter.pem && cp certs/$hostname.pem certs/prometheus-puppetdb-exporter.pem ; mv /etc/puppetlabs/puppet/ssl/* /srv/puppetssl/"
              ],
              "env": [
                {
                  "name": "HOME",
                  "value": "/tmp"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/run/secrets/autosign_psk",
                  "name": "secrets",
                  "subPath": "autosign_psk"
                },
                {
                  "mountPath": "/etc/puppetlabs/puppet",
                  "name": "confdir"
                },
                {
                  "mountPath": "/srv/puppetssl",
                  "name": "ssldir"
                }
              ],
              "resources": {}
            }
          ],
          "containers": [
            {
              "name": "prometheus-puppetdb-exporter",
              "image": "docker.io/camptocamp/prometheus-puppetdb-exporter:latest",
              "ports": [
                {
                  "name": "metrics",
                  "containerPort": 9635,
                  "protocol": "TCP"
                }
              ],
              "env": [
                {
                  "name": "PUPPETDB_URL",
                  "value": "https://puppetdb:8081/pdb/query"
                },
                {
                  "name": "PUPPETDB_KEY_FILE",
                  "value": "/etc/puppetlabs/puppet/ssl/private_keys/prometheus-puppetdb-exporter.pem"
                },
                {
                  "name": "PUPPETDB_CERT_FILE",
                  "value": "/etc/puppetlabs/puppet/ssl/certs/prometheus-puppetdb-exporter.pem"
                },
                {
                  "name": "PUPPETDB_CA_FILE",
                  "value": "/etc/puppetlabs/puppet/ssl/certs/ca.pem"
                },
                {
                  "name": "PUPPETDB_LISTEN_ADDRESS",
                  "value": "0.0.0.0:9635"
                },
                {
                  "name": "PUPPETDB_SCRAPE_INTERVAL",
                  "value": "5s"
                },
                {
                  "name": "REPORT_METRICS_CATEGORIES",
                  "value": "resources,time,changes,events"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/etc/puppetlabs/puppet/ssl",
                  "name": "ssldir"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "confdir",
              "emptyDir": {}
            },
            {
              "name": "ssldir",
              "emptyDir": {}
            },
            {
              "name": "secrets",
              "secret": {
                "secretName": "release-name-puppetdb"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-puppetdb",
      "labels": {
        "app.kubernetes.io/name": "puppetdb",
        "helm.sh/chart": "puppetdb-0.11.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "puppetdb",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "puppetdb",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "initContainers": [
            {
              "name": "puppetdb-autosign",
              "image": "docker.io/puppet/puppet-agent:6.15.0",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "psk=$(cat /run/secrets/autosign_psk); hostname=$(puppet config print certname | tr -d '\n'); echo \"custom_attributes:\n  1.2.840.113549.1.9.7: 'hashed;$(echo -n $psk/$hostname/puppetdb/production | openssl dgst -binary -sha256 | openssl base64)'\nextension_requests:\n  pp_role: 'puppetdb'\n  pp_environment: 'production'\" > /etc/puppetlabs/puppet/csr_attributes.yaml; puppet ssl submit_request --environment production --server puppetserver --certificate_revocation=false --dns_alt_names='release-name-puppetdb,' --waitforcert 60 --confdir /etc/puppetlabs/puppet; cd /etc/puppetlabs/puppet/ssl && cp private_keys/$hostname.pem private_keys/puppetdb.pem && cp certs/$hostname.pem certs/puppetdb.pem ; mv /etc/puppetlabs/puppet/ssl/* /srv/puppetssl/"
              ],
              "env": [
                {
                  "name": "HOME",
                  "value": "/tmp"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/run/secrets/autosign_psk",
                  "name": "secrets",
                  "subPath": "autosign_psk"
                },
                {
                  "mountPath": "/etc/puppetlabs/puppet",
                  "name": "confdir"
                },
                {
                  "mountPath": "/srv/puppetssl",
                  "name": "ssldir"
                }
              ],
              "resources": {}
            },
            {
              "name": "puppetdb-jmx-exporter",
              "image": "camptocamp/jmx-exporter:0.12.0",
              "command": [
                "cp",
                "/jmx_prometheus_javaagent-0.12.0.jar",
                "/jmx-exporter/"
              ],
              "volumeMounts": [
                {
                  "mountPath": "/jmx-exporter",
                  "name": "jmx-exporter"
                }
              ],
              "resources": {}
            }
          ],
          "containers": [
            {
              "name": "puppetdb",
              "image": "docker.io/puppet/puppetdb:6.10.1",
              "imagePullPolicy": "Always",
              "command": [
                "java"
              ],
              "args": [
                "-Dlogappender=STDOUT",
                "-Djava.net.preferIPv4Stack=true",
                "-Djdk.tls.ephemeralDHKeySize=2048",
                "-Xms256m",
                "-Xmx256m",
                "-XX:+ExitOnOutOfMemoryError",
                "-javaagent:/jmx-exporter/jmx_prometheus_javaagent-0.12.0.jar=9080:/jmx-exporter/config.yaml",
                "-cp",
                "/opt/puppetlabs/server/apps/puppetdb/puppetdb.jar",
                "clojure.main",
                "-m",
                "puppetlabs.puppetdb.cli.services",
                "-c",
                "/etc/puppetlabs/puppetdb/conf.d/",
                "--bootstrap-config",
                "/etc/puppetlabs/puppetdb/bootstrap.cfg",
                "--restart-file",
                "/opt/puppetlabs/server/data/puppetdb/restartcounter"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8081,
                  "protocol": "TCP"
                },
                {
                  "name": "metrics",
                  "containerPort": 9080,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/opt/puppetlabs/server/data/puppetdb",
                  "name": "data"
                },
                {
                  "mountPath": "/etc/puppetlabs/puppetdb/conf.d/",
                  "name": "conf-d"
                },
                {
                  "mountPath": "/etc/puppetlabs/puppet/ssl",
                  "name": "ssldir"
                },
                {
                  "mountPath": "/etc/puppetlabs/puppetdb/pgsql/",
                  "name": "postgresql"
                },
                {
                  "mountPath": "/jmx-exporter",
                  "name": "jmx-exporter"
                },
                {
                  "mountPath": "/jmx-exporter/config.yaml",
                  "name": "jmx-exporter-config",
                  "subPath": "config.yaml"
                },
                {
                  "mountPath": "/etc/puppetlabs/puppetdb/jolokia-access.xml",
                  "name": "jolokia",
                  "subPath": "jolokia-access.xml"
                }
              ],
              "readinessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "curl --fail --resolve 'puppetdb:8080:127.0.0.1' 'http://puppetdb:8080/status/v1/services/puppetdb-status' | grep -q '\"state\":\"running\"'"
                  ]
                },
                "initialDelaySeconds": 15
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "securityContext": {
            "supplementalGroups": [
              999
            ]
          },
          "volumes": [
            {
              "name": "jmx-exporter",
              "emptyDir": {}
            },
            {
              "name": "data",
              "emptyDir": {}
            },
            {
              "name": "confdir",
              "emptyDir": {}
            },
            {
              "name": "ssldir",
              "emptyDir": {}
            },
            {
              "name": "secrets",
              "secret": {
                "secretName": "release-name-puppetdb"
              }
            },
            {
              "name": "conf-d",
              "configMap": {
                "name": "release-name-puppetdb"
              }
            },
            {
              "name": "postgresql",
              "configMap": {
                "name": "release-name-puppetdb-postgresql"
              }
            },
            {
              "name": "jmx-exporter-config",
              "configMap": {
                "name": "release-name-puppetdb-jmx-exporter"
              }
            },
            {
              "name": "jolokia",
              "configMap": {
                "name": "release-name-puppetdb-jolokia"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "name": "release-name-puppetdb-prometheus-puppetdb-exporter",
      "labels": {
        "app.kubernetes.io/name": "prometheus-puppetdb-exporter",
        "helm.sh/chart": "puppetdb-0.11.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "endpoints": [
        {
          "path": "/metrics",
          "port": "metrics"
        }
      ],
      "namespaceSelector": {
        "matchNames": [
          "default"
        ]
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "prometheus-puppetdb-exporter",
          "app.kubernetes.io/instance": "release-name"
        }
      }
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "name": "release-name-puppetdb",
      "labels": {
        "app.kubernetes.io/name": "puppetdb",
        "helm.sh/chart": "puppetdb-0.11.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "endpoints": [
        {
          "path": "/metrics",
          "port": "metrics"
        }
      ],
      "namespaceSelector": {
        "matchNames": [
          "default"
        ]
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "puppetdb",
          "app.kubernetes.io/instance": "release-name"
        }
      }
    }
  }
]