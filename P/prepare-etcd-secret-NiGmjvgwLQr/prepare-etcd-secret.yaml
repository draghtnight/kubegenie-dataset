apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-prepare-etcd-secret
  labels:
    helm.sh/chart: prepare-etcd-secret-0.2.0
    app.kubernetes.io/name: prepare-etcd-secret
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.1.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-prepare-etcd-secret
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - list
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-prepare-etcd-secret
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-prepare-etcd-secret
subjects:
  - kind: ServiceAccount
    name: release-name-prepare-etcd-secret
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-prepare-etcd-secret
spec:
  template:
    metadata:
      name: release-name-prepare-etcd-secret
    spec:
      serviceAccountName: release-name-prepare-etcd-secret
      containers:
        - name: hyperkube
          image: k8s.gcr.io/hyperkube:v1.18.8
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
            - |
              kubectl create secret generic etcd-client-cert \
              --namespace default \
              --from-file=etcd-ca=/ssl/ca.crt \
              --from-file=etcd-client=/ssl/peer.crt \
              --from-file=etcd-client-key=/ssl/peer.key
          volumeMounts:
            - name: ssldir
              mountPath: /ssl
      volumes:
        - name: ssldir
          hostPath:
            path: /etc/kubernetes/pki/etcd
            type: Directory
      restartPolicy: OnFailure
