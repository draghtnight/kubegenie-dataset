[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "pulsar-bookkeeper",
      "namespace": "default",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "bookkeeper",
        "cluster": "pulsar"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "pulsar",
          "release": "release-name",
          "component": "bookkeeper"
        }
      },
      "maxUnavailable": 1
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "pulsar-broker",
      "namespace": "default",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "broker",
        "cluster": "pulsar"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "pulsar",
          "release": "release-name",
          "component": "broker"
        }
      },
      "maxUnavailable": 1
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "pulsar-proxy",
      "namespace": "default",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "proxy",
        "cluster": "pulsar"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "pulsar",
          "release": "release-name",
          "component": "proxy"
        }
      },
      "maxUnavailable": 1
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "pulsar-zookeeper",
      "namespace": "default",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "zookeeper",
        "cluster": "pulsar"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "pulsar",
          "release": "release-name",
          "component": "zookeeper"
        }
      },
      "maxUnavailable": 1
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "pulsar-autorecovery",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "autorecovery",
        "cluster": "pulsar"
      }
    },
    "data": {
      "zkServers": "pulsar-zookeeper-ca:2181",
      "BOOKIE_MEM": "\" -Xms512m -Xmx512m -XX:+ExitOnOutOfMemoryError\"",
      "PULSAR_EXTRA_OPTS": "-Dpulsar.log.root.level=info",
      "PULSAR_LOG_LEVEL": "info",
      "PULSAR_LOG_ROOT_LEVEL": "info"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "pulsar-bastion",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "bastion",
        "cluster": "pulsar"
      }
    },
    "data": {
      "tlsTrustCertsFilePath": "/etc/ssl/certs/ca-certificates.crt",
      "PULSAR_EXTRA_OPTS": "-Dpulsar.log.root.level=info",
      "PULSAR_LOG_LEVEL": "info",
      "PULSAR_LOG_ROOT_LEVEL": "info",
      "PULSAR_MEM": "\"-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m -XX:+ExitOnOutOfMemoryError\""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "pulsar-bookkeeper",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "bookkeeper",
        "cluster": "pulsar"
      }
    },
    "data": {
      "zkServers": "pulsar-zookeeper-ca:2181",
      "autoRecoveryDaemonEnabled": "false",
      "useHostNameAsBookieID": "true",
      "httpServerEnabled": "true",
      "BOOKIE_GC": "\"-XX:+UseG1GC\"",
      "BOOKIE_MEM": "\"-Xms2g -Xmx2g -XX:MaxDirectMemorySize=2g -Dio.netty.leakDetectionLevel=disabled -Dio.netty.recycler.linkCapacity=1024 -XX:+ExitOnOutOfMemoryError\"",
      "PULSAR_EXTRA_OPTS": "-Dpulsar.log.root.level=info",
      "PULSAR_LOG_LEVEL": "info",
      "PULSAR_LOG_ROOT_LEVEL": "info",
      "statsProviderClass": "org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "pulsar-broker",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "broker",
        "cluster": "pulsar"
      }
    },
    "data": {
      "zookeeperServers": "pulsar-zookeeper-ca:2181",
      "configurationStoreServers": "pulsar-zookeeper-ca:2181",
      "clusterName": "pulsar",
      "allowAutoTopicCreationType": "non-partitioned",
      "PULSAR_EXTRA_OPTS": "-Dpulsar.log.root.level=info",
      "PULSAR_GC": "\"-XX:+UseG1GC\"",
      "PULSAR_LOG_LEVEL": "info",
      "PULSAR_LOG_ROOT_LEVEL": "info",
      "PULSAR_MEM": "\"-Xms2g -Xmx2g -XX:MaxDirectMemorySize=2g -Dio.netty.leakDetectionLevel=disabled -Dio.netty.recycler.linkCapacity=1024 -XX:+ExitOnOutOfMemoryError\"",
      "backlogQuotaDefaultRetentionPolicy": "producer_exception",
      "brokerDeduplicationEnabled": "false",
      "exposeConsumerLevelMetricsInPrometheus": "true",
      "exposeTopicLevelMetricsInPrometheus": "true"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "pulsar-health",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "health-check",
        "cluster": "pulsar"
      }
    },
    "data": {
      "proxy_health_check.sh": "#!/bin/bash\ncurl -s --connect-timeout 2 --fail http://localhost:8080/metrics/ > /dev/null\n",
      "broker_health_check.sh": "#!/bin/bash\ncurl -s --connect-timeout 2 --fail http://localhost:8080/admin/v2/brokers/health\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "pulsar-proxy",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "proxy",
        "cluster": "pulsar"
      }
    },
    "data": {
      "brokerServiceURL": "pulsar://pulsar-broker:6650",
      "brokerServiceURLTLS": "pulsar+ssl://pulsar-broker:6651",
      "brokerWebServiceURL": "http://pulsar-broker:8080",
      "brokerWebServiceURLTLS": "https://pulsar-broker:8443",
      "zookeeperServers": "pulsar-zookeeper-ca:2181",
      "configurationStoreServers": "pulsar-zookeeper-ca:2181",
      "PULSAR_EXTRA_OPTS": "-Dpulsar.log.root.level=info",
      "PULSAR_LOG_LEVEL": "info",
      "PULSAR_LOG_ROOT_LEVEL": "info",
      "PULSAR_MEM": "\"-Xms1g -Xmx1g -XX:MaxDirectMemorySize=1g\"",
      "numHttpServerThreads": "10"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "pulsar-proxy-ws",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "proxy",
        "cluster": "pulsar"
      }
    },
    "data": {
      "brokerServiceUrl": "pulsar://pulsar-broker:6650",
      "brokerServiceUrlTls": "pulsar+ssl://pulsar-broker:6651",
      "serviceUrl": "http://pulsar-broker:8080",
      "serviceUrlTls": "https://pulsar-broker:8443",
      "zookeeperServers": "pulsar-zookeeper-ca:2181",
      "configurationStoreServers": "pulsar-zookeeper-ca:2181",
      "clusterName": "pulsar",
      "webServicePort": "8000",
      "PULSAR_EXTRA_OPTS": "-Dpulsar.log.root.level=info",
      "PULSAR_LOG_LEVEL": "info",
      "PULSAR_LOG_ROOT_LEVEL": "info",
      "PULSAR_MEM": "\"-Xms1g -Xmx1g -XX:MaxDirectMemorySize=1g\"",
      "numHttpServerThreads": "10"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "pulsar-zookeeper",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "zookeeper",
        "cluster": "pulsar"
      }
    },
    "data": {
      "PULSAR_PREFIX_quorumListenOnAllIPs": "true",
      "PULSAR_EXTRA_OPTS": "-Dpulsar.log.root.level=info",
      "PULSAR_GC": "\"-XX:+UseG1GC\"",
      "PULSAR_LOG_LEVEL": "info",
      "PULSAR_LOG_ROOT_LEVEL": "info",
      "PULSAR_MEM": "\"-Xms1g -Xmx1g -Dcom.sun.management.jmxremote -Djute.maxbuffer=10485760\""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "pulsar-bookkeeper",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "bookkeeper",
        "cluster": "pulsar"
      },
      "annotations": {
        "publishNotReadyAddresses": "true",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      }
    },
    "spec": {
      "ports": [
        {
          "name": "server",
          "port": 3181
        }
      ],
      "clusterIP": "None",
      "selector": {
        "app": "pulsar",
        "release": "release-name",
        "component": "bookkeeper"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "pulsar-broker",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "broker",
        "cluster": "pulsar"
      },
      "annotations": null
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 8080
        },
        {
          "name": "pulsar",
          "port": 6650
        },
        {
          "name": "https",
          "port": 8443
        },
        {
          "name": "pulsarssl",
          "port": 6651
        }
      ],
      "type": "ClusterIP",
      "selector": {
        "app": "pulsar",
        "release": "release-name",
        "component": "broker"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "pulsar-proxy",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "proxy",
        "cluster": "pulsar"
      },
      "annotations": {
        "external-dns.alpha.kubernetes.io/hostname": "pulsar.example.com"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "http",
          "port": 8080,
          "protocol": "TCP"
        },
        {
          "name": "pulsar",
          "port": 6650,
          "protocol": "TCP"
        },
        {
          "name": "ws",
          "port": 8000,
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app": "pulsar",
        "release": "release-name",
        "component": "proxy"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "pulsar-zookeeper",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "zookeeper",
        "cluster": "pulsar"
      },
      "annotations": {
        "publishNotReadyAddresses": "true",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      }
    },
    "spec": {
      "ports": [
        {
          "name": "server",
          "port": 2888
        },
        {
          "name": "leader-election",
          "port": 3888
        },
        {
          "name": "client",
          "port": 2181
        }
      ],
      "clusterIP": "None",
      "selector": {
        "app": "pulsar",
        "release": "release-name",
        "component": "zookeeper"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "pulsar-zookeeper-ca",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "zookeeper",
        "cluster": "pulsar"
      },
      "annotations": null
    },
    "spec": {
      "ports": [
        {
          "name": "server",
          "port": 2888
        },
        {
          "name": "leader-election",
          "port": 3888
        },
        {
          "name": "client",
          "port": 2181
        }
      ],
      "selector": {
        "app": "pulsar",
        "release": "release-name",
        "component": "zookeeper"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "pulsar-autorecovery",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "autorecovery",
        "cluster": "pulsar"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "pulsar",
          "release": "release-name",
          "component": "autorecovery"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "pulsar",
            "release": "release-name",
            "component": "autorecovery",
            "cluster": "pulsar"
          },
          "annotations": {}
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchExpressions": [
                      {
                        "key": "app",
                        "operator": "In",
                        "values": [
                          "pulsar"
                        ]
                      },
                      {
                        "key": "release",
                        "operator": "In",
                        "values": [
                          "release-name"
                        ]
                      },
                      {
                        "key": "component",
                        "operator": "In",
                        "values": [
                          "autorecovery"
                        ]
                      }
                    ]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              ]
            }
          },
          "terminationGracePeriodSeconds": 60,
          "initContainers": [
            {
              "name": "wait-zookeeper-ready",
              "image": "apachepulsar/pulsar:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "until bin/pulsar zookeeper-shell -server pulsar-zookeeper ls /admin/clusters | grep \"^\\[.*pulsar.*\\]\"; do\n  sleep 3;\ndone;"
              ]
            }
          ],
          "volumes": null,
          "containers": [
            {
              "name": "pulsar-autorecovery",
              "image": "apachepulsar/pulsar:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "requests": {
                  "cpu": 0.29999999999999999,
                  "memory": "512Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "bin/apply-config-from-env.py conf/bookkeeper.conf && bin/apply-config-from-env.py conf/bkenv.sh && exec bin/bookkeeper autorecovery\n"
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "pulsar-autorecovery"
                  }
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "pulsar-bastion",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "bastion",
        "cluster": "pulsar"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "pulsar",
          "release": "release-name",
          "component": "bastion"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "pulsar",
            "release": "release-name",
            "component": "bastion",
            "cluster": "pulsar"
          },
          "annotations": {}
        },
        "spec": {
          "terminationGracePeriodSeconds": 60,
          "volumes": null,
          "containers": [
            {
              "name": "pulsar-bastion",
              "image": "apachepulsar/pulsar:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "requests": {
                  "cpu": 0.25,
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "command": [
                "sh",
                "-c"
              ],
              "volumeMounts": null,
              "args": [
                "bin/apply-config-from-env.py conf/client.conf && exec /bin/bash -c \"trap : TERM INT; sleep infinity & wait\"\n"
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "pulsar-bastion"
                  }
                }
              ],
              "env": [
                {
                  "name": "webServiceUrl",
                  "value": "http://pulsar-proxy:8080/"
                },
                {
                  "name": "brokerServiceUrl",
                  "value": "pulsar://pulsar-broker:6650/"
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "pulsar-broker",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "broker",
        "cluster": "pulsar"
      }
    },
    "spec": {
      "replicas": 3,
      "selector": {
        "matchLabels": {
          "app": "pulsar",
          "release": "release-name",
          "component": "broker"
        }
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 0
        },
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "pulsar",
            "release": "release-name",
            "component": "broker",
            "cluster": "pulsar"
          },
          "annotations": {
            "prometheus.io/port": "8080",
            "prometheus.io/scrape": "true"
          }
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchExpressions": [
                      {
                        "key": "app",
                        "operator": "In",
                        "values": [
                          "pulsar"
                        ]
                      },
                      {
                        "key": "release",
                        "operator": "In",
                        "values": [
                          "release-name"
                        ]
                      },
                      {
                        "key": "component",
                        "operator": "In",
                        "values": [
                          "broker"
                        ]
                      }
                    ]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              ]
            }
          },
          "terminationGracePeriodSeconds": 60,
          "volumes": [
            {
              "name": "health",
              "configMap": {
                "name": "pulsar-health",
                "defaultMode": 493
              }
            }
          ],
          "initContainers": [
            {
              "name": "wait-bookkeeper-ready",
              "image": "apachepulsar/pulsar-all:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "until nslookup pulsar-bookkeeper-2.pulsar-bookkeeper.default; do\n  sleep 3;\ndone;"
              ]
            }
          ],
          "containers": [
            {
              "name": "pulsar-broker",
              "image": "apachepulsar/pulsar-all:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/pulsar/health/broker_health_check.sh"
                  ]
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30
              },
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/pulsar/health/broker_health_check.sh"
                  ]
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30
              },
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "bin/apply-config-from-env.py conf/broker.conf && bin/apply-config-from-env.py conf/pulsar_env.sh && bin/apply-config-from-env.py conf/client.conf && bin/gen-yml-from-env.py conf/functions_worker.yml && exec bin/pulsar broker\n"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080
                },
                {
                  "name": "pulsar",
                  "containerPort": 6650
                }
              ],
              "volumeMounts": [
                {
                  "name": "health",
                  "mountPath": "/pulsar/health"
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "pulsar-broker"
                  }
                }
              ],
              "env": [
                {
                  "name": "advertisedAddress",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "status.podIP"
                    }
                  }
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "pulsar-proxy",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "proxy",
        "cluster": "pulsar"
      }
    },
    "spec": {
      "replicas": 3,
      "selector": {
        "matchLabels": {
          "app": "pulsar",
          "release": "release-name",
          "component": "proxy"
        }
      },
      "strategy": {
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 0
        },
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "pulsar",
            "release": "release-name",
            "component": "proxy",
            "cluster": "pulsar"
          },
          "annotations": {
            "prometheus.io/port": "8080",
            "prometheus.io/scrape": "true"
          }
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchExpressions": [
                      {
                        "key": "app",
                        "operator": "In",
                        "values": [
                          "pulsar"
                        ]
                      },
                      {
                        "key": "release",
                        "operator": "In",
                        "values": [
                          "release-name"
                        ]
                      },
                      {
                        "key": "component",
                        "operator": "In",
                        "values": [
                          "proxy"
                        ]
                      }
                    ]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              ]
            }
          },
          "terminationGracePeriodSeconds": 60,
          "volumes": [
            {
              "name": "health",
              "configMap": {
                "name": "pulsar-health",
                "defaultMode": 493
              }
            }
          ],
          "initContainers": [
            {
              "name": "wait-bookkeeper-ready",
              "image": "apachepulsar/pulsar:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "until nslookup pulsar-bookkeeper-2.pulsar-bookkeeper.default; do\n  sleep 3;\ndone;"
              ]
            }
          ],
          "containers": [
            {
              "name": "pulsar-proxy",
              "image": "apachepulsar/pulsar:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/pulsar/health/proxy_health_check.sh"
                  ]
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30
              },
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/pulsar/health/proxy_health_check.sh"
                  ]
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30
              },
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memory": "1Gi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "bin/apply-config-from-env.py conf/proxy.conf && bin/apply-config-from-env.py conf/pulsar_env.sh && exec bin/pulsar proxy\n"
              ],
              "ports": [
                {
                  "name": "wss",
                  "containerPort": 8001
                }
              ],
              "volumeMounts": [
                {
                  "name": "health",
                  "mountPath": "/pulsar/health"
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "pulsar-proxy"
                  }
                }
              ]
            },
            {
              "name": "pulsar-proxy-ws",
              "image": "apachepulsar/pulsar:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memory": "1Gi"
                }
              },
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "bin/apply-config-from-env.py conf/websocket.conf && bin/apply-config-from-env.py conf/pulsar_env.sh && bin/pulsar websocket\n"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "pulsar-proxy-ws"
                  }
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "pulsar-bookkeeper",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "bookkeeper",
        "cluster": "pulsar"
      }
    },
    "spec": {
      "serviceName": "pulsar-bookkeeper",
      "replicas": 3,
      "selector": {
        "matchLabels": {
          "app": "pulsar",
          "release": "release-name",
          "component": "bookkeeper"
        }
      },
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "podManagementPolicy": "OrderedReady",
      "template": {
        "metadata": {
          "labels": {
            "app": "pulsar",
            "release": "release-name",
            "component": "bookkeeper",
            "cluster": "pulsar"
          },
          "annotations": {
            "prometheus.io/port": "8000",
            "prometheus.io/scrape": "true"
          }
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchExpressions": [
                      {
                        "key": "app",
                        "operator": "In",
                        "values": [
                          "pulsar"
                        ]
                      },
                      {
                        "key": "release",
                        "operator": "In",
                        "values": [
                          "release-name"
                        ]
                      },
                      {
                        "key": "component",
                        "operator": "In",
                        "values": [
                          "bookkeeper"
                        ]
                      }
                    ]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              ]
            }
          },
          "terminationGracePeriodSeconds": 60,
          "initContainers": [
            {
              "name": "wait-zookeeper-ready",
              "image": "apachepulsar/pulsar:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "until bin/pulsar zookeeper-shell -server pulsar-zookeeper ls /admin/clusters | grep \"^\\[.*pulsar.*\\]\"; do\n  sleep 3;\ndone;"
              ]
            },
            {
              "name": "pulsar-bookkeeper-metaformat",
              "image": "apachepulsar/pulsar:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "bin/apply-config-from-env.py conf/bookkeeper.conf && bin/apply-config-from-env.py conf/bkenv.sh && bin/bookkeeper shell metaformat --nonInteractive || true;\n"
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "pulsar-bookkeeper"
                  }
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "pulsar-bookkeeper",
              "image": "apachepulsar/pulsar:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "readinessProbe": {
                "httpGet": {
                  "path": "/api/v1/bookie/is_ready",
                  "port": 8000
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/api/v1/bookie/is_ready",
                  "port": 8000
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30
              },
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "bin/apply-config-from-env.py conf/bookkeeper.conf && bin/apply-config-from-env.py conf/bkenv.sh && bin/apply-config-from-env.py conf/pulsar_env.sh && exec bin/pulsar bookie\n"
              ],
              "ports": [
                {
                  "name": "client",
                  "containerPort": 3181
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "pulsar-bookkeeper"
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "pulsar-bookkeeper-journal",
                  "mountPath": "/pulsar/data/bookkeeper/journal"
                },
                {
                  "name": "pulsar-bookkeeper-ledgers",
                  "mountPath": "/pulsar/data/bookkeeper/ledgers"
                }
              ]
            }
          ],
          "volumes": null
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "pulsar-bookkeeper-journal"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "20Gi"
              }
            }
          }
        },
        {
          "metadata": {
            "name": "pulsar-bookkeeper-ledgers"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "50Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "pulsar-zookeeper",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "zookeeper",
        "cluster": "pulsar"
      }
    },
    "spec": {
      "serviceName": "pulsar-zookeeper",
      "replicas": 3,
      "selector": {
        "matchLabels": {
          "app": "pulsar",
          "release": "release-name",
          "component": "zookeeper"
        }
      },
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "podManagementPolicy": "OrderedReady",
      "template": {
        "metadata": {
          "labels": {
            "app": "pulsar",
            "release": "release-name",
            "component": "zookeeper",
            "cluster": "pulsar"
          },
          "annotations": {
            "prometheus.io/port": "8000",
            "prometheus.io/scrape": "true"
          }
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchExpressions": [
                      {
                        "key": "app",
                        "operator": "In",
                        "values": [
                          "pulsar"
                        ]
                      },
                      {
                        "key": "release",
                        "operator": "In",
                        "values": [
                          "release-name"
                        ]
                      },
                      {
                        "key": "component",
                        "operator": "In",
                        "values": [
                          "zookeeper"
                        ]
                      }
                    ]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              ]
            }
          },
          "terminationGracePeriodSeconds": 60,
          "containers": [
            {
              "name": "pulsar-zookeeper",
              "image": "apachepulsar/pulsar:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "requests": {
                  "cpu": 0.29999999999999999,
                  "memory": "1Gi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "bin/apply-config-from-env.py conf/zookeeper.conf && bin/apply-config-from-env.py conf/pulsar_env.sh && bin/generate-zookeeper-config.sh conf/zookeeper.conf && exec bin/pulsar zookeeper\n"
              ],
              "ports": [
                {
                  "name": "client",
                  "containerPort": 2181
                },
                {
                  "name": "server",
                  "containerPort": 2888
                },
                {
                  "name": "leader-election",
                  "containerPort": 3888
                }
              ],
              "env": [
                {
                  "name": "ZOOKEEPER_SERVERS",
                  "value": "pulsar-zookeeper-0,pulsar-zookeeper-1,pulsar-zookeeper-2"
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "pulsar-zookeeper"
                  }
                }
              ],
              "readinessProbe": {
                "exec": {
                  "command": [
                    "bin/pulsar-zookeeper-ruok.sh"
                  ]
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 30
              },
              "livenessProbe": {
                "exec": {
                  "command": [
                    "bin/pulsar-zookeeper-ruok.sh"
                  ]
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 30
              },
              "volumeMounts": [
                {
                  "name": "pulsar-zookeeper-data",
                  "mountPath": "/pulsar/data"
                }
              ]
            }
          ],
          "volumes": null
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "pulsar-zookeeper-data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "5Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "pulsar-zookeeper-metadata",
      "namespace": "QCAZ0Xt1G",
      "labels": {
        "app": "pulsar",
        "chart": "pulsar-1.0.32",
        "release": "release-name",
        "heritage": "Helm",
        "component": "zookeeper-metadata",
        "cluster": "pulsar"
      }
    },
    "spec": {
      "template": {
        "spec": {
          "initContainers": [
            {
              "name": "wait-zookeeper-ready",
              "image": "apachepulsar/pulsar:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "until nslookup pulsar-zookeeper-2.pulsar-zookeeper.default; do\n  sleep 3;\ndone;"
              ]
            }
          ],
          "containers": [
            {
              "name": "pulsar-zookeeper-metadata",
              "image": "apachepulsar/pulsar:2.6.1",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c"
              ],
              "args": [
                "bin/pulsar initialize-cluster-metadata \\\n  --cluster pulsar \\\n  --zookeeper pulsar-zookeeper \\\n  --configuration-store pulsar-zookeeper \\\n  --web-service-url http://pulsar-broker.default:8080/ \\\n  --broker-service-url pulsar://pulsar-broker.default:6650/ || true;\n"
              ]
            }
          ],
          "restartPolicy": "Never"
        }
      }
    }
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null
]