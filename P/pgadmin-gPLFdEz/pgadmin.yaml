apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-pgadmin
  labels:
    helm.sh/chart: pgadmin-1.0.0
    app.kubernetes.io/name: pgadmin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.11"
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-pgadmin
type: Opaque
data:
  setup_password: cGFzc3dvcmQ=
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-pgadmin
  labels:
    helm.sh/chart: pgadmin-1.0.0
    app.kubernetes.io/name: pgadmin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.11"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  externalTrafficPolicy: null
  ports:
    - port: 5050
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: pgadmin
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pgadmin
  labels:
    helm.sh/chart: pgadmin-1.0.0
    app.kubernetes.io/name: pgadmin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.11"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pgadmin
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pgadmin
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-pgadmin
      securityContext: {}
      containers:
        - name: pgadmin
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: chorss/docker-pgadmin4:4.11
          imagePullPolicy: IfNotPresent
          env:
            - name: GID
              value: "1000"
            - name: UID
              value: "1000"
            - name: SERVER_MODE
              value: "true"
            - name: PGADMIN_SETUP_EMAIL
              value: admin@mailinator.com
            - name: PGADMIN_PORT
              value: "5050"
            - name: PGADMIN_SETUP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-pgadmin
                  key: setup_password
          ports:
            - name: http
              containerPort: 5050
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /misc/ping
              port: http
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /misc/ping
              port: http
            failureThreshold: 5
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /misc/ping
              port: http
            initialDelaySeconds: 5
            failureThreshold: 30
            periodSeconds: 10
          volumeMounts:
            - name: pgadmin-data
              mountPath: /data
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: pgadmin-data
          emptyDir: {}
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-pgadmin-test-connection
  labels:
    app.kubernetes.io/name: pgadmin
    helm.sh/chart: pgadmin-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-pgadmin:5050
  restartPolicy: Never
