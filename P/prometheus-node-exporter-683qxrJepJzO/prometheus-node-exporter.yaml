apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-node-exporter
  namespace: 683qxrJepJzO
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: node-exporter-bin
data:
  node-exporter.sh: |
    #!/bin/sh


    set -ex

    exec /bin/node_exporter \
      --collector.ntp --collector.meminfo_numa --collector.bonding --collector.mountstats \
      --collector.textfile.directory=/var/log/node-exporter-vfstats \
      --collector.ntp.server=127.0.0.1
  image-repo-sync.sh: |
    #!/bin/sh
    set -ex

    IFS=','; for IMAGE in ${IMAGE_SYNC_LIST}; do
      docker pull ${IMAGE}
      docker tag ${IMAGE} ${LOCAL_REPO}/${IMAGE}
      docker push ${LOCAL_REPO}/${IMAGE}
    done
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: run-node-exporter
subjects:
  - kind: ServiceAccount
    name: release-name-node-exporter
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: node-exporter
  labels:
    release_group: release-name
    application: node_exporter
    component: metrics
  annotations:
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: metrics
      port: 9100
      targetPort: 9100
  selector:
    release_group: release-name
    application: node_exporter
    component: metrics
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  annotations:
    openstackhelm.openstack.org/release_uuid: ""
  labels:
    release_group: release-name
    application: node_exporter
    component: metrics
spec:
  selector:
    matchLabels:
      release_group: release-name
      application: node_exporter
      component: metrics
  minReadySeconds: 0
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        release_group: release-name
        application: node_exporter
        component: metrics
      annotations:
        openstackhelm.openstack.org/release_uuid: ""
        configmap-bin-hash: e4d0b9a50d375f7db8e3aae297f717d13c0c295a6871aaf4a5bf8784466c81cd
    spec:
      securityContext:
        runAsUser: 65534
      serviceAccountName: release-name-node-exporter
      nodeSelector:
        openstack-control-plane: enabled
      hostNetwork: true
      hostPID: true
      initContainers:
        - name: init
          image: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 65534
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INTERFACE_NAME
              value: eth0
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: DEPENDENCY_SERVICE
              value: ""
            - name: DEPENDENCY_DAEMONSET
              value: ""
            - name: DEPENDENCY_CONTAINER
              value: ""
            - name: DEPENDENCY_POD_JSON
              value: ""
            - name: DEPENDENCY_CUSTOM_RESOURCE
              value: ""
          command:
            - kubernetes-entrypoint
          volumeMounts: []
      containers:
        - name: node-exporter
          image: docker.io/prom/node-exporter:v0.18.1
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                "": NET_RAW
          command:
            - /tmp/node-exporter.sh
          ports:
            - name: metrics
              containerPort: 9100
              hostPort: 9100
          readinessProbe:
            httpGet:
              port: 9100
            initialDelaySeconds: 20
            periodSeconds: 10
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: proc
              mountPath: /host/proc
              readOnly: true
            - name: sys
              mountPath: /host/sys
              readOnly: true
            - name: stats-out
              mountPath: /var/log/node-exporter-vfstats
              readOnly: true
            - name: node-exporter-bin
              mountPath: /tmp/node-exporter.sh
              subPath: node-exporter.sh
              readOnly: true
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
        - name: stats-out
          hostPath:
            path: /var/log/node-exporter-vfstats
        - name: node-exporter-bin
          configMap:
            name: node-exporter-bin
            defaultMode: 365
