apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mongodb
  namespace: 4xAJZzia1A
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.30.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: release-name-mongodb
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-pritunl
  labels:
    app: pritunl
    helm.sh/chart: pritunl-0.2.1
    release: release-name
    app.kubernetes.io/version: "1.29"
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-mongodb
  namespace: 4xAJZzia1A
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.30.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
type: Opaque
data:
  mongodb-root-password: cjJzdHVjTEg2cQ==
  mongodb-passwords: UUxaT2dISWdiTw==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pritunl
  labels:
    app: pritunl
    helm.sh/chart: pritunl-0.2.1
    release: release-name
    app.kubernetes.io/version: "1.29"
    app.kubernetes.io/managed-by: Helm
data:
  pritunl.conf: |
    {
      "bind_addr": "0.0.0.0",
      "host_id": "ffd7a38db01042cf806760c211ff4a41",
      "local_address_interface": "auto",
      "log_path": "/var/log/pritunl.log",
      "port": 443,
      "static_cache": true,
      "temp_path": "/tmp/pritunl_%r",
      "www_path": "/usr/share/pritunl/www"
    }
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-mongodb
  namespace: default
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.30.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-mongodb
  namespace: 4xAJZzia1A
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.30.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-pritunl
  labels:
    app: pritunl
    helm.sh/chart: pritunl-0.2.1
    release: release-name
    app.kubernetes.io/version: "1.29"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - name: openvpn
      port: 1194
      targetPort: openvpn
      protocol: TCP
  selector:
    app: pritunl
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-pritunl-web
  labels:
    app: pritunl
    helm.sh/chart: pritunl-0.2.1
    release: release-name
    app.kubernetes.io/version: "1.29"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      targetPort: https
  selector:
    app: pritunl
    release: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mongodb
  namespace: 4xAJZzia1A
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.30.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  replicas: 1
  strategy:
    type: Recreate
    rollingUpdate: null
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-10.30.6
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:
      serviceAccountName: release-name-mongodb
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mongodb
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: mongodb
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
        sysctls: []
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:4.4.10-debian-10-r44
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 11607
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MONGODB_EXTRA_USERNAMES
              value: pritunl
            - name: MONGODB_EXTRA_DATABASES
              value: pritunl
            - name: MONGODB_EXTRA_PASSWORDS
              valueFrom:
                secretKeyRef:
                  name: release-name-mongodb
                  key: mongodb-passwords
            - name: MONGODB_ROOT_USER
              value: root
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mongodb
                  key: mongodb-root-password
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
            - name: MONGODB_EXTRA_FLAGS
              value: --wiredTigerCacheSizeGB=0.25
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - db.adminCommand('ping')
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  # Run the proper check depending on the version
                  [[ $(mongo --version | grep "MongoDB shell") =~ ([0-9]+\.[0-9]+\.[0-9]+) ]] && VERSION=${BASH_REMATCH[1]}
                  . /opt/bitnami/scripts/libversion.sh
                  VERSION_MAJOR="$(get_sematic_version "$VERSION" 1)"
                  VERSION_MINOR="$(get_sematic_version "$VERSION" 2)"
                  VERSION_PATCH="$(get_sematic_version "$VERSION" 3)"
                  if [[ "$VERSION_MAJOR" -ge 4 ]] && [[ "$VERSION_MINOR" -ge 4 ]] && [[ "$VERSION_PATCH" -ge 2 ]]; then
                      mongo --disableImplicitSessions $TLS_OPTIONS --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep -q 'true'
                  else
                      mongo --disableImplicitSessions $TLS_OPTIONS --eval 'db.isMaster().ismaster || db.isMaster().secondary' | grep -q 'true'
                  fi
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: null
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: release-name-mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pritunl
  labels:
    app: pritunl
    helm.sh/chart: pritunl-0.2.1
    release: release-name
    app.kubernetes.io/version: "1.29"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pritunl
      release: release-name
  template:
    metadata:
      labels:
        app: pritunl
        release: release-name
      annotations:
        checksum/pritunl.conf: 7ca87c21f831baadafda1490fbd5a094f720304c5ac1b000bfb5f24915430c7b
    spec:
      serviceAccountName: release-name-pritunl
      initContainers:
        - name: alpine
          image: alpine
          command:
            - sh
            - -c
            - cp /configmap/pritunl.conf /etc/pritunl
          volumeMounts:
            - name: conf
              mountPath: /etc/pritunl
            - name: configmap
              mountPath: /configmap
      containers:
        - name: pritunl
          securityContext:
            capabilities:
              drop:
                "": NET_RAW
            privileged: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          image: dysnix/pritunl:v1.29-r8
          imagePullPolicy: IfNotPresent
          env:
            - name: PRITUNL_OVERRIDE_CONF
              value: /etc/pritunl/pritunl.conf
            - name: PRITUNL_MONGODB_URI_TEMPLATE
              value: mongodb://pritunl:$PRITUNL_MONGODB_PASSWORD@release-name-pritunl-mongodb/pritunl
            - name: PRITUNL_MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-pritunl-mongodb
                  key: mongodb-passwords
          ports:
            - name: https
              containerPort: 443
            - name: openvpn
              containerPort: 1194
              protocol: TCP
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: conf
              mountPath: /etc/pritunl
      volumes:
        - name: configmap
          configMap:
            name: release-name-pritunl
        - name: conf
          emptyDir: {}
