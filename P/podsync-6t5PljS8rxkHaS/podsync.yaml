apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-podsync
  labels:
    helm.sh/chart: podsync-1.5.4
    app.kubernetes.io/name: podsync
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v2.4.2
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-podsync
data:
  config.toml: |
    # template
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-podsync
  labels:
    helm.sh/chart: podsync-1.5.4
    app.kubernetes.io/name: podsync
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v2.4.2
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: podsync
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-podsync
  labels:
    helm.sh/chart: podsync-1.5.4
    app.kubernetes.io/name: podsync
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v2.4.2
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: podsync
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 58b1ed6ed0d7441442fb1f9bcd58256798ce97adda568404b505491991955994
      labels:
        app.kubernetes.io/name: podsync
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-podsync
      securityContext: {}
      containers:
        - name: podsync
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: tdeutsch/podsync:v2.4.2
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /app/data
              name: data
            - mountPath: /app/config.toml
              name: config-final
              subPath: config.toml
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
      initContainers:
        - name: podsync-init-config
          image: bhgedigital/envsubst:v1.0-alpine3.6
          imagePullPolicy: IfNotPresent
          env:
            - name: PODSYNC_PORT
              value: "8080"
            - name: PODSYNC_DATA_DIR
              value: /app/data
          args:
            - sh
            - -c
            - envsubst < /workdir/config.toml > /processed/config.toml
          volumeMounts:
            - mountPath: /workdir
              name: config-template
            - mountPath: /processed
              name: config-final
      volumes:
        - name: config-template
          configMap:
            name: release-name-podsync
        - name: config-final
          emptyDir: {}
        - name: data
          emptyDir: {}
