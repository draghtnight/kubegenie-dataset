[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-frontend",
      "labels": {
        "helm.sh/chart": "frontend-0.1.15",
        "app.kubernetes.io/name": "frontend",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-hasura",
      "labels": {
        "helm.sh/chart": "hasura-1.1.6",
        "app.kubernetes.io/name": "hasura",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v2.0.9",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-hasura-backend-plus",
      "labels": {
        "helm.sh/chart": "hasura-backend-plus-0.2.6",
        "app.kubernetes.io/name": "hasura-backend-plus",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.7.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-hasura"
    },
    "type": "Opaque",
    "data": {
      "adminSecret": "bHZFWWhCMmxDNlpKVDZCRjZRZzJ3QnhxM2dNSFFlT3RuT0FxenJwTzZ4QkJYc2lwSjhLZDJ5TlVEb3h3MzVzdg==",
      "jwt.secret": "eyJ0eXBlIjogIkhTMjU2IiwgImtleSI6ICI5bHA2WFFQaU5mWVo3UkJ3QmVyNFp6NTJ2WlF1TnNXS3BqY2xFc0RzM3VkSmFtcnBXM3BsTlVNNThDY0dYeXBhIiwgImNsYWltc19uYW1lc3BhY2UiOiAiaHR0cHM6Ly9oYXN1cmEuaW8vand0L2NsYWltcyJ9",
      "jwt.key": "OWxwNlhRUGlOZllaN1JCd0JlcjRaejUydlpRdU5zV0twamNsRXNEczN1ZEphbXJwVzNwbE5VTTU4Q2NHWHlwYQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql"
    },
    "type": "Opaque",
    "data": {
      "postgresql-password": "dlBhczlrdzI2WVU5UVRDbERTY2FqTjFVamxhOXNBRU4=",
      "databaseUrl": "cG9zdGdyZXM6Ly9wb3N0Z3Jlczp2UGFzOWt3MjZZVTlRVENsRFNjYWpOMVVqbGE5c0FFTkByZWxlYXNlLW5hbWUtcG9zdGdyZXNxbDo1NDMyL2hhc3VyYQ==",
      "metadataUrl": "cG9zdGdyZXM6Ly9wb3N0Z3Jlczp2UGFzOWt3MjZZVTlRVENsRFNjYWpOMVVqbGE5c0FFTkByZWxlYXNlLW5hbWUtcG9zdGdyZXNxbDo1NDMyL2hhc3VyYQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-hasura-backend-plus"
    },
    "type": "Opaque",
    "data": {
      "cookies.secret": "RXNtbWcxVEpMV05PU3UxQjMwNEJsS0NFc1dmT1RLeFR2N05ESDNjNzBib2RZYUNPSzFHelZUSkxTMGtuYUhBMQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-frontend",
      "namespace": "QhdS5ORwKqVz"
    },
    "data": {
      "config.json": "{\n  \"authUrl\": \"http://auth.\", \"hasuraUrl\": \"http://hasura./v1/graphql\"\n}\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-postgresql-extended-configuration",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "QhdS5ORwKqVz"
    },
    "data": {
      "override.conf": "search_path = '\"$user\",public,auth'\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-postgresql-init-scripts",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "QhdS5ORwKqVz"
    },
    "data": {
      "hasura-init.sql": "CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;\nCREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA public;\nCREATE OR REPLACE FUNCTION public.set_current_timestamp_updated_at() RETURNS trigger\n    LANGUAGE plpgsql\n    AS $$\ndeclare\n  _new record;\nbegin\n  _new := new;\n  _new. \"updated_at\" = now();\n  return _new;\nend;\n$$;\n",
      "hbp-init.sql": "CREATE SCHEMA IF NOT EXISTS auth;\nCREATE SCHEMA IF NOT EXISTS storage;\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-hasura",
      "namespace": "QhdS5ORwKqVz"
    },
    "data": {
      "jwt.algorithm": "HS256",
      "jwt.claims.namespace": "https://hasura.io/jwt/claims",
      "endpoint": "http://release-name-hasura"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-hasura-backend-plus",
      "namespace": "QhdS5ORwKqVz"
    },
    "data": {
      "jwt.expires.in": "15",
      "jwt.expires.refresh": "43200",
      "jwt.customFields": "",
      "emails.enabled": "false",
      "limiter.max-requests": "1000",
      "limiter.time-frame": "900000"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-frontend",
      "labels": {
        "helm.sh/chart": "frontend-0.1.15",
        "app.kubernetes.io/name": "frontend",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 3000,
          "targetPort": 80,
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "frontend",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql-headless",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      },
      "namespace": "QhdS5ORwKqVz"
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "publishNotReadyAddresses": true,
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null,
      "namespace": "QhdS5ORwKqVz"
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name",
        "role": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-hasura",
      "labels": {
        "helm.sh/chart": "hasura-1.1.6",
        "app.kubernetes.io/name": "hasura",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v2.0.9",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": 8080,
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "hasura",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-hasura-backend-plus",
      "labels": {
        "helm.sh/chart": "hasura-backend-plus-0.2.6",
        "app.kubernetes.io/name": "hasura-backend-plus",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.7.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": 3000,
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "hasura-backend-plus",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-frontend",
      "labels": {
        "helm.sh/chart": "frontend-0.1.15",
        "app.kubernetes.io/name": "frontend",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "frontend",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "rollme": "Jlrj8"
          },
          "labels": {
            "app.kubernetes.io/name": "frontend",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-frontend",
          "volumes": [
            {
              "name": "config-file",
              "configMap": {
                "name": "release-name-frontend",
                "items": [
                  {
                    "key": "config.json",
                    "path": "config.json"
                  }
                ]
              }
            }
          ],
          "securityContext": {},
          "containers": [
            {
              "name": "frontend",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "platyplus/platyplus:latest",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "name": "config-file",
                  "mountPath": "/usr/share/nginx/html/config.json",
                  "subPath": "config.json"
                }
              ],
              "env": null,
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-hasura",
      "labels": {
        "helm.sh/chart": "hasura-1.1.6",
        "app.kubernetes.io/name": "hasura",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v2.0.9",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "hasura",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "bc97dc2efef3636619c2775267603973490275c9e2fc32534acfe72e87a2f01e",
            "checksum/hasura-secrets": "d0c8692e604c2c0099b89a27c01a376732308550c3c763154e631a78fb635b0e",
            "checksum/postgresql-secrets": "8f6a5f3a0e786fe3687ecb6b7082c8e9424209da955b64afde9d16b82abadb01"
          },
          "labels": {
            "app.kubernetes.io/name": "hasura",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-hasura",
          "securityContext": {},
          "initContainers": [
            {
              "name": "wait-postgres",
              "image": "busybox",
              "command": [
                "sh",
                "-c",
                "until nc -z $DB_HOST $DB_PORT\ndo\n  echo \\\"waiting for database\\\"\n  sleep 1\ndone\nuntil nc -z $METADATA_HOST $METADATA_PORT\ndo\n  echo \\\"waiting for metadata database\\\"\n  sleep 1\ndone\n"
              ],
              "env": [
                {
                  "name": "DB_HOST",
                  "value": "release-name-postgresql"
                },
                {
                  "name": "DB_PORT",
                  "value": "5432"
                },
                {
                  "name": "METADATA_HOST",
                  "value": "release-name-postgresql"
                },
                {
                  "name": "METADATA_PORT",
                  "value": "5432"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "hasura",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "platyplus/hasura:latest",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": "http"
                }
              },
              "env": [
                {
                  "name": "HASURA_GRAPHQL_ENABLE_CONSOLE",
                  "value": "false"
                },
                {
                  "name": "HASURA_GRAPHQL_DATABASE_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "databaseUrl"
                    }
                  }
                },
                {
                  "name": "HASURA_GRAPHQL_METADATA_DATABASE_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "metadataUrl"
                    }
                  }
                },
                {
                  "name": "HASURA_GRAPHQL_ADMIN_SECRET",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-hasura",
                      "key": "adminSecret"
                    }
                  }
                },
                {
                  "name": "HASURA_GRAPHQL_JWT_SECRET",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-hasura",
                      "key": "jwt.secret"
                    }
                  }
                },
                {
                  "name": "HASURA_GRAPHQL_UNAUTHORIZED_ROLE",
                  "value": "anonymous"
                },
                {
                  "name": "HASURA_GRAPHQL_CORS_DOMAIN",
                  "value": "*"
                },
                {
                  "name": "HASURA_GRAPHQL_DISABLE_CORS",
                  "value": "false"
                },
                {
                  "name": "HASURA_GRAPHQL_WS_READ_COOKIE",
                  "value": "false"
                },
                {
                  "name": "HASURA_GRAPHQL_ENABLE_TELEMETRY",
                  "value": "false"
                },
                {
                  "name": "HASURA_GRAPHQL_EVENTS_HTTP_POOL_SIZE",
                  "value": "100"
                },
                {
                  "name": "HASURA_GRAPHQL_EVENTS_FETCH_INTERVAL",
                  "value": "3000000"
                },
                {
                  "name": "HASURA_GRAPHQL_EVENTS_FETCH_BATCH_SIZE",
                  "value": "100"
                },
                {
                  "name": "HASURA_GRAPHQL_ASYNC_ACTIONS_FETCH_INTERVAL",
                  "value": "0"
                },
                {
                  "name": "HASURA_GRAPHQL_PG_CONNECTIONS",
                  "value": "50"
                },
                {
                  "name": "HASURA_GRAPHQL_PG_TIMEOUT",
                  "value": "180"
                },
                {
                  "name": "HASURA_GRAPHQL_USE_PREPARED_STATEMENTS",
                  "value": "true"
                },
                {
                  "name": "HASURA_GRAPHQL_TX_ISOLATION",
                  "value": "read-committed"
                },
                {
                  "name": "HASURA_GRAPHQL_PG_CONN_LIFETIME",
                  "value": "600"
                },
                {
                  "name": "HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES",
                  "value": "false"
                },
                {
                  "name": "HASURA_GRAPHQL_ENABLED_APIS",
                  "value": "metadata,graphql,pgdump,config"
                },
                {
                  "name": "HASURA_GRAPHQL_ENABLED_LOG_TYPES",
                  "value": "startup,http-log,webhook-log,websocket-log"
                },
                {
                  "name": "HASURA_GRAPHQL_LOG_LEVEL",
                  "value": "info"
                },
                {
                  "name": "HASURA_GRAPHQL_DEV_MODE",
                  "value": "false"
                },
                {
                  "name": "HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS",
                  "value": "false"
                },
                {
                  "name": "HASURA_GRAPHQL_INFER_FUNCTION_PERMISSIONS",
                  "value": "true"
                },
                {
                  "name": "HASURA_GRAPHQL_SCHEMA_SYNC_POLL_INTERVAL",
                  "value": "1000"
                },
                {
                  "name": "HASURA_GRAPHQL_ADMIN_INTERNAL_ERRORS",
                  "value": "true"
                },
                {
                  "name": "HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_REFETCH_INTERVAL",
                  "value": "1000"
                },
                {
                  "name": "HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_BATCH_SIZE",
                  "value": "100"
                },
                {
                  "name": "HASURA_GRAPHQL_EXPERIMENTAL_FEATURES",
                  "value": "inherited_roles"
                },
                {
                  "name": "HASURA_GRAPHQL_GRACEFUL_SHUTDOWN_TIMEOUT",
                  "value": "60"
                },
                {
                  "name": "HASURA_GRAPHQL_ENABLE_MAINTENANCE_MODE",
                  "value": "false"
                },
                {
                  "name": "HASURA_GRAPHQL_CONNECTION_COMPRESSION",
                  "value": "false"
                },
                {
                  "name": "HASURA_GRAPHQL_WEBSOCKET_KEEPALIVE",
                  "value": "5"
                },
                {
                  "name": "HASURA_GRAPHQL_WEBSOCKET_CONNECTION_INIT_TIMEOUT",
                  "value": "3"
                },
                {
                  "name": "HASURA_GRAPHQL_ENABLE_ALLOWLIST",
                  "value": "false"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-hasura-backend-plus",
      "labels": {
        "helm.sh/chart": "hasura-backend-plus-0.2.6",
        "app.kubernetes.io/name": "hasura-backend-plus",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.7.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "hasura-backend-plus",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "rollme": "jQIdS"
          },
          "labels": {
            "app.kubernetes.io/name": "hasura-backend-plus",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-hasura-backend-plus",
          "securityContext": {},
          "volumes": null,
          "initContainers": [
            {
              "name": "wait-hasura",
              "image": "busybox",
              "command": [
                "sh",
                "-c",
                "until wget 2>/dev/null -q --spider $HASURA_ENDPOINT/healthz\ndo\n  echo \\\"waiting for hasura\\\"\n  sleep 1\ndone\n"
              ],
              "env": [
                {
                  "name": "HASURA_ENDPOINT",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "name": "release-name-hasura",
                      "key": "endpoint"
                    }
                  }
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "hasura-backend-plus",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "nhost/hasura-backend-plus:2.7.1",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 3000,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": null,
              "env": [
                {
                  "name": "ENDPOINT",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "name": "release-name-hasura",
                      "key": "endpoint"
                    }
                  }
                },
                {
                  "name": "HASURA_ENDPOINT",
                  "value": "$(ENDPOINT)/v1/graphql"
                },
                {
                  "name": "DATABASE_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "databaseUrl"
                    }
                  }
                },
                {
                  "name": "HASURA_GRAPHQL_ADMIN_SECRET",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-hasura",
                      "key": "adminSecret"
                    }
                  }
                },
                {
                  "name": "JWT_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-hasura",
                      "key": "jwt.key"
                    }
                  }
                },
                {
                  "name": "JWT_ALGORITHM",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "name": "release-name-hasura",
                      "key": "jwt.algorithm"
                    }
                  }
                },
                {
                  "name": "JWT_CLAIMS_NAMESPACE",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "name": "release-name-hasura",
                      "key": "jwt.claims.namespace"
                    }
                  }
                },
                {
                  "name": "JWT_EXPIRES_IN",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "name": "release-name-hasura-backend-plus",
                      "key": "jwt.expires.in"
                    }
                  }
                },
                {
                  "name": "JWT_REFRESH_EXPIRES_IN",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "name": "release-name-hasura-backend-plus",
                      "key": "jwt.expires.refresh"
                    }
                  }
                },
                {
                  "name": "JWT_CUSTOM_FIELDS",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "name": "release-name-hasura-backend-plus",
                      "key": "jwt.customFields"
                    }
                  }
                },
                {
                  "name": "AUTH_ENABLED",
                  "value": "true"
                },
                {
                  "name": "AUTH_LOCAL_USERS_ENABLE",
                  "value": "true"
                },
                {
                  "name": "CHANGE_EMAIL_ENABLE",
                  "value": "true"
                },
                {
                  "name": "NOTIFY_EMAIL_CHANGE",
                  "value": "false"
                },
                {
                  "name": "ANONYMOUS_USERS_ENABLED",
                  "value": "false"
                },
                {
                  "name": "ALLOW_USER_SELF_DELETE",
                  "value": "false"
                },
                {
                  "name": "VERIFY_EMAILS",
                  "value": "false"
                },
                {
                  "name": "LOST_PASSWORD_ENABLE",
                  "value": "false"
                },
                {
                  "name": "ALLOWED_EMAIL_DOMAINS",
                  "value": ""
                },
                {
                  "name": "DEFAULT_USER_ROLE",
                  "value": "user"
                },
                {
                  "name": "DEFAULT_ANONYMOUS_ROLE",
                  "value": "anonymous"
                },
                {
                  "name": "AUTO_ACTIVATE_NEW_USERS",
                  "value": "true"
                },
                {
                  "name": "HIBP_ENABLE",
                  "value": "false"
                },
                {
                  "name": "REGISTRATION_CUSTOM_FIELDS",
                  "value": ""
                },
                {
                  "name": "MIN_PASSWORD_LENGTH",
                  "value": "3"
                },
                {
                  "name": "DEFAULT_ALLOWED_USER_ROLES",
                  "value": "user,me"
                },
                {
                  "name": "ALLOWED_USER_ROLES",
                  "value": "user,me"
                },
                {
                  "name": "COOKIE_SECRET",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-hasura-backend-plus",
                      "key": "cookies.secret"
                    }
                  }
                },
                {
                  "name": "COOKIE_SECURE",
                  "value": "false"
                },
                {
                  "name": "COOKIE_SAME_SITE",
                  "value": "lax"
                },
                {
                  "name": "MFA_ENABLE",
                  "value": "true"
                },
                {
                  "name": "OTP_ISSUER",
                  "value": "HBP"
                },
                {
                  "name": "REDIRECT_URL_SUCCESS",
                  "value": ""
                },
                {
                  "name": "REDIRECT_URL_ERROR",
                  "value": ""
                },
                {
                  "name": "STORAGE_ENABLE",
                  "value": "false"
                },
                {
                  "name": "MAX_REQUESTS",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "name": "release-name-hasura-backend-plus",
                      "key": "limiter.max-requests"
                    }
                  }
                },
                {
                  "name": "TIME_FRAME",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "name": "release-name-hasura-backend-plus",
                      "key": "limiter.time-frame"
                    }
                  }
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": "http"
                }
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.10.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null,
      "namespace": "QhdS5ORwKqVz"
    },
    "spec": {
      "serviceName": "release-name-postgresql-headless",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "postgresql",
          "app.kubernetes.io/instance": "release-name",
          "role": "primary"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-postgresql",
          "labels": {
            "app.kubernetes.io/name": "postgresql",
            "helm.sh/chart": "postgresql-10.10.1",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "role": "primary",
            "app.kubernetes.io/component": "primary"
          }
        },
        "spec": {
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "postgresql",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "automountServiceAccountToken": false,
          "containers": [
            {
              "name": "release-name-postgresql",
              "image": "docker.io/bitnami/postgresql:14.1.0",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "securityContext": {
                "runAsUser": 10653,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432"
                },
                {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql"
                },
                {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgres"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "hasura"
                },
                {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_ENABLE_TLS",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_LOG_HOSTNAME",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_CONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_DISCONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PGAUDIT_LOG_CATALOG",
                  "value": "off"
                },
                {
                  "name": "POSTGRESQL_CLIENT_MIN_MESSAGES",
                  "value": "error"
                },
                {
                  "name": "POSTGRESQL_SHARED_PRELOAD_LIBRARIES",
                  "value": "pgaudit"
                }
              ],
              "ports": [
                {
                  "name": "tcp-postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \"postgres\" -d \"dbname=hasura\" -h 127.0.0.1 -p 5432"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "exec pg_isready -U \"postgres\" -d \"dbname=hasura\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": [
                {
                  "name": "custom-init-scripts",
                  "mountPath": "/docker-entrypoint-initdb.d/"
                },
                {
                  "name": "postgresql-extended-config",
                  "mountPath": "/bitnami/postgresql/conf/conf.d/"
                },
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql",
                  "subPath": null
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "postgresql-extended-config",
              "configMap": {
                "name": "release-name-postgresql-extended-configuration"
              }
            },
            {
              "name": "custom-init-scripts",
              "configMap": {
                "name": "release-name-postgresql-init-scripts"
              }
            },
            {
              "name": "dshm",
              "emptyDir": {
                "medium": "Memory"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  }
]