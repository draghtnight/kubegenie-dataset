apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-2.10.0
    release: release-name
    heritage: Helm
  name: release-name-prometheus-adapter
  namespace: eKqYab3iqkjk
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-prometheus-adapter
  namespace: eKqYab3iqkjk
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-2.10.0
    release: release-name
    heritage: Helm
data:
  config.yaml: |
    rules:
    - seriesQuery: '{__name__=~"^container_.*",container!="POD",namespace!="",pod!=""}'
      seriesFilters: []
      resources:
        overrides:
          namespace:
            resource: namespace
          pod:
            resource: pod
      name:
        matches: ^container_(.*)_seconds_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container!="POD"}[5m]))
        by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^container_.*",container!="POD",namespace!="",pod!=""}'
      seriesFilters:
      - isNot: ^container_.*_seconds_total$
      resources:
        overrides:
          namespace:
            resource: namespace
          pod:
            resource: pod
      name:
        matches: ^container_(.*)_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container!="POD"}[5m]))
        by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^container_.*",container!="POD",namespace!="",pod!=""}'
      seriesFilters:
      - isNot: ^container_.*_total$
      resources:
        overrides:
          namespace:
            resource: namespace
          pod:
            resource: pod
      name:
        matches: ^container_(.*)$
        as: ""
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,container!="POD"}) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters:
      - isNot: .*_total$
      resources:
        template: <<.Resource>>
      name:
        matches: ""
        as: ""
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters:
      - isNot: .*_seconds_total
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters: []
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_seconds_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-2.10.0
    release: release-name
    heritage: Helm
  name: prometheus-adapter-resource-reader
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - services
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-2.10.0
    release: release-name
    heritage: Helm
  name: prometheus-adapter-server-resources
rules:
  - apiGroups:
      - custom.metrics.k8s.io
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-2.10.0
    release: release-name
    heritage: Helm
  name: prometheus-adapter-system-auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: release-name-prometheus-adapter
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-2.10.0
    release: release-name
    heritage: Helm
  name: prometheus-adapter-resource-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-adapter-resource-reader
subjects:
  - kind: ServiceAccount
    name: release-name-prometheus-adapter
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-2.10.0
    release: release-name
    heritage: Helm
  name: prometheus-adapter-hpa-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-adapter-server-resources
subjects:
  - kind: ServiceAccount
    name: release-name-prometheus-adapter
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-2.10.0
    release: release-name
    heritage: Helm
  name: prometheus-adapter-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: release-name-prometheus-adapter
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-2.10.0
    release: release-name
    heritage: Helm
  name: release-name-prometheus-adapter
  namespace: eKqYab3iqkjk
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: https
  selector:
    app: prometheus-adapter
    release: release-name
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-2.10.0
    release: release-name
    heritage: Helm
  name: release-name-prometheus-adapter
  namespace: eKqYab3iqkjk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-adapter
      release: release-name
  template:
    metadata:
      labels:
        app: prometheus-adapter
        chart: prometheus-adapter-2.10.0
        release: release-name
        heritage: Helm
      name: prometheus-adapter
      annotations:
        checksum/config: 0ff0f444bb057d61fba7a3ce6c5f47880a6da88bf0c951d0023f97480c0ea77c
    spec:
      serviceAccountName: release-name-prometheus-adapter
      containers:
        - name: prometheus-adapter
          image: directxman12/k8s-prometheus-adapter-amd64:v0.8.2
          imagePullPolicy: IfNotPresent
          args:
            - /adapter
            - --secure-port=6443
            - --cert-dir=/tmp/cert
            - --logtostderr=true
            - --prometheus-url=http://prometheus.default.svc:9090
            - --metrics-relist-interval=1m
            - --v=4
            - --config=/etc/adapter/config.yaml
          ports:
            - containerPort: 6443
              name: https
          livenessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          volumeMounts:
            - mountPath: /etc/adapter/
              name: config
              readOnly: true
            - mountPath: /tmp
              name: tmp
      nodeSelector: {}
      affinity: {}
      priorityClassName: null
      tolerations: []
      volumes:
        - name: config
          configMap:
            name: release-name-prometheus-adapter
        - name: tmp
          emptyDir: {}
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-2.10.0
    release: release-name
    heritage: Helm
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: release-name-prometheus-adapter
    namespace: default
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
