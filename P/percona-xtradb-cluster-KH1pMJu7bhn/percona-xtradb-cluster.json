[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-pxc",
      "labels": {
        "app": "release-name-pxc",
        "chart": "percona-xtradb-cluster-1.5.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "mysql-root-password": "UE5jODJXREhDcA==",
      "mysql-password": "OGNVdDNONmhtRA==",
      "xtrabackup-password": "dGdEMXQ3bzJYSQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "mysql-ssl-certs",
      "labels": {
        "app": "release-name-pxc",
        "chart": "percona-xtradb-cluster-1.5.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "ca.pem": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEvTVQwd093WURWUVFERERSTmVWTlIKVEY5VFpYSjJaWEpmT0M0d0xqRTVMVEV3WDBGMWRHOWZSMlZ1WlhKaGRHVmtYME5CWDBObGNuUnBabWxqWVhSbApNQjRYRFRJd01EZ3hOREl5TVRBME9Gb1hEVE13TURneE1qSXlNVEEwT0Zvd1B6RTlNRHNHQTFVRUF3dzBUWGxUClVVeGZVMlZ5ZG1WeVh6Z3VNQzR4T1MweE1GOUJkWFJ2WDBkbGJtVnlZWFJsWkY5RFFWOURaWEowYVdacFkyRjAKWlRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS3JBWWxCTVRqa1RtMFhRWnRvdQp2MlA2bVdrS05JZzV2QnhQdmNPa1hFT3ZXaldRVVlCYklXWFJ2clZ1Mk9KSWgybXNqdFgrc095NzFFbjZCa0VyCi9jOXJJU09xZ1FqdkZzbFkraXJVS3VUamFxMjlPZHNXcEo2Q3BocjBCL0hqTXFWSVdtdUxiM0p1Z003cmFHUWsKOUJSRE9wN1BzVFFHVEFXNFV1S0kxUk41dVJsc2tSMjRkQWdOK0x6Qlk0emdpN2tGU0xmcklEa3JBRlArclJqRwpnZEJ6dVBwMGE1WHBCaUczSG11dnd5bmlSTEtBdHc4WFdMTnlucklFYVpaTzJjbk1UdWVlUGM5N0dDeDVBaFlGCisra1ZndnNOSDBEd3NOUE04Umk5MVAwMis4SDQvVjhnL1lRV1JUYU1VTUlkQVQwSEh6WmFLNVVia0JHOW9EU28KYjFVQ0F3RUFBYU1RTUE0d0RBWURWUjBUQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBSDJXYgo3cTVaK3p3NWc4ZXYrSkxBdnBFQjBiQndvSmkrbW4vL05rS2w2aXAzdkYrZE9JcHY0SHNQdmZyUGhmRlR6N25OClMzYldTN2t4d05OYzA2b244ZkVGeDRHbWhvWmdrL0xJeWdsNkttakVqeVg4THZwaUQyQzYyWnVvTGhZQkZvZG8KdzNDVU1qb3o2VFgyRkxlMTllZFUvMVhsQVgyRHVhOHBtUEZXaEZQY3l5Tm91a0RRWkZQcmtWZ1p6NmJOeExVUQpPalpNaWpnYVptNHJNNGxZSkNHM1BydzNUeHdkT0tKVFVIUEl1eklEVWh0NEZ4U1FiOE84ZzBTaUFna1J5RXIzCnlZQzhYZVRpT0VVaFl5WFEwbU1KdkNwbTZTZHc5b3NUTWNZVG9OdUN1NTNRUThiMzNFU2JwZmEvTlFlOUhwTW0KbjhPRmMwdG41QzlvV1hram1nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==",
      "ca-key.pem": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcXNCaVVFeE9PUk9iUmRCbTJpNi9ZL3FaYVFvMGlEbThIRSs5dzZSY1E2OWFOWkJSCmdGc2haZEcrdFc3WTRraUhhYXlPMWY2dzdMdlVTZm9HUVN2OXoyc2hJNnFCQ084V3lWajZLdFFxNU9OcXJiMDUKMnhha25vS21HdlFIOGVNeXBVaGFhNHR2Y202QXp1dG9aQ1QwRkVNNm5zK3hOQVpNQmJoUzRvalZFM201R1d5UgpIYmgwQ0EzNHZNRmpqT0NMdVFWSXQrc2dPU3NBVS82dEdNYUIwSE80K25Scmxla0dJYmNlYTYvREtlSkVzb0MzCkR4ZFlzM0tlc2dScGxrN1p5Y3hPNTU0OXozc1lMSGtDRmdYNzZSV0MrdzBmUVBDdzA4enhHTDNVL1RiN3dmajkKWHlEOWhCWkZOb3hRd2gwQlBRY2ZObG9ybFJ1UUViMmdOS2h2VlFJREFRQUJBb0lCQUNnS1JRT2ZZUmh4U0kvdQpkcS9qRm01VGJYWDhOcVZiSklsZkNaaS9DZ08xTXVvc2xYQUw3cUQ1dGtiRlg0WndpNUIwTG1wdjl2ME1icE9LClZiMGltN252M1MySDVnbzZScFdnajhsTFIyTzFFR2I5WUh2SHE0S2dFR054cGd0S3c2Mk9jZVdXSk9Rb2xYdncKSitLVDU4aDRtMTV5UlpOMWhvNHcwdjdjSjFzUlpkMmVwV0dLZVFYSXIrMXBkbFVuZHFwYjJkcjBIV3lBQmprRQphOVVTc3hoVWJ0RzRCakR0Z1NGd0JVdE9iOEUvVlBTOXJDNUxhQkNJQlJYa202MlZBckJYRGJrOHlGRjFvSEs3CmM0Q2ZhbWFnc3dxdElNN29LNGRNRlpscXZTUEdrQVhzek01bnVqV0NISGhXa1JXRmZidkRYb25Zb3JoWndGV3YKbGIyM2xnRUNnWUVBM3NrSndRL1ZhR0dVa1NrZ3JVS3A0OFBINnMyNE93Uno2TjRGanZ2bDlvWjdEUTd5NGh4bwpWRnhneFVaTWZHNjd0TUo4eXdZQjQzMDc3Uk1hUDVoVnBuVzM0bzEvcStKZU5ka1VseWx0TytMNkNNWFhtRWNUClRmalI0aVhYVVdrbFZLajBRVVV5T1RuVEprQzQxRWtWRE5oZVZCR3RFaXRqbGk2U3RFdzM2REVDZ1lFQXhEVmsKT29kdEVIR0tPK1hVRnUzbDk4Q3hHbDYwamdxRFZ3S240UTJUZzhhVXZPQVFoOXdPYy9RNkhnNEJKSjdwOVFSYwpaTmI3dytlNFJCelNKbjJnK2F0V3NBdVYwTGtLZGo0amFnNkh4blAvbU8rQ1hNd2prMTlSZHhIUDRoWlc0djNpCnRQd2pxWXpTZXQ4ZTQ5RkdpTlFNdEFCeE1BMG90THVXOFFSV0ZHVUNnWUVBd0JoK3RaNXVkOU56NC9xZmQyVzgKMFd5VjY4czRhSUw5WXJSVi9LVU04NVdmY25JS1VaY0hDbjZnM2xrd1NEYSsyU3k5cDkxbE1YOWhkWmo4RUF2TgpCbndJYzJ0b3c0K3JoaWpJelZKbUlyWWl1Ly9EVjBVcHl4aVorTEtDUjJzdlNpRm9nd01rUEIyMUNBM1VrUTcyCi9KMXdNSE1SVlZKZVN6ZWJQYVZlcTNFQ2dZQUFzMWdhUldXRVM0TjgxME04bWJqYWU1dW1SblJLbFlzR2dvSHEKOGN0M0N2eDQrQ3ZXOEZnMDNjaGZWeGwxOGdOUDFxWWx6Z2EwR2wyMEVJNUhpT2RNUE9wZ1VvcEVab1M5QzFmQgpCekJBNnlVY2ZLNXdlbUllSXBiOTM5aG9MRUEvS3p6bC9JaDhFSDZuNWFnTWxEQzJTRnVMUVAwbWVNV09iNlVJClUwV2phUUtCZ1FDVllBZGVUM050bXhJZUM3L291U3ZYNVNQT09qaWpVbG5uMUN0ZnJmc3BWTVFUZ3VieUgxUmEKT1V5Sy8yYlRzQXE4ZkMvUjFKRE1JUjFWZHpLUmtYM2NSUzBISHhBOExOQnZUckVadW1MbDM4Y3pubTBuRkQ1VApUVFRHSGpZTzVQMFFHNWdCZ0xvTzhQZlVzOHk0bmNQREZwWmEwdWtYTCtYYTh0ZWoyNzNDZEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==",
      "client-cert.pem": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQXpBTkJna3Foa2lHOXcwQkFRc0ZBREEvTVQwd093WURWUVFERERSTmVWTlIKVEY5VFpYSjJaWEpmT0M0d0xqRTVMVEV3WDBGMWRHOWZSMlZ1WlhKaGRHVmtYME5CWDBObGNuUnBabWxqWVhSbApNQjRYRFRJd01EZ3hOREl5TVRBME9Wb1hEVE13TURneE1qSXlNVEEwT1Zvd1F6RkJNRDhHQTFVRUF3dzRUWGxUClVVeGZVMlZ5ZG1WeVh6Z3VNQzR4T1MweE1GOUJkWFJ2WDBkbGJtVnlZWFJsWkY5RGJHbGxiblJmUTJWeWRHbG0KYVdOaGRHVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDakpvUVJldllqeGpUeQp3WktnbjEzUkFObEFuVUFlZnR6MjJMSzJiaVNxbWEvZDg4QVZqN3ZyWEYyQ2EwN0g0VnJhRWs0ZjA2NVpHRysyCitIZnF0RDNzY2JxM0ZlR0pzaEgrTnlteEZlL2xjTWdURE1pOXY0eHA5ZTIvRUkrN1AyOGZUdFdTbUJPUWhCaGIKckFOYXZXeUFuWHBoRjQxaW9BRHhwWm9aMGpHUy80YWZ0WFVuZEwwd3VRVlRuZzF1eTJrTHRUT09mcC9Nb0NBZAp1d1VpamdvVmUzbHgwTHdaZEdhdzQvLzRvajRMRlpqUGUxVTVjL1pvbFYzT054U2hPTkpwU3o1Z01mYkdseXYvCjVFRjd2TERGU3I4VFRhbmZhOXdBeXE3aUFqSitJdWZZZm9vYnpuandxaW9FOHcwaDUrN2diWDZLVmo3c0U1UWIKYmJmc1V5RFhBZ01CQUFHakRUQUxNQWtHQTFVZEV3UUNNQUF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpkTwpualYva3V0ZlpGb3gvTjlsUUVCRnJ4Qi9PVXNnZ0ZIUS83WEVvb0VLUnN2U3NDelFleVBCbXBBS2hzV2ZUWDRJCjZwRTZEUUNqaWtLa1lKMjRFcjA3R0c1dUx2OEc1NHkzWC8rdlQ4a1c1b1JmeVdzaThXbDlTVTNaY2dwL2tDRUUKeUZjTlpNTnFrRFk0MWxUZlFkOUFkd2V2VmVDclg2dyt0am9VUEF4TXVMUVdJR3A5YzJwbjA0WFMzZmcrelVDUApqMmJXZjQvVnEwTC9HcFhMMkcyQVU4ZlR1WFFJblpxUEJCSHBFZllvWDBpQWw4ZTlKY0hpQ2hKcHNRUi9iWE05Cm56ZWlXaFJJZnNOdTNOTk10aFFuOWwvTjcxbDNDY0tuMUNINkZTeEswMXByUGFnNWZmUTVCSTNwNUNWaGRzME0KQndDUmdFRU11d3N4OXd1ekZkdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==",
      "client-key.pem": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb3lhRUVYcjJJOFkwOHNHU29KOWQwUURaUUoxQUhuN2M5dGl5dG00a3FwbXYzZlBBCkZZKzc2MXhkZ210T3grRmEyaEpPSDlPdVdSaHZ0dmgzNnJROTdIRzZ0eFhoaWJJUi9qY3BzUlh2NVhESUV3ekkKdmIrTWFmWHR2eENQdXo5dkgwN1ZrcGdUa0lRWVc2d0RXcjFzZ0oxNllSZU5ZcUFBOGFXYUdkSXhrditHbjdWMQpKM1M5TUxrRlU1NE5ic3RwQzdVempuNmZ6S0FnSGJzRklvNEtGWHQ1Y2RDOEdYUm1zT1AvK0tJK0N4V1l6M3RWCk9YUDJhSlZkempjVW9UalNhVXMrWURIMnhwY3IvK1JCZTd5d3hVcS9FMDJwMzJ2Y0FNcXU0Z0l5ZmlMbjJINksKRzg1NDhLb3FCUE1OSWVmdTRHMStpbFkrN0JPVUcyMjM3Rk1nMXdJREFRQUJBb0lCQUJhMWE3aUxKdXQvMFNyZwo2cW5VeE5nc2lCRElVbjVzSmhGdHhDSkVYbklvaGlRY28yWGM1Y2t5eUFrNUtuUUQyQU4yZk0xTlIzMDdPNEY2ClFDYTVBODEvWHYvUTJkMnluWEtHOXhTZyt3MHlqNGFuUnVHeVliYjE5aXVjQUlXTnBNZjB6eUZpYllhMS9EWDIKVVZrMStINUdiUnhLalBGblYvcEtsSkozZ1ZMMmFTM1hLWmZoMVZ1VjdkbFVGTUhuRTdpSEZXT2xGSmdCRExhYQpCK0sxQW1YUHBVYVEwaEFDZGpXRzViUHNDTXNITVB0dkJVZ3hENGJFVGtnaHg0MS9iOXNQdmxnYlBIZ3ZlZm9vCmpMQjA3d2pBN3RRVSthTlZvZWJWM2JRNFptaTM0OGwyWUExWTFROGFndFBtM2hJdW1Bekt5ZTFkaGxPYlRWRmIKU2ZKN3F6RUNnWUVBMXVFeDBDNzdKeG8wamFFOUZUZWd1SFdSbkRmZ2V1S2lzK2Nka1E0Z25SYS9Id2htNmNmMgpmZUlRTDdqY3Zyb2RQUEZ6SzZCVUNHTlc5NUQ4Zk5jYk93ZlRuWHFpdEFYQ0JtVC9IKzI4VE1BL0RYYXNvOFRlCjJ1Sjljck1xZmNPWUhkT3lXemdiRFdkSUJBdndpN3RhV3NBS20vSDloWm1FRE1Ob0R0Sy8zUk1DZ1lFQXdsOGsKb3JJMy9uSkFMUFIvNU11dnF1MjdlZG5HbXhiWW80SmQ5WDJIdUFQbCtEem1zRlpxbUdCeTJJaDI5RUhmUlBNVQpiemdSMlh1Q255UUdrakp1Q254QWFrblE2aFpSTDNBTjkrK0Jxdmx0bDhPekd0ekdPR1F3Q0lyeUgrYmYrakhkCkpiK1Y4UUxNNStJc21pNERjT1UwS3BwaDhBUDk2QmNRb0FONHVhMENnWUJkdE84b1BwVEFSS2xPYWxaYy9sbFUKbDlEY00zSHRwUkFYTEY2MGQxaTVxTVhJSHIzaWpaVnM2RHp1MHN0UlVaQ1dseVVHalhDWUI5cFJOQ1VudkJiZgo4MVhSZ3oyWkREbkUyQjU2S2c3SDJiNmxmRzlsSytHVHl0bXlQM2YwU0d2NTlldjk0OFhJWHBZRlRiK2s4QnRECklDU0FSVk91QTNpV3FGQ2t4anR0aVFLQmdGRmhJbWFYOVllcjhDQ2lVYlhLYmdkRHQ3MmhwMXlocVJ4MFpjQjEKeVZBTEdjcmdQTG5SeEpsOXNEZm1rdDliZ1E1T005MEkvYmd2MVJXcU1MSWZPU0ZjdWwrRi9sa3o5TlBHdDZKNQovYkZHODFLYVZpL0dCWnZ3bm9mRkhQQ3NhbFJIY2s3dXN1bVFnWmdJZ3lJZVo4UnB3bmlmNEtkc0ZHK0swS1FlCkwvcVZBb0dCQUpLQkZuemFoRmRTYkJZYlRsM0s3QUlGWm9aNmFVQUltNTVMb0FYYlZSU09LdDlnWVQvVjdOamMKQzVkYWVDb21iMUlSWUNlejZ6VTBEdk5LanFnZnVLY3BJbjI5cm9lTWJ3a2Y1TG03T0x5SmdydGNaem9BU3pVSwpzTkRFM3VpdWF6YVJYL3FSRjZ2T0FLR1owR0paZXNhMUZ5Zmt6YTdGbFRkQWtnZHNPWFhECi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t",
      "private_key.pem": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd05FSWlIUXBKa2xreHNHT0c1S0ZRdGhYT1czWkFObFdkSHVwVlcrNWsxMGVJcDFFCmJGYXJpTEw5ckhRY01JWGFDcE1jNzFXTUwzK21RV2tmaW9BL0NpSmdzeWQ1SGR6SHN5MVBldWxjRU1mbnRVeE0KNFBWRGRDTnQzVXRCY1dhdmp5SWxQaC9sZ3BzTXhCYUpXVTVHeTN6bzdJSks4RTgyMFNPeWpnWG5xZ2wxVEhKUwpaMmZVSExUVG1CbWVxOEIzWlVZZUg5VnJPWllZcXQwRWhTMjhFWUJRR1ltR0dHRDAyWWFyR3lpem9Hcm4xNS9KCmRpWjVNL1FGbGRkT0tHVDZZQ0Q2cGlsR2JSaTJZL1NGUGtiYVNqMUpCTjhsblFsSFJMSHQ1a1o3aENsbjc4ZzYKKysySzE1WmhVb3JUbFpvcXNxU3FtUy83eW9qUmhtZDdxcWxqWndJREFRQUJBb0lCQVFDVU50cHhVYUZqL2R6SwpiM1JXTzMzV1VVaFRLOTQ0S2Rpc04zYUY1eGptYnhqQUVOWE0xWjZMdU5NSVlrUmRCRGNFRSt1VkNkUjFtcERwCkRPNmkzMHdWOVRFUjVkRFRKS2daVWtZYlBCQjZFY0JKKzNuSkhwOFlRamVzZUxHNGd1K0dmZi9VemwzMDFFeXUKMm9mL3J3ejZWRzBUaUdBa2N5KzIrZExDRzBYbHpJRzdlOFhNcjhqQWVNYnZacVBrcnZsRmxTMlRUUTZRN2wwegp3cy9VUG9iMVVjUFpiTVFQZ0JQdTQrdlJSQndMSFVQYnB0NmVuY0U5NUJpdXZOZ3JBSXdMZ2RMMnNuNGdPZTQ1CmowWk4wY0duNC84djRZVWkrMUROaWJZK2tHQ2NtTXZYUllMRHNRNEVheWNyRm5WQ1QxYmxxQzU3NUliVThOeUMKY0YwRGFDNVpBb0dCQVBoeWY4U1ZPNDZNNzljVHVOb3dUL1dTZzIwVm1FQ0UwMk1VaDlHNkFDNHMwbmRuVGNoWQpoRlEvVmlQY3J1VWVzUVJZajhsMUdmRS9VdkVNYzFkaGVPZlRDQ0xyOEtrVjNheFg4ZWVWbXVTLzBpRDFMa09GClpJSjZIZlhCNDNwV01PWkNJa0kzY2daUGF5YldyNG4vcTlPcDFYMXRqMGpHZ0l3eDJDNlk2dHdEQW9HQkFNYXQKbU5oMzlienA3NnBYSE0yMnhoNVV6R3dVUUhDcWEzSXErMjY3V2cyMVpUcDA2aVd3V2hFSGxydU1nckZsME9Jbgp1dVZLMC9qLzI2ZGtveGJSWGRESW9uemxEck9uNWFFTDhscnJydjdlRExQczA3YURyWTBMeGYxTEp0akQyNmFKCkVZNVBicERqWG5XQm9FN0NqM2JCR2VySnVxSHNkYjVGMnFFd0JtZk5Bb0dBWW9BS3RlYXdvUml4Y2lVSWtjQzcKd3RIZXQxM3JhaEQvT2ZZR3p4aWVQN0JYbFMxb3dqaU41bFRpRXYvSWUyQktzRDFvYkdlMzdGUzl6b0d3TFFHaApETkEzRnBsU1pjY2NodHFyTnJTeW4yU0pxN1ZwTFMzeXBtUkNBcEJuWHJaVFZzYjdqQ010V3VFYnkxOHNZMXJ4ClJjNjhyS2pHT1FVeUsrTUxJWlpRN3Y4Q2dZQWZBQ05qVTRTQ2o3WVh6RFB3WFY2WWlQN0V0bncvbURmZnZwa3cKOUFiZk1MaTA0RjFRdUMyMWpvdVVoQjQ0Yy95ZDdUa2FZZ3lsUTdjUWJZR05JK29Sazl6V3hCOEJKV2VOTTRJRApjZGNDYWI5dHE3eDFOQ0syYVduaFZnS2Z2Qi9mNG05YzEwUVhVNEwvcnRSR3RkRVE1SnlZcUJWNUFwNTByQTJyCkxRVXkyUUtCZ1FDbzdhZVV5Ulpad1licmtLWVI3MmZPajYreDVFdjczYms0Um9qKzZPeVhnVGp6Z0dPU3U1bTIKaDlZT3lJSERZRy9rbTV0Rm5Sa21ydHlPL0kwcmdmNUo3b0gzM2xIT0hwd0lZdFBYYlpDSzA3azhJWFgrQkk5UwpKQjlyeXNYVXhIOUJNMFNqYXJLTVp2MUNtQy80d1JWaTZtSE13c3JVNFRweWUrc05RYm01dkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==",
      "public_key.pem": "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3TkVJaUhRcEprbGt4c0dPRzVLRgpRdGhYT1czWkFObFdkSHVwVlcrNWsxMGVJcDFFYkZhcmlMTDlySFFjTUlYYUNwTWM3MVdNTDMrbVFXa2Zpb0EvCkNpSmdzeWQ1SGR6SHN5MVBldWxjRU1mbnRVeE00UFZEZENOdDNVdEJjV2F2anlJbFBoL2xncHNNeEJhSldVNUcKeTN6bzdJSks4RTgyMFNPeWpnWG5xZ2wxVEhKU1oyZlVITFRUbUJtZXE4QjNaVVllSDlWck9aWVlxdDBFaFMyOApFWUJRR1ltR0dHRDAyWWFyR3lpem9Hcm4xNS9KZGlaNU0vUUZsZGRPS0dUNllDRDZwaWxHYlJpMlkvU0ZQa2JhClNqMUpCTjhsblFsSFJMSHQ1a1o3aENsbjc4ZzYrKzJLMTVaaFVvclRsWm9xc3FTcW1TLzd5b2pSaG1kN3FxbGoKWndJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0t",
      "server-cert.pem": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREEvTVQwd093WURWUVFERERSTmVWTlIKVEY5VFpYSjJaWEpmT0M0d0xqRTVMVEV3WDBGMWRHOWZSMlZ1WlhKaGRHVmtYME5CWDBObGNuUnBabWxqWVhSbApNQjRYRFRJd01EZ3hOREl5TVRBME9Gb1hEVE13TURneE1qSXlNVEEwT0Zvd1F6RkJNRDhHQTFVRUF3dzRUWGxUClVVeGZVMlZ5ZG1WeVh6Z3VNQzR4T1MweE1GOUJkWFJ2WDBkbGJtVnlZWFJsWkY5VFpYSjJaWEpmUTJWeWRHbG0KYVdOaGRHVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETGZ3U2dsY0U1NXNmMwpQNWlIQmdoY2ZXL1haMVoybDlBNkExVVdNN1UyNXFoZ0QrcGtXWTRJZVVoNHE4Q0lLemczZmVaYU5JQm92ajBaCkN4SVppVmh6YTEzd0ZBTjVoODdIcHZRS1VDdW1EWWtGUlpkMUtPdDlEcFhZMk1CVmdPSlo0K09BcHVSVkR1THgKc2JHSXhvWXVrOUcvWjQ4Rm13NVNrN3puR0lzUnZZUG5wVkZvMHpSSFMzcHkyZU9UcDhUKzZIS2NWM1ZZelpkaApKaHJ2MzlRQXIxVnhpQjZJRkJtTTJaSitKRzRtakRvbXNwZ3hERUpqQUg0VkFsbEtKUlBhcVRwNWp4L3ExWEdsClVhdXMrYVFqYUZ1R2VuNndWWDNGSWpvV3ozR282V1orWGJ5SXlXUnlzSmhPWnRad0wyd2hZZFgyaEN2MmVIdTAKSUdOQ0NFUDdBZ01CQUFHakRUQUxNQWtHQTFVZEV3UUNNQUF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUhqMApQa0l1bmYyWlZRZ0FSMW1kbThFSGRDaWhGQjd0ZHJGWUNnNEY2NUt6THk2OWd0TWFSTDZmTjZCWHR3LytqNGJKCnljQ2hobElSWi9FSVRtQVBRQXdRd0U5UUdVcXRkOUJvaXIxekRESTEyUzBaalYxZDZtbXhqTHBvOXphbjZQaWUKaEhiTlVvMXlHMjdhdFhRU2g2bzBWSGdjclBuTE1vS0d0UDhnbnNkU3RScUVuMTFLM3F0WWYwTWYvMFYvaGlaMAp1YmZuUVBjOE93MnRGRmErZzljQzlTYi9GbTk0OFFxMzVIVU9EM1B3S3F0bFFnWHc4SFFUTk4rS0hmV3ZYM1JKCjVscWhYb0U4aTgyczZtSDYraThSQTVxREdRcEV1OU4vWEw1ckZzTTlHOVRvYm0yNjVwUTM0Z3FGMHRRSVp1NWQKQ1lIbWZGZ3ZIZWlPSThvU081OD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==",
      "server-key.pem": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeTM4RW9KWEJPZWJIOXorWWh3WUlYSDF2MTJkV2RwZlFPZ05WRmpPMU51YW9ZQS9xClpGbU9DSGxJZUt2QWlDczROMzNtV2pTQWFMNDlHUXNTR1lsWWMydGQ4QlFEZVlmT3g2YjBDbEFycGcySkJVV1gKZFNqcmZRNlYyTmpBVllEaVdlUGpnS2JrVlE3aThiR3hpTWFHTHBQUnYyZVBCWnNPVXBPODV4aUxFYjJENTZWUgphTk0wUjB0NmN0bmprNmZFL3VoeW5GZDFXTTJYWVNZYTc5L1VBSzlWY1lnZWlCUVpqTm1TZmlSdUpvdzZKcktZCk1ReENZd0IrRlFKWlNpVVQycWs2ZVk4ZjZ0VnhwVkdyclBta0kyaGJobnArc0ZWOXhTSTZGczl4cU9sbWZsMjgKaU1sa2NyQ1lUbWJXY0M5c0lXSFY5b1FyOW5oN3RDQmpRZ2hEK3dJREFRQUJBb0lCQVFDbGR5V2pFY0hwTzk4egpDeElTRUhTeUNBanQ1SWZvckc3VERTeWRmZlFHclMwUjF6OG0wNjdxOHZ0YnE0UkU5S2VrYjRuanBUY1lkRCtuCjRsbVlUQmFRMnllcDlBd1RRTHVCbWg1cldGNzFpYUgxbUcyY0JXYmQ3QU1xTEt6UG1abnpyNXFvWEl2aklkU2sKNUhEUUgyU3g4TjRuUGFTTTBWU25EcHdXYU4yRDBOdUdkaFROV2YxVzlNbEhQd1VFbEYwZVRodUx3TUd6dGhrcgpSWGx6S0QzaDdNUGVnb1lBckllYklKTUFLYWZsNTBTVGlheUtPN3dpWE1abUdDWGFBeDZTcGMwOGZpek10cEZrClBwQmpCOERwSXFBOUVNQUFwR1VGN29LSWhXWFlHeG0xUU1RTTRIZDgxbmJLL3hSb28xbDE1VU80S0ZtQ3B0ZFQKYVdZYU0wdFpBb0dCQU9VY2FYREFNOHFab0JxaGNaTWZ5dWRmSnFXZm9YUk91YStHNFFPdjhwWUtjRHMvYkFUNQorMFdGK0d3eVVzUEhWM2toMThwZVh6NHVvTlkxWDFPbWQrYVA5VTREMklvaXNkNXIxMjlyQm9MMDVtMUFGeFZHCnV2Zm4rUjV3c3pGaTBwVGJVajFPMXBWZ3lqSDM2TndLdHdJVEtsK3JhSzJ3TGRnTDBqT2JXSWFQQW9HQkFPTmgKQThMSDAxMWJQZTIzMjhEQjZWR3g1by9GUWNzVUkyWXRPTjdzdHFQQXZ3RTgyRVVRV3M0UDNMSVgrSjJ5UDBJTQo0LzBseE9vZVVhYzhPeXlqTFUrZlRLSXhoellrK1hCVERLSlF5eHVhMGhMd3hZaHpBTXYyVTMzTWtrc0VsUWZCCnljYmlhcytWSGROQWRQQ2FOYk5rWWVTT3N3SU1VTFl1TUhFd2FrSFZBb0dBWUJUV015Nm5pYU43ZlMrUFRiL2IKZThSdmxLMnBLL21IN1pDRzlPRG92dnVKclk4ZlljYmtGWGZsZ3Bwb0V5cWFDSGFrNUgxSE8vQ2FDcnMvU3ZsWQo5eHdRSjdOOU1CRDB2dTVDM3JybmRDdjRKb0RtTFVvSVJzYkZ0bnBVNjdVaDBzTlhiZGFPTHY3MFRKaEcwMkM2Cjl1ZktzV3hVN2VJZ2w2WDlkUjhFdFFrQ2dZQUgyQy8rQjFEV2RyQmpSQ1dUdDl6cDBaNW50V0Y0dFNBbmhVWGkKQXY2bUZaOUJWcTBMYk80RkQrMElRK1Z5NDFSbFhmWjdwRkx2MU0zeVhCU2FqS0tpalpkaVBSMHlGQUo3Q3BKMApBeCtPdXorbUlhSmUrOEM2U0t4R3Vja09SNEV3dkZIT3g3N3huRzVqL0dSTWJMV1BrOVlBd1orUllZVmpVNktlCk5SSmxaUUtCZ1FEWVhMTzdyNHBla1hhYTY0NGdVQklIOEZFMDVVaExzaHhVNURFNnUzUkxnWG8yWFY2MXVpcHkKb2QvMlZZdkJMbEZENTNPUmpCbXViVVVaK2tMSUc0WjVMVUVoSHQybEpTR3dydG51NTlXZmJZVkdxcDM0L2JOQQpvN2l6L1JzUXdGNC80UlBKRVlac1dha2N4NlEwN3JMRWoza2ZmczBOUjBYS3VGZ0xqbmVvS2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ=="
    }
  },
  {
    "kind": "ConfigMap",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-pxc-config-files",
      "labels": {
        "app": "release-name-pxc",
        "chart": "percona-xtradb-cluster-1.5.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "node.cnf": "[mysqld]\nskip-host-cache\ncore-file\n#server_id                          = 0\ndefault_authentication_plugin       = mysql_native_password\ndatadir                             = /var/lib/mysql\nlog-error                           = /var/log/mysqld.log\nsocket                              = /tmp/mysql.sock\nsql-mode                            = ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,STRICT_ALL_TABLES\ntls-version                         = TLSv1.2\nssl-ca                              = /cert/ca.pem\nssl-cert                            = /cert/server-cert.pem\nssl-key                             = /cert/server-key.pem\ntransaction_isolation               = REPEATABLE-READ\n\nbinlog_format                       = ROW\ndefault_storage_engine              = InnoDB\nbind_address                        = 0.0.0.0\nwsrep_cluster_address               = gcomm://\nwsrep_provider                      = /usr/lib64/galera4/libgalera_smm.so\nwsrep_sst_method                    = xtrabackup-v2\nlog_output                          = file\ninnodb_data_file_path               = ibdata1:10M:autoextend\ninnodb_flush_log_at_trx_commit      = 0\ninnodb_flush_method                 = O_DIRECT\ninnodb_autoinc_lock_mode            = 2\nuserstat                            = ON\nperformance_schema                  = ON\ninformation_schema_stats_expiry     = 360\n\n[client]\nsocket                              = /tmp/mysql.sock\nssl-ca                              = /cert/ca.pem\nssl-cert                            = /cert/client-cert.pem\nssl-key                             = /cert/client-key.pem\n\n[sst]\nprogress                            = /var/lib/mysql/sst_in_progress\nencrypt                             = 4\nssl-ca                              = /cert/ca.pem\nssl-cert                            = /cert/server-cert.pem\nssl-key                             = /cert/server-key.pem\n"
    }
  },
  {
    "kind": "ConfigMap",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-pxc-startup-scripts",
      "labels": {
        "app": "release-name-pxc",
        "chart": "percona-xtradb-cluster-1.5.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "entrypoint.sh": "#!/bin/bash\nset -e\n\nif [[ -n \"${DEBUG}\" ]]; then\n    set -x\nfi\n\n. /startup-scripts/functions.sh\n\nipaddr=$(hostname -i | awk ' { print $1 } ')\nhostname=$(hostname)\necho \"I AM $hostname - $ipaddr\"\n\n# if command starts with an option, prepend mysqld\nif [ \"${1:0:1}\" = '-' ]; then\n    CMDARG=\"$@\"\nfi\n\ncluster_join=$(getent hosts \"${K8S_SERVICE_NAME}\" | cut -d' ' -f1 | sort -u | tail -1 || echo \"\")\nif [[ -z \"${cluster_join}\" ]]; then\n    echo \"I am the Primary Node\"\n    init_mysql\n    write_password_file\n    exec mysqld --user=mysql --wsrep_cluster_name=$SHORT_CLUSTER_NAME --wsrep_node_name=$hostname \\\n    --wsrep_cluster_address=gcomm:// --wsrep_sst_method=xtrabackup-v2 \\\n    --wsrep_node_address=\"$ipaddr\" --pxc_strict_mode=\"$PXC_STRICT_MODE\" --wsrep-new-cluster $CMDARG\nelse\n    echo \"I am not the Primary Node\"\n    chown -R mysql:mysql /var/lib/mysql || true # default is root:root 777\n    touch /var/log/mysqld.log\n    chown mysql:mysql /var/log/mysqld.log\n    write_password_file\n    exec mysqld --user=mysql --wsrep_cluster_name=$SHORT_CLUSTER_NAME --wsrep_node_name=$hostname \\\n    --wsrep_cluster_address=\"gcomm://$cluster_join\" --wsrep_sst_method=xtrabackup-v2 \\\n    --wsrep_node_address=\"$ipaddr\" --pxc_strict_mode=\"$PXC_STRICT_MODE\" $CMDARG\nfi\n",
      "functions.sh": "#!/bin/bash\n\nwrite_password_file() {\n    if [[ -n \"${MYSQL_ROOT_PASSWORD}\" ]]; then\n        cat <<EOF > /root/.my.cnf\n        [client]\n        user=root\n        password=${MYSQL_ROOT_PASSWORD}\nEOF\n    fi\n}\n\ninit_mysql() {\n    DATADIR=/var/lib/mysql\n    # if we have CLUSTER_JOIN - then we do not need to perform datadir initialize\n    # the data will be copied from another node\n    if [ ! -e \"$DATADIR/mysql\" ]; then\n        if [ -z \"$MYSQL_ROOT_PASSWORD\" -a -z \"$MYSQL_ALLOW_EMPTY_PASSWORD\" -a -z \"$MYSQL_RANDOM_ROOT_PASSWORD\" -a -z \"$MYSQL_ROOT_PASSWORD_FILE\" ]; then\n            echo >&2 'error: database is uninitialized and password option is not specified '\n            echo >&2 '  You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ROOT_PASSWORD_FILE,  MYSQL_ALLOW_EMPTY_PASSWORD or MYSQL_RANDOM_ROOT_PASSWORD'\n            exit 1\n        fi\n\n        if [ ! -z \"$MYSQL_ROOT_PASSWORD_FILE\" -a -z \"$MYSQL_ROOT_PASSWORD\" ]; then\n            MYSQL_ROOT_PASSWORD=$(cat $MYSQL_ROOT_PASSWORD_FILE)\n        fi\n        mkdir -p \"$DATADIR\"\n\n        echo \"Running --initialize-insecure on $DATADIR\"\n        ls -lah $DATADIR\n        if [ \"$PERCONA_MAJOR\" = \"5.6\" ]; then\n            mysql_install_db --user=mysql --datadir=\"$DATADIR\"\n        else\n            mysqld --user=mysql --datadir=\"$DATADIR\" --initialize-insecure\n        fi\n        chown -R mysql:mysql \"$DATADIR\" || true # default is root:root 777\n        if [ -f /var/log/mysqld.log ]; then\n            chown mysql:mysql /var/log/mysqld.log\n        fi\n        echo 'Finished --initialize-insecure'\n\n        mysqld --user=mysql --datadir=\"$DATADIR\" --skip-networking &\n        pid=\"$!\"\n\n        mysql=( mysql --protocol=socket -uroot )\n\n        for i in {30..0}; do\n            if echo 'SELECT 1' | \"${mysql[@]}\" &> /dev/null; then\n                break\n            fi\n            echo 'MySQL init process in progress...'\n            sleep 1\n        done\n\n        if [ \"$i\" = 0 ]; then\n            echo >&2 'MySQL init process failed.'\n            exit 1\n        fi\n\n        # sed is for https://bugs.mysql.com/bug.php?id=20545\n        mysql_tzinfo_to_sql /usr/share/zoneinfo | sed 's/Local time zone must be set--see zic manual page/FCTY/' | \"${mysql[@]}\" mysql\n        \"${mysql[@]}\" <<-EOSQL\n        -- What's done in this file shouldn't be replicated\n        --  or products like mysql-fabric won't work\n        SET @@SESSION.SQL_LOG_BIN=0;\n        CREATE USER 'root'@'${ALLOW_ROOT_FROM}' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}' ;\n        GRANT ALL ON *.* TO 'root'@'${ALLOW_ROOT_FROM}' WITH GRANT OPTION ;\n        GRANT ALL ON *.* TO 'root'@'localhost' WITH GRANT OPTION ;\n        CREATE USER 'xtrabackup'@'localhost' IDENTIFIED BY '$XTRABACKUP_PASSWORD';\n        GRANT RELOAD,PROCESS,LOCK TABLES,REPLICATION CLIENT ON *.* TO 'xtrabackup'@'localhost';\n        CREATE USER 'mysql'@'localhost' IDENTIFIED BY '' ;\n        DROP DATABASE IF EXISTS test ;\n        FLUSH PRIVILEGES ;\nEOSQL\n\n        if [ \"$PERCONA_MAJOR\" = \"5.6\" ]; then\n            echo \"SET PASSWORD FOR 'root'@'localhost' = PASSWORD('${MYSQL_ROOT_PASSWORD}'); FLUSH PRIVILEGES;\" | \"${mysql[@]}\"\n        else\n            echo \"ALTER USER 'root'@'localhost' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}'; FLUSH PRIVILEGES;\" | \"${mysql[@]}\"\n        fi\n\n        if [ ! -z \"$MYSQL_ROOT_PASSWORD\" ]; then\n            mysql+=( -p\"${MYSQL_ROOT_PASSWORD}\" )\n        fi\n\n        if [ \"$MYSQL_DATABASE\" ]; then\n            echo \"CREATE DATABASE IF NOT EXISTS \\`$MYSQL_DATABASE\\` ;\" | \"${mysql[@]}\"\n            mysql+=( \"$MYSQL_DATABASE\" )\n        fi\n\n        if [ \"$MYSQL_USER\" -a \"$MYSQL_PASSWORD\" ]; then\n            echo \"CREATE USER '\"$MYSQL_USER\"'@'%' IDENTIFIED BY '\"$MYSQL_PASSWORD\"' ;\" | \"${mysql[@]}\"\n\n            if [ \"$MYSQL_DATABASE\" ]; then\n                echo \"GRANT ALL ON \\`\"$MYSQL_DATABASE\"\\`.* TO '\"$MYSQL_USER\"'@'%' ;\" | \"${mysql[@]}\"\n            fi\n\n            echo 'FLUSH PRIVILEGES ;' | \"${mysql[@]}\"\n        fi\n\n        if [ ! -z \"$MYSQL_ONETIME_PASSWORD\" ]; then\n            \"${mysql[@]}\" <<-EOSQL\n            ALTER USER 'root'@'%' PASSWORD EXPIRE;\nEOSQL\n        fi\n        if ! kill -s TERM \"$pid\" || ! wait \"$pid\"; then\n            echo >&2 'MySQL init process failed.'\n            exit 1\n        fi\n\n        echo\n        echo 'MySQL init process done. Ready for start up.'\n        echo\n    fi\n}\n",
      "mysql_health_check.py": "import traceback\nimport os\nimport pymysql\nfrom http.server import BaseHTTPRequestHandler, ThreadingHTTPServer\n\nos.environ[\"MYSQL_ROOT_PASSWORD\"] = os.getenv(\"MYSQL_ROOT_PASSWORD\", \"\")\nMYSQL_ROOT_PASSWORD = os.environ[\"MYSQL_ROOT_PASSWORD\"]\n\n\nclass MysqlHealthCheck(BaseHTTPRequestHandler):\n\n    protocol_version = 'HTTP/1.1'\n\n    def do_GET(self):\n        db = None\n        try:\n            db = pymysql.connect(\"127.0.0.1\", \"root\", MYSQL_ROOT_PASSWORD, \"mysql\")\n            cursor = db.cursor()\n            cursor.execute(\"show status like 'wsrep_local_state_comment';\")\n            data = cursor.fetchone()\n            if data[1] != \"Synced\":\n                raise Exception(\"Galera cluster not in Synced state, current state: {}\".format(data[1]))\n\n            cursor = db.cursor()\n            cursor.execute(\"show status like 'wsrep_cluster_size';\")\n            data = cursor.fetchone()\n\n            if data[1] == \"1\":\n                raise Exception(\"wsrep_cluster_size is 1, it is must to be 1> \")\n\n            message = \"Synced\"\n            code = 200\n        except:\n            code = 500\n            message = traceback.format_exc()\n        finally:\n            if db:\n                db.close()\n\n        response_body = bytes(message, \"utf-8\")\n        self.send_response_only(code)\n        self.send_header('Content-type', 'text/html')\n        self.send_header('Content-Length', \"{}\".format(len(response_body)))\n        self.end_headers()\n        self.wfile.write(response_body)\n\n\ndef run():\n    print('starting server...')\n    server_address = ('0.0.0.0', 8081)\n    server = ThreadingHTTPServer(server_address, MysqlHealthCheck)\n    print('running server...')\n    try:\n        server.serve_forever()\n    except KeyboardInterrupt:\n        pass\n    server.server_close()\n\n\nrun()\n",
      "pmm-client-entrypoint.sh": "#!/bin/bash\n\nset -o errexit\nset -o xtrace\n\nwait_for_url() {\n    local URL=$1\n    local RESPONSE=$2\n\n    for i in `seq 1 60` ; do\n        curl -k \"${URL}\" | grep \"$RESPONSE\" > /dev/null 2>&1 && result=$? || result=$?\n        if [ $result -eq 0 ] ; then\n            return\n        fi\n        sleep 1\n    done\n\n    echo \"Operation timed out\" >&2\n    exit 1\n}\n\nwait_for_port() {\n    local HOST=$1\n    local PORT=$2\n\n    for i in `seq 1 60` ; do\n        nc -z \"${HOST}\" \"${PORT}\" > /dev/null 2>&1 && result=$? || result=$?\n        if [ $result -eq 0 ] ; then\n            return\n        fi\n        sleep 1\n    done\n\n    echo \"Operation timed out\" >&2\n    exit 1\n}\n\nif [ -z \"${PMM_SERVER}\" ]; then\n    echo PMM_SERVER is not specified. exiting\n    exit 1\nfi\nif [ -n \"${PMM_USER}\" ]; then\n    ARGS+=\" --server-user ${PMM_USER}\"\nfi\nif [ -n \"${PMM_PASSWORD}\" ]; then\n    ARGS+=\" --server-password ${PMM_PASSWORD}\"\nfi\n\nPMM_SERVER_IP=$(ping -c 1 \"${PMM_SERVER/:*/}\" | grep PING | sed -e 's/).*//; s/.*(//')\nSRC_ADDR=$(ip route get \"${PMM_SERVER_IP}\" | grep 'src ' | sed -e 's/.* src //; s/ .*//')\nCLIENT_NAME=${DB_HOST:-$HOSTNAME}\n\nwait_for_url \"https://${PMM_USER}:${PMM_PASSWORD}@${PMM_SERVER}/v1/status/leader\" \"127.0.0.1:8300\"\n\npmm-admin config \\\n    --skip-root \\\n    --force \\\n    --server \"${PMM_SERVER}\" \\\n    --server-insecure-ssl \\\n    --bind-address \"${SRC_ADDR}\" \\\n    --client-address \"${SRC_ADDR}\" \\\n    --client-name \"${CLIENT_NAME}\" \\\n    ${ARGS}\n\nif [ -n \"${DB_HOST}\" ]; then\n    DB_ARGS+=\" --host ${DB_HOST}\"\nfi\nif [ -n \"${DB_USER}\" ]; then\n    DB_ARGS+=\" --user ${DB_USER}\"\nfi\nif [ -n \"${DB_PASSWORD}\" ]; then\n    DB_ARGS+=\" --password ${DB_PASSWORD}\"\nfi\nif [ -n \"${DB_PORT}\" ]; then\n    DB_ARGS+=\" --port ${DB_PORT}\"\nfi\n\nif [ -n \"${DB_HOST}\" -a \"${DB_PORT}\" ]; then\n    wait_for_port \"${DB_HOST}\" \"${DB_PORT}\"\nfi\n\nif [ -n \"${DB_TYPE}\" ]; then\n    pmm-admin add \"${DB_TYPE}\" \\\n        --skip-root \\\n        ${DB_ARGS}\nfi\n\nexec \"$@\"\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-pxc-tests"
    },
    "data": {
      "run.sh": "echo \"Testing Percona XtraDB Cluster\"\ncreds=\"-uroot -p${MYSQL_ROOT_PASSWORD} -h release-name-pxc\"\necho \"==> basic mysql ping\"\nmysqladmin $creds ping\n[[ $? != \"0\" ]] && exit $?\necho \"==> test basic query\"\nmysql $creds -e \"select now() \\G\"\n[[ $? != \"0\" ]] && exit $?\necho \"==> checking if cluster is ready\"\nmysql $creds -e \"SHOW GLOBAL STATUS LIKE 'wsrep_ready' \\G\" | grep Value | awk '{ print $2}' | grep ON\n[[ $? != \"0\" ]] && exit $?\necho \"==> checking if cluster size matches replica count\"\ncluster_size=$(mysql $creds -e \"SHOW GLOBAL STATUS LIKE 'wsrep_cluster_size' \\G\" | grep Value | awk '{ print $2}')\n[[ $? != \"0\" ]] && exit $?\n[[ \"${cluster_size}\" == \"3\" ]] || exit 1\necho \"SUCCESS\"\nexit 0"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-pxc",
      "labels": {
        "app": "release-name-pxc",
        "chart": "percona-xtradb-cluster-1.5.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "clusterIP": "None",
      "ports": [
        {
          "name": "mysql",
          "port": 3306,
          "targetPort": "mysql"
        },
        {
          "name": "healthcheck",
          "port": 8081,
          "targetPort": "healthcheck"
        },
        {
          "name": "galera-repl",
          "port": 4567,
          "targetPort": "galera-repl"
        },
        {
          "name": "state-transfer",
          "port": 4568,
          "targetPort": "state-transfer"
        },
        {
          "name": "state-snapshot",
          "port": 4444,
          "targetPort": "state-snapshot"
        }
      ],
      "selector": {
        "app": "release-name-pxc",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-pxc-repl",
      "labels": {
        "app": "release-name-pxc",
        "chart": "percona-xtradb-cluster-1.5.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "clusterIP": "None",
      "ports": [
        {
          "name": "galera",
          "port": 4567
        },
        {
          "name": "state-xfer",
          "port": 4568
        },
        {
          "name": "state-snap",
          "port": 4444
        }
      ],
      "selector": {
        "app": "release-name-pxc",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1beta2",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-pxc",
      "labels": {
        "app": "release-name-pxc",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 3,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app": "release-name-pxc",
          "release": "release-name"
        }
      },
      "serviceName": "release-name-pxc",
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-pxc",
            "chart": "percona-xtradb-cluster-1.5.4",
            "release": "release-name",
            "heritage": "Helm",
            "version": "8.0.27-18.1"
          }
        },
        "spec": {
          "terminationGracePeriodSeconds": 5,
          "automountServiceAccountToken": true,
          "securityContext": {
            "fsGroup": 1001,
            "runAsGroup": 1001,
            "runAsUser": 1001
          },
          "containers": [
            {
              "name": "database",
              "image": "percona/percona-xtradb-cluster:8.0.27-18.1",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "/startup-scripts/entrypoint.sh"
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "env": [
                {
                  "name": "MYSQL_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-pxc",
                      "key": "mysql-root-password"
                    }
                  }
                },
                {
                  "name": "MYSQL_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-pxc",
                      "key": "mysql-password"
                    }
                  }
                },
                {
                  "name": "XTRABACKUP_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-pxc",
                      "key": "xtrabackup-password"
                    }
                  }
                },
                {
                  "name": "MYSQL_USER",
                  "value": ""
                },
                {
                  "name": "MYSQL_DATABASE",
                  "value": ""
                },
                {
                  "name": "ALLOW_ROOT_FROM",
                  "value": "%"
                },
                {
                  "name": "CLUSTER_NAME",
                  "value": "release-name-pxc"
                },
                {
                  "name": "SHORT_CLUSTER_NAME",
                  "value": "release-name-pxc"
                },
                {
                  "name": "K8S_SERVICE_NAME",
                  "value": "release-name-pxc-repl"
                },
                {
                  "name": "PXC_STRICT_MODE",
                  "value": "PERMISSIVE"
                },
                {
                  "name": "DEBUG",
                  "value": "true"
                }
              ],
              "ports": [
                {
                  "name": "mysql",
                  "containerPort": 3306
                },
                {
                  "name": "galera-repl",
                  "containerPort": 4567
                },
                {
                  "name": "state-transfer",
                  "containerPort": 4568
                },
                {
                  "name": "state-snapshot",
                  "containerPort": 4444
                }
              ],
              "readinessProbe": {
                "exec": {
                  "command": [
                    "mysql",
                    "--defaults-extra-file=/root/.my.cnf",
                    "-h",
                    "127.0.0.1",
                    "-e",
                    "SELECT 1"
                  ]
                },
                "initialDelaySeconds": 15,
                "periodSeconds": 5,
                "timeoutSeconds": 3,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/bin/sh",
                      "-c",
                      "sleep 5"
                    ]
                  }
                }
              },
              "volumeMounts": [
                {
                  "name": "mysql-data",
                  "mountPath": "/var/lib/mysql"
                },
                {
                  "name": "mysql-startup-scripts",
                  "mountPath": "/startup-scripts"
                },
                {
                  "name": "mysql-config-files",
                  "mountPath": "/etc/mysql/conf.d"
                },
                {
                  "name": "slash-root",
                  "mountPath": "/root"
                },
                {
                  "name": "mysql-log",
                  "mountPath": "/var/log"
                },
                {
                  "name": "certificates",
                  "mountPath": "/cert"
                }
              ]
            },
            {
              "name": "logs",
              "image": "busybox:1.33.1",
              "resources": {},
              "imagePullPolicy": "IfNotPresent",
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/bin/sh",
                      "-c",
                      "sleep 5"
                    ]
                  }
                }
              },
              "command": [
                "/bin/sh",
                "-c",
                "echo \"touch logs\"\ntouch /var/log/mysqld.log\necho \"finish touch logs\"\ntail -f /var/log/mysqld.log | grep -v mbind:\n"
              ],
              "volumeMounts": [
                {
                  "name": "mysql-log",
                  "mountPath": "/var/log"
                }
              ]
            },
            {
              "name": "healthcheck",
              "image": "kfirfer/percona-xtradb-healthcheck:0.0.1",
              "imagePullPolicy": "IfNotPresent",
              "resources": {},
              "securityContext": {
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true
              },
              "env": [
                {
                  "name": "MYSQL_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-pxc",
                      "key": "mysql-root-password"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "name": "healthcheck",
                  "containerPort": 8081
                }
              ],
              "command": [
                "/bin/sh",
                "-c",
                "python /startup-scripts/mysql_health_check.py\n"
              ],
              "volumeMounts": [
                {
                  "name": "mysql-startup-scripts",
                  "mountPath": "/startup-scripts"
                }
              ],
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/bin/sh",
                      "-c",
                      "sleep 5"
                    ]
                  }
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "pmm-config",
              "emptyDir": {}
            },
            {
              "name": "slash-root",
              "emptyDir": {}
            },
            {
              "name": "mysql-log",
              "emptyDir": {}
            },
            {
              "name": "mysql-config-files",
              "configMap": {
                "name": "release-name-pxc-config-files"
              }
            },
            {
              "name": "mysql-startup-scripts",
              "configMap": {
                "name": "release-name-pxc-startup-scripts"
              }
            },
            {
              "name": "certificates",
              "secret": {
                "secretName": "mysql-ssl-certs"
              }
            }
          ],
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchExpressions": [
                      {
                        "key": "app",
                        "operator": "In",
                        "values": [
                          "release-name-pxc"
                        ]
                      }
                    ]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              ]
            }
          }
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "mysql-data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-test",
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "pxc-test",
          "image": "percona/percona-xtradb-cluster:8.0.27-18.1",
          "imagePullPolicy": "IfNotPresent",
          "command": [
            "bash",
            "/tests/run.sh"
          ],
          "env": [
            {
              "name": "MYSQL_ROOT_PASSWORD",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "release-name-pxc",
                  "key": "mysql-root-password"
                }
              }
            }
          ],
          "volumeMounts": [
            {
              "mountPath": "/tests",
              "name": "tests"
            }
          ]
        }
      ],
      "volumes": [
        {
          "name": "tests",
          "configMap": {
            "name": "release-name-pxc-tests"
          }
        }
      ],
      "restartPolicy": "Never"
    }
  }
]