[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-redis-credentials",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "redis",
        "app.kubernetes.io/version": "7.0.1",
        "helm-revision": "1",
        "helm.sh/chart": "redis-3.0.5"
      }
    },
    "stringData": {
      "redis-password": "testpass"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "labels": {
        "helm.sh/chart": "papermerge-3.0.1",
        "app.kubernetes.io/name": "papermerge",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "2.0.1",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "name": "rediscreds"
    },
    "data": {
      "redis-password": "d2NmWFFQd24yeFAydTRNNlJ5cG9ocTJXbURlak9hVXllRDZlWGpiWW1qWjU1aGs4ajM=",
      "url": "cmVkaXM6Ly9wYXBlcm1lcmdlOndjZlhRUHduMnhQMnU0TTZSeXBvaHEyV21EZWpPYVV5ZUQ2ZVhqYlltalo1NWhrOGozQHJlbGVhc2UtbmFtZS1yZWRpczo2Mzc5LzA=",
      "plainporthost": "cmVsZWFzZS1uYW1lLXJlZGlzOjYzNzk=",
      "plainhost": "cmVsZWFzZS1uYW1lLXJlZGlz"
    },
    "type": "Opaque"
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-health",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "redis",
        "app.kubernetes.io/version": "7.0.1",
        "helm-revision": "1",
        "helm.sh/chart": "redis-3.0.5"
      }
    },
    "data": {
      "ping_liveness_local.sh": "#!/bin/bash\n[[ -n \"$REDIS_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_liveness_master.sh": "#!/bin/bash\n[[ -n \"$REDIS_MASTER_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_local.sh": "#!/bin/bash\n[[ -n \"$REDIS_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"failed to connect using password: $REDIS_PASSWORD response: $response\"\n  exit 1\nfi",
      "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_readiness_master.sh": "#!/bin/bash\n[[ -n \"$REDIS_MASTER_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi"
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-papermerge-config",
      "labels": {
        "helm.sh/chart": "papermerge-3.0.1",
        "app.kubernetes.io/name": "papermerge",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "2.0.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "999Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "redis",
        "app.kubernetes.io/version": "7.0.1",
        "helm-revision": "1",
        "helm.sh/chart": "redis-3.0.5"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ipFamilyPolicy": "SingleStack",
      "ports": [
        {
          "port": 6379,
          "targetPort": 6379,
          "protocol": "TCP",
          "name": "main"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "redis",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-papermerge",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "papermerge",
        "app.kubernetes.io/version": "2.0.1",
        "helm-revision": "1",
        "helm.sh/chart": "papermerge-3.0.1"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ipFamilyPolicy": "SingleStack",
      "ports": [
        {
          "port": 10141,
          "targetPort": 8000,
          "protocol": "TCP",
          "name": "main"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "papermerge",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-papermerge",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "papermerge",
        "app.kubernetes.io/version": "2.0.1",
        "helm-revision": "1",
        "helm.sh/chart": "papermerge-3.0.1"
      }
    },
    "spec": {
      "revisionHistoryLimit": 3,
      "replicas": 1,
      "strategy": {
        "type": "Recreate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "papermerge",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": null,
          "labels": {
            "app.kubernetes.io/name": "papermerge",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "securityContext": {
            "fsGroup": 568,
            "fsGroupChangePolicy": "OnRootMismatch",
            "runAsGroup": 0,
            "runAsUser": 0,
            "supplementalGroups": [
              568
            ]
          },
          "dnsPolicy": "ClusterFirst",
          "dnsConfig": {
            "options": [
              {
                "name": "ndots",
                "value": "1"
              }
            ]
          },
          "enableServiceLinks": false,
          "terminationGracePeriodSeconds": 10,
          "initContainers": [
            {
              "name": "autopermissions",
              "image": "ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583",
              "securityContext": {
                "runAsUser": 10939,
                "privileged": true,
                "allowPrivilegeEscalation": false
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              },
              "command": [
                "/bin/sh",
                "-c",
                "/bin/bash <<'EOF'\necho \"Automatically correcting permissions...\"\necho \"increasing inotify limits...\"\n( sysctl -w fs.inotify.max_user_watches=524288 || echo \"error setting inotify\") && ( sysctl -w fs.inotify.max_user_instances=512 || echo \"error setting inotify\")\nEOF\n"
              ],
              "volumeMounts": null
            }
          ],
          "containers": [
            {
              "name": "release-name-papermerge",
              "image": "tccr.io/truecharts/papermerge:v2.0.1",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": false,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "env": [
                {
                  "name": "PUID",
                  "value": "568"
                },
                {
                  "name": "USER_ID",
                  "value": "568"
                },
                {
                  "name": "UID",
                  "value": "568"
                },
                {
                  "name": "UMASK",
                  "value": "2"
                },
                {
                  "name": "UMASK_SET",
                  "value": "2"
                },
                {
                  "name": "PGID",
                  "value": "568"
                },
                {
                  "name": "GROUP_ID",
                  "value": "568"
                },
                {
                  "name": "GID",
                  "value": "568"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "void"
                },
                {
                  "name": "TZ",
                  "value": "UTC"
                },
                {
                  "name": "REDIS_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "url",
                      "name": "rediscreds"
                    }
                  }
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "main",
                  "containerPort": 8000,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/config",
                  "name": "config"
                },
                {
                  "mountPath": "/shared",
                  "name": "shared"
                },
                {
                  "mountPath": "/tmp",
                  "name": "temp"
                },
                {
                  "mountPath": "/var/logs",
                  "name": "varlogs"
                },
                {
                  "mountPath": "/var/run",
                  "name": "varrun"
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 8000
                },
                "initialDelaySeconds": 10,
                "failureThreshold": 5,
                "timeoutSeconds": 5,
                "periodSeconds": 10
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 8000
                },
                "initialDelaySeconds": 10,
                "failureThreshold": 5,
                "timeoutSeconds": 5,
                "periodSeconds": 10
              },
              "startupProbe": {
                "tcpSocket": {
                  "port": 8000
                },
                "initialDelaySeconds": 10,
                "failureThreshold": 60,
                "timeoutSeconds": 2,
                "periodSeconds": 5
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "config",
              "persistentVolumeClaim": {
                "claimName": "release-name-papermerge-config"
              }
            },
            {
              "name": "shared",
              "emptyDir": {}
            },
            {
              "name": "temp",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "varlogs",
              "emptyDir": {}
            },
            {
              "name": "varrun",
              "emptyDir": {
                "medium": "Memory"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-redis",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "redis",
        "app.kubernetes.io/version": "7.0.1",
        "helm-revision": "1",
        "helm.sh/chart": "redis-3.0.5"
      }
    },
    "spec": {
      "revisionHistoryLimit": 3,
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "redis",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "serviceName": "release-name-redis",
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "redis",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "securityContext": {
            "fsGroup": 568,
            "fsGroupChangePolicy": "OnRootMismatch",
            "runAsGroup": 0,
            "runAsUser": 568,
            "supplementalGroups": [
              568
            ]
          },
          "dnsPolicy": "ClusterFirst",
          "dnsConfig": {
            "options": [
              {
                "name": "ndots",
                "value": "1"
              }
            ]
          },
          "enableServiceLinks": false,
          "terminationGracePeriodSeconds": 10,
          "initContainers": [
            {
              "name": "autopermissions",
              "image": "ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583",
              "securityContext": {
                "runAsUser": 11109,
                "privileged": true,
                "allowPrivilegeEscalation": false
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              },
              "command": [
                "/bin/sh",
                "-c",
                "/bin/bash <<'EOF'\necho \"Automatically correcting permissions...\"\necho \"increasing inotify limits...\"\n( sysctl -w fs.inotify.max_user_watches=524288 || echo \"error setting inotify\") && ( sysctl -w fs.inotify.max_user_instances=512 || echo \"error setting inotify\")\nEOF\n"
              ],
              "volumeMounts": null
            }
          ],
          "containers": [
            {
              "name": "release-name-redis",
              "image": "ghcr.io/truecharts/redis:v7.0.1@sha256:70d9d52b81f61be9507fd3e2e3a79eb3642b29cf5a5b7a650f3473509f195f19",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "env": [
                {
                  "name": "PUID",
                  "value": "568"
                },
                {
                  "name": "USER_ID",
                  "value": "568"
                },
                {
                  "name": "UID",
                  "value": "568"
                },
                {
                  "name": "UMASK",
                  "value": "2"
                },
                {
                  "name": "UMASK_SET",
                  "value": "2"
                },
                {
                  "name": "PGID",
                  "value": "568"
                },
                {
                  "name": "GROUP_ID",
                  "value": "568"
                },
                {
                  "name": "GID",
                  "value": "568"
                },
                {
                  "name": "S6_READ_ONLY_ROOT",
                  "value": "1"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "void"
                },
                {
                  "name": "TZ",
                  "value": "UTC"
                },
                {
                  "name": "ALLOW_EMPTY_PASSWORD",
                  "value": "yes"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "redis-password",
                      "name": "rediscreds"
                    }
                  }
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                },
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "master"
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "main",
                  "containerPort": 6379,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/health",
                  "name": "redis-health"
                },
                {
                  "mountPath": "/shared",
                  "name": "shared"
                },
                {
                  "mountPath": "/tmp",
                  "name": "temp"
                },
                {
                  "mountPath": "/var/logs",
                  "name": "varlogs"
                },
                {
                  "mountPath": "/bitnami/redis",
                  "name": "data"
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local.sh 2"
                  ]
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 2"
                  ]
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "startupProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 2"
                  ]
                },
                "failureThreshold": 60,
                "initialDelaySeconds": 10,
                "periodSeconds": 5,
                "timeoutSeconds": 2
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "redis-health",
              "configMap": {
                "defaultMode": 493,
                "name": "release-name-redis-health"
              }
            },
            {
              "name": "shared",
              "emptyDir": {}
            },
            {
              "name": "temp",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "varlogs",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "999Gi"
              }
            }
          }
        }
      ]
    }
  }
]