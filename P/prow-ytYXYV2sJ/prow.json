[
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "prow-build"
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "buildnum"
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "crier"
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "deck"
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "hook"
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "horologium"
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "pipeline"
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "plank"
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "sinker"
    }
  },
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "tide"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "hmac-token",
      "labels": {
        "app": "release-name-prow",
        "chart": "prow-0.0.1773",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "hmac": ""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "oauth-token",
      "labels": {
        "app": "release-name-prow",
        "chart": "prow-0.0.1773",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "oauth": ""
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1beta1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "prowjobs.prow.k8s.io"
    },
    "spec": {
      "group": "prow.k8s.io",
      "version": "v1",
      "names": {
        "kind": "ProwJob",
        "singular": "prowjob",
        "plural": "prowjobs"
      },
      "scope": "Namespaced",
      "validation": {
        "openAPIV3Schema": {
          "properties": {
            "spec": {
              "properties": {
                "max_concurrency": {
                  "type": "integer",
                  "minimum": 0
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "presubmit",
                    "postsubmit",
                    "periodic",
                    "batch"
                  ]
                }
              }
            },
            "status": {
              "properties": {
                "state": {
                  "type": "string",
                  "enum": [
                    "triggered",
                    "pending",
                    "success",
                    "failure",
                    "aborted",
                    "error"
                  ]
                }
              },
              "anyOf": [
                {
                  "not": {
                    "properties": {
                      "state": {
                        "type": "string",
                        "enum": [
                          "success",
                          "failure",
                          "error",
                          "aborted"
                        ]
                      }
                    }
                  }
                },
                {
                  "required": [
                    "completionTime"
                  ]
                }
              ]
            }
          }
        }
      }
    }
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "prow-build"
    },
    "rules": [
      {
        "apiGroups": [
          "build.knative.dev"
        ],
        "resources": [
          "builds"
        ],
        "verbs": [
          "create",
          "delete",
          "get",
          "list",
          "update",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "prow.k8s.io"
        ],
        "resources": [
          "prowjobs"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "update"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "crier"
    },
    "rules": [
      {
        "apiGroups": [
          "prow.k8s.io"
        ],
        "resources": [
          "prowjobs"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "update",
          "patch"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "pipeline"
    },
    "rules": [
      {
        "apiGroups": [
          "tekton.dev"
        ],
        "resources": [
          "pipelineruns",
          "pipelineresources"
        ],
        "verbs": [
          "create",
          "delete",
          "get",
          "list",
          "update",
          "watch",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "prow.k8s.io"
        ],
        "resources": [
          "prowjobs"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "update",
          "patch"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "prow-build-default"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "prow-build"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "prow-build",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "cluster-admin-binding-default",
      "namespace": "default"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cluster-admin"
    },
    "subjects": [
      {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "User",
        "name": "james-foo"
      }
    ]
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "crier-default"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "crier"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "crier",
        "namespace": "default"
      }
    ]
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "pipeline-default"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "pipeline"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "pipeline",
        "namespace": "default"
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "buildnum"
    },
    "rules": [
      {
        "apiGroups": [
          "jenkins.io"
        ],
        "resources": [
          "pipelineactivities"
        ],
        "verbs": [
          "get",
          "watch",
          "list",
          "create",
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "crier"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "create",
          "delete",
          "list"
        ]
      },
      {
        "apiGroups": [
          "prow.k8s.io"
        ],
        "resources": [
          "prowjobs"
        ],
        "verbs": [
          "create",
          "list",
          "update",
          "patch"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "deck"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods/log"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          "prow.k8s.io"
        ],
        "resources": [
          "prowjobs"
        ],
        "verbs": [
          "get",
          "list"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "hook"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "list",
          "update",
          "create",
          "get"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          "prow.k8s.io"
        ],
        "resources": [
          "prowjobs"
        ],
        "verbs": [
          "create",
          "list"
        ]
      },
      {
        "apiGroups": [
          "jenkins.io"
        ],
        "resources": [
          "pipelineactivities"
        ],
        "verbs": [
          "create",
          "list"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "horologium"
    },
    "rules": [
      {
        "apiGroups": [
          "prow.k8s.io"
        ],
        "resources": [
          "prowjobs"
        ],
        "verbs": [
          "create",
          "list"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "plank"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "create",
          "delete",
          "list"
        ]
      },
      {
        "apiGroups": [
          "prow.k8s.io"
        ],
        "resources": [
          "prowjobs"
        ],
        "verbs": [
          "create",
          "list",
          "update"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "sinker"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "delete",
          "list"
        ]
      },
      {
        "apiGroups": [
          "prow.k8s.io"
        ],
        "resources": [
          "prowjobs"
        ],
        "verbs": [
          "delete",
          "list"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "tide"
    },
    "rules": [
      {
        "apiGroups": [
          "prow.k8s.io"
        ],
        "resources": [
          "prowjobs"
        ],
        "verbs": [
          "create",
          "list"
        ]
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "buildnum"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "buildnum"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "buildnum"
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "crier"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "crier"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "crier"
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "deck"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "deck"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "deck"
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "hook"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "hook"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "hook"
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "horologium"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "horologium"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "horologium"
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "plank"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "plank"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "plank"
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "sinker"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "sinker"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "sinker"
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "tide"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "tide"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "tide"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "buildnum"
    },
    "spec": {
      "type": "ClusterIP",
      "selector": {
        "app": "buildnum"
      },
      "ports": [
        {
          "port": 80,
          "targetPort": 8080,
          "protocol": "TCP",
          "name": "http"
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "deck",
      "annotations": {
        "fabric8.io/expose": "true",
        "fabric8.io/ingress.annotations": "kubernetes.io/ingress.class: nginx\nnginx.ingress.kubernetes.io/auth-type: basic\nnginx.ingress.kubernetes.io/auth-secret: jx-basic-auth"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "selector": {
        "app": "deck"
      },
      "ports": [
        {
          "port": 80,
          "targetPort": 8080,
          "protocol": "TCP",
          "name": "http"
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "hook",
      "annotations": {
        "fabric8.io/expose": "true"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "selector": {
        "app": "hook"
      },
      "ports": [
        {
          "port": 80,
          "targetPort": 8888,
          "protocol": "TCP",
          "name": "http"
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "tide",
      "annotations": {
        "fabric8.io/expose": "true",
        "fabric8.io/ingress.annotations": "kubernetes.io/ingress.class: nginx\nnginx.ingress.kubernetes.io/auth-type: basic\nnginx.ingress.kubernetes.io/auth-secret: jx-basic-auth"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "selector": {
        "app": "tide"
      },
      "ports": [
        {
          "port": 80,
          "targetPort": 8888,
          "protocol": "TCP",
          "name": "http"
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "prow-build",
      "labels": {
        "app": "prow-build"
      }
    },
    "spec": {
      "replicas": null,
      "selector": {
        "matchLabels": {
          "app": "prow-build"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 1
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "ad.datadoghq.com/build.logs": "[{\"source\":\"prow\",\"service\":\"build\"}]"
          },
          "labels": {
            "app": "prow-build"
          }
        },
        "spec": {
          "serviceAccountName": "prow-build",
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "prow-build",
              "args": [
                "--tot-url",
                "http://buildnum",
                "--config",
                "/etc/config/config.yaml"
              ],
              "image": "gcr.io/jenkinsxio/prow/build:v20200107-aaa0608",
              "imagePullPolicy": "IfNotPresent",
              "volumeMounts": [
                {
                  "mountPath": "/etc/config",
                  "name": "config",
                  "readOnly": true
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "200m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "configMap": {
                "defaultMode": 420,
                "name": "config"
              },
              "name": "config"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "buildnum",
      "labels": {
        "app": "buildnum"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "buildnum"
        }
      },
      "strategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "annotations": {
            "ad.datadoghq.com/buildnum.logs": "[{\"source\":\"prow\",\"service\":\"buildnum\"}]"
          },
          "labels": {
            "app": "buildnum"
          }
        },
        "spec": {
          "serviceAccountName": "buildnum",
          "terminationGracePeriodSeconds": 180,
          "containers": [
            {
              "name": "buildnum",
              "image": "jenkinsxio/jx:2.1.45",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "jx"
              ],
              "args": [
                "controller",
                "buildnumbers"
              ],
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "128Mi"
                }
              },
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/health",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/ready",
                  "port": "http"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "crier",
      "labels": {
        "app": "crier"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "crier"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 1
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "ad.datadoghq.com/crier.logs": "[{\"source\":\"prow\",\"service\":\"crier\"}]"
          },
          "labels": {
            "app": "crier"
          }
        },
        "spec": {
          "serviceAccountName": "crier",
          "terminationGracePeriodSeconds": 180,
          "containers": [
            {
              "name": "crier",
              "image": "gcr.io/jenkinsxio/prow/crier:v20200107-aaa0608",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "-gerrit-workers=0",
                "-github-workers=1",
                "-logtostderr",
                "-config-path=/etc/config/config.yaml",
                "-github-token-path=/etc/github/oauth"
              ],
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "128Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "oauth",
                  "mountPath": "/etc/github",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "mountPath": "/etc/config",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "oauth",
              "secret": {
                "secretName": "oauth-token"
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "config"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "deck",
      "labels": {
        "app": "deck"
      }
    },
    "spec": {
      "replicas": 2,
      "selector": {
        "matchLabels": {
          "app": "deck"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 1
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "ad.datadoghq.com/deck.logs": "[{\"source\":\"prow\",\"service\":\"deck\"}]"
          },
          "labels": {
            "app": "deck"
          }
        },
        "spec": {
          "serviceAccountName": "deck",
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "deck",
              "image": "gcr.io/jenkinsxio/prow/deck:v20200107-aaa0608",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--hook-url=http://hook/plugin-help",
                "--tide-url=http://tide"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 8081
                },
                "initialDelaySeconds": 3,
                "periodSeconds": 3
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/healthz/ready",
                  "port": 8081
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 3,
                "timeoutSeconds": 600
              },
              "resources": {
                "limits": {
                  "cpu": "200m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etc/config",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "config"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "hook",
      "labels": {
        "app": "hook"
      }
    },
    "spec": {
      "replicas": 2,
      "selector": {
        "matchLabels": {
          "app": "hook"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 1
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "ad.datadoghq.com/hook.logs": "[{\"source\":\"prow\",\"service\":\"hook\"}]"
          },
          "labels": {
            "app": "hook"
          }
        },
        "spec": {
          "serviceAccountName": "hook",
          "terminationGracePeriodSeconds": 180,
          "containers": [
            {
              "name": "hook",
              "image": "gcr.io/jenkinsxio/prow/hook:v20200107-aaa0608",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--dry-run=false",
                "--plugin-help=false"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8888,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                }
              },
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "128Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "hmac",
                  "mountPath": "/etc/webhook",
                  "readOnly": true
                },
                {
                  "name": "oauth",
                  "mountPath": "/etc/github",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "mountPath": "/etc/config",
                  "readOnly": true
                },
                {
                  "name": "plugins",
                  "mountPath": "/etc/plugins",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "hmac",
              "secret": {
                "secretName": "hmac-token"
              }
            },
            {
              "name": "oauth",
              "secret": {
                "secretName": "oauth-token"
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "config"
              }
            },
            {
              "name": "plugins",
              "configMap": {
                "name": "plugins"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "horologium",
      "labels": {
        "app": "horologium"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "horologium"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 1
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "ad.datadoghq.com/horologium.logs": "[{\"source\":\"prow\",\"service\":\"horologium\"}]"
          },
          "labels": {
            "app": "horologium"
          }
        },
        "spec": {
          "serviceAccountName": "horologium",
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "horologium",
              "image": "gcr.io/jenkinsxio/prow/horologium:v20200107-aaa0608",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "limits": {
                  "cpu": "200m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etc/config",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "config"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "pipeline",
      "labels": {
        "app": "pipeline"
      }
    },
    "spec": {
      "replicas": null,
      "selector": {
        "matchLabels": {
          "app": "pipeline"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 1
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "ad.datadoghq.com/pipeline.logs": "[{\"source\":\"prow\",\"service\":\"pipeline\"}]"
          },
          "labels": {
            "app": "pipeline"
          }
        },
        "spec": {
          "serviceAccountName": "pipeline",
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "pipeline",
              "args": [
                "--tot-url",
                "http://buildnum",
                "--config",
                "/etc/config/config.yaml"
              ],
              "image": "gcr.io/jenkinsxio/prow/pipeline:v20200107-aaa0608",
              "imagePullPolicy": "IfNotPresent",
              "volumeMounts": [
                {
                  "mountPath": "/etc/config",
                  "name": "config",
                  "readOnly": true
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "200m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "configMap": {
                "defaultMode": 420,
                "name": "config"
              },
              "name": "config"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "plank",
      "labels": {
        "app": "plank"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "plank"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 1
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "ad.datadoghq.com/plank.logs": "[{\"source\":\"prow\",\"service\":\"plank\"}]"
          },
          "labels": {
            "app": "plank"
          }
        },
        "spec": {
          "serviceAccountName": "plank",
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "plank",
              "image": "gcr.io/jenkinsxio/prow/plank:v20200107-aaa0608",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--dry-run=false"
              ],
              "resources": {
                "limits": {
                  "cpu": "200m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "oauth",
                  "mountPath": "/etc/github",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "mountPath": "/etc/config",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "oauth",
              "secret": {
                "secretName": "oauth-token"
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "config"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "sinker",
      "labels": {
        "app": "sinker"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "sinker"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 1
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "ad.datadoghq.com/sinker.logs": "[{\"source\":\"prow\",\"service\":\"sinker\"}]"
          },
          "labels": {
            "app": "sinker"
          }
        },
        "spec": {
          "serviceAccountName": "sinker",
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "sinker",
              "image": "gcr.io/jenkinsxio/prow/sinker:v20200107-aaa0608",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "limits": {
                  "cpu": "200m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etc/config",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "config"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "tide",
      "labels": {
        "app": "tide"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "tide"
        }
      },
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 1
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "ad.datadoghq.com/tide.logs": "[{\"source\":\"prow\",\"service\":\"tide\"}]"
          },
          "labels": {
            "app": "tide"
          }
        },
        "spec": {
          "serviceAccountName": "tide",
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "tide",
              "image": "gcr.io/jenkinsxio/prow/tide:v20200107-aaa0608",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--dry-run=false",
                "--github-endpoint=https://api.github.com"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8888,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                }
              },
              "resources": {
                "limits": {
                  "cpu": "200m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "oauth",
                  "mountPath": "/etc/github",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "mountPath": "/etc/config",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "oauth",
              "secret": {
                "secretName": "oauth-token"
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "config"
              }
            }
          ]
        }
      }
    }
  }
]