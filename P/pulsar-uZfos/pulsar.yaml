apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-pulsar-bookie
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: bookie
spec:
  selector:
    matchLabels:
      app: pulsar
      release: release-name
      component: bookie
  maxUnavailable: 1
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-pulsar-broker
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: broker
spec:
  selector:
    matchLabels:
      app: pulsar
      release: release-name
      component: broker
  maxUnavailable: 1
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-pulsar-proxy
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: proxy
spec:
  selector:
    matchLabels:
      app: pulsar
      release: release-name
      component: proxy
  maxUnavailable: 1
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-pulsar-zookeeper
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: zookeeper
spec:
  selector:
    matchLabels:
      app: pulsar
      release: release-name
      component: zookeeper
  maxUnavailable: 1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-pulsar-functions-worker
  namespace: uZfos
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-pulsar-broker-acct
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: broker
  annotations: null
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-pulsar-prometheus
  namespace: uZfos
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-pulsar-grafana-secret
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: grafana
type: Opaque
stringData:
  GRAFANA_ADMIN_PASSWORD: pulsar
  GRAFANA_ADMIN_USER: pulsar
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pulsar-recovery
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: recovery
data:
  zkServers: release-name-pulsar-zookeeper:2181
  zkLedgersRootPath: /ledgers
  httpServerEnabled: "true"
  httpServerPort: "8000"
  statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
  useHostNameAsBookieID: "true"
  BOOKIE_MEM: |
    -Xms64m -Xmx64m
  PULSAR_PREFIX_useV2WireProtocol: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pulsar-bookie
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: bookie
data:
  zkServers: release-name-pulsar-zookeeper:2181
  zkLedgersRootPath: /ledgers
  httpServerEnabled: "true"
  httpServerPort: "8000"
  statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
  useHostNameAsBookieID: "true"
  autoRecoveryDaemonEnabled: "false"
  journalMaxBackups: "0"
  journalDirectories: /pulsar/data/bookkeeper/journal
  PULSAR_PREFIX_journalDirectories: /pulsar/data/bookkeeper/journal
  ledgerDirectories: /pulsar/data/bookkeeper/ledgers
  PULSAR_GC: |
    -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=4 -XX:ConcGCThreads=4 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem -Xlog:gc* -Xlog:gc::utctime -Xlog:safepoint -Xlog:gc+heap=trace -verbosegc -Xlog:gc:/var/log/bookie-gc.log
  PULSAR_MEM: |
    -Xms128m -Xmx256m -XX:MaxDirectMemorySize=256m
  dbStorage_readAheadCacheMaxSizeMb: "32"
  dbStorage_rocksDB_blockCacheSize: "8388608"
  dbStorage_rocksDB_writeBufferSizeMB: "8"
  dbStorage_writeCacheMaxSizeMb: "32"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pulsar-broker
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: broker
data:
  zookeeperServers: release-name-pulsar-zookeeper:2181
  configurationStoreServers: release-name-pulsar-zookeeper:2181
  clusterName: release-name-pulsar
  exposeTopicLevelMetricsInPrometheus: "true"
  numHttpServerThreads: "8"
  zooKeeperSessionTimeoutMillis: "30000"
  statusFilePath: /pulsar/status
  functionsWorkerEnabled: "true"
  PF_functionRuntimeFactoryClassName: org.apache.pulsar.functions.runtime.kubernetes.KubernetesRuntimeFactory
  PF_pulsarFunctionsCluster: release-name-pulsar
  PF_connectorsDirectory: ./connectors
  PF_containerFactory: k8s
  PF_numFunctionPackageReplicas: "2"
  PF_functionRuntimeFactoryConfigs_pulsarRootDir: /pulsar
  PF_kubernetesContainerFactory_pulsarRootDir: /pulsar
  PF_functionRuntimeFactoryConfigs_pulsarDockerImageName: apachepulsar/pulsar-all:2.9.2
  PF_functionRuntimeFactoryConfigs_submittingInsidePod: "true"
  PF_functionRuntimeFactoryConfigs_installUserCodeDependencies: "true"
  PF_functionRuntimeFactoryConfigs_jobNamespace: default
  PF_functionRuntimeFactoryConfigs_expectedMetricsCollectionInterval: "30"
  PF_functionRuntimeFactoryConfigs_pulsarAdminUrl: http://release-name-pulsar-broker:8080/
  PF_functionRuntimeFactoryConfigs_pulsarServiceUrl: pulsar://release-name-pulsar-broker:6650/
  PF_functionRuntimeFactoryConfigs_changeConfigMap: release-name-pulsar-functions-worker-config
  PF_functionRuntimeFactoryConfigs_changeConfigMapNamespace: default
  PF_kubernetesContainerFactory_pulsarDockerImageName: apachepulsar/pulsar-all:2.9.2
  PF_kubernetesContainerFactory_submittingInsidePod: "true"
  PF_kubernetesContainerFactory_installUserCodeDependencies: "true"
  PF_kubernetesContainerFactory_jobNamespace: default
  PF_kubernetesContainerFactory_expectedMetricsCollectionInterval: "30"
  PF_kubernetesContainerFactory_pulsarAdminUrl: http://release-name-pulsar-broker:8080/
  PF_kubernetesContainerFactory_pulsarServiceUrl: pulsar://release-name-pulsar-broker:6650/
  PF_kubernetesContainerFactory_changeConfigMap: release-name-pulsar-functions-worker-config
  PF_kubernetesContainerFactory_changeConfigMapNamespace: default
  webServicePort: "8080"
  brokerServicePort: "6650"
  PULSAR_GC: |
    -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -Dio.netty.leakDetectionLevel=disabled -Dio.netty.recycler.linkCapacity=1024 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=4 -XX:ConcGCThreads=4 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem
  PULSAR_MEM: |
    -Xms128m -Xmx256m -XX:MaxDirectMemorySize=256m
  managedLedgerDefaultAckQuorum: "2"
  managedLedgerDefaultEnsembleSize: "2"
  managedLedgerDefaultWriteQuorum: "2"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pulsar-functions-worker-config
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: functions-worker
data:
  pulsarDockerImageName: apachepulsar/pulsar-all:2.9.2
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pulsar-grafana
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: grafana
data: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pulsar-prometheus
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']
    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_label_component]
        action: replace
        target_label: job
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pulsar-proxy
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: proxy
data:
  clusterName: release-name-pulsar
  httpNumThreads: "8"
  statusFilePath: /pulsar/status
  webServicePort: "80"
  servicePort: "6650"
  brokerServiceURL: pulsar://release-name-pulsar-broker:6650
  brokerWebServiceURL: http://release-name-pulsar-broker:8080
  PULSAR_GC: |
    -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -Dio.netty.leakDetectionLevel=disabled -Dio.netty.recycler.linkCapacity=1024 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=4 -XX:ConcGCThreads=4 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem
  PULSAR_MEM: |
    -Xms64m -Xmx64m -XX:MaxDirectMemorySize=64m
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pulsar-toolset
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: toolset
data:
  BOOKIE_LOG_APPENDER: RollingFile
  zkServers: release-name-pulsar-zookeeper:2181
  zkLedgersRootPath: /ledgers
  httpServerEnabled: "true"
  httpServerPort: "8000"
  statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
  useHostNameAsBookieID: "true"
  webServiceUrl: http://release-name-pulsar-proxy:80/
  brokerServiceUrl: pulsar://release-name-pulsar-proxy:6650/
  PULSAR_MEM: |
    -Xms64M -Xmx128M -XX:MaxDirectMemorySize=128M
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pulsar-zookeeper
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: zookeeper
data:
  dataDir: /pulsar/data/zookeeper
  PULSAR_PREFIX_serverCnxnFactory: org.apache.zookeeper.server.NIOServerCnxnFactory
  serverCnxnFactory: org.apache.zookeeper.server.NIOServerCnxnFactory
  PULSAR_GC: |
    -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -Dcom.sun.management.jmxremote -Djute.maxbuffer=10485760 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+DoEscapeAnalysis -XX:+DisableExplicitGC -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem
  PULSAR_MEM: |
    -Xms64m -Xmx128m
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-pulsar-prometheus-data
  namespace: default
spec:
  resources:
    requests:
      storage: 10Gi
  accessModes:
    - ReadWriteOnce
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-pulsar-broker-clusterrole
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - extensions
      - apps
    resources:
      - pods
      - services
      - deployments
      - secrets
      - statefulsets
    verbs:
      - list
      - watch
      - get
      - update
      - create
      - delete
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-pulsar-functions-worker
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - configmaps
      - pods
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-pulsar-prometheus
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-pulsar-broker-clusterrolebinding
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-pulsar-broker-clusterrole
subjects:
  - kind: ServiceAccount
    name: release-name-pulsar-broker-acct
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-pulsar-functions-worker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-pulsar-functions-worker
subjects:
  - kind: ServiceAccount
    name: release-name-pulsar-functions-worker
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-pulsar-prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-pulsar-prometheus
subjects:
  - kind: ServiceAccount
    name: release-name-pulsar-prometheus
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-pulsar-recovery
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: recovery
spec:
  ports:
    - name: http
      port: 8000
  clusterIP: None
  selector:
    app: pulsar
    release: release-name
    component: recovery
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-pulsar-bookie
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: bookie
spec:
  ports:
    - name: bookie
      port: 3181
    - name: http
      port: 8000
  clusterIP: None
  selector:
    app: pulsar
    release: release-name
    component: bookie
  publishNotReadyAddresses: true
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-pulsar-broker
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: broker
  annotations: {}
spec:
  ports:
    - name: http
      port: 8080
    - name: pulsar
      port: 6650
  clusterIP: None
  selector:
    app: pulsar
    release: release-name
    component: broker
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-pulsar-grafana
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: grafana
  annotations: null
spec:
  type: LoadBalancer
  ports:
    - name: server
      port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app: pulsar
    release: release-name
    component: grafana
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-pulsar-prometheus
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: prometheus
  annotations: {}
spec:
  clusterIP: None
  ports:
    - name: server
      port: 9090
  selector:
    app: pulsar
    release: release-name
    component: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-pulsar-proxy
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: proxy
  annotations: null
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      protocol: TCP
    - name: pulsar
      port: 6650
      protocol: TCP
  selector:
    app: pulsar
    release: release-name
    component: proxy
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-pulsar-toolset
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: toolset
spec:
  clusterIP: None
  selector:
    app: pulsar
    release: release-name
    component: toolset
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-pulsar-zookeeper
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: zookeeper
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
    - name: http
      port: 8000
    - name: follower
      port: 2888
    - name: leader-election
      port: 3888
    - name: client
      port: 2181
  clusterIP: None
  selector:
    app: pulsar
    release: release-name
    component: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pulsar-grafana
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pulsar
      release: release-name
      component: grafana
  template:
    metadata:
      labels:
        app: pulsar
        release: release-name
        cluster: release-name-pulsar
        component: grafana
      annotations: null
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: release-name-pulsar-grafana
          image: streamnative/apache-pulsar-grafana-dashboard-k8s:0.0.16
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 0.10000000000000001
              memory: 250Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: server
              containerPort: 3000
          envFrom:
            - configMapRef:
                name: release-name-pulsar-grafana
          env:
            - name: PROMETHEUS_URL
              value: http://release-name-pulsar-prometheus:9090/
            - name: PULSAR_PROMETHEUS_URL
              value: http://release-name-pulsar-prometheus:9090/
            - name: PULSAR_CLUSTER
              value: release-name-pulsar
            - name: GRAFANA_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-pulsar-grafana-secret
                  key: GRAFANA_ADMIN_USER
            - name: GRAFANA_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-pulsar-grafana-secret
                  key: GRAFANA_ADMIN_PASSWORD
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pulsar-prometheus
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pulsar
      release: release-name
      component: prometheus
  template:
    metadata:
      labels:
        app: pulsar
        release: release-name
        cluster: release-name-pulsar
        component: prometheus
      annotations: {}
    spec:
      serviceAccount: release-name-pulsar-prometheus
      terminationGracePeriodSeconds: 5
      containers:
        - name: release-name-pulsar-prometheus
          image: prom/prometheus:v2.17.2
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 0.10000000000000001
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: server
              containerPort: 9090
          volumeMounts:
            - name: release-name-pulsar-prometheus-config
              mountPath: /etc/prometheus
            - name: release-name-pulsar-prometheus-data
              mountPath: /prometheus
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      volumes:
        - name: release-name-pulsar-prometheus-config
          configMap:
            name: release-name-pulsar-prometheus
        - name: release-name-pulsar-prometheus-data
          persistentVolumeClaim:
            claimName: release-name-pulsar-prometheus-data
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-pulsar-recovery
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: recovery
spec:
  serviceName: release-name-pulsar-recovery
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: pulsar
      release: release-name
      component: recovery
  template:
    metadata:
      labels:
        app: pulsar
        release: release-name
        cluster: release-name-pulsar
        component: recovery
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - pulsar
                  - key: release
                    operator: In
                    values:
                      - release-name
                  - key: component
                    operator: In
                    values:
                      - recovery
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: pulsar-bookkeeper-verify-clusterid
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - |
              bin/apply-config-from-env.py conf/bookkeeper.conf;until bin/bookkeeper shell whatisinstanceid; do
                sleep 3;
              done;
          envFrom:
            - configMapRef:
                name: release-name-pulsar-recovery
          volumeMounts: null
      containers:
        - name: release-name-pulsar-recovery
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 0.050000000000000003
              memory: 64Mi
            seccompProfile:
              type: RuntimeDefault
          command:
            - sh
            - -c
          args:
            - |
              bin/apply-config-from-env.py conf/bookkeeper.conf;
              OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec bin/bookkeeper autorecovery
          ports:
            - name: http
              containerPort: 8000
          envFrom:
            - configMapRef:
                name: release-name-pulsar-recovery
          volumeMounts: null
      volumes: null
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-pulsar-bookie
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: bookie
spec:
  serviceName: release-name-pulsar-bookie
  replicas: 4
  selector:
    matchLabels:
      app: pulsar
      release: release-name
      component: bookie
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: pulsar
        release: release-name
        cluster: release-name-pulsar
        component: bookie
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - pulsar
                  - key: release
                    operator: In
                    values:
                      - release-name
                  - key: component
                    operator: In
                    values:
                      - bookie
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: pulsar-bookkeeper-verify-clusterid
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - |2
              set -e; bin/apply-config-from-env.py conf/bookkeeper.conf;until bin/bookkeeper shell whatisinstanceid; do
                sleep 3;
              done;
          envFrom:
            - configMapRef:
                name: release-name-pulsar-bookie
          volumeMounts: null
      containers:
        - name: release-name-pulsar-bookie
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /api/v1/bookie/state
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: /api/v1/bookie/is_ready
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 60
          resources:
            requests:
              cpu: 0.20000000000000001
              memory: 512Mi
            seccompProfile:
              type: RuntimeDefault
          command:
            - sh
            - -c
          args:
            - |
              bin/apply-config-from-env.py conf/bookkeeper.conf;
              OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec bin/pulsar bookie;
          ports:
            - name: bookie
              containerPort: 3181
            - name: http
              containerPort: 8000
          envFrom:
            - configMapRef:
                name: release-name-pulsar-bookie
          volumeMounts:
            - name: release-name-pulsar-bookie-journal
              mountPath: /pulsar/data/bookkeeper/journal
            - name: release-name-pulsar-bookie-ledgers
              mountPath: /pulsar/data/bookkeeper/ledgers
      volumes: null
  volumeClaimTemplates:
    - metadata:
        name: release-name-pulsar-bookie-journal
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: release-name-pulsar-bookie-ledgers
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-pulsar-broker
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: broker
spec:
  serviceName: release-name-pulsar-broker
  replicas: 3
  selector:
    matchLabels:
      app: pulsar
      release: release-name
      component: broker
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: pulsar
        release: release-name
        cluster: release-name-pulsar
        component: broker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: release-name-pulsar-broker-acct
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - pulsar
                    - key: release
                      operator: In
                      values:
                        - release-name
                    - key: component
                      operator: In
                      values:
                        - broker
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: wait-zookeeper-ready
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - |2-
              until bin/bookkeeper org.apache.zookeeper.ZooKeeperMain -server release-name-pulsar-zookeeper:2181 get /admin/clusters/release-name-pulsar; do
                echo "pulsar cluster release-name-pulsar isn't initialized yet ... check in 3 seconds ..." && sleep 3;
              done;
          volumeMounts: null
        - name: wait-bookkeeper-ready
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - |2
              bin/apply-config-from-env.py conf/bookkeeper.conf; until bin/bookkeeper shell whatisinstanceid; do
                echo "bookkeeper cluster is not initialized yet. backoff for 3 seconds ...";
                sleep 3;
              done; echo "bookkeeper cluster is already initialized"; bookieServiceNumber="$(nslookup -timeout=10 release-name-pulsar-bookie | grep Name | wc -l)"; until [ ${bookieServiceNumber} -ge 2 ]; do
                echo "bookkeeper cluster release-name-pulsar isn't ready yet ... check in 10 seconds ...";
                sleep 10;
                bookieServiceNumber="$(nslookup -timeout=10 release-name-pulsar-bookie | grep Name | wc -l)";
              done; echo "bookkeeper cluster is ready";
          envFrom:
            - configMapRef:
                name: release-name-pulsar-bookie
          volumeMounts: null
      containers:
        - name: release-name-pulsar-broker
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /status.html
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /status.html
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          resources:
            requests:
              cpu: 0.20000000000000001
              memory: 512Mi
            seccompProfile:
              type: RuntimeDefault
          command:
            - sh
            - -c
          args:
            - |
              bin/apply-config-from-env.py conf/broker.conf; bin/gen-yml-from-env.py conf/functions_worker.yml; echo "OK" > status;
              bin/pulsar zookeeper-shell -server release-name-pulsar-zookeeper:2181 get /loadbalance/brokers/${HOSTNAME}.release-name-pulsar-broker.default.svc.cluster.local:8080; while [ $? -eq 0 ]; do
                echo "broker ${HOSTNAME}.release-name-pulsar-broker.default.svc.cluster.local znode still exists ... check in 10 seconds ...";
                sleep 10;
                bin/pulsar zookeeper-shell -server release-name-pulsar-zookeeper:2181 get /loadbalance/brokers/${HOSTNAME}.release-name-pulsar-broker.default.svc.cluster.local:8080;
              done; cat conf/pulsar_env.sh; OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec bin/pulsar broker;
          ports:
            - name: http
              containerPort: 8080
            - name: pulsar
              containerPort: 6650
          envFrom:
            - configMapRef:
                name: release-name-pulsar-broker
          volumeMounts: null
      volumes: null
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-pulsar-proxy
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: proxy
spec:
  serviceName: release-name-pulsar-proxy
  replicas: 3
  selector:
    matchLabels:
      app: pulsar
      release: release-name
      component: proxy
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: pulsar
        release: release-name
        cluster: release-name-pulsar
        component: proxy
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - pulsar
                  - key: release
                    operator: In
                    values:
                      - release-name
                  - key: component
                    operator: In
                    values:
                      - proxy
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: wait-zookeeper-ready
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - |-
              until bin/pulsar zookeeper-shell -server release-name-pulsar-zookeeper get /admin/clusters/release-name-pulsar; do
                sleep 3;
              done;
        - name: wait-broker-ready
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - |-
              set -e; brokerServiceNumber="$(nslookup -timeout=10 release-name-pulsar-broker | grep Name | wc -l)"; until [ ${brokerServiceNumber} -ge 1 ]; do
                echo "pulsar cluster release-name-pulsar isn't initialized yet ... check in 10 seconds ...";
                sleep 10;
                brokerServiceNumber="$(nslookup -timeout=10 release-name-pulsar-broker | grep Name | wc -l)";
              done;
      containers:
        - name: release-name-pulsar-proxy
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /status.html
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /status.html
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          resources:
            requests:
              cpu: 0.20000000000000001
              memory: 128Mi
            seccompProfile:
              type: RuntimeDefault
          command:
            - sh
            - -c
          args:
            - |
              bin/apply-config-from-env.py conf/proxy.conf && echo "OK" > status && OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec bin/pulsar proxy
          ports:
            - name: http
              containerPort: 80
            - name: pulsar
              containerPort: 6650
          envFrom:
            - configMapRef:
                name: release-name-pulsar-proxy
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-pulsar-toolset
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: toolset
spec:
  serviceName: release-name-pulsar-toolset
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: pulsar
      release: release-name
      component: toolset
  template:
    metadata:
      labels:
        app: pulsar
        release: release-name
        cluster: release-name-pulsar
        component: toolset
      annotations: {}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: release-name-pulsar-toolset
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 0.10000000000000001
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          command:
            - sh
            - -c
          args:
            - |
              bin/apply-config-from-env.py conf/client.conf; bin/apply-config-from-env.py conf/bookkeeper.conf;
              sleep 10000000000
          envFrom:
            - configMapRef:
                name: release-name-pulsar-toolset
          volumeMounts: null
      volumes: null
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-pulsar-zookeeper
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: zookeeper
spec:
  serviceName: release-name-pulsar-zookeeper
  replicas: 3
  selector:
    matchLabels:
      app: pulsar
      release: release-name
      component: zookeeper
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: pulsar
        release: release-name
        cluster: release-name-pulsar
        component: zookeeper
      annotations:
        prometheus.io/port: "8000"
        prometheus.io/scrape: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - pulsar
                  - key: release
                    operator: In
                    values:
                      - release-name
                  - key: component
                    operator: In
                    values:
                      - zookeeper
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      containers:
        - name: release-name-pulsar-zookeeper
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 0.10000000000000001
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          command:
            - sh
            - -c
          args:
            - |
              bin/apply-config-from-env.py conf/zookeeper.conf;
              bin/generate-zookeeper-config.sh conf/zookeeper.conf; OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec bin/pulsar zookeeper;
          ports:
            - name: http
              containerPort: 8000
            - name: client
              containerPort: 2181
            - name: follower
              containerPort: 2888
            - name: leader-election
              containerPort: 3888
          env:
            - name: ZOOKEEPER_SERVERS
              value: release-name-pulsar-zookeeper-0,release-name-pulsar-zookeeper-1,release-name-pulsar-zookeeper-2
          envFrom:
            - configMapRef:
                name: release-name-pulsar-zookeeper
          readinessProbe:
            exec:
              command:
                - timeout
                - "30"
                - bash
                - -c
                - echo ruok | nc -q 1 localhost 2181 | grep imok
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 30
            failureThreshold: 10
          livenessProbe:
            exec:
              command:
                - timeout
                - "30"
                - bash
                - -c
                - echo ruok | nc -q 1 localhost 2181 | grep imok
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 30
            failureThreshold: 10
          volumeMounts:
            - name: release-name-pulsar-zookeeper-data
              mountPath: /pulsar/data
      volumes: null
  volumeClaimTemplates:
    - metadata:
        name: release-name-pulsar-zookeeper-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-pulsar-bookie-init
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: bookie-init
spec:
  template:
    spec:
      initContainers:
        - name: wait-zookeeper-ready
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - |-
              until nslookup release-name-pulsar-zookeeper-2.release-name-pulsar-zookeeper.default; do
                sleep 3;
              done;
      containers:
        - name: release-name-pulsar-bookie-init
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - |
              bin/apply-config-from-env.py conf/bookkeeper.conf;
              if bin/bookkeeper shell whatisinstanceid; then
                  echo "bookkeeper cluster already initialized";
              else
                  bin/bookkeeper shell initnewcluster;
              fi
          envFrom:
            - configMapRef:
                name: release-name-pulsar-bookie
          volumeMounts: null
      volumes: null
      restartPolicy: Never
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-pulsar-pulsar-init
  namespace: uZfos
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: release-name
    heritage: Helm
    cluster: release-name-pulsar
    component: pulsar-init
spec:
  template:
    spec:
      initContainers:
        - name: wait-zookeeper-ready
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - |-
              until nslookup release-name-pulsar-zookeeper-2.release-name-pulsar-zookeeper.default; do
                sleep 3;
              done;
        - name: pulsar-bookkeeper-verify-clusterid
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - |
              bin/apply-config-from-env.py conf/bookkeeper.conf;
              until bin/bookkeeper shell whatisinstanceid; do
                sleep 3;
              done;
          envFrom:
            - configMapRef:
                name: release-name-pulsar-bookie
          volumeMounts: null
      containers:
        - name: release-name-pulsar-pulsar-init
          image: apachepulsar/pulsar-all:2.9.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - |2
              bin/pulsar initialize-cluster-metadata \
                --cluster release-name-pulsar \
                --zookeeper release-name-pulsar-zookeeper:2181 \
                --configuration-store release-name-pulsar-zookeeper:2181 \
                --web-service-url http://release-name-pulsar-broker.default.svc.cluster.local:8080/ \
                --web-service-url-tls https://release-name-pulsar-broker.default.svc.cluster.local:8443/ \
                --broker-service-url pulsar://release-name-pulsar-broker.default.svc.cluster.local:6650/ \
                --broker-service-url-tls pulsar+ssl://release-name-pulsar-broker.default.svc.cluster.local:6651/ ;
          volumeMounts: null
      volumes: null
      restartPolicy: OnFailure
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
