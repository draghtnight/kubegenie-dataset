apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-powerdns
  labels:
    app.kubernetes.io/name: powerdns
    helm.sh/chart: powerdns-5.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v4.3.1
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: b9Dz9sRuXJ3
type: Opaque
data:
  postgresql-postgres-password: cGRuc2FkbWlucGFzcw==
  postgresql-password: cGRuc3Bhc3M=
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-powerdns
  labels:
    app.kubernetes.io/name: powerdns
    helm.sh/chart: powerdns-5.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v4.3.1
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgres_host: cmVsZWFzZS1uYW1lLXBvc3RncmVzcWw=
  postgres_username: cGRucw==
  postgres_password: cGRuc3Bhc3M=
  postgres_database: cGRucw==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-powerdns
  labels:
    app.kubernetes.io/name: powerdns
    helm.sh/chart: powerdns-5.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  01-general-config.conf: ""
  00-api-key.conf: |
    api=yes

    api-key=o9piZPmYPAmnJONlDci6ZZYg

    webserver=yes
    # IP Address of web server to listen on
    webserver-address=0.0.0.0
    # Port of web server to listen on
    webserver-port=8081
    # Web server access is only allowed from these subnets
    webserver-allow-from=0.0.0.0/0,::/0
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: b9Dz9sRuXJ3
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
  namespace: b9Dz9sRuXJ3
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-powerdns-udp
  labels:
    app.kubernetes.io/name: powerdns
    helm.sh/chart: powerdns-5.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v4.3.1
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: dns-udp
      port: 53
      protocol: UDP
  selector:
    app.kubernetes.io/name: powerdns
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-powerdns-tcp
  labels:
    app.kubernetes.io/name: powerdns
    helm.sh/chart: powerdns-5.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v4.3.1
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: dns-tcp
      port: 53
      protocol: TCP
  selector:
    app.kubernetes.io/name: powerdns
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-powerdns
  labels:
    app.kubernetes.io/name: powerdns
    helm.sh/chart: powerdns-5.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v4.3.1
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: powerdns
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: powerdns
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-powerdns
      securityContext: {}
      containers:
        - name: powerdns
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: naps/powerdns:4.3.1
          imagePullPolicy: Always
          volumeMounts:
            - name: config
              mountPath: /etc/pdns/conf.d
          env:
            - name: AUTOCONF
              value: postgres
            - name: PGSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: release-name-powerdns
                  key: postgres_host
            - name: PGSQL_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-powerdns
                  key: postgres_username
            - name: PGSQL_PASS
              valueFrom:
                secretKeyRef:
                  name: release-name-powerdns
                  key: postgres_password
            - name: PGSQL_DB
              valueFrom:
                secretKeyRef:
                  name: release-name-powerdns
                  key: postgres_database
            - name: PGSQL_DNSSEC
              value: "yes"
          ports:
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP
            - name: dns-webserver
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: dns-tcp
            initialDelaySeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: dns-tcp
            initialDelaySeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - 'let a=0; while [ $a -lt 200 ]; do sleep 5; let a=a+1; echo ''Attempt: ''$a; if nc -vz release-name-postgresql 5432; then pdnsutil list-zone mydomain.local 2>/dev/null && break; pdnsutil create-zone mydomain.local; fi; done'
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config
          configMap:
            name: release-name-powerdns
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
  namespace: b9Dz9sRuXJ3
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.16.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      automountServiceAccountToken: false
      containers:
        - name: release-name-postgresql
          image: docker.io/bitnami/postgresql:11.14.0-debian-10-r28
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          securityContext:
            runAsUser: 10267
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-postgres-password
            - name: POSTGRES_USER
              value: pdns
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: pdns
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "pdns" -d "dbname=pdns" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "pdns" -d "dbname=pdns" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        - name: data
          emptyDir: {}
