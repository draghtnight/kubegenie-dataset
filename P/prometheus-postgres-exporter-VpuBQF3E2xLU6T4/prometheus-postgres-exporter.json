[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "release-name-prometheus-postgres-exporter",
      "labels": {
        "app": "prometheus-postgres-exporter",
        "chart": "prometheus-postgres-exporter-3.0.1",
        "heritage": "Helm",
        "release": "release-name"
      },
      "annotations": {
        "seccomp.security.alpha.kubernetes.io/allowedProfileNames": "docker/default",
        "apparmor.security.beta.kubernetes.io/allowedProfileNames": "runtime/default",
        "seccomp.security.alpha.kubernetes.io/defaultProfileName": "docker/default",
        "apparmor.security.beta.kubernetes.io/defaultProfileName": "runtime/default"
      }
    },
    "spec": {
      "privileged": false,
      "allowPrivilegeEscalation": false,
      "requiredDropCapabilities": [
        "ALL"
      ],
      "volumes": [
        "configMap",
        "emptyDir",
        "projected",
        "secret",
        "downwardAPI"
      ],
      "hostNetwork": false,
      "hostIPC": false,
      "hostPID": false,
      "runAsUser": {
        "rule": "RunAsAny"
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "RunAsAny"
      },
      "fsGroup": {
        "rule": "RunAsAny"
      },
      "readOnlyRootFilesystem": false,
      "rule": "MustRunAsNonRoot"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-prometheus-postgres-exporter",
      "labels": {
        "app": "prometheus-postgres-exporter",
        "chart": "prometheus-postgres-exporter-3.0.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-prometheus-postgres-exporter",
      "labels": {
        "app": "prometheus-postgres-exporter",
        "chart": "prometheus-postgres-exporter-3.0.1",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "type": "Opaque",
    "data": {
      "data_source_password": "c29tZXBhc3d3b3Jk"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-prometheus-postgres-exporter",
      "labels": {
        "app": "prometheus-postgres-exporter",
        "chart": "prometheus-postgres-exporter-3.0.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "allow-snippet-annotations": "false",
      "config.yaml": "pg_replication:\n  query: \"SELECT CASE WHEN NOT pg_is_in_recovery() THEN 0 ELSE GREATEST (0, EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp()))) END AS lag\"\n  master: true\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\"\n\npg_postmaster:\n  query: \"SELECT pg_postmaster_start_time as start_time_seconds from pg_postmaster_start_time()\"\n  master: true\n  metrics:\n    - start_time_seconds:\n        usage: \"GAUGE\"\n        description: \"Time at which postmaster started\"\n\npg_stat_user_tables:\n  query: |\n   SELECT\n     current_database() datname,\n     schemaname,\n     relname,\n     seq_scan,\n     seq_tup_read,\n     idx_scan,\n     idx_tup_fetch,\n     n_tup_ins,\n     n_tup_upd,\n     n_tup_del,\n     n_tup_hot_upd,\n     n_live_tup,\n     n_dead_tup,\n     n_mod_since_analyze,\n     COALESCE(last_vacuum, '1970-01-01Z') as last_vacuum,\n     COALESCE(last_autovacuum, '1970-01-01Z') as last_autovacuum,\n     COALESCE(last_analyze, '1970-01-01Z') as last_analyze,\n     COALESCE(last_autoanalyze, '1970-01-01Z') as last_autoanalyze,\n     vacuum_count,\n     autovacuum_count,\n     analyze_count,\n     autoanalyze_count\n   FROM\n     pg_stat_user_tables\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Name of current database\"\n    - schemaname:\n        usage: \"LABEL\"\n        description: \"Name of the schema that this table is in\"\n    - relname:\n        usage: \"LABEL\"\n        description: \"Name of this table\"\n    - seq_scan:\n        usage: \"COUNTER\"\n        description: \"Number of sequential scans initiated on this table\"\n    - seq_tup_read:\n        usage: \"COUNTER\"\n        description: \"Number of live rows fetched by sequential scans\"\n    - idx_scan:\n        usage: \"COUNTER\"\n        description: \"Number of index scans initiated on this table\"\n    - idx_tup_fetch:\n        usage: \"COUNTER\"\n        description: \"Number of live rows fetched by index scans\"\n    - n_tup_ins:\n        usage: \"COUNTER\"\n        description: \"Number of rows inserted\"\n    - n_tup_upd:\n        usage: \"COUNTER\"\n        description: \"Number of rows updated\"\n    - n_tup_del:\n        usage: \"COUNTER\"\n        description: \"Number of rows deleted\"\n    - n_tup_hot_upd:\n        usage: \"COUNTER\"\n        description: \"Number of rows HOT updated (i.e., with no separate index update required)\"\n    - n_live_tup:\n        usage: \"GAUGE\"\n        description: \"Estimated number of live rows\"\n    - n_dead_tup:\n        usage: \"GAUGE\"\n        description: \"Estimated number of dead rows\"\n    - n_mod_since_analyze:\n        usage: \"GAUGE\"\n        description: \"Estimated number of rows changed since last analyze\"\n    - last_vacuum:\n        usage: \"GAUGE\"\n        description: \"Last time at which this table was manually vacuumed (not counting VACUUM FULL)\"\n    - last_autovacuum:\n        usage: \"GAUGE\"\n        description: \"Last time at which this table was vacuumed by the autovacuum daemon\"\n    - last_analyze:\n        usage: \"GAUGE\"\n        description: \"Last time at which this table was manually analyzed\"\n    - last_autoanalyze:\n        usage: \"GAUGE\"\n        description: \"Last time at which this table was analyzed by the autovacuum daemon\"\n    - vacuum_count:\n        usage: \"COUNTER\"\n        description: \"Number of times this table has been manually vacuumed (not counting VACUUM FULL)\"\n    - autovacuum_count:\n        usage: \"COUNTER\"\n        description: \"Number of times this table has been vacuumed by the autovacuum daemon\"\n    - analyze_count:\n        usage: \"COUNTER\"\n        description: \"Number of times this table has been manually analyzed\"\n    - autoanalyze_count:\n        usage: \"COUNTER\"\n        description: \"Number of times this table has been analyzed by the autovacuum daemon\"\n\npg_statio_user_tables:\n  query: \"SELECT current_database() datname, schemaname, relname, heap_blks_read, heap_blks_hit, idx_blks_read, idx_blks_hit, toast_blks_read, toast_blks_hit, tidx_blks_read, tidx_blks_hit FROM pg_statio_user_tables\"\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Name of current database\"\n    - schemaname:\n        usage: \"LABEL\"\n        description: \"Name of the schema that this table is in\"\n    - relname:\n        usage: \"LABEL\"\n        description: \"Name of this table\"\n    - heap_blks_read:\n        usage: \"COUNTER\"\n        description: \"Number of disk blocks read from this table\"\n    - heap_blks_hit:\n        usage: \"COUNTER\"\n        description: \"Number of buffer hits in this table\"\n    - idx_blks_read:\n        usage: \"COUNTER\"\n        description: \"Number of disk blocks read from all indexes on this table\"\n    - idx_blks_hit:\n        usage: \"COUNTER\"\n        description: \"Number of buffer hits in all indexes on this table\"\n    - toast_blks_read:\n        usage: \"COUNTER\"\n        description: \"Number of disk blocks read from this table's TOAST table (if any)\"\n    - toast_blks_hit:\n        usage: \"COUNTER\"\n        description: \"Number of buffer hits in this table's TOAST table (if any)\"\n    - tidx_blks_read:\n        usage: \"COUNTER\"\n        description: \"Number of disk blocks read from this table's TOAST table indexes (if any)\"\n    - tidx_blks_hit:\n        usage: \"COUNTER\"\n        description: \"Number of buffer hits in this table's TOAST table indexes (if any)\"\n\npg_database:\n  query: \"SELECT pg_database.datname, pg_database_size(pg_database.datname) as size_bytes FROM pg_database\"\n  master: true\n  cache_seconds: 30\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Name of the database\"\n    - size_bytes:\n        usage: \"GAUGE\"\n        description: \"Disk space used by the database\"\n\npg_stat_statements:\n  query: \"SELECT t2.rolname, t3.datname, queryid, calls, ( total_plan_time + total_exec_time ) / 1000 as total_time_seconds, ( min_plan_time + min_exec_time ) / 1000 as min_time_seconds, ( max_plan_time + max_exec_time ) / 1000 as max_time_seconds, ( mean_plan_time + mean_exec_time ) / 1000 as mean_time_seconds, ( stddev_plan_time + stddev_exec_time )  / 1000 as stddev_time_seconds, rows, shared_blks_hit, shared_blks_read, shared_blks_dirtied, shared_blks_written, local_blks_hit, local_blks_read, local_blks_dirtied, local_blks_written, temp_blks_read, temp_blks_written, blk_read_time / 1000 as blk_read_time_seconds, blk_write_time / 1000 as blk_write_time_seconds FROM pg_stat_statements t1 JOIN pg_roles t2 ON (t1.userid=t2.oid) JOIN pg_database t3 ON (t1.dbid=t3.oid) WHERE t2.rolname != 'rdsadmin' AND queryid IS NOT NULL\"\n  master: true\n  metrics:\n    - rolname:\n        usage: \"LABEL\"\n        description: \"Name of user\"\n    - datname:\n        usage: \"LABEL\"\n        description: \"Name of database\"\n    - queryid:\n        usage: \"LABEL\"\n        description: \"Query ID\"\n    - calls:\n        usage: \"COUNTER\"\n        description: \"Number of times executed\"\n    - total_time_seconds:\n        usage: \"COUNTER\"\n        description: \"Total time spent in the statement, in milliseconds\"\n    - min_time_seconds:\n        usage: \"GAUGE\"\n        description: \"Minimum time spent in the statement, in milliseconds\"\n    - max_time_seconds:\n        usage: \"GAUGE\"\n        description: \"Maximum time spent in the statement, in milliseconds\"\n    - mean_time_seconds:\n        usage: \"GAUGE\"\n        description: \"Mean time spent in the statement, in milliseconds\"\n    - stddev_time_seconds:\n        usage: \"GAUGE\"\n        description: \"Population standard deviation of time spent in the statement, in milliseconds\"\n    - rows:\n        usage: \"COUNTER\"\n        description: \"Total number of rows retrieved or affected by the statement\"\n    - shared_blks_hit:\n        usage: \"COUNTER\"\n        description: \"Total number of shared block cache hits by the statement\"\n    - shared_blks_read:\n        usage: \"COUNTER\"\n        description: \"Total number of shared blocks read by the statement\"\n    - shared_blks_dirtied:\n        usage: \"COUNTER\"\n        description: \"Total number of shared blocks dirtied by the statement\"\n    - shared_blks_written:\n        usage: \"COUNTER\"\n        description: \"Total number of shared blocks written by the statement\"\n    - local_blks_hit:\n        usage: \"COUNTER\"\n        description: \"Total number of local block cache hits by the statement\"\n    - local_blks_read:\n        usage: \"COUNTER\"\n        description: \"Total number of local blocks read by the statement\"\n    - local_blks_dirtied:\n        usage: \"COUNTER\"\n        description: \"Total number of local blocks dirtied by the statement\"\n    - local_blks_written:\n        usage: \"COUNTER\"\n        description: \"Total number of local blocks written by the statement\"\n    - temp_blks_read:\n        usage: \"COUNTER\"\n        description: \"Total number of temp blocks read by the statement\"\n    - temp_blks_written:\n        usage: \"COUNTER\"\n        description: \"Total number of temp blocks written by the statement\"\n    - blk_read_time_seconds:\n        usage: \"COUNTER\"\n        description: \"Total time the statement spent reading blocks, in milliseconds (if track_io_timing is enabled, otherwise zero)\"\n    - blk_write_time_seconds:\n        usage: \"COUNTER\"\n        description: \"Total time the statement spent writing blocks, in milliseconds (if track_io_timing is enabled, otherwise zero)\"\n\npg_stat_activity_idle:\n  query: |\n    WITH\n      metrics AS (\n        SELECT\n          application_name,\n          SUM(EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - state_change))::bigint)::float AS process_seconds_sum,\n          COUNT(*) AS process_seconds_count\n        FROM pg_stat_activity\n        WHERE state = 'idle'\n        GROUP BY application_name\n      ),\n      buckets AS (\n        SELECT\n          application_name,\n          le,\n          SUM(\n            CASE WHEN EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - state_change)) <= le\n              THEN 1\n              ELSE 0\n            END\n          )::bigint AS bucket\n        FROM\n          pg_stat_activity,\n          UNNEST(ARRAY[1, 2, 5, 15, 30, 60, 90, 120, 300]) AS le\n        GROUP BY application_name, le\n        ORDER BY application_name, le\n      )\n    SELECT\n      application_name,\n      process_seconds_sum,\n      process_seconds_count,\n      ARRAY_AGG(le) AS process_seconds,\n      ARRAY_AGG(bucket) AS process_seconds_bucket\n    FROM metrics JOIN buckets USING (application_name)\n    GROUP BY 1, 2, 3\n  metrics:\n    - application_name:\n        usage: \"LABEL\"\n        description: \"Application Name\"\n    - process_seconds:\n        usage: \"HISTOGRAM\"\n        description: \"Idle time of server processes\"\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-prometheus-postgres-exporter",
      "labels": {
        "app": "prometheus-postgres-exporter",
        "chart": "prometheus-postgres-exporter-3.0.1",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ],
        "resourceNames": [
          "release-name-prometheus-postgres-exporter"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-prometheus-postgres-exporter",
      "labels": {
        "app": "prometheus-postgres-exporter",
        "chart": "prometheus-postgres-exporter-3.0.1",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-prometheus-postgres-exporter"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-prometheus-postgres-exporter"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-prometheus-postgres-exporter",
      "labels": {
        "app": "prometheus-postgres-exporter",
        "chart": "prometheus-postgres-exporter-3.0.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": 9187,
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app": "prometheus-postgres-exporter",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-prometheus-postgres-exporter",
      "labels": {
        "app": "prometheus-postgres-exporter",
        "chart": "prometheus-postgres-exporter-3.0.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "prometheus-postgres-exporter",
          "release": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "prometheus-postgres-exporter",
            "release": "release-name"
          },
          "annotations": {
            "checksum/config": "f4bf95cc96a3a5998548cfb1c2416f27e5af3d3bee7141272832e267fdbf8b28"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-prometheus-postgres-exporter",
          "containers": [
            {
              "name": "prometheus-postgres-exporter",
              "args": [
                "--extend.query-path=/etc/config.yaml"
              ],
              "env": [
                {
                  "name": "DATA_SOURCE_URI",
                  "value": "%!s(<nil>):5432/?sslmode=disable"
                },
                {
                  "name": "DATA_SOURCE_USER",
                  "value": "postgres"
                },
                {
                  "name": "DATA_SOURCE_PASS",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-prometheus-postgres-exporter",
                      "key": "data_source_password"
                    }
                  }
                }
              ],
              "image": "quay.io/prometheuscommunity/postgres-exporter:v0.10.1",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 9187,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 0,
                "timeoutSeconds": 1,
                "httpGet": {
                  "path": "/",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 0,
                "timeoutSeconds": 1,
                "httpGet": {
                  "path": "/",
                  "port": "http"
                }
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "queries",
                  "mountPath": "/etc/config.yaml",
                  "subPath": "config.yaml"
                }
              ]
            }
          ],
          "securityContext": {},
          "volumes": [
            {
              "configMap": {
                "defaultMode": 420,
                "name": "release-name-prometheus-postgres-exporter"
              },
              "name": "queries"
            }
          ]
        }
      }
    }
  }
]