apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-permission-manager
  labels:
    helm.sh/chart: permission-manager-1.8.0
    app.kubernetes.io/name: permission-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.7.1-rc1
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-permission-manager
  labels:
    helm.sh/chart: permission-manager-1.8.0
    app.kubernetes.io/name: permission-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.7.1-rc1
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  PORT: "4000"
  CLUSTER_NAME: null
  CONTROL_PLANE_ADDRESS: null
  BASIC_AUTH_PASSWORD: RrXwZSBdTXhQL6
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-permission-manager
  labels:
    helm.sh/chart: permission-manager-1.8.0
    app.kubernetes.io/name: permission-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.7.1-rc1
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - permissionmanager.user
    resources:
      - '*'
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - clusterroles
      - rolebindings
      - roles
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - bind
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
      - secrets
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - watch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
      - certificatesigningrequests/approval
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - watch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - signers
    resourceNames:
      - kubernetes.io/legacy-unknown
      - kubernetes.io/kube-apiserver-client
    verbs:
      - approve
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: template-namespaced-resources___operation
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: template-namespaced-resources___developer
rules:
  - apiGroups:
      - '*'
    resources:
      - configmaps
      - endpoints
      - persistentvolumeclaims
      - pods
      - pods/log
      - pods/portforward
      - podtemplates
      - replicationcontrollers
      - resourcequotas
      - secrets
      - services
      - events
      - daemonsets
      - deployments
      - replicasets
      - ingresses
      - networkpolicies
      - poddisruptionbudgets
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: template-cluster-resources___read-only
rules:
  - apiGroups:
      - '*'
    resources:
      - componentstatuses
      - namespaces
      - nodes
      - persistentvolumes
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
      - customresourcedefinitions
      - apiservices
      - tokenreviews
      - selfsubjectaccessreviews
      - selfsubjectrulesreviews
      - subjectaccessreviews
      - certificatesigningrequests
      - runtimeclasses
      - podsecuritypolicies
      - clusterrolebindings
      - clusterroles
      - priorityclasses
      - csidrivers
      - csinodes
      - storageclasses
      - volumeattachment
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: template-cluster-resources___admin
rules:
  - apiGroups:
      - '*'
    resources:
      - componentstatuses
      - namespaces
      - nodes
      - persistentvolumes
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
      - customresourcedefinitions
      - apiservices
      - tokenreviews
      - selfsubjectaccessreviews
      - selfsubjectrulesreviews
      - subjectaccessreviews
      - certificatesigningrequests
      - runtimeclasses
      - podsecuritypolicies
      - clusterrolebindings
      - clusterroles
      - priorityclasses
      - csidrivers
      - csinodes
      - storageclasses
      - volumeattachment
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-permission-manager
roleRef:
  kind: ClusterRole
  name: release-name-permission-manager
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: release-name-permission-manager
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-permission-manager
  labels:
    helm.sh/chart: permission-manager-1.8.0
    app.kubernetes.io/name: permission-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.7.1-rc1
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 4000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: permission-manager
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-permission-manager
  labels:
    helm.sh/chart: permission-manager-1.8.0
    app.kubernetes.io/name: permission-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.7.1-rc1
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: permission-manager
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: permission-manager
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-permission-manager
      securityContext:
        fsGroup: 2000
      containers:
        - name: permission-manager
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: quay.io/sighup/permission-manager:v1.7.1-rc1
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: release-name-permission-manager
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 4000
          readinessProbe:
            tcpSocket:
              port: 4000
          resources:
            seccompProfile:
              type: RuntimeDefault
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-permission-manager-test-connection
  labels:
    helm.sh/chart: permission-manager-1.8.0
    app.kubernetes.io/name: permission-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.7.1-rc1
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-permission-manager:80
  restartPolicy: Never
