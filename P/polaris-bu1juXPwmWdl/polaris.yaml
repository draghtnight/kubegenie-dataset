apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-polaris
  labels:
    app: polaris
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: polaris
    app.kubernetes.io/part-of: polaris
    app.kubernetes.io/version: 5.1.0
    helm.sh/chart: polaris-5.1.0
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-polaris
  labels:
    app: polaris
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: polaris
    app.kubernetes.io/part-of: polaris
    app.kubernetes.io/version: 5.1.0
    helm.sh/chart: polaris-5.1.0
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - prometheuses
      - alertmanagers
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-polaris-view
  labels:
    app: polaris
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: polaris
    app.kubernetes.io/part-of: polaris
    app.kubernetes.io/version: 5.1.0
    helm.sh/chart: polaris-5.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: release-name-polaris
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-polaris
  labels:
    app: polaris
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: polaris
    app.kubernetes.io/part-of: polaris
    app.kubernetes.io/version: 5.1.0
    helm.sh/chart: polaris-5.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-polaris
subjects:
  - kind: ServiceAccount
    name: release-name-polaris
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-polaris-dashboard
  labels:
    app: polaris
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: polaris
    app.kubernetes.io/part-of: polaris
    app.kubernetes.io/version: 5.1.0
    helm.sh/chart: polaris-5.1.0
  annotations: null
spec:
  ports:
    - name: http-dashboard
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: polaris
    app.kubernetes.io/name: polaris
    app.kubernetes.io/instance: release-name
    component: dashboard
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-polaris-dashboard
  labels:
    app: polaris
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: polaris
    app.kubernetes.io/part-of: polaris
    app.kubernetes.io/version: 5.1.0
    helm.sh/chart: polaris-5.1.0
    component: dashboard
spec:
  replicas: 2
  selector:
    matchLabels:
      app: polaris
      app.kubernetes.io/name: polaris
      app.kubernetes.io/instance: release-name
      component: dashboard
  template:
    metadata:
      labels:
        app: polaris
        app.kubernetes.io/name: polaris
        app.kubernetes.io/instance: release-name
        component: dashboard
    spec:
      containers:
        - command:
            - polaris
            - dashboard
            - --port
            - "8080"
          image: quay.io/fairwinds/polaris:5.1
          imagePullPolicy: Always
          name: dashboard
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 20
          resources:
            limits:
              cpu: 150m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
      serviceAccountName: release-name-polaris
      nodeSelector: null
      tolerations: null
