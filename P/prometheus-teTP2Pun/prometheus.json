[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "release-name-kube-state-metrics",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-3.0.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "privileged": false,
      "volumes": [
        "secret"
      ],
      "hostNetwork": false,
      "hostIPC": false,
      "hostPID": false,
      "runAsUser": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1001,
            "max": 1001
          }
        ]
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1001,
            "max": 1001
          }
        ]
      },
      "fsGroup": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1001,
            "max": 1001
          }
        ]
      },
      "readOnlyRootFilesystem": false
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "release-name-node-exporter",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "node-exporter",
        "helm.sh/chart": "node-exporter-3.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "privileged": false,
      "allowPrivilegeEscalation": false,
      "requiredDropCapabilities": [
        "ALL"
      ],
      "volumes": [
        "configMap",
        "emptyDir",
        "projected",
        "secret",
        "downwardAPI",
        "persistentVolumeClaim",
        "hostPath"
      ],
      "hostNetwork": false,
      "hostIPC": false,
      "hostPID": true,
      "hostPorts": [
        {
          "min": 0,
          "max": 65535
        }
      ],
      "runAsUser": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1001,
            "max": 1001
          }
        ]
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1001,
            "max": 1001
          }
        ]
      },
      "fsGroup": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1001,
            "max": 1001
          }
        ]
      },
      "readOnlyRootFilesystem": false
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-kube-state-metrics",
      "namespace": "teTP2Pun",
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-3.0.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "automountServiceAccountToken": true
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-node-exporter",
      "namespace": "teTP2Pun",
      "labels": {
        "app.kubernetes.io/name": "node-exporter",
        "helm.sh/chart": "node-exporter-3.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "automountServiceAccountToken": true
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-prometheus-alertmanager",
      "namespace": "teTP2Pun",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "alertmanager"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-prometheus-prometheus",
      "namespace": "teTP2Pun",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "prometheus"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "alertmanager-release-name-prometheus-alertmanager",
      "namespace": "teTP2Pun",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "alertmanager"
      }
    },
    "data": {
      "alertmanager.yaml": "Z2xvYmFsOgogIHJlc29sdmVfdGltZW91dDogNW0KcmVjZWl2ZXJzOgotIG5hbWU6ICJudWxsIgpyb3V0ZToKICBncm91cF9ieToKICAtIGpvYgogIGdyb3VwX2ludGVydmFsOiA1bQogIGdyb3VwX3dhaXQ6IDMwcwogIHJlY2VpdmVyOiAibnVsbCIKICByZXBlYXRfaW50ZXJ2YWw6IDEyaAogIHJvdXRlczoKICAtIG1hdGNoOgogICAgICBhbGVydG5hbWU6IFdhdGNoZG9nCiAgICByZWNlaXZlcjogIm51bGwi"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "prometheus-operator-config",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "operator"
      }
    },
    "data": {
      "prometheus-config-reloader": "tccr.io/truecharts/prometheus-operator:v0.57.0@sha256:9b9bd1dbdfe18bf802f3ccdb82122ac5dd7d93103649be3ed8cf9aadd153dd52"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-kube-state-metrics",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-3.0.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "certificates.k8s.io"
        ],
        "resources": [
          "certificatesigningrequests"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "cronjobs"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "apps"
        ],
        "resources": [
          "daemonsets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "apps"
        ],
        "resources": [
          "deployments"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "endpoints"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "autoscaling"
        ],
        "resources": [
          "horizontalpodautoscalers"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "jobs"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "limitranges"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "admissionregistration.k8s.io"
        ],
        "resources": [
          "mutatingwebhookconfigurations"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "networkpolicies"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "persistentvolumeclaims"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "persistentvolumes"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "poddisruptionbudgets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "apps"
        ],
        "resources": [
          "replicasets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "replicationcontrollers"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "resourcequotas"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "statefulsets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "storage.k8s.io"
        ],
        "resources": [
          "storageclasses"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "storage.k8s.io"
        ],
        "resources": [
          "volumeattachments"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-kube-state-metrics-psp",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-3.0.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ],
        "resourceNames": [
          "release-name-kube-state-metrics"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-node-exporter-psp",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "node-exporter",
        "helm.sh/chart": "node-exporter-3.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ],
        "resourceNames": [
          "release-name-node-exporter"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-prometheus",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "rules": [
      {
        "apiGroups": [
          "apiextensions.k8s.io"
        ],
        "resources": [
          "customresourcedefinitions"
        ],
        "verbs": [
          "create"
        ]
      },
      {
        "apiGroups": [
          "apiextensions.k8s.io"
        ],
        "resourceNames": [
          "alertmanagers.monitoring.coreos.com",
          "podmonitors.monitoring.coreos.com",
          "prometheuses.monitoring.coreos.com",
          "prometheusrules.monitoring.coreos.com",
          "servicemonitors.monitoring.coreos.com",
          "thanosrulers.monitoring.coreos.com",
          "probes.monitoring.coreos.com"
        ],
        "resources": [
          "customresourcedefinitions"
        ],
        "verbs": [
          "get",
          "update"
        ]
      },
      {
        "apiGroups": [
          "monitoring.coreos.com"
        ],
        "resources": [
          "alertmanagers",
          "alertmanagers/finalizers",
          "alertmanagerconfigs",
          "prometheuses",
          "prometheuses/finalizers",
          "thanosrulers",
          "thanosrulers/finalizers",
          "servicemonitors",
          "podmonitors",
          "probes",
          "prometheusrules"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "statefulsets"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "secrets"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "list",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services",
          "services/finalizers",
          "endpoints"
        ],
        "verbs": [
          "get",
          "create",
          "update",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-prometheus-prometheus",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "prometheus"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes/metrics"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes",
          "nodes/proxy",
          "services",
          "endpoints",
          "pods"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "nonResourceURLs": [
          "/metrics"
        ],
        "verbs": [
          "get"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-kube-state-metrics",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-3.0.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-kube-state-metrics"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-kube-state-metrics",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-kube-state-metrics-psp",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-3.0.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-kube-state-metrics-psp"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-kube-state-metrics",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-node-exporter-psp",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "node-exporter",
        "helm.sh/chart": "node-exporter-3.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-node-exporter-psp"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-node-exporter",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-prometheus",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-prometheus"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "default",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-prometheus-prometheus",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "prometheus"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-prometheus-prometheus"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-prometheus-prometheus",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-kube-state-metrics",
      "namespace": "teTP2Pun",
      "annotations": null,
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-3.0.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "sessionAffinity": "None",
      "ports": [
        {
          "name": "http",
          "port": 8080,
          "targetPort": "http",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-node-exporter",
      "namespace": "teTP2Pun",
      "annotations": {
        "prometheus.io/scrape": "true"
      },
      "labels": {
        "app.kubernetes.io/name": "node-exporter",
        "helm.sh/chart": "node-exporter-3.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "jobLabel": "node-exporter"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "sessionAffinity": "None",
      "ports": [
        {
          "name": "metrics",
          "port": 9100,
          "targetPort": "metrics",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "node-exporter",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-prometheus-alertmanager",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/version": "0.57.0",
        "helm-revision": "1",
        "helm.sh/chart": "prometheus-4.0.4"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 10087,
          "targetPort": 9093,
          "protocol": "TCP",
          "name": "alertmanager"
        }
      ],
      "selector": {
        "alertmanager": "release-name-prometheus-alertmanager",
        "app.kubernetes.io/name": "alertmanager"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-prometheus",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/version": "0.57.0",
        "helm-revision": "1",
        "helm.sh/chart": "prometheus-4.0.4"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ipFamilyPolicy": "SingleStack",
      "ports": [
        {
          "port": 10086,
          "targetPort": 9090,
          "protocol": "TCP",
          "name": "main"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "prometheus",
        "prometheus": "release-name-prometheus-prometheus"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-prometheus-promop",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/version": "0.57.0",
        "helm-revision": "1",
        "helm.sh/chart": "prometheus-4.0.4"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 10089,
          "targetPort": 8080,
          "protocol": "TCP",
          "name": "promop"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-prometheus-thanos",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/version": "0.57.0",
        "helm-revision": "1",
        "helm.sh/chart": "prometheus-4.0.4"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 10901,
          "targetPort": 10901,
          "protocol": "TCP",
          "name": "thanos"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "prometheus",
        "prometheus": "release-name-prometheus-prometheus"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-prometheus-coredns",
      "namespace": "kube-system",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "release-name-prometheus-coredns"
      }
    },
    "spec": {
      "clusterIP": "None",
      "ports": [
        {
          "name": "http-metrics",
          "port": 9153,
          "protocol": "TCP",
          "targetPort": 9153
        }
      ],
      "selector": {
        "k8s-app": "kube-dns"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "release-name-node-exporter",
      "namespace": "teTP2Pun",
      "labels": {
        "app.kubernetes.io/name": "node-exporter",
        "helm.sh/chart": "node-exporter-3.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "node-exporter",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "updateStrategy": {
        "rollingUpdate": {
          "maxUnavailable": 1
        },
        "type": "RollingUpdate"
      },
      "minReadySeconds": 0,
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "node-exporter",
            "helm.sh/chart": "node-exporter-3.0.3",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-node-exporter",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "node-exporter",
                        "app.kubernetes.io/instance": "release-name"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "containers": [
            {
              "name": "node-exporter",
              "image": "docker.io/bitnami/node-exporter:1.3.1-debian-11-r3",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 10689,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "args": [
                "--path.procfs=/host/proc",
                "--path.sysfs=/host/sys",
                "--web.listen-address=0.0.0.0:9100",
                "--collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$",
                "--collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)"
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "metrics",
                  "containerPort": 9100,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 120,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "httpGet": {
                  "path": "/",
                  "port": "metrics"
                }
              },
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "httpGet": {
                  "path": "/",
                  "port": "metrics"
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "proc",
                  "mountPath": "/host/proc",
                  "readOnly": true
                },
                {
                  "name": "sys",
                  "mountPath": "/host/sys",
                  "readOnly": true
                }
              ]
            }
          ],
          "hostNetwork": true,
          "hostPID": true,
          "volumes": [
            {
              "name": "proc",
              "hostPath": {
                "path": "/proc"
              }
            },
            {
              "name": "sys",
              "hostPath": {
                "path": "/sys"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-kube-state-metrics",
      "namespace": "teTP2Pun",
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-3.0.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "kube-state-metrics",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "replicas": 1,
      "strategy": {},
      "minReadySeconds": 0,
      "template": {
        "metadata": {
          "annotations": null,
          "labels": {
            "app.kubernetes.io/name": "kube-state-metrics",
            "helm.sh/chart": "kube-state-metrics-3.0.5",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm"
          }
        },
        "spec": {
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "kube-state-metrics",
                        "app.kubernetes.io/instance": "release-name"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "hostNetwork": false,
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "release-name-kube-state-metrics",
          "containers": [
            {
              "name": "kube-state-metrics",
              "image": "docker.io/bitnami/kube-state-metrics:2.5.0-debian-11-r3",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 10655,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "args": [
                "--resources=certificatesigningrequests",
                "--resources=configmaps",
                "--resources=cronjobs",
                "--resources=daemonsets",
                "--resources=deployments",
                "--resources=endpoints",
                "--resources=horizontalpodautoscalers",
                "--resources=ingresses",
                "--resources=jobs",
                "--resources=limitranges",
                "--resources=mutatingwebhookconfigurations",
                "--resources=namespaces",
                "--resources=networkpolicies",
                "--resources=nodes",
                "--resources=persistentvolumeclaims",
                "--resources=persistentvolumes",
                "--resources=poddisruptionbudgets",
                "--resources=pods",
                "--resources=replicasets",
                "--resources=replicationcontrollers",
                "--resources=resourcequotas",
                "--resources=secrets",
                "--resources=services",
                "--resources=statefulsets",
                "--resources=storageclasses",
                "--resources=volumeattachments"
              ],
              "envFrom": null,
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 120,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "httpGet": {
                  "path": "/healthz",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "httpGet": {
                  "path": "/",
                  "port": "http"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-prometheus",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/version": "0.57.0",
        "helm-revision": "1",
        "helm.sh/chart": "prometheus-4.0.4"
      }
    },
    "spec": {
      "revisionHistoryLimit": 3,
      "replicas": 1,
      "strategy": {
        "type": "Recreate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "prometheus",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": null,
          "labels": {
            "app.kubernetes.io/name": "prometheus",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "securityContext": {
            "fsGroup": 568,
            "fsGroupChangePolicy": "OnRootMismatch",
            "runAsGroup": 568,
            "runAsUser": 568,
            "supplementalGroups": [
              568
            ]
          },
          "dnsPolicy": "ClusterFirst",
          "dnsConfig": {
            "options": [
              {
                "name": "ndots",
                "value": "1"
              }
            ]
          },
          "enableServiceLinks": false,
          "terminationGracePeriodSeconds": 10,
          "initContainers": [
            {
              "name": "autopermissions",
              "image": "ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583",
              "securityContext": {
                "runAsUser": 11380,
                "privileged": true,
                "allowPrivilegeEscalation": false
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              },
              "command": [
                "/bin/sh",
                "-c",
                "/bin/bash <<'EOF'\necho \"Automatically correcting permissions...\"\necho \"increasing inotify limits...\"\n( sysctl -w fs.inotify.max_user_watches=524288 || echo \"error setting inotify\") && ( sysctl -w fs.inotify.max_user_instances=512 || echo \"error setting inotify\")\nEOF\n"
              ],
              "volumeMounts": null
            }
          ],
          "containers": [
            {
              "name": "release-name-prometheus",
              "image": "tccr.io/truecharts/prometheus-operator:v0.57.0@sha256:9b9bd1dbdfe18bf802f3ccdb82122ac5dd7d93103649be3ed8cf9aadd153dd52",
              "imagePullPolicy": null,
              "args": [
                "--kubelet-service=kube-system/release-name-prometheus-kubelet",
                "--log-format=logfmt",
                "--log-level=info",
                "--localhost=127.0.0.1",
                "--prometheus-config-reloader=$(PROMETHEUS_CONFIG_RELOADER)"
              ],
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "env": [
                {
                  "name": "PUID",
                  "value": "568"
                },
                {
                  "name": "USER_ID",
                  "value": "568"
                },
                {
                  "name": "UID",
                  "value": "568"
                },
                {
                  "name": "UMASK",
                  "value": "2"
                },
                {
                  "name": "UMASK_SET",
                  "value": "2"
                },
                {
                  "name": "PGID",
                  "value": "568"
                },
                {
                  "name": "GROUP_ID",
                  "value": "568"
                },
                {
                  "name": "GID",
                  "value": "568"
                },
                {
                  "name": "S6_READ_ONLY_ROOT",
                  "value": "1"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "void"
                },
                {
                  "name": "TZ",
                  "value": "UTC"
                },
                {
                  "name": "PROMETHEUS_CONFIG_RELOADER",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "key": "prometheus-config-reloader",
                      "name": "prometheus-operator-config"
                    }
                  }
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "alertmanager",
                  "containerPort": 9093,
                  "protocol": "TCP"
                },
                {
                  "name": "main",
                  "containerPort": 9090,
                  "protocol": "TCP"
                },
                {
                  "name": "promop",
                  "containerPort": 8080,
                  "protocol": "TCP"
                },
                {
                  "name": "thanos",
                  "containerPort": 10901,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/shared",
                  "name": "shared"
                },
                {
                  "mountPath": "/tmp",
                  "name": "temp"
                },
                {
                  "mountPath": "/var/logs",
                  "name": "varlogs"
                }
              ],
              "livenessProbe": {
                "failureThreshold": 5,
                "httpGet": {
                  "path": "/metrics",
                  "port": "promop",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "failureThreshold": 5,
                "httpGet": {
                  "path": "/metrics",
                  "port": "promop",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "startupProbe": {
                "failureThreshold": 60,
                "httpGet": {
                  "path": "/metrics",
                  "port": "promop",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 5,
                "timeoutSeconds": 2
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "shared",
              "emptyDir": {}
            },
            {
              "name": "temp",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "varlogs",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "Alertmanager",
    "metadata": {
      "name": "release-name-prometheus-alertmanager",
      "namespace": "default",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "alertmanager"
      }
    },
    "spec": {
      "replicas": 1,
      "serviceAccountName": "release-name-prometheus-alertmanager",
      "listenLocal": false,
      "externalUrl": "http://release-name-prometheus-alertmanager.default:10087/",
      "portName": "alertmanager",
      "paused": false,
      "logFormat": "logfmt",
      "logLevel": "info",
      "retention": "240h",
      "resources": {},
      "routePrefix": "/",
      "securityContext": {
        "fsGroup": 1001,
        "runAsUser": 1001
      },
      "storage": {
        "volumeClaimTemplate": {
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "999Gi"
              }
            }
          }
        }
      },
      "podMetadata": {
        "labels": {
          "app.kubernetes.io/name": "prometheus",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "alertmanager"
        }
      },
      "affinity": {
        "podAntiAffinity": {
          "preferredDuringSchedulingIgnoredDuringExecution": [
            {
              "podAffinityTerm": {
                "labelSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "prometheus",
                    "app.kubernetes.io/instance": "release-name",
                    "app.kubernetes.io/component": "alertmanager"
                  }
                },
                "namespaces": [
                  "default"
                ],
                "topologyKey": "kubernetes.io/hostname"
              },
              "weight": 1
            }
          ]
        }
      },
      "containers": [
        {
          "name": "alertmanager",
          "securityContext": {
            "allowPrivilegeEscalation": false,
            "capabilities": {
              "drop": [
                "ALL"
              ]
            },
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": true
          },
          "livenessProbe": {
            "httpGet": {
              "path": "/-/healthy",
              "port": "alertmanager",
              "scheme": "HTTP"
            },
            "initialDelaySeconds": 0,
            "periodSeconds": 5,
            "timeoutSeconds": 3,
            "failureThreshold": 120,
            "successThreshold": 1
          },
          "readinessProbe": {
            "httpGet": {
              "path": "/-/ready",
              "port": "alertmanager",
              "scheme": "HTTP"
            },
            "initialDelaySeconds": 0,
            "periodSeconds": 5,
            "timeoutSeconds": 3,
            "failureThreshold": 120,
            "successThreshold": 1
          }
        },
        {
          "name": "config-reloader",
          "securityContext": {
            "allowPrivilegeEscalation": false,
            "capabilities": {
              "drop": [
                "ALL"
              ]
            },
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": true
          },
          "livenessProbe": {
            "tcpSocket": {
              "port": "reloader-web"
            },
            "initialDelaySeconds": 10,
            "periodSeconds": 10,
            "timeoutSeconds": 5,
            "failureThreshold": 6,
            "successThreshold": 1
          },
          "readinessProbe": {
            "tcpSocket": {
              "port": "reloader-web"
            },
            "initialDelaySeconds": 15,
            "periodSeconds": 20,
            "timeoutSeconds": 5,
            "failureThreshold": 6,
            "successThreshold": 1
          }
        }
      ]
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "Prometheus",
    "metadata": {
      "name": "release-name-prometheus-prometheus",
      "namespace": "default",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "prometheus"
      }
    },
    "spec": {
      "replicas": 1,
      "serviceAccountName": "release-name-prometheus-prometheus",
      "serviceMonitorSelector": {},
      "podMonitorSelector": {},
      "probeSelector": {},
      "alerting": {
        "alertmanagers": [
          {
            "namespace": "default",
            "name": "release-name-prometheus-alertmanager",
            "port": "http",
            "pathPrefix": "/"
          }
        ]
      },
      "externalUrl": "http://release-name-prometheus-prometheus.default:9090/",
      "paused": false,
      "logLevel": "info",
      "logFormat": "logfmt",
      "listenLocal": false,
      "enableAdminAPI": false,
      "retention": "31d",
      "portName": "main",
      "routePrefix": "/",
      "serviceMonitorNamespaceSelector": {},
      "podMonitorNamespaceSelector": {},
      "probeNamespaceSelector": {},
      "securityContext": {
        "fsGroup": 1001,
        "runAsUser": 1001
      },
      "ruleNamespaceSelector": {},
      "ruleSelector": {},
      "storage": {
        "volumeClaimTemplate": {
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "999Gi"
              }
            }
          }
        }
      },
      "podMetadata": {
        "labels": {
          "app.kubernetes.io/name": "prometheus",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "prometheus"
        }
      },
      "affinity": {
        "podAntiAffinity": {
          "preferredDuringSchedulingIgnoredDuringExecution": [
            {
              "podAffinityTerm": {
                "labelSelector": {
                  "matchLabels": {
                    "app.kubernetes.io/name": "prometheus",
                    "app.kubernetes.io/instance": "release-name",
                    "app.kubernetes.io/component": "prometheus"
                  }
                },
                "namespaces": [
                  "default"
                ],
                "topologyKey": "kubernetes.io/hostname"
              },
              "weight": 1
            }
          ]
        }
      },
      "containers": [
        {
          "name": "prometheus",
          "securityContext": {
            "allowPrivilegeEscalation": false,
            "capabilities": {
              "drop": [
                "ALL"
              ]
            },
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": true
          },
          "livenessProbe": {
            "httpGet": {
              "path": "/-/healthy",
              "port": "main",
              "scheme": "HTTP"
            },
            "initialDelaySeconds": 0,
            "periodSeconds": 10,
            "timeoutSeconds": 3,
            "failureThreshold": 10,
            "successThreshold": 1
          },
          "readinessProbe": {
            "httpGet": {
              "path": "/-/ready",
              "port": "main",
              "scheme": "HTTP"
            },
            "initialDelaySeconds": 0,
            "periodSeconds": 10,
            "timeoutSeconds": 3,
            "failureThreshold": 10,
            "successThreshold": 1
          }
        },
        {
          "name": "config-reloader",
          "securityContext": {
            "allowPrivilegeEscalation": false,
            "capabilities": {
              "drop": [
                "ALL"
              ]
            },
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": true
          },
          "livenessProbe": {
            "tcpSocket": {
              "port": "reloader-web"
            },
            "initialDelaySeconds": 10,
            "periodSeconds": 10,
            "timeoutSeconds": 5,
            "failureThreshold": 6,
            "successThreshold": 1
          },
          "readinessProbe": {
            "tcpSocket": {
              "port": "reloader-web"
            },
            "initialDelaySeconds": 15,
            "periodSeconds": 20,
            "timeoutSeconds": 5,
            "failureThreshold": 6,
            "successThreshold": 1
          }
        }
      ]
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "name": "release-name-kube-state-metrics",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-3.0.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "jobLabel": "",
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "kube-state-metrics",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "endpoints": [
        {
          "port": "http",
          "honorLabels": true
        }
      ],
      "namespaceSelector": {
        "matchNames": [
          "default"
        ]
      }
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "name": "release-name-node-exporter",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "node-exporter",
        "helm.sh/chart": "node-exporter-3.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "jobLabel": "jobLabel",
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "node-exporter",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "endpoints": [
        {
          "port": "metrics"
        }
      ],
      "namespaceSelector": {
        "matchNames": [
          "default"
        ]
      }
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "name": "release-name-prometheus-alertmanager",
      "namespace": "default",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "alertmanager"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "prometheus",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "alertmanager"
        }
      },
      "namespaceSelector": {
        "matchNames": [
          "default"
        ]
      },
      "endpoints": [
        {
          "port": "http",
          "path": "/metrics"
        }
      ]
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "name": "release-name-prometheus-prometheus",
      "namespace": "default",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "prometheus"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "prometheus",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "prometheus"
        }
      },
      "namespaceSelector": {
        "matchNames": [
          "default"
        ]
      },
      "endpoints": [
        {
          "port": "http",
          "path": "/metrics"
        }
      ]
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "name": "release-name-prometheus-coredns",
      "namespace": "default",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "release-name-prometheus-coredns"
      }
    },
    "spec": {
      "jobLabel": "k8s-app",
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/component": "release-name-prometheus-coredns"
        }
      },
      "namespaceSelector": {
        "matchNames": [
          "kube-system"
        ]
      },
      "endpoints": [
        {
          "port": "http-metrics",
          "bearerTokenFile": "/var/run/secrets/kubernetes.io/serviceaccount/token"
        }
      ]
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "name": "release-name-prometheus-apiserver",
      "namespace": "default",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "apiserver"
      }
    },
    "spec": {
      "jobLabel": "component",
      "selector": {
        "matchLabels": {
          "component": "apiserver",
          "provider": "kubernetes"
        }
      },
      "namespaceSelector": {
        "matchNames": [
          "default"
        ]
      },
      "endpoints": [
        {
          "port": "https",
          "scheme": "https",
          "tlsConfig": {
            "caFile": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
            "serverName": "kubernetes",
            "insecureSkipVerify": true
          },
          "bearerTokenFile": "/var/run/secrets/kubernetes.io/serviceaccount/token"
        }
      ]
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "name": "release-name-prometheus-kubelet",
      "namespace": "default",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "kubelet"
      }
    },
    "spec": {
      "jobLabel": "k8s-app",
      "selector": {
        "matchLabels": {
          "k8s-app": "kubelet"
        }
      },
      "namespaceSelector": {
        "matchNames": [
          "kube-system"
        ]
      },
      "endpoints": [
        {
          "port": "https-metrics",
          "scheme": "https",
          "tlsConfig": {
            "caFile": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
            "serverName": "kubernetes",
            "insecureSkipVerify": true
          },
          "bearerTokenFile": "/var/run/secrets/kubernetes.io/serviceaccount/token",
          "honorLabels": true
        },
        {
          "port": "https-metrics",
          "path": "/metrics/cadvisor",
          "scheme": "https",
          "tlsConfig": {
            "caFile": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
            "serverName": "kubernetes",
            "insecureSkipVerify": true
          },
          "bearerTokenFile": "/var/run/secrets/kubernetes.io/serviceaccount/token",
          "honorLabels": true
        }
      ]
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "name": "release-name-prometheus-operator",
      "labels": {
        "helm.sh/chart": "prometheus-4.0.4",
        "app.kubernetes.io/name": "prometheus",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.57.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "operator"
      }
    },
    "spec": {
      "endpoints": [
        {
          "port": "http",
          "honorLabels": true
        }
      ],
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "prometheus",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "operator"
        }
      },
      "namespaceSelector": {
        "matchNames": [
          "default"
        ]
      }
    }
  }
]