[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-prometheus-yace-exporter",
      "labels": {
        "app.kubernetes.io/name": "prometheus-yace-exporter",
        "helm.sh/chart": "prometheus-yace-exporter-0.5.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-prometheus-yace-exporter",
      "labels": {
        "app.kubernetes.io/name": "prometheus-yace-exporter",
        "helm.sh/chart": "prometheus-yace-exporter-0.5.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": null
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-prometheus-yace-exporter",
      "labels": {
        "app.kubernetes.io/name": "prometheus-yace-exporter",
        "helm.sh/chart": "prometheus-yace-exporter-0.5.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "config.yml": "discovery:\n  exportedTagsOnMetrics:\n    ec2:\n      - Name\n    ebs:\n      - VolumeId\n  jobs:\n  - region: eu-west-1\n    type: \"es\"\n    searchTags:\n      - Key: type\n        Value: ^(easteregg|k8s)$\n    metrics:\n      - name: FreeStorageSpace\n        statistics:\n        - 'Sum'\n        period: 600\n        length: 60\n      - name: ClusterStatus.green\n        statistics:\n        - 'Minimum'\n        period: 600\n        length: 60\n      - name: ClusterStatus.yellow\n        statistics:\n        - 'Maximum'\n        period: 600\n        length: 60\n      - name: ClusterStatus.red\n        statistics:\n        - 'Maximum'\n        period: 600\n        length: 60\n  - type: \"elb\"\n    region: eu-west-1\n    searchTags:\n      - Key: KubernetesCluster\n        Value: production-19\n    metrics:\n      - name: HealthyHostCount\n        statistics:\n        - 'Minimum'\n        period: 600\n        length: 600\n      - name: HTTPCode_Backend_4XX\n        statistics:\n        - 'Sum'\n        period: 60\n        length: 900\n        delay: 300\n        nilToZero: true\n  - type: \"alb\"\n    region: eu-west-1\n    searchTags:\n      - Key: kubernetes.io/service-name\n        Value: .*\n    metrics:\n      - name: UnHealthyHostCount\n        statistics: [Maximum]\n        period: 60\n        length: 600\n  - type: \"vpn\"\n    region: eu-west-1\n    searchTags:\n      - Key: kubernetes.io/service-name\n        Value: .*\n    metrics:\n      - name: TunnelState\n        statistics:\n        - 'p90'\n        period: 60\n        length: 300\n  - type: \"kinesis\"\n    region: eu-west-1\n    metrics:\n      - name: PutRecords.Success\n        statistics:\n        - 'Sum'\n        period: 60\n        length: 300\n  - type: \"s3\"\n    region: eu-west-1\n    searchTags:\n      - Key: type\n        Value: public\n    additionalDimensions:\n      - name: StorageType\n        value: StandardStorage\n    metrics:\n      - name: NumberOfObjects\n        statistics:\n          - Average\n        period: 86400\n        length: 172800\n        addCloudwatchTimestamp: true\n      - name: BucketSizeBytes\n        statistics:\n          - Average\n        period: 86400\n        length: 172800\n        addCloudwatchTimestamp: true\n  - type: \"ebs\"\n    region: eu-west-1\n    searchTags:\n      - Key: type\n        Value: public\n    metrics:\n      - name: BurstBalance\n        statistics:\n        - 'Minimum'\n        period: 600\n        length: 600\nstatic:\n  - namespace: AWS/AutoScaling\n    region: eu-west-1\n    dimensions:\n    - name: AutoScalingGroupName\n      value: Test\n    customTags:\n      - Key: CustomTag\n        Value: CustomValue\n    metrics:\n      - name: GroupInServiceInstances\n        statistics:\n        - 'Minimum'\n        period: 60\n        length: 300\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-prometheus-yace-exporter",
      "annotations": {},
      "labels": {
        "app.kubernetes.io/name": "prometheus-yace-exporter",
        "helm.sh/chart": "prometheus-yace-exporter-0.5.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "prometheus-yace-exporter",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-prometheus-yace-exporter",
      "labels": {
        "app.kubernetes.io/name": "prometheus-yace-exporter",
        "helm.sh/chart": "prometheus-yace-exporter-0.5.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "prometheus-yace-exporter",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "prometheus-yace-exporter",
            "app.kubernetes.io/instance": "release-name"
          },
          "annotations": {
            "checksum/config": "37842eae43ea96f14600427a0c15dd82c5e43bc6e478048109cd8caafa778552"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "prometheus-yace-exporter",
              "image": "quay.io/invisionag/yet-another-cloudwatch-exporter:v0.13.7",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "yace",
                "--config.file=/config/config.yml"
              ],
              "volumeMounts": [
                {
                  "name": "vol-prometheus-yace-exporter",
                  "mountPath": "/config"
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 5000,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                }
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "serviceAccountName": "release-name-prometheus-yace-exporter",
          "securityContext": {
            "runAsUser": 1000,
            "runAsGroup": 1000,
            "fsGroup": 1000
          },
          "volumes": [
            {
              "configMap": {
                "defaultMode": 420,
                "name": "release-name-prometheus-yace-exporter"
              },
              "name": "vol-prometheus-yace-exporter"
            }
          ]
        }
      }
    }
  }
]