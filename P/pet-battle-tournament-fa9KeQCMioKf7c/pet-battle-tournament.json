[
  {
    "kind": "ServiceAccount",
    "apiVersion": "v1",
    "metadata": {
      "name": "grafana-serviceaccount",
      "namespace": "fa9KeQCMioKf7c",
      "annotations": {
        "argocd.argoproj.io/compare-options": "IgnoreExtraneous",
        "argocd.argoproj.io/sync-options": "Prune=false"
      }
    }
  },
  {
    "apiVersion": "v1",
    "data": {
      "session_secret": "SUNKT0p0ZDRMcg=="
    },
    "kind": "Secret",
    "metadata": {
      "name": "grafana-k8s-proxy"
    },
    "type": "Opaque"
  },
  {
    "apiVersion": "v1",
    "data": {
      "INFINISPAN_USER": "ZGV2ZWxvcGVy",
      "INFINISPAN_PASSWORD": "cGFzc3dvcmQ="
    },
    "kind": "Secret",
    "metadata": {
      "name": "infinispan-auth",
      "labels": {
        "helm.sh/chart": "pet-battle-infra-1.0.32",
        "app.kubernetes.io/part-of": "petbattleworld",
        "app.kubernetes.io/name": "pet-battle-tournament",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque"
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "infinispan-connect-secret"
    },
    "type": "Opaque",
    "stringData": {
      "identities.yaml": "credentials:\n- username: developer\n  password: password\n- username: operator\n  password: password"
    }
  },
  {
    "apiVersion": "v1",
    "stringData": {
      "username": "developer",
      "password": "password"
    },
    "kind": "Secret",
    "metadata": {
      "name": "infinispan-metrics-basic-auth"
    },
    "type": "Opaque"
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "annotations": {
        "template.openshift.io/expose-admin_password": "{.data['database-admin-password']}",
        "template.openshift.io/expose-database_name": "{.data['database-name']}",
        "template.openshift.io/expose-password": "{.data['database-password']}",
        "template.openshift.io/expose-username": "{.data['database-user']}"
      },
      "name": "release-name-mongodb",
      "labels": {
        "helm.sh/chart": "pet-battle-tournament-1.0.40",
        "app.kubernetes.io/name": "mongodb",
        "app.kubernetes.io/component": "mongodb",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "gha-master",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/part-of": "petbattleworld"
      }
    },
    "stringData": {
      "database-admin-password": "password",
      "database-name": "tournament",
      "database-password": "password",
      "database-user": "user"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "labels": {
        "config.openshift.io/inject-trusted-cabundle": "true"
      },
      "name": "ocp-injected-certs"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "annotations": {
        "service.beta.openshift.io/inject-cabundle": "true",
        "cert-utils-operator.redhat-cop.io/generate-java-truststore": "true",
        "cert-utils-operator.redhat-cop.io/source-ca-key": "service-ca.crt",
        "cert-utils-operator.redhat-cop.io/java-keystore-password": "jkspassword"
      },
      "name": "java-truststore"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "name": "release-name-mongodb",
      "labels": {
        "helm.sh/chart": "pet-battle-tournament-1.0.40",
        "app.kubernetes.io/name": "mongodb",
        "app.kubernetes.io/component": "mongodb",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "gha-master",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/part-of": "petbattleworld"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "1Gi"
        }
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "pb-grafana-proxy-release-name-default"
    },
    "rules": [
      {
        "apiGroups": [
          "authentication.k8s.io"
        ],
        "resources": [
          "tokenreviews"
        ],
        "verbs": [
          "create"
        ]
      },
      {
        "apiGroups": [
          "authorization.k8s.io"
        ],
        "resources": [
          "subjectaccessreviews"
        ],
        "verbs": [
          "create"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "pb-grafana-proxy-release-name-default"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "name": "pb-grafana-proxy-release-name-default",
      "kind": "ClusterRole"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "grafana-serviceaccount",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "pb-grafana-application-monitoring-release-name-default"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cluster-monitoring-view"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "grafana-serviceaccount",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "annotations": {
        "template.openshift.io/expose-uri": "mongodb://{.spec.clusterIP}:{.spec.ports[?(.name==\"mongo\")].port}"
      },
      "name": "release-name-mongodb",
      "labels": {
        "helm.sh/chart": "pet-battle-tournament-1.0.40",
        "app.kubernetes.io/name": "mongodb",
        "app.kubernetes.io/component": "mongodb",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "gha-master",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/part-of": "petbattleworld"
      }
    },
    "spec": {
      "ports": [
        {
          "name": "mongo",
          "nodePort": 0,
          "port": 27017,
          "protocol": "TCP",
          "targetPort": 27017
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "mongodb",
        "app.kubernetes.io/component": "mongodb",
        "app.kubernetes.io/instance": "release-name"
      },
      "sessionAffinity": "None",
      "type": "ClusterIP"
    },
    "status": {
      "loadBalancer": {}
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-pet-battle-tournament",
      "labels": {
        "helm.sh/chart": "pet-battle-tournament-1.0.40",
        "app.kubernetes.io/part-of": "petbattleworld",
        "app.kubernetes.io/name": "pet-battle-tournament",
        "app.kubernetes.io/component": "pet-battle-tournament",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "ports": [
        {
          "port": 8080,
          "protocol": "TCP",
          "targetPort": 8080,
          "name": "tcp-8080"
        },
        {
          "port": 8443,
          "protocol": "TCP",
          "targetPort": 8443,
          "name": "tcp-8443"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "pet-battle-tournament",
        "app.kubernetes.io/component": "pet-battle-tournament",
        "app.kubernetes.io/instance": "release-name"
      },
      "sessionAffinity": "None",
      "type": "ClusterIP"
    },
    "status": {
      "loadBalancer": {}
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-pet-battle-tournament",
      "annotations": {
        "image.openshift.io/triggers": "[{\"from\":{\"kind\":\"ImageStreamTag\",\"name\":\"release-name-pet-battle-tournament:gha-master\"},\"fieldPath\":\"spec.template.spec.containers[?(@.name==\\\"pet-battle-tournament\\\")].image\"}]"
      },
      "labels": {
        "helm.sh/chart": "pet-battle-tournament-1.0.40",
        "app.kubernetes.io/part-of": "petbattleworld",
        "app.kubernetes.io/name": "pet-battle-tournament",
        "app.kubernetes.io/component": "pet-battle-tournament",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "revisionHistoryLimit": 10,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "pet-battle-tournament",
          "app.kubernetes.io/component": "pet-battle-tournament",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "prometheus.io/scrape": "true",
            "prometheus.io/path": "/metrics",
            "prometheus.io/port": "8080",
            "rollme": "c48k8"
          },
          "creationTimestamp": null,
          "labels": {
            "app.kubernetes.io/name": "pet-battle-tournament",
            "app.kubernetes.io/component": "pet-battle-tournament",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "env": [
                {
                  "name": "JAVA_OPTIONS",
                  "value": "-Dquarkus.infinispan-client.trust-store=/deployments/config/truststore.jks -Djavax.net.ssl.trustStore=/deployments/config/truststore.jks -Djavax.net.ssl.trustStorePassword=jkspassword"
                },
                {
                  "name": "OIDCVAR",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "CLIENT_SECRET",
                      "name": "keycloak-client-secret-pbserver"
                    }
                  }
                },
                {
                  "name": "DATABASE_ADMIN_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "database-admin-password",
                      "name": "release-name-mongodb"
                    }
                  }
                },
                {
                  "name": "DATABASE_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "database-name",
                      "name": "release-name-mongodb"
                    }
                  }
                },
                {
                  "name": "DATABASE_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "database-password",
                      "name": "release-name-mongodb"
                    }
                  }
                },
                {
                  "name": "DATABASE_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "database-user",
                      "name": "release-name-mongodb"
                    }
                  }
                },
                {
                  "name": "DATABASE_SERVICE_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "DATABASE_SERVICE_PORT",
                  "value": "27017"
                },
                {
                  "name": "INFINISPAN_SERVICE_HOST",
                  "value": "infinispan"
                },
                {
                  "name": "INFINISPAN_SERVICE_PORT",
                  "value": "11222"
                },
                {
                  "name": "INFINISPAN_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "INFINISPAN_PASSWORD",
                      "name": "infinispan-auth"
                    }
                  }
                },
                {
                  "name": "INFINISPAN_REALM",
                  "value": "default"
                },
                {
                  "name": "INFINISPAN_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "INFINISPAN_USER",
                      "name": "infinispan-auth"
                    }
                  }
                },
                {
                  "name": "QUARKUS_PROFILE",
                  "value": "prod"
                }
              ],
              "image": " ",
              "imagePullPolicy": "Always",
              "name": "pet-battle-tournament",
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/q/health/live",
                  "port": 8080,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 0,
                "periodSeconds": 30,
                "successThreshold": 1,
                "timeoutSeconds": 10
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/q/health/ready",
                  "port": 8080,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 0,
                "periodSeconds": 30,
                "successThreshold": 1,
                "timeoutSeconds": 10
              },
              "ports": [
                {
                  "containerPort": 8080,
                  "protocol": "TCP"
                },
                {
                  "containerPort": 8443,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "terminationMessagePath": "/dev/termination-log",
              "terminationMessagePolicy": "File",
              "volumeMounts": [
                {
                  "mountPath": "/deployments/config/",
                  "name": "javatruststore",
                  "readOnly": true
                },
                {
                  "mountPath": "/tmp/secrets/keycloak",
                  "name": "pbsecretkeycloak",
                  "readOnly": true
                }
              ]
            }
          ],
          "dnsPolicy": "ClusterFirst",
          "restartPolicy": "Always",
          "schedulerName": "default-scheduler",
          "securityContext": {},
          "terminationGracePeriodSeconds": 30,
          "volumes": [
            {
              "name": "pbsecretkeycloak",
              "secret": {
                "defaultMode": 384,
                "optional": false,
                "secretName": "keycloak-client-secret-pbserver"
              }
            },
            {
              "configMap": {
                "defaultMode": 384,
                "name": "java-truststore",
                "optional": false
              },
              "name": "javatruststore"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps.openshift.io/v1",
    "kind": "DeploymentConfig",
    "metadata": {
      "annotations": {
        "template.alpha.openshift.io/wait-for-ready": "true"
      },
      "name": "release-name-mongodb",
      "labels": {
        "helm.sh/chart": "pet-battle-tournament-1.0.40",
        "app.kubernetes.io/name": "mongodb",
        "app.kubernetes.io/component": "mongodb",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "gha-master",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/part-of": "petbattleworld"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "app.kubernetes.io/name": "mongodb",
        "app.kubernetes.io/component": "mongodb",
        "app.kubernetes.io/instance": "release-name"
      },
      "strategy": {
        "type": "Recreate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "mongodb",
            "app.kubernetes.io/component": "mongodb",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "env": [
                {
                  "name": "MONGODB_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "database-user",
                      "name": "release-name-mongodb"
                    }
                  }
                },
                {
                  "name": "MONGODB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "database-password",
                      "name": "release-name-mongodb"
                    }
                  }
                },
                {
                  "name": "MONGODB_ADMIN_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "database-admin-password",
                      "name": "release-name-mongodb"
                    }
                  }
                },
                {
                  "name": "MONGODB_DATABASE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "database-name",
                      "name": "release-name-mongodb"
                    }
                  }
                }
              ],
              "image": " ",
              "imagePullPolicy": "IfNotPresent",
              "livenessProbe": {
                "initialDelaySeconds": 30,
                "tcpSocket": {
                  "port": 27017
                },
                "timeoutSeconds": 1
              },
              "name": "mongodb",
              "ports": [
                {
                  "containerPort": 27017,
                  "protocol": "TCP"
                }
              ],
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-i",
                    "-c",
                    "mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""
                  ]
                },
                "initialDelaySeconds": 3,
                "timeoutSeconds": 1
              },
              "resources": {
                "limits": {
                  "memory": "512Mi"
                }
              },
              "securityContext": {
                "capabilities": {},
                "privileged": false
              },
              "terminationMessagePath": "/dev/termination-log",
              "volumeMounts": [
                {
                  "mountPath": "/var/lib/mongodb/data",
                  "name": "mongodb-data"
                }
              ]
            }
          ],
          "dnsPolicy": "ClusterFirst",
          "restartPolicy": "Always",
          "volumes": [
            {
              "name": "mongodb-data",
              "persistentVolumeClaim": {
                "claimName": "release-name-mongodb"
              }
            }
          ]
        }
      },
      "triggers": [
        {
          "imageChangeParams": {
            "automatic": true,
            "containerNames": [
              "mongodb"
            ],
            "from": {
              "kind": "ImageStreamTag",
              "name": "mongodb:3.6",
              "namespace": "openshift"
            },
            "lastTriggeredImage": ""
          },
          "type": "ImageChange"
        },
        {
          "type": "ConfigChange"
        }
      ]
    }
  },
  {
    "apiVersion": "image.openshift.io/v1",
    "kind": "ImageStream",
    "metadata": {
      "name": "release-name-pet-battle-tournament",
      "labels": {
        "helm.sh/chart": "pet-battle-tournament-1.0.40",
        "app.kubernetes.io/part-of": "petbattleworld",
        "app.kubernetes.io/name": "pet-battle-tournament",
        "app.kubernetes.io/component": "pet-battle-tournament",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "creationTimestamp": null
    },
    "spec": {
      "lookupPolicy": {
        "local": true
      },
      "tags": [
        {
          "annotations": {
            "openshift.io/imported-from": "petbattle/pet-battle-tournament"
          },
          "from": {
            "kind": "DockerImage",
            "name": "quay.io/petbattle/pet-battle-tournament:gha-master"
          },
          "importPolicy": {},
          "name": "gha-master"
        }
      ]
    }
  },
  {
    "apiVersion": "operators.coreos.com/v1",
    "kind": "OperatorGroup",
    "metadata": {
      "name": "pet-battle-tournament"
    },
    "spec": {
      "targetNamespaces": [
        "default"
      ]
    }
  },
  {
    "apiVersion": "route.openshift.io/v1",
    "kind": "Route",
    "metadata": {
      "name": "release-name-pet-battle-tournament",
      "labels": {
        "helm.sh/chart": "pet-battle-tournament-1.0.40",
        "app.kubernetes.io/part-of": "petbattleworld",
        "app.kubernetes.io/name": "pet-battle-tournament",
        "app.kubernetes.io/component": "pet-battle-tournament",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "port": {
        "targetPort": "tcp-8080"
      },
      "to": {
        "kind": "Service",
        "name": "release-name-pet-battle-tournament",
        "weight": 100
      },
      "tls": {
        "insecureEdgeTerminationPolicy": "Redirect",
        "termination": "edge"
      },
      "wildcardPolicy": "None"
    },
    "status": {
      "ingress": [
        {
          "conditions": [
            {
              "status": "True",
              "type": "Admitted"
            }
          ]
        }
      ]
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "labels": {
        "helm.sh/chart": "pet-battle-infra-1.0.32",
        "app.kubernetes.io/part-of": "petbattleworld",
        "app.kubernetes.io/name": "pet-battle-tournament",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "name": "infinispan-monitoring"
    },
    "spec": {
      "endpoints": [
        {
          "targetPort": 11222,
          "path": "/metrics",
          "honorLabels": true,
          "basicAuth": {
            "username": {
              "key": "username",
              "name": "infinispan-metrics-basic-auth"
            },
            "password": {
              "key": "password",
              "name": "infinispan-metrics-basic-auth"
            }
          },
          "interval": "30s",
          "scrapeTimeout": "10s",
          "scheme": "https",
          "tlsConfig": {
            "insecureSkipVerify": true,
            "serverName": "infinispan"
          }
        }
      ],
      "selector": {
        "matchLabels": {
          "clusterName": "infinispan"
        }
      }
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "ServiceMonitor",
    "metadata": {
      "name": "release-name-pet-battle-tournament-monitor",
      "labels": {
        "helm.sh/chart": "pet-battle-tournament-1.0.40",
        "app.kubernetes.io/part-of": "petbattleworld",
        "app.kubernetes.io/name": "pet-battle-tournament",
        "app.kubernetes.io/component": "pet-battle-tournament",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "endpoints": [
        {
          "interval": "30s",
          "port": "tcp-8080",
          "scheme": "http"
        }
      ],
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/component": "pet-battle-tournament"
        }
      }
    }
  },
  {
    "apiVersion": "operators.coreos.com/v1alpha1",
    "kind": "Subscription",
    "metadata": {
      "name": "grafana-operator"
    },
    "spec": {
      "channel": "alpha",
      "installPlanApproval": "Automatic",
      "name": "grafana-operator",
      "source": "community-operators",
      "sourceNamespace": "openshift-marketplace"
    }
  },
  {
    "apiVersion": "operators.coreos.com/v1alpha1",
    "kind": "Subscription",
    "metadata": {
      "name": "infinispan"
    },
    "spec": {
      "channel": "8.1.x",
      "installPlanApproval": "Automatic",
      "name": "datagrid",
      "source": "redhat-operators",
      "sourceNamespace": "openshift-marketplace"
    }
  },
  {
    "apiVersion": "operators.coreos.com/v1alpha1",
    "kind": "Subscription",
    "metadata": {
      "name": "keycloak-operator"
    },
    "spec": {
      "channel": "alpha",
      "installPlanApproval": "Automatic",
      "name": "keycloak-operator",
      "source": "community-operators",
      "sourceNamespace": "openshift-marketplace",
      "startingCSV": "keycloak-operator.v15.0.2"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "delete-csv-job",
      "annotations": {
        "helm.sh/hook": "post-delete",
        "helm.sh/hook-weight": "1",
        "helm.sh/hook-delete-policy": "hook-succeeded"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "patch-grafana-ds",
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "50",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "crd-reader",
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "-5",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "apiextensions.k8s.io"
        ],
        "resources": [
          "customresourcedefinitions"
        ],
        "verbs": [
          "get",
          "list"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "patch-grafana-ds-release-name-default",
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "50",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "integreatly.org"
        ],
        "resources": [
          "grafanadatasources"
        ],
        "verbs": [
          "get",
          "list",
          "patch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "serviceaccounts",
          "secrets",
          "pods"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "crd-reader-binding",
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "-5",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "crd-reader"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "default",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "patch-grafana-ds-release-name-default",
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "50",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "patch-grafana-ds-release-name-default"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "patch-grafana-ds",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "csv-deleter",
      "annotations": {
        "helm.sh/hook": "post-delete",
        "helm.sh/hook-weight": "1",
        "helm.sh/hook-delete-policy": "hook-succeeded"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "*"
        ],
        "resources": [
          "*"
        ],
        "verbs": [
          "delete",
          "list"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "csv-deleters",
      "annotations": {
        "helm.sh/hook": "post-delete",
        "helm.sh/hook-weight": "1",
        "helm.sh/hook-delete-policy": "hook-succeeded"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "csv-deleter"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "delete-csv-job"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "insert-bearer-token-view",
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "-1",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "grafanadatasources.integreatly.org-v1alpha1-view"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "grafana-serviceaccount",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "insert-bearer-token-edit",
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "-1",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "grafanadatasources.integreatly.org-v1alpha1-edit"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "grafana-serviceaccount",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "cluster-check",
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "-1",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "crd-check",
          "image": "quay.io/openshift/origin-cli:4.8",
          "imagePullPolicy": "IfNotPresent",
          "command": [
            "sh",
            "-c",
            "while [ true ]; do oc get crd keycloakrealms.keycloak.org grafanadashboards.integreatly.org infinispans.infinispan.org; if [ $? -eq 0 ]; then break; fi ; sleep 5s; done"
          ]
        }
      ],
      "restartPolicy": "Never",
      "terminationGracePeriodSeconds": 0,
      "serviceAccount": "default",
      "serviceAccountName": "default"
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "delete-all",
      "annotations": {
        "helm.sh/hook": "post-delete",
        "helm.sh/hook-weight": "2",
        "helm.sh/hook-delete-policy": "hook-succeeded"
      }
    },
    "spec": {
      "template": {
        "spec": {
          "containers": [
            {
              "image": "quay.io/openshift/origin-cli:latest",
              "command": [
                "/bin/bash",
                "-c",
                "set -x\nwhile [ 0 != $(oc get subscription grafana-operator infinispan keycloak-operator -o name 2>/dev/null | wc -l) ]; do\n  sleep 2;\ndone\nwhile [ 0 != $(oc get pods -o name | grep -e grafana -e keycloak -e infinispan 2>/dev/null | wc -l) ]; do\n  oc delete pod cluster-check 2>/dev/null\n  oc delete ClusterRole crd-reader 2>/dev/null\n  oc delete ClusterRoleBinding crd-reader-binding 2>/dev/null\n  oc delete infinispan infinispan 2>/dev/null\n  oc delete keycloakclient pbclient pbserver 2>/dev/null\n  oc delete keycloakrealm pbrealm 2>/dev/null\n  oc delete keycloak pbkeycloak 2>/dev/null\n  oc delete grafana pb-grafana 2>/dev/null\n  oc delete job patch-grafana-ds 2>/dev/null\n  oc delete sa patch-grafana-ds 2>/dev/null\n  oc patch keycloakuser myuser pbadmin --type='json' -p='[{\"op\": \"remove\" , \"path\": \"/metadata/finalizers\" }]' 2>/dev/null\n  oc patch keycloakclient pbclient --type='json' -p='[{\"op\": \"remove\" , \"path\": \"/metadata/finalizers\" }]' 2>/dev/null\n  oc patch keycloakclient pbserver --type='json' -p='[{\"op\": \"remove\" , \"path\": \"/metadata/finalizers\" }]' 2>/dev/null\n  oc patch keycloakrealm pbrealm --type='json' -p='[{\"op\": \"remove\" , \"path\": \"/metadata/finalizers\" }]' 2>/dev/null\n  oc delete $(oc get csv -l 'olm.copiedFrom notin (openshift-operators)' -o name) 2>/dev/null 2>/dev/null\n  sleep 2\ndone\n"
              ],
              "imagePullPolicy": "Always",
              "name": "delete-all"
            }
          ],
          "dnsPolicy": "ClusterFirst",
          "restartPolicy": "OnFailure",
          "serviceAccount": "delete-csv-job",
          "serviceAccountName": "delete-csv-job",
          "terminationGracePeriodSeconds": 10
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "patch-grafana-ds",
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "100",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "spec": {
      "backoffLimit": 10,
      "activeDeadlineSeconds": 600,
      "template": {
        "spec": {
          "containers": [
            {
              "image": "quay.io/openshift/origin-cli:latest",
              "command": [
                "/bin/bash",
                "-c",
                "set -x\necho \"waiting for grafana pod ready...\"\noc wait pod -lapp=grafana --for=condition=Ready --timeout=600s || exit $?\necho \"Patching grafana datasource with token for authentication to prometheus\"\nTOKEN=`oc serviceaccounts get-token grafana-serviceaccount`\noc patch grafanadatasource prometheus-grafanadatasource --type='json' -p='[{\"op\":\"add\",\"path\":\"/spec/datasources/0/secureJsonData/httpHeaderValue1\",\"value\":\"Bearer '${TOKEN}'\"}]'\nexit $?\n"
              ],
              "imagePullPolicy": "Always",
              "name": "patch-grafana-ds"
            }
          ],
          "dnsPolicy": "ClusterFirst",
          "restartPolicy": "OnFailure",
          "serviceAccount": "patch-grafana-ds",
          "serviceAccountName": "patch-grafana-ds",
          "terminationGracePeriodSeconds": 30
        }
      }
    }
  },
  {
    "apiVersion": "integreatly.org/v1alpha1",
    "kind": "Grafana",
    "metadata": {
      "name": "pb-grafana",
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "25",
        "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true"
      }
    },
    "spec": {
      "config": {
        "log": {
          "mode": "console",
          "level": "warn"
        },
        "auth": {
          "disable_login_form": false,
          "dissable_signout_menu": true
        },
        "auth.basic": {
          "enabled": true
        },
        "auth.anonymous": {
          "enabled": true
        }
      },
      "containers": [
        {
          "args": [
            "-provider=openshift",
            "-pass-basic-auth=false",
            "-https-address=:9091",
            "-http-address=",
            "-email-domain=*",
            "-upstream=http://localhost:3000",
            "-openshift-sar={\"resource\": \"namespaces\", \"verb\": \"get\"}",
            "-openshift-delegate-urls={\"/\": {\"resource\": \"namespaces\", \"verb\": \"get\"}}",
            "-tls-cert=/etc/tls/private/tls.crt",
            "-tls-key=/etc/tls/private/tls.key",
            "-client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token",
            "-cookie-secret-file=/etc/proxy/secrets/session_secret",
            "-openshift-service-account=grafana-serviceaccount",
            "-openshift-ca=/etc/pki/tls/cert.pem",
            "-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
            "-openshift-ca=/etc/grafana-configmaps/ocp-injected-certs/ca-bundle.crt",
            "-skip-auth-regex=^/metrics"
          ],
          "image": "quay.io/openshift/origin-oauth-proxy:4.2",
          "name": "grafana-proxy",
          "ports": [
            {
              "containerPort": 9091,
              "name": "grafana-proxy"
            }
          ],
          "resources": {},
          "volumeMounts": [
            {
              "mountPath": "/etc/tls/private",
              "name": "secret-grafana-k8s-tls",
              "readOnly": false
            },
            {
              "mountPath": "/etc/proxy/secrets",
              "name": "secret-grafana-k8s-proxy",
              "readOnly": false
            }
          ]
        }
      ],
      "secrets": [
        "grafana-k8s-tls",
        "grafana-k8s-proxy"
      ],
      "configMaps": [
        "ocp-injected-certs"
      ],
      "service": {
        "ports": [
          {
            "name": "grafana-proxy",
            "port": 9091,
            "protocol": "TCP",
            "targetPort": "grafana-proxy"
          }
        ],
        "annotations": {
          "service.alpha.openshift.io/serving-cert-secret-name": "grafana-k8s-tls"
        }
      },
      "ingress": {
        "enabled": true,
        "targetPort": "grafana-proxy",
        "termination": "reencrypt"
      },
      "client": {
        "preferService": true
      },
      "serviceAccount": {
        "annotations": {
          "serviceaccounts.openshift.io/oauth-redirectreference.primary": "{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"grafana-route\"}}"
        }
      },
      "dashboardLabelSelector": [
        {
          "matchExpressions": [
            {
              "key": "monitoring-key",
              "operator": "In",
              "values": [
                "grafana",
                "middleware"
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "apiVersion": "integreatly.org/v1alpha1",
    "kind": "GrafanaDashboard",
    "metadata": {
      "name": "pb-dashboard",
      "generation": 1,
      "labels": {
        "monitoring-key": "grafana"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "25",
        "argocd.argoproj.io/compare-options": "IgnoreExtraneous",
        "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true"
      }
    },
    "spec": {
      "customFolderName": "petbattle",
      "json": "{\n  \"annotations\": {\n    \"list\": [{\n      \"builtIn\": 1,\n      \"datasource\": \"-- Grafana --\",\n      \"enable\": true,\n      \"hide\": true,\n      \"iconColor\": \"rgba(0, 211, 255, 1)\",\n      \"name\": \"Annotations & Alerts\",\n      \"type\": \"dashboard\"\n    }]\n  },\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"id\": 2,\n  \"links\": [],\n  \"panels\": [{\n    \"aliasColors\": {},\n    \"bars\": true,\n    \"dashLength\": 10,\n    \"dashes\": false,\n    \"datasource\": null,\n    \"fieldConfig\": {\n      \"defaults\": {\n        \"custom\": {\n          \"align\": null\n        },\n        \"mappings\": [],\n        \"thresholds\": {\n          \"mode\": \"absolute\",\n          \"steps\": [{\n            \"color\": \"green\",\n            \"value\": null\n          },\n            {\n              \"color\": \"red\",\n              \"value\": 80\n            }\n          ]\n        }\n      },\n      \"overrides\": []\n    },\n    \"fill\": 1,\n    \"fillGradient\": 1,\n    \"gridPos\": {\n      \"h\": 8,\n      \"w\": 12,\n      \"x\": 0,\n      \"y\": 0\n    },\n    \"hiddenSeries\": false,\n    \"id\": 16,\n    \"legend\": {\n      \"avg\": false,\n      \"current\": false,\n      \"max\": false,\n      \"min\": false,\n      \"show\": true,\n      \"total\": false,\n      \"values\": false\n    },\n    \"lines\": true,\n    \"linewidth\": 1,\n    \"nullPointMode\": \"null\",\n    \"percentage\": false,\n    \"pluginVersion\": \"7.1.1\",\n    \"pointradius\": 2,\n    \"points\": false,\n    \"renderer\": \"flot\",\n    \"seriesOverrides\": [],\n    \"spaceLength\": 10,\n    \"stack\": true,\n    \"steppedLine\": false,\n    \"targets\": [{\n      \"expr\": \"avg by (area)(jvm_memory_used_bytes)\",\n      \"interval\": \"\",\n      \"intervalFactor\": 1,\n      \"legendFormat\": \"\",\n      \"refId\": \"A\"\n    }],\n    \"thresholds\": [],\n    \"timeFrom\": null,\n    \"timeRegions\": [],\n    \"timeShift\": null,\n    \"title\": \"JVM Memory\",\n    \"tooltip\": {\n      \"shared\": true,\n      \"sort\": 0,\n      \"value_type\": \"individual\"\n    },\n    \"type\": \"graph\",\n    \"xaxis\": {\n      \"buckets\": null,\n      \"mode\": \"time\",\n      \"name\": null,\n      \"show\": true,\n      \"values\": []\n    },\n    \"yaxes\": [{\n      \"format\": \"short\",\n      \"label\": null,\n      \"logBase\": 1,\n      \"max\": null,\n      \"min\": null,\n      \"show\": true\n    },\n      {\n        \"format\": \"short\",\n        \"label\": null,\n        \"logBase\": 1,\n        \"max\": null,\n        \"min\": null,\n        \"show\": true\n      }\n    ],\n    \"yaxis\": {\n      \"align\": false,\n      \"alignLevel\": null\n    }\n  },\n    {\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [{\n              \"color\": \"green\",\n              \"value\": null\n            },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 11,\n        \"x\": 12,\n        \"y\": 0\n      },\n      \"id\": 12,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n              \"mean\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"7.1.1\",\n      \"targets\": [{\n        \"expr\": \"sum by (method)(http_server_requests_seconds_count {outcome=\\\"CLIENT_ERROR\\\"})\",\n        \"interval\": \"\",\n        \"legendFormat\": \"\",\n        \"refId\": \"A\"\n      }],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"HTTP - Client Error(4 xx)\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {\n            \"align\": null\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [{\n              \"color\": \"green\",\n              \"value\": null\n            },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 11,\n        \"x\": 12,\n        \"y\": 3\n      },\n      \"id\": 10,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n              \"mean\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"7.1.1\",\n      \"targets\": [{\n        \"expr\": \"sum by (method)(http_server_requests_seconds_count {outcome=\\\"SERVER_ERROR\\\"})\",\n        \"instant\": true,\n        \"interval\": \"\",\n        \"legendFormat\": \"\",\n        \"refId\": \"A\"\n      }],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"HTTP - Server Error (5xx)\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [{\n              \"color\": \"green\",\n              \"value\": null\n            },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 12,\n        \"y\": 6\n      },\n      \"id\": 6,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n              \"mean\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"7.1.1\",\n      \"targets\": [{\n        \"expr\": \"avg (TournamentPetsAdded_total)\",\n        \"instant\": true,\n        \"interval\": \"\",\n        \"legendFormat\": \"\",\n        \"refId\": \"A\"\n      }],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Average Pets Added\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {},\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [{\n              \"color\": \"green\",\n              \"value\": null\n            },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 4,\n        \"x\": 15,\n        \"y\": 6\n      },\n      \"id\": 8,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n              \"mean\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"7.1.1\",\n      \"targets\": [{\n        \"expr\": \"avg (TournamentCreated_total)\",\n        \"instant\": true,\n        \"interval\": \"\",\n        \"legendFormat\": \"\",\n        \"refId\": \"A\"\n      }],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Tournaments Created\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {\n            \"align\": null\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [{\n              \"color\": \"green\",\n              \"value\": null\n            },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 4,\n        \"x\": 19,\n        \"y\": 6\n      },\n      \"id\": 2,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n              \"mean\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"7.1.1\",\n      \"targets\": [{\n        \"expr\": \"avg (TournamentPetVote_total)\",\n        \"format\": \"time_series\",\n        \"instant\": true,\n        \"interval\": \"\",\n        \"legendFormat\": \"\",\n        \"refId\": \"A\"\n      }],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Average Vote Count\",\n      \"type\": \"stat\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {}\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 8\n      },\n      \"hiddenSeries\": false,\n      \"id\": 14,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null as zero \",\n      \"percentage\": false,\n      \"pluginVersion\": \"7.1.1\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [{\n        \"expr\": \"avg by (uri)(http_server_requests_seconds_sum{status=\\\"200\\\"})\",\n        \"interval\": \"\",\n        \"intervalFactor\": 1,\n        \"legendFormat\": \"\",\n        \"refId\": \"A\"\n      }],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Average Request Time\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [{\n        \"format\": \"short\",\n        \"label\": null,\n        \"logBase\": 1,\n        \"max\": null,\n        \"min\": null,\n        \"show\": true\n      },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": null,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"custom\": {}\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 12\n      },\n      \"hiddenSeries\": false,\n      \"id\": 4,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pluginVersion\": \"7.1.1\",\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [{\n        \"expr\": \"sum by (method)(method_timed_seconds_count)\",\n        \"interval\": \"\",\n        \"legendFormat\": \"\",\n        \"refId\": \"A\"\n      }],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Method Counts\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [{\n        \"format\": \"short\",\n        \"label\": null,\n        \"logBase\": 1,\n        \"max\": null,\n        \"min\": null,\n        \"show\": true\n      },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"refresh\": \"1m\",\n  \"schemaVersion\": 26,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-24h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n        \"10s\",\n        \"30s\",\n        \"1m\",\n        \"5m\",\n        \"15m\",\n        \"30m\",\n        \"1h\",\n        \"2h\",\n        \"1d\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"PetBattleOverview\",\n  \"uid\": \"Il5fvO-Gk\",\n  \"version\": 15\n}",
      "name": "pb-dashboard.json"
    }
  },
  {
    "apiVersion": "integreatly.org/v1alpha1",
    "kind": "GrafanaDataSource",
    "metadata": {
      "name": "prometheus-grafanadatasource",
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "25",
        "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true",
        "argocd.argoproj.io/compare-options": "IgnoreExtraneous"
      }
    },
    "spec": {
      "datasources": [
        {
          "access": "proxy",
          "editable": true,
          "isDefault": true,
          "jsonData": {
            "httpHeaderName1": "Authorization",
            "timeInterval": "5s",
            "tlsSkipVerify": true
          },
          "name": "Prometheus",
          "secureJsonData": {
            "httpHeaderValue1": "Bearer $(BEARER_TOKEN)"
          },
          "type": "prometheus",
          "url": "https://thanos-querier.openshift-monitoring.svc.cluster.local:9091"
        }
      ],
      "name": "prometheus-grafanadatasource.yaml"
    }
  },
  {
    "apiVersion": "infinispan.org/v1",
    "kind": "Infinispan",
    "metadata": {
      "name": "infinispan",
      "labels": {
        "helm.sh/chart": "pet-battle-infra-1.0.32",
        "app.kubernetes.io/part-of": "petbattleworld",
        "app.kubernetes.io/name": "pet-battle-tournament",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "25",
        "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true"
      }
    },
    "spec": {
      "replicas": 1,
      "service": {
        "type": "DataGrid",
        "sites": {
          "local": {
            "name": "cloud",
            "expose": {
              "type": "LoadBalancer"
            }
          }
        }
      },
      "security": {
        "endpointEncryption": {
          "type": "Service",
          "certServiceName": "service.beta.openshift.io",
          "certSecretName": "infinispan-cert-secret"
        },
        "endpointSecretName": "infinispan-connect-secret"
      }
    }
  },
  {
    "apiVersion": "keycloak.org/v1alpha1",
    "kind": "Keycloak",
    "metadata": {
      "name": "pbkeycloak",
      "labels": {
        "app": "pbkeycloak",
        "helm.sh/chart": "pet-battle-infra-1.0.32",
        "app.kubernetes.io/part-of": "petbattleworld",
        "app.kubernetes.io/name": "pet-battle-tournament",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "25",
        "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true"
      }
    },
    "spec": {
      "instances": 1,
      "externalAccess": {
        "enabled": true
      }
    }
  },
  {
    "apiVersion": "keycloak.org/v1alpha1",
    "kind": "KeycloakClient",
    "metadata": {
      "name": "pbserver",
      "labels": {
        "client": "pbserver"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "25",
        "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true"
      }
    },
    "spec": {
      "realmSelector": {
        "matchLabels": {
          "realm": "pbrealm"
        }
      },
      "client": {
        "name": "pbserver",
        "clientId": "pbserver",
        "secret": "7d4f84e2-5163-41df-a127-81965b3bef7e",
        "bearerOnly": true,
        "protocol": "openid-connect",
        "standardFlowEnabled": true,
        "serviceAccountsEnabled": true,
        "directAccessGrantsEnabled": true,
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "consentRequired": false,
        "implicitFlowEnabled": false,
        "authorizationServicesEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultRoles": [
          "pbplayer",
          "pbviewer",
          "pbtest",
          "pbadmin"
        ]
      }
    }
  },
  {
    "apiVersion": "keycloak.org/v1alpha1",
    "kind": "KeycloakClient",
    "metadata": {
      "name": "pbclient",
      "labels": {
        "client": "pbclient"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "25",
        "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true"
      }
    },
    "spec": {
      "realmSelector": {
        "matchLabels": {
          "realm": "pbrealm"
        }
      },
      "client": {
        "name": "pbclient",
        "clientId": "pbclient",
        "bearerOnly": false,
        "protocol": "openid-connect",
        "publicClient": true,
        "redirectUris": [
          "https://pet-battle-default.example.com/*",
          "http://localhost:4200/*"
        ],
        "webOrigins": [
          "*"
        ],
        "standardFlowEnabled": true,
        "serviceAccountsEnabled": true,
        "directAccessGrantsEnabled": true,
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "consentRequired": false,
        "implicitFlowEnabled": false,
        "frontchannelLogout": false,
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultRoles": [
          "pbplayer",
          "pbviewer",
          "pbtest",
          "pbadmin"
        ],
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    }
  },
  {
    "apiVersion": "keycloak.org/v1alpha1",
    "kind": "KeycloakRealm",
    "metadata": {
      "name": "pbrealm",
      "labels": {
        "realm": "pbrealm"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-weight": "25",
        "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true"
      }
    },
    "spec": {
      "realm": {
        "id": "pbrealm",
        "realm": "pbrealm",
        "enabled": true,
        "displayName": "Pet Battle Single Sign On Realm",
        "loginWithEmailAllowed": false,
        "registrationAllowed": true,
        "registrationEmailAsUsername": false,
        "rememberMe": true,
        "sslRequired": "external",
        "users": [
          {
            "username": "pbadmin",
            "firstName": "pbadmin",
            "lastName": "pbadmin",
            "email": "pbadmin@petbattle.com",
            "enabled": true,
            "credentials": [
              {
                "type": "password",
                "value": "password"
              }
            ],
            "realmRoles": [
              "pbtest",
              "pbadmin",
              "pbplayer",
              "pbviewer"
            ],
            "clientRoles": {
              "account": [
                "manage-account",
                "view-profile"
              ],
              "realm-management": [
                "manage-users",
                "view-users",
                "query-users",
                "create-client"
              ]
            }
          },
          {
            "username": "myuser",
            "firstName": "John",
            "lastName": "Doe",
            "email": "myuser@petbattle.com",
            "enabled": true,
            "credentials": [
              {
                "type": "password",
                "value": "password"
              }
            ],
            "realmRoles": [
              "pbplayer",
              "pbviewer"
            ]
          }
        ]
      },
      "instanceSelector": {
        "matchLabels": {
          "app": "pbkeycloak"
        }
      }
    }
  }
]