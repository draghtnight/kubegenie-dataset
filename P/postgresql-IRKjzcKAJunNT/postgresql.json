[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "postgresql",
      "namespace": "IRKjzcKAJunNT"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "postgresql-bin"
    },
    "type": "Opaque",
    "data": {
      "start.sh": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoKCgojIERpc2FibGUgZWNobyBtb2RlIHdoaWxlIHNldHRpbmcgdGhlIHBhc3N3b3JkCiMgdW5sZXNzIHdlIGFyZSBpbiBkZWJ1ZyBtb2RlCnNldCAtZQoKUE9TVEdSRVNfREI9JHtQT1NUR1JFU19EQjotInBvc3RncmVzIn0KCiMgQ2hlY2sgaWYgdGhlIFBvc3RncmVzIGRhdGEgZGlyZWN0b3J5IGV4aXN0cyBiZWZvcmUgYXR0ZW1wdGluZyB0bwojIHNldCB0aGUgcGFzc3dvcmQKaWYgW1sgLWQgIiRQR0RBVEEiICYmIC1zICIkUEdEQVRBL1BHX1ZFUlNJT04iIF1dCnRoZW4KICBwb3N0Z3JlcyAtLXNpbmdsZSAtRCAiJFBHREFUQSIgIiRQT1NUR1JFU19EQiIgPDxFT0YKQUxURVIgUk9MRSAkUE9TVEdSRVNfVVNFUiBXSVRIIFBBU1NXT1JEICckUE9TVEdSRVNfUEFTU1dPUkQnCkVPRgoKZmkKCnNldCAteAoKYmFzaCAvdG1wL2FyY2hpdmVfY2xlYW51cC5zaCAmCgpleGVjIC9kb2NrZXItZW50cnlwb2ludC5zaCBwb3N0Z3JlcyAtYyBjb25maWdfZmlsZT0vdG1wL3Bvc3RncmVzcWwuY29uZgo=",
      "readiness.sh": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoKCgpzZXQgLWV4CgpwZ19pc3JlYWR5IC1VICR7UE9TVEdSRVNfVVNFUn0K",
      "archive_cleanup.sh": "IyEvYmluL2Jhc2gKCiMgICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKIyAgICBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbgojICAgIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAojCiMgICAgICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKIwojICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKIyAgICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUCiMgICAgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlCiMgICAgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKIyAgICB1bmRlciB0aGUgTGljZW5zZS4KCnNldCArZXgKCiMgQVJDSElWRV9MSU1JVCBlbnYgdmFyaWFibGUgaXMgVGhyZXNob2xkIG9mIGFyY2hpdmluZyBzdXBwb3NlZCB0byBiZSBrZXB0IGluIHBlcmNlbnRhZ2UKY2xlYW5fdXAgKCkgewogIGVjaG8gIkNsZWFudXAgcmVxdWlyZWQgYXMgVXRpbGl6YXRpb24gaXMgYWJvdmUgdGhyZXNob2xkIgogICMgR2V0IGZpbGUgY291bnQgYW5kIGRlbGV0ZSBoYWxmIG9mIHRoZSBhcmNoaXZlIHdoaWxlIG1haW50YWluaW5nIHRoZSBvcmRlciBvZiB0aGUgZmlsZXMKICBGSUxFX0NPVU5UPSQobHMgLTEgJHtBUkNISVZFX1BBVEh9IHwgc29ydCB8IHdjIC1sKQogIENPVU5UPTAKICBlY2hvICQoKEZJTEVfQ09VTlQvMikpCiAgZm9yIGZpbGUgaW4gJChscyAtMSAke0FSQ0hJVkVfUEFUSH0gfCBzb3J0KTsgZG8KICAgIGlmIFtbICRDT1VOVCAtbHQgJCgoRklMRV9DT1VOVC8yKSkgXV07IHRoZW4KICAgICAgZWNobyAicmVtb3ZpbmcgZm9sbG93aW5nIGZpbGUgJGZpbGUiCiAgICAgIHJtIC1yZiAke0FSQ0hJVkVfUEFUSH0vJGZpbGUKICAgIGVsc2UKICAgICAgYnJlYWsKICAgIGZpCiAgICBDT1VOVD0kKChDT1VOVCsxKSkKICBkb25lCn0KI2luZmluaXRlIGxvb3AgdG8gY2hlY2sgdGhlIHV0aWxpemF0aW9uIG9mIGFyY2hpdmUKd2hpbGUgdHJ1ZQpkbwogICMgY2hlY2tpbmcgdGhlIHV0aWxpemF0aW9uIG9mIGFyY2hpdmUgZGlyZWN0b3J5CiAgVVRJTElaQVRJT049JChkZiAtaCAke0FSQ0hJVkVfUEFUSH0gfCBhd2sgJyBOUj09MiB7cHJpbnQgJDV9ICcgfCBhd2sgJ3sgcHJpbnQgc3Vic3RyKCAkMCwgMSwgbGVuZ3RoKCQwKS0xICkgfScpCiAgaWYgW1sgJFVUSUxJWkFUSU9OIC1ndCAke0FSQ0hJVkVfTElNSVR9IF1dOwogIHRoZW4KICAgIGNsZWFuX3VwCiAgZmkKICBzbGVlcCAzNjAwCmRvbmUKCgo=",
      "db_test.sh": "IyEvYmluL2Jhc2gKCgpzZXQgLWV4Cgp0cmFwIGNsZWFudXAgRVhJVCBTSUdURVJNIFNJR0lOVCBTSUdLSUxMCgpURVNUX0RBVEFCQVNFX05BTUU9InBnX2hlbG10ZXN0X2RiIgpURVNUX0RBVEFCQVNFX1VTRVI9InBnX2hlbG10ZXN0X3VzZXIiClRFU1RfREFUQUJBU0VfUEFTU1dPUkQ9JFJBTkRPTQpURVNUX1RBQkxFX05BTUU9InBnX2hlbG10ZXN0IgoKZnVuY3Rpb24gcHNxbF9jbWQgewogIERBVEFCQVNFPSQxCiAgREJfVVNFUj0kMgogIGV4cG9ydCBQR1BBU1NXT1JEPSQzCiAgREJfQ09NTUFORD0kNAogIEVYSVRfT05fRkFJTD0kezU6LTF9CgogIHBzcWwgXAogIC1oICREQl9GUUROIFwKICAtcCAkREJfUE9SVCBcCiAgLVUgJERCX1VTRVIgXAogIC1kICREQVRBQkFTRSBcCiAgLXYgIk9OX0VSUk9SX1NUT1A9MSIgXAogIC0tY29tbWFuZD0iJHtEQl9DT01NQU5EfSIKCiAgUkM9JD8KCiAgaWYgW1sgJFJDIC1uZSAwIF1dCiAgdGhlbgogICAgZWNobyAnRkFJTCEnCiAgICBpZiBbWyAkRVhJVF9PTl9GQUlMIC1lcSAxIF1dCiAgICB0aGVuCiAgICAgIGV4aXQgJFJDCiAgICBmaQogIGZpCgogIHJldHVybiAwCn0KCmZ1bmN0aW9uIGNsZWFudXAgewogIGVjaG8gJ0NsZWFuaW5nIHVwIHRoZSBkYXRhYmFzZS4uLicKICBwc3FsX2NtZCAicG9zdGdyZXMiICR7REJfQURNSU5fVVNFUn0gJHtBRE1JTl9QQVNTV09SRH0gIkRST1AgREFUQUJBU0UgSUYgRVhJU1RTICR7VEVTVF9EQVRBQkFTRV9OQU1FfTsiIDAKICBwc3FsX2NtZCAicG9zdGdyZXMiICR7REJfQURNSU5fVVNFUn0gJHtBRE1JTl9QQVNTV09SRH0gIkRST1AgUk9MRSBJRiBFWElTVFMgJHtURVNUX0RBVEFCQVNFX1VTRVJ9OyIgMAogIGVjaG8gJ0NsZWFudXAgRmluaXNoZWQuJwp9CgojIENyZWF0ZSBkYgplY2hvICdUZXN0aW5nIGRhdGFiYXNlIGNvbm5lY3Rpdml0eSBhcyBhZG1pbiB1c2VyLi4uJwpwc3FsX2NtZCAicG9zdGdyZXMiICR7REJfQURNSU5fVVNFUn0gJHtBRE1JTl9QQVNTV09SRH0gIlNFTEVDVCAxIEZST00gcGdfZGF0YWJhc2U7IgplY2hvICdDb25uZWN0aXZpdHkgVGVzdCBTVUNDRVNTIScKCmVjaG8gJ1Rlc3RpbmcgY3JlYXRpb24gb2YgYW4gYXBwbGljYXRpb24gZGF0YWJhc2UuLi4nCnBzcWxfY21kICJwb3N0Z3JlcyIgJHtEQl9BRE1JTl9VU0VSfSAke0FETUlOX1BBU1NXT1JEfSAiQ1JFQVRFIERBVEFCQVNFICR7VEVTVF9EQVRBQkFTRV9OQU1FfTsiCmVjaG8gJ0RhdGFiYXNlIENyZWF0aW9uIFRlc3QgU1VDQ0VTUyEnCgplY2hvICdUZXN0aW5nIGNyZWF0aW9uIG9mIGFuIGFwcGxpY2F0aW9uIHVzZXIuLi4nCnBzcWxfY21kICJwb3N0Z3JlcyIgJHtEQl9BRE1JTl9VU0VSfSAke0FETUlOX1BBU1NXT1JEfSAiQ1JFQVRFIFJPTEUgJHtURVNUX0RBVEFCQVNFX1VTRVJ9IExPR0lOIFBBU1NXT1JEICcke1RFU1RfREFUQUJBU0VfUEFTU1dPUkR9JzsiCnBzcWxfY21kICJwb3N0Z3JlcyIgJHtEQl9BRE1JTl9VU0VSfSAke0FETUlOX1BBU1NXT1JEfSAiR1JBTlQgQUxMIFBSSVZJTEVHRVMgT04gREFUQUJBU0UgJHtURVNUX0RBVEFCQVNFX05BTUV9IHRvICR7VEVTVF9EQVRBQkFTRV9VU0VSfTsiCmVjaG8gJ1VzZXIgQ3JlYXRpb24gU1VDQ0VTUyEnCgplY2hvICdUZXN0aW5nIGNyZWF0aW9uIG9mIGFuIGFwcGxpY2F0aW9uIHRhYmxlLi4uJwpwc3FsX2NtZCAke1RFU1RfREFUQUJBU0VfTkFNRX0gJHtURVNUX0RBVEFCQVNFX1VTRVJ9ICR7VEVTVF9EQVRBQkFTRV9QQVNTV09SRH0gIkNSRUFURSBUQUJMRSAke1RFU1RfVEFCTEVfTkFNRX0gKG5hbWUgdGV4dCk7IgplY2hvICdUYWJsZSBDcmVhdGlvbiBTVUNDRVNTIScKCmVjaG8gJ1Rlc3RpbmcgRE1MLi4uJwpwc3FsX2NtZCAke1RFU1RfREFUQUJBU0VfTkFNRX0gJHtURVNUX0RBVEFCQVNFX1VTRVJ9ICR7VEVTVF9EQVRBQkFTRV9QQVNTV09SRH0gIklOU0VSVCBJTlRPICR7VEVTVF9UQUJMRV9OQU1FfSAobmFtZSkgVkFMVUVTICgndGVzdC4nKTsiCnBzcWxfY21kICR7VEVTVF9EQVRBQkFTRV9OQU1FfSAke1RFU1RfREFUQUJBU0VfVVNFUn0gJHtURVNUX0RBVEFCQVNFX1BBU1NXT1JEfSAiU0VMRUNUICogRlJPTSAke1RFU1RfVEFCTEVfTkFNRX07Igpwc3FsX2NtZCAke1RFU1RfREFUQUJBU0VfTkFNRX0gJHtURVNUX0RBVEFCQVNFX1VTRVJ9ICR7VEVTVF9EQVRBQkFTRV9QQVNTV09SRH0gIkRFTEVURSBGUk9NICR7VEVTVF9UQUJMRV9OQU1FfTsiCmVjaG8gJ0RNTCBUZXN0IFNVQ0NFU1MhJwoKZXhpdCAwCg=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "postgresql-admin"
    },
    "type": "Opaque",
    "data": {
      "POSTGRES_USER": "cG9zdGdyZXM=",
      "POSTGRES_PASSWORD": "cGFzc3dvcmQ=",
      "DATABASE_PORT": "NTQzMg==",
      "DATABASE_HOST": "cG9zdGdyZXNxbC5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2Fs"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "postgresql-audit"
    },
    "type": "Opaque",
    "data": {
      "AUDIT_PASSWORD": "cGFzc3dvcmQ="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "postgresql-secrets"
    },
    "type": "Opaque",
    "data": {
      "admin_user.conf": "Cgpwb3N0Z3Jlc3FsLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWw6KjoqOnBvc3RncmVzOnBhc3N3b3JkCg=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "postgresql-etc"
    },
    "data": {
      "postgresql.conf": "archive_command = 'test ! -f /var/lib/archive/%f && gzip < %p > /var/lib/archive/%f'\narchive_mode = 'on'\ncluster_name = 'postgresql'\ndatestyle = 'iso, mdy'\nexternal_pid_file = '/tmp/postgres.pid'\nfsync = 'on'\nhba_file = '/tmp/pg_hba.conf'\nident_file = '/tmp/pg_ident.conf'\nlisten_addresses = '0.0.0.0'\nlog_checkpoints = 'on'\nlog_connections = 'on'\nlog_disconnections = 'on'\nlog_line_prefix = 'postgresql: %t [%p]: [%l-1] %c %x %d %u %a %h %m '\nlog_lock_waits = 'on'\nlog_temp_files = '0'\nlog_timezone = 'UTC'\nmax_connections = '1000'\nmax_locks_per_transaction = '64'\nmax_prepared_transactions = '0'\nmax_wal_senders = '16'\nmax_worker_processes = '10'\nport = '5432'\nshared_buffers = '2GB'\nssl = 'off'\nssl_ca_file = '/server_certs/ca.crt'\nssl_cert_file = '/server_certs/tls.crt'\nssl_ciphers = 'TLSv1.2:!aNULL'\nssl_key_file = '/server_certs/tls.key'\ntcp_keepalives_idle = '900'\ntcp_keepalives_interval = '100'\ntimezone = 'UTC'\ntrack_commit_timestamp = 'on'\ntrack_functions = 'all'\nwal_keep_segments = '16'\nwal_level = 'hot_standby'\nwal_log_hints = 'on'\n",
      "pg_hba.conf": "host all all 127.0.0.1/32 trust\nhost all all 0.0.0.0/0 md5\nlocal all all trust\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "postgresql",
      "namespace": "IRKjzcKAJunNT"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "create",
          "get",
          "list",
          "patch",
          "update",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "endpoints"
        ],
        "verbs": [
          "get",
          "patch",
          "update",
          "create",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "get",
          "list",
          "patch",
          "update",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services"
        ],
        "verbs": [
          "create",
          "get",
          "list",
          "patch",
          "update",
          "watch",
          "delete"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "postgresql",
      "namespace": "IRKjzcKAJunNT"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "postgresql"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "postgresql",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "postgresql"
    },
    "spec": {
      "ports": [
        {
          "name": "db",
          "port": 5432
        }
      ],
      "selector": {
        "release_group": "release-name",
        "application": "postgresql",
        "component": "server"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "postgresql-restapi"
    },
    "spec": {
      "ports": [
        {
          "name": "restapi",
          "port": 8008
        }
      ],
      "selector": {
        "release_group": "release-name",
        "application": "postgresql",
        "component": "server"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "postgresql",
      "annotations": {
        "openstackhelm.openstack.org/release_uuid": ""
      },
      "labels": {
        "release_group": "release-name",
        "application": "postgresql",
        "component": "server",
        "cluster-name": "postgresql"
      }
    },
    "spec": {
      "serviceName": "postgresql",
      "podManagementPolicy": "Parallel",
      "updateStrategy": {
        "type": "OnDelete"
      },
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "postgresql",
          "component": "server",
          "cluster-name": "postgresql"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "postgresql",
            "component": "server",
            "cluster-name": "postgresql"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "b3cb02d16604c09d0d1fbcfcf064410a47c062814e6ccc02579df372543ed727",
            "configmap-etc-hash": "633f235e75521afa6f12adbea1d5b0be68451bbf38c4a9e0ca252c8b826df01e",
            "configmap-admin-hash": "470242a1fecc4027f63e805f96a63fa51f2c4e6828aa7f5155ddf5dfe92ef9c4",
            "configmap-secrets-etc-hash": "53ddc11ab0e31b9e6864866bb7d16846ed5a21d997156f925988237f481f6ca3"
          }
        },
        "spec": {
          "serviceAccountName": "postgresql",
          "securityContext": {
            "allowPrivilegeEscalation": false,
            "fsGroup": 999,
            "readOnlyRootFilesystem": true,
            "runAsUser": 999
          },
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "release_group",
                          "operator": "In",
                          "values": [
                            "release-name"
                          ]
                        },
                        {
                          "key": "application",
                          "operator": "In",
                          "values": [
                            "postgresql"
                          ]
                        },
                        {
                          "key": "component",
                          "operator": "In",
                          "values": [
                            "server"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 10
                }
              ]
            }
          },
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "terminationGracePeriodSeconds": 180,
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            },
            {
              "name": "set-volume-perms",
              "image": "docker.io/postgres:9.6",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/sh",
                "-c"
              ],
              "args": [
                "set -xe; /bin/chown 999 /var/lib/postgresql; /bin/chmod 700 /var/lib/postgresql; /bin/chmod 700 /var/lib/postgresql/*;"
              ],
              "securityContext": {
                "readOnlyRootFilesystem": true,
                "runAsUser": 11739,
                "allowPrivilegeEscalation": false
              },
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "postgresql-data",
                  "mountPath": "/var/lib/postgresql",
                  "subPath": "."
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "postgresql",
              "image": "docker.io/postgres:9.6",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "ports": [
                {
                  "containerPort": 8008,
                  "protocol": "TCP"
                },
                {
                  "containerPort": 5432,
                  "protocol": "TCP"
                }
              ],
              "env": [
                {
                  "name": "PGDATA",
                  "value": "/var/lib/postgresql/pgdata"
                },
                {
                  "name": "ARCHIVE_LIMIT",
                  "value": "60"
                },
                {
                  "name": "ARCHIVE_PATH",
                  "value": "/var/lib/archive"
                },
                {
                  "name": "KUBERNETES_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgresql-admin",
                      "key": "POSTGRES_PASSWORD"
                    }
                  }
                },
                {
                  "name": "POSTGRES_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "postgresql-admin",
                      "key": "POSTGRES_USER"
                    }
                  }
                }
              ],
              "command": [
                "/tmp/start.sh"
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/tmp/readiness.sh"
                  ]
                },
                "failureThreshold": 10,
                "initialDelaySeconds": 30,
                "timeoutSeconds": 5
              },
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "bash",
                      "-c",
                      "kill -INT 1"
                    ]
                  }
                }
              },
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "pg-run",
                  "mountPath": "/var/run/postgresql"
                },
                {
                  "name": "postgresql-bin",
                  "mountPath": "/tmp/start.sh",
                  "subPath": "start.sh",
                  "readOnly": true
                },
                {
                  "name": "postgresql-bin",
                  "mountPath": "/tmp/readiness.sh",
                  "subPath": "readiness.sh",
                  "readOnly": true
                },
                {
                  "name": "postgresql-etc",
                  "mountPath": "/tmp/pg_hba.conf",
                  "subPath": "pg_hba.conf",
                  "readOnly": true
                },
                {
                  "name": "postgresql-etc",
                  "mountPath": "/tmp/postgresql.conf",
                  "subPath": "postgresql.conf",
                  "readOnly": true
                },
                {
                  "name": "postgresql-data",
                  "mountPath": "/var/lib/postgresql",
                  "subPath": "."
                },
                {
                  "name": "postgresql-archive",
                  "mountPath": "/var/lib/archive",
                  "subPath": "."
                },
                {
                  "name": "postgresql-bin",
                  "mountPath": "/tmp/archive_cleanup.sh",
                  "subPath": "archive_cleanup.sh",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "postgres-home-config",
              "emptyDir": {}
            },
            {
              "name": "pg-run",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "postgresql-bin",
              "secret": {
                "secretName": "postgresql-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "postgresql-etc",
              "configMap": {
                "name": "postgresql-etc",
                "defaultMode": 292
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "postgresql-data",
            "annotations": {
              "volume.beta.kubernetes.io/storage-class": "general"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "5Gi"
              }
            }
          }
        },
        {
          "metadata": {
            "name": "postgresql-archive",
            "annotations": {
              "volume.beta.kubernetes.io/storage-class": "general"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "5Gi"
              }
            }
          }
        }
      ]
    }
  }
]