apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-alertmanager
  namespace: L6xCrqrzJf
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-alertmanager-etc
data:
  config.yml: Z2xvYmFsOgogICMgVGhlIHNtYXJ0aG9zdCBhbmQgU01UUCBzZW5kZXIgdXNlZCBmb3IgbWFpbCBub3RpZmljYXRpb25zLgogIHNtdHBfc21hcnRob3N0OiAnbG9jYWxob3N0OjI1JwogIHNtdHBfZnJvbTogJ2FsZXJ0bWFuYWdlckBleGFtcGxlLm9yZycKICBzbXRwX2F1dGhfdXNlcm5hbWU6ICdhbGVydG1hbmFnZXInCiAgc210cF9hdXRoX3Bhc3N3b3JkOiAncGFzc3dvcmQnCiAgIyBUaGUgYXV0aCB0b2tlbiBmb3IgSGlwY2hhdC4KICBoaXBjaGF0X2F1dGhfdG9rZW46ICcxMjM0NTU2Nzg5JwogICMgQWx0ZXJuYXRpdmUgaG9zdCBmb3IgSGlwY2hhdC4KICBoaXBjaGF0X2FwaV91cmw6ICdodHRwczovL2hpcGNoYXQuZm9vYmFyLm9yZy8nCiMgVGhlIGRpcmVjdG9yeSBmcm9tIHdoaWNoIG5vdGlmaWNhdGlvbiB0ZW1wbGF0ZXMgYXJlIHJlYWQuCnRlbXBsYXRlczoKICAtICcvZXRjL2FsZXJ0bWFuYWdlci90ZW1wbGF0ZS8qLnRtcGwnCiMgVGhlIHJvb3Qgcm91dGUgb24gd2hpY2ggZWFjaCBpbmNvbWluZyBhbGVydCBlbnRlcnMuCnJvdXRlOgogICMgVGhlIGxhYmVscyBieSB3aGljaCBpbmNvbWluZyBhbGVydHMgYXJlIGdyb3VwZWQgdG9nZXRoZXIuIEZvciBleGFtcGxlLAogICMgbXVsdGlwbGUgYWxlcnRzIGNvbWluZyBpbiBmb3IgY2x1c3Rlcj1BIGFuZCBhbGVydG5hbWU9TGF0ZW5jeUhpZ2ggd291bGQKICAjIGJlIGJhdGNoZWQgaW50byBhIHNpbmdsZSBncm91cC4KICBncm91cF9ieToKICAgIC0gYWxlcnRuYW1lCiAgICAtIGNsdXN0ZXIKICAgIC0gc2VydmljZQogICMgV2hlbiBhIG5ldyBncm91cCBvZiBhbGVydHMgaXMgY3JlYXRlZCBieSBhbiBpbmNvbWluZyBhbGVydCwgd2FpdCBhdAogICMgbGVhc3QgJ2dyb3VwX3dhaXQnIHRvIHNlbmQgdGhlIGluaXRpYWwgbm90aWZpY2F0aW9uLgogICMgVGhpcyB3YXkgZW5zdXJlcyB0aGF0IHlvdSBnZXQgbXVsdGlwbGUgYWxlcnRzIGZvciB0aGUgc2FtZSBncm91cCB0aGF0IHN0YXJ0CiAgIyBmaXJpbmcgc2hvcnRseSBhZnRlciBhbm90aGVyIGFyZSBiYXRjaGVkIHRvZ2V0aGVyIG9uIHRoZSBmaXJzdAogICMgbm90aWZpY2F0aW9uLgogIGdyb3VwX3dhaXQ6IDMwcwogICMgV2hlbiB0aGUgZmlyc3Qgbm90aWZpY2F0aW9uIHdhcyBzZW50LCB3YWl0ICdncm91cF9pbnRlcnZhbCcgdG8gc2VuZCBhIGJhdGNoCiAgIyBvZiBuZXcgYWxlcnRzIHRoYXQgc3RhcnRlZCBmaXJpbmcgZm9yIHRoYXQgZ3JvdXAuCiAgZ3JvdXBfaW50ZXJ2YWw6IDVtCiAgIyBJZiBhbiBhbGVydCBoYXMgc3VjY2Vzc2Z1bGx5IGJlZW4gc2VudCwgd2FpdCAncmVwZWF0X2ludGVydmFsJyB0bwogICMgcmVzZW5kIHRoZW0uCiAgcmVwZWF0X2ludGVydmFsOiAzaAogICMgQSBkZWZhdWx0IHJlY2VpdmVyCiAgIyByZWNlaXZlcjogdGVhbS1YLW1haWxzCiAgcmVjZWl2ZXI6ICd0ZWFtLVgtbWFpbHMnCiAgIyBBbGwgdGhlIGFib3ZlIGF0dHJpYnV0ZXMgYXJlIGluaGVyaXRlZCBieSBhbGwgY2hpbGQgcm91dGVzIGFuZCBjYW4KICAjIG92ZXJ3cml0dGVuIG9uIGVhY2guCiAgIyBUaGUgY2hpbGQgcm91dGUgdHJlZXMuCiAgcm91dGVzOgogICAgIyBUaGlzIHJvdXRlcyBwZXJmb3JtcyBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBtYXRjaCBvbiBhbGVydAogICAgIyBsYWJlbHMgdG8gY2F0Y2ggYWxlcnRzIHRoYXQgYXJlIHJlbGF0ZWQgdG8gYSBsaXN0IG9mCiAgICAjIHNlcnZpY2VzLgogICAgLSByZWNlaXZlcjogJ3RlYW0tWC1tYWlscycKICAgICAgY29udGludWU6IHRydWUKICAgIC0gbWF0Y2hfcmU6CiAgICAgICAgc2VydmljZTogXihmb28xfGZvbzJ8YmF6KSQKICAgICAgcmVjZWl2ZXI6IHRlYW0tWC1tYWlscwogICAgICAjIFRoZSBzZXJ2aWNlIGhhcyBhIHN1Yi1yb3V0ZSBmb3IgY3JpdGljYWwgYWxlcnRzLCBhbnkgYWxlcnRzCiAgICAgICMgdGhhdCBkbyBub3QgbWF0Y2gsIGkuZS4gc2V2ZXJpdHkgIT0gY3JpdGljYWwsIGZhbGwtYmFjayB0byB0aGUKICAgICAgIyBwYXJlbnQgbm9kZSBhbmQgYXJlIHNlbnQgdG8gJ3RlYW0tWC1tYWlscycKICAgICAgcm91dGVzOgogICAgICAgIC0gbWF0Y2g6CiAgICAgICAgICAgIHNldmVyaXR5OiBjcml0aWNhbAogICAgICAgICAgcmVjZWl2ZXI6IHRlYW0tWC1wYWdlcgogICAgLSBtYXRjaDoKICAgICAgICBzZXJ2aWNlOiBmaWxlcwogICAgICByZWNlaXZlcjogdGVhbS1ZLW1haWxzCiAgICAgIHJvdXRlczoKICAgICAgICAtIG1hdGNoOgogICAgICAgICAgICBzZXZlcml0eTogY3JpdGljYWwKICAgICAgICAgIHJlY2VpdmVyOiB0ZWFtLVktcGFnZXIKICAgICMgVGhpcyByb3V0ZSBoYW5kbGVzIGFsbCBhbGVydHMgY29taW5nIGZyb20gYSBkYXRhYmFzZSBzZXJ2aWNlLiBJZiB0aGVyZSdzCiAgICAjIG5vIHRlYW0gdG8gaGFuZGxlIGl0LCBpdCBkZWZhdWx0cyB0byB0aGUgREIgdGVhbS4KICAgIC0gbWF0Y2g6CiAgICAgICAgc2VydmljZTogZGF0YWJhc2UKICAgICAgcmVjZWl2ZXI6IHRlYW0tREItcGFnZXIKICAgICAgIyBBbHNvIGdyb3VwIGFsZXJ0cyBieSBhZmZlY3RlZCBkYXRhYmFzZS4KICAgICAgZ3JvdXBfYnk6CiAgICAgICAgLSBhbGVydG5hbWUKICAgICAgICAtIGNsdXN0ZXIKICAgICAgICAtIGRhdGFiYXNlCiAgICAgIHJvdXRlczoKICAgICAgICAtIG1hdGNoOgogICAgICAgICAgICBvd25lcjogdGVhbS1YCiAgICAgICAgICByZWNlaXZlcjogdGVhbS1YLXBhZ2VyCiAgICAgICAgLSBtYXRjaDoKICAgICAgICAgICAgb3duZXI6IHRlYW0tWQogICAgICAgICAgcmVjZWl2ZXI6IHRlYW0tWS1wYWdlcgojIEluaGliaXRpb24gcnVsZXMgYWxsb3cgdG8gbXV0ZSBhIHNldCBvZiBhbGVydHMgZ2l2ZW4gdGhhdCBhbm90aGVyIGFsZXJ0IGlzCiMgZmlyaW5nLgojIFdlIHVzZSB0aGlzIHRvIG11dGUgYW55IHdhcm5pbmctbGV2ZWwgbm90aWZpY2F0aW9ucyBpZiB0aGUgc2FtZSBhbGVydCBpcwojIGFscmVhZHkgY3JpdGljYWwuCmluaGliaXRfcnVsZXM6CiAgLSBzb3VyY2VfbWF0Y2g6CiAgICAgIHNldmVyaXR5OiAnY3JpdGljYWwnCiAgICB0YXJnZXRfbWF0Y2g6CiAgICAgIHNldmVyaXR5OiAnd2FybmluZycKICAgICMgQXBwbHkgaW5oaWJpdGlvbiBpZiB0aGUgYWxlcnRuYW1lIGlzIHRoZSBzYW1lLgogICAgZXF1YWw6CiAgICAgIC0gYWxlcnRuYW1lCiAgICAgIC0gY2x1c3RlcgogICAgICAtIHNlcnZpY2UKcmVjZWl2ZXJzOgogIC0gbmFtZTogJ3RlYW0tWC1tYWlscycKICAgIGVtYWlsX2NvbmZpZ3M6CiAgICAgIC0gdG86ICd0ZWFtLVgrYWxlcnRzQGV4YW1wbGUub3JnJwogIC0gbmFtZTogJ3RlYW0tWC1wYWdlcicKICAgIGVtYWlsX2NvbmZpZ3M6CiAgICAgIC0gdG86ICd0ZWFtLVgrYWxlcnRzLWNyaXRpY2FsQGV4YW1wbGUub3JnJwogICAgcGFnZXJkdXR5X2NvbmZpZ3M6CiAgICAgIC0gc2VydmljZV9rZXk6IDx0ZWFtLVgta2V5PgogIC0gbmFtZTogJ3RlYW0tWS1tYWlscycKICAgIGVtYWlsX2NvbmZpZ3M6CiAgICAgIC0gdG86ICd0ZWFtLVkrYWxlcnRzQGV4YW1wbGUub3JnJwogIC0gbmFtZTogJ3RlYW0tWS1wYWdlcicKICAgIHBhZ2VyZHV0eV9jb25maWdzOgogICAgICAtIHNlcnZpY2Vfa2V5OiA8dGVhbS1ZLWtleT4KICAtIG5hbWU6ICd0ZWFtLURCLXBhZ2VyJwogICAgcGFnZXJkdXR5X2NvbmZpZ3M6CiAgICAgIC0gc2VydmljZV9rZXk6IDx0ZWFtLURCLWtleT4KICAtIG5hbWU6ICd0ZWFtLVgtaGlwY2hhdCcKICAgIGhpcGNoYXRfY29uZmlnczoKICAgICAgLSBhdXRoX3Rva2VuOiA8YXV0aF90b2tlbj4KICAgICAgICByb29tX2lkOiA4NQogICAgICAgIG1lc3NhZ2VfZm9ybWF0OiBodG1sCiAgICAgICAgbm90aWZ5OiBmYWxzZQ==
  httpd.conf: U2VydmVyUm9vdCAiL3Vzci9sb2NhbC9hcGFjaGUyIgoKTGlzdGVuIDgwCgpMb2FkTW9kdWxlIG1wbV9ldmVudF9tb2R1bGUgbW9kdWxlcy9tb2RfbXBtX2V2ZW50LnNvCkxvYWRNb2R1bGUgYXV0aG5fZmlsZV9tb2R1bGUgbW9kdWxlcy9tb2RfYXV0aG5fZmlsZS5zbwpMb2FkTW9kdWxlIGF1dGhuX2NvcmVfbW9kdWxlIG1vZHVsZXMvbW9kX2F1dGhuX2NvcmUuc28KTG9hZE1vZHVsZSBhdXRoel9ob3N0X21vZHVsZSBtb2R1bGVzL21vZF9hdXRoel9ob3N0LnNvCkxvYWRNb2R1bGUgYXV0aHpfZ3JvdXBmaWxlX21vZHVsZSBtb2R1bGVzL21vZF9hdXRoel9ncm91cGZpbGUuc28KTG9hZE1vZHVsZSBhdXRoel91c2VyX21vZHVsZSBtb2R1bGVzL21vZF9hdXRoel91c2VyLnNvCkxvYWRNb2R1bGUgYXV0aHpfY29yZV9tb2R1bGUgbW9kdWxlcy9tb2RfYXV0aHpfY29yZS5zbwpMb2FkTW9kdWxlIGFjY2Vzc19jb21wYXRfbW9kdWxlIG1vZHVsZXMvbW9kX2FjY2Vzc19jb21wYXQuc28KTG9hZE1vZHVsZSBhdXRoX2Jhc2ljX21vZHVsZSBtb2R1bGVzL21vZF9hdXRoX2Jhc2ljLnNvCkxvYWRNb2R1bGUgbGRhcF9tb2R1bGUgbW9kdWxlcy9tb2RfbGRhcC5zbwpMb2FkTW9kdWxlIGF1dGhuel9sZGFwX21vZHVsZSBtb2R1bGVzL21vZF9hdXRobnpfbGRhcC5zbwpMb2FkTW9kdWxlIHJlcXRpbWVvdXRfbW9kdWxlIG1vZHVsZXMvbW9kX3JlcXRpbWVvdXQuc28KTG9hZE1vZHVsZSBmaWx0ZXJfbW9kdWxlIG1vZHVsZXMvbW9kX2ZpbHRlci5zbwpMb2FkTW9kdWxlIHByb3h5X2h0bWxfbW9kdWxlIG1vZHVsZXMvbW9kX3Byb3h5X2h0bWwuc28KTG9hZE1vZHVsZSBsb2dfY29uZmlnX21vZHVsZSBtb2R1bGVzL21vZF9sb2dfY29uZmlnLnNvCkxvYWRNb2R1bGUgZW52X21vZHVsZSBtb2R1bGVzL21vZF9lbnYuc28KTG9hZE1vZHVsZSBoZWFkZXJzX21vZHVsZSBtb2R1bGVzL21vZF9oZWFkZXJzLnNvCkxvYWRNb2R1bGUgc2V0ZW52aWZfbW9kdWxlIG1vZHVsZXMvbW9kX3NldGVudmlmLnNvCkxvYWRNb2R1bGUgdmVyc2lvbl9tb2R1bGUgbW9kdWxlcy9tb2RfdmVyc2lvbi5zbwpMb2FkTW9kdWxlIHByb3h5X21vZHVsZSBtb2R1bGVzL21vZF9wcm94eS5zbwpMb2FkTW9kdWxlIHByb3h5X2Nvbm5lY3RfbW9kdWxlIG1vZHVsZXMvbW9kX3Byb3h5X2Nvbm5lY3Quc28KTG9hZE1vZHVsZSBwcm94eV9odHRwX21vZHVsZSBtb2R1bGVzL21vZF9wcm94eV9odHRwLnNvCkxvYWRNb2R1bGUgcHJveHlfYmFsYW5jZXJfbW9kdWxlIG1vZHVsZXMvbW9kX3Byb3h5X2JhbGFuY2VyLnNvCkxvYWRNb2R1bGUgcmVtb3RlaXBfbW9kdWxlIG1vZHVsZXMvbW9kX3JlbW90ZWlwLnNvCkxvYWRNb2R1bGUgc2xvdG1lbV9zaG1fbW9kdWxlIG1vZHVsZXMvbW9kX3Nsb3RtZW1fc2htLnNvCkxvYWRNb2R1bGUgc2xvdG1lbV9wbGFpbl9tb2R1bGUgbW9kdWxlcy9tb2Rfc2xvdG1lbV9wbGFpbi5zbwpMb2FkTW9kdWxlIHVuaXhkX21vZHVsZSBtb2R1bGVzL21vZF91bml4ZC5zbwpMb2FkTW9kdWxlIHN0YXR1c19tb2R1bGUgbW9kdWxlcy9tb2Rfc3RhdHVzLnNvCkxvYWRNb2R1bGUgYXV0b2luZGV4X21vZHVsZSBtb2R1bGVzL21vZF9hdXRvaW5kZXguc28KCjxJZk1vZHVsZSB1bml4ZF9tb2R1bGU+ClVzZXIgZGFlbW9uCkdyb3VwIGRhZW1vbgo8L0lmTW9kdWxlPgoKPERpcmVjdG9yeSAvPgogICAgQWxsb3dPdmVycmlkZSBub25lCiAgICBSZXF1aXJlIGFsbCBkZW5pZWQKPC9EaXJlY3Rvcnk+Cgo8RmlsZXMgIi5odCoiPgogICAgUmVxdWlyZSBhbGwgZGVuaWVkCjwvRmlsZXM+CgpFcnJvckxvZyAvZGV2L3N0ZGVycgoKTG9nTGV2ZWwgd2FybgoKPElmTW9kdWxlIGxvZ19jb25maWdfbW9kdWxlPgogICAgTG9nRm9ybWF0ICIlYSAlbCAldSAldCBcIiVyXCIgJT5zICViIFwiJXtSZWZlcmVyfWlcIiBcIiV7VXNlci1BZ2VudH1pXCIiIGNvbWJpbmVkCiAgICBMb2dGb3JtYXQgIiV7WC1Gb3J3YXJkZWQtRm9yfWkgJWwgJXUgJXQgXCIlclwiICU+cyAlYiBcIiV7UmVmZXJlcn1pXCIgXCIle1VzZXItQWdlbnR9aVwiIiBwcm94eQogICAgTG9nRm9ybWF0ICIlaCAlbCAldSAldCBcIiVyXCIgJT5zICViIiBjb21tb24KCiAgICA8SWZNb2R1bGUgbG9naW9fbW9kdWxlPgogICAgICBMb2dGb3JtYXQgIiVhICVsICV1ICV0IFwiJXJcIiAlPnMgJWIgXCIle1JlZmVyZXJ9aVwiIFwiJXtVc2VyLUFnZW50fWlcIiAlSSAlTyIgY29tYmluZWRpbwogICAgPC9JZk1vZHVsZT4KCiAgICBTZXRFbnZJZiBYLUZvcndhcmRlZC1Gb3IgIl4uKlwuLipcLi4qXC4uKiIgZm9yd2FyZGVkCiAgICBDdXN0b21Mb2cgL2Rldi9zdGRvdXQgY29tbW9uCiAgICBDdXN0b21Mb2cgL2Rldi9zdGRvdXQgY29tYmluZWQKICAgIEN1c3RvbUxvZyAvZGV2L3N0ZG91dCBwcm94eSBlbnY9Zm9yd2FyZGVkCjwvSWZNb2R1bGU+Cgo8RGlyZWN0b3J5ICIvdXNyL2xvY2FsL2FwYWNoZTIvY2dpLWJpbiI+CiAgICBBbGxvd092ZXJyaWRlIE5vbmUKICAgIE9wdGlvbnMgTm9uZQogICAgUmVxdWlyZSBhbGwgZ3JhbnRlZAo8L0RpcmVjdG9yeT4KCjxJZk1vZHVsZSBoZWFkZXJzX21vZHVsZT4KICAgIFJlcXVlc3RIZWFkZXIgdW5zZXQgUHJveHkgZWFybHkKPC9JZk1vZHVsZT4KCjxJZk1vZHVsZSBwcm94eV9odG1sX21vZHVsZT4KSW5jbHVkZSBjb25mL2V4dHJhL3Byb3h5LWh0bWwuY29uZgo8L0lmTW9kdWxlPgoKPFZpcnR1YWxIb3N0ICo6ODA+CiAgUmVtb3RlSVBIZWFkZXIgWC1PcmlnaW5hbC1Gb3J3YXJkZWQtRm9yCiAgPExvY2F0aW9uIC8+CiAgICAgIFByb3h5UGFzcyBodHRwOi8vbG9jYWxob3N0OjkwOTMvCiAgICAgIFByb3h5UGFzc1JldmVyc2UgaHR0cDovL2xvY2FsaG9zdDo5MDkzLwogIDwvTG9jYXRpb24+CiAgPFByb3h5ICo+CiAgICAgIEF1dGhOYW1lICJBbGVydG1hbmFnZXIiCiAgICAgIEF1dGhUeXBlIEJhc2ljCiAgICAgIEF1dGhCYXNpY1Byb3ZpZGVyIGZpbGUgbGRhcAogICAgICBBdXRoVXNlckZpbGUgL3Vzci9sb2NhbC9hcGFjaGUyL2NvbmYvLmh0cGFzc3dkCiAgICAgIEF1dGhMREFQQmluZEROIGNuPWFkbWluLGRjPWNsdXN0ZXIsZGM9bG9jYWwKICAgICAgQXV0aExEQVBCaW5kUGFzc3dvcmQgcGFzc3dvcmQKICAgICAgQXV0aExEQVBVUkwgImxkYXA6Ly9sZGFwLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWw6Mzg5L291PVBlb3BsZSxkYz1jbHVzdGVyLGRjPWxvY2FsIgogICAgICBSZXF1aXJlIHZhbGlkLXVzZXIKICA8L1Byb3h5Pgo8L1ZpcnR1YWxIb3N0Pg==
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-admin-user
type: Opaque
data:
  ALERTMANAGER_USERNAME: YWRtaW4=
  ALERTMANAGER_PASSWORD: Y2hhbmdlbWU=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-alertmanager-bin
data:
  apache.sh: |
    #!/bin/bash



    set -exv

    COMMAND="${@:-start}"

    function start () {

      if [ -f /etc/apache2/envvars ]; then
         # Loading Apache2 ENV variables
         source /etc/httpd/apache2/envvars
      fi
      # Apache gets grumpy about PID files pre-existing
      rm -f /etc/httpd/logs/httpd.pid

      if [ -f /usr/local/apache2/conf/.htpasswd ]; then
        htpasswd -b /usr/local/apache2/conf/.htpasswd "$ALERTMANAGER_USERNAME" "$ALERTMANAGER_PASSWORD"
      else
        htpasswd -cb /usr/local/apache2/conf/.htpasswd "$ALERTMANAGER_USERNAME" "$ALERTMANAGER_PASSWORD"
      fi

      #Launch Apache on Foreground
      exec httpd -DFOREGROUND
    }

    function stop () {
      apachectl -k graceful-stop
    }

    $COMMAND
  alertmanager.sh: |
    #!/bin/sh



    set -ex
    COMMAND="${@:-start}"

    function start () {
      exec /bin/alertmanager \
        --config.file=/etc/alertmanager/config.yml \
        --cluster.listen-address=0.0.0.0:9094 \
        --storage.path=/var/lib/alertmanager/data \
        $(generate_peers)
    }

    function generate_peers () {
      final_pod_suffix=$(( 1-1 ))
      for pod_suffix in `seq 0 "$final_pod_suffix"`
      do
        echo --cluster.peer=prometheus-alertmanager-$pod_suffix.$DISCOVERY_SVC:$MESH_PORT
      done
    }

    function stop () {
      kill -TERM 1
    }

    $COMMAND
  image-repo-sync.sh: |
    #!/bin/sh
    set -ex

    IFS=','; for IMAGE in ${IMAGE_SYNC_LIST}; do
      docker pull ${IMAGE}
      docker tag ${IMAGE} ${LOCAL_REPO}/${IMAGE}
      docker push ${LOCAL_REPO}/${IMAGE}
    done
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: run-alertmanager
subjects:
  - kind: ServiceAccount
    name: prometheus-alertmanager
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-alertmanager-discovery
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: peer-mesh
      port: 9094
  selector:
    release_group: release-name
    application: prometheus-alertmanager
    component: server
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-alertmanager
spec:
  ports:
    - name: http
      port: 80
    - name: https
      port: 443
  selector:
    app: ingress-api
---
apiVersion: v1
kind: Service
metadata:
  name: alerts-engine
  annotations:
    prometheus.io/scrape: "true"
spec:
  ports:
    - name: http
      port: 80
  selector:
    release_group: release-name
    application: prometheus-alertmanager
    component: server
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus-alertmanager
  annotations:
    openstackhelm.openstack.org/release_uuid: ""
  labels:
    release_group: release-name
    application: prometheus-alertmanager
    component: server
spec:
  serviceName: prometheus-alertmanager-discovery
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      release_group: release-name
      application: prometheus-alertmanager
      component: server
  template:
    metadata:
      labels:
        release_group: release-name
        application: prometheus-alertmanager
        component: server
      annotations:
        openstackhelm.openstack.org/release_uuid: ""
        configmap-bin-hash: 9326d42e8358c6b24594db52f0be6c695bf1ddad8a9626bc5bb3a4fb22a9c0bb
        configmap-etc-hash: bb4e30af3376bf172c3f18cc3b274884473b68b36159938f7076fd3479e5ea5f
    spec:
      securityContext:
        runAsUser: 65534
      serviceAccountName: prometheus-alertmanager
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: release_group
                      operator: In
                      values:
                        - release-name
                    - key: application
                      operator: In
                      values:
                        - prometheus-alertmanager
                    - key: component
                      operator: In
                      values:
                        - server
                topologyKey: kubernetes.io/hostname
              weight: 10
      nodeSelector:
        openstack-control-plane: enabled
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: init
          image: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 65534
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INTERFACE_NAME
              value: eth0
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: DEPENDENCY_SERVICE
              value: ""
            - name: DEPENDENCY_DAEMONSET
              value: ""
            - name: DEPENDENCY_CONTAINER
              value: ""
            - name: DEPENDENCY_POD_JSON
              value: ""
            - name: DEPENDENCY_CUSTOM_RESOURCE
              value: ""
          command:
            - kubernetes-entrypoint
          volumeMounts: []
        - name: prometheus-alertmanager-perms
          image: docker.io/prom/alertmanager:v0.20.0
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 0
          command:
            - chown
            - -R
            - 'nobody:'
            - /var/lib/alertmanager/data
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: alertmanager-data
              mountPath: /var/lib/alertmanager/data
      containers:
        - name: apache-proxy
          image: docker.io/httpd:2.4
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 11657
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
          command:
            - /tmp/apache.sh
            - start
          ports:
            - name: http
              containerPort: 80
          env:
            - name: ALERTMANAGER_PORT
              value: "9093"
            - name: ALERTMANAGER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-admin-user
                  key: ALERTMANAGER_USERNAME
            - name: ALERTMANAGER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-admin-user
                  key: ALERTMANAGER_PASSWORD
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: alertmanager-bin
              mountPath: /tmp/apache.sh
              subPath: apache.sh
              readOnly: true
            - name: alertmanager-etc
              mountPath: /usr/local/apache2/conf/httpd.conf
              subPath: httpd.conf
              readOnly: true
        - name: prometheus-alertmanager
          image: docker.io/prom/alertmanager:v0.20.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          command:
            - /tmp/alertmanager.sh
            - start
          lifecycle:
            preStop:
              exec:
                command:
                  - /tmp/alertmanager.sh
                  - stop
          env:
            - name: DISCOVERY_SVC
              value: prometheus-alertmanager-discovery.default.svc.cluster.local
            - name: MESH_PORT
              value: "9094"
          ports:
            - name: alerts-api
              containerPort: 9093
            - name: peer-mesh
              containerPort: 9094
          readinessProbe:
            httpGet:
              path: /#/status
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: etc-alertmanager
              mountPath: /etc/config
            - name: alertmanager-etc
              mountPath: /etc/alertmanager/config.yml
              subPath: config.yml
              readOnly: true
            - name: alertmanager-bin
              mountPath: /tmp/alertmanager.sh
              subPath: alertmanager.sh
              readOnly: true
            - name: alertmanager-data
              mountPath: /var/lib/alertmanager/data
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: etc-alertmanager
          emptyDir: {}
        - name: alertmanager-etc
          secret:
            secretName: release-name-alertmanager-etc
            defaultMode: 292
        - name: alertmanager-bin
          configMap:
            name: release-name-alertmanager-bin
            defaultMode: 365
  volumeClaimTemplates:
    - metadata:
        name: alertmanager-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        storageClassName: general
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: prometheus-alertmanager
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: prometheus-alertmanager
      http:
        paths:
          - path: /
            backend:
              serviceName: alerts-engine
              servicePort: http
    - host: prometheus-alertmanager.default
      http:
        paths:
          - path: /
            backend:
              serviceName: alerts-engine
              servicePort: http
    - host: prometheus-alertmanager.default.svc.cluster.local
      http:
        paths:
          - path: /
            backend:
              serviceName: alerts-engine
              servicePort: http
