apiVersion: v1
kind: Secret
metadata:
  name: release-name-mariadb
  namespace: 957J179vj8JR2P3
  labels:
    app: mariadb
    chart: mariadb-7.6.1
    release: release-name
    heritage: Helm
type: Opaque
data:
  mariadb-root-password: UTRBOXQyN3l5Tg==
  mariadb-password: cG93ZXJkbnM=
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-powerdns
  labels:
    app: powerdns
type: Opaque
data:
  api-key: UG93ZXJETlNBUEk=
  db-user: cG93ZXJkbnM=
  db-password: cG93ZXJkbnM=
  db-name: cG93ZXJkbnM=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mariadb
  namespace: 957J179vj8JR2P3
  labels:
    app: mariadb
    component: master
    chart: mariadb-7.6.1
    release: release-name
    heritage: Helm
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci

    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin

    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-powerdns
  labels:
    app: powerdns
data:
  schema.sql: |
    CREATE TABLE domains (
      id                    INT AUTO_INCREMENT,
      name                  VARCHAR(255) NOT NULL,
      master                VARCHAR(128) DEFAULT NULL,
      last_check            INT DEFAULT NULL,
      type                  VARCHAR(6) NOT NULL,
      notified_serial       INT UNSIGNED DEFAULT NULL,
      account               VARCHAR(40) CHARACTER SET 'utf8' DEFAULT NULL,
      PRIMARY KEY (id)
    ) Engine=InnoDB CHARACTER SET 'latin1';

    CREATE UNIQUE INDEX name_index ON domains(name);


    CREATE TABLE records (
      id                    BIGINT AUTO_INCREMENT,
      domain_id             INT DEFAULT NULL,
      name                  VARCHAR(255) DEFAULT NULL,
      type                  VARCHAR(10) DEFAULT NULL,
      content               VARCHAR(64000) DEFAULT NULL,
      ttl                   INT DEFAULT NULL,
      prio                  INT DEFAULT NULL,
      change_date           INT DEFAULT NULL,
      disabled              TINYINT(1) DEFAULT 0,
      ordername             VARCHAR(255) BINARY DEFAULT NULL,
      auth                  TINYINT(1) DEFAULT 1,
      PRIMARY KEY (id)
    ) Engine=InnoDB CHARACTER SET 'latin1';

    CREATE INDEX nametype_index ON records(name,type);
    CREATE INDEX domain_id ON records(domain_id);
    CREATE INDEX ordername ON records (ordername);


    CREATE TABLE supermasters (
      ip                    VARCHAR(64) NOT NULL,
      nameserver            VARCHAR(255) NOT NULL,
      account               VARCHAR(40) CHARACTER SET 'utf8' NOT NULL,
      PRIMARY KEY (ip, nameserver)
    ) Engine=InnoDB CHARACTER SET 'latin1';


    CREATE TABLE comments (
      id                    INT AUTO_INCREMENT,
      domain_id             INT NOT NULL,
      name                  VARCHAR(255) NOT NULL,
      type                  VARCHAR(10) NOT NULL,
      modified_at           INT NOT NULL,
      account               VARCHAR(40) CHARACTER SET 'utf8' DEFAULT NULL,
      comment               TEXT CHARACTER SET 'utf8' NOT NULL,
      PRIMARY KEY (id)
    ) Engine=InnoDB CHARACTER SET 'latin1';

    CREATE INDEX comments_name_type_idx ON comments (name, type);
    CREATE INDEX comments_order_idx ON comments (domain_id, modified_at);


    CREATE TABLE domainmetadata (
      id                    INT AUTO_INCREMENT,
      domain_id             INT NOT NULL,
      kind                  VARCHAR(32),
      content               TEXT,
      PRIMARY KEY (id)
    ) Engine=InnoDB CHARACTER SET 'latin1';

    CREATE INDEX domainmetadata_idx ON domainmetadata (domain_id, kind);


    CREATE TABLE cryptokeys (
      id                    INT AUTO_INCREMENT,
      domain_id             INT NOT NULL,
      flags                 INT NOT NULL,
      active                BOOL,
      content               TEXT,
      PRIMARY KEY(id)
    ) Engine=InnoDB CHARACTER SET 'latin1';

    CREATE INDEX domainidindex ON cryptokeys(domain_id);


    CREATE TABLE tsigkeys (
      id                    INT AUTO_INCREMENT,
      name                  VARCHAR(255),
      algorithm             VARCHAR(50),
      secret                VARCHAR(255),
      PRIMARY KEY (id)
    ) Engine=InnoDB CHARACTER SET 'latin1';

    CREATE UNIQUE INDEX namealgoindex ON tsigkeys(name, algorithm);
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-mariadb
  namespace: 957J179vj8JR2P3
  labels:
    app: mariadb
    component: master
    chart: mariadb-7.6.1
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector:
    app: mariadb
    component: master
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-powerdns-api
  labels:
    app: powerdns
  annotations: null
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: 8081
      protocol: TCP
      name: api
  selector:
    app: powerdns
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-powerdns-dns-tcp
  labels:
    app: powerdns
  annotations: null
spec:
  type: ClusterIP
  ports:
    - port: 53
      targetPort: 53
      protocol: TCP
      name: dns-tcp
  selector:
    app: powerdns
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-powerdns-dns-udp
  labels:
    app: powerdns
  annotations: null
spec:
  type: ClusterIP
  ports:
    - port: 53
      targetPort: 53
      protocol: UDP
      name: dns-udp
  selector:
    app: powerdns
    release: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-powerdns
  labels:
    app: powerdns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: powerdns
      release: release-name
  template:
    metadata:
      labels:
        app: powerdns
        release: release-name
      annotations:
        checksum/secret: a126cd0c564a887870390d35491b377b717ee11e1bb220c413e09f9bb40b27f2
        checksum/config: ab0c78d1424a487f897c75d49e2fa3f3025ff3a5e750acd3685cb098d4d3fa81
    spec:
      containers:
        - name: powerdns
          image: psitrax/powerdns:4
          imagePullPolicy: IfNotPresent
          command:
            - /entrypoint.sh
          args:
            - --api=yes
            - --api-key=$(POWERDNS_API_KEY)
            - --webserver=yes
            - --webserver-port=8081
            - --webserver-address=0.0.0.0
            - --webserver-allow-from=0.0.0.0/0
            - --slave=yes
          env:
            - name: MYSQL_HOST
              value: release-name-mariadb
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-powerdns
                  key: db-user
            - name: MYSQL_PASS
              valueFrom:
                secretKeyRef:
                  name: release-name-powerdns
                  key: db-password
            - name: MYSQL_DB
              valueFrom:
                secretKeyRef:
                  name: release-name-powerdns
                  key: db-name
            - name: POWERDNS_API_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-powerdns
                  key: api-key
          ports:
            - name: dns-udp
              containerPort: 53
              protocol: UDP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: api
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: api
          readinessProbe:
            httpGet:
              path: /
              port: api
          volumeMounts:
            - name: config
              mountPath: /etc/pdns/schema.sql
              subPath: schema.sql
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config
          configMap:
            name: release-name-powerdns
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mariadb
  namespace: 957J179vj8JR2P3
  labels:
    app: mariadb
    chart: mariadb-7.6.1
    release: release-name
    heritage: Helm
    component: master
spec:
  selector:
    matchLabels:
      app: mariadb
      release: release-name
      component: master
  serviceName: release-name-mariadb
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mariadb
        chart: mariadb-7.6.1
        release: release-name
        component: master
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: mariadb
                    release: release-name
      initContainers: null
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.3.23-debian-10-r44
          imagePullPolicy: IfNotPresent
          env:
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: powerdns
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: powerdns
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]; then
                      password_aux=$(cat $MARIADB_ROOT_PASSWORD_FILE)
                  fi
                  mysqladmin status -uroot -p$password_aux
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]; then
                      password_aux=$(cat $MARIADB_ROOT_PASSWORD_FILE)
                  fi
                  mysqladmin status -uroot -p$password_aux
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: release-name-mariadb
        - name: data
          emptyDir: {}
