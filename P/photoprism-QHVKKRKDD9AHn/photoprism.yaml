apiVersion: v1
kind: Secret
metadata:
  name: release-name-mariadb-credentials
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 10.7.4
    helm-revision: "1"
    helm.sh/chart: mariadb-3.0.5
stringData:
  mariadb-password: testpass
  mariadb-root-password: testroot
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    helm.sh/chart: photoprism-10.0.1
    app.kubernetes.io/name: photoprism
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: "220528"
    app.kubernetes.io/managed-by: Helm
  name: mariadbcreds
data:
  mariadb-password: NDB6VW5ENkZ4enNkOVAxdXhVS0EyRzFVVkJoMFlNQnR3c1l1WmJaMlZHNkl5ZWxPRnQ=
  mariadb-root-password: MVlyMmNnVUZPejBGV05zZzRCNDlQbGFhTGloRTU0T0hnekt1czVSWXNPU01oall1ang=
  url: c3FsOi8vcGhvdG9wcmlzbTo0MHpVbkQ2Rnh6c2Q5UDF1eFVLQTJHMVVWQmgwWU1CdHdzWXVaYloyVkc2SXllbE9GdEByZWxlYXNlLW5hbWUtbWFyaWFkYjozMzA2L3Bob3RvcHJpc20=
  urlnossl: c3FsOi8vcGhvdG9wcmlzbTo0MHpVbkQ2Rnh6c2Q5UDF1eFVLQTJHMVVWQmgwWU1CdHdzWXVaYloyVkc2SXllbE9GdEByZWxlYXNlLW5hbWUtbWFyaWFkYjozMzA2L3Bob3RvcHJpc20/c3NsbW9kZT1kaXNhYmxl
  plainporthost: cmVsZWFzZS1uYW1lLW1hcmlhZGI6MzMwNg==
  plainhost: cmVsZWFzZS1uYW1lLW1hcmlhZGI=
  jdbc: amRiYzpzcWxzZXJ2ZXI6Ly9yZWxlYXNlLW5hbWUtbWFyaWFkYjozMzA2L3Bob3RvcHJpc20=
  jdbc-mysql: amRiYzpteXNxbDovL3JlbGVhc2UtbmFtZS1tYXJpYWRiOjMzMDYvcGhvdG9wcmlzbQ==
  jdbc-mariadb: amRiYzptYXJpYWRiOi8vcmVsZWFzZS1uYW1lLW1hcmlhZGI6MzMwNi9waG90b3ByaXNt
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-photoprism
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: photoprism
    app.kubernetes.io/version: "220528"
    helm-revision: "1"
    helm.sh/chart: photoprism-10.0.1
stringData:
  PHOTOPRISM_ADMIN_PASSWORD: please-change
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-photoprism-storage
  labels:
    helm.sh/chart: photoprism-10.0.1
    app.kubernetes.io/name: photoprism
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: "220528"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 999Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-mariadb
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 10.7.4
    helm-revision: "1"
    helm.sh/chart: mariadb-3.0.5
  annotations: null
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: main
  selector:
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-photoprism
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: photoprism
    app.kubernetes.io/version: "220528"
    helm-revision: "1"
    helm.sh/chart: photoprism-10.0.1
  annotations: null
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  ports:
    - port: 2342
      targetPort: 2342
      protocol: TCP
      name: main
  selector:
    app.kubernetes.io/name: photoprism
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-photoprism
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: photoprism
    app.kubernetes.io/version: "220528"
    helm-revision: "1"
    helm.sh/chart: photoprism-10.0.1
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: photoprism
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: photoprism
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 568
        runAsUser: 568
        supplementalGroups:
          - 568
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      enableServiceLinks: false
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: autopermissions
          image: ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583
          securityContext:
            runAsUser: 11063
            privileged: true
            allowPrivilegeEscalation: false
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          command:
            - /bin/sh
            - -c
            - |
              /bin/bash <<'EOF'
              echo "Automatically correcting permissions..."
              echo "increasing inotify limits..."
              ( sysctl -w fs.inotify.max_user_watches=524288 || echo "error setting inotify") && ( sysctl -w fs.inotify.max_user_instances=512 || echo "error setting inotify")
              EOF
          volumeMounts: null
        - name: mariadb-init
          image: ghcr.io/truecharts/mariadb:v10.7.4@sha256:dd2042a79c38b92ec14b4c55b97c615c1c5f437f4f5b3e796a8fa7aa1c0a0865
          env:
            - name: MARIADB_HOST
              valueFrom:
                secretKeyRef:
                  name: mariadbcreds
                  key: plainhost
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadbcreds
                  key: mariadb-root-password
          securityContext:
            capabilities:
              drop:
                - ALL
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          command:
            - bash
            - -ec
          args:
            - |
              until
                mysqladmin -uroot -h"${MARIADB_HOST}" -p"${MARIADB_ROOT_PASSWORD}" ping \
                && mysqladmin -uroot -h"${MARIADB_HOST}" -p"${MARIADB_ROOT_PASSWORD}" status;
                do sleep 2;
              done
          imagePullPolicy: IfNotPresent
      containers:
        - name: release-name-photoprism
          image: tccr.io/truecharts/photoprism:v220528@sha256:8a8376718c050a54895c8f8727f4739c5d7b3a3fee8770ea4bf75c6d1998a171
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: PUID
              value: "568"
            - name: USER_ID
              value: "568"
            - name: UID
              value: "568"
            - name: UMASK
              value: "2"
            - name: UMASK_SET
              value: "2"
            - name: PGID
              value: "568"
            - name: GROUP_ID
              value: "568"
            - name: GID
              value: "568"
            - name: S6_READ_ONLY_ROOT
              value: "1"
            - name: NVIDIA_VISIBLE_DEVICES
              value: void
            - name: TZ
              value: UTC
            - name: HOME
              value: /photoprism
            - name: PHOTOPRISM_CACHE_PATH
              value: /assets/cache
            - name: PHOTOPRISM_CONFIG_PATH
              value: /assets/config
            - name: PHOTOPRISM_DATABASE_DRIVER
              value: mysql
            - name: PHOTOPRISM_DATABASE_NAME
              value: photoprism
            - name: PHOTOPRISM_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mariadb-password
                  name: mariadbcreds
            - name: PHOTOPRISM_DATABASE_SERVER
              valueFrom:
                secretKeyRef:
                  key: plainporthost
                  name: mariadbcreds
            - name: PHOTOPRISM_DATABASE_USER
              value: photoprism
            - name: PHOTOPRISM_GID
              value: "568"
            - name: PHOTOPRISM_IMPORT_PATH
              value: /photoprism/import
            - name: PHOTOPRISM_ORIGINALS_PATH
              value: /photoprism/originals
            - name: PHOTOPRISM_PUBLIC
              value: "false"
            - name: PHOTOPRISM_SIDECAR_PATH
              value: /assets/sidecar
            - name: PHOTOPRISM_STORAGE_PATH
              value: /assets/storage
            - name: PHOTOPRISM_TEMP_PATH
              value: /photoprism/temp
            - name: PHOTOPRISM_UID
              value: "568"
            - name: PHOTOPRISM_UMASK
              value: ""
            - name: PROTOPRISM_BACKUP_PATH
              value: /assets/backup
          envFrom:
            - secretRef:
                name: release-name-photoprism
          ports:
            - name: main
              containerPort: 2342
              protocol: TCP
          volumeMounts:
            - mountPath: /shared
              name: shared
            - mountPath: /assets
              name: storage
            - mountPath: /photoprism/temp
              name: temp
            - mountPath: /var/logs
              name: varlogs
          livenessProbe:
            tcpSocket:
              port: 2342
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 2342
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 2342
            initialDelaySeconds: 10
            failureThreshold: 60
            timeoutSeconds: 2
            periodSeconds: 5
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: shared
          emptyDir: {}
        - name: storage
          persistentVolumeClaim:
            claimName: release-name-photoprism-storage
        - name: temp
          emptyDir:
            medium: Memory
        - name: varlogs
          emptyDir: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mariadb
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 10.7.4
    helm-revision: "1"
    helm.sh/chart: mariadb-3.0.5
spec:
  revisionHistoryLimit: 3
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: release-name
  serviceName: release-name-mariadb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mariadb
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 0
        runAsUser: 568
        supplementalGroups:
          - 568
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      enableServiceLinks: false
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: autopermissions
          image: ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583
          securityContext:
            runAsUser: 10596
            privileged: true
            allowPrivilegeEscalation: false
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          command:
            - /bin/sh
            - -c
            - |
              /bin/bash <<'EOF'
              echo "Automatically correcting permissions..."
              echo "increasing inotify limits..."
              ( sysctl -w fs.inotify.max_user_watches=524288 || echo "error setting inotify") && ( sysctl -w fs.inotify.max_user_instances=512 || echo "error setting inotify")
              EOF
          volumeMounts: null
      containers:
        - name: release-name-mariadb
          image: ghcr.io/truecharts/mariadb:v10.7.4@sha256:dd2042a79c38b92ec14b4c55b97c615c1c5f437f4f5b3e796a8fa7aa1c0a0865
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: PUID
              value: "568"
            - name: USER_ID
              value: "568"
            - name: UID
              value: "568"
            - name: UMASK
              value: "2"
            - name: UMASK_SET
              value: "2"
            - name: PGID
              value: "568"
            - name: GROUP_ID
              value: "568"
            - name: GID
              value: "568"
            - name: S6_READ_ONLY_ROOT
              value: "1"
            - name: NVIDIA_VISIBLE_DEVICES
              value: void
            - name: TZ
              value: UTC
            - name: MARIADB_DATABASE
              value: photoprism
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mariadb-password
                  name: mariadbcreds
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mariadb-root-password
                  name: mariadbcreds
            - name: MARIADB_USER
              value: photoprism
          envFrom: null
          ports:
            - name: main
              containerPort: 3306
              protocol: TCP
          volumeMounts:
            - mountPath: /shared
              name: shared
            - mountPath: /tmp
              name: temp
            - mountPath: /var/logs
              name: varlogs
            - mountPath: /bitnami/mariadb
              name: data
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - until /opt/bitnami/scripts/mariadb/healthcheck.sh; do sleep 2; done
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - until /opt/bitnami/scripts/mariadb/healthcheck.sh; do sleep 2; done
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          startupProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - until /opt/bitnami/scripts/mariadb/healthcheck.sh; do sleep 2; done
            failureThreshold: 60
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: shared
          emptyDir: {}
        - name: temp
          emptyDir:
            medium: Memory
        - name: varlogs
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 999Gi
