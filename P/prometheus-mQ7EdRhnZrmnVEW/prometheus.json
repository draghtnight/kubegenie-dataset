[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-2.8.14",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name"
      },
      "name": "release-name-kube-state-metrics",
      "namespace": "mQ7EdRhnZrmnVEW"
    },
    "imagePullSecrets": []
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "labels": {
        "component": "alertmanager",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-alertmanager",
      "namespace": "mQ7EdRhnZrmnVEW",
      "annotations": {}
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "labels": {
        "component": "node-exporter",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-node-exporter",
      "namespace": "mQ7EdRhnZrmnVEW",
      "annotations": {}
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "labels": {
        "component": "pushgateway",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-pushgateway",
      "namespace": "mQ7EdRhnZrmnVEW",
      "annotations": {}
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "labels": {
        "component": "server",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-server",
      "namespace": "mQ7EdRhnZrmnVEW",
      "annotations": {}
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "labels": {
        "component": "alertmanager",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-alertmanager",
      "namespace": "mQ7EdRhnZrmnVEW"
    },
    "data": {
      "alertmanager.yml": "global: {}\nreceivers:\n- name: default-receiver\nroute:\n  group_interval: 5m\n  group_wait: 10s\n  receiver: default-receiver\n  repeat_interval: 3h\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "labels": {
        "component": "server",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-server",
      "namespace": "mQ7EdRhnZrmnVEW"
    },
    "data": {
      "alerting_rules.yml": "{}\n",
      "alerts": "{}\n",
      "prometheus.yml": "global:\n  evaluation_interval: 1m\n  scrape_interval: 1m\n  scrape_timeout: 10s\nrule_files:\n- /etc/config/recording_rules.yml\n- /etc/config/alerting_rules.yml\n- /etc/config/rules\n- /etc/config/alerts\nscrape_configs:\n- job_name: prometheus\n  static_configs:\n  - targets:\n    - localhost:9090\n- bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  job_name: kubernetes-apiservers\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - action: keep\n    regex: default;kubernetes;https\n    source_labels:\n    - __meta_kubernetes_namespace\n    - __meta_kubernetes_service_name\n    - __meta_kubernetes_endpoint_port_name\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    insecure_skip_verify: true\n- bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  job_name: kubernetes-nodes\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - replacement: kubernetes.default.svc:443\n    target_label: __address__\n  - regex: (.+)\n    replacement: /api/v1/nodes/$1/proxy/metrics\n    source_labels:\n    - __meta_kubernetes_node_name\n    target_label: __metrics_path__\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    insecure_skip_verify: true\n- bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  job_name: kubernetes-nodes-cadvisor\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - replacement: kubernetes.default.svc:443\n    target_label: __address__\n  - regex: (.+)\n    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\n    source_labels:\n    - __meta_kubernetes_node_name\n    target_label: __metrics_path__\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    insecure_skip_verify: true\n- job_name: kubernetes-service-endpoints\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_scrape\n  - action: replace\n    regex: (https?)\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_scheme\n    target_label: __scheme__\n  - action: replace\n    regex: (.+)\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_path\n    target_label: __metrics_path__\n  - action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n    source_labels:\n    - __address__\n    - __meta_kubernetes_service_annotation_prometheus_io_port\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_namespace\n    target_label: kubernetes_namespace\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_service_name\n    target_label: kubernetes_name\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_pod_node_name\n    target_label: kubernetes_node\n- job_name: kubernetes-service-endpoints-slow\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow\n  - action: replace\n    regex: (https?)\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_scheme\n    target_label: __scheme__\n  - action: replace\n    regex: (.+)\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_path\n    target_label: __metrics_path__\n  - action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n    source_labels:\n    - __address__\n    - __meta_kubernetes_service_annotation_prometheus_io_port\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_namespace\n    target_label: kubernetes_namespace\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_service_name\n    target_label: kubernetes_name\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_pod_node_name\n    target_label: kubernetes_node\n  scrape_interval: 5m\n  scrape_timeout: 30s\n- honor_labels: true\n  job_name: prometheus-pushgateway\n  kubernetes_sd_configs:\n  - role: service\n  relabel_configs:\n  - action: keep\n    regex: pushgateway\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_probe\n- job_name: kubernetes-services\n  kubernetes_sd_configs:\n  - role: service\n  metrics_path: /probe\n  params:\n    module:\n    - http_2xx\n  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_probe\n  - source_labels:\n    - __address__\n    target_label: __param_target\n  - replacement: blackbox\n    target_label: __address__\n  - source_labels:\n    - __param_target\n    target_label: instance\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels:\n    - __meta_kubernetes_namespace\n    target_label: kubernetes_namespace\n  - source_labels:\n    - __meta_kubernetes_service_name\n    target_label: kubernetes_name\n- job_name: kubernetes-pods\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_scrape\n  - action: replace\n    regex: (.+)\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_path\n    target_label: __metrics_path__\n  - action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n    source_labels:\n    - __address__\n    - __meta_kubernetes_pod_annotation_prometheus_io_port\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_namespace\n    target_label: kubernetes_namespace\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_pod_name\n    target_label: kubernetes_pod_name\n  - action: drop\n    regex: Pending|Succeeded|Failed\n    source_labels:\n    - __meta_kubernetes_pod_phase\n- job_name: kubernetes-pods-slow\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow\n  - action: replace\n    regex: (.+)\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_path\n    target_label: __metrics_path__\n  - action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n    source_labels:\n    - __address__\n    - __meta_kubernetes_pod_annotation_prometheus_io_port\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_namespace\n    target_label: kubernetes_namespace\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_pod_name\n    target_label: kubernetes_pod_name\n  - action: drop\n    regex: Pending|Succeeded|Failed\n    source_labels:\n    - __meta_kubernetes_pod_phase\n  scrape_interval: 5m\n  scrape_timeout: 30s\nalerting:\n  alertmanagers:\n  - kubernetes_sd_configs:\n      - role: pod\n    tls_config:\n      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_namespace]\n      regex: default\n      action: keep\n    - source_labels: [__meta_kubernetes_pod_label_app]\n      regex: prometheus\n      action: keep\n    - source_labels: [__meta_kubernetes_pod_label_component]\n      regex: alertmanager\n      action: keep\n    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_probe]\n      regex: .*\n      action: keep\n    - source_labels: [__meta_kubernetes_pod_container_port_number]\n      regex: \"9093\"\n      action: keep\n",
      "recording_rules.yml": "{}\n",
      "rules": "{}\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "labels": {
        "component": "alertmanager",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-alertmanager",
      "namespace": "default"
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "2Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "labels": {
        "component": "server",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-server",
      "namespace": "default"
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "8Gi"
        }
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRole",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-2.8.14",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name"
      },
      "name": "release-name-kube-state-metrics"
    },
    "rules": [
      {
        "apiGroups": [
          "certificates.k8s.io"
        ],
        "resources": [
          "certificatesigningrequests"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "cronjobs"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "apps"
        ],
        "resources": [
          "daemonsets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "apps"
        ],
        "resources": [
          "deployments"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "endpoints"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "autoscaling"
        ],
        "resources": [
          "horizontalpodautoscalers"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "jobs"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "limitranges"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "admissionregistration.k8s.io"
        ],
        "resources": [
          "mutatingwebhookconfigurations"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "networkpolicies"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "persistentvolumeclaims"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "persistentvolumes"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "poddisruptionbudgets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "apps"
        ],
        "resources": [
          "replicasets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "replicationcontrollers"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "resourcequotas"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "statefulsets"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "storage.k8s.io"
        ],
        "resources": [
          "storageclasses"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "admissionregistration.k8s.io"
        ],
        "resources": [
          "validatingwebhookconfigurations"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "storage.k8s.io"
        ],
        "resources": [
          "volumeattachments"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "labels": {
        "component": "alertmanager",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-alertmanager"
    },
    "rules": []
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "labels": {
        "component": "pushgateway",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-pushgateway"
    },
    "rules": []
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "labels": {
        "component": "server",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-server"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes",
          "nodes/proxy",
          "nodes/metrics",
          "services",
          "endpoints",
          "pods",
          "ingresses",
          "configmaps"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses/status",
          "ingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "nonResourceURLs": [
          "/metrics"
        ],
        "verbs": [
          "get"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-2.8.14",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name"
      },
      "name": "release-name-kube-state-metrics"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-kube-state-metrics"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-kube-state-metrics",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "labels": {
        "component": "alertmanager",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-alertmanager"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-prometheus-alertmanager",
        "namespace": "default"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-prometheus-alertmanager"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "labels": {
        "component": "pushgateway",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-pushgateway"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-prometheus-pushgateway",
        "namespace": "default"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-prometheus-pushgateway"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "labels": {
        "component": "server",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-server"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-prometheus-server",
        "namespace": "default"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-prometheus-server"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-kube-state-metrics",
      "namespace": "mQ7EdRhnZrmnVEW",
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-2.8.14",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "prometheus.io/scrape": "true"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "http",
          "protocol": "TCP",
          "port": 8080,
          "targetPort": 8080
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "component": "alertmanager",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-alertmanager",
      "namespace": "mQ7EdRhnZrmnVEW"
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 80,
          "protocol": "TCP",
          "targetPort": 9093
        }
      ],
      "selector": {
        "component": "alertmanager",
        "app": "prometheus",
        "release": "release-name"
      },
      "sessionAffinity": "None",
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "annotations": {
        "prometheus.io/scrape": "true"
      },
      "labels": {
        "component": "node-exporter",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-node-exporter",
      "namespace": "mQ7EdRhnZrmnVEW"
    },
    "spec": {
      "clusterIP": "None",
      "ports": [
        {
          "name": "metrics",
          "port": 9100,
          "protocol": "TCP",
          "targetPort": 9100
        }
      ],
      "selector": {
        "component": "node-exporter",
        "app": "prometheus",
        "release": "release-name"
      },
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "annotations": {
        "prometheus.io/probe": "pushgateway"
      },
      "labels": {
        "component": "pushgateway",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-pushgateway",
      "namespace": "mQ7EdRhnZrmnVEW"
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 9091,
          "protocol": "TCP",
          "targetPort": 9091
        }
      ],
      "selector": {
        "component": "pushgateway",
        "app": "prometheus",
        "release": "release-name"
      },
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "component": "server",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-server",
      "namespace": "mQ7EdRhnZrmnVEW"
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 80,
          "protocol": "TCP",
          "targetPort": 9090
        }
      ],
      "selector": {
        "component": "server",
        "app": "prometheus",
        "release": "release-name"
      },
      "sessionAffinity": "None",
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "labels": {
        "component": "node-exporter",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-node-exporter",
      "namespace": "mQ7EdRhnZrmnVEW"
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "component": "node-exporter",
          "app": "prometheus",
          "release": "release-name"
        }
      },
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "component": "node-exporter",
            "app": "prometheus",
            "release": "release-name",
            "chart": "prometheus-13.0.0",
            "heritage": "Helm"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-prometheus-node-exporter",
          "containers": [
            {
              "name": "prometheus-node-exporter",
              "image": "quay.io/prometheus/node-exporter:v1.0.1",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--path.procfs=/host/proc",
                "--path.sysfs=/host/sys",
                "--path.rootfs=/host/root",
                "--web.listen-address=:9100"
              ],
              "ports": [
                {
                  "name": "metrics",
                  "containerPort": 9100,
                  "hostPort": 9100
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "proc",
                  "mountPath": "/host/proc",
                  "readOnly": true
                },
                {
                  "name": "sys",
                  "mountPath": "/host/sys",
                  "readOnly": true
                },
                {
                  "name": "root",
                  "mountPath": "/host/root",
                  "mountPropagation": "HostToContainer",
                  "readOnly": true
                }
              ]
            }
          ],
          "hostNetwork": true,
          "hostPID": true,
          "securityContext": {
            "fsGroup": 65534,
            "runAsGroup": 65534,
            "runAsNonRoot": true,
            "runAsUser": 65534
          },
          "volumes": [
            {
              "name": "proc",
              "hostPath": {
                "path": "/proc"
              }
            },
            {
              "name": "sys",
              "hostPath": {
                "path": "/sys"
              }
            },
            {
              "name": "root",
              "hostPath": {
                "path": "/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-kube-state-metrics",
      "namespace": "mQ7EdRhnZrmnVEW",
      "labels": {
        "app.kubernetes.io/name": "kube-state-metrics",
        "helm.sh/chart": "kube-state-metrics-2.8.14",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "kube-state-metrics"
        }
      },
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "kube-state-metrics",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "hostNetwork": false,
          "serviceAccountName": "release-name-kube-state-metrics",
          "securityContext": {
            "fsGroup": 65534,
            "runAsGroup": 65534,
            "runAsUser": 65534
          },
          "containers": [
            {
              "name": "kube-state-metrics",
              "args": [
                "--collectors=certificatesigningrequests",
                "--collectors=configmaps",
                "--collectors=cronjobs",
                "--collectors=daemonsets",
                "--collectors=deployments",
                "--collectors=endpoints",
                "--collectors=horizontalpodautoscalers",
                "--collectors=ingresses",
                "--collectors=jobs",
                "--collectors=limitranges",
                "--collectors=mutatingwebhookconfigurations",
                "--collectors=namespaces",
                "--collectors=networkpolicies",
                "--collectors=nodes",
                "--collectors=persistentvolumeclaims",
                "--collectors=persistentvolumes",
                "--collectors=poddisruptionbudgets",
                "--collectors=pods",
                "--collectors=replicasets",
                "--collectors=replicationcontrollers",
                "--collectors=resourcequotas",
                "--collectors=secrets",
                "--collectors=services",
                "--collectors=statefulsets",
                "--collectors=storageclasses",
                "--collectors=validatingwebhookconfigurations",
                "--collectors=volumeattachments"
              ],
              "imagePullPolicy": "IfNotPresent",
              "image": "quay.io/coreos/kube-state-metrics:v1.9.7",
              "ports": [
                {
                  "containerPort": 8080
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 8080
                },
                "initialDelaySeconds": 5,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 8080
                },
                "initialDelaySeconds": 5,
                "timeoutSeconds": 5
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "component": "alertmanager",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-alertmanager",
      "namespace": "mQ7EdRhnZrmnVEW"
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "component": "alertmanager",
          "app": "prometheus",
          "release": "release-name"
        }
      },
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "component": "alertmanager",
            "app": "prometheus",
            "release": "release-name",
            "chart": "prometheus-13.0.0",
            "heritage": "Helm"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-prometheus-alertmanager",
          "containers": [
            {
              "name": "prometheus-alertmanager",
              "image": "quay.io/prometheus/alertmanager:v0.21.0",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "POD_IP",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "status.podIP"
                    }
                  }
                }
              ],
              "args": [
                "--config.file=/etc/config/alertmanager.yml",
                "--storage.path=/data",
                "--cluster.advertise-address=$(POD_IP):6783",
                "--web.external-url=http://localhost:9093"
              ],
              "ports": [
                {
                  "containerPort": 9093
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/-/ready",
                  "port": 9093
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 30
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "config-volume",
                  "mountPath": "/etc/config"
                },
                {
                  "name": "storage-volume",
                  "mountPath": "/data",
                  "subPath": ""
                }
              ]
            },
            {
              "name": "prometheus-alertmanager-configmap-reload",
              "image": "jimmidyson/configmap-reload:v0.4.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--volume-dir=/etc/config",
                "--webhook-url=http://127.0.0.1:9093/-/reload"
              ],
              "resources": {},
              "volumeMounts": [
                {
                  "name": "config-volume",
                  "mountPath": "/etc/config",
                  "readOnly": true
                }
              ]
            }
          ],
          "securityContext": {
            "fsGroup": 65534,
            "runAsGroup": 65534,
            "runAsNonRoot": true,
            "runAsUser": 65534
          },
          "volumes": [
            {
              "name": "config-volume",
              "configMap": {
                "name": "release-name-prometheus-alertmanager"
              }
            },
            {
              "name": "storage-volume",
              "persistentVolumeClaim": {
                "claimName": "release-name-prometheus-alertmanager"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "component": "pushgateway",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-pushgateway",
      "namespace": "mQ7EdRhnZrmnVEW"
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "component": "pushgateway",
          "app": "prometheus",
          "release": "release-name"
        }
      },
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "component": "pushgateway",
            "app": "prometheus",
            "release": "release-name",
            "chart": "prometheus-13.0.0",
            "heritage": "Helm"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-prometheus-pushgateway",
          "containers": [
            {
              "name": "prometheus-pushgateway",
              "image": "prom/pushgateway:v1.3.0",
              "imagePullPolicy": "IfNotPresent",
              "args": null,
              "ports": [
                {
                  "containerPort": 9091
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/-/healthy",
                  "port": 9091
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 10
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/-/ready",
                  "port": 9091
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 10
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "securityContext": {
            "runAsNonRoot": true,
            "runAsUser": 65534
          }
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "component": "server",
        "app": "prometheus",
        "release": "release-name",
        "chart": "prometheus-13.0.0",
        "heritage": "Helm"
      },
      "name": "release-name-prometheus-server",
      "namespace": "mQ7EdRhnZrmnVEW"
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "component": "server",
          "app": "prometheus",
          "release": "release-name"
        }
      },
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "component": "server",
            "app": "prometheus",
            "release": "release-name",
            "chart": "prometheus-13.0.0",
            "heritage": "Helm"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-prometheus-server",
          "containers": [
            {
              "name": "prometheus-server-configmap-reload",
              "image": "jimmidyson/configmap-reload:v0.4.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--volume-dir=/etc/config",
                "--webhook-url=http://127.0.0.1:9090/-/reload"
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "config-volume",
                  "mountPath": "/etc/config",
                  "readOnly": true
                }
              ]
            },
            {
              "name": "prometheus-server",
              "image": "quay.io/prometheus/prometheus:v2.22.1",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--storage.tsdb.retention.time=15d",
                "--config.file=/etc/config/prometheus.yml",
                "--storage.tsdb.path=/data",
                "--web.console.libraries=/etc/prometheus/console_libraries",
                "--web.console.templates=/etc/prometheus/consoles",
                "--web.enable-lifecycle"
              ],
              "ports": [
                {
                  "containerPort": 9090
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/-/ready",
                  "port": 9090
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 5,
                "timeoutSeconds": 4,
                "failureThreshold": 3,
                "successThreshold": 1
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/-/healthy",
                  "port": 9090
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 15,
                "timeoutSeconds": 10,
                "failureThreshold": 3,
                "successThreshold": 1
              },
              "resources": {},
              "volumeMounts": [
                {
                  "name": "config-volume",
                  "mountPath": "/etc/config"
                },
                {
                  "name": "storage-volume",
                  "mountPath": "/data",
                  "subPath": ""
                }
              ]
            }
          ],
          "securityContext": {
            "fsGroup": 65534,
            "runAsGroup": 65534,
            "runAsNonRoot": true,
            "runAsUser": 65534
          },
          "terminationGracePeriodSeconds": 300,
          "volumes": [
            {
              "name": "config-volume",
              "configMap": {
                "name": "release-name-prometheus-server"
              }
            },
            {
              "name": "storage-volume",
              "persistentVolumeClaim": {
                "claimName": "release-name-prometheus-server"
              }
            }
          ]
        }
      }
    }
  }
]