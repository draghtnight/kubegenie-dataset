apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: release-name-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.7
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: false
  volumes:
    - secret
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
  readOnlyRootFilesystem: false
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: release-name-node-exporter
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - configMap
    - emptyDir
    - projected
    - secret
    - downwardAPI
    - persistentVolumeClaim
    - hostPath
  hostNetwork: false
  hostIPC: false
  hostPID: true
  hostPorts:
    - min: 0
      max: 65535
  runAsUser:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
  readOnlyRootFilesystem: false
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: release-name-prometheus-op-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - configMap
    - emptyDir
    - projected
    - secret
    - downwardAPI
    - persistentVolumeClaim
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: release-name-prometheus-op-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - configMap
    - emptyDir
    - projected
    - secret
    - downwardAPI
    - persistentVolumeClaim
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: release-name-prometheus-op-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - configMap
    - emptyDir
    - projected
    - secret
    - downwardAPI
    - persistentVolumeClaim
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1001
        max: 1001
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.7
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-node-exporter
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.1
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-prometheus-op-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-prometheus-op-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-prometheus-op-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
---
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-release-name-prometheus-op-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
data:
  alertmanager.yaml: Z2xvYmFsOgogIHJlc29sdmVfdGltZW91dDogNW0KcmVjZWl2ZXJzOgotIG5hbWU6ICJudWxsIgpyb3V0ZToKICBncm91cF9ieToKICAtIGpvYgogIGdyb3VwX2ludGVydmFsOiA1bQogIGdyb3VwX3dhaXQ6IDMwcwogIHJlY2VpdmVyOiAibnVsbCIKICByZXBlYXRfaW50ZXJ2YWw6IDEyaAogIHJvdXRlczoKICAtIG1hdGNoOgogICAgICBhbGVydG5hbWU6IFdhdGNoZG9nCiAgICByZWNlaXZlcjogIm51bGwi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.7
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
      - apps
    resources:
      - daemonsets
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
      - apps
    resources:
      - deployments
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - limitranges
    verbs:
      - list
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
      - apps
    resources:
      - replicasets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - resourcequotas
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - list
      - watch
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-kube-state-metrics-psp
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.7
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - extensions
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - release-name-kube-state-metrics
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-node-exporter-psp
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.1
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - extensions
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - release-name-node-exporter
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-prometheus-op-alertmanager-psp
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
rules:
  - apiGroups:
      - extensions
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - release-name-prometheus-op-alertmanager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-prometheus-op-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - alertmanagers.monitoring.coreos.com
      - podmonitors.monitoring.coreos.com
      - prometheuses.monitoring.coreos.com
      - prometheusrules.monitoring.coreos.com
      - servicemonitors.monitoring.coreos.com
      - thanosrulers.monitoring.coreos.com
      - probes.monitoring.coreos.com
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - update
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - alertmanagers
      - alertmanagers/finalizers
      - prometheuses
      - prometheuses/finalizers
      - thanosrulers
      - thanosrulers/finalizers
      - servicemonitors
      - podmonitors
      - probes
      - prometheusrules
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - delete
  - apiGroups:
      - ""
    resources:
      - services
      - services/finalizers
      - endpoints
    verbs:
      - get
      - create
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-prometheus-op-operator-psp
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
rules:
  - apiGroups:
      - extensions
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - release-name-prometheus-op-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-prometheus-op-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
rules:
  - apiGroups:
      - ""
    resources:
      - nodes/metrics
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-prometheus-op-prometheus-psp
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
rules:
  - apiGroups:
      - extensions
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - release-name-prometheus-op-prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.7
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kube-state-metrics
subjects:
  - kind: ServiceAccount
    name: release-name-kube-state-metrics
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kube-state-metrics-psp
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.7
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kube-state-metrics-psp
subjects:
  - kind: ServiceAccount
    name: release-name-kube-state-metrics
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-node-exporter-psp
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.1
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-node-exporter-psp
subjects:
  - kind: ServiceAccount
    name: release-name-node-exporter
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-prometheus-op-alertmanager-psp
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-prometheus-op-alertmanager-psp
subjects:
  - kind: ServiceAccount
    name: release-name-prometheus-op-alertmanager
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-prometheus-op-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-prometheus-op-operator
subjects:
  - kind: ServiceAccount
    name: release-name-prometheus-op-operator
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-prometheus-op-operator-psp
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-prometheus-op-operator-psp
subjects:
  - kind: ServiceAccount
    name: release-name-prometheus-op-operator
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-prometheus-op-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-prometheus-op-prometheus
subjects:
  - kind: ServiceAccount
    name: release-name-prometheus-op-prometheus
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-prometheus-op-prometheus-psp
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-prometheus-op-prometheus-psp
subjects:
  - kind: ServiceAccount
    name: release-name-prometheus-op-prometheus
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-kube-state-metrics
  annotations: null
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.7
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
      nodePort: null
  selector:
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-node-exporter
  annotations:
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.1
    app.kubernetes.io/managed-by: Helm
    jobLabel: node-exporter
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 9100
      targetPort: metrics
      nodePort: null
  selector:
    app.kubernetes.io/name: node-exporter
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-prometheus-op-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9093
      targetPort: 9093
  selector:
    app: alertmanager
    alertmanager: release-name-prometheus-op-alertmanager
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-prometheus-op-kube-proxy
  namespace: kube-system
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kube-proxy
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      port: 10249
      protocol: TCP
      targetPort: 10249
  selector:
    k8s-app: kube-proxy
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-prometheus-op-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
  selector:
    app.kubernetes.io/name: prometheus-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: operator
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-prometheus-op-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9090
      targetPort: 9090
      protocol: TCP
  selector:
    app: prometheus
    prometheus: release-name-prometheus-op-prometheus
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-node-exporter
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/instance: release-name
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-exporter
        helm.sh/chart: node-exporter-1.0.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: 1.0.1
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-node-exporter
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
        runAsNonRoot: null
      containers:
        - name: node-exporter
          image: marketplace.azurecr.io/bitnami/node-exporter:1.0.1-debian-10-r31
          imagePullPolicy: IfNotPresent
          args:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --web.listen-address=0.0.0.0:9100
            - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
            - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
          ports:
            - name: metrics
              containerPort: 9100
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: metrics
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: metrics
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits: {}
            requests: {}
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly: true
            - name: sys
              mountPath: /host/sys
              readOnly: true
      hostNetwork: true
      hostPID: true
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.7
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        helm.sh/chart: kube-state-metrics-0.4.3
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: 1.9.7
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      hostNetwork: true
      serviceAccountName: release-name-kube-state-metrics
      containers:
        - name: kube-state-metrics
          image: marketplace.azurecr.io/bitnami/kube-state-metrics:1.9.7-debian-10-r51
          imagePullPolicy: IfNotPresent
          args:
            - --collectors=certificatesigningrequests
            - --collectors=configmaps
            - --collectors=cronjobs
            - --collectors=daemonsets
            - --collectors=deployments
            - --collectors=endpoints
            - --collectors=horizontalpodautoscalers
            - --collectors=ingresses
            - --collectors=jobs
            - --collectors=limitranges
            - --collectors=mutatingwebhookconfigurations
            - --collectors=namespaces
            - --collectors=networkpolicies
            - --collectors=nodes
            - --collectors=persistentvolumeclaims
            - --collectors=persistentvolumes
            - --collectors=poddisruptionbudgets
            - --collectors=pods
            - --collectors=replicasets
            - --collectors=replicationcontrollers
            - --collectors=resourcequotas
            - --collectors=secrets
            - --collectors=services
            - --collectors=statefulsets
            - --collectors=storageclasses
            - --collectors=volumeattachments
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
            seccompProfile:
              type: RuntimeDefault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-prometheus-op-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus-operator
        helm.sh/chart: prometheus-operator-0.29.3
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: operator
      annotations: null
    spec:
      serviceAccountName: release-name-prometheus-op-operator
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
        runAsNonRoot: null
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: prometheus-operator
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: operator
      containers:
        - name: prometheus-operator
          image: marketplace.azurecr.io/bitnami/prometheus-operator:0.41.0-debian-10-r5
          imagePullPolicy: IfNotPresent
          args:
            - --kubelet-service=kube-system/release-name-prometheus-op-kubelet
            - --log-format=logfmt
            - --log-level=info
            - --logtostderr=true
            - --localhost=127.0.0.1
            - --config-reloader-image=marketplace.azurecr.io/bitnami/configmap-reload:0.4.0-debian-10-r18
            - --prometheus-config-reloader=marketplace.azurecr.io/bitnami/prometheus-operator:0.41.0-debian-10-r5
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            seccompProfile:
              type: RuntimeDefault
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                "": NET_RAW
---
apiVersion: monitoring.coreos.com/v1
kind: Alertmanager
metadata:
  name: release-name-prometheus-op-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
spec:
  replicas: 1
  serviceAccountName: release-name-prometheus-op-alertmanager
  image: marketplace.azurecr.io/bitnami/alertmanager:0.21.0-debian-10-r41
  listenLocal: false
  externalUrl: http://release-name-prometheus-op-alertmanager.default:9093
  paused: false
  logFormat: logfmt
  logLevel: info
  retention: 120h
  resources: {}
  routePrefix: /
  securityContext:
    runAsUser: 1001
    fsGroup: 1001
  podMetadata:
    labels:
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: alertmanager
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: prometheus-operator
                app.kubernetes.io/instance: release-name
                app.kubernetes.io/component: alertmanager
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: release-name-prometheus-op-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
spec:
  replicas: 1
  serviceAccountName: release-name-prometheus-op-prometheus
  serviceMonitorSelector: {}
  alerting:
    alertmanagers:
      - namespace: default
        name: release-name-prometheus-op-alertmanager
        port: http
        pathPrefix: /
  image: marketplace.azurecr.io/bitnami/prometheus:2.20.1-debian-10-r0
  externalUrl: http://release-name-prometheus-op-prometheus.default:9090
  paused: false
  logLevel: info
  logFormat: logfmt
  listenLocal: false
  enableAdminAPI: false
  resources: {}
  retention: 10d
  routePrefix: /
  serviceMonitorNamespaceSelector: {}
  securityContext:
    runAsUser: 1001
    fsGroup: 1001
  ruleNamespaceSelector: {}
  ruleSelector: {}
  podMetadata:
    labels:
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: prometheus
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: prometheus-operator
                app.kubernetes.io/instance: release-name
                app.kubernetes.io/component: prometheus
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-kube-state-metrics
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.7
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: release-name
  endpoints:
    - port: http
  namespaceSelector:
    matchNames:
      - default
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-node-exporter
  labels:
    app.kubernetes.io/name: node-exporter
    helm.sh/chart: node-exporter-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  jobLabel: jobLabel
  selector:
    matchLabels:
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/instance: release-name
  endpoints:
    - port: metrics
  namespaceSelector:
    matchNames:
      - default
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-prometheus-op-alertmanager
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: alertmanager
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: alertmanager
  namespaceSelector:
    matchNames:
      - default
  endpoints:
    - port: http
      path: /metrics
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-prometheus-op-apiserver
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: apiserver
spec:
  jobLabel: component
  selector:
    matchLabels:
      component: apiserver
      provider: kubernetes
  namespaceSelector:
    matchNames:
      - default
  endpoints:
    - port: https
      scheme: https
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        serverName: kubernetes
        insecureSkipVerify: true
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-prometheus-op-kube-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kube-proxy
spec:
  jobLabel: k8s-app
  selector:
    matchLabels:
      app.kubernetes.io/component: kube-proxy
  namespaceSelector:
    matchNames:
      - kube-system
  endpoints:
    - port: http-metrics
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-prometheus-op-kubelet
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kubelet
spec:
  jobLabel: k8s-app
  selector:
    matchLabels:
      k8s-app: kubelet
  namespaceSelector:
    matchNames:
      - kube-system
  endpoints:
    - port: https-metrics
      scheme: https
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        serverName: kubernetes
        insecureSkipVerify: true
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      honorLabels: true
    - port: https-metrics
      path: /metrics/cadvisor
      scheme: https
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        serverName: kubernetes
        insecureSkipVerify: true
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      honorLabels: true
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-prometheus-op-operator
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
spec:
  endpoints:
    - port: http
      honorLabels: true
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: operator
  namespaceSelector:
    matchNames:
      - default
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-prometheus-op-prometheus
  labels:
    app.kubernetes.io/name: prometheus-operator
    helm.sh/chart: prometheus-operator-0.29.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: prometheus
  namespaceSelector:
    matchNames:
      - default
  endpoints:
    - port: http
      path: /metrics
