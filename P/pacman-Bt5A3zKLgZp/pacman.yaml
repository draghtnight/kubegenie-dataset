apiVersion: v1
kind: Secret
metadata:
  name: release-name-mongodb-users-secret
  labels:
    helm.sh/chart: pacman-0.1.6
    app.kubernetes.io/name: pacman
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.1.6
    app.kubernetes.io/managed-by: Helm
  namespace: Bt5A3zKLgZp
type: Opaque
data:
  database-name: cGFjbWFu
  database-password: cGlua3k=
  database-user: Ymxpbmt5
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: default
  name: release-name-mongo-storage-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-pacman-clusterrole
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - release-name-psp
  - apiGroups:
      - ""
    resources:
      - pods
      - nodes
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-pacman-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-pacman-clusterrole
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts
  - kind: ServiceAccount
    name: default
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-pacman-rolebinding
  namespace: Bt5A3zKLgZp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-pacman-clusterrole
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts
  - kind: ServiceAccount
    name: default
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-pacman
  namespace: Bt5A3zKLgZp
  labels:
    helm.sh/chart: pacman-0.1.6
    app.kubernetes.io/name: pacman
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.1.6
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: pacman
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: release-name-mongo-backend
  name: release-name-mongo-backend
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
      name: mongodb
  selector:
    name: release-name-mongo-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mongo-backend
  namespace: Bt5A3zKLgZp
  labels:
    name: release-name-mongo-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      name: release-name-mongo-backend
  template:
    metadata:
      labels:
        name: release-name-mongo-backend
    spec:
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - name: release-name-mongo-storage
          persistentVolumeClaim:
            claimName: release-name-mongo-storage-claim
      initContainers:
        - name: volume-permissions
          image: ghcr.io/shuguet/mongo:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: release-name-mongo-storage
              mountPath: /data/db
          command:
            - /bin/bash
            - -ec
          args:
            - |
              mkdir -p /data/db
              chown -R "1001:1001" "/data/db"
          resources: {}
          securityContext:
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      containers:
        - name: release-name-mongo-backend
          image: ghcr.io/shuguet/mongo:latest
          imagePullPolicy: Always
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-mongodb-users-secret
                  key: database-user
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mongodb-users-secret
                  key: database-password
          volumeMounts:
            - name: release-name-mongo-storage
              mountPath: /data/db
          args:
            - --dbpath
            - /data/db
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - db.adminCommand('ping')
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - db.adminCommand('ping')
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pacman
  namespace: Bt5A3zKLgZp
  labels:
    helm.sh/chart: pacman-0.1.6
    app.kubernetes.io/name: pacman
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.1.6
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: null
  selector:
    matchLabels:
      app.kubernetes.io/name: pacman
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pacman
        app.kubernetes.io/instance: release-name
        name: pacman
    spec:
      containers:
        - name: pacman
          image: ghcr.io/shuguet/pacman:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          startupProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            failureThreshold: 1
            periodSeconds: 10
          readinessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /
              port: 8080
          env:
            - name: MONGO_SERVICE_HOST
              value: release-name-mongo-backend
            - name: MONGO_AUTH_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: release-name-mongodb-users-secret
            - name: MONGO_AUTH_PWD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: release-name-mongodb-users-secret
            - name: MONGO_DATABASE
              valueFrom:
                secretKeyRef:
                  name: release-name-mongodb-users-secret
                  key: database-name
            - name: MY_MONGO_PORT
              value: "27017"
            - name: MONGO_USE_SSL
              value: "false"
            - name: MONGO_VALIDATE_SSL
              value: "false"
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-pacman-test-connection
  labels:
    helm.sh/chart: pacman-0.1.6
    app.kubernetes.io/name: pacman
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.1.6
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-pacman:80
  restartPolicy: Never
