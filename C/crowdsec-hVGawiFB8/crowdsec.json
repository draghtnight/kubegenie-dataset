[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "agent-credentials",
      "labels": {
        "k8s-app": "release-name",
        "type": "lapi",
        "version": "v1"
      }
    },
    "type": "Opaque",
    "data": {
      "username": "SkF2cXVhZTRjNld5dnYwTnZYeUZIRWM0QTVPWUVweE55Q2hhQkNBNmR3b2FIZlIz",
      "password": "VUNlNkdDNVZmMEZhSHd2WFJKQzBOVHo1ektJUzBmbTNoSGNGYTFONjh2RmpLSFlj"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "acquis-configmap"
    },
    "data": {
      "acquis.yaml": "filenames:\n  - /var/log/containers/ingress-nginx-controller-*_ingress-nginx_*.log\nlabels:\n  type: docker\n  program: nginx"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "name": "release-name-agent-config-pvc",
      "labels": {
        "k8s-app": "release-name",
        "type": "agent",
        "version": "v1"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "100Mi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "name": "release-name-db-pvc",
      "labels": {
        "k8s-app": "release-name",
        "type": "lapi",
        "version": "v1"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "1Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "name": "release-name-config-pvc",
      "labels": {
        "k8s-app": "release-name",
        "type": "lapi",
        "version": "v1"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "100Mi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-service",
      "labels": {
        "app": "release-name-service"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8080,
          "targetPort": 8080,
          "protocol": "TCP",
          "name": "lapi"
        }
      ],
      "selector": {
        "k8s-app": "release-name",
        "type": "lapi",
        "version": "v1"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "release-name-agent",
      "labels": {
        "k8s-app": "release-name",
        "type": "agent",
        "version": "v1"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "k8s-app": "release-name",
          "type": "agent"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "k8s-app": "release-name",
            "type": "agent",
            "version": "v1"
          }
        },
        "spec": {
          "tolerations": [
            {
              "key": "node-role.kubernetes.io/master",
              "effect": "NoSchedule"
            }
          ],
          "initContainers": [
            {
              "name": "wait-for-lapi",
              "image": "busybox:1.28",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c",
                "until nc release-name-service.default 8080; do echo waiting for lapi to start; sleep 5; done"
              ]
            }
          ],
          "containers": [
            {
              "name": "crowdsec-agent",
              "image": "crowdsecurity/crowdsec:v1.3.4",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "AGENT_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "agent-credentials",
                      "key": "username"
                    }
                  }
                },
                {
                  "name": "AGENT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "agent-credentials",
                      "key": "password"
                    }
                  }
                },
                {
                  "name": "LOCAL_API_URL",
                  "value": "http://release-name-service.default:8080"
                },
                {
                  "name": "DISABLE_LOCAL_API",
                  "value": "true"
                }
              ],
              "resources": {
                "limits": {
                  "memory": "100Mi"
                },
                "requests": {
                  "cpu": "150m",
                  "memory": "100Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "command": [
                "sh",
                "-c",
                "mv -n /staging/etc/crowdsec/* /etc/crowdsec_data/ && rm -rf /staging/etc/crowdsec && ln -s /etc/crowdsec_data /etc/crowdsec && ./docker_start.sh"
              ],
              "volumeMounts": [
                {
                  "name": "crowdsec-agent-config",
                  "mountPath": "/etc/crowdsec_data"
                },
                {
                  "name": "acquis-config-volume",
                  "mountPath": "/etc/crowdsec_data/acquis.yaml",
                  "subPath": "acquis.yaml"
                },
                {
                  "name": "varlog",
                  "mountPath": "/var/log"
                },
                {
                  "name": "varlibdockercontainers",
                  "mountPath": "/var/lib/docker/containers",
                  "readOnly": true
                }
              ]
            }
          ],
          "terminationGracePeriodSeconds": 30,
          "volumes": [
            {
              "name": "acquis-config-volume",
              "configMap": {
                "name": "acquis-configmap"
              }
            },
            {
              "name": "varlog",
              "hostPath": {
                "path": "/var/log"
              }
            },
            {
              "name": "crowdsec-agent-config",
              "persistentVolumeClaim": {
                "claimName": "release-name-agent-config-pvc"
              }
            },
            {
              "name": "varlibdockercontainers",
              "hostPath": {
                "path": "/var/lib/docker/containers"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-lapi",
      "labels": {
        "k8s-app": "release-name",
        "type": "lapi",
        "version": "v1"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "k8s-app": "release-name",
          "type": "lapi"
        }
      },
      "strategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "k8s-app": "release-name",
            "type": "lapi",
            "version": "v1"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "crowdsec-lapi",
              "image": "crowdsecurity/crowdsec:v1.3.4",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "AGENT_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "agent-credentials",
                      "key": "username"
                    }
                  }
                },
                {
                  "name": "AGENT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "agent-credentials",
                      "key": "password"
                    }
                  }
                },
                {
                  "name": "DISABLE_AGENT",
                  "value": "true"
                }
              ],
              "resources": {
                "limits": {
                  "memory": "100Mi"
                },
                "requests": {
                  "cpu": "150m",
                  "memory": "100Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "ports": [
                {
                  "name": "lapi",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "command": [
                "sh",
                "-c",
                "mv -n /staging/etc/crowdsec/* /etc/crowdsec_data/ && rm -rf /staging/etc/crowdsec && ln -s /etc/crowdsec_data /etc/crowdsec && ./docker_start.sh"
              ],
              "volumeMounts": [
                {
                  "name": "crowdsec-db",
                  "mountPath": "/var/lib/crowdsec/data"
                },
                {
                  "name": "crowdsec-config",
                  "mountPath": "/etc/crowdsec_data"
                }
              ]
            }
          ],
          "terminationGracePeriodSeconds": 30,
          "volumes": [
            {
              "name": "crowdsec-db",
              "persistentVolumeClaim": {
                "claimName": "release-name-db-pvc"
              }
            },
            {
              "name": "crowdsec-config",
              "persistentVolumeClaim": {
                "claimName": "release-name-config-pvc"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-test-agent",
      "annotations": {
        "helm.sh/hook": "test",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "release-name-test-agent",
          "image": "curlimages/curl",
          "env": [
            {
              "name": "AGENT_USERNAME",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "agent-credentials",
                  "key": "username"
                },
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            },
            {
              "name": "AGENT_PASSWORD",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "agent-credentials",
                  "key": "password"
                }
              }
            }
          ],
          "command": [
            "/bin/sh",
            "-ec",
            "http_code=$(curl -s -o /dev/null -w \"%{http_code}\" http://release-name-service:8080/v1/watchers/login \\\n-H 'Content-Type: application/json' -d '{\"machine_id\": \"'\"$AGENT_USERNAME\"'\", \"password\":\"'\"$AGENT_PASSWORD\"'\"}'); \\\nif [ \"$http_code\" == \"200\" ]; then echo 'connection to lapi succeed' && exit 0; else echo 'failed connect to lapi' && exit 1; fi\n"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-test-lapi-up",
      "annotations": {
        "helm.sh/hook": "test",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "release-name-test-lapi-up",
          "image": "curlimages/curl",
          "command": [
            "/bin/sh",
            "-ec",
            "curl -XGET http://release-name-service:8080/health\n"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]