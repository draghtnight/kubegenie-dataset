apiVersion: v1
kind: ConfigMap
metadata:
  name: cmak-clusters
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 3.0.0.5-7e7a22e
    helm.sh/chart: cmak-operator-1.10.0
    app.kubernetes.io/name: cmak
    app.kubernetes.io/instance: release-name
data:
  clusters.yaml: |-
    cmak:
      clusters: []
      clustersCommon:
        activeOffsetCacheEnabled: true
        curatorConfig:
          baseSleepTimeMs: 100
          maxSleepTimeMs: 1000
          zkMaxRetry: 100
        displaySizeEnabled: false
        enabled: true
        filterConsumers: false
        jaasConfig: null
        jmxEnabled: false
        jmxPass: null
        jmxSsl: false
        jmxUser: null
        kafkaVersion: 2.2.0
        logkafkaEnabled: false
        pollConsumers: true
        saslMechanism: null
        securityProtocol: PLAINTEXT
        tuning:
          brokerViewThreadPoolQueueSize: 1000
          brokerViewThreadPoolSize: 10
          brokerViewUpdatePeriodSeconds: 30
          clusterManagerThreadPoolQueueSize: 100
          clusterManagerThreadPoolSize: 10
          kafkaAdminClientThreadPoolQueueSize: 1000
          kafkaAdminClientThreadPoolSize: 10
          kafkaCommandThreadPoolQueueSize: 100
          kafkaCommandThreadPoolSize: 10
          kafkaManagedOffsetGroupCacheSize: 1000000
          kafkaManagedOffsetGroupExpireDays: 7
          kafkaManagedOffsetMetadataCheckMillis: 30000
          logkafkaCommandThreadPoolQueueSize: 100
          logkafkaCommandThreadPoolSize: 10
          logkafkaUpdatePeriodSeconds: 30
          offsetCacheThreadPoolQueueSize: 1000
          offsetCacheThreadPoolSize: 10
          partitionOffsetCacheTimeoutSecs: 5
---
apiVersion: v1
kind: Service
metadata:
  name: cmak
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 3.0.0.5-7e7a22e
    helm.sh/chart: cmak-operator-1.10.0
    app.kubernetes.io/name: cmak
    app.kubernetes.io/instance: release-name
spec:
  type: ClusterIP
  ports:
    - name: zk
      port: 2181
      targetPort: zk
      protocol: TCP
    - name: http
      port: 9000
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: cmak
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cmak
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 3.0.0.5-7e7a22e
    helm.sh/chart: cmak-operator-1.10.0
    app.kubernetes.io/name: cmak
    app.kubernetes.io/instance: release-name
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cmak
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: 3.0.0.5-7e7a22e
        helm.sh/chart: cmak-operator-1.10.0
        app.kubernetes.io/name: cmak
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: zk
          image: docker.io/zookeeper:3.6.1
          imagePullPolicy: IfNotPresent
          ports:
            - name: zk
              containerPort: 2181
              protocol: TCP
          env:
            - name: ZOO_SERVERS
              value: server.1=cmak.default:2888:3888;2181
            - name: ZOO_4LW_COMMANDS_WHITELIST
              value: ruok,stat
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - '[ "$(echo ruok | nc 127.0.0.1 2181)" = "imok" ]'
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 15
        - name: ui
          image: docker.io/hlebalbau/kafka-manager:3.0.0.5-7e7a22e
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          args:
            - -Dcmak.zkhosts=127.0.0.1:2181
            - -Dhttp.port=9000
          env: null
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            failureThreshold: 7
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            failureThreshold: 7
            initialDelaySeconds: 45
            timeoutSeconds: 15
            periodSeconds: 30
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cmak-reconcile
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 3.0.0.5-7e7a22e
    helm.sh/chart: cmak-operator-1.10.0
    app.kubernetes.io/name: cmak
    app.kubernetes.io/instance: release-name
spec:
  schedule: '*/3 * * * *'
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata: null
        spec:
          restartPolicy: Never
          volumes:
            - name: cmak-clusters
              configMap:
                name: cmak-clusters
          containers:
            - name: setup
              image: docker.io/eshepelyuk/cmak2zk:1.10.0
              args:
                - --overwrite-zk
                - cmak.default:2181
                - /app/etc/clusters.yaml
              volumeMounts:
                - name: cmak-clusters
                  mountPath: /app/etc
---
apiVersion: v1
kind: Pod
metadata:
  name: cmak-values-clusters
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  restartPolicy: Never
  containers:
    - name: pytest
      image: docker.io/eshepelyuk/cmak-operator-test:1.10.0
      args:
        - -s
        - e2e
        - --api-url
        - http://cmak.default:9000
        - --zk-url
        - cmak.default:2181
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cmak-setup
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 3.0.0.5-7e7a22e
    helm.sh/chart: cmak-operator-1.10.0
    app.kubernetes.io/name: cmak
    app.kubernetes.io/instance: release-name
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  backoffLimit: 3
  template:
    metadata: null
    spec:
      restartPolicy: Never
      volumes:
        - name: cmak-clusters
          configMap:
            name: cmak-clusters
      containers:
        - name: setup
          image: docker.io/eshepelyuk/cmak2zk:1.10.0
          args:
            - --overwrite-zk
            - cmak.default:2181
            - /app/etc/clusters.yaml
          volumeMounts:
            - name: cmak-clusters
              mountPath: /app/etc
