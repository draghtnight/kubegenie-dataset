apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app: cpx-sidecar-injector
  name: cpx-sidecar-injector
  namespace: default
spec:
  ingress:
    - {}
  podSelector:
    matchLabels:
      app: cpx-sidecar-injector
  policyTypes:
    - Ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cpx-sidecar-injector-service-account
  namespace: ClusYd
  labels:
    app: cpx-sidecar-injector
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cpx-istio-sidecar-injector
  namespace: ClusYd
  labels:
    app: cpx-sidecar-injector
    chart: citrix-cpx-istio-sidecar-injector-1.12.0
    release: release-name
    istio: sidecar-injector
data:
  config: "policy: enabled\n# If user does *NOT* want to inject sidecar on some pods based on label,\n# then mention such labels in 'neverInjectSelector' entry.\n# Note: This is valid only when istio's sidecar-injector image is running.\nneverInjectSelector:\n  - matchExpressions:\n    - {key: citrix.com/no.sidecar, operator: Exists}\n# Here, if pod has a label citrix.com/no.sidecar, then sidecar won't be injected for that pod.\ntemplate: |-\n  containers:\n  - name: istio-adaptor\n    image: quay.io/citrix/citrix-xds-adaptor:0.10.1\n    imagePullPolicy: IfNotPresent \n    env:\n    - name: POD_NAME\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.name\n    - name: POD_NAMESPACE\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.namespace\n    - name: INSTANCE_IP\n      valueFrom:\n        fieldRef:\n          fieldPath: status.podIP\n    - name: NODE_NAME\n      valueFrom:\n        fieldRef:\n          fieldPath: spec.nodeName\n    - name: APPLICATION_NAME\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.labels['app']\n    - name: SERVICE_ACCOUNT\n      valueFrom:\n        fieldRef:\n          apiVersion: v1\n          fieldPath: spec.serviceAccountName\n    - name: CA_ADDR\n      value: istiod.istio-system.svc:15012 #istiod.istio-system.svc:15012\n    - name: TRUST_DOMAIN\n      value: cluster.local #cluster.local\n    - name: CLUSTER_ID \n      value: Kubernetes #Kubernetes\n    - name: CERT_TTL_IN_HOURS \n      value: 720\n    - name: JWT_POLICY\n      value: \"third-party-jwt\" # third-party-jwt if Kubernetes cluster supports third-party tokens\n    - name: NS_USER\n      value: nsroot\n    - name: NS_PASSWORD\n      value: nsroot\n    - name: ENABLE_LABELS_FEATURE\n      value: \"FALSE\"\n    - name: LOGLEVEL\n      value: \"DEBUG\"\n    args:\n    - -ads-server\n    - istiod.istio-system.svc:15012 # istiod.istio-system.svc:15012\n    - -ads-secure-connect=true\n    - -ads-server-SAN\n    - \n    - -istio-proxy-type\n    - \"sidecar\"\n    - -citrix-adc\n    - \"http://127.0.0.1:10080\"\n    - -citrix-adc-password\n    - \"/var/deviceinfo/random_id\"\n    volumeMounts:\n    - mountPath: /var/deviceinfo\n      name: cpx-pwd\n    - mountPath: /var/run/secrets/tokens\n      name: istio-token\n    - mountPath: /etc/nslogin \n      name: nslogin\n      readOnly: true\n    - name: certs\n      mountPath: /etc/certs\n    - name: istiod-ca-cert\n      mountPath: /etc/rootcert/\n    - name: podinfo\n      mountPath: /etc/podinfo\n    securityContext:\n      readOnlyRootFilesystem: true\n      runAsGroup: 32024\n      runAsUser: 32024 # UID of xds-adaptor container's user\n      runAsNonRoot: true\n  - name: cpx-proxy\n    image: quay.io/citrix/citrix-k8s-cpx-ingress:13.0-83.27\n    imagePullPolicy: IfNotPresent\n    securityContext:\n      privileged: true\n    env:\n    - name: \"EULA\"\n      value: \"false\"\n    - name: \"CPX_SIDECAR_MODE\"\n      value: \"true\"\n    - name: \"CPX_DISABLE_PROBE\"\n      value: \"YES\"\n    - name: \"MGMT_HTTP_PORT\"\n      value: \"10080\"\n    - name: \"MGMT_HTTPS_PORT\"\n      value: \"10443\"\n    - name: \"KUBERNETES_TASK_ID\"\n      value: \"\"\n    - name: \"NS_CPX_LITE\"\n      value: 1\n    - name: \"LS_IP\"\n      value: \n    - name: \"LS_PORT\"\n      value: 27000\n    - name: \"LOGSTREAM_COLLECTOR_IP\"\n      value: \n    volumeMounts:\n      - mountPath: /cpx/conf/\n        name: cpx-conf\n      - mountPath: /var/deviceinfo\n        name: cpx-pwd\n      - mountPath: /cpx/crash/\n        name: cpx-crash\n  volumes:\n  - name: cpx-conf\n    emptyDir: {}\n  - name: cpx-pwd\n    emptyDir: {}\n  - name: cpx-crash\n    emptyDir: {}\n  - name: nslogin\n    secret:\n      optional: true\n      secretName: nslogin\n  - name: certs\n    emptyDir: {}  \n  - name: istio-token\n    projected:\n      sources:\n      - serviceAccountToken:\n          audience: istio-ca\n          expirationSeconds: 43200\n          path: istio-token\n  - name: istiod-ca-cert\n    configMap:\n      defaultMode: 0777\n      name: istio-ca-root-cert\n  - name: podinfo\n    downwardAPI:\n      items:\n      - path: \"labels\"\n        fieldRef:\n          fieldPath: metadata.labels\n      - path: \"annotations\"\n        fieldRef:\n          fieldPath: metadata.annotations"
  values: |-
    {
      "global": {
        "jwtPolicy": "third-party-jwt",
      },
      "adcSelector": {
        "adc": "citrix",
       }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio
  namespace: ClusYd
  labels:
    app: cpx-sidecar-injector
    chart: citrix-cpx-istio-sidecar-injector-1.12.0
    release: release-name
    istio: sidecar-injector
data:
  mesh: |-
    # Needed for injection of securityContext in PodSpec during auto-sidecar injection
    sdsUdsPath: unix:/etc/istio/proxy/SDS
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cpx-sidecar-injector-istio-system
  labels:
    app: cpx-sidecar-injector
rules:
  - apiGroups:
      - '*'
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
      - certificatesigningrequests/approval
    verbs:
      - get
      - list
      - create
      - watch
      - delete
      - update
  - apiGroups:
      - certificates.k8s.io
    resources:
      - signers
    resourceNames:
      - kubernetes.io/legacy-unknown
      - kubernetes.io/kubelet-serving
    verbs:
      - get
      - list
      - create
      - watch
      - delete
      - update
      - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cpx-sidecar-injector-admin-role-binding-istio-system
  labels:
    app: cpx-sidecar-injector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cpx-sidecar-injector-istio-system
subjects:
  - kind: ServiceAccount
    name: cpx-sidecar-injector-service-account
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: cpx-sidecar-injector
  namespace: ClusYd
  labels:
    istio: sidecar-injector
    app: cpx-sidecar-injector
spec:
  ports:
    - port: 443
  selector:
    istio: sidecar-injector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cpx-sidecar-injector
  namespace: ClusYd
  labels:
    app: cpx-sidecar-injector
    istio: sidecar-injector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cpx-sidecar-injector
      istio: sidecar-injector
  template:
    metadata:
      labels:
        istio: sidecar-injector
        app: cpx-sidecar-injector
      annotations:
        sidecar.istio.io/inject: "false"
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      serviceAccountName: cpx-sidecar-injector-service-account
      initContainers:
        - name: sidecar-certs-generator
          image: quay.io/citrix/cpx-sidecar-injector-certgen:1.2.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: certs
              mountPath: /tmp
      containers:
        - name: sidecar-injector-webhook
          image: quay.io/citrix/cpx-istio-sidecar-injector:1.2.0
          imagePullPolicy: IfNotPresent
          args:
            - --caCertFile=/etc/istio/certs/cert.pem
            - --tlsCertFile=/etc/istio/certs/cert.pem
            - --tlsKeyFile=/etc/istio/certs/key.pem
            - --injectConfig=/etc/istio/inject/config
            - --meshConfig=/etc/istio/config/mesh
            - --healthCheckInterval=10s
            - --webhookConfigName=cpx-sidecar-injector
          volumeMounts:
            - name: config-volume
              mountPath: /etc/istio/config
              readOnly: true
            - name: certs
              mountPath: /etc/istio/certs
              readOnly: true
            - name: inject-config
              mountPath: /etc/istio/inject
              readOnly: true
          livenessProbe:
            exec:
              command:
                - cat
                - /health
            failureThreshold: 5
            initialDelaySeconds: 4
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - cat
                - /health
            failureThreshold: 5
            initialDelaySeconds: 4
            periodSeconds: 10
          resources:
            requests:
              cpu: 10m
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config-volume
          configMap:
            name: istio
        - name: certs
          emptyDir: {}
        - name: inject-config
          configMap:
            name: cpx-istio-sidecar-injector
            items:
              - key: config
                path: config
              - key: values
                path: values
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: cpx-sidecar-injector
  namespace: default
  labels:
    app: cpx-sidecar-injector
    chart: citrix-cpx-istio-sidecar-injector-1.12.0
    release: release-name
webhooks:
  - name: sidecar-injector.istio.io
    admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: cpx-sidecar-injector
        namespace: default
        path: /inject
      caBundle: ""
    rules:
      - operations:
          - CREATE
        apiGroups:
          - ""
        apiVersions:
          - v1
        resources:
          - pods
        scope: '*'
    sideEffects: None
    failurePolicy: Fail
    namespaceSelector:
      matchLabels:
        cpx-injection: enabled
