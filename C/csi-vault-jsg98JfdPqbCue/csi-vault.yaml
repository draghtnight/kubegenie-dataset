kind: ServiceAccount
apiVersion: v1
metadata:
  name: release-name-csi-vault-controller
  namespace: jsg98JfdPqbCue
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-csi-vault-node
  namespace: jsg98JfdPqbCue
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: node
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-csi-vault-apiserver-cert
  namespace: jsg98JfdPqbCue
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQwekNDQXJ1Z0F3SUJBZ0lSQUxIaUQzKzNyQjc0QW9nNnVHYkVRQW93RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpJd05qRXlNRGsxTXpRNVdoY05Nekl3TmpBNU1EazFNelE1V2pBaApNUjh3SFFZRFZRUURFeFp5Wld4bFlYTmxMVzVoYldVdFkzTnBMWFpoZFd4ME1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW4wcjdQY0xyS2ppU2pkNmRWWmxlbnpaR0Q3QkFXUUt3L2NLeEI0WFoKWHhlVjdmdGhmTThxa1dFU0VybzJ1WFpsNkdBdk1SSSswYStaR0svQTRzUjU4d2RlKzdJdnZyM2pFb28wOHhEQQp5QlZwbkZ6K0QyNE04RTlRc1dUWjBmRXN3OVZrZWhwTE56ZjhaMGN6cWxodlFRQ1BYS3VoOCtOTUV0TDhnMzFOCmErTFVoelpHRUFWclUydVgwVFFrWFNpa2ZJOWZuL2xsZGJVcDJTZXRiaGQvMG5nQWJJN1pMbW1oUHROK08zc20KVklJYkdpNFUvTDVUNW1MT0FiUDd4d1RkOFQvSWdCNllGQnR3UnlWY2FTZHpab0h1TU9tL2VpV0ptT3dkTnJkYQp4eUs1TGI0N2N3RkhnL1phS2M0bFFsTTNZUjh2cHg0VUYrNDQ4YjBJaEFtSmZ3SURBUUFCbzRJQkdEQ0NBUlF3CkRnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU0KQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGRWRBVUJuSTRocG5RZHprUVlNT3N2czg1SzRtTUlHegpCZ05WSFJFRWdhc3dnYWlDS1hKbGJHVmhjMlV0Ym1GdFpTMWpjMmt0ZG1GMWJIUXRZMjl1ZEhKdmJHeGxjaTVrClpXWmhkV3gwZ2kxeVpXeGxZWE5sTFc1aGJXVXRZM05wTFhaaGRXeDBMV052Ym5SeWIyeHNaWEl1WkdWbVlYVnMKZEM1emRtT0NJM0psYkdWaGMyVXRibUZ0WlMxamMya3RkbUYxYkhRdGJtOWtaUzVrWldaaGRXeDBnaWR5Wld4bApZWE5sTFc1aGJXVXRZM05wTFhaaGRXeDBMVzV2WkdVdVpHVm1ZWFZzZEM1emRtTXdEUVlKS29aSWh2Y05BUUVMCkJRQURnZ0VCQUdlNkFJTE9ML3FmOXNYb3lnK2tDSVNOMVBJZHpFaVNhMkVDZTI2Y2JkSHJnV3M4ZDhyL05CeS8KaXJDdmNFMEpMbFhFU0ZDWnRBcEdsTERybHVyNWRFM2VCZCt2bXBjK0k0SlVSRnR2NHRkZVRxcjNGeUs5ODI0RwpHdmFRZzFuOWJjbW1pRkIyUEhDaG9mYUF5QmFTM0VxNnMzVldHK3M2b2FxYjhlR0E3K0VaeldUVDh3ZTNQeUNDCnpTRGdaL3JkLzJDMmpYQUxvSVM4R09iVk96MzRCSmxXdHBjTk1nVzhvbE9JQWx6L0REUmxSOTdIeVEwbGhrTlIKb1IxMHhlMWo2U2p5YTNEQm4vUTJUb3hkZUVFREFxVmUwajZzRy9rc2syUzhaOGo5QWw1OGc2eVdvbU50RmZhWgpZeDV0MUpaQS81VnJJbDRpWWRObEhkTlllRVVUWUdVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbjByN1BjTHJLamlTamQ2ZFZabGVuelpHRDdCQVdRS3cvY0t4QjRYWlh4ZVY3ZnRoCmZNOHFrV0VTRXJvMnVYWmw2R0F2TVJJKzBhK1pHSy9BNHNSNTh3ZGUrN0l2dnIzakVvbzA4eERBeUJWcG5GeisKRDI0TThFOVFzV1RaMGZFc3c5VmtlaHBMTnpmOFowY3pxbGh2UVFDUFhLdWg4K05NRXRMOGczMU5hK0xVaHpaRwpFQVZyVTJ1WDBUUWtYU2lrZkk5Zm4vbGxkYlVwMlNldGJoZC8wbmdBYkk3WkxtbWhQdE4rTzNzbVZJSWJHaTRVCi9MNVQ1bUxPQWJQN3h3VGQ4VC9JZ0I2WUZCdHdSeVZjYVNkelpvSHVNT20vZWlXSm1Pd2ROcmRheHlLNUxiNDcKY3dGSGcvWmFLYzRsUWxNM1lSOHZweDRVRis0NDhiMEloQW1KZndJREFRQUJBb0lCQUFHSUFQNUkvMlc2Z1g0bgpvNitNOStIajdheDg3MEZyeXpQRlNWcGZLUVhHL2tQNVpLaUVmVTVFZHA0RGVEODBLaXFmc2hSd3JuWHBrRGt5CmgxSW12VjFldHNVSW8zamI3bkRoTHowZTdodCtTVE9kbVR1Z3ZUTWFNQlprZDh1UzIvRk4vZGRHcFc1MGRWS3cKMW9oT3JWTWNwRVFweWpiRCtwazd1ZjJ4bUtydTBXV1dLZTBZcUpkNGd5OW4zV25aRDNUTWxueFBLZmdQZGpPegpTTGhlVHlpa09yZzhmZ1ZCN0pKMmY3ME9oWnVKQjNSUm1xYmk3b0lmblZBUXlTM3VoTXlCZGdFRFJnQksycGk3ClZWanY2NmVkQUtZa0ZHZFB6R2tubUxlRHhYL0k3VjYzSkhaT0ovRlR4RGhUVXpDdVFFeVRjOE9id0tBY1IxaUcKcmEyUXNoRUNnWUVBMGFsQjVmdkJoNlNHa3dYTm9kemRrTTdmQU1BYzFoL0RvbWo4eDVFQnpPUzdNd2RIcjBENgpYS0xqZUwvNzRiZjJvSlZYWjRicFdZOXdTRG5OblhiTnRRQTZ5RzlLWHhNVFJSZXF4K1RYekdEN1Y0SnhPTDQ3CnBEaDlweEdCTDd6TWFseG90T0tqQmxuRU0vSThEWUd1ZEhidUpIVkxINjRJMk1lU0pEUVZld3NDZ1lFQXduL2MKTVQ1SnRINS9LalkvK3VXd0lsMDJ3YWk5a0hhdXgvdFpEUU90RFpDR25ISEo1Mk5NWkNXcFBCMGVTWGJtNlUrVgpSR3cvci9TUG1qcHpSYVFMeWtDTzg2N0pQdDZORndsUGVaWjg3RXBXaUdhb1FSYmFrVWdNTFYwVzM2UERqWXByCnpYNDgxVWt5VlZEekFDNlZ2Qk85Z0pyYnpLV3JGUkhHMk5YbGs5MENnWUJCOU5ZM1RJam9iQml0M2RCLzBDU2YKcm9TM0RyakRuOENDc2paN2JhRzhYR1NMdkFtUUY0ZnJabzdhNk1LTGtyenliYWpPZDhHbkhCbTlqdm1oUk1PWAo0bGVid0c4TUU4c25IRGZzcEpCQ3ltdW5idkRCWWc4UExYcFIrWTdEZnNocjJXQlRMMDBMN1dkczFCS1NTUzZoCmt0eDkrYXhGYmhGNGFPZ1BuWmI0V3dLQmdRQ3c0SFFQT0RUdzlxU1FiN3RwWUozMzhrc01mSGEvdko2ZjhOei8KNzlyZFhoUjhpeUp3MGFXejRXZnc2ZzRVQXhSbEVtR05VdC9zRlB6TzVkN1VjeVhoclNvVFExMXlWaE42NHBXcQozZ2NISDJkb0xldFBIZ2h3WEZQdW9SeGZEdCtVaFZBYUZYWWZCS3pJVjVCVkZ3aEdmTEUyRmg1VEVrbnVKRGR3CkU3enU1UUtCZ0FXYWxiR0VIdDRaZEE1cjlIaUFWTUJLL0dNTXUzOHBKZ0FIdUtQLzZjcXRmeHd0Z1VmSXozNmwKSmt1Q29lZTZlN3djNS9zN2VFNi9ka2tpS0dYRVRGQThTT09Lb2xyU0xGWnIxVmVVbzdVdXFtNDVTVkt3ckx1NQpBaXMxTFpNYTJ3ZjdIUjEveVlqMzQrTlIwT05TYXhJR0U0Y3B1VmRzeTZGYTk2c3VwTm50Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-controller
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs:
      - get
      - list
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents
    verbs:
      - get
      - list
  - apiGroups:
      - storage.k8s.io
    resources:
      - csidrivers
      - csinodes
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - get
      - create
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - get
      - create
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - '*'
  - apiGroups:
      - appcatalog.appscode.com
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-attacher
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
      - list
      - watch
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-provisioner
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-node
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: node
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - '*'
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-node-registrar
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: node
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
      - list
      - watch
      - update
      - create
  - apiGroups:
      - csi.storage.k8s.io
    resources:
      - csidrivers
      - csinodeinfos
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - get
      - list
  - apiGroups:
      - appcatalog.appscode.com
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - get
      - create
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - get
      - create
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-controller
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
subjects:
  - kind: ServiceAccount
    name: release-name-csi-vault-controller
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-csi-vault-controller
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-attacher
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
subjects:
  - kind: ServiceAccount
    name: release-name-csi-vault-controller
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-csi-vault-attacher
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-provisioner
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
subjects:
  - kind: ServiceAccount
    name: release-name-csi-vault-controller
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-csi-vault-provisioner
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-node
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: node
subjects:
  - kind: ServiceAccount
    name: release-name-csi-vault-node
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-csi-vault-node
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-node-registrar
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: node
subjects:
  - kind: ServiceAccount
    name: release-name-csi-vault-node
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-csi-vault-node-registrar
  apiGroup: rbac.authorization.k8s.io
---
kind: Service
apiVersion: v1
metadata:
  name: release-name-csi-vault-controller
  namespace: jsg98JfdPqbCue
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
spec:
  selector:
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
  ports:
    - name: api
      port: 443
      targetPort: 8443
---
kind: Service
apiVersion: v1
metadata:
  name: release-name-csi-vault-node
  namespace: jsg98JfdPqbCue
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: node
spec:
  selector:
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: node
  ports:
    - name: api
      port: 443
      targetPort: 8443
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: release-name-csi-vault-node
  namespace: jsg98JfdPqbCue
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: node
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: csi-vault
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: csi-vault
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: node
      annotations:
        checksum/apiserver-cert.yaml: 586882be5bfe1233ea488210edafb078ed7770ca1e64c2e6cdb5cb5c184263e7
    spec:
      serviceAccount: release-name-csi-vault-node
      containers:
        - name: node-driver-registrar
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: quay.io/k8scsi/csi-node-driver-registrar:v1.1.0
          args:
            - --v=3
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/secrets.csi.kubevault.com/csi.sock
          imagePullPolicy: IfNotPresent
          resources: {}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: csi-vault-plugin
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
                - SYS_ADMIN
            privileged: true
            seccompProfile:
              type: RuntimeDefault
          image: kubevault/csi-vault:v0.3.0
          args:
            - run
            - --csi-address=unix:/csi/csi.sock
            - --node=$(NODE_NAME)
            - --v=3
            - --secure-port=8443
            - --tls-cert-file=/var/serving-cert/tls.crt
            - --tls-private-key-file=/var/serving-cert/tls.key
            - --use-kubeapiserver-fqdn-for-aks=true
            - --enable-analytics=true
          ports:
            - containerPort: 8443
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 10
          resources: {}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
            - name: device-dir
              mountPath: /dev
            - mountPath: /var/serving-cert
              name: serving-cert
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/secrets.csi.kubevault.com/
            type: DirectoryOrCreate
        - name: device-dir
          hostPath:
            path: /dev
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: release-name-csi-vault-apiserver-cert
      securityContext: {}
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: release-name-csi-vault-controller
  namespace: jsg98JfdPqbCue
  labels:
    helm.sh/chart: csi-vault-v0.3.0
    app.kubernetes.io/name: csi-vault
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
spec:
  serviceName: release-name-csi-vault-controller
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: csi-vault
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: csi-vault
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: controller
      annotations:
        checksum/apiserver-cert.yaml: 4ce4b6a86b3326f1cdff6b2c7a759cd0de0e3e8358380b2adefd9543d7144191
    spec:
      serviceAccount: release-name-csi-vault-controller
      containers:
        - name: csi-provisioner
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: quay.io/k8scsi/csi-provisioner:v1.3.0
          args:
            - --csi-address=/csi/csi.sock
            - --v=3
          imagePullPolicy: IfNotPresent
          resources: {}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-attacher
          securityContext: {}
          image: quay.io/k8scsi/csi-attacher:v1.2.0
          args:
            - --v=3
            - --csi-address=/csi/csi.sock
          imagePullPolicy: IfNotPresent
          resources: {}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-vault-plugin
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
                - SYS_ADMIN
            privileged: true
            seccompProfile:
              type: RuntimeDefault
          image: kubevault/csi-vault:v0.3.0
          args:
            - run
            - --csi-address=unix:/csi/csi.sock
            - --node=$(NODE_NAME)
            - --v=3
            - --secure-port=8443
            - --tls-cert-file=/var/serving-cert/tls.crt
            - --tls-private-key-file=/var/serving-cert/tls.key
            - --use-kubeapiserver-fqdn-for-aks=true
            - --enable-analytics=true
          ports:
            - containerPort: 8443
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              port: 8443
              path: /healthz
              scheme: HTTPS
            initialDelaySeconds: 10
          resources: {}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: serving-cert
              mountPath: /var/serving-cert
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: release-name-csi-vault-apiserver-cert
      securityContext: {}
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
---
apiVersion: storage.k8s.io/v1beta1
kind: CSIDriver
metadata:
  name: secrets.csi.kubevault.com
spec:
  attachRequired: false
  podInfoOnMount: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:appcatalog:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
rules:
  - apiGroups:
      - appcatalog.appscode.com
    resources:
      - '*'
    verbs:
      - '*'
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:appcatalog:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
rules:
  - apiGroups:
      - appcatalog.appscode.com
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
