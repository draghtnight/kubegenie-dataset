[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-cloud-console",
      "labels": {
        "app": "cloud-console",
        "chart": "cloud-console-1.0.7",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "tacomo.conf": "[system]\nservice.port=32000\nservice.proxyportlist=32001-32009\nservice.proxyurl.format=%REQUEST_HOST%:%REQUEST_PORT%\nservice.https.use=no\nservice.https.keystore=/home/tacomo/tacomo-webserver/conf/keystore.p12\nservice.https.keystore.type=PKCS12\nservice.https.keystore.password=password\nservice.https.keystore.alias=tacomo\nservice.https.ciphers=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA\nservice.https.enabledprotocols=TLSv1.2\nservice.db.backup.username=taco_backup\nservice.db.backup.password=!@#$nextpaas\nservice.db.restore.path=/home/tacomo/tacomo-webserver/dbdata/tacomodb_restore.db\nservice.db.restore.username=taco_restore\nservice.db.restore.password=nextpaas!@#$\nservice.versions=/home/tacomo/tacomo-webserver/versions.conf\n[logs]\nlog.level=LOG_DEBUG\nlog.path=/home/tacomo/tacomo-webserver/logs\nlog.max.file.size=64\nlog.max.history=3\n[ldap]\nldap.login.use=no\nldap.server.ip=218.36.252.193\nldap.server.port=32182\nldap.ssl.enable=no\nldap.ssl.cert.validation.skip=yes\nldap.user.dn.pattern=cn={0},dc=cluster,dc=local\nldap.conn.timeout=5\nldap.read.timeout=5\n[security]\nsecurity.session.timeout=60\n[kibana]\nkibana.authkey=elastic:tacoword\n[grafana]\ngrafana.authkey=admin:password\n[kubernetes]\nk8s.api.prometheusrule.url=/apis/monitoring.coreos.com/v1/namespaces/fed/prometheusrules\nk8s.api.loggingfilter.url=/apis/logging.kubesphere.io/v1alpha2/namespaces/lma/filters/kubernetes\nfilter.rule=yes\n[keycloak]\nkeycloak.enabled=yes\nkeycloak.url=http://keycloak.example.com/auth\nkeycloak.realm=taco\nkeycloak.clientId=cloud-console\nkeycloak.hasRealmRole1=lma_system\nkeycloak.hasRealmRole2=lma_app\nkeycloak.hasRealmRole3=lma_viewer\nkeycloak.cacert=\n[Lenz]\nlenz.url = http://lenz.example.com",
      "prometheusrule.json": "{\n  \"apiVersion\" : \"monitoring.coreos.com/v1\",\n  \"kind\" : \"PrometheusRule\",\n  \"metadata\" : {\n    \"annotations\":{ \n      \"prometheus-operator-validated\":\"true\"\n    },\n    \"name\" : \"\",\n    \"namespace\" : \"mon\"\n  },\n  \"spec\" : {\n    \"groups\" : [ {\n      \"name\" : \"\",\n      \"rules\" : [ {\n        \"alert\" : \"\",\n        \"annotations\" : {\n          \"message\" : \"\"\n        },\n        \"expr\" : \"\",\n        \"for\" : \"\",\n        \"labels\" : {\n          \"severity\" : \"\"\n        }\n      } ]\n    } ]\n  }\n}",
      "loggingfilter.json": "{\n  \"apiVersion\": \"logging.kubesphere.io/v1alpha2\",\n  \"kind\": \"Filter\",\n  \"metadata\": {\n    \"labels\": {\n      \"logging.kubesphere.io/enabled\": \"true\"\n    },\n    \"name\": \"%_filter_resource_name_%\",\n    \"namespace\": \"%_namespace_%\"\n  },\n  \"spec\": {\n    \"filters\": [\n      {\n        \"kubernetes\": {\n          \"annotations\": false,\n          \"kubeURL\": \"%_kube_api_url_%\",\n          \"labels\": false,\n          \"mergeLog\": true\n        }\n      },\n      {\n        \"nest\": {\n          \"addPrefix\": \"kubernetes_\",\n          \"nestedUnder\": \"kubernetes\",\n          \"operation\": \"lift\"\n        }\n      },\n      {\n        \"modify\": {\n          \"rules\": [\n            {\n              \"remove\": \"stream\"\n            },\n            {\n              \"remove\": \"kubernetes_pod_id\"\n            },\n            {\n              \"remove\": \"kubernetes_docker_id\"\n            },\n            {\n              \"remove\": \"kubernetes_container_hash\"\n            }\n          ]\n        }\n      },\n      {\n        \"nest\": {\n          \"nestUnder\": \"kubernetes\",\n          \"operation\": \"nest\",\n          \"removePrefix\": \"kubernetes_\",\n          \"wildcard\": [\n            \"kubernetes_*\"\n          ]\n        }\n      },\n      {\n        \"rewriteTag\": {\n          \"emitterName\": \"alertrule_match\",\n          \"emitterStorageType\": \"memory\",\n          \"rules\": [\n            {\n              \"keep\": true,\n              \"key\": \"$log\",\n              \"newTag\": \"m_critical.$TAG\",\n              \"regex\": \"(update.?error)\"\n            }\n          ]\n        }\n      }\n    ],\n    \"match\": \"kube.*\"\n  }\n}",
      "tacomodb_1.sql": "CREATE TABLE IF NOT EXISTS \"properties\" (\n  \"prop_key\"  TEXT NOT NULL,\n  \"prop_value\"  TEXT DEFAULT NULL,\n  PRIMARY KEY(\"prop_key\")\n);\nCREATE TABLE IF NOT EXISTS \"user\" (\n  \"id\"  TEXT NOT NULL,\n  \"passwd\"  TEXT NOT NULL,\n  PRIMARY KEY(\"id\")\n);\nCREATE TABLE IF NOT EXISTS \"cluster\" (\n  \"id\"  TEXT NOT NULL,\n  \"kibana_url\"  TEXT DEFAULT NULL,\n  \"grafana_url\"  TEXT DEFAULT NULL,\n  \"k8s_url\"  TEXT DEFAULT NULL,\n  \"k8s_token\"  TEXT DEFAULT NULL,\n  \"is_main\"  INTEGER NOT NULL DEFAULT 0,\n  \"main_page_type\"  TEXT DEFAULT NULL,\n  \"main_page_link\"  TEXT DEFAULT NULL,\n  \"k8s_page_type\"  TEXT DEFAULT NULL,\n  \"k8s_page_link\"  TEXT DEFAULT NULL,\n  \"openstack_page_type\"  TEXT DEFAULT NULL,\n  \"openstack_page_link\"  TEXT DEFAULT NULL,\n  \"ceph_page_type\"  TEXT DEFAULT NULL,\n  \"ceph_page_link\"  TEXT DEFAULT NULL,\n  \"k8s_ca_cert\"  TEXT DEFAULT NULL,\n  \"k8s_url_lenz\"  TEXT DEFAULT NULL,\n  PRIMARY KEY(\"id\")\n);\nCREATE TABLE IF NOT EXISTS \"cluster_menu\" (\n  \"cluster_id\"  TEXT NOT NULL,\n  \"id\"  INTEGER NOT NULL,\n  \"parent_id\"  INTEGER NOT NULL,\n  \"name\"  TEXT NOT NULL,\n  \"seq\"  INTEGER NOT NULL,\n  \"link\"  TEXT DEFAULT NULL,\n  \"url_type\"  TEXT DEFAULT NULL,\n  \"popup_type\"  TEXT DEFAULT NULL,\n  \"default_yn\"  INTEGER NOT NULL DEFAULT 1,\n  CONSTRAINT \"fk_cluster\" FOREIGN KEY(\"cluster_id\") REFERENCES \"cluster\"(\"id\") ON DELETE CASCADE,\n  PRIMARY KEY(\"cluster_id\",\"id\")\n);\nCREATE TABLE IF NOT EXISTS \"main_menu\" (\n  \"cluster_id\"  TEXT NOT NULL,\n  \"overview_yn\"  TEXT NOT NULL,\n  \"k8s_yn\"  TEXT NOT NULL,\n  \"openstack_yn\"  TEXT NOT NULL,\n  \"ceph_yn\"  TEXT NOT NULL,\n  PRIMARY KEY(\"cluster_id\")\n);\n/* INSERT DEFAULT PROPERTIES AND USER */\nINSERT INTO \"properties\" VALUES ('db_revision','1');\nINSERT INTO \"properties\" VALUES ('theme_type','light');\nINSERT INTO \"user\" VALUES ('taco','password');"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "name": "release-name-cloud-console-pvc",
      "labels": {
        "app": "cloud-console",
        "chart": "cloud-console-1.0.7",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "spec": {
      "storageClassName": "rbd",
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "limits": {
          "storage": "100Mi"
        },
        "requests": {
          "storage": "100Mi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cloud-console",
      "labels": {
        "app.kubernetes.io/name": "cloud-console",
        "helm.sh/chart": "cloud-console-1.0.7",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.4",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "NodePort",
      "ports": [
        {
          "port": 32000,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "cloud-console",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cloud-console-32001",
      "labels": {
        "app.kubernetes.io/name": "cloud-console",
        "helm.sh/chart": "cloud-console-1.0.7",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.4",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 32001,
          "targetPort": 32001,
          "protocol": "TCP",
          "name": "http-32001"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "cloud-console",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cloud-console-32002",
      "labels": {
        "app.kubernetes.io/name": "cloud-console",
        "helm.sh/chart": "cloud-console-1.0.7",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.4",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 32002,
          "targetPort": 32002,
          "protocol": "TCP",
          "name": "http-32002"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "cloud-console",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cloud-console-32003",
      "labels": {
        "app.kubernetes.io/name": "cloud-console",
        "helm.sh/chart": "cloud-console-1.0.7",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.4",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 32003,
          "targetPort": 32003,
          "protocol": "TCP",
          "name": "http-32003"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "cloud-console",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cloud-console-32004",
      "labels": {
        "app.kubernetes.io/name": "cloud-console",
        "helm.sh/chart": "cloud-console-1.0.7",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.4",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 32004,
          "targetPort": 32004,
          "protocol": "TCP",
          "name": "http-32004"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "cloud-console",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cloud-console-32005",
      "labels": {
        "app.kubernetes.io/name": "cloud-console",
        "helm.sh/chart": "cloud-console-1.0.7",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.4",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 32005,
          "targetPort": 32005,
          "protocol": "TCP",
          "name": "http-32005"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "cloud-console",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cloud-console-32006",
      "labels": {
        "app.kubernetes.io/name": "cloud-console",
        "helm.sh/chart": "cloud-console-1.0.7",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.4",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 32006,
          "targetPort": 32006,
          "protocol": "TCP",
          "name": "http-32006"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "cloud-console",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cloud-console-32007",
      "labels": {
        "app.kubernetes.io/name": "cloud-console",
        "helm.sh/chart": "cloud-console-1.0.7",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.4",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 32007,
          "targetPort": 32007,
          "protocol": "TCP",
          "name": "http-32007"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "cloud-console",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cloud-console-32008",
      "labels": {
        "app.kubernetes.io/name": "cloud-console",
        "helm.sh/chart": "cloud-console-1.0.7",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.4",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 32008,
          "targetPort": 32008,
          "protocol": "TCP",
          "name": "http-32008"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "cloud-console",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cloud-console-32009",
      "labels": {
        "app.kubernetes.io/name": "cloud-console",
        "helm.sh/chart": "cloud-console-1.0.7",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.4",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 32009,
          "targetPort": 32009,
          "protocol": "TCP",
          "name": "http-32009"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "cloud-console",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-cloud-console",
      "labels": {
        "app.kubernetes.io/name": "cloud-console",
        "helm.sh/chart": "cloud-console-1.0.7",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.4",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "cloud-console",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "cloud-console",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "watcher",
              "image": "sktdev/cloud-console:v1.0.4",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 32000,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 32000
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 32000
                }
              },
              "env": [
                {
                  "name": "TACOMODB_RESTORE_PATH",
                  "value": "/home/tacomo/tacomo-webserver/dbdata/tacomodb_restore.db"
                },
                {
                  "name": "VERSIONS_FILE",
                  "value": "/home/tacomo/tacomo-webserver/versions.conf"
                }
              ],
              "volumeMounts": [
                {
                  "name": "conf",
                  "mountPath": "/home/tacomo/tacomo-webserver/conf/tacomo.conf",
                  "subPath": "tacomo.conf"
                },
                {
                  "name": "conf",
                  "mountPath": "/home/tacomo/tacomo-webserver/conf/loggingfilter.json",
                  "subPath": "loggingfilter.json"
                },
                {
                  "name": "conf",
                  "mountPath": "/home/tacomo/tacomo-webserver/conf/prometheusrule.json",
                  "subPath": "prometheusrule.json"
                },
                {
                  "name": "sql",
                  "mountPath": "/home/tacomo/tacomo-webserver/sql/tacomodb_1.sql",
                  "subPath": "tacomodb_1.sql"
                },
                {
                  "name": "db-volume",
                  "mountPath": "/home/tacomo/tacomo-webserver/dbdata"
                },
                {
                  "name": "log-volume",
                  "mountPath": "/home/tacomo/tacomo-webserver/logs"
                },
                {
                  "name": "taco-system-version",
                  "mountPath": "/home/tacomo/tacomo-webserver/.version"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "conf",
              "configMap": {
                "name": "release-name-cloud-console",
                "items": [
                  {
                    "key": "tacomo.conf",
                    "path": "tacomo.conf"
                  },
                  {
                    "key": "loggingfilter.json",
                    "path": "loggingfilter.json"
                  },
                  {
                    "key": "prometheusrule.json",
                    "path": "prometheusrule.json"
                  }
                ]
              }
            },
            {
              "name": "sql",
              "configMap": {
                "name": "release-name-cloud-console",
                "items": [
                  {
                    "key": "tacomodb_1.sql",
                    "path": "tacomodb_1.sql"
                  }
                ]
              }
            },
            {
              "name": "db-volume",
              "persistentVolumeClaim": {
                "claimName": "release-name-cloud-console-pvc"
              }
            },
            {
              "name": "log-volume",
              "hostPath": {
                "path": "/tmp",
                "type": "Directory"
              }
            },
            {
              "name": "taco-system-version",
              "configMap": {
                "name": "taco-system-version"
              }
            }
          ],
          "securityContext": {
            "runAsUser": 1000,
            "runAsGroup": 1000,
            "fsGroup": 1000
          }
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-cloud-console-test-connection",
      "labels": {
        "app.kubernetes.io/name": "cloud-console",
        "helm.sh/chart": "cloud-console-1.0.7",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.4",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "test",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-cloud-console:32000"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]