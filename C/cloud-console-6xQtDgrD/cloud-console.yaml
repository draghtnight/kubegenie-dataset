apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-cloud-console
  labels:
    app: cloud-console
    chart: cloud-console-1.0.7
    heritage: Helm
    release: release-name
data:
  tacomo.conf: |-
    [system]
    service.port=32000
    service.proxyportlist=32001-32009
    service.proxyurl.format=%REQUEST_HOST%:%REQUEST_PORT%
    service.https.use=no
    service.https.keystore=/home/tacomo/tacomo-webserver/conf/keystore.p12
    service.https.keystore.type=PKCS12
    service.https.keystore.password=password
    service.https.keystore.alias=tacomo
    service.https.ciphers=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA
    service.https.enabledprotocols=TLSv1.2
    service.db.backup.username=taco_backup
    service.db.backup.password=!@#$nextpaas
    service.db.restore.path=/home/tacomo/tacomo-webserver/dbdata/tacomodb_restore.db
    service.db.restore.username=taco_restore
    service.db.restore.password=nextpaas!@#$
    service.versions=/home/tacomo/tacomo-webserver/versions.conf
    [logs]
    log.level=LOG_DEBUG
    log.path=/home/tacomo/tacomo-webserver/logs
    log.max.file.size=64
    log.max.history=3
    [ldap]
    ldap.login.use=no
    ldap.server.ip=218.36.252.193
    ldap.server.port=32182
    ldap.ssl.enable=no
    ldap.ssl.cert.validation.skip=yes
    ldap.user.dn.pattern=cn={0},dc=cluster,dc=local
    ldap.conn.timeout=5
    ldap.read.timeout=5
    [security]
    security.session.timeout=60
    [kibana]
    kibana.authkey=elastic:tacoword
    [grafana]
    grafana.authkey=admin:password
    [kubernetes]
    k8s.api.prometheusrule.url=/apis/monitoring.coreos.com/v1/namespaces/fed/prometheusrules
    k8s.api.loggingfilter.url=/apis/logging.kubesphere.io/v1alpha2/namespaces/lma/filters/kubernetes
    filter.rule=yes
    [keycloak]
    keycloak.enabled=yes
    keycloak.url=http://keycloak.example.com/auth
    keycloak.realm=taco
    keycloak.clientId=cloud-console
    keycloak.hasRealmRole1=lma_system
    keycloak.hasRealmRole2=lma_app
    keycloak.hasRealmRole3=lma_viewer
    keycloak.cacert=
    [Lenz]
    lenz.url = http://lenz.example.com
  prometheusrule.json: "{\n  \"apiVersion\" : \"monitoring.coreos.com/v1\",\n  \"kind\" : \"PrometheusRule\",\n  \"metadata\" : {\n    \"annotations\":{ \n      \"prometheus-operator-validated\":\"true\"\n    },\n    \"name\" : \"\",\n    \"namespace\" : \"mon\"\n  },\n  \"spec\" : {\n    \"groups\" : [ {\n      \"name\" : \"\",\n      \"rules\" : [ {\n        \"alert\" : \"\",\n        \"annotations\" : {\n          \"message\" : \"\"\n        },\n        \"expr\" : \"\",\n        \"for\" : \"\",\n        \"labels\" : {\n          \"severity\" : \"\"\n        }\n      } ]\n    } ]\n  }\n}"
  loggingfilter.json: |-
    {
      "apiVersion": "logging.kubesphere.io/v1alpha2",
      "kind": "Filter",
      "metadata": {
        "labels": {
          "logging.kubesphere.io/enabled": "true"
        },
        "name": "%_filter_resource_name_%",
        "namespace": "%_namespace_%"
      },
      "spec": {
        "filters": [
          {
            "kubernetes": {
              "annotations": false,
              "kubeURL": "%_kube_api_url_%",
              "labels": false,
              "mergeLog": true
            }
          },
          {
            "nest": {
              "addPrefix": "kubernetes_",
              "nestedUnder": "kubernetes",
              "operation": "lift"
            }
          },
          {
            "modify": {
              "rules": [
                {
                  "remove": "stream"
                },
                {
                  "remove": "kubernetes_pod_id"
                },
                {
                  "remove": "kubernetes_docker_id"
                },
                {
                  "remove": "kubernetes_container_hash"
                }
              ]
            }
          },
          {
            "nest": {
              "nestUnder": "kubernetes",
              "operation": "nest",
              "removePrefix": "kubernetes_",
              "wildcard": [
                "kubernetes_*"
              ]
            }
          },
          {
            "rewriteTag": {
              "emitterName": "alertrule_match",
              "emitterStorageType": "memory",
              "rules": [
                {
                  "keep": true,
                  "key": "$log",
                  "newTag": "m_critical.$TAG",
                  "regex": "(update.?error)"
                }
              ]
            }
          }
        ],
        "match": "kube.*"
      }
    }
  tacomodb_1.sql: |-
    CREATE TABLE IF NOT EXISTS "properties" (
      "prop_key"  TEXT NOT NULL,
      "prop_value"  TEXT DEFAULT NULL,
      PRIMARY KEY("prop_key")
    );
    CREATE TABLE IF NOT EXISTS "user" (
      "id"  TEXT NOT NULL,
      "passwd"  TEXT NOT NULL,
      PRIMARY KEY("id")
    );
    CREATE TABLE IF NOT EXISTS "cluster" (
      "id"  TEXT NOT NULL,
      "kibana_url"  TEXT DEFAULT NULL,
      "grafana_url"  TEXT DEFAULT NULL,
      "k8s_url"  TEXT DEFAULT NULL,
      "k8s_token"  TEXT DEFAULT NULL,
      "is_main"  INTEGER NOT NULL DEFAULT 0,
      "main_page_type"  TEXT DEFAULT NULL,
      "main_page_link"  TEXT DEFAULT NULL,
      "k8s_page_type"  TEXT DEFAULT NULL,
      "k8s_page_link"  TEXT DEFAULT NULL,
      "openstack_page_type"  TEXT DEFAULT NULL,
      "openstack_page_link"  TEXT DEFAULT NULL,
      "ceph_page_type"  TEXT DEFAULT NULL,
      "ceph_page_link"  TEXT DEFAULT NULL,
      "k8s_ca_cert"  TEXT DEFAULT NULL,
      "k8s_url_lenz"  TEXT DEFAULT NULL,
      PRIMARY KEY("id")
    );
    CREATE TABLE IF NOT EXISTS "cluster_menu" (
      "cluster_id"  TEXT NOT NULL,
      "id"  INTEGER NOT NULL,
      "parent_id"  INTEGER NOT NULL,
      "name"  TEXT NOT NULL,
      "seq"  INTEGER NOT NULL,
      "link"  TEXT DEFAULT NULL,
      "url_type"  TEXT DEFAULT NULL,
      "popup_type"  TEXT DEFAULT NULL,
      "default_yn"  INTEGER NOT NULL DEFAULT 1,
      CONSTRAINT "fk_cluster" FOREIGN KEY("cluster_id") REFERENCES "cluster"("id") ON DELETE CASCADE,
      PRIMARY KEY("cluster_id","id")
    );
    CREATE TABLE IF NOT EXISTS "main_menu" (
      "cluster_id"  TEXT NOT NULL,
      "overview_yn"  TEXT NOT NULL,
      "k8s_yn"  TEXT NOT NULL,
      "openstack_yn"  TEXT NOT NULL,
      "ceph_yn"  TEXT NOT NULL,
      PRIMARY KEY("cluster_id")
    );
    /* INSERT DEFAULT PROPERTIES AND USER */
    INSERT INTO "properties" VALUES ('db_revision','1');
    INSERT INTO "properties" VALUES ('theme_type','light');
    INSERT INTO "user" VALUES ('taco','password');
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-cloud-console-pvc
  labels:
    app: cloud-console
    chart: cloud-console-1.0.7
    heritage: Helm
    release: release-name
spec:
  storageClassName: rbd
  accessModes:
    - ReadWriteOnce
  resources:
    limits:
      storage: 100Mi
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cloud-console
  labels:
    app.kubernetes.io/name: cloud-console
    helm.sh/chart: cloud-console-1.0.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 32000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: cloud-console
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cloud-console-32001
  labels:
    app.kubernetes.io/name: cloud-console
    helm.sh/chart: cloud-console-1.0.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 32001
      targetPort: 32001
      protocol: TCP
      name: http-32001
  selector:
    app.kubernetes.io/name: cloud-console
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cloud-console-32002
  labels:
    app.kubernetes.io/name: cloud-console
    helm.sh/chart: cloud-console-1.0.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 32002
      targetPort: 32002
      protocol: TCP
      name: http-32002
  selector:
    app.kubernetes.io/name: cloud-console
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cloud-console-32003
  labels:
    app.kubernetes.io/name: cloud-console
    helm.sh/chart: cloud-console-1.0.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 32003
      targetPort: 32003
      protocol: TCP
      name: http-32003
  selector:
    app.kubernetes.io/name: cloud-console
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cloud-console-32004
  labels:
    app.kubernetes.io/name: cloud-console
    helm.sh/chart: cloud-console-1.0.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 32004
      targetPort: 32004
      protocol: TCP
      name: http-32004
  selector:
    app.kubernetes.io/name: cloud-console
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cloud-console-32005
  labels:
    app.kubernetes.io/name: cloud-console
    helm.sh/chart: cloud-console-1.0.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 32005
      targetPort: 32005
      protocol: TCP
      name: http-32005
  selector:
    app.kubernetes.io/name: cloud-console
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cloud-console-32006
  labels:
    app.kubernetes.io/name: cloud-console
    helm.sh/chart: cloud-console-1.0.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 32006
      targetPort: 32006
      protocol: TCP
      name: http-32006
  selector:
    app.kubernetes.io/name: cloud-console
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cloud-console-32007
  labels:
    app.kubernetes.io/name: cloud-console
    helm.sh/chart: cloud-console-1.0.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 32007
      targetPort: 32007
      protocol: TCP
      name: http-32007
  selector:
    app.kubernetes.io/name: cloud-console
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cloud-console-32008
  labels:
    app.kubernetes.io/name: cloud-console
    helm.sh/chart: cloud-console-1.0.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 32008
      targetPort: 32008
      protocol: TCP
      name: http-32008
  selector:
    app.kubernetes.io/name: cloud-console
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cloud-console-32009
  labels:
    app.kubernetes.io/name: cloud-console
    helm.sh/chart: cloud-console-1.0.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 32009
      targetPort: 32009
      protocol: TCP
      name: http-32009
  selector:
    app.kubernetes.io/name: cloud-console
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cloud-console
  labels:
    app.kubernetes.io/name: cloud-console
    helm.sh/chart: cloud-console-1.0.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloud-console
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloud-console
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: watcher
          image: sktdev/cloud-console:v1.0.4
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 32000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 32000
          readinessProbe:
            httpGet:
              path: /
              port: 32000
          env:
            - name: TACOMODB_RESTORE_PATH
              value: /home/tacomo/tacomo-webserver/dbdata/tacomodb_restore.db
            - name: VERSIONS_FILE
              value: /home/tacomo/tacomo-webserver/versions.conf
          volumeMounts:
            - name: conf
              mountPath: /home/tacomo/tacomo-webserver/conf/tacomo.conf
              subPath: tacomo.conf
            - name: conf
              mountPath: /home/tacomo/tacomo-webserver/conf/loggingfilter.json
              subPath: loggingfilter.json
            - name: conf
              mountPath: /home/tacomo/tacomo-webserver/conf/prometheusrule.json
              subPath: prometheusrule.json
            - name: sql
              mountPath: /home/tacomo/tacomo-webserver/sql/tacomodb_1.sql
              subPath: tacomodb_1.sql
            - name: db-volume
              mountPath: /home/tacomo/tacomo-webserver/dbdata
            - name: log-volume
              mountPath: /home/tacomo/tacomo-webserver/logs
            - name: taco-system-version
              mountPath: /home/tacomo/tacomo-webserver/.version
      volumes:
        - name: conf
          configMap:
            name: release-name-cloud-console
            items:
              - key: tacomo.conf
                path: tacomo.conf
              - key: loggingfilter.json
                path: loggingfilter.json
              - key: prometheusrule.json
                path: prometheusrule.json
        - name: sql
          configMap:
            name: release-name-cloud-console
            items:
              - key: tacomodb_1.sql
                path: tacomodb_1.sql
        - name: db-volume
          persistentVolumeClaim:
            claimName: release-name-cloud-console-pvc
        - name: log-volume
          hostPath:
            path: /tmp
            type: Directory
        - name: taco-system-version
          configMap:
            name: taco-system-version
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-cloud-console-test-connection
  labels:
    app.kubernetes.io/name: cloud-console
    helm.sh/chart: cloud-console-1.0.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.4
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: test
      image: busybox
      command:
        - wget
      args:
        - release-name-cloud-console:32000
  restartPolicy: Never
