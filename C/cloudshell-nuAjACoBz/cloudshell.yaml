apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloudshell
  labels:
    helm.sh/chart: cloudshell-4.0.8
    app.kubernetes.io/name: cloudshell
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudshell-configmapgit
  labels:
    helm.sh/chart: cloudshell-4.0.8
    app.kubernetes.io/name: cloudshell
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
data:
  GIT_USER_NAME: ""
  GIT_USER_MAIL: ""
  GIT_CREDENTIALS_CACHE_DURATION: ""
  GIT_PERSONAL_ACCESS_TOKEN: ""
  GIT_REPOSITORY: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudshell-configmaps3
  labels:
    helm.sh/chart: cloudshell-4.0.8
    app.kubernetes.io/name: cloudshell
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
data:
  AWS_ACCESS_KEY_ID: ""
  AWS_S3_ENDPOINT: ""
  S3_ENDPOINT: https:///
  AWS_DEFAULT_REGION: ""
  AWS_SECRET_ACCESS_KEY: ""
  AWS_SESSION_TOKEN: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudshell-configmapvault
  labels:
    helm.sh/chart: cloudshell-4.0.8
    app.kubernetes.io/name: cloudshell
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
data:
  VAULT_ADDR: ""
  VAULT_TOKEN: ""
  VAULT_RELATIVE_PATH: ""
  VAULT_TOP_DIR: ""
  VAULT_MOUNT: ""
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cloudshell
  labels:
    helm.sh/chart: cloudshell-4.0.8
    app.kubernetes.io/name: cloudshell
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: cloudshell
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: cloudshell
  labels:
    helm.sh/chart: cloudshell-4.0.8
    app.kubernetes.io/name: cloudshell
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: cloudshell
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cloudshell
  labels:
    helm.sh/chart: cloudshell-4.0.8
    app.kubernetes.io/name: cloudshell
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudshell
      app.kubernetes.io/instance: release-name
  serviceName: nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudshell
        app.kubernetes.io/instance: release-name
    spec:
      volumes:
        - name: cloudshell-data
          emptyDir: {}
      serviceAccountName: cloudshell
      securityContext: {}
      containers:
        - name: cloudshell
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: inseefrlab/shelly:cloudshell
          command:
            - /bin/sh
            - -c
          args:
            - /data/onyxia-init.sh && /usr/sbin/sshd ; node /root/webssh2/app/index.js
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: cloudshell-configmaps3
            - configMapRef:
                name: cloudshell-configmapvault
            - configMapRef:
                name: cloudshell-configmapgit
          ports:
            - name: http
              containerPort: 2222
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /data
              name: cloudshell-data
            - name: data
              mountPath: /root/work
      initContainers:
        - name: standard-init
          image: busybox
          command:
            - /bin/sh
            - -c
          args:
            - wget -O /data/onyxia-init.sh https://git.lab.sspcloud.fr/innovation/plateforme-onyxia/services-ressources/-/raw/master/onyxia-init.sh && chmod +x /data/onyxia-init.sh
          volumeMounts:
            - mountPath: /data
              name: cloudshell-data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cloudshell
  labels:
    helm.sh/chart: cloudshell-4.0.8
    app.kubernetes.io/name: cloudshell
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
spec:
  tls:
    - hosts:
        - chart-example.local
  rules:
    - host: chart-example.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cloudshell
                port:
                  number: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: cloudshell-test-connection
  labels:
    helm.sh/chart: cloudshell-4.0.8
    app.kubernetes.io/name: cloudshell
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - 'cloudshell:'
  restartPolicy: Never
