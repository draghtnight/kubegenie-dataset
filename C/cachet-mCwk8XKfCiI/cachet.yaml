apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgresql-password: QTMwR3g3eUNpeA==
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-cachet
  labels:
    app.kubernetes.io/name: cachet
    helm.sh/chart: cachet-1.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.3.15
    app.kubernetes.io/managed-by: Helm
data:
  DB_PASSWORD: null
  APP_KEY: null
  MAIL_PASSWORD: null
  MAIL_USERNAME: null
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-cachet
  labels:
    app.kubernetes.io/name: cachet
    helm.sh/chart: cachet-1.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.3.15
    app.kubernetes.io/managed-by: Helm
data:
  DB_HOST: cachet-db.example.com
  DB_DATABASE: cachet
  DB_USERNAME: cachet
  DB_DRIVER: pgsql
  DB_PORT: "5432"
  APP_ENV: production
  APP_URL: chart-example.local
  APP_DEBUG: "false"
  APP_LOG: errorlog
  CACHET_BEACON: "false"
  CACHET_EMOJI: "false"
  CACHE_DRIVER: database
  DOCKER: "true"
  MAIL_ADDRESS: ""
  MAIL_DRIVER: smtp
  MAIL_ENCRYPTION: tls
  MAIL_HOST: ""
  MAIL_NAME: ""
  MAIL_PORT: "25"
  QUEUE_DRIVER: database
  SESSION_DRIVER: database
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: master
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cachet
  labels:
    app.kubernetes.io/name: cachet
    helm.sh/chart: cachet-1.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.3.15
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: cachet
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cachet
  labels:
    app.kubernetes.io/name: cachet
    helm.sh/chart: cachet-1.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.3.15
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cachet
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cachet
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: f44300b7cfd3f1d6bc479f7710fa01958b3331d9ef1fda867de7b9b7d51705e3
        checksum/secret: da4c1425a3df40c29d8669d6d8e84a4c7c716b4ee76847cea27cebd97193609c
    spec:
      containers:
        - name: cachet
          image: cachethq/docker:2.3.15
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/ping
              port: http
          readinessProbe:
            httpGet:
              path: /api/v1/ping
              port: http
          envFrom:
            - configMapRef:
                name: release-name-cachet
            - secretRef:
                name: release-name-cachet
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: master
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-9.1.4
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: master
    spec:
      securityContext:
        fsGroup: 1001
      containers:
        - name: release-name-postgresql
          image: docker.io/bitnami/postgresql:11.8.0-debian-10-r76
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          securityContext:
            runAsUser: 10464
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: null
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-cachet-test-connection
  labels:
    app.kubernetes.io/name: cachet
    helm.sh/chart: cachet-1.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.3.15
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - sh
        - -c
      args:
        - sleep 40 && wget 'release-name-cachet:80/api/v1/ping'
  restartPolicy: Never
