apiVersion: v1
kind: ServiceAccount
metadata:
  name: ctms
  labels:
    helm.sh/chart: ctms-0.0.17
    app.kubernetes.io/name: ctms
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Secret
metadata:
  name: ctms
data:
  CTMS_DB_URL: cG9zdGdyZXM6Ly9jdG1zOmRlZmF1bHRwYXNzd29yZEBwb3N0Z3Jlczo1NDMyL2N0bXM=
  CTMS_SECRET_KEY: dGhpcy1pcy1ub3QtdGhlLXByb2R1Y3Rpb24tdmFsdWU=
  CTMS_ACOUSTIC_LOOP_MIN_SECS: NQ==
  CTMS_ACOUSTIC_SYNC_FEATURE_FLAG: ZmFsc2U=
  CTMS_ACOUSTIC_INTEGRATION_FEATURE_FLAG: ZmFsc2U=
  CTMS_ACOUSTIC_MAIN_TABLE_ID: MTExMTE=
  CTMS_ACOUSTIC_NEWSLETTER_TABLE_ID: MTExMTE=
  CTMS_ACOUSTIC_CLIENT_ID: ZmFrZWNsaWVudGlk
  CTMS_ACOUSTIC_CLIENT_SECRET: ZmFrZWNsaWVudHNlY3JldA==
  CTMS_ACOUSTIC_REFRESH_TOKEN: ZmFrZXJlZnJlc2h0b2tlbg==
  CTMS_PROMETHEUS_PUSHGATEWAY_URL: cHJvbWV0aGV1cy1wdXNoZ2F0ZXdheQ==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ctms
data:
  DJANGO_ALLOWED_HOSTS: '*'
---
apiVersion: v1
kind: Service
metadata:
  name: ctms
  labels:
    helm.sh/chart: ctms-0.0.17
    app.kubernetes.io/name: ctms
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: web
    app.kubernetes.io/name: ctms
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ctms-background
  labels:
    app.kubernetes.io/component: background
    helm.sh/chart: ctms-0.0.17
    app.kubernetes.io/name: ctms
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: background
      app.kubernetes.io/name: ctms
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8000"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/component: background
        app.kubernetes.io/name: ctms
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: ctms
      securityContext: null
      containers:
        - name: ctms
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          image: 497417544945.dkr.ecr.us-west-2.amazonaws.com/ctms:0.0.1
          command:
            - python
          args:
            - ctms/bin/acoustic_sync.py
          livenessProbe:
            exec:
              command:
                - python3
                - /app/ctms/bin/healthcheck_sync.py
            initialDelaySeconds: 60
            periodSeconds: 30
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 100m
              memory: 128Mi
          envFrom:
            - configMapRef:
                name: ctms
            - secretRef:
                name: ctms
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ctms-web
  labels:
    app.kubernetes.io/component: web
    helm.sh/chart: ctms-0.0.17
    app.kubernetes.io/name: ctms
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: web
      app.kubernetes.io/name: ctms
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8000"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/component: web
        app.kubernetes.io/name: ctms
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: ctms
      securityContext: null
      containers:
        - name: ctms
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          image: 497417544945.dkr.ecr.us-west-2.amazonaws.com/ctms:0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /__lbheartbeat__
              port: http
          readinessProbe:
            httpGet:
              path: /__lbheartbeat__
              port: http
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 100m
              memory: 128Mi
          envFrom:
            - configMapRef:
                name: ctms
            - secretRef:
                name: ctms
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: ctms
  labels:
    helm.sh/chart: ctms-0.0.17
    app.kubernetes.io/name: ctms
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ctms-web
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 70
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ctms
  labels:
    helm.sh/chart: ctms-0.0.17
    app.kubernetes.io/name: ctms
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: ctms.mozilla.com
      http:
        paths:
          - path: /
            backend:
              serviceName: ctms
              servicePort: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: ctms-hook
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-10"
    helm.sh/hook-delete-policy: hook-succeeded
data:
  CTMS_DB_URL: cG9zdGdyZXM6Ly9jdG1zOmRlZmF1bHRwYXNzd29yZEBwb3N0Z3Jlczo1NDMyL2N0bXM=
  CTMS_SECRET_KEY: dGhpcy1pcy1ub3QtdGhlLXByb2R1Y3Rpb24tdmFsdWU=
---
apiVersion: v1
kind: Pod
metadata:
  name: ctms-test-connection
  labels:
    helm.sh/chart: ctms-0.0.17
    app.kubernetes.io/name: ctms
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command:
        - curl
      args:
        - -L
        - ctms:80
  restartPolicy: Never
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ctms
  labels:
    helm.sh/chart: ctms-0.0.17
    app.kubernetes.io/name: ctms
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: release-name
    spec:
      restartPolicy: Never
      containers:
        - name: ctms-db-migration
          image: 497417544945.dkr.ecr.us-west-2.amazonaws.com/ctms:0.0.1
          command:
            - python
            - -m
            - alembic
            - upgrade
            - head
          envFrom:
            - secretRef:
                name: ctms-hook
