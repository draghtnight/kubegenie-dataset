apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-cert-manager-csi-driver-cacerts
  namespace: Jc2WWVz
  labels:
    helm.sh/chart: cert-manager-csi-driver-cacerts-v2022.04.04
    app.kubernetes.io/name: cert-manager-csi-driver-cacerts
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.0.1
    app.kubernetes.io/managed-by: Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-csi-driver-cacerts
  namespace: default
  labels:
    helm.sh/chart: cert-manager-csi-driver-cacerts-v2022.04.04
    app.kubernetes.io/name: cert-manager-csi-driver-cacerts
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.0.1
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - watch
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - watch
      - get
      - list
  - apiGroups:
      - cert-manager.io
    resources:
      - issuers
      - clusterissuers
      - certificates
    verbs:
      - watch
      - get
      - list
  - apiGroups:
      - cacerts.csi.cert-manager.io
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-csi-driver-cacerts
  namespace: default
  labels:
    helm.sh/chart: cert-manager-csi-driver-cacerts-v2022.04.04
    app.kubernetes.io/name: cert-manager-csi-driver-cacerts
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.0.1
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-csi-driver-cacerts
subjects:
  - kind: ServiceAccount
    name: release-name-cert-manager-csi-driver-cacerts
    namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-cert-manager-csi-driver-cacerts
  namespace: Jc2WWVz
  labels:
    helm.sh/chart: cert-manager-csi-driver-cacerts-v2022.04.04
    app.kubernetes.io/name: cert-manager-csi-driver-cacerts
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager-csi-driver-cacerts
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cert-manager-csi-driver-cacerts
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: cert-manager-csi-driver-cacerts
      containers:
        - name: node-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - rm -rf /registration/cert-manager-csi-driver-cacerts /registration/cert-manager-csi-driver-cacerts-reg.sock
          args:
            - -v=2
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/cert-manager-csi-driver-cacerts/csi.sock
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /registration
              name: registration-dir
          resources:
            seccompProfile:
              type: RuntimeDefault
        - name: liveness-probe
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.4.0
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=9809
            - -v=2
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: driver
          image: appscode/csi-driver-cacerts:v0.0.1
          args:
            - -v=2
            - --drivername=cacerts.csi.cert-manager.io
            - --endpoint=$(CSI_ENDPOINT)
            - --nodeid=$(KUBE_NODE_NAME)
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          ports:
            - containerPort: 9809
              name: healthz
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /var/lib/containers/storage
              mountPropagation: Bidirectional
              name: storageroot-dir
            - mountPath: /var/run/containers/storage
              mountPropagation: Bidirectional
              name: storagerunroot-dir
          resources: {}
      tolerations: []
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/cert-manager-csi-driver-cacerts
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/containers/storage
            type: DirectoryOrCreate
          name: storageroot-dir
        - hostPath:
            path: /var/run/containers/storage
            type: DirectoryOrCreate
          name: storagerunroot-dir
---
apiVersion: storage.k8s.io/v1beta1
kind: CSIDriver
metadata:
  name: cacerts.csi.cert-manager.io
  labels:
    helm.sh/chart: cert-manager-csi-driver-cacerts-v2022.04.04
    app.kubernetes.io/name: cert-manager-csi-driver-cacerts
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  attachRequired: false
  podInfoOnMount: true
  volumeLifecycleModes:
    - Ephemeral
  fsGroupPolicy: File
