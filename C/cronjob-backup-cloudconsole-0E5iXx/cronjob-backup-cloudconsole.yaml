apiVersion: v1
kind: Secret
metadata:
  name: release-name-secret
  labels:
    helm.sh/chart: cronjob-backup-cloudconsole-1.0.0
    app.kubernetes.io/name: cronjob-backup-cloudconsole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0
type: Opaque
data:
  password: bnBpbmZyYTEh
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-sh
  labels:
    helm.sh/chart: cronjob-backup-cloudconsole-1.0.0
    app.kubernetes.io/name: cronjob-backup-cloudconsole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0
data:
  transfer.sh: |-
    #!/bin/bash
    echo -e "Setup environment for backup...\n"

    # backup variables
    BACKUP_DATE="${BACKUP_DATE:-$( date '+%Y%m%d-%H%M%S' )}"
    TARGET_FILE_FORMAT="./tacomodb-backup-%BACKUP_DATE%.db"
    TARGET_FILE="$( echo $TARGET_FILE_FORMAT | sed "s/%BACKUP_DATE%/${BACKUP_DATE}/g" )"
    TARGET_FILE_LATEST="$( echo $TARGET_FILE_FORMAT | sed "s/%BACKUP_DATE%/latest/g" )"
    DOWNLOAD_TACOMODB_URL="http://btvpaas-dev-cloudconsole.skbroadband.com/api/auth/downloadTacomoDb"

    # ssh/scp command variables
    BACKUP_SERVER_PASSWORD_PATH="${BACKUP_SERVER_PASSWORD_PATH:-/dev/null}"
    SSH_OPTS="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
    SSSH="sshpass -f ${BACKUP_SERVER_PASSWORD_PATH} ssh ${SSH_OPTS} "
    SSCP="sshpass -f ${BACKUP_SERVER_PASSWORD_PATH} scp ${SSH_OPTS} "

    # change working directory : backup directory
    cd /app/cloudconsole
    echo -e "-------------------------------------\n\n"

    # get cloudconsole db file
    echo -e "Get Cloud Console DB file...\n"
    echo "Target file : ${TARGET_FILE}"
    echo "Target file(latest) : ${TARGET_FILE_LATEST}"
    curl -s ${DOWNLOAD_TACOMODB_URL} 2>/tmp/backup.err >${TARGET_FILE}
    if [ -s /tmp/backup.err ]; then
      echo -e "*** Error backup cloud console database; \n"
      cat /tmp/backup.err && rm -f $_
      exit 1
    fi

    # set destination hosts and ssh key
    DESTS=(
      "doj-dev@10.10.217.20"
    )
    DEST_DIR="cloudconsole_bak"

    for dest in ${DESTS[@]}; do
      echo "Copy Cloud Console database backup file to [ ${DEST_DIR} in ${dest} ]..."
      ${SSSH} ${dest} "mkdir -p ${DEST_DIR}"
      ${SSCP} /app/cloudconsole/* ${dest}:${DEST_DIR}
      ${SSCP} /app/cloudconsole/* ${dest}:${DEST_DIR}/${TARGET_FILE_LATEST}
    done

    echo -e "-------------------------------------\n\n"
    echo -e "\nDone to backup cloud-console database file. Backup date : [ $( date '+%Y/%m/%d %H:%M:%S' ) ]"
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name
  labels:
    helm.sh/chart: cronjob-backup-cloudconsole-1.0.0
    app.kubernetes.io/name: cronjob-backup-cloudconsole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0
spec:
  schedule: '* */1 * * *'
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            helm.sh/chart: cronjob-backup-cloudconsole-1.0.0
            app.kubernetes.io/name: cronjob-backup-cloudconsole
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/version: 1.0.0
        spec:
          containers:
            - image: pseudojo/docker-sshd-with-curl:alpine3.12
              imagePullPolicy: Always
              name: transfer
              command:
                - /app/shell/transfer.sh
              env:
                - name: BACKUP_SERVER_PASSWORD_PATH
                  value: /app/.password
              volumeMounts:
                - name: shared-data
                  mountPath: /app/cloudconsole
                - name: transfer-sh
                  mountPath: /app/shell
                - name: password
                  mountPath: /app/.password
                  subPath: password
                - name: tz-config
                  mountPath: /etc/localtime
          restartPolicy: Never
          volumes:
            - name: shared-data
              emptyDir: {}
            - name: transfer-sh
              configMap:
                name: release-name-sh
                defaultMode: 320
            - name: password
              secret:
                defaultMode: 256
                secretName: release-name-secret
            - name: tz-config
              hostPath:
                path: /usr/share/zoneinfo/Asia/Seoul
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 3
