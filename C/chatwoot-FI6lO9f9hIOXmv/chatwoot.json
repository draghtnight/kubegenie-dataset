[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "automountServiceAccountToken": true,
    "metadata": {
      "name": "release-name-chatwoot-redis",
      "namespace": "FI6lO9f9hIOXmv",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "helm.sh/chart": "redis-14.7.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-chatwoot",
      "labels": {
        "app": "release-name-chatwoot",
        "chart": "chatwoot-0.8.6",
        "release": "release-name",
        "heritage": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-chatwoot-postgresql",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-postgresql",
        "helm.sh/chart": "postgresql-10.5.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "FI6lO9f9hIOXmv"
    },
    "type": "Opaque",
    "data": {
      "postgresql-password": "cG9zdGdyZXM="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-chatwoot-redis",
      "namespace": "FI6lO9f9hIOXmv",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "helm.sh/chart": "redis-14.7.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "redis-password": "cmVkaXM="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "labels": {
        "app": "release-name-chatwoot",
        "chart": "chatwoot-0.8.6",
        "release": "release-name",
        "heritage": "Helm"
      },
      "name": "release-name-chatwoot-env"
    },
    "data": {
      "POSTGRES_HOST": "cmVsZWFzZS1uYW1lLWNoYXR3b290LXBvc3RncmVzcWw=",
      "POSTGRES_PORT": "NTQzMg==",
      "POSTGRES_USERNAME": "cG9zdGdyZXM=",
      "POSTGRES_PASSWORD": "cG9zdGdyZXM=",
      "POSTGRES_DATABASE": "Y2hhdHdvb3RfcHJvZHVjdGlvbg==",
      "REDIS_HOST": "cmVsZWFzZS1uYW1lLWNoYXR3b290LXJlZGlzLW1hc3Rlcg==",
      "REDIS_PORT": "NjM3OQ==",
      "REDIS_PASSWORD": "cmVkaXM=",
      "REDIS_URL": "cmVkaXM6Ly86cmVkaXNAcmVsZWFzZS1uYW1lLWNoYXR3b290LXJlZGlzLW1hc3Rlcjo2Mzc5",
      "ACTIVE_STORAGE_SERVICE": "bG9jYWw=",
      "ANDROID_BUNDLE_ID": "Y29tLmNoYXR3b290LmFwcA==",
      "ANDROID_SHA256_CERT_FINGERPRINT": "QUM6NzM6OEU6REU6RUI6NTY6RUE6Q0M6MTA6ODc6MDI6QTc6NjU6Mzc6N0I6Mzg6RDQ6NUQ6RDQ6NTM6Rjg6M0I6RkI6RDM6QzY6Mjg6NjQ6MUQ6QUE6MDg6MUU6RDg=",
      "ASSET_CDN_HOST": "",
      "AWS_ACCESS_KEY_ID": "",
      "AWS_REGION": "",
      "AWS_SECRET_ACCESS_KEY": "",
      "ENABLE_ACCOUNT_SIGNUP": "ZmFsc2U=",
      "FB_APP_ID": "",
      "FB_APP_SECRET": "",
      "FB_VERIFY_TOKEN": "",
      "FORCE_SSL": "ZmFsc2U=",
      "FRONTEND_URL": "aHR0cDovLzAuMC4wLjA6MzAwMA==",
      "INSTALLATION_ENV": "aGVsbQ==",
      "IOS_APP_ID": "NkM5NTNGM1JYMi5jb20uY2hhdHdvb3QuYXBw",
      "LOG_LEVEL": "aW5mbw==",
      "LOG_SIZE": "NTAw",
      "MAILER_INBOUND_EMAIL_DOMAIN": "",
      "MAILER_SENDER_EMAIL": "",
      "MAILGUN_INGRESS_SIGNING_KEY": "",
      "MANDRILL_INGRESS_API_KEY": "",
      "RAILS_ENV": "cHJvZHVjdGlvbg==",
      "RAILS_INBOUND_EMAIL_PASSWORD": "",
      "RAILS_INBOUND_EMAIL_SERVICE": "",
      "RAILS_LOG_TO_STDOUT": "dHJ1ZQ==",
      "RAILS_MAX_THREADS": "NQ==",
      "REDIS_SENTINELS": "",
      "REDIS_SENTINEL_MASTER_NAME": "",
      "REDIS_TLS": "ZmFsc2U=",
      "S3_BUCKET_NAME": "",
      "SECRET_KEY_BASE": "cmVwbGFjZV93aXRoX3lvdXJfc3VwZXJfZHVwZXJfc2VjcmV0X2tleV9iYXNl",
      "SENTRY_DSN": "",
      "SLACK_CLIENT_ID": "",
      "SLACK_CLIENT_SECRET": "",
      "SMTP_ADDRESS": "",
      "SMTP_AUTHENTICATION": "cGxhaW4=",
      "SMTP_ENABLE_STARTTLS_AUTO": "dHJ1ZQ==",
      "SMTP_OPENSSL_VERIFY_MODE": "bm9uZQ==",
      "SMTP_PASSWORD": "",
      "SMTP_PORT": "NTg3",
      "SMTP_USERNAME": "",
      "TWITTER_APP_ID": "",
      "TWITTER_CONSUMER_KEY": "",
      "TWITTER_CONSUMER_SECRET": "",
      "TWITTER_ENVIRONMENT": "",
      "USE_INBOX_AVATAR_FOR_BOT": "dHJ1ZQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-chatwoot-redis-configuration",
      "namespace": "FI6lO9f9hIOXmv",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "helm.sh/chart": "redis-14.7.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "redis.conf": "# User-supplied common configuration:\n# Enable AOF https://redis.io/topics/persistence#append-only-file\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"\n# End of common configuration",
      "master.conf": "dir /data\n# User-supplied master configuration:\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"\n# End of master configuration",
      "replica.conf": "dir /data\nslave-read-only yes\n# User-supplied replica configuration:\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"\n# End of replica configuration"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-chatwoot-redis-health",
      "namespace": "FI6lO9f9hIOXmv",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "helm.sh/chart": "redis-14.7.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "ping_readiness_local.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\nexport REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_local.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\nexport REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_master.sh": "#!/bin/bash\n\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD=\"$(< \"${REDIS_MASTER_PASSWORD_FILE}\")\"\nexport REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_master.sh": "#!/bin/bash\n\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD=\"$(< \"${REDIS_MASTER_PASSWORD_FILE}\")\"\nexport REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-chatwoot-redis-scripts",
      "namespace": "FI6lO9f9hIOXmv",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "helm.sh/chart": "redis-14.7.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "start-master.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\nif [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/master.conf\")\nexec redis-server \"${ARGS[@]}\"\n",
      "start-replica.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD=\"$(< \"${REDIS_MASTER_PASSWORD_FILE}\")\"\nif [[ ! -f /opt/bitnami/redis/etc/replica.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/replica.conf /opt/bitnami/redis/etc/replica.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--slaveof\" \"${REDIS_MASTER_HOST}\" \"${REDIS_MASTER_PORT_NUMBER}\")\nARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_MASTER_PASSWORD}\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/replica.conf\")\nexec redis-server \"${ARGS[@]}\"\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-chatwoot-postgresql-headless",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-postgresql",
        "helm.sh/chart": "postgresql-10.5.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      },
      "namespace": "FI6lO9f9hIOXmv"
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "publishNotReadyAddresses": true,
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "chatwoot-postgresql",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-chatwoot-postgresql",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-postgresql",
        "helm.sh/chart": "postgresql-10.5.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null,
      "namespace": "FI6lO9f9hIOXmv"
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "chatwoot-postgresql",
        "app.kubernetes.io/instance": "release-name",
        "role": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-chatwoot-redis-headless",
      "namespace": "FI6lO9f9hIOXmv",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "helm.sh/chart": "redis-14.7.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "tcp-redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-chatwoot-redis-master",
      "namespace": "FI6lO9f9hIOXmv",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "helm.sh/chart": "redis-14.7.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "master"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-redis",
          "port": 6379,
          "targetPort": "redis",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "master"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-chatwoot-redis-replicas",
      "namespace": "FI6lO9f9hIOXmv",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "helm.sh/chart": "redis-14.7.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "replica"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-redis",
          "port": 6379,
          "targetPort": "redis",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "replica"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-chatwoot",
      "creationTimestamp": null,
      "labels": {
        "app": "release-name-chatwoot",
        "chart": "chatwoot-0.8.6",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "ports": [
        {
          "name": "chatwoot",
          "port": 3000,
          "targetPort": 3000
        }
      ],
      "type": "LoadBalancer",
      "selector": {
        "app": "release-name-chatwoot",
        "role": "web"
      }
    },
    "status": {
      "loadBalancer": {}
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-chatwoot-web",
      "creationTimestamp": null,
      "labels": {
        "app": "release-name-chatwoot",
        "chart": "chatwoot-0.8.6",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "release-name-chatwoot",
          "release": "release-name",
          "role": "web"
        }
      },
      "strategy": {},
      "template": {
        "metadata": {
          "creationTimestamp": null,
          "labels": {
            "app": "release-name-chatwoot",
            "release": "release-name",
            "role": "web"
          },
          "annotations": {
            "checksum/config": "3eccd19af8dceebc4376bcf56b799214d888040e7f313d234c13385d93f52456"
          }
        },
        "spec": {
          "containers": [
            {
              "args": [
                "bundle",
                "exec",
                "rails",
                "s",
                "-p",
                "3000",
                "-b",
                "0.0.0.0"
              ],
              "command": [
                "docker/entrypoints/rails.sh"
              ],
              "env": null,
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-chatwoot-env"
                  }
                }
              ],
              "image": "chatwoot/chatwoot:v2.5.0",
              "name": "chatwoot-web",
              "ports": [
                {
                  "containerPort": 3000
                }
              ],
              "imagePullPolicy": "IfNotPresent"
            }
          ],
          "serviceAccountName": "release-name-chatwoot"
        }
      }
    },
    "status": {}
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-chatwoot-worker",
      "creationTimestamp": null,
      "labels": {
        "app": "release-name-chatwoot",
        "chart": "chatwoot-0.8.6",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 2,
      "selector": {
        "matchLabels": {
          "app": "release-name-chatwoot",
          "release": "release-name",
          "role": "worker"
        }
      },
      "strategy": {},
      "template": {
        "metadata": {
          "creationTimestamp": null,
          "labels": {
            "app": "release-name-chatwoot",
            "release": "release-name",
            "role": "worker"
          },
          "annotations": {
            "checksum/config": "3eccd19af8dceebc4376bcf56b799214d888040e7f313d234c13385d93f52456"
          }
        },
        "spec": {
          "containers": [
            {
              "args": [
                "bundle",
                "exec",
                "sidekiq",
                "-C",
                "config/sidekiq.yml"
              ],
              "env": null,
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-chatwoot-env"
                  }
                }
              ],
              "image": "chatwoot/chatwoot:v2.5.0",
              "name": "chatwoot-workers",
              "imagePullPolicy": "IfNotPresent"
            }
          ],
          "serviceAccountName": "release-name-chatwoot"
        }
      }
    },
    "status": {}
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-chatwoot-postgresql",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-postgresql",
        "helm.sh/chart": "postgresql-10.5.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null,
      "namespace": "FI6lO9f9hIOXmv"
    },
    "spec": {
      "serviceName": "release-name-chatwoot-postgresql-headless",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "chatwoot-postgresql",
          "app.kubernetes.io/instance": "release-name",
          "role": "primary"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-chatwoot-postgresql",
          "labels": {
            "app.kubernetes.io/name": "chatwoot-postgresql",
            "helm.sh/chart": "postgresql-10.5.3",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "role": "primary",
            "app.kubernetes.io/component": "primary"
          }
        },
        "spec": {
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "chatwoot-postgresql",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "containers": [
            {
              "name": "release-name-chatwoot-postgresql",
              "image": "docker.io/bitnami/postgresql:11.12.0-debian-10-r44",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "securityContext": {
                "runAsUser": 11565,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432"
                },
                {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql"
                },
                {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgres"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-chatwoot-postgresql",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "chatwoot_production"
                },
                {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_ENABLE_TLS",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_LOG_HOSTNAME",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_CONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_DISCONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PGAUDIT_LOG_CATALOG",
                  "value": "off"
                },
                {
                  "name": "POSTGRESQL_CLIENT_MIN_MESSAGES",
                  "value": "error"
                },
                {
                  "name": "POSTGRESQL_SHARED_PRELOAD_LIBRARIES",
                  "value": "pgaudit"
                }
              ],
              "ports": [
                {
                  "name": "tcp-postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \"postgres\" -d \"dbname=chatwoot_production\" -h 127.0.0.1 -p 5432"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "exec pg_isready -U \"postgres\" -d \"dbname=chatwoot_production\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": [
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql",
                  "subPath": null
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "dshm",
              "emptyDir": {
                "medium": "Memory"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-chatwoot-redis-master",
      "namespace": "FI6lO9f9hIOXmv",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "helm.sh/chart": "redis-14.7.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "master"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "chatwoot-redis",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "master"
        }
      },
      "serviceName": "release-name-chatwoot-redis-headless",
      "updateStrategy": {
        "rollingUpdate": {},
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "chatwoot-redis",
            "helm.sh/chart": "redis-14.7.2",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "master"
          },
          "annotations": {
            "checksum/configmap": "cc154fc5002e0da75d9159a56c7794f2f0d12370962a47e94c5a74a1439dd6b6",
            "checksum/health": "638b3a9c6165bf6e1a7a7a6d6097eae08ea6826ba400190da6d7ecdb363ba620",
            "checksum/scripts": "e9b7ef531ddbb94cdec28f6f0429783be1e65746869b89238721ed932dd3602b",
            "checksum/secret": "b5fc7b0de8d02787bf92441e1410b02858605b02c955b7fea3ac97ba4cd5724a"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "release-name-chatwoot-redis",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "chatwoot-redis",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "master"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "redis",
              "image": "docker.io/bitnami/redis:6.2.4-debian-10-r13",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 11289,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "command": [
                "/bin/bash"
              ],
              "args": [
                "-c",
                "/opt/bitnami/scripts/start-scripts/start-master.sh"
              ],
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "master"
                },
                {
                  "name": "ALLOW_EMPTY_PASSWORD",
                  "value": "no"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-chatwoot-redis",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_TLS_ENABLED",
                  "value": "no"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 5,
                "timeoutSeconds": 6,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 5,
                "timeoutSeconds": 2,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 1"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "start-scripts",
                  "mountPath": "/opt/bitnami/scripts/start-scripts"
                },
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc/"
                },
                {
                  "name": "tmp",
                  "mountPath": "/tmp"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "start-scripts",
              "configMap": {
                "name": "release-name-chatwoot-redis-scripts",
                "defaultMode": 493
              }
            },
            {
              "name": "health",
              "configMap": {
                "name": "release-name-chatwoot-redis-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-chatwoot-redis-configuration"
              }
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            },
            {
              "name": "tmp",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "redis-data",
            "labels": {
              "app.kubernetes.io/name": "chatwoot-redis",
              "app.kubernetes.io/instance": "release-name",
              "app.kubernetes.io/component": "master"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-chatwoot-redis-replicas",
      "namespace": "FI6lO9f9hIOXmv",
      "labels": {
        "app.kubernetes.io/name": "chatwoot-redis",
        "helm.sh/chart": "redis-14.7.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "replica"
      }
    },
    "spec": {
      "replicas": 3,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "chatwoot-redis",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "replica"
        }
      },
      "serviceName": "release-name-chatwoot-redis-headless",
      "updateStrategy": {
        "rollingUpdate": {},
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "chatwoot-redis",
            "helm.sh/chart": "redis-14.7.2",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "replica"
          },
          "annotations": {
            "checksum/configmap": "cc154fc5002e0da75d9159a56c7794f2f0d12370962a47e94c5a74a1439dd6b6",
            "checksum/health": "638b3a9c6165bf6e1a7a7a6d6097eae08ea6826ba400190da6d7ecdb363ba620",
            "checksum/scripts": "e9b7ef531ddbb94cdec28f6f0429783be1e65746869b89238721ed932dd3602b",
            "checksum/secret": "b5fc7b0de8d02787bf92441e1410b02858605b02c955b7fea3ac97ba4cd5724a"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "release-name-chatwoot-redis",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "chatwoot-redis",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "replica"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "redis",
              "image": "docker.io/bitnami/redis:6.2.4-debian-10-r13",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 10949,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "command": [
                "/bin/bash"
              ],
              "args": [
                "-c",
                "/opt/bitnami/scripts/start-scripts/start-replica.sh"
              ],
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "slave"
                },
                {
                  "name": "REDIS_MASTER_HOST",
                  "value": "release-name-chatwoot-redis-master-0.release-name-chatwoot-redis-headless.default.svc.cluster.local"
                },
                {
                  "name": "REDIS_MASTER_PORT_NUMBER",
                  "value": "6379"
                },
                {
                  "name": "ALLOW_EMPTY_PASSWORD",
                  "value": "no"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-chatwoot-redis",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_MASTER_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-chatwoot-redis",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_TLS_ENABLED",
                  "value": "no"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 5,
                "timeoutSeconds": 6,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local_and_master.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 5,
                "timeoutSeconds": 2,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local_and_master.sh 1"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "start-scripts",
                  "mountPath": "/opt/bitnami/scripts/start-scripts"
                },
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "start-scripts",
              "configMap": {
                "name": "release-name-chatwoot-redis-scripts",
                "defaultMode": 493
              }
            },
            {
              "name": "health",
              "configMap": {
                "name": "release-name-chatwoot-redis-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-chatwoot-redis-configuration"
              }
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "redis-data",
            "labels": {
              "app.kubernetes.io/name": "chatwoot-redis",
              "app.kubernetes.io/instance": "release-name",
              "app.kubernetes.io/component": "replica"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-chatwoot-test-connection",
      "labels": {
        "app": "release-name-chatwoot",
        "chart": "chatwoot-0.8.6",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test",
        "helm.sh/hook-delete-policy": "hook-succeeded"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "imagePullPolicy": "IfNotPresent",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-chatwoot:3000"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "release-name-migrate",
      "labels": {
        "app": "release-name-chatwoot",
        "chart": "chatwoot-0.8.6",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation",
        "helm.sh/hook-weight": "-1"
      }
    },
    "spec": {
      "template": {
        "spec": {
          "restartPolicy": "Never",
          "initContainers": [
            {
              "name": "init-postgres",
              "image": "chatwoot/chatwoot:v2.5.0",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/sh"
              ],
              "args": [
                "-c",
                "PG_READY=\"pg_isready -h release-name-chatwoot-postgresql -p 5432\"; until $PG_READY; do\n  sleep 2;\ndone; echo \"Database ready to accept connections.\"  ;"
              ]
            },
            {
              "name": "init-redis",
              "image": "busybox:1.28",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c",
                "until nslookup release-name-chatwoot-redis-master ; do echo waiting for release-name-chatwoot-redis-master ; sleep 2; done;"
              ]
            }
          ],
          "containers": [
            {
              "name": "db-migrate-job",
              "image": "chatwoot/chatwoot:v2.5.0",
              "args": [
                "bundle",
                "exec",
                "rails",
                "db:chatwoot_prepare"
              ],
              "env": null,
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-chatwoot-env"
                  }
                }
              ],
              "imagePullPolicy": "IfNotPresent"
            }
          ],
          "serviceAccountName": "release-name-chatwoot"
        }
      }
    }
  }
]