apiVersion: v1
kind: Secret
metadata:
  name: release-name-cloudquery-secret
  labels:
    helm.sh/chart: cloudquery-0.2.6
    app.kubernetes.io/name: cloudquery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.24"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data: null
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-cloudquery-config
  labels:
    helm.sh/chart: cloudquery-0.2.6
    app.kubernetes.io/name: cloudquery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.24"
    app.kubernetes.io/managed-by: Helm
data:
  config.hcl: |2-
    // Configuration AutoGenerated by CloudQuery CLI
    // This is a default config.hcl for cloudquery with aws provider.
    // Change this to the needed config.hcl
    cloudquery {
      plugin_directory = "./cq/providers"
      policy_directory = "./cq/policies"

      provider "aws" {
        version = "latest"
      }

      connection {
        dsn = "${DSN}"
      }
    }

    // All Provider Configurations

    provider "aws" {
      configuration {
        // Optional. if you want to assume role to multiple account and fetch data from them
        // accounts "<UNIQUE ACCOUNT IDENTIFIER>" {
        // Optional. Role ARN we want to assume when accessing this account
        // role_arn = < YOUR_ROLE_ARN >
        // Optional. Named profile in config or credential file from where CQ should grab credentials
        // LocalProfile = < PROFILE_NAME >
        // }
        // Optional. by default assumes all regions
        // regions = ["us-east-1", "us-west-2"]
        // Optional. Enable AWS SDK debug logging.
        aws_debug = false
        // The maximum number of times that a request will be retried for failures. Defaults to 5 retry attempts.
        // max_retries = 5
        // The maximum back off delay between attempts. The backoff delays exponentially with a jitter based on the number of attempts. Defaults to 60 seconds.
        // max_backoff = 30
      }

      // list of resources to fetch
      resources = [
        "*"
      ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cloudquery-admin
  labels:
    helm.sh/chart: cloudquery-0.2.6
    app.kubernetes.io/name: cloudquery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.24"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudquery
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudquery
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: cloudquery
          envFrom:
            - secretRef:
                name: release-name-cloudquery-secret
          image: ghcr.io/cloudquery/cloudquery:0.24
          imagePullPolicy: Always
          command:
            - /bin/sh
          args:
            - -c
            - echo admin container is running. run 'kubectl exec -it deploy/cloudquery-admin -- /bin/sh' to debug; while true; do sleep 10000; done
          resources: null
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: release-name-cloudquery-config
            items:
              - key: config.hcl
                path: config.hcl
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: release-name-cloudquery-cron
  labels:
    helm.sh/chart: cloudquery-0.2.6
    app.kubernetes.io/name: cloudquery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.24"
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: 0 */6 * * *
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app.kubernetes.io/name: cloudquery
            app.kubernetes.io/instance: release-name
        spec:
          containers:
            - name: cloudquery
              envFrom:
                - secretRef:
                    name: release-name-cloudquery-secret
              image: ghcr.io/cloudquery/cloudquery:0.24
              imagePullPolicy: Always
              args:
                - fetch
                - --config
                - /app/config/config.hcl
                - --enable-console-log
              resources: null
              volumeMounts:
                - name: config
                  mountPath: /app/config
          volumes:
            - name: config
              configMap:
                name: release-name-cloudquery-config
                items:
                  - key: config.hcl
                    path: config.hcl
          restartPolicy: Never
