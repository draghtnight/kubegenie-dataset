[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "litmus-server-account",
      "namespace": "ouRxcvse",
      "labels": {
        "app.kubernetes.io/component": "cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-cle-admin-secret",
      "namespace": "ouRxcvse",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7",
        "app.kubernetes.io/component": "cle-admin-secret"
      }
    },
    "data": {
      "JWT_SECRET": "bGl0bXVzLXBvcnRhbEAxMjM=",
      "DB_USER": "YWRtaW4=",
      "DB_PASSWORD": "MTIzNA==",
      "ADMIN_USERNAME": "YWRtaW4=",
      "ADMIN_PASSWORD": "bGl0bXVz"
    }
  },
  {
    "apiVersion": "v1",
    "data": {
      ".dockerconfigjson": "ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogIlkyNWhkR2wyWlhKdk9tTnVZWFJwZG1WeWIwQXhOalU0IgoJCX0KCX0KfQo="
    },
    "kind": "Secret",
    "metadata": {
      "name": "regcred",
      "namespace": "ouRxcvse"
    },
    "type": "kubernetes.io/dockerconfigjson"
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-cle-admin-config",
      "namespace": "ouRxcvse",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7",
        "app.kubernetes.io/component": "cle-admin-config"
      }
    },
    "data": {
      "AGENT_SCOPE": "cluster",
      "AGENT_NAMESPACE": "default",
      "DB_SERVER": "mongodb://release-name-cle-mongo:27017",
      "VERSION": "2.7.0",
      "SKIP_SSL_VERIFY": "false"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-cle-frontend-nginx-configuration",
      "namespace": "ouRxcvse",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7",
        "app.kubernetes.io/component": "cle-admin-config"
      }
    },
    "data": {
      "default.conf": "server {\n    listen       8080;\n    server_name  localhost;\n    #charset koi8-r;\n    #access_log  /var/log/nginx/host.access.log  main;\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n        try_files $uri /index.html;\n    }\n    #error_page  404              /404.html;\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n    # deny access to .htaccess files, if Apache's document root\n    # concurs with nginx's one\n    #\n    #location ~ /\\.ht {\n    #    deny  all;\n    #}\n    location /auth/ {\n        proxy_set_header   Host                 $host;\n        proxy_set_header   X-Real-IP            $remote_addr;\n        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;\n        proxy_set_header   X-Forwarded-Proto    $scheme;\n        proxy_pass \"http://release-name-cle-auth-server-service:9003/\";\n    }\n    location /api/ {\n        proxy_set_header   Host                 $host;\n        proxy_set_header   X-Real-IP            $remote_addr;\n        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;\n        proxy_set_header   X-Forwarded-Proto    $scheme;\n        proxy_pass \"http://release-name-cle-server-service:9002/\";\n    }\n    location /license/ {\n        proxy_set_header   Host                 $host;\n        proxy_set_header   X-Real-IP            $remote_addr;\n        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;\n        proxy_set_header   X-Forwarded-Proto    $scheme;\n        proxy_pass \"http://license-service/\";\n    }\n    location /ws/ {\n        proxy_set_header   Upgrade              $http_upgrade;\n        proxy_set_header   Connection           \"Upgrade\";\n        proxy_set_header   Host                 $host;\n        proxy_set_header   X-Real-IP            $remote_addr;\n        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;\n        proxy_set_header   X-Forwarded-Proto    $scheme;\n        proxy_pass \"http://release-name-cle-server-service:9002/\";\n    }\n}\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "argo-cr-for-release-name-cle-server",
      "labels": {
        "app.kubernetes.io/component": "argo-cr-for-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "pods/exec"
        ],
        "verbs": [
          "create",
          "get",
          "list",
          "watch",
          "update",
          "patch",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "get",
          "watch",
          "list"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "persistentvolumeclaims"
        ],
        "verbs": [
          "create",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "argoproj.io"
        ],
        "resources": [
          "workflows",
          "workflows/finalizers"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "update",
          "patch",
          "delete",
          "create"
        ]
      },
      {
        "apiGroups": [
          "argoproj.io"
        ],
        "resources": [
          "workflowtemplates",
          "workflowtemplates/finalizers",
          "clusterworkflowtemplates",
          "clusterworkflowtemplates/finalizers",
          "workflowtasksets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "serviceaccounts"
        ],
        "verbs": [
          "get",
          "list"
        ]
      },
      {
        "apiGroups": [
          "argoproj.io"
        ],
        "resources": [
          "cronworkflows",
          "cronworkflows/finalizers"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "update",
          "patch",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "poddisruptionbudgets"
        ],
        "verbs": [
          "create",
          "get",
          "delete"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "litmus-cluster-scope-for-release-name-cle-server",
      "labels": {
        "app.kubernetes.io/component": "litmus-cluster-scope-for-release-name-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "replicationcontrollers",
          "secrets"
        ],
        "verbs": [
          "get",
          "list"
        ]
      },
      {
        "apiGroups": [
          "apps.openshift.io"
        ],
        "resources": [
          "deploymentconfigs"
        ],
        "verbs": [
          "get",
          "list"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "deployments",
          "daemonsets",
          "replicasets",
          "statefulsets"
        ],
        "verbs": [
          "get",
          "list"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "jobs"
        ],
        "verbs": [
          "get",
          "list",
          "deletecollection"
        ]
      },
      {
        "apiGroups": [
          "argoproj.io"
        ],
        "resources": [
          "rollouts"
        ],
        "verbs": [
          "get",
          "list"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "configmaps",
          "events",
          "services"
        ],
        "verbs": [
          "get",
          "create",
          "update",
          "patch",
          "delete",
          "list",
          "watch",
          "deletecollection"
        ]
      },
      {
        "apiGroups": [
          "litmuschaos.io"
        ],
        "resources": [
          "chaosengines",
          "chaosexperiments",
          "chaosresults"
        ],
        "verbs": [
          "get",
          "create",
          "update",
          "patch",
          "delete",
          "list",
          "watch",
          "deletecollection"
        ]
      },
      {
        "apiGroups": [
          "apiextensions.k8s.io"
        ],
        "resources": [
          "customresourcedefinitions"
        ],
        "verbs": [
          "list",
          "get"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "litmus-admin-cr-for-release-name-cle-server",
      "labels": {
        "app.kubernetes.io/component": "litmus-admin-cr-for-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "events"
        ],
        "verbs": [
          "create",
          "delete",
          "get",
          "list",
          "patch",
          "update",
          "deletecollection"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets",
          "configmaps"
        ],
        "verbs": [
          "get",
          "list"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods/log"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "jobs"
        ],
        "verbs": [
          "create",
          "list",
          "get",
          "delete",
          "deletecollection"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "create",
          "delete",
          "deletecollection"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create",
          "delete",
          "get",
          "list",
          "patch",
          "update",
          "deletecollection"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "get",
          "list",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods/exec",
          "pods/eviction",
          "replicationcontrollers"
        ],
        "verbs": [
          "get",
          "list",
          "create"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods/log"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services"
        ],
        "verbs": [
          "create",
          "delete",
          "get",
          "list",
          "delete",
          "deletecollection"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "deployments",
          "statefulsets"
        ],
        "verbs": [
          "list",
          "get",
          "patch",
          "update",
          "create",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "replicasets"
        ],
        "verbs": [
          "list",
          "get"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "daemonsets"
        ],
        "verbs": [
          "list",
          "get",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "apps.openshift.io"
        ],
        "resources": [
          "deploymentconfigs"
        ],
        "verbs": [
          "list",
          "get"
        ]
      },
      {
        "apiGroups": [
          "argoproj.io"
        ],
        "resources": [
          "rollouts"
        ],
        "verbs": [
          "list",
          "get"
        ]
      },
      {
        "apiGroups": [
          "litmuschaos.io"
        ],
        "resources": [
          "chaosengines",
          "chaosexperiments",
          "chaosresults"
        ],
        "verbs": [
          "create",
          "list",
          "get",
          "patch",
          "update",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes"
        ],
        "verbs": [
          "patch",
          "get",
          "list",
          "update"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "chaos-cr-for-release-name-cle-server",
      "labels": {
        "app.kubernetes.io/component": "chaos-cr-for-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "services",
          "namespaces"
        ],
        "verbs": [
          "create",
          "get",
          "watch",
          "patch",
          "delete",
          "list"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods/log",
          "secrets",
          "configmaps"
        ],
        "verbs": [
          "get",
          "watch",
          "create",
          "delete",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "deployments",
          "statefulsets"
        ],
        "verbs": [
          "get",
          "watch",
          "patch",
          "create",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "litmuschaos.io"
        ],
        "resources": [
          "chaosengines",
          "chaosexperiments",
          "chaosresults",
          "chaosschedules"
        ],
        "verbs": [
          "create",
          "list",
          "get",
          "patch",
          "delete",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "subscriber-cr-for-release-name-cle-server",
      "namespace": "litmus",
      "labels": {
        "app.kubernetes.io/component": "subscriber-cr-for-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "get",
          "create",
          "delete",
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods/log"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "namespaces",
          "nodes",
          "services"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "litmuschaos.io"
        ],
        "resources": [
          "chaosengines",
          "chaosschedules",
          "chaosresults"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "delete",
          "update",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apps.openshift.io"
        ],
        "resources": [
          "deploymentconfigs"
        ],
        "verbs": [
          "get",
          "list"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "deployments",
          "daemonsets",
          "replicasets",
          "statefulsets"
        ],
        "verbs": [
          "get",
          "list",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "argoproj.io"
        ],
        "resources": [
          "workflows",
          "workflows/finalizers",
          "workflowtemplates",
          "workflowtemplates/finalizers",
          "cronworkflows",
          "cronworkflows/finalizers",
          "clusterworkflowtemplates",
          "clusterworkflowtemplates/finalizers",
          "rollouts"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "delete",
          "update",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "event-tracker-cr-for-release-name-cle-server",
      "labels": {
        "app.kubernetes.io/component": "event-tracker-cr-for-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "eventtracker.litmuschaos.io"
        ],
        "resources": [
          "eventtrackerpolicies"
        ],
        "verbs": [
          "create",
          "delete",
          "get",
          "list",
          "patch",
          "update",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "eventtracker.litmuschaos.io"
        ],
        "resources": [
          "eventtrackerpolicies/status"
        ],
        "verbs": [
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "",
          "extensions",
          "apps"
        ],
        "resources": [
          "deployments",
          "daemonsets",
          "statefulsets",
          "pods",
          "configmaps"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "litmus-server-cr-for-release-name-cle-server",
      "labels": {
        "app.kubernetes.io/component": "litmus-server-cr-for-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "networking.k8s.io",
          "extensions"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services",
          "nodes",
          "pods/log"
        ],
        "verbs": [
          "get",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apiextensions.k8s.io"
        ],
        "resources": [
          "customresourcedefinitions"
        ],
        "verbs": [
          "create"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "deployments"
        ],
        "verbs": [
          "create"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "serviceaccounts"
        ],
        "verbs": [
          "create"
        ]
      },
      {
        "apiGroups": [
          "rbac.authorization.k8s.io"
        ],
        "resources": [
          "rolebindings",
          "roles",
          "clusterrolebindings",
          "clusterroles"
        ],
        "verbs": [
          "create"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "argo-crb-for-release-name-cle-server",
      "labels": {
        "app.kubernetes.io/component": "argo-crb-for-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "argo-cr-for-release-name-cle-server"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "litmus-server-account",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "litmus-cluster-scope-crb-for-release-name-cle-server",
      "labels": {
        "app.kubernetes.io/name": "litmus",
        "app.kubernetes.io/version": "v1.13.6",
        "app.kubernetes.io/component": "operator-clusterrolebinding",
        "app.kubernetes.io/part-of": "litmus",
        "app.kubernetes.io/managed-by": "kubectl"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "litmus-cluster-scope-for-release-name-cle-server"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "litmus-server-account",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "litmus-admin-crb-for-release-name-cle-server",
      "labels": {
        "name": "litmus-admin-crb-for-cle-server",
        "app.kubernetes.io/component": "litmus-admin-crb-for-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "litmus-admin-cr-for-release-name-cle-server"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "litmus-server-account",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "chaos-crb-for-release-name-cle-server",
      "labels": {
        "app.kubernetes.io/component": "chaos-crb-for-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "chaos-cr-for-release-name-cle-server"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "litmus-server-account",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "subscriber-crb-for-release-name-cle-server",
      "labels": {
        "app.kubernetes.io/component": "subscriber-crb-for-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "litmus-server-account",
        "namespace": "default"
      }
    ],
    "roleRef": {
      "kind": "ClusterRole",
      "name": "subscriber-cr-for-release-name-cle-server",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "event-tracker-crb-for-release-name-cle-server",
      "labels": {
        "app.kubernetes.io/component": "event-tracker-crb-for-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "event-tracker-cr-for-release-name-cle-server"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "litmus-server-account",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "litmus-server-crb-for-release-name-cle-server",
      "labels": {
        "app.kubernetes.io/component": "litmus-server-crb-for-cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "litmus-server-cr-for-release-name-cle-server"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "litmus-server-account",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cle-auth-server-service",
      "namespace": "ouRxcvse",
      "labels": {
        "app.kubernetes.io/component": "cle-auth-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "spec": {
      "type": "NodePort",
      "ports": [
        {
          "name": "auth-server",
          "port": 9003,
          "targetPort": 3000
        },
        {
          "name": "auth-rpc-server",
          "port": 3030,
          "targetPort": 3030
        }
      ],
      "selector": {
        "app.kubernetes.io/component": "cle-auth-server"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cle-frontend-service",
      "namespace": "ouRxcvse",
      "labels": {
        "app.kubernetes.io/component": "cle-frontend",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "spec": {
      "type": "NodePort",
      "ports": [
        {
          "name": "http",
          "port": 9091,
          "targetPort": 8080
        }
      ],
      "selector": {
        "app.kubernetes.io/component": "cle-frontend"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "license-service",
      "namespace": "ouRxcvse"
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "http",
          "port": 80,
          "targetPort": 8080
        }
      ],
      "selector": {
        "component": "license-server"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cle-headless-mongo",
      "namespace": "ouRxcvse",
      "labels": {
        "app": "mongo",
        "app.kubernetes.io/component": "cle-database",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "mongodb",
          "port": 27017,
          "targetPort": 27017
        }
      ],
      "selector": {
        "app.kubernetes.io/component": "cle-database"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cle-mongo",
      "namespace": "ouRxcvse",
      "labels": {
        "app": "mongo",
        "app.kubernetes.io/component": "cle-database",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "mongodb",
          "port": 27017,
          "targetPort": 27017
        }
      ],
      "selector": {
        "app.kubernetes.io/component": "cle-database"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cle-server-service",
      "namespace": "ouRxcvse",
      "labels": {
        "app.kubernetes.io/component": "cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "spec": {
      "type": "NodePort",
      "ports": [
        {
          "name": "graphql-server",
          "port": 9002,
          "targetPort": 8080
        },
        {
          "name": "graphql-rpc-server",
          "port": 8000,
          "targetPort": 8000
        }
      ],
      "selector": {
        "app.kubernetes.io/component": "cle-server"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-cle-auth-server",
      "namespace": "ouRxcvse",
      "labels": {
        "app.kubernetes.io/component": "cle-auth-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/component": "cle-auth-server"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "cle-auth-server",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "cle",
            "app.kubernetes.io/part-of": "cle",
            "app.kubernetes.io/version": "0.2.7",
            "helm.sh/chart": "cle-0.2.7",
            "litmuschaos.io/version": "0.2.7"
          }
        },
        "spec": {
          "automountServiceAccountToken": false,
          "serviceAccountName": "litmus-server-account",
          "imagePullSecrets": [
            {
              "name": "regcred"
            }
          ],
          "initContainers": [
            {
              "name": "wait-for-mongodb",
              "image": "litmuschaos/curl:2.6.0",
              "imagePullPolicy": "Always",
              "command": [
                "/bin/sh",
                "-c"
              ],
              "args": [
                "while [[ $(curl -sw '%{http_code}' http://release-name-cle-mongo:27017 -o /dev/null) -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...'; done; echo 'Connection with MongoDB established'"
              ],
              "resources": {
                "limits": {
                  "cpu": "250m",
                  "ephemeral-storage": "1Gi",
                  "memory": "512Mi"
                },
                "requests": {
                  "cpu": "25m",
                  "ephemeral-storage": "500Mi",
                  "memory": "150Mi"
                }
              }
            }
          ],
          "containers": [
            {
              "name": "auth-server",
              "image": "chaosnative/cle-auth-server:2.7.0",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "containerPort": 3030,
                  "name": "auth-server"
                },
                {
                  "containerPort": 3000,
                  "name": "auth-rpc-server"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "550m",
                  "ephemeral-storage": "1Gi",
                  "memory": "712Mi"
                },
                "requests": {
                  "cpu": "225m",
                  "ephemeral-storage": "500Mi",
                  "memory": "250Mi"
                }
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "runAsUser": 10064,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-cle-admin-secret"
                  }
                },
                {
                  "configMapRef": {
                    "name": "release-name-cle-admin-config"
                  }
                }
              ],
              "env": [
                {
                  "name": "LITMUS_GQL_GRPC_ENDPOINT",
                  "value": "release-name-cle-server-service"
                },
                {
                  "name": "LITMUS_GQL_GRPC_PORT",
                  "value": ":8000"
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-cle-frontend",
      "namespace": "ouRxcvse",
      "labels": {
        "app.kubernetes.io/component": "cle-frontend",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/component": "cle-frontend"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "cle-frontend",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "cle",
            "app.kubernetes.io/part-of": "cle",
            "app.kubernetes.io/version": "0.2.7",
            "helm.sh/chart": "cle-0.2.7",
            "litmuschaos.io/version": "0.2.7"
          }
        },
        "spec": {
          "automountServiceAccountToken": false,
          "imagePullSecrets": [
            {
              "name": "regcred"
            }
          ],
          "volumes": [
            {
              "name": "nginx-config",
              "configMap": {
                "name": "release-name-cle-frontend-nginx-configuration"
              }
            }
          ],
          "containers": [
            {
              "name": "litmusportal-frontend",
              "image": "chaosnative/cle-frontend:2.7.0",
              "imagePullPolicy": "Always",
              "resources": {
                "limits": {
                  "cpu": "550m",
                  "ephemeral-storage": "1Gi",
                  "memory": "512Mi"
                },
                "requests": {
                  "cpu": "125m",
                  "ephemeral-storage": "500Mi",
                  "memory": "150Mi"
                }
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "runAsNonRoot": true,
                "runAsUser": 10978,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "ports": [
                {
                  "containerPort": 8080,
                  "name": "http"
                }
              ],
              "env": [
                {
                  "name": "AGENT_SCOPE",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "name": "release-name-cle-admin-config",
                      "key": "AGENT_SCOPE"
                    }
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "nginx-config",
                  "mountPath": "/etc/nginx/conf.d/default.conf",
                  "subPath": "default.conf"
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "license-server",
      "namespace": "ouRxcvse",
      "labels": {
        "component": "license-server"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "component": "license-server"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "component": "license-server"
          }
        },
        "spec": {
          "imagePullSecrets": [
            {
              "name": "regcred"
            }
          ],
          "initContainers": [
            {
              "name": "wait-for-mongodb",
              "image": "litmuschaos/curl:2.6.0",
              "imagePullPolicy": "Always",
              "command": [
                "/bin/sh",
                "-c"
              ],
              "args": [
                "while [[ $(curl -sw '%{http_code}' http://release-name-cle-mongo:27017 -o /dev/null) -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...'; done; echo 'Connection with MongoDB established'"
              ],
              "resources": {
                "limits": {
                  "cpu": "250m",
                  "ephemeral-storage": "1Gi",
                  "memory": "512Mi"
                },
                "requests": {
                  "cpu": "25m",
                  "ephemeral-storage": "500Mi",
                  "memory": "150Mi"
                }
              }
            }
          ],
          "containers": [
            {
              "name": "license-server",
              "image": "chaosnative/cle-license-module:2.7.0",
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-cle-admin-secret"
                  }
                },
                {
                  "configMapRef": {
                    "name": "release-name-cle-admin-config"
                  }
                }
              ],
              "env": [
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "containerPort": 8080
                }
              ],
              "imagePullPolicy": "Always",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "runAsUser": 10824,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "resources": {
                "limits": {
                  "cpu": "250m",
                  "ephemeral-storage": "1Gi",
                  "memory": "512Mi"
                },
                "requests": {
                  "cpu": "25m",
                  "ephemeral-storage": "500Mi",
                  "memory": "300Mi"
                }
              }
            }
          ],
          "serviceAccountName": "litmus-server-account"
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-cle-server",
      "namespace": "ouRxcvse",
      "labels": {
        "app.kubernetes.io/component": "cle-server",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/component": "cle-server"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "cle-server",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "cle",
            "app.kubernetes.io/part-of": "cle",
            "app.kubernetes.io/version": "0.2.7",
            "helm.sh/chart": "cle-0.2.7",
            "litmuschaos.io/version": "0.2.7"
          }
        },
        "spec": {
          "serviceAccountName": "litmus-server-account",
          "imagePullSecrets": [
            {
              "name": "regcred"
            }
          ],
          "volumes": [
            {
              "emptyDir": {},
              "name": "gitops-storage"
            },
            {
              "emptyDir": {},
              "name": "hub-storage"
            }
          ],
          "initContainers": [
            {
              "name": "wait-for-mongodb",
              "image": "litmuschaos/curl:2.6.0",
              "imagePullPolicy": "Always",
              "command": [
                "/bin/sh",
                "-c"
              ],
              "args": [
                "while [[ $(curl -sw '%{http_code}' http://release-name-cle-mongo:27017 -o /dev/null) -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...'; done; echo 'Connection with MongoDB established'"
              ],
              "resources": {
                "limits": {
                  "cpu": "250m",
                  "ephemeral-storage": "1Gi",
                  "memory": "512Mi"
                },
                "requests": {
                  "cpu": "25m",
                  "ephemeral-storage": "500Mi",
                  "memory": "150Mi"
                }
              }
            }
          ],
          "containers": [
            {
              "name": "graphql-server",
              "image": "chaosnative/cle-server:2.7.0",
              "volumeMounts": [
                {
                  "mountPath": "/tmp/gitops",
                  "name": "gitops-storage"
                },
                {
                  "mountPath": "/tmp/version",
                  "name": "hub-storage"
                }
              ],
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "containerPort": 8080,
                  "name": "gql-server"
                },
                {
                  "containerPort": 8000,
                  "name": "gql-rpc-server"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "550m",
                  "ephemeral-storage": "1Gi",
                  "memory": "712Mi"
                },
                "requests": {
                  "cpu": "225m",
                  "ephemeral-storage": "500Mi",
                  "memory": "250Mi"
                }
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "runAsUser": 10246,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "gql-server"
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "gql-server"
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-cle-admin-secret"
                  }
                },
                {
                  "configMapRef": {
                    "name": "release-name-cle-admin-config"
                  }
                }
              ],
              "env": [
                {
                  "name": "LITMUS_PORTAL_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "PORTAL_SCOPE",
                  "value": "cluster"
                },
                {
                  "name": "SERVER_SERVICE_NAME",
                  "value": "release-name-cle-server-service"
                },
                {
                  "name": "INGRESS",
                  "value": "false"
                },
                {
                  "name": "INGRESS_NAME",
                  "value": "litmus-ingress"
                },
                {
                  "name": "LITMUS_AUTH_GRPC_ENDPOINT",
                  "value": "release-name-cle-auth-server-service"
                },
                {
                  "name": "NODE_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "spec.nodeName"
                    }
                  }
                },
                {
                  "name": "ARGO_WORKFLOW_CONTROLLER_IMAGE",
                  "value": "litmuschaos/workflow-controller:v3.2.3"
                },
                {
                  "name": "ARGO_WORKFLOW_EXECUTOR_IMAGE",
                  "value": "litmuschaos/argoexec:v3.2.3"
                },
                {
                  "name": "EVENT_TRACKER_IMAGE",
                  "value": "chaosnative/cle-event-tracker:2.7.0"
                },
                {
                  "name": "LITMUS_CHAOS_EXPORTER_IMAGE",
                  "value": "litmuschaos/chaos-exporter:2.6.0"
                },
                {
                  "name": "LITMUS_CHAOS_OPERATOR_IMAGE",
                  "value": "litmuschaos/chaos-operator:2.6.0"
                },
                {
                  "name": "LITMUS_CHAOS_RUNNER_IMAGE",
                  "value": "litmuschaos/chaos-runner:2.6.0"
                },
                {
                  "name": "SUBSCRIBER_IMAGE",
                  "value": "chaosnative/cle-subscriber:2.7.0"
                },
                {
                  "name": "AGENT_DEPLOYMENTS",
                  "value": "[\"app=chaos-exporter\", \"name=chaos-operator\", \"app=event-tracker\", \"app=workflow-controller\"]"
                },
                {
                  "name": "CONTAINER_RUNTIME_EXECUTOR",
                  "value": "k8sapi"
                },
                {
                  "name": "HUB_BRANCH_NAME",
                  "value": "v2.6.x"
                },
                {
                  "name": "LITMUS_AUTH_GRPC_PORT",
                  "value": ":3030"
                },
                {
                  "name": "SELF_CLUSTER",
                  "value": "true"
                },
                {
                  "name": "TLS_CERT_64",
                  "value": ""
                },
                {
                  "name": "TLS_SECRET_NAME",
                  "value": ""
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-cle-mongo",
      "namespace": "ouRxcvse",
      "labels": {
        "app": "mongo",
        "app.kubernetes.io/component": "cle-database",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "cle",
        "app.kubernetes.io/part-of": "cle",
        "app.kubernetes.io/version": "0.2.7",
        "helm.sh/chart": "cle-0.2.7",
        "litmuschaos.io/version": "0.2.7"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/component": "cle-database"
        }
      },
      "serviceName": "release-name-cle-headless-mongo",
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "mongo",
            "app.kubernetes.io/component": "cle-database",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "cle",
            "app.kubernetes.io/part-of": "cle",
            "app.kubernetes.io/version": "0.2.7",
            "helm.sh/chart": "cle-0.2.7",
            "litmuschaos.io/version": "0.2.7"
          }
        },
        "spec": {
          "automountServiceAccountToken": false,
          "imagePullSecrets": [
            {
              "name": "regcred"
            }
          ],
          "containers": [
            {
              "name": "mongo",
              "image": "litmuschaos/mongo:4.2.8",
              "ports": [
                {
                  "containerPort": 27017,
                  "name": "mongodb"
                }
              ],
              "imagePullPolicy": "Always",
              "resources": {
                "limits": {
                  "cpu": "550m",
                  "ephemeral-storage": "3Gi",
                  "memory": "712Mi"
                },
                "requests": {
                  "cpu": "225m",
                  "ephemeral-storage": "1Gi",
                  "memory": "300Mi"
                }
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "livenessProbe": {
                "exec": {
                  "command": [
                    "bash",
                    "-c",
                    "mongo -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --eval db.adminCommand\\(\\\"ping\\\"\\)\n"
                  ]
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "bash",
                    "-c",
                    "mongo -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --eval db.adminCommand\\(\\\"ping\\\"\\)\n"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "volumeMounts": [
                {
                  "name": "mongo-persistent-storage",
                  "mountPath": "/data/db"
                }
              ],
              "env": [
                {
                  "name": "MONGO_INITDB_ROOT_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-cle-admin-secret",
                      "key": "DB_USER"
                    }
                  }
                },
                {
                  "name": "MONGO_INITDB_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-cle-admin-secret",
                      "key": "DB_PASSWORD"
                    }
                  }
                }
              ]
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "mongo-persistent-storage"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "20Gi"
              }
            }
          }
        }
      ]
    }
  }
]