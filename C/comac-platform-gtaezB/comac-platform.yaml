apiVersion: v1
kind: ConfigMap
metadata:
  name: kubernetes
data:
  serviceConfig: |
    name: kubernetes
    kafka_bootstrap_servers: ["cord-kafka"]
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.kubernetes
      loggers:
        '':
          handlers:
              - console
              - file
              - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: base-kubernetes-tosca
data:
  010-fixtures.yaml: |
    description: Some basic fixtures
    imports:
    - custom_types/networkparametertype.yaml
    - custom_types/networktemplate.yaml
    topology_template:
      node_templates:
        Private:
          properties:
            name: Private
            translation: none
            visibility: private
          type: tosca.nodes.NetworkTemplate
        Public dedicated IPv4:
          properties:
            name: Public dedicated IPv4
            shared_network_name: ext-net
            translation: none
            visibility: public
          type: tosca.nodes.NetworkTemplate
        Public shared IPv4:
          properties:
            name: Public shared IPv4
            shared_network_name: nat-net
            translation: NAT
            visibility: private
          type: tosca.nodes.NetworkTemplate
        bridge:
          properties:
            name: bridge
          type: tosca.nodes.NetworkParameterType
        c_tag:
          properties:
            name: c_tag
          type: tosca.nodes.NetworkParameterType
        device:
          properties:
            name: device
          type: tosca.nodes.NetworkParameterType
        neutron_port_name:
          properties:
            name: neutron_port_name
          type: tosca.nodes.NetworkParameterType
        next_hop:
          properties:
            name: next_hop
          type: tosca.nodes.NetworkParameterType
        s_tag:
          properties:
            name: s_tag
          type: tosca.nodes.NetworkParameterType
    tosca_definitions_version: tosca_simple_yaml_1_0
  040-cord-services.yaml: |
    description: Set up Kubernetes Service
    imports:
    - custom_types/kubernetesservice.yaml
    - custom_types/trustdomain.yaml
    topology_template:
      node_templates:
        default_trustdomain:
          properties:
            name: default
          requirements:
          - owner:
              node: service#kubernetes
              relationship: tosca.relationships.BelongsToOne
          type: tosca.nodes.TrustDomain
        service#kubernetes:
          properties:
            name: kubernetes
          type: tosca.nodes.KubernetesService
    tosca_definitions_version: tosca_simple_yaml_1_0
  050-service-graph-constraints.yaml: |
    description: Constraints on the Services position in the graph
    imports:
    - custom_types/servicegraphconstraint.yaml
    topology_template:
      node_templates:
        constraints:
          properties:
            constraints: '[]'
          type: tosca.nodes.ServiceGraphConstraint
    tosca_definitions_version: tosca_simple_yaml_1_0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: att-workflow-driver
data:
  serviceConfig: |
    name: att-workflow-driver
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-platform-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-platform-kafka:9092"
          topic: xos.log.att-workflow-driver
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fabric-crossconnect
data:
  serviceConfig: |
    name: fabric-crossconnect
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-platform-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-platform-kafka:9092"
          topic: xos.log.fabric-crossconnect
      loggers:
        '':
          handlers:
              - console
              - file
              - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fabric
data:
  serviceConfig: |
    name: fabric
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-platform-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-platform-kafka:9092"
          topic: xos.log.fabric
      loggers:
        '':
          handlers:
              - console
              - file
              - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mcord-subscriber
data:
  serviceConfig: |
    name: mcord
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: xos-core:50051
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.mcord-subscriber
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: onos-service
data:
  serviceConfig: |
    name: onos
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-platform-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-platform-kafka:9092"
          topic: xos.log.onos-service
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rcord
data:
  serviceConfig: |
    name: rcord
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.rcord
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: volt
data:
  serviceConfig: |
    name: volt
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-platform-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-platform-kafka:9092"
          topic: xos.log.volt
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vrouter
data:
  serviceConfig: |
    name: vrouter
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: xos-core:50051
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.vrouter
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: comac-tosca
data:
  010-rcord-subscriber-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    imports:
      - custom_types/rcordservice.yaml
    description: R-CORD service TOSCA
    topology_template:
      node_templates:
        service#rcord:
          type: tosca.nodes.RCORDService
          properties:
            name: rcord
            kind: data
  020-volt-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Set up VOLT service
    imports:
      - custom_types/voltservice.yaml

    topology_template:
      node_templates:
        service#volt:
          type: tosca.nodes.VOLTService
          properties:
            name: volt
            kind: data
            voltha_url: "voltha.voltha.svc.cluster.local"
            voltha_port: 8882
  030-fabric-crossconnect-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Set up fabric-crossconnect service
    imports:
      - custom_types/fabriccrossconnectservice.yaml

    topology_template:
      node_templates:
        service#fabric-crossconnect:
          type: tosca.nodes.FabricCrossconnectService
          properties:
            name: fabric-crossconnect
            kind: data
  040-fixtures.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Set up att-workflow-driver service
    imports:
      - custom_types/attworkflowdriverservice.yaml

    topology_template:
      node_templates:
        service#att-workflow-driver:
          type: tosca.nodes.AttWorkflowDriverService
          properties:
            name: att-workflow-driver
            kind: oss
  050-onos-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0

    imports:
       - custom_types/onosapp.yaml
       - custom_types/onosservice.yaml
       - custom_types/serviceinstanceattribute.yaml

    description: Configures services in COMAC

    topology_template:
      node_templates:

        service#onos:
          type: tosca.nodes.ONOSService
          properties:
              name: onos
              kind: data
              rest_hostname: "cord-platform-onos-ui.default.svc.cluster.local"
              rest_port: 8181
        onos_app#openflow-base:
          type: tosca.nodes.ONOSApp
          properties:
            name: openflow-base
            app_id: org.onosproject.openflow-base
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        onos_app#hostprovider:
          type: tosca.nodes.ONOSApp
          properties:
            name: hostprovider
            app_id: org.onosproject.hostprovider
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        # FOR ATT-Workflow --
        onos_app#aaa:
          type: tosca.nodes.ONOSApp
          properties:
            name: aaa
            app_id: org.opencord.aaa
            url: https://oss.sonatype.org/content/groups/public/org/opencord/aaa-app/1.9.0/aaa-app-1.9.0.oar
            version: 1.9.0
            dependencies: org.opencord.sadis
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne
        # --

        onos_app#olt:
          type: tosca.nodes.ONOSApp
          properties:
            name: olt
            app_id: org.opencord.olt
            url: https://oss.sonatype.org/content/groups/public/org/opencord/olt-app/3.0.1/olt-app-3.0.1.oar
            version: 3.0.1
            dependencies: org.opencord.sadis
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        onos_app#sadis:
          type: tosca.nodes.ONOSApp
          properties:
            name: sadis
            app_id: org.opencord.sadis
            url: https://oss.sonatype.org/content/groups/public/org/opencord/sadis-app/3.1.0/sadis-app-3.1.0.oar
            version: 3.1.0
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        onos_app#dhcpl2relay:
          type: tosca.nodes.ONOSApp
          properties:
            name: dhcpl2relay
            app_id: org.opencord.dhcpl2relay
            url: https://oss.sonatype.org/content/groups/public/org/opencord/dhcpl2relay-app/1.6.0/dhcpl2relay-app-1.6.0.oar
            version: 1.6.0
            dependencies: org.opencord.sadis
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        onos_app#kafka:
          type: tosca.nodes.ONOSApp
          properties:
            name: kafka
            app_id: org.opencord.kafka
            url: https://oss.sonatype.org/content/groups/public/org/opencord/kafka/1.1.0/kafka-1.1.0.oar
            version: 1.1.0
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        # CORD-Configuration
        kafka-config-attr:
          type: tosca.nodes.ServiceInstanceAttribute
          properties:
            name: /onos/v1/network/configuration/apps/org.opencord.kafka
            value: >
              {
                "kafka" : {
                  "bootstrapServers" : "cord-platform-kafka.default.svc.cluster.local:9092"
                }
              }
          requirements:
            - service_instance:
                node: onos_app#kafka
                relationship: tosca.relationships.BelongsToOne

        sadis-config-attr:
          type: tosca.nodes.ServiceInstanceAttribute
          properties:
            name: /onos/v1/network/configuration/apps/org.opencord.sadis
            value: >
              {
                "sadis" : {
                  "integration" : {
                    "cache" : {
                      "maxsize" : 1000,
                      "ttl": "PT300S"
                    },
                    "url" : "http://sadis-service:8000/subscriber/%s"
                  }
                },
                "bandwidthprofile":{
                   "integration":{
                      "url": "http://sadis-service:8000/bandwidthprofiles/%s",
                      "cache":{
                         "enabled":true,
                         "maxsize":40,
                         "ttl":"PT1m"
                      }
                   }
                }
              }
          requirements:
            - service_instance:
                node: onos_app#sadis
                relationship: tosca.relationships.BelongsToOne

        # FOR ATT-Workflow --
        aaa-config-attr:
          type: tosca.nodes.ServiceInstanceAttribute
          properties:
            name: /onos/v1/network/configuration/apps/org.opencord.aaa
            value: >
              {
                "AAA" : {
                  "radiusConnectionType" : "socket",
                  "radiusHost" : "freeradius.voltha.svc.cluster.local",
                  "radiusServerPort" : "1812",
                  "radiusSecret" : "SECRET"
                }
              }
          requirements:
            - service_instance:
                node: onos_app#aaa
                relationship: tosca.relationships.BelongsToOne

        olt-config-attr:
          type: tosca.nodes.ServiceInstanceAttribute
          properties:
            name: /onos/v1/configuration/org.opencord.olt.impl.Olt?preset=true
            value: >
              {
                "enableDhcpOnProvisioning" : true
              }
          requirements:
            - service_instance:
                node: onos_app#olt
                relationship: tosca.relationships.BelongsToOne
        # --

        onos_app#segmentrouting:
          type: tosca.nodes.ONOSApp
          properties:
            name: org.onosproject.segmentrouting
            app_id: org.onosproject.segmentrouting
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        onos_app#netcfghostprovider:
          type: tosca.nodes.ONOSApp
          properties:
            name: org.onosproject.netcfghostprovider
            app_id: org.onosproject.netcfghostprovider
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        onos_app#openflow:
          type: tosca.nodes.ONOSApp
          properties:
            name: org.onosproject.openflow
            app_id: org.onosproject.openflow
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne
  070-fabric-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Set up Fabric service
    imports:
      - custom_types/fabricservice.yaml

    topology_template:
      node_templates:
        service#fabric:
          type: tosca.nodes.FabricService
          properties:
            name: fabric
            kind: data
  080-fixtures.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Some basic fixtures
    imports:
      - custom_types/networkparametertype.yaml
      - custom_types/networktemplate.yaml
    topology_template:
      node_templates:

    # -----------------------------------------------------------------------------
    # Network Parameter Types
    # -----------------------------------------------------------------------------
        s_tag:
          type: tosca.nodes.NetworkParameterType
          properties:
            name: s_tag
        c_tag:
          type: tosca.nodes.NetworkParameterType
          properties:
            name: c_tag
        next_hop:
          type: tosca.nodes.NetworkParameterType
          properties:
            name: next_hop
        device:
          type: tosca.nodes.NetworkParameterType
          properties:
            name: device
        bridge:
          type: tosca.nodes.NetworkParameterType
          properties:
            name: bridge
        neutron_port_name:
          type: tosca.nodes.NetworkParameterType
          properties:
            name: neutron_port_name

    # -----------------------------------------------------------------------------
    # Network Templates
    # -----------------------------------------------------------------------------
        Private:
          type: tosca.nodes.NetworkTemplate
          properties:
            name: Private
            visibility: private
            translation: none

        Public shared IPv4:
          type: tosca.nodes.NetworkTemplate
          properties:
            name: Public shared IPv4
            visibility: private
            translation: NAT
            shared_network_name: nat-net

        Public dedicated IPv4:
          type: tosca.nodes.NetworkTemplate
          properties:
            name: Public dedicated IPv4
            visibility: public
            translation: none
            shared_network_name: ext-net
  0900-vrouter-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Set up VRouter service
    imports:
      - custom_types/vrouterservice.yaml

    topology_template:
      node_templates:
        service#vrouter:
          type: tosca.nodes.VRouterService
          properties:
            name: vrouter
            kind: data
  100-mcord-subscriber-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0

    imports:
      - custom_types/mcordsubscriberservice.yaml

    description: Configures the mcord-subscriber service

    topology_template:
      node_templates:
        service#mcord:
          type: tosca.nodes.MCordSubscriberService
          properties:
            name: mcord
  300-service-graph.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    imports:
      - custom_types/fabricservice.yaml
      - custom_types/mcordsubscriberservice.yaml
      - custom_types/onosservice.yaml
      - custom_types/vrouterservice.yaml
      - custom_types/rcordservice.yaml
      - custom_types/voltservice.yaml
      - custom_types/fabriccrossconnectservice.yaml
      - custom_types/attworkflowdriverservice.yaml
      - custom_types/servicegraphconstraint.yaml
      - custom_types/servicedependency.yaml
      - custom_types/service.yaml
    description: COMAC service graph
    topology_template:
      node_templates:

        service#onos:
          type: tosca.nodes.ONOSService
          properties:
            name: onos
            must-exist: true

        service#fabric:
          type: tosca.nodes.FabricService
          properties:
            name: fabric
            must-exist: true

        service#vrouter:
          type: tosca.nodes.VRouterService
          properties:
            name: vrouter
            must-exist: true

        service#mcord:
          type: tosca.nodes.MCordSubscriberService
          properties:
            name: mcord
            must-exist: true


        service#rcord:
          type: tosca.nodes.RCORDService
          properties:
            name: rcord
            must-exist: true

        service#volt:
          type: tosca.nodes.VOLTService
          properties:
            name: volt
            must-exist: true

        service#fabric-crossconnect:
          type: tosca.nodes.FabricCrossconnectService
          properties:
            name: fabric-crossconnect
            must-exist: true

        # FOR ATT-Workflow --
        service#att-workflow-driver:
          type: tosca.nodes.AttWorkflowDriverService
          properties:
            name: att-workflow-driver
            must-exist: true
        # --

        service#omec-cp:
          type: tosca.nodes.Service
          properties:
            name: omec-cp

        service#omec-up:
          type: tosca.nodes.Service
          properties:
            name: omec-up

        service#cdn-local:
          type: tosca.nodes.Service
          properties:
            name: cdn-local

        service#cdn-remote:
          type: tosca.nodes.Service
          properties:
            name: cdn-remote

        service_dependency#onos-fabric_fabric:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#fabric
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        service_dependency#vrouter_fabric:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#vrouter
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#fabric
                relationship: tosca.relationships.BelongsToOne
        service_dependency#rcord_volt:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#rcord
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#volt
                relationship: tosca.relationships.BelongsToOne

        service_dependency#onos_volt:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#volt
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        service_dependency#volt_fabric-crossconnect:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#volt
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#fabric-crossconnect
                relationship: tosca.relationships.BelongsToOne

        service_dependency#onos_fabric-crossconnect:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#fabric-crossconnect
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        # FOR ATT-Workflow --
        service_dependency#workflow_volt:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#att-workflow-driver
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#volt
                relationship: tosca.relationships.BelongsToOne
        # --


        service_dependency#mcord_epc_cp:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#omec-cp
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#mcord
                relationship: tosca.relationships.BelongsToOne

        service_dependency#mcord_epc_up:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#omec-up
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#mcord
                relationship: tosca.relationships.BelongsToOne


        service_dependency#epc_cp_epc_up:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#omec-up
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#omec-cp
                relationship: tosca.relationships.BelongsToOne

        service_dependency#epc_up_cdn_local:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#cdn-local
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#omec-up
                relationship: tosca.relationships.BelongsToOne

        service_dependency#cdn_local_cdn_remote:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#cdn-remote
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#cdn-local
                relationship: tosca.relationships.BelongsToOne

        constraints:
          type: tosca.nodes.ServiceGraphConstraint
          properties:
            constraints: '[["mcord", null, null, "rcord"], ["progran", null, "att-workflow-driver", "volt"], ["omec-cp", "omec-up", "onos", "fabric-crossconnect"], [null, "cdn-local", "fabric", null], [null, "cdn-remote", "vrouter", null]]'
---
apiVersion: v1
kind: Service
metadata:
  name: sadis-service
  labels:
    app: sadis-server
spec:
  type: ClusterIP
  ports:
    - name: sadis-service
      port: 8000
      targetPort: 8000
      protocol: TCP
  selector:
    app: sadis-server
    release: release-name
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-kubernetes
  labels:
    app: kubernetes
    chart: kubernetes-1.3.1
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetes
      release: release-name
  template:
    metadata:
      labels:
        app: kubernetes
        release: release-name
      annotations:
        checksum/config: 04ab1236116e13fc86e04773d28a0ea99bbeb82c52cdc0cb47d651a3b8e596de
    spec:
      serviceAccountName: kubernetes-synchronizer
      containers:
        - name: kubernetes
          image: omecproject/kubernetes-synchronizer:comac-1.0.0
          imagePullPolicy: IfNotPresent
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: kubernetes-config
              mountPath: /opt/xos/synchronizers/kubernetes/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: kubernetes-config
          configMap:
            name: kubernetes
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-att-workflow-driver
  labels:
    app: att-workflow-driver
    chart: att-workflow-driver-1.1.2
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: att-workflow-driver
      release: release-name
  template:
    metadata:
      labels:
        app: att-workflow-driver
        release: release-name
      annotations:
        checksum/config: 9c4ac8a5bc4bb7b18243a0b56853af581b5167f07766f79eef228d534a8116a9
    spec:
      containers:
        - name: att-workflow-driver
          image: xosproject/att-workflow-driver-synchronizer:1.2.3
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: att-workflow-driver-config
              mountPath: /opt/xos/synchronizers/att-workflow-driver/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: att-workflow-driver-config
          configMap:
            name: att-workflow-driver
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-fabric-crossconnect
  labels:
    app: fabric-crossconnect
    chart: fabric-crossconnect-1.2.2
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fabric-crossconnect
      release: release-name
  template:
    metadata:
      labels:
        app: fabric-crossconnect
        release: release-name
      annotations:
        checksum/config: 64b217d2c7bde09add1b5d826ba70854e94603e892cf3520f7e40c59d0999b1c
    spec:
      containers:
        - name: fabric-crossconnect
          image: xosproject/fabric-crossconnect-synchronizer:1.2.2
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: fabric-crossconnect-config
              mountPath: /opt/xos/synchronizers/fabric-crossconnect/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: fabric-crossconnect-config
          configMap:
            name: fabric-crossconnect
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-fabric
  labels:
    app: fabric
    chart: fabric-2.2.2
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fabric
      release: release-name
  template:
    metadata:
      labels:
        app: fabric
        release: release-name
      annotations:
        checksum/config: c555a40bf5fd575629ba29d52effa2335a8038344f4a5ce4f4b6e3cafd957976
    spec:
      containers:
        - name: fabric
          image: xosproject/fabric-synchronizer:2.2.2
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: fabric-config
              mountPath: /opt/xos/synchronizers/fabric/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: fabric-config
          configMap:
            name: fabric
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-onos-service
  labels:
    app: onos-service
    chart: onos-service-2.1.3
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: onos-service
      release: release-name
  template:
    metadata:
      labels:
        app: onos-service
        release: release-name
      annotations:
        checksum/config: e4d46b3c1d45863cd49b3d80b169c3b6423e35ea4ae0e3709150979e92ca142a
    spec:
      containers:
        - name: onos-service
          image: xosproject/onos-synchronizer:2.1.2
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: onos-service-config
              mountPath: /opt/xos/synchronizers/onos/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: onos-service-config
          configMap:
            name: onos-service
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-rcord
  labels:
    app: rcord
    chart: rcord-1.0.16
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rcord
      release: release-name
  template:
    metadata:
      labels:
        app: rcord
        release: release-name
      annotations:
        checksum/config: 9a2404feaf652a72140efa424652083eca58f5923bcae49404a5cf97bd5abb46
    spec:
      containers:
        - name: rcord
          image: xosproject/rcord-synchronizer:1.3.2
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: rcord-config
              mountPath: /opt/xos/synchronizers/rcord/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: rcord-config
          configMap:
            name: rcord
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sadis-server
  labels:
    app: sadis-server
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sadis-server
        release: release-name
    spec:
      containers:
        - name: sadis-server
          image: opencord/sadis-server:1.1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              port: 8000
              protocol: TCP
          env:
            - name: SADISSERVER_PORT
              value: "8000"
            - name: SADISSERVER_USERNAME
              value: admin@opencord.org
            - name: SADISSERVER_PASSWORD
              value: letmein
            - name: SADISSERVER_XOS
              value: xos-chameleon:9101
            - name: SADISSERVER_KAFKABROKER
              value: cord-platform-kafka:9092
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-volt
  labels:
    app: volt
    chart: volt-2.2.5
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: volt
      release: release-name
  template:
    metadata:
      labels:
        app: volt
        release: release-name
      annotations:
        checksum/config: b1dd08cb69e137c1be88fe98e3bb3ab7096ebaea6652c57b6ad3d62c294df83d
    spec:
      containers:
        - name: volt
          image: xosproject/volt-synchronizer:2.2.4
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: volt-config
              mountPath: /opt/xos/synchronizers/volt/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: volt-config
          configMap:
            name: volt
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-vrouter
  labels:
    app: vrouter
    chart: vrouter-2.1.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vrouter
      release: release-name
  template:
    metadata:
      labels:
        app: vrouter
        release: release-name
      annotations:
        checksum/config: 6bd1e09f0dfda7c2bbb6426726ec8c5575509bd53d70fb82ec33bc6fc6863784
    spec:
      containers:
        - name: vrouter
          image: xosproject/vrouter-synchronizer:2.1.0
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: vrouter-config
              mountPath: /opt/xos/synchronizers/vrouter/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: vrouter-config
          configMap:
            name: vrouter
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-base-kubernetes-tosca-loader
  labels:
    app: base-kubernetes
    chart: base-kubernetes-1.2.1
    release: release-name
    heritage: Helm
spec:
  backoffLimit: 12
  template:
    metadata:
      labels:
        app: base-kubernetes
        release: release-name
      annotations:
        checksum/config: 69411cd6483f6323a20a38290a8e524614f5619ef51dfeb2bd6fd3cce8d02b49
    spec:
      restartPolicy: OnFailure
      containers:
        - name: base-kubernetes-tosca-loader
          image: xosproject/tosca-loader:1.3.1
          imagePullPolicy: Always
          env:
            - name: XOS_USER
              value: admin@opencord.org
            - name: XOS_PASSWD
              valueFrom:
                secretKeyRef:
                  name: xos-admin-passwd-secret
                  key: password
          volumeMounts:
            - name: base-kubernetes-tosca
              mountPath: /opt/tosca
      volumes:
        - name: base-kubernetes-tosca
          configMap:
            name: base-kubernetes-tosca
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-mcord-subscriber
  labels:
    app: mcord-subscriber
    chart: mcord-subscriber-2.0.5
    release: release-name
    heritage: Helm
spec:
  template:
    metadata:
      labels:
        app: mcord-subscriber
        release: release-name
      annotations:
        checksum/config: 339f998fac66b2bad920c49dacef9e271f67a0e13f68af9fb614b9b86b118948
    spec:
      restartPolicy: Never
      containers:
        - name: mcord-subscriber
          image: omecproject/mcord-synchronizer:comac-1.0.0
          imagePullPolicy: IfNotPresent
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: mcord-subscriber-config
              mountPath: /opt/xos/synchronizers/mcord/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: mcord-subscriber-config
          configMap:
            name: mcord-subscriber
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-comac-tosca-loader
  labels:
    app: comac
    chart: comac-0.0.7
    release: release-name
    heritage: Helm
spec:
  backoffLimit: 12
  template:
    metadata:
      labels:
        app: comac
        release: release-name
      annotations:
        checksum/config: 96c702acf045e51374e22155b1d8395f20250149b772cadeb188a57bc68a845e
    spec:
      restartPolicy: OnFailure
      containers:
        - name: comac-tosca-loader
          image: xosproject/tosca-loader:1.3.1
          imagePullPolicy: Always
          env:
            - name: XOS_USER
              value: admin@opencord.org
            - name: XOS_PASSWD
              valueFrom:
                secretKeyRef:
                  name: xos-admin-passwd-secret
                  key: password
          volumeMounts:
            - name: comac-tosca
              mountPath: /opt/tosca
      volumes:
        - name: comac-tosca
          configMap:
            name: comac-tosca
