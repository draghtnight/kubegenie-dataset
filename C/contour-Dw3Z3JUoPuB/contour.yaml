apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-contour
  labels:
    app: contour
    chart: contour-0.3.2
    release: release-name
    heritage: Helm
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressroutes.contour.heptio.com
  labels:
    component: ingressroute
    app: contour
    chart: contour-0.3.2
    release: release-name
    heritage: Helm
spec:
  group: contour.heptio.com
  version: v1beta1
  scope: Namespaced
  names:
    plural: ingressroutes
    kind: IngressRoute
  additionalPrinterColumns:
    - name: FQDN
      type: string
      description: Fully qualified domain name
      JSONPath: .spec.virtualhost.fqdn
    - name: TLS Secret
      type: string
      description: Secret with TLS credentials
      JSONPath: .spec.virtualhost.tls.secretName
    - name: First route
      type: string
      description: First routes defined
      JSONPath: .spec.routes[0].match
    - name: Status
      type: string
      description: The current status of the IngressRoute
      JSONPath: .status.currentStatus
    - name: Status Description
      type: string
      description: Description of the current status
      JSONPath: .status.description
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            virtualhost:
              properties:
                fqdn:
                  type: string
                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-z0-9]{2,}$
                tls:
                  properties:
                    secretName:
                      type: string
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?([\.\/][a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    minimumProtocolVersion:
                      type: string
                      enum:
                        - "1.3"
                        - "1.2"
                        - "1.1"
            strategy:
              type: string
              enum:
                - RoundRobin
                - WeightedLeastRequest
                - Random
                - RingHash
                - Maglev
            healthCheck:
              type: object
              required:
                - path
              properties:
                path:
                  type: string
                  pattern: ^\/.*$
                intervalSeconds:
                  type: integer
                timeoutSeconds:
                  type: integer
                unhealthyThresholdCount:
                  type: integer
                healthyThresholdCount:
                  type: integer
            routes:
              type: array
              items:
                required:
                  - match
                properties:
                  match:
                    type: string
                    pattern: ^\/.*$
                  delegate:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      namespace:
                        type: string
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                  services:
                    type: array
                    items:
                      type: object
                      required:
                        - name
                        - port
                      properties:
                        name:
                          type: string
                          pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                        port:
                          type: integer
                        weight:
                          type: integer
                        strategy:
                          type: string
                          enum:
                            - RoundRobin
                            - WeightedLeastRequest
                            - Random
                            - RingHash
                            - Maglev
                        healthCheck:
                          type: object
                          required:
                            - path
                          properties:
                            path:
                              type: string
                              pattern: ^\/.*$
                            intervalSeconds:
                              type: integer
                            timeoutSeconds:
                              type: integer
                            unhealthyThresholdCount:
                              type: integer
                            healthyThresholdCount:
                              type: integer
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tlscertificatedelegations.contour.heptio.com
  labels:
    component: tlscertificatedelegation
spec:
  group: contour.heptio.com
  version: v1beta1
  scope: Namespaced
  names:
    plural: tlscertificatedelegations
    kind: TLSCertificateDelegation
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            delegations:
              type: array
              items:
                type: object
                required:
                  - secretName
                  - targetNamespaces
                properties:
                  match:
                    type: string
                  targetNamespaces:
                    type: array
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-contour
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - contour.heptio.com
    resources:
      - ingressroutes
      - tlscertificatedelegations
    verbs:
      - get
      - list
      - watch
      - put
      - post
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-contour
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-contour
subjects:
  - kind: ServiceAccount
    name: release-name-contour
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-contour
  labels:
    app: contour
    chart: contour-0.3.2
    release: release-name
    heritage: Helm
  annotations:
    prometheus.io/port: "8000"
    prometheus.io/scrape: "true"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      name: http
      protocol: TCP
      targetPort: 8080
    - port: 443
      name: https
      protocol: TCP
      targetPort: 8443
  selector:
    app: contour
    release: release-name
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-contour
  labels:
    app: contour
    chart: contour-0.3.2
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: contour
      release: release-name
  template:
    metadata:
      labels:
        app: contour
        release: release-name
      annotations:
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "8002"
        prometheus.io/scrape: "true"
    spec:
      containers:
        - image: gcr.io/heptio-images/contour:v0.12.0
          imagePullPolicy: IfNotPresent
          name: contour
          command:
            - contour
          args:
            - serve
            - --incluster
            - --envoy-service-http-port
            - "8080"
            - --envoy-service-https-port
            - "8443"
        - image: docker.io/envoyproxy/envoy-alpine:v1.9.1
          imagePullPolicy: IfNotPresent
          name: envoy
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8443
              name: https
          command:
            - envoy
          args:
            - --config-path /config/contour.yaml
            - --service-cluster cluster0
            - --service-node node0
            - --log-level info
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8002
            initialDelaySeconds: 3
            periodSeconds: 3
          volumeMounts:
            - name: contour-config
              mountPath: /config
          lifecycle:
            preStop:
              exec:
                command:
                  - wget
                  - -qO-
                  - --post-data=''
                  - http://localhost:9001/healthcheck/fail
      initContainers:
        - image: gcr.io/heptio-images/contour:v0.12.0
          imagePullPolicy: IfNotPresent
          name: envoy-initconfig
          command:
            - contour
          args:
            - bootstrap
            - /config/contour.yaml
          volumeMounts:
            - name: contour-config
              mountPath: /config
          env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      volumes:
        - name: contour-config
          emptyDir: {}
      dnsPolicy: ClusterFirst
      serviceAccountName: release-name-contour
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - contour
              topologyKey: kubernetes.io/hostname
