apiVersion: v1
kind: Namespace
metadata:
  annotations:
    cape.sh/license: free10nodes
  labels:
    heritage: cape
  name: cape
---
apiVersion: v1
imagePullSecrets:
  - name: registry-secret
kind: ServiceAccount
metadata:
  labels:
    heritage: cape
  name: manager
  namespace: cape
---
apiVersion: v1
imagePullSecrets:
  - name: registry-secret
kind: ServiceAccount
metadata:
  labels:
    heritage: cape
  name: web
  namespace: cape
---
apiVersion: v1
data:
  ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lRSVBOcExtWS92TDlzT2dhK3BzZjdEekFOQmdrcWhraUc5dzBCQVFzRkFEQVcKTVJRd0VnWURWUVFERXd0emRtTXRZMkZ3WlMxallUQWVGdzB5TWpBMk1USXdPRFU1TlRKYUZ3MHpNakEyTURrdwpPRFU1TlRKYU1CWXhGREFTQmdOVkJBTVRDM04yWXkxallYQmxMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBb0tzQVF1aVJNbXBPUDNLMjMxUmlOY2RySFc4Wm81RG1wN3RRSkkvakphWmkKWTkrQkVuZXp0azJVUXVKNlFSZEF4UWtRejJTbkJRd2FrWWdzSHgzT2RHY3BQTzhQeVVBazJxakF6YWNRRVdORQpEUEFjNURxMjJ5bWlkaUVxVWtVN01XTFYxaXBjK1ViV2dyTXlvY1RGaGlGa2JxL0RSV1c3aDBSdmtNZWN3ZVkxCjZTZDYxcU43ZTVOZjdqWGJ0TGh3MG9qcG9GV05Ea2QxOXlidDVBMmVMWFhHdHN2M3ZtMzFtd2xRVnBHYy95dnkKems3Q0JxaGxmSWUvNzlpV04zT3dhQjAvdzR6QVpGT21aK3REQTRvME1GRVJuWnBBaEhuVlFQQ0pQWEMzbjV2OAo0ZWk4UWtuWE9CZnNrMUN1NkZnN1lKa2VhT3Nqa1Nac00zTGRwbGtTSHdJREFRQUJvMkV3WHpBT0JnTlZIUThCCkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkRYYXVseUc1NHFFV09xRmhnaE9OeSs0c0YxT01BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUF3MnhObFpYRDh6RE53VUM1Sk0rYTRXaEZXb3FBNFVMaEdKWnYyd0tURUdFcHozWkVLCnhpbkRUWWhTaUNIa0hpdXVNb1plTjl0bFUzQVY2cU1sUm9HeGN1SmpZWXJrbzRCWC9jRUZNTldGcHlxLzBsalkKV2Z4dGhEK2FaUVdkQVpRNzlHdXNaZXpZc2wvcVIzRjZkVnR3WnRUVEJsSkRENFJtOFY5cEhSSVRTZnB2OTdEcAo5RmFSaEdSOVhKdWtUTUFOelhUUm9Eall6MUhaK09VS2ZwK1AxbDAvdUxGVmFjbWJWOExDOGpRRmVGZmlwbERVCmJDbS9kZFNpa1Bia3pKdEtIYlJnaUNWVE91L2pLOVd1ckYrSkIrMTdSdmx1b2haUDFJNTc0dmQyNy9oc0tqSkYKWHQzd0E4SjNYU1ltNnFZVkRSN25ncThkRmdwWXc5WmI2RGNsCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQVBTRnl5Y2wwbk9hM1dlVVN4ZXNIaTR3RFFZSktvWklodmNOQVFFTEJRQXcKR3pFWk1CY0dBMVVFQXhNUU1USTNMakF1TUM0eExtNXBjQzVwYnpBZUZ3MHlNakEyTVRJd09EVTVOVE5hRncwegpNakEyTURrd09EVTVOVE5hTUJzeEdUQVhCZ05WQkFNVEVERXlOeTR3TGpBdU1TNXVhWEF1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDcEhlNVJVNyt3M0N3L3A0TVZTRGpSUWREdFJXZGgKekhWcTE1YTdBL1BvU1pNcG9BU20zc0RkWGtlNW11S1BnZnlMN1NBa1c3NDZ4TCt6U2RiclNjU1FRSUZSUFBlUApmQ2xpb1RvV0Z1anptT09SR0pieWsyZkc5OVlJS2N1aXVZTkp5dERJdHlzc0J2WWtSZmdzWnJOUWpjbDg3N002CkZnaGw0eFVSbWxJbTNXL1huWjk1R25reDA2VGcyVGVPNGhmMmVIM2dTbTdkME5HMjBmK1Y5azRUd3FBY1RWR1AKL2cwa0ZqRlBsZ0FwVmk3VkhvWFUyQ2hxL2ZnVEhBcm5VbEVpbUpTQityMFcrTmV6dEZqNG1GOGFLRHBCSG9jUApFVmcxa0Y1M1FXR09sUW9iRHZxZ1h1MmJsNHFHUi91N05JdW4rQ1VLT2U1TnczS2RJSW1GVFZYakFnTUJBQUdqCmdaVXdnWkl3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUZNR0ExVWRFUVJNTUVxQ0VERXlOeTR3TGpBdU1TNXVhWEF1YVcrQwpHREV5Tnk0d0xqQXVNUzV1YVhBdWFXOHVaR1ZtWVhWc2RJSWNNVEkzTGpBdU1DNHhMbTVwY0M1cGJ5NWtaV1poCmRXeDBMbk4yWXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU1OeGRoODNBbFdRUk85OEpkTlgyRGx1U2hwc3YKVGlEM3RNZ2UwY2RTWVgrR0h2ajV6ZjgwNXVXRmlad1d2OFJxNkoxYVVnQitPR2dZQ0JmN1hhRFM3WUdzUDcyZgpxbTlYV3RseFNnYWcrS2h6NCtzMCtySkx2TzFVSllIZ011ZXM4U2JCUTNNblEzVXJqancwUHQrQmRKbVJNQWRyCkZPQkpRYlFHVlBmdFFjc1lrYlFuZVZCWmwxb3YrMFMxMTd1UHhlcVdGbndiQjQ2ZWlNZ1lXQ3BLZTdGMjZmN0cKcGNYVTlXVkc3dnhzMjRISjZrQndrNE1mbnpoR2ZDSWQ2a3dIZUUvOUdmM2FOMWZzcE43cEsrMUEwamJnbE56WQo3WDg0VlJhTU5HbFdNalg0VGl2VGdEb0hiTmxLNmVzcWhEU0duU3d6NjFiQldLYXliTFd3RW52MENRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcVIzdVVWTy9zTndzUDZlREZVZzQwVUhRN1VWblljeDFhdGVXdXdQejZFbVRLYUFFCnB0N0EzVjVIdVpyaWo0SDhpKzBnSkZ1K09zUy9zMG5XNjBuRWtFQ0JVVHozajN3cFlxRTZGaGJvODVqamtSaVcKOHBObnh2ZldDQ25Mb3JtRFNjclF5TGNyTEFiMkpFWDRMR2F6VUkzSmZPK3pPaFlJWmVNVkVacFNKdDF2MTUyZgplUnA1TWRPazROazNqdUlYOW5oOTRFcHUzZERSdHRIL2xmWk9FOEtnSEUxUmovNE5KQll4VDVZQUtWWXUxUjZGCjFOZ29hdjM0RXh3SzUxSlJJcGlVZ2ZxOUZ2alhzN1JZK0poZkdpZzZRUjZIRHhGWU5aQmVkMEZoanBVS0d3NzYKb0Y3dG01ZUtoa2Y3dXpTTHAvZ2xDam51VGNOeW5TQ0poVTFWNHdJREFRQUJBb0lCQUJramw5K0RBWVc2MU9FSgpkNVRjVFlYZHNMNzBpQytqZ3ZqRTMyVWhhMHBtVlhma2o0eDJwRmpEd1FtNEdtR1d3d0hSMSt0UHIvRndlY2FlCi9WR3dmNFdwOFE4d2J1Um5Zb2VFeSt1b3NDdzExKzRqcDV5YmlOdXN6NlliQUdoS0IxZ2F5L3BxTUFLMWJqVnEKS1VBQWJEdFhPRkpZRjE1VkZCNkJLUXFhMUFkdXVVajJsNXVpQ0o5N0E2Um9BNDNuRGdjRUNrTE5JSy9UeUdkSQpSRGVaU1l5czFRb0ZrVWRKaVE3aklCcXdVQnJOMkRINTExbVFUSEJadHdKTmpCU0crMG1EZDc0ZkZxOWxucHJ0CnIrSjEweEozcEZwcDVzcHhtZkE3YU5HbW9lNERtU29xQTc5ZVMyT3BiRlJoSE9lUnhqYWpydFB4dXY0UFhvdTEKcmNKSXRURUNnWUVBd3RaalVkRmZNSEdpRWVrbEJLSEs5NmxtZEF2NStUYlprVkl1bVIvZjBtQWJXRUR5VlJLaAo0dzk2TFJrRFk5Mnk3M3MwTGZoTEhWTU0yNk0ycmM4MW15RSs4b3pSYmY0Mit2TEZpZ1JQd2tGazc4U0dabm00CjVrQ29xTGpkYVo3TEVXdGdVUkQxSGZuVW9UTEFQUTVMejlTemdCTDB1Q25yUmdzMkRGYm0yTzhDZ1lFQTNqU1UKQUZibzh0V2xZTDFGVHBLZ0pEQTNLWEluNWx3UHJ4bTZmRWFKcDltSlIxeUZvS2JwRHNyNVJ2YlB0bFYzakJadQp2OVV6emFONVRPU3BIOTFUb3dVQ1cxVlJJQXZmZ1BvQVBGRzhXbWlKZ3FyanE4dUZObmU3NXprNmFHT3Y3TjRPCjVRUm0yUmZWVG1XRTM0RkZGSWRoVFNlYmJtRmd3RWJCVEpGblNrMENnWUJOSWdTVnluYU52aDYwU29GZU1STWkKTXMwZG1mUXZSaGloNEZBVVRMc1dGUGdlV3kvVW9CaTR4RkxROGJzVzJSalNtQXJUUEIyNGtUMWc0bDl1TmI3NgpHQkpNZ1pVVG4zVnlxWk9zalFKcVcrc3l4TEdVZGhIT0RjRDNjcUF0QlRGTlJ4NE5XZEpBT0x5RnlJcTBZU21BCk1LdVRRMjNnVHJBV3ZhOTYrUmhRdndLQmdRQ0FtbG1XSUxiTjVJekVnb2FjUlF4ZUpYR25rU1E2bE1tWEJBTUUKYmlhNWVKT1ZNNTA3TDU3dkt0WS9GaFY5WjlXNnhEancyY29UbUN0YUwzVWF0aFB6NDdCTGdBTmwwcmxXZ2xxawpqb0crcVlYOGxEOFViTVA2bEMyeVUxTFVtKzF6MzhrckR2TWZia1hNQzhGdFFmbmpPYjg4MGxHSS90N3FLWWt5CmNXMGdlUUtCZ0VwT0MrdWJzb3paRmZ6c2dXZCtLMWRRRFpLZzI4ZzZ1ekdCNHJ1bnI3L1FwYUU2akI0S00vMjIKZlVQdys0UlZwT2JpUDR5dWpZanRLTDArL0p6bnp6cFRBV2kyTjdPY3JTc3dLaVN4N3N4QzZBZjY4NjVJbFM4bApVb0VaRGc5MnZxMUFVZGdrT2haRkRVS3VUZ0R5U3g0ZjgvY25VK3JMUkdZeVNSMVZpb2w4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    heritage: cape
  name: web-tls
  namespace: cape
type: kubernetes.io/tls
---
apiVersion: v1
data:
  cape.rego: |
    package cape
    import data.kubernetes

    allow[resource] {
      input.method = "GET"
      resource = kubernetes[input.resource][input.namespace][_]
      roles[[role, resource.metadata.name]]
      bindings[role]
    }

    roles[[role, name]] {
      r := kubernetes.roles[input.namespace][_]
      role = r.metadata.name
      name = r.rules[_].resourceNames[_]
    }

    bindings[role] {
      rb := kubernetes.rolebindings[input.namespace][_]
      rb.roleRef.name = role
      rb.subjects[_].name = input.user
    }
kind: ConfigMap
metadata:
  labels:
    heritage: cape
    openpolicyagent.org/policy: rego
  name: cape-policy
  namespace: cape
---
apiVersion: v1
data:
  AGENT_BASE_URL: http://web:9000
  API_BASE_URL: https://127.0.0.1.nip.io
  OAUTH2_PROXY_CLIENT_ID: cape
  PUBSUB_URL: ws://pubsub:4040
  REGISTRY_URL_PREFIX: capesh
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    heritage: cape
  name: common-env-fgtm67hfk6
  namespace: cape
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: applications.operator.cape.sh
spec:
  group: operator.cape.sh
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    singular: application
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Application is the Schema for the applications API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ApplicationSpec defines the desired state of Application
          properties:
            branch:
              description: Branch refers to the git branch
              type: string
            chart:
              description: Chart is the name of the chart inside of Helm Repository
              type: string
            folder:
              description: Folder is the path to find manifests or helm chart
              type: string
            namespace:
              description: Namespace in which application needs will be deployed,this can be overwritten during deployment
              type: string
            recursive:
              description: Recursive signifies application of contents recursively in folder
              type: boolean
            repoRef:
              description: RepoRef refers to the repository
              type: string
            sync:
              description: Sync signifies automatic syncing of manifest contents
              type: boolean
            type:
              description: Type is the type of app kustomize,helm or manifest
              enum:
                - kustomize
                - helm
                - manifest
              type: string
            version:
              description: Version is the helm chart version
              type: string
          required:
            - repoRef
            - type
          type: object
        status:
          description: ApplicationStatus defines the observed state of Application
          properties:
            chartIndex:
              description: ChartIndex is cached list of charts in a helm repository
              type: string
            childReferences:
              description: List of dependent child object references
              items:
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                  - apiVersion
                  - kind
                  - name
                  - uid
                type: object
              type: array
            conditions:
              items:
                description: BasicCondition fields that are expected in a condition
                properties:
                  lastProbeTime:
                    description: Last time we probed the condition.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message human readable reason
                    type: string
                  reason:
                    description: Reason simple single word reason in CamleCase
                    type: string
                  status:
                    description: Status is one of True,False,Unknown
                    type: string
                  type:
                    description: Type Condition type
                    type: string
                required:
                  - status
                  - type
                type: object
              type: array
            lastUpdate:
              format: date-time
              type: string
            reason:
              type: string
            status:
              enum:
                - Success
                - Failure
              type: string
            tree:
              description: DirectoryTree is the folder cached folder structure from git repo
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: backuplocationoperations.operator.cape.sh
spec:
  group: operator.cape.sh
  names:
    kind: BackupLocationOperation
    listKind: BackupLocationOperationList
    plural: backuplocationoperations
    shortNames:
      - bslo
    singular: backuplocationoperation
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: BackupLocationOperation is the Schema for the backuplocationoperations API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: BackupLocationOperationSpec defines the desired state of BackupLocationOperation
          properties:
            backupLocation:
              type: string
            clusters:
              items:
                type: string
              type: array
            kind:
              type: string
          required:
            - backupLocation
            - clusters
            - kind
          type: object
        status:
          description: BackupLocationOperationStatus defines the observed state of BackupLocationOperation
          properties:
            lastUpdate:
              format: date-time
              type: string
            reason:
              type: string
            status:
              enum:
                - Success
                - Failure
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: backuplocations.operator.cape.sh
spec:
  group: operator.cape.sh
  names:
    kind: BackupLocation
    listKind: BackupLocationList
    plural: backuplocations
    shortNames:
      - bsl
    singular: backuplocation
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: BackupLocation is the Schema for the backuplocations API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: BackupLocationSpec defines the desired state of BackupLocation
          properties:
            backupLocation:
              description: BSLConfig is the configuration to use for the backup storage location
              properties:
                endpoint:
                  description: s3Url for Velero Config
                  type: string
                fqdn:
                  description: FQDN is public reachable for Velero Storage Location
                  type: string
                provider:
                  description: Storage Provider (minio, s3), For minio we provision a minio instance.
                  type: string
                settings:
                  additionalProperties:
                    type: string
                  description: Extra settings for cloud providers
                  type: object
              required:
                - provider
              type: object
            bucketName:
              description: Name of the object storage bucket where backups should be stored
              type: string
            clusterRef:
              description: ClusterRef is cluster identifier which owns it
              type: string
            clusters:
              description: Clusters is a list of member clusters having read-only access to this backup-location
              items:
                type: string
              type: array
            deleteVelero:
              description: DeleteVelero flag if enabled, deletes velero on uninstalling the biq-velero-operator.
              type: boolean
            namespace:
              description: The namespace in which Velero should operate
              type: string
            prefix:
              description: Prefix under which all Velero data should be stored within the bucket.
              type: string
            providerName:
              description: Provider name for backup and volume storage
              type: string
            restic:
              description: Restic configurations
              properties:
                enabled:
                  description: Enable creating restic deployment
                  type: boolean
                hostPodsPath:
                  description: Represents path of pods in Kubernetes nodes
                  type: string
                privileged:
                  type: boolean
              required:
                - enabled
                - hostPodsPath
                - privileged
              type: object
            secretName:
              description: Name of the secret object containing credentials for backup and volume provider
              type: string
            useVolumeSnapshots:
              description: Whether or not to create snapshot location automatically. Set to false if you do not plan to create volume snapshots via a storage provider.
              type: boolean
            veleroRef:
              description: VeleroRef is the name of Velero CRDs instance created in the child cluster
              type: string
            volumeSnapshotLocation:
              description: VSLConfig is the configuration to use for the volume snapshot location
              properties:
                endpoint:
                  description: s3Url for Velero Config
                  type: string
                fqdn:
                  description: FQDN is public reachable for Velero Storage Location
                  type: string
                provider:
                  description: Storage Provider (minio, s3), For minio we provision a minio instance.
                  type: string
                settings:
                  additionalProperties:
                    type: string
                  description: Extra settings for cloud providers
                  type: object
              required:
                - provider
              type: object
          required:
            - bucketName
            - deleteVelero
            - namespace
            - providerName
            - secretName
          type: object
        status:
          description: BackupLocationStatus defines the observed state of BackupLocation
          properties:
            conditions:
              items:
                description: BasicCondition fields that are expected in a condition
                properties:
                  lastProbeTime:
                    description: Last time we probed the condition.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message human readable reason
                    type: string
                  reason:
                    description: Reason simple single word reason in CamleCase
                    type: string
                  status:
                    description: Status is one of True,False,Unknown
                    type: string
                  type:
                    description: Type Condition type
                    type: string
                required:
                  - status
                  - type
                type: object
              type: array
            lastUpdate:
              format: date-time
              type: string
            reason:
              type: string
            status:
              enum:
                - Success
                - Failure
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clusters.operator.cape.sh
spec:
  group: operator.cape.sh
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Cluster is the Schema for the clusters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClusterSpec defines the desired state of Cluster
          properties:
            agentMode:
              description: AgentMode represents if the cluster is behind a firewall and needs to be connected via a remote agent
              type: boolean
            component:
              description: Components details
              properties:
                backupDR:
                  description: BackupDR is true if Velero is Installed
                  type: boolean
              type: object
            credentialSecret:
              description: SecretName where cluster credentials is stored
              type: string
            provider:
              description: Cluster cloud provider (GKE, EKS etc.)
              type: string
            region:
              description: Geo-location of the cluster
              type: string
          required:
            - provider
          type: object
        status:
          description: ClusterStatus defines the observed state of Cluster
          properties:
            childReferences:
              description: List of dependent child object references
              items:
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                  - apiVersion
                  - kind
                  - name
                  - uid
                type: object
              type: array
            conditions:
              items:
                description: BasicCondition fields that are expected in a condition
                properties:
                  lastProbeTime:
                    description: Last time we probed the condition.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message human readable reason
                    type: string
                  reason:
                    description: Reason simple single word reason in CamleCase
                    type: string
                  status:
                    description: Status is one of True,False,Unknown
                    type: string
                  type:
                    description: Type Condition type
                    type: string
                required:
                  - status
                  - type
                type: object
              type: array
            health:
              description: Cluster Health information
              properties:
                message:
                  description: Human-readable message of cluster health operation
                  type: string
                phase:
                  description: Phase is the current phase of the health operation
                  enum:
                    - Down
                    - Healthy
                    - UnHealthy
                    - Error
                  type: string
                updated_at:
                  description: UpdatedAt is timestamp of when health operation is performed
                  format: date-time
                  type: string
              type: object
            lastUpdate:
              format: date-time
              type: string
            nodes:
              description: Number of worker nodes in the cluster
              type: integer
            reason:
              type: string
            status:
              enum:
                - Success
                - Failure
              type: string
          type: object
      required:
        - spec
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: components.operator.cape.sh
spec:
  group: operator.cape.sh
  names:
    kind: Component
    listKind: ComponentList
    plural: components
    singular: component
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Component is the Schema for the components API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ComponentSpec defines the desired state of Component
          properties:
            backupLocationRef:
              description: BackupLocationRef is a reference to default backupLocation while installing velero
              type: string
            clusterRef:
              description: ClusterRef is cluster identifier
              type: string
            image:
              description: Docker image of child operator
              type: string
            kind:
              description: Kind of component
              type: string
            settings:
              additionalProperties:
                type: string
              description: Settings/configuration to be used by child operator
              type: object
            version:
              description: Version of child operator
              type: string
          required:
            - clusterRef
            - kind
            - version
          type: object
        status:
          description: ComponentStatus defines the observed state of Component
          properties:
            components:
              description: Status of sub-components running on remote cluster
              items:
                description: SubComponentStatus contains component installation progress and status
                properties:
                  errorLog:
                    description: ErrorLog defines reason for the failure
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: The last time this condition was updated.
                    format: date-time
                    type: string
                  name:
                    description: SubComponentType defines type of sub-components to install
                    enum:
                      - minio
                      - veleroRestic
                      - velero
                    type: string
                  status:
                    description: Status of Sub-component
                    enum:
                      - success
                      - failed
                      - in_progress
                      - unknown
                    type: string
                  version:
                    description: Version of Sub-component (docker image tag)
                    type: string
                required:
                  - name
                  - status
                type: object
              type: array
            conditions:
              items:
                properties:
                  lastProbeTime:
                    description: Last time we probed the condition.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Human-readable message indicating details about last transition.
                    type: string
                  reason:
                    description: Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                  - status
                  - type
                type: object
              type: array
            lastUpdate:
              format: date-time
              type: string
            reason:
              type: string
            status:
              enum:
                - Success
                - Failure
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: configs.operator.cape.sh
spec:
  group: operator.cape.sh
  names:
    kind: Config
    listKind: ConfigList
    plural: configs
    singular: config
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Config is the Schema for the configs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        data:
          additionalProperties:
            type: string
          type: object
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ConfigSpec defines the desired state of Config
          properties:
            cluster:
              type: string
            rules:
              additionalProperties:
                type: string
              type: object
          type: object
        status:
          description: ConfigStatus defines the observed state of Config
          properties:
            childReferences:
              description: List of dependent child object references
              items:
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                  - apiVersion
                  - kind
                  - name
                  - uid
                type: object
              type: array
            lastUpdate:
              format: date-time
              type: string
            reason:
              type: string
            status:
              enum:
                - Success
                - Failure
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: deployments.operator.cape.sh
spec:
  group: operator.cape.sh
  names:
    kind: Deployment
    listKind: DeploymentList
    plural: deployments
    shortNames:
      - capedeploys
    singular: deployment
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Deployment is the Schema for the deployments API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: DeploymentSpec defines the desired state of Deployment
          properties:
            appRef:
              description: 'AppRef is the reference to an Application Required: true'
              type: string
            clusterRef:
              description: ClusterRef if present then deploy to a single cluster instead of a federation
              type: string
            fedClusters:
              description: FedClusters are the member clusters of the federation to which the deployment is to be deployed
              items:
                type: string
              type: array
            federationRef:
              description: 'FederationRef is the federation to which the deployment will be created Required: true'
              type: string
            helmValues:
              description: if application type if helm, then helm values yaml
              type: string
            kustomizeValues:
              description: if application type is kustomize, then kustomize related image/deployment values
              type: string
            namespace:
              description: Namespace is the namespace on target cluster
              type: string
            releaseMeta:
              description: Release meta for deployments
              properties:
                author:
                  description: Author is the author of the commit
                  type: string
                chartVersion:
                  description: ChartVersion is the version of chart that needs to be deployed
                  type: string
                date:
                  description: Date is the time of the creation of the commit
                  format: date-time
                  type: string
                message:
                  description: Message is the commit message
                  type: string
                revision:
                  description: Revision is the branch/tag/hash of the repo
                  type: string
                sender:
                  description: Sender is the creator of the deployment
                  type: string
                sha:
                  description: SHA is the commit sha
                  type: string
              type: object
            settings:
              description: Extra settings for cloud providers
              type: string
          required:
            - appRef
            - fedClusters
            - federationRef
            - namespace
          type: object
        status:
          description: DeploymentStatus defines the observed state of Deployment
          properties:
            childReferences:
              description: List of dependent child object references
              items:
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                  - apiVersion
                  - kind
                  - name
                  - uid
                type: object
              type: array
            history:
              description: History is the list of release histories
              items:
                properties:
                  author:
                    description: Author is the author of the commit
                    type: string
                  chartVersion:
                    description: ChartVersion is the version of chart that needs to be deployed
                    type: string
                  clusterRef:
                    description: ClusterRef if present then deploy to a single cluster instead of a federation
                    type: string
                  createdAt:
                    description: Date is the time of the creation of the commit
                    format: date-time
                    type: string
                  federationRef:
                    description: FederationRef is the federation to which the deployment will be created
                    type: string
                  helmValues:
                    description: if application type if helm, then helm values yaml
                    type: string
                  kustomizeValues:
                    description: if application type is kustomize, then kustomize related image/deployment values
                    type: string
                  memberClusters:
                    description: MemberClusters are clusters selected to apply federated members
                    items:
                      type: string
                    type: array
                  message:
                    description: Message is the commit message
                    type: string
                  resources:
                    description: Resources created in a member cluster
                    items:
                      description: ResourceStatus is the statuses of the resources
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  revision:
                    description: Revision is the branch/tag/hash of the repo
                    type: string
                  sender:
                    description: Sender is the creator of the deployment
                    type: string
                  sha:
                    description: SHA is the commit sha
                    type: string
                  syncResult:
                    description: SyncResult hold any pertinent messages when attempting to perform a release (typically errors)
                    properties:
                      message:
                        type: string
                      phase:
                        type: string
                    type: object
                type: object
              type: array
            lastUpdate:
              format: date-time
              type: string
            reason:
              type: string
            status:
              enum:
                - Success
                - Failure
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: federations.operator.cape.sh
spec:
  group: operator.cape.sh
  names:
    kind: Federation
    listKind: FederationList
    plural: federations
    shortNames:
      - feds
    singular: federation
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Federation is the Schema for the federations API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: FederationSpec defines the desired state of Federation
          properties:
            host:
              description: Host is the cluster reference where kubefed controller runs
              type: string
            members:
              description: Members Federation member cluster references
              items:
                type: string
              type: array
          required:
            - host
          type: object
        status:
          description: FederationStatus defines the observed state of Federation
          properties:
            childReferences:
              description: List of dependent child object references
              items:
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                  - apiVersion
                  - kind
                  - name
                  - uid
                type: object
              type: array
            conditions:
              description: Array of Conditions as expected to be present in kubernetes resources
              items:
                description: BasicCondition fields that are expected in a condition
                properties:
                  lastProbeTime:
                    description: Last time we probed the condition.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message human readable reason
                    type: string
                  reason:
                    description: Reason simple single word reason in CamleCase
                    type: string
                  status:
                    description: Status is one of True,False,Unknown
                    type: string
                  type:
                    description: Type Condition type
                    type: string
                required:
                  - status
                  - type
                type: object
              type: array
            federation:
              description: Federation is the overall federation status
              properties:
                lastUpdate:
                  format: date-time
                  type: string
                reason:
                  type: string
                status:
                  enum:
                    - Success
                    - Failure
                  type: string
              type: object
            host:
              description: Host is the status of host cluster
              properties:
                lastUpdate:
                  description: LastUpdate status
                  format: date-time
                  type: string
                message:
                  description: Message for status updates
                  type: string
                status:
                  description: Status of the federation member
                  enum:
                    - Success
                    - Failure
                    - Installing
                  type: string
              type: object
            installationStatus:
              description: InstallationStatus is overall installation status for ControlPlane and Member cluster
              enum:
                - Success
                - Failure
                - Installing
                - Terminating
              type: string
            memberStatus:
              additionalProperties:
                description: FederationMemberStatus defines the status of members of Federation
                properties:
                  lastUpdate:
                    description: LastUpdate status
                    format: date-time
                    type: string
                  message:
                    description: Message for status updates
                    type: string
                  status:
                    description: Status of the federation member
                    enum:
                      - Success
                      - Failure
                      - Installing
                    type: string
                type: object
              description: MemberStatus is the status of each member
              type: object
            members:
              description: Members last known list
              items:
                type: string
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: organizations.operator.cape.sh
spec:
  group: operator.cape.sh
  names:
    kind: Organization
    listKind: OrganizationList
    plural: organizations
    singular: organization
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Organization is the Schema for the organizations API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: OrganizationSpec defines the desired state of Organization
          properties:
            adminEmail:
              description: 'Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              type: string
            adminName:
              type: string
            namespace:
              type: string
            stripe:
              properties:
                planId:
                  type: string
                planName:
                  type: string
              required:
                - planId
              type: object
          required:
            - adminEmail
            - adminName
          type: object
        status:
          description: OrganizationStatus defines the observed state of Organization
          properties:
            conditions:
              items:
                description: BasicCondition fields that are expected in a condition
                properties:
                  lastProbeTime:
                    description: Last time we probed the condition.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message human readable reason
                    type: string
                  reason:
                    description: Reason simple single word reason in CamleCase
                    type: string
                  status:
                    description: Status is one of True,False,Unknown
                    type: string
                  type:
                    description: Type Condition type
                    type: string
                required:
                  - status
                  - type
                type: object
              type: array
            lastUpdate:
              format: date-time
              type: string
            reason:
              type: string
            status:
              enum:
                - Success
                - Failure
              type: string
            stripe:
              description: 'Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              properties:
                customerId:
                  type: string
                subscriptionId:
                  type: string
                subscriptionItemId:
                  type: string
                subscriptionName:
                  type: string
                subscriptionStatus:
                  type: string
              required:
                - customerId
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: repositories.operator.cape.sh
spec:
  group: operator.cape.sh
  names:
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Repository is the Schema for the repositories API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RepositorySpec defines the desired state of Repository
          properties:
            authRef:
              description: "\treference to the k8s secret"
              type: string
            authType:
              description: username/pass or priv key based auth
              type: string
            enableLFS:
              description: enable large file system support on git repo
              type: boolean
            repoType:
              description: RepoType is the type of repo (git or helm)
              enum:
                - git
                - helm
              type: string
            repoURL:
              description: RepoURL is the git/helm url
              type: string
            skipSSL:
              description: when connecting, skil tls verification
              type: boolean
          required:
            - authRef
            - authType
            - enableLFS
            - repoType
            - repoURL
            - skipSSL
          type: object
        status:
          description: RepositoryStatus defines the observed state of Repository
          properties:
            childReferences:
              description: List of dependent child object references
              items:
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                  - apiVersion
                  - kind
                  - name
                  - uid
                type: object
              type: array
            conditions:
              items:
                description: BasicCondition fields that are expected in a condition
                properties:
                  lastProbeTime:
                    description: Last time we probed the condition.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message human readable reason
                    type: string
                  reason:
                    description: Reason simple single word reason in CamleCase
                    type: string
                  status:
                    description: Status is one of True,False,Unknown
                    type: string
                  type:
                    description: Type Condition type
                    type: string
                required:
                  - status
                  - type
                type: object
              type: array
            lastUpdate:
              format: date-time
              type: string
            reason:
              type: string
            status:
              enum:
                - Success
                - Failure
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: users.operator.cape.sh
spec:
  group: operator.cape.sh
  names:
    kind: CapeUser
    listKind: CapeUserList
    plural: users
    singular: capeuser
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: CapeUser is the Schema for the capeusers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CapeUserSpec defines the desired state of CapeUser
          properties:
            email:
              type: string
            name:
              description: 'Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              type: string
            username:
              type: string
          required:
            - email
            - username
          type: object
        status:
          description: CapeUserStatus defines the observed state of CapeUser
          properties:
            lastUpdate:
              format: date-time
              type: string
            reason:
              type: string
            status:
              enum:
                - Success
                - Failure
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    heritage: cape
  name: cape-api
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - '*'
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
  - apiGroups:
      - operator.cape.sh
    resources:
      - clusters
      - clusters/status
      - components
      - components/status
      - backuplocations
      - backuplocations/status
      - backuplocationoperations
      - backuplocationoperations/status
      - federations
      - federations/status
      - organizations
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    heritage: cape
  name: cape-crd-creator
rules:
  - apiGroups:
      - operator.cape.sh
    resources:
      - applications
      - backuplocations
      - clusters
      - components
      - configs
      - deployments
      - federations
      - repositories
      - users
      - backuplocationoperations
      - organizations
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - create
      - update
  - apiGroups:
      - operator.cape.sh
    resources:
      - users
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    heritage: cape
  name: cape-manager
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - endpoints
      - persistentvolumeclaims
      - events
      - configmaps
      - secrets
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - create
      - update
      - patch
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - '*'
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
      - rolebindings
    verbs:
      - '*'
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
  - apiGroups:
      - apps
    resourceNames:
      - hydra-biq-operator
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - operator.cape.sh
    resources:
      - clusters
      - clusters/status
      - components
      - components/status
      - backuplocations
      - backuplocations/status
      - backuplocationoperations
      - backuplocationoperations/status
      - federations
      - federations/status
      - deployments
      - deployments/status
      - repositories
      - repositories/status
      - applications
      - applications/status
      - configs
      - configs/status
      - organizations
      - organizations/status
      - users
      - users/status
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    heritage: cape
  name: opa-crd-reader
rules:
  - apiGroups:
      - operator.cape.sh
    resources:
      - clusters
      - backuplocations
      - federations
      - applications
      - deployments
      - repositories
      - organizations
      - configs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
      - rolebindings
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    heritage: cape
  name: cape-manager-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cape-manager
subjects:
  - kind: ServiceAccount
    name: manager
    namespace: cape
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    heritage: cape
  name: crd-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opa-crd-reader
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts:cape
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    heritage: cape
  name: hydra-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: web
    namespace: cape
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    heritage: cape
  name: namespace-list-authenticated
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cape-crd-creator
subjects:
  - kind: Group
    name: system:authenticated
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    heritage: cape
  name: opa-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts:cape
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    heritage: cape
  name: configmap-modifier
  namespace: cape
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    heritage: cape
  name: opa-configmap-modifier
  namespace: cape
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: configmap-modifier
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts:cape
---
apiVersion: v1
kind: Service
metadata:
  labels:
    heritage: cape
  name: opa
  namespace: cape
spec:
  ports:
    - port: 8181
  selector:
    app: opa
    heritage: cape
---
apiVersion: v1
kind: Service
metadata:
  labels:
    heritage: cape
  name: pubsub
  namespace: cape
spec:
  ports:
    - port: 4040
  selector:
    app: pubsub
    heritage: cape
---
apiVersion: v1
kind: Service
metadata:
  labels:
    heritage: cape
  name: web
  namespace: cape
spec:
  ports:
    - name: http-web
      port: 3000
      protocol: TCP
      targetPort: 3000
    - name: http-api
      port: 9000
      protocol: TCP
      targetPort: 9000
    - name: http-api-2
      port: 80
      protocol: TCP
      targetPort: 9000
    - name: auth-proxy
      port: 4180
      protocol: TCP
      targetPort: 4180
  selector:
    app: web
    heritage: cape
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    heritage: cape
  name: manager
  namespace: cape
spec:
  replicas: 1
  selector:
    matchLabels:
      heritage: cape
      name: manager
  template:
    metadata:
      labels:
        heritage: cape
        name: manager
    spec:
      containers:
        - command:
            - cape-manager
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: cape-manager
            - name: PAYMENT_API_URL
              value: https://app.cape.sh
          envFrom:
            - configMapRef:
                name: common-env-fgtm67hfk6
          image: capesh/cape-manager:0.5.1
          imagePullPolicy: Always
          name: manager
      serviceAccountName: manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    heritage: cape
  name: opa
  namespace: cape
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opa
      heritage: cape
  template:
    metadata:
      labels:
        app: opa
        heritage: cape
    spec:
      containers:
        - args:
            - run
            - --server
          image: capesh/opa:v0.2.5
          name: opa
          ports:
            - containerPort: 8181
              name: http
        - args:
            - --replicate=operator.cape.sh/v1alpha1/clusters
            - --replicate=operator.cape.sh/v1alpha1/backuplocations
            - --replicate=operator.cape.sh/v1alpha1/federations
            - --replicate=operator.cape.sh/v1alpha1/deployments
            - --replicate=operator.cape.sh/v1alpha1/applications
            - --replicate=operator.cape.sh/v1alpha1/repositories
            - --replicate=operator.cape.sh/v1alpha1/organizations
            - --replicate=operator.cape.sh/v1alpha1/configs
            - --replicate=rbac.authorization.k8s.io/v1/rolebindings
            - --replicate=rbac.authorization.k8s.io/v1/roles
            - --policies=cape
            - --require-policy-label=true
          image: capesh/kube-mgmt:v0.2.5
          name: kube-mgmt
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    heritage: cape
  name: pubsub
  namespace: cape
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pubsub
      heritage: cape
  template:
    metadata:
      labels:
        app: pubsub
        heritage: cape
    spec:
      containers:
        - args:
            - -listen
            - :4040
            - -events
            - ""
            - -debug
          image: capesh/wsify:v0.2.5
          name: wsify
          ports:
            - containerPort: 4040
              name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    heritage: cape
  name: web
  namespace: cape
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
      heritage: cape
  template:
    metadata:
      labels:
        app: web
        heritage: cape
    spec:
      containers:
        - env:
            - name: BYPASS_AUTH
              value: "1"
            - name: PORT
              value: "9000"
            - name: GA_ID
              value: UA-129287498-7
            - name: GA_MEASUREMENT_ID
              value: G-25W4TG2L6Z
            - name: OAUTH2_PROXY_COOKIE_SECRET
              value: soBaGBUPr3aiBW
            - name: OPA_URL
              value: http://opa:8181
            - name: PAYMENT_API_URL
              value: https://app.cape.sh
          envFrom:
            - configMapRef:
                name: common-env-fgtm67hfk6
          image: capesh/cape-api:0.5.1
          imagePullPolicy: Always
          name: api
          ports:
            - containerPort: 9000
              name: proxy
        - env:
            - name: CAPE_ACCEPT_TOS
              value: "false"
            - name: API_BASE_URL
              value: http://localhost:9000
            - name: PORT
              value: "3000"
            - name: GTM_ID
              value: GTM-TBKL7CH
          image: capesh/cape-ui:0.5.1
          imagePullPolicy: Always
          name: web
          ports:
            - containerPort: 3000
              name: web
      serviceAccountName: web
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    heritage: cape
  name: ui-ingress
  namespace: cape
spec:
  rules:
    - host: 127.0.0.1.nip.io
      http:
        paths:
          - backend:
              serviceName: web
              servicePort: 3000
            path: /
          - backend:
              serviceName: web
              servicePort: 9000
            path: /v1/
    - host: www.127.0.0.1.nip.io
      http:
        paths:
          - backend:
              serviceName: web
              servicePort: 3000
            path: /
          - backend:
              serviceName: web
              servicePort: 9000
            path: /v1/
  tls:
    - hosts:
        - 127.0.0.1.nip.io
        - www.127.0.0.1.nip.io
      secretName: web-tls
