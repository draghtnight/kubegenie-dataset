apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: aws-cluster-autoscaler
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cluster-autoscaler-7.2.2
  name: release-name-aws-cluster-autoscaler
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: aws-cluster-autoscaler
  maxUnavailable: 1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: aws-cluster-autoscaler
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cluster-autoscaler-7.2.2
  name: release-name-aws-cluster-autoscaler
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: aws-cluster-autoscaler
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cluster-autoscaler-7.2.2
  name: release-name-aws-cluster-autoscaler
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - endpoints
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints
    resourceNames:
      - cluster-autoscaler
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - watch
      - list
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - replicationcontrollers
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - batch
      - extensions
    resources:
      - jobs
    verbs:
      - get
      - list
      - patch
      - watch
  - apiGroups:
      - extensions
    resources:
      - replicasets
      - daemonsets
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - watch
      - list
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
      - csinodes
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - kommander.mesosphere.io
    resources:
      - konvoyclusters
    verbs:
      - watch
      - list
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resourceNames:
      - cluster-autoscaler
    resources:
      - leases
    verbs:
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: aws-cluster-autoscaler
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cluster-autoscaler-7.2.2
  name: release-name-aws-cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-aws-cluster-autoscaler
subjects:
  - kind: ServiceAccount
    name: release-name-aws-cluster-autoscaler
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: aws-cluster-autoscaler
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cluster-autoscaler-7.2.2
  name: release-name-aws-cluster-autoscaler
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - cluster-autoscaler-status
    verbs:
      - delete
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: aws-cluster-autoscaler
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cluster-autoscaler-7.2.2
  name: release-name-aws-cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-aws-cluster-autoscaler
subjects:
  - kind: ServiceAccount
    name: release-name-aws-cluster-autoscaler
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: aws-cluster-autoscaler
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cluster-autoscaler-7.2.2
  name: release-name-aws-cluster-autoscaler
spec:
  ports:
    - port: 8085
      protocol: TCP
      targetPort: metrics
      name: metrics
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: aws-cluster-autoscaler
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: aws-cluster-autoscaler
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cluster-autoscaler-7.2.2
  name: release-name-aws-cluster-autoscaler
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: aws-cluster-autoscaler
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: aws-cluster-autoscaler
    spec:
      containers:
        - name: aws-cluster-autoscaler
          image: k8s.gcr.io/cluster-autoscaler:v1.17.1
          imagePullPolicy: IfNotPresent
          command:
            - ./cluster-autoscaler
            - --cloud-provider=aws
            - --namespace=default
            - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/cluster.local
            - --logtostderr=true
            - --stderrthreshold=info
            - --v=4
          env:
            - name: AWS_REGION
              value: us-east-1
          livenessProbe:
            httpGet:
              path: /health-check
              port: 8085
          ports:
            - containerPort: 8085
              name: metrics
          resources:
            seccompProfile:
              type: RuntimeDefault
      serviceAccountName: release-name-aws-cluster-autoscaler
      tolerations: []
