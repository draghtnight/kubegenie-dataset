apiVersion: v1
kind: Secret
metadata:
  name: release-name-gateway
  labels:
    app: gateway
    chart: gateway-1.0.0
    heritage: Helm
    release: release-name
type: Opaque
data: null
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-server
  labels:
    app: server
    chart: server-1.0.0
    heritage: Helm
    release: release-name
type: Opaque
data: null
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-gateway
  annotations: {}
  labels:
    app: gateway
    chart: gateway-1.0.0
    heritage: Helm
    release: release-name
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: gateway
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-server
  annotations: {}
  labels:
    app: server
    chart: server-1.0.0
    heritage: Helm
    release: release-name
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: server
    release: release-name
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-gateway
  annotations: {}
  labels:
    app: gateway
    chart: gateway-1.0.0
    heritage: Helm
    release: release-name
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  revisionHistoryLimit: 10
  template:
    metadata:
      name: release-name-gateway
      annotations:
        iam.amazonaws.com/role: ""
      labels:
        app: gateway
        release: release-name
    spec:
      containers:
        - name: gateway
          image: chartmuseum/chartmuseum:v0.5.0
          imagePullPolicy: IfNotPresent
          env:
            - name: CHART_POST_FORM_FIELD_NAME
              value: chart
            - name: DEBUG
              value: "false"
            - name: DISABLE_METRICS
              value: "true"
            - name: LOG_JSON
              value: "true"
            - name: PROV_POST_FORM_FIELD_NAME
              value: prov
            - name: STORAGE
              value: amazon
          args:
            - --port=8080
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
        - name: storage-volume
          emptyDir: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-server
  annotations: {}
  labels:
    app: server
    chart: server-1.0.0
    heritage: Helm
    release: release-name
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  revisionHistoryLimit: 10
  template:
    metadata:
      name: release-name-server
      annotations:
        iam.amazonaws.com/role: ""
      labels:
        app: server
        release: release-name
    spec:
      containers:
        - name: server
          image: chartmuseum/chartmuseum:v0.5.0
          imagePullPolicy: IfNotPresent
          env:
            - name: CHART_POST_FORM_FIELD_NAME
              value: chart
            - name: DEBUG
              value: "false"
            - name: DISABLE_API
              value: "true"
            - name: DISABLE_METRICS
              value: "true"
            - name: LOG_JSON
              value: "true"
            - name: PROV_POST_FORM_FIELD_NAME
              value: prov
            - name: STORAGE
              value: amazon
          args:
            - --port=8080
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
        - name: storage-volume
          emptyDir: {}
