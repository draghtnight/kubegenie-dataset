apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-cert-manager-cainjector
  namespace: fh5JdorJln3r3io
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cainjector
    helm.sh/chart: cert-manager-v1.0.1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-cert-manager
  namespace: fh5JdorJln3r3io
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-cert-manager-webhook
  namespace: fh5JdorJln3r3io
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webhook
    helm.sh/chart: cert-manager-v1.0.1
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cainjector
    helm.sh/chart: cert-manager-v1.0.1
rules:
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - create
      - update
      - patch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - auditregistration.k8s.io
    resources:
      - auditsinks
    verbs:
      - get
      - list
      - watch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-issuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
rules:
  - apiGroups:
      - cert-manager.io
    resources:
      - issuers
      - issuers/status
    verbs:
      - update
  - apiGroups:
      - cert-manager.io
    resources:
      - issuers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-clusterissuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
rules:
  - apiGroups:
      - cert-manager.io
    resources:
      - clusterissuers
      - clusterissuers/status
    verbs:
      - update
  - apiGroups:
      - cert-manager.io
    resources:
      - clusterissuers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-certificates
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
rules:
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
      - certificates/status
      - certificaterequests
      - certificaterequests/status
    verbs:
      - update
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
      - certificaterequests
      - clusterissuers
      - issuers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates/finalizers
      - certificaterequests/finalizers
    verbs:
      - update
  - apiGroups:
      - acme.cert-manager.io
    resources:
      - orders
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-orders
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
rules:
  - apiGroups:
      - acme.cert-manager.io
    resources:
      - orders
      - orders/status
    verbs:
      - update
  - apiGroups:
      - acme.cert-manager.io
    resources:
      - orders
      - challenges
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cert-manager.io
    resources:
      - clusterissuers
      - issuers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - acme.cert-manager.io
    resources:
      - challenges
    verbs:
      - create
      - delete
  - apiGroups:
      - acme.cert-manager.io
    resources:
      - orders/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-challenges
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
rules:
  - apiGroups:
      - acme.cert-manager.io
    resources:
      - challenges
      - challenges/status
    verbs:
      - update
  - apiGroups:
      - acme.cert-manager.io
    resources:
      - challenges
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cert-manager.io
    resources:
      - issuers
      - clusterissuers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - pods
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
  - apiGroups:
      - route.openshift.io
    resources:
      - routes/custom-host
    verbs:
      - create
  - apiGroups:
      - acme.cert-manager.io
    resources:
      - challenges/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-ingress-shim
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
rules:
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
      - certificaterequests
    verbs:
      - create
      - update
      - delete
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
      - certificaterequests
      - issuers
      - clusterissuers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-view
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
      - certificaterequests
      - issuers
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-edit
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
      - certificaterequests
      - issuers
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cainjector
    helm.sh/chart: cert-manager-v1.0.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-cainjector
subjects:
  - name: release-name-cert-manager-cainjector
    namespace: default
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-issuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-issuers
subjects:
  - name: release-name-cert-manager
    namespace: default
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-clusterissuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-clusterissuers
subjects:
  - name: release-name-cert-manager
    namespace: default
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-certificates
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-certificates
subjects:
  - name: release-name-cert-manager
    namespace: default
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-orders
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-orders
subjects:
  - name: release-name-cert-manager
    namespace: default
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-challenges
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-challenges
subjects:
  - name: release-name-cert-manager
    namespace: default
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-ingress-shim
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-ingress-shim
subjects:
  - name: release-name-cert-manager
    namespace: default
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-cert-manager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cainjector
    helm.sh/chart: cert-manager-v1.0.1
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - cert-manager-cainjector-leader-election
      - cert-manager-cainjector-leader-election-core
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-cert-manager:leaderelection
  namespace: kube-system
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - cert-manager-controller
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-cert-manager-webhook:dynamic-serving
  namespace: fh5JdorJln3r3io
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webhook
    helm.sh/chart: cert-manager-v1.0.1
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    resourceNames:
      - release-name-cert-manager-webhook-ca
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-cert-manager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cainjector
    helm.sh/chart: cert-manager-v1.0.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-cert-manager-cainjector:leaderelection
subjects:
  - kind: ServiceAccount
    name: release-name-cert-manager-cainjector
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-cert-manager:leaderelection
  namespace: kube-system
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-cert-manager:leaderelection
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: release-name-cert-manager
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-cert-manager-webhook:dynamic-serving
  namespace: fh5JdorJln3r3io
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webhook
    helm.sh/chart: cert-manager-v1.0.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-cert-manager-webhook:dynamic-serving
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: release-name-cert-manager-webhook
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cert-manager
  namespace: fh5JdorJln3r3io
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 9402
      targetPort: 9402
  selector:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cert-manager-webhook
  namespace: fh5JdorJln3r3io
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webhook
    helm.sh/chart: cert-manager-v1.0.1
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      targetPort: 10250
  selector:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cert-manager-cainjector
  namespace: fh5JdorJln3r3io
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cainjector
    helm.sh/chart: cert-manager-v1.0.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: cainjector
  template:
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: cainjector
        helm.sh/chart: cert-manager-v1.0.1
    spec:
      serviceAccountName: release-name-cert-manager-cainjector
      containers:
        - name: cert-manager
          image: quay.io/jetstack/cert-manager-cainjector:v1.0.1
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --leader-election-namespace=kube-system
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            seccompProfile:
              type: RuntimeDefault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cert-manager
  namespace: fh5JdorJln3r3io
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
    helm.sh/chart: cert-manager-v1.0.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: controller
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.0.1
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/scrape: "true"
        prometheus.io/port: "9402"
    spec:
      serviceAccountName: release-name-cert-manager
      containers:
        - name: cert-manager
          image: quay.io/jetstack/cert-manager-controller:v1.0.1
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --cluster-resource-namespace=$(POD_NAMESPACE)
            - --leader-election-namespace=kube-system
          ports:
            - containerPort: 9402
              protocol: TCP
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            seccompProfile:
              type: RuntimeDefault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cert-manager-webhook
  namespace: fh5JdorJln3r3io
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webhook
    helm.sh/chart: cert-manager-v1.0.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: webhook
  template:
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/name: webhook
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: webhook
        helm.sh/chart: cert-manager-v1.0.1
    spec:
      serviceAccountName: release-name-cert-manager-webhook
      containers:
        - name: cert-manager
          image: quay.io/jetstack/cert-manager-webhook:v1.0.1
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --secure-port=10250
            - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
            - --dynamic-serving-ca-secret-name=release-name-cert-manager-webhook-ca
            - --dynamic-serving-dns-names=release-name-cert-manager-webhook,release-name-cert-manager-webhook.default,release-name-cert-manager-webhook.default.svc
          ports:
            - name: https
              containerPort: 10250
          livenessProbe:
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            seccompProfile:
              type: RuntimeDefault
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: release-name-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webhook
    helm.sh/chart: cert-manager-v1.0.1
  annotations:
    cert-manager.io/inject-ca-from-secret: default/release-name-cert-manager-webhook-ca
webhooks:
  - name: webhook.cert-manager.io
    rules:
      - apiGroups:
          - cert-manager.io
          - acme.cert-manager.io
        apiVersions:
          - '*'
        operations:
          - CREATE
          - UPDATE
        resources:
          - '*/*'
    admissionReviewVersions:
      - v1
      - v1beta1
    failurePolicy: Fail
    sideEffects: None
    clientConfig:
      service:
        name: release-name-cert-manager-webhook
        namespace: default
        path: /mutate
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-name-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webhook
    helm.sh/chart: cert-manager-v1.0.1
  annotations:
    cert-manager.io/inject-ca-from-secret: default/release-name-cert-manager-webhook-ca
webhooks:
  - name: webhook.cert-manager.io
    namespaceSelector:
      matchExpressions:
        - key: cert-manager.io/disable-validation
          operator: NotIn
          values:
            - "true"
        - key: name
          operator: NotIn
          values:
            - default
    rules:
      - apiGroups:
          - cert-manager.io
          - acme.cert-manager.io
        apiVersions:
          - '*'
        operations:
          - CREATE
          - UPDATE
        resources:
          - '*/*'
    admissionReviewVersions:
      - v1
      - v1beta1
    failurePolicy: Fail
    sideEffects: None
    clientConfig:
      service:
        name: release-name-cert-manager-webhook
        namespace: default
        path: /validate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-setup-crds
  namespace: fh5JdorJln3r3io
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: fh5JdorJln3r3io
  name: cert-manager-setup-certificaterequests-crd
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
data:
  crds.yaml: |-
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        cert-manager.io/inject-ca-from-secret: default/release-name-webhook-ca
        helm.sh/hook: crd-install
        helm.sh/hook-delete-policy: before-hook-creation
      labels:
        app: cert-manager
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cert-manager
      name: certificaterequests.cert-manager.io
    spec:
      conversion:
        strategy: Webhook
        webhook:
          clientConfig:
            service:
              name: release-name-webhook
              namespace: default
              path: /convert
          conversionReviewVersions:
          - v1
          - v1beta1
      group: cert-manager.io
      names:
        kind: CertificateRequest
        listKind: CertificateRequestList
        plural: certificaterequests
        shortNames:
        - cr
        - crs
        singular: certificaterequest
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when
            this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is represented
            in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1alpha2
        schema:
          openAPIV3Schema:
            description: "A CertificateRequest is used to request a signed certificate
              from one of the configured issuers. \n All fields within the CertificateRequest's
              `spec` are immutable after creation. A CertificateRequest will either succeed
              or fail, as denoted by its `status.state` field. \n A CertificateRequest
              is a 'one-shot' resource, meaning it represents a single point in time request
              for a certificate and cannot be re-used."
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Desired state of the CertificateRequest resource.
                properties:
                  csr:
                    description: The PEM-encoded x509 certificate signing request to be
                      submitted to the CA for signing.
                    format: byte
                    type: string
                  duration:
                    description: The requested 'duration' (i.e. lifetime) of the Certificate.
                      This option may be ignored/overridden by some issuer types.
                    type: string
                  isCA:
                    description: IsCA will request to mark the certificate as valid for
                      certificate signing when submitting to the issuer. This will automatically
                      add the `cert sign` usage to the list of `usages`.
                    type: boolean
                  issuerRef:
                    description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                      the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                      with the given name in the same namespace as the CertificateRequest
                      will be used.  If the 'kind' field is set to 'ClusterIssuer', a
                      ClusterIssuer with the provided name will be used. The 'name' field
                      in this stanza is required at all times. The group field refers
                      to the API group of the issuer which defaults to 'cert-manager.io'
                      if empty.
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  usages:
                    description: Usages is the set of x509 usages that are requested for
                      the certificate. Defaults to `digital signature` and `key encipherment`
                      if not specified.
                    items:
                      description: 'KeyUsage specifies valid usage contexts for keys.
                        See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                        Valid KeyUsage values are as follows: "signing", "digital signature",
                        "content commitment", "key encipherment", "key agreement", "data
                        encipherment", "cert sign", "crl sign", "encipher only", "decipher
                        only", "any", "server auth", "client auth", "code signing", "email
                        protection", "s/mime", "ipsec end system", "ipsec tunnel", "ipsec
                        user", "timestamping", "ocsp signing", "microsoft sgc", "netscape
                        sgc"'
                      enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
                      type: string
                    type: array
                required:
                - csr
                - issuerRef
                type: object
              status:
                description: Status of the CertificateRequest. This is set and managed
                  automatically.
                properties:
                  ca:
                    description: The PEM encoded x509 certificate of the signer, also
                      known as the CA (Certificate Authority). This is set on a best-effort
                      basis by different issuers. If not set, the CA is assumed to be
                      unknown/not available.
                    format: byte
                    type: string
                  certificate:
                    description: The PEM encoded x509 certificate resulting from the certificate
                      signing request. If not set, the CertificateRequest has either not
                      been completed or has failed. More information on failure can be
                      found by checking the `conditions` field.
                    format: byte
                    type: string
                  conditions:
                    description: List of status conditions to indicate the status of a
                      CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                    items:
                      description: CertificateRequestCondition contains condition information
                        for a CertificateRequest.
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the timestamp corresponding
                            to the last status change of this condition.
                          format: date-time
                          type: string
                        message:
                          description: Message is a human readable description of the
                            details of the last transition, complementing reason.
                          type: string
                        reason:
                          description: Reason is a brief machine readable explanation
                            for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of ('True', 'False',
                            'Unknown').
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: Type of the condition, known values are ('Ready',
                            'InvalidRequest').
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  failureTime:
                    description: FailureTime stores the time that this CertificateRequest
                      failed. This is used to influence garbage collection and back-off.
                    format: date-time
                    type: string
                type: object
            type: object
        served: true
        storage: false
        subresources:
          status: {}
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when
            this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is represented
            in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1alpha3
        schema:
          openAPIV3Schema:
            description: "A CertificateRequest is used to request a signed certificate
              from one of the configured issuers. \n All fields within the CertificateRequest's
              `spec` are immutable after creation. A CertificateRequest will either succeed
              or fail, as denoted by its `status.state` field. \n A CertificateRequest
              is a 'one-shot' resource, meaning it represents a single point in time request
              for a certificate and cannot be re-used."
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Desired state of the CertificateRequest resource.
                properties:
                  csr:
                    description: The PEM-encoded x509 certificate signing request to be
                      submitted to the CA for signing.
                    format: byte
                    type: string
                  duration:
                    description: The requested 'duration' (i.e. lifetime) of the Certificate.
                      This option may be ignored/overridden by some issuer types.
                    type: string
                  isCA:
                    description: IsCA will request to mark the certificate as valid for
                      certificate signing when submitting to the issuer. This will automatically
                      add the `cert sign` usage to the list of `usages`.
                    type: boolean
                  issuerRef:
                    description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                      the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                      with the given name in the same namespace as the CertificateRequest
                      will be used.  If the 'kind' field is set to 'ClusterIssuer', a
                      ClusterIssuer with the provided name will be used. The 'name' field
                      in this stanza is required at all times. The group field refers
                      to the API group of the issuer which defaults to 'cert-manager.io'
                      if empty.
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  usages:
                    description: Usages is the set of x509 usages that are requested for
                      the certificate. Defaults to `digital signature` and `key encipherment`
                      if not specified.
                    items:
                      description: 'KeyUsage specifies valid usage contexts for keys.
                        See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                        Valid KeyUsage values are as follows: "signing", "digital signature",
                        "content commitment", "key encipherment", "key agreement", "data
                        encipherment", "cert sign", "crl sign", "encipher only", "decipher
                        only", "any", "server auth", "client auth", "code signing", "email
                        protection", "s/mime", "ipsec end system", "ipsec tunnel", "ipsec
                        user", "timestamping", "ocsp signing", "microsoft sgc", "netscape
                        sgc"'
                      enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
                      type: string
                    type: array
                required:
                - csr
                - issuerRef
                type: object
              status:
                description: Status of the CertificateRequest. This is set and managed
                  automatically.
                properties:
                  ca:
                    description: The PEM encoded x509 certificate of the signer, also
                      known as the CA (Certificate Authority). This is set on a best-effort
                      basis by different issuers. If not set, the CA is assumed to be
                      unknown/not available.
                    format: byte
                    type: string
                  certificate:
                    description: The PEM encoded x509 certificate resulting from the certificate
                      signing request. If not set, the CertificateRequest has either not
                      been completed or has failed. More information on failure can be
                      found by checking the `conditions` field.
                    format: byte
                    type: string
                  conditions:
                    description: List of status conditions to indicate the status of a
                      CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                    items:
                      description: CertificateRequestCondition contains condition information
                        for a CertificateRequest.
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the timestamp corresponding
                            to the last status change of this condition.
                          format: date-time
                          type: string
                        message:
                          description: Message is a human readable description of the
                            details of the last transition, complementing reason.
                          type: string
                        reason:
                          description: Reason is a brief machine readable explanation
                            for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of ('True', 'False',
                            'Unknown').
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: Type of the condition, known values are ('Ready',
                            'InvalidRequest').
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  failureTime:
                    description: FailureTime stores the time that this CertificateRequest
                      failed. This is used to influence garbage collection and back-off.
                    format: date-time
                    type: string
                type: object
            type: object
        served: true
        storage: false
        subresources:
          status: {}
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when
            this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is represented
            in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1beta1
        schema:
          openAPIV3Schema:
            description: "A CertificateRequest is used to request a signed certificate
              from one of the configured issuers. \n All fields within the CertificateRequest's
              `spec` are immutable after creation. A CertificateRequest will either succeed
              or fail, as denoted by its `status.state` field. \n A CertificateRequest
              is a 'one-shot' resource, meaning it represents a single point in time request
              for a certificate and cannot be re-used."
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Desired state of the CertificateRequest resource.
                properties:
                  duration:
                    description: The requested 'duration' (i.e. lifetime) of the Certificate.
                      This option may be ignored/overridden by some issuer types.
                    type: string
                  isCA:
                    description: IsCA will request to mark the certificate as valid for
                      certificate signing when submitting to the issuer. This will automatically
                      add the `cert sign` usage to the list of `usages`.
                    type: boolean
                  issuerRef:
                    description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                      the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                      with the given name in the same namespace as the CertificateRequest
                      will be used.  If the 'kind' field is set to 'ClusterIssuer', a
                      ClusterIssuer with the provided name will be used. The 'name' field
                      in this stanza is required at all times. The group field refers
                      to the API group of the issuer which defaults to 'cert-manager.io'
                      if empty.
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  request:
                    description: The PEM-encoded x509 certificate signing request to be
                      submitted to the CA for signing.
                    format: byte
                    type: string
                  usages:
                    description: Usages is the set of x509 usages that are requested for
                      the certificate. Defaults to `digital signature` and `key encipherment`
                      if not specified.
                    items:
                      description: 'KeyUsage specifies valid usage contexts for keys.
                        See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                        Valid KeyUsage values are as follows: "signing", "digital signature",
                        "content commitment", "key encipherment", "key agreement", "data
                        encipherment", "cert sign", "crl sign", "encipher only", "decipher
                        only", "any", "server auth", "client auth", "code signing", "email
                        protection", "s/mime", "ipsec end system", "ipsec tunnel", "ipsec
                        user", "timestamping", "ocsp signing", "microsoft sgc", "netscape
                        sgc"'
                      enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
                      type: string
                    type: array
                required:
                - issuerRef
                - request
                type: object
              status:
                description: Status of the CertificateRequest. This is set and managed
                  automatically.
                properties:
                  ca:
                    description: The PEM encoded x509 certificate of the signer, also
                      known as the CA (Certificate Authority). This is set on a best-effort
                      basis by different issuers. If not set, the CA is assumed to be
                      unknown/not available.
                    format: byte
                    type: string
                  certificate:
                    description: The PEM encoded x509 certificate resulting from the certificate
                      signing request. If not set, the CertificateRequest has either not
                      been completed or has failed. More information on failure can be
                      found by checking the `conditions` field.
                    format: byte
                    type: string
                  conditions:
                    description: List of status conditions to indicate the status of a
                      CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                    items:
                      description: CertificateRequestCondition contains condition information
                        for a CertificateRequest.
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the timestamp corresponding
                            to the last status change of this condition.
                          format: date-time
                          type: string
                        message:
                          description: Message is a human readable description of the
                            details of the last transition, complementing reason.
                          type: string
                        reason:
                          description: Reason is a brief machine readable explanation
                            for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of ('True', 'False',
                            'Unknown').
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: Type of the condition, known values are ('Ready',
                            'InvalidRequest').
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  failureTime:
                    description: FailureTime stores the time that this CertificateRequest
                      failed. This is used to influence garbage collection and back-off.
                    format: date-time
                    type: string
                type: object
            required:
            - spec
            type: object
        served: true
        storage: false
        subresources:
          status: {}
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when
            this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is represented
            in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1
        schema:
          openAPIV3Schema:
            description: "A CertificateRequest is used to request a signed certificate
              from one of the configured issuers. \n All fields within the CertificateRequest's
              `spec` are immutable after creation. A CertificateRequest will either succeed
              or fail, as denoted by its `status.state` field. \n A CertificateRequest
              is a 'one-shot' resource, meaning it represents a single point in time request
              for a certificate and cannot be re-used."
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Desired state of the CertificateRequest resource.
                properties:
                  duration:
                    description: The requested 'duration' (i.e. lifetime) of the Certificate.
                      This option may be ignored/overridden by some issuer types.
                    type: string
                  isCA:
                    description: IsCA will request to mark the certificate as valid for
                      certificate signing when submitting to the issuer. This will automatically
                      add the `cert sign` usage to the list of `usages`.
                    type: boolean
                  issuerRef:
                    description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                      the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                      with the given name in the same namespace as the CertificateRequest
                      will be used.  If the 'kind' field is set to 'ClusterIssuer', a
                      ClusterIssuer with the provided name will be used. The 'name' field
                      in this stanza is required at all times. The group field refers
                      to the API group of the issuer which defaults to 'cert-manager.io'
                      if empty.
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  request:
                    description: The PEM-encoded x509 certificate signing request to be
                      submitted to the CA for signing.
                    format: byte
                    type: string
                  usages:
                    description: Usages is the set of x509 usages that are requested for
                      the certificate. If usages are set they SHOULD be encoded inside
                      the CSR spec Defaults to `digital signature` and `key encipherment`
                      if not specified.
                    items:
                      description: 'KeyUsage specifies valid usage contexts for keys.
                        See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                        Valid KeyUsage values are as follows: "signing", "digital signature",
                        "content commitment", "key encipherment", "key agreement", "data
                        encipherment", "cert sign", "crl sign", "encipher only", "decipher
                        only", "any", "server auth", "client auth", "code signing", "email
                        protection", "s/mime", "ipsec end system", "ipsec tunnel", "ipsec
                        user", "timestamping", "ocsp signing", "microsoft sgc", "netscape
                        sgc"'
                      enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
                      type: string
                    type: array
                required:
                - issuerRef
                - request
                type: object
              status:
                description: Status of the CertificateRequest. This is set and managed
                  automatically.
                properties:
                  ca:
                    description: The PEM encoded x509 certificate of the signer, also
                      known as the CA (Certificate Authority). This is set on a best-effort
                      basis by different issuers. If not set, the CA is assumed to be
                      unknown/not available.
                    format: byte
                    type: string
                  certificate:
                    description: The PEM encoded x509 certificate resulting from the certificate
                      signing request. If not set, the CertificateRequest has either not
                      been completed or has failed. More information on failure can be
                      found by checking the `conditions` field.
                    format: byte
                    type: string
                  conditions:
                    description: List of status conditions to indicate the status of a
                      CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                    items:
                      description: CertificateRequestCondition contains condition information
                        for a CertificateRequest.
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the timestamp corresponding
                            to the last status change of this condition.
                          format: date-time
                          type: string
                        message:
                          description: Message is a human readable description of the
                            details of the last transition, complementing reason.
                          type: string
                        reason:
                          description: Reason is a brief machine readable explanation
                            for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of ('True', 'False',
                            'Unknown').
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: Type of the condition, known values are ('Ready',
                            'InvalidRequest').
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  failureTime:
                    description: FailureTime stores the time that this CertificateRequest
                      failed. This is used to influence garbage collection and back-off.
                    format: date-time
                    type: string
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: fh5JdorJln3r3io
  name: cert-manager-setup-certificates-crd
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
data:
  crds.yaml: |-
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        cert-manager.io/inject-ca-from-secret: default/release-name-webhook-ca
        helm.sh/hook: crd-install
        helm.sh/hook-delete-policy: before-hook-creation
      labels:
        app: cert-manager
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cert-manager
      name: certificates.cert-manager.io
    spec:
      conversion:
        strategy: Webhook
        webhook:
          clientConfig:
            service:
              name: release-name-webhook
              namespace: default
              path: /convert
          conversionReviewVersions:
          - v1
          - v1beta1
      group: cert-manager.io
      names:
        kind: Certificate
        listKind: CertificateList
        plural: certificates
        shortNames:
        - cert
        - certs
        singular: certificate
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .spec.secretName
          name: Secret
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when
            this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is represented
            in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1alpha2
        schema:
          openAPIV3Schema:
            description: "A Certificate resource should be created to ensure an up to
              date and signed x509 certificate is stored in the Kubernetes Secret resource
              named in `spec.secretName`. \n The stored certificate will be renewed before
              it expires (as configured by `spec.renewBefore`)."
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Desired state of the Certificate resource.
                properties:
                  commonName:
                    description: 'CommonName is a common name to be used on the Certificate.
                      The CommonName should have a length of 64 characters or fewer to
                      avoid generating invalid CSRs. This value is ignored by TLS clients
                      when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4'
                    type: string
                  dnsNames:
                    description: DNSNames is a list of DNS subjectAltNames to be set on
                      the Certificate.
                    items:
                      type: string
                    type: array
                  duration:
                    description: The requested 'duration' (i.e. lifetime) of the Certificate.
                      This option may be ignored/overridden by some issuer types. If overridden
                      and `renewBefore` is greater than the actual certificate duration,
                      the certificate will be automatically renewed 2/3rds of the way
                      through the certificate's duration.
                    type: string
                  emailSANs:
                    description: EmailSANs is a list of email subjectAltNames to be set
                      on the Certificate.
                    items:
                      type: string
                    type: array
                  ipAddresses:
                    description: IPAddresses is a list of IP address subjectAltNames to
                      be set on the Certificate.
                    items:
                      type: string
                    type: array
                  isCA:
                    description: IsCA will mark this Certificate as valid for certificate
                      signing. This will automatically add the `cert sign` usage to the
                      list of `usages`.
                    type: boolean
                  issuerRef:
                    description: IssuerRef is a reference to the issuer for this certificate.
                      If the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                      with the given name in the same namespace as the Certificate will
                      be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer
                      with the provided name will be used. The 'name' field in this stanza
                      is required at all times.
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  keyAlgorithm:
                    description: KeyAlgorithm is the private key algorithm of the corresponding
                      private key for this certificate. If provided, allowed values are
                      either "rsa" or "ecdsa" If `keyAlgorithm` is specified and `keySize`
                      is not provided, key size of 256 will be used for "ecdsa" key algorithm
                      and key size of 2048 will be used for "rsa" key algorithm.
                    enum:
                    - rsa
                    - ecdsa
                    type: string
                  keyEncoding:
                    description: KeyEncoding is the private key cryptography standards
                      (PKCS) for this certificate's private key to be encoded in. If provided,
                      allowed values are "pkcs1" and "pkcs8" standing for PKCS#1 and PKCS#8,
                      respectively. If KeyEncoding is not specified, then PKCS#1 will
                      be used by default.
                    enum:
                    - pkcs1
                    - pkcs8
                    type: string
                  keySize:
                    description: KeySize is the key bit size of the corresponding private
                      key for this certificate. If `keyAlgorithm` is set to `RSA`, valid
                      values are `2048`, `4096` or `8192`, and will default to `2048`
                      if not specified. If `keyAlgorithm` is set to `ECDSA`, valid values
                      are `256`, `384` or `521`, and will default to `256` if not specified.
                      No other values are allowed.
                    maximum: 8192
                    minimum: 0
                    type: integer
                  keystores:
                    description: Keystores configures additional keystore output formats
                      stored in the `secretName` Secret resource.
                    properties:
                      jks:
                        description: JKS configures options for storing a JKS keystore
                          in the `spec.secretName` Secret resource.
                        properties:
                          create:
                            description: Create enables JKS keystore creation for the
                              Certificate. If true, a file named `keystore.jks` will be
                              created in the target Secret resource, encrypted using the
                              password stored in `passwordSecretRef`. The keystore file
                              will only be updated upon re-issuance.
                            type: boolean
                          passwordSecretRef:
                            description: PasswordSecretRef is a reference to a key in
                              a Secret resource containing the password used to encrypt
                              the JKS keystore.
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this field
                                  may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred to.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - create
                        - passwordSecretRef
                        type: object
                      pkcs12:
                        description: PKCS12 configures options for storing a PKCS12 keystore
                          in the `spec.secretName` Secret resource.
                        properties:
                          create:
                            description: Create enables PKCS12 keystore creation for the
                              Certificate. If true, a file named `keystore.p12` will be
                              created in the target Secret resource, encrypted using the
                              password stored in `passwordSecretRef`. The keystore file
                              will only be updated upon re-issuance.
                            type: boolean
                          passwordSecretRef:
                            description: PasswordSecretRef is a reference to a key in
                              a Secret resource containing the password used to encrypt
                              the PKCS12 keystore.
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this field
                                  may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred to.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - create
                        - passwordSecretRef
                        type: object
                    type: object
                  organization:
                    description: Organization is a list of organizations to be used on
                      the Certificate.
                    items:
                      type: string
                    type: array
                  privateKey:
                    description: Options to control private keys used for the Certificate.
                    properties:
                      rotationPolicy:
                        description: RotationPolicy controls how private keys should be
                          regenerated when a re-issuance is being processed. If set to
                          Never, a private key will only be generated if one does not
                          already exist in the target `spec.secretName`. If one does exists
                          but it does not have the correct algorithm or size, a warning
                          will be raised to await user intervention. If set to Always,
                          a private key matching the specified requirements will be generated
                          whenever a re-issuance occurs. Default is 'Never' for backward
                          compatibility.
                        type: string
                    type: object
                  renewBefore:
                    description: The amount of time before the currently issued certificate's
                      `notAfter` time that cert-manager will begin to attempt to renew
                      the certificate. If this value is greater than the total duration
                      of the certificate (i.e. notAfter - notBefore), it will be automatically
                      renewed 2/3rds of the way through the certificate's duration.
                    type: string
                  secretName:
                    description: SecretName is the name of the secret resource that will
                      be automatically created and managed by this Certificate resource.
                      It will be populated with a private key and certificate, signed
                      by the denoted issuer.
                    type: string
                  subject:
                    description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                    properties:
                      countries:
                        description: Countries to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      localities:
                        description: Cities to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      organizationalUnits:
                        description: Organizational Units to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      postalCodes:
                        description: Postal codes to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      provinces:
                        description: State/Provinces to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      serialNumber:
                        description: Serial number to be used on the Certificate.
                        type: string
                      streetAddresses:
                        description: Street addresses to be used on the Certificate.
                        items:
                          type: string
                        type: array
                    type: object
                  uriSANs:
                    description: URISANs is a list of URI subjectAltNames to be set on
                      the Certificate.
                    items:
                      type: string
                    type: array
                  usages:
                    description: Usages is the set of x509 usages that are requested for
                      the certificate. Defaults to `digital signature` and `key encipherment`
                      if not specified.
                    items:
                      description: 'KeyUsage specifies valid usage contexts for keys.
                        See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                        Valid KeyUsage values are as follows: "signing", "digital signature",
                        "content commitment", "key encipherment", "key agreement", "data
                        encipherment", "cert sign", "crl sign", "encipher only", "decipher
                        only", "any", "server auth", "client auth", "code signing", "email
                        protection", "s/mime", "ipsec end system", "ipsec tunnel", "ipsec
                        user", "timestamping", "ocsp signing", "microsoft sgc", "netscape
                        sgc"'
                      enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
                      type: string
                    type: array
                required:
                - issuerRef
                - secretName
                type: object
              status:
                description: Status of the Certificate. This is set and managed automatically.
                properties:
                  conditions:
                    description: List of status conditions to indicate the status of certificates.
                      Known condition types are `Ready` and `Issuing`.
                    items:
                      description: CertificateCondition contains condition information
                        for an Certificate.
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the timestamp corresponding
                            to the last status change of this condition.
                          format: date-time
                          type: string
                        message:
                          description: Message is a human readable description of the
                            details of the last transition, complementing reason.
                          type: string
                        reason:
                          description: Reason is a brief machine readable explanation
                            for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of ('True', 'False',
                            'Unknown').
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: Type of the condition, known values are ('Ready',
                            `Issuing`).
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  lastFailureTime:
                    description: LastFailureTime is the time as recorded by the Certificate
                      controller of the most recent failure to complete a CertificateRequest
                      for this Certificate resource. If set, cert-manager will not re-request
                      another Certificate until 1 hour has elapsed from this time.
                    format: date-time
                    type: string
                  nextPrivateKeySecretName:
                    description: The name of the Secret resource containing the private
                      key to be used for the next certificate iteration. The keymanager
                      controller will automatically set this field if the `Issuing` condition
                      is set to `True`. It will automatically unset this field when the
                      Issuing condition is not set or False.
                    type: string
                  notAfter:
                    description: The expiration time of the certificate stored in the
                      secret named by this resource in `spec.secretName`.
                    format: date-time
                    type: string
                  notBefore:
                    description: The time after which the certificate stored in the secret
                      named by this resource in spec.secretName is valid.
                    format: date-time
                    type: string
                  renewalTime:
                    description: RenewalTime is the time at which the certificate will
                      be next renewed. If not set, no upcoming renewal is scheduled.
                    format: date-time
                    type: string
                  revision:
                    description: "The current 'revision' of the certificate as issued.
                      \n When a CertificateRequest resource is created, it will have the
                      `cert-manager.io/certificate-revision` set to one greater than the
                      current value of this field. \n Upon issuance, this field will be
                      set to the value of the annotation on the CertificateRequest resource
                      used to issue the certificate. \n Persisting the value on the CertificateRequest
                      resource allows the certificates controller to know whether a request
                      is part of an old issuance or if it is part of the ongoing revision's
                      issuance by checking if the revision value in the annotation is
                      greater than this field."
                    type: integer
                type: object
            type: object
        served: true
        storage: false
        subresources:
          status: {}
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .spec.secretName
          name: Secret
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when
            this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is represented
            in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1alpha3
        schema:
          openAPIV3Schema:
            description: "A Certificate resource should be created to ensure an up to
              date and signed x509 certificate is stored in the Kubernetes Secret resource
              named in `spec.secretName`. \n The stored certificate will be renewed before
              it expires (as configured by `spec.renewBefore`)."
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Desired state of the Certificate resource.
                properties:
                  commonName:
                    description: 'CommonName is a common name to be used on the Certificate.
                      The CommonName should have a length of 64 characters or fewer to
                      avoid generating invalid CSRs. This value is ignored by TLS clients
                      when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4'
                    type: string
                  dnsNames:
                    description: DNSNames is a list of DNS subjectAltNames to be set on
                      the Certificate.
                    items:
                      type: string
                    type: array
                  duration:
                    description: The requested 'duration' (i.e. lifetime) of the Certificate.
                      This option may be ignored/overridden by some issuer types. If overridden
                      and `renewBefore` is greater than the actual certificate duration,
                      the certificate will be automatically renewed 2/3rds of the way
                      through the certificate's duration.
                    type: string
                  emailSANs:
                    description: EmailSANs is a list of email subjectAltNames to be set
                      on the Certificate.
                    items:
                      type: string
                    type: array
                  ipAddresses:
                    description: IPAddresses is a list of IP address subjectAltNames to
                      be set on the Certificate.
                    items:
                      type: string
                    type: array
                  isCA:
                    description: IsCA will mark this Certificate as valid for certificate
                      signing. This will automatically add the `cert sign` usage to the
                      list of `usages`.
                    type: boolean
                  issuerRef:
                    description: IssuerRef is a reference to the issuer for this certificate.
                      If the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                      with the given name in the same namespace as the Certificate will
                      be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer
                      with the provided name will be used. The 'name' field in this stanza
                      is required at all times.
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  keyAlgorithm:
                    description: KeyAlgorithm is the private key algorithm of the corresponding
                      private key for this certificate. If provided, allowed values are
                      either "rsa" or "ecdsa" If `keyAlgorithm` is specified and `keySize`
                      is not provided, key size of 256 will be used for "ecdsa" key algorithm
                      and key size of 2048 will be used for "rsa" key algorithm.
                    enum:
                    - rsa
                    - ecdsa
                    type: string
                  keyEncoding:
                    description: KeyEncoding is the private key cryptography standards
                      (PKCS) for this certificate's private key to be encoded in. If provided,
                      allowed values are "pkcs1" and "pkcs8" standing for PKCS#1 and PKCS#8,
                      respectively. If KeyEncoding is not specified, then PKCS#1 will
                      be used by default.
                    enum:
                    - pkcs1
                    - pkcs8
                    type: string
                  keySize:
                    description: KeySize is the key bit size of the corresponding private
                      key for this certificate. If `keyAlgorithm` is set to `RSA`, valid
                      values are `2048`, `4096` or `8192`, and will default to `2048`
                      if not specified. If `keyAlgorithm` is set to `ECDSA`, valid values
                      are `256`, `384` or `521`, and will default to `256` if not specified.
                      No other values are allowed.
                    maximum: 8192
                    minimum: 0
                    type: integer
                  keystores:
                    description: Keystores configures additional keystore output formats
                      stored in the `secretName` Secret resource.
                    properties:
                      jks:
                        description: JKS configures options for storing a JKS keystore
                          in the `spec.secretName` Secret resource.
                        properties:
                          create:
                            description: Create enables JKS keystore creation for the
                              Certificate. If true, a file named `keystore.jks` will be
                              created in the target Secret resource, encrypted using the
                              password stored in `passwordSecretRef`. The keystore file
                              will only be updated upon re-issuance.
                            type: boolean
                          passwordSecretRef:
                            description: PasswordSecretRef is a reference to a key in
                              a Secret resource containing the password used to encrypt
                              the JKS keystore.
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this field
                                  may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred to.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - create
                        - passwordSecretRef
                        type: object
                      pkcs12:
                        description: PKCS12 configures options for storing a PKCS12 keystore
                          in the `spec.secretName` Secret resource.
                        properties:
                          create:
                            description: Create enables PKCS12 keystore creation for the
                              Certificate. If true, a file named `keystore.p12` will be
                              created in the target Secret resource, encrypted using the
                              password stored in `passwordSecretRef`. The keystore file
                              will only be updated upon re-issuance.
                            type: boolean
                          passwordSecretRef:
                            description: PasswordSecretRef is a reference to a key in
                              a Secret resource containing the password used to encrypt
                              the PKCS12 keystore.
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this field
                                  may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred to.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - create
                        - passwordSecretRef
                        type: object
                    type: object
                  privateKey:
                    description: Options to control private keys used for the Certificate.
                    properties:
                      rotationPolicy:
                        description: RotationPolicy controls how private keys should be
                          regenerated when a re-issuance is being processed. If set to
                          Never, a private key will only be generated if one does not
                          already exist in the target `spec.secretName`. If one does exists
                          but it does not have the correct algorithm or size, a warning
                          will be raised to await user intervention. If set to Always,
                          a private key matching the specified requirements will be generated
                          whenever a re-issuance occurs. Default is 'Never' for backward
                          compatibility.
                        type: string
                    type: object
                  renewBefore:
                    description: The amount of time before the currently issued certificate's
                      `notAfter` time that cert-manager will begin to attempt to renew
                      the certificate. If this value is greater than the total duration
                      of the certificate (i.e. notAfter - notBefore), it will be automatically
                      renewed 2/3rds of the way through the certificate's duration.
                    type: string
                  secretName:
                    description: SecretName is the name of the secret resource that will
                      be automatically created and managed by this Certificate resource.
                      It will be populated with a private key and certificate, signed
                      by the denoted issuer.
                    type: string
                  subject:
                    description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                    properties:
                      countries:
                        description: Countries to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      localities:
                        description: Cities to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      organizationalUnits:
                        description: Organizational Units to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      organizations:
                        description: Organizations to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      postalCodes:
                        description: Postal codes to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      provinces:
                        description: State/Provinces to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      serialNumber:
                        description: Serial number to be used on the Certificate.
                        type: string
                      streetAddresses:
                        description: Street addresses to be used on the Certificate.
                        items:
                          type: string
                        type: array
                    type: object
                  uriSANs:
                    description: URISANs is a list of URI subjectAltNames to be set on
                      the Certificate.
                    items:
                      type: string
                    type: array
                  usages:
                    description: Usages is the set of x509 usages that are requested for
                      the certificate. Defaults to `digital signature` and `key encipherment`
                      if not specified.
                    items:
                      description: 'KeyUsage specifies valid usage contexts for keys.
                        See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                        Valid KeyUsage values are as follows: "signing", "digital signature",
                        "content commitment", "key encipherment", "key agreement", "data
                        encipherment", "cert sign", "crl sign", "encipher only", "decipher
                        only", "any", "server auth", "client auth", "code signing", "email
                        protection", "s/mime", "ipsec end system", "ipsec tunnel", "ipsec
                        user", "timestamping", "ocsp signing", "microsoft sgc", "netscape
                        sgc"'
                      enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
                      type: string
                    type: array
                required:
                - issuerRef
                - secretName
                type: object
              status:
                description: Status of the Certificate. This is set and managed automatically.
                properties:
                  conditions:
                    description: List of status conditions to indicate the status of certificates.
                      Known condition types are `Ready` and `Issuing`.
                    items:
                      description: CertificateCondition contains condition information
                        for an Certificate.
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the timestamp corresponding
                            to the last status change of this condition.
                          format: date-time
                          type: string
                        message:
                          description: Message is a human readable description of the
                            details of the last transition, complementing reason.
                          type: string
                        reason:
                          description: Reason is a brief machine readable explanation
                            for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of ('True', 'False',
                            'Unknown').
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: Type of the condition, known values are ('Ready',
                            `Issuing`).
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  lastFailureTime:
                    description: LastFailureTime is the time as recorded by the Certificate
                      controller of the most recent failure to complete a CertificateRequest
                      for this Certificate resource. If set, cert-manager will not re-request
                      another Certificate until 1 hour has elapsed from this time.
                    format: date-time
                    type: string
                  nextPrivateKeySecretName:
                    description: The name of the Secret resource containing the private
                      key to be used for the next certificate iteration. The keymanager
                      controller will automatically set this field if the `Issuing` condition
                      is set to `True`. It will automatically unset this field when the
                      Issuing condition is not set or False.
                    type: string
                  notAfter:
                    description: The expiration time of the certificate stored in the
                      secret named by this resource in `spec.secretName`.
                    format: date-time
                    type: string
                  notBefore:
                    description: The time after which the certificate stored in the secret
                      named by this resource in spec.secretName is valid.
                    format: date-time
                    type: string
                  renewalTime:
                    description: RenewalTime is the time at which the certificate will
                      be next renewed. If not set, no upcoming renewal is scheduled.
                    format: date-time
                    type: string
                  revision:
                    description: "The current 'revision' of the certificate as issued.
                      \n When a CertificateRequest resource is created, it will have the
                      `cert-manager.io/certificate-revision` set to one greater than the
                      current value of this field. \n Upon issuance, this field will be
                      set to the value of the annotation on the CertificateRequest resource
                      used to issue the certificate. \n Persisting the value on the CertificateRequest
                      resource allows the certificates controller to know whether a request
                      is part of an old issuance or if it is part of the ongoing revision's
                      issuance by checking if the revision value in the annotation is
                      greater than this field."
                    type: integer
                type: object
            type: object
        served: true
        storage: false
        subresources:
          status: {}
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .spec.secretName
          name: Secret
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when
            this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is represented
            in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1beta1
        schema:
          openAPIV3Schema:
            description: "A Certificate resource should be created to ensure an up to
              date and signed x509 certificate is stored in the Kubernetes Secret resource
              named in `spec.secretName`. \n The stored certificate will be renewed before
              it expires (as configured by `spec.renewBefore`)."
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Desired state of the Certificate resource.
                properties:
                  commonName:
                    description: 'CommonName is a common name to be used on the Certificate.
                      The CommonName should have a length of 64 characters or fewer to
                      avoid generating invalid CSRs. This value is ignored by TLS clients
                      when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4'
                    type: string
                  dnsNames:
                    description: DNSNames is a list of DNS subjectAltNames to be set on
                      the Certificate.
                    items:
                      type: string
                    type: array
                  duration:
                    description: The requested 'duration' (i.e. lifetime) of the Certificate.
                      This option may be ignored/overridden by some issuer types. If overridden
                      and `renewBefore` is greater than the actual certificate duration,
                      the certificate will be automatically renewed 2/3rds of the way
                      through the certificate's duration.
                    type: string
                  emailSANs:
                    description: EmailSANs is a list of email subjectAltNames to be set
                      on the Certificate.
                    items:
                      type: string
                    type: array
                  ipAddresses:
                    description: IPAddresses is a list of IP address subjectAltNames to
                      be set on the Certificate.
                    items:
                      type: string
                    type: array
                  isCA:
                    description: IsCA will mark this Certificate as valid for certificate
                      signing. This will automatically add the `cert sign` usage to the
                      list of `usages`.
                    type: boolean
                  issuerRef:
                    description: IssuerRef is a reference to the issuer for this certificate.
                      If the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                      with the given name in the same namespace as the Certificate will
                      be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer
                      with the provided name will be used. The 'name' field in this stanza
                      is required at all times.
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  keystores:
                    description: Keystores configures additional keystore output formats
                      stored in the `secretName` Secret resource.
                    properties:
                      jks:
                        description: JKS configures options for storing a JKS keystore
                          in the `spec.secretName` Secret resource.
                        properties:
                          create:
                            description: Create enables JKS keystore creation for the
                              Certificate. If true, a file named `keystore.jks` will be
                              created in the target Secret resource, encrypted using the
                              password stored in `passwordSecretRef`. The keystore file
                              will only be updated upon re-issuance.
                            type: boolean
                          passwordSecretRef:
                            description: PasswordSecretRef is a reference to a key in
                              a Secret resource containing the password used to encrypt
                              the JKS keystore.
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this field
                                  may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred to.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - create
                        - passwordSecretRef
                        type: object
                      pkcs12:
                        description: PKCS12 configures options for storing a PKCS12 keystore
                          in the `spec.secretName` Secret resource.
                        properties:
                          create:
                            description: Create enables PKCS12 keystore creation for the
                              Certificate. If true, a file named `keystore.p12` will be
                              created in the target Secret resource, encrypted using the
                              password stored in `passwordSecretRef`. The keystore file
                              will only be updated upon re-issuance.
                            type: boolean
                          passwordSecretRef:
                            description: PasswordSecretRef is a reference to a key in
                              a Secret resource containing the password used to encrypt
                              the PKCS12 keystore.
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this field
                                  may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred to.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - create
                        - passwordSecretRef
                        type: object
                    type: object
                  privateKey:
                    description: Options to control private keys used for the Certificate.
                    properties:
                      algorithm:
                        description: Algorithm is the private key algorithm of the corresponding
                          private key for this certificate. If provided, allowed values
                          are either "rsa" or "ecdsa" If `algorithm` is specified and
                          `size` is not provided, key size of 256 will be used for "ecdsa"
                          key algorithm and key size of 2048 will be used for "rsa" key
                          algorithm.
                        enum:
                        - RSA
                        - ECDSA
                        type: string
                      encoding:
                        description: The private key cryptography standards (PKCS) encoding
                          for this certificate's private key to be encoded in. If provided,
                          allowed values are "pkcs1" and "pkcs8" standing for PKCS#1 and
                          PKCS#8, respectively. Defaults to PKCS#1 if not specified.
                        enum:
                        - PKCS1
                        - PKCS8
                        type: string
                      rotationPolicy:
                        description: RotationPolicy controls how private keys should be
                          regenerated when a re-issuance is being processed. If set to
                          Never, a private key will only be generated if one does not
                          already exist in the target `spec.secretName`. If one does exists
                          but it does not have the correct algorithm or size, a warning
                          will be raised to await user intervention. If set to Always,
                          a private key matching the specified requirements will be generated
                          whenever a re-issuance occurs. Default is 'Never' for backward
                          compatibility.
                        type: string
                      size:
                        description: Size is the key bit size of the corresponding private
                          key for this certificate. If `algorithm` is set to `RSA`, valid
                          values are `2048`, `4096` or `8192`, and will default to `2048`
                          if not specified. If `algorithm` is set to `ECDSA`, valid values
                          are `256`, `384` or `521`, and will default to `256` if not
                          specified. No other values are allowed.
                        maximum: 8192
                        minimum: 0
                        type: integer
                    type: object
                  renewBefore:
                    description: The amount of time before the currently issued certificate's
                      `notAfter` time that cert-manager will begin to attempt to renew
                      the certificate. If this value is greater than the total duration
                      of the certificate (i.e. notAfter - notBefore), it will be automatically
                      renewed 2/3rds of the way through the certificate's duration.
                    type: string
                  secretName:
                    description: SecretName is the name of the secret resource that will
                      be automatically created and managed by this Certificate resource.
                      It will be populated with a private key and certificate, signed
                      by the denoted issuer.
                    type: string
                  subject:
                    description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                    properties:
                      countries:
                        description: Countries to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      localities:
                        description: Cities to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      organizationalUnits:
                        description: Organizational Units to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      organizations:
                        description: Organizations to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      postalCodes:
                        description: Postal codes to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      provinces:
                        description: State/Provinces to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      serialNumber:
                        description: Serial number to be used on the Certificate.
                        type: string
                      streetAddresses:
                        description: Street addresses to be used on the Certificate.
                        items:
                          type: string
                        type: array
                    type: object
                  uriSANs:
                    description: URISANs is a list of URI subjectAltNames to be set on
                      the Certificate.
                    items:
                      type: string
                    type: array
                  usages:
                    description: Usages is the set of x509 usages that are requested for
                      the certificate. Defaults to `digital signature` and `key encipherment`
                      if not specified.
                    items:
                      description: 'KeyUsage specifies valid usage contexts for keys.
                        See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                        Valid KeyUsage values are as follows: "signing", "digital signature",
                        "content commitment", "key encipherment", "key agreement", "data
                        encipherment", "cert sign", "crl sign", "encipher only", "decipher
                        only", "any", "server auth", "client auth", "code signing", "email
                        protection", "s/mime", "ipsec end system", "ipsec tunnel", "ipsec
                        user", "timestamping", "ocsp signing", "microsoft sgc", "netscape
                        sgc"'
                      enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
                      type: string
                    type: array
                required:
                - issuerRef
                - secretName
                type: object
              status:
                description: Status of the Certificate. This is set and managed automatically.
                properties:
                  conditions:
                    description: List of status conditions to indicate the status of certificates.
                      Known condition types are `Ready` and `Issuing`.
                    items:
                      description: CertificateCondition contains condition information
                        for an Certificate.
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the timestamp corresponding
                            to the last status change of this condition.
                          format: date-time
                          type: string
                        message:
                          description: Message is a human readable description of the
                            details of the last transition, complementing reason.
                          type: string
                        reason:
                          description: Reason is a brief machine readable explanation
                            for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of ('True', 'False',
                            'Unknown').
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: Type of the condition, known values are ('Ready',
                            `Issuing`).
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  lastFailureTime:
                    description: LastFailureTime is the time as recorded by the Certificate
                      controller of the most recent failure to complete a CertificateRequest
                      for this Certificate resource. If set, cert-manager will not re-request
                      another Certificate until 1 hour has elapsed from this time.
                    format: date-time
                    type: string
                  nextPrivateKeySecretName:
                    description: The name of the Secret resource containing the private
                      key to be used for the next certificate iteration. The keymanager
                      controller will automatically set this field if the `Issuing` condition
                      is set to `True`. It will automatically unset this field when the
                      Issuing condition is not set or False.
                    type: string
                  notAfter:
                    description: The expiration time of the certificate stored in the
                      secret named by this resource in `spec.secretName`.
                    format: date-time
                    type: string
                  notBefore:
                    description: The time after which the certificate stored in the secret
                      named by this resource in spec.secretName is valid.
                    format: date-time
                    type: string
                  renewalTime:
                    description: RenewalTime is the time at which the certificate will
                      be next renewed. If not set, no upcoming renewal is scheduled.
                    format: date-time
                    type: string
                  revision:
                    description: "The current 'revision' of the certificate as issued.
                      \n When a CertificateRequest resource is created, it will have the
                      `cert-manager.io/certificate-revision` set to one greater than the
                      current value of this field. \n Upon issuance, this field will be
                      set to the value of the annotation on the CertificateRequest resource
                      used to issue the certificate. \n Persisting the value on the CertificateRequest
                      resource allows the certificates controller to know whether a request
                      is part of an old issuance or if it is part of the ongoing revision's
                      issuance by checking if the revision value in the annotation is
                      greater than this field."
                    type: integer
                type: object
            required:
            - spec
            type: object
        served: true
        storage: false
        subresources:
          status: {}
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .spec.secretName
          name: Secret
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when
            this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is represented
            in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1
        schema:
          openAPIV3Schema:
            description: "A Certificate resource should be created to ensure an up to
              date and signed x509 certificate is stored in the Kubernetes Secret resource
              named in `spec.secretName`. \n The stored certificate will be renewed before
              it expires (as configured by `spec.renewBefore`)."
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Desired state of the Certificate resource.
                properties:
                  commonName:
                    description: 'CommonName is a common name to be used on the Certificate.
                      The CommonName should have a length of 64 characters or fewer to
                      avoid generating invalid CSRs. This value is ignored by TLS clients
                      when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4'
                    type: string
                  dnsNames:
                    description: DNSNames is a list of DNS subjectAltNames to be set on
                      the Certificate.
                    items:
                      type: string
                    type: array
                  duration:
                    description: The requested 'duration' (i.e. lifetime) of the Certificate.
                      This option may be ignored/overridden by some issuer types. If overridden
                      and `renewBefore` is greater than the actual certificate duration,
                      the certificate will be automatically renewed 2/3rds of the way
                      through the certificate's duration.
                    type: string
                  emailAddresses:
                    description: EmailAddresses is a list of email subjectAltNames to
                      be set on the Certificate.
                    items:
                      type: string
                    type: array
                  ipAddresses:
                    description: IPAddresses is a list of IP address subjectAltNames to
                      be set on the Certificate.
                    items:
                      type: string
                    type: array
                  isCA:
                    description: IsCA will mark this Certificate as valid for certificate
                      signing. This will automatically add the `cert sign` usage to the
                      list of `usages`.
                    type: boolean
                  issuerRef:
                    description: IssuerRef is a reference to the issuer for this certificate.
                      If the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                      with the given name in the same namespace as the Certificate will
                      be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer
                      with the provided name will be used. The 'name' field in this stanza
                      is required at all times.
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  keystores:
                    description: Keystores configures additional keystore output formats
                      stored in the `secretName` Secret resource.
                    properties:
                      jks:
                        description: JKS configures options for storing a JKS keystore
                          in the `spec.secretName` Secret resource.
                        properties:
                          create:
                            description: Create enables JKS keystore creation for the
                              Certificate. If true, a file named `keystore.jks` will be
                              created in the target Secret resource, encrypted using the
                              password stored in `passwordSecretRef`. The keystore file
                              will only be updated upon re-issuance.
                            type: boolean
                          passwordSecretRef:
                            description: PasswordSecretRef is a reference to a key in
                              a Secret resource containing the password used to encrypt
                              the JKS keystore.
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this field
                                  may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred to.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - create
                        - passwordSecretRef
                        type: object
                      pkcs12:
                        description: PKCS12 configures options for storing a PKCS12 keystore
                          in the `spec.secretName` Secret resource.
                        properties:
                          create:
                            description: Create enables PKCS12 keystore creation for the
                              Certificate. If true, a file named `keystore.p12` will be
                              created in the target Secret resource, encrypted using the
                              password stored in `passwordSecretRef`. The keystore file
                              will only be updated upon re-issuance.
                            type: boolean
                          passwordSecretRef:
                            description: PasswordSecretRef is a reference to a key in
                              a Secret resource containing the password used to encrypt
                              the PKCS12 keystore.
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this field
                                  may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: 'Name of the resource being referred to.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - create
                        - passwordSecretRef
                        type: object
                    type: object
                  privateKey:
                    description: Options to control private keys used for the Certificate.
                    properties:
                      algorithm:
                        description: Algorithm is the private key algorithm of the corresponding
                          private key for this certificate. If provided, allowed values
                          are either "rsa" or "ecdsa" If `algorithm` is specified and
                          `size` is not provided, key size of 256 will be used for "ecdsa"
                          key algorithm and key size of 2048 will be used for "rsa" key
                          algorithm.
                        enum:
                        - RSA
                        - ECDSA
                        type: string
                      encoding:
                        description: The private key cryptography standards (PKCS) encoding
                          for this certificate's private key to be encoded in. If provided,
                          allowed values are "pkcs1" and "pkcs8" standing for PKCS#1 and
                          PKCS#8, respectively. Defaults to PKCS#1 if not specified.
                        enum:
                        - PKCS1
                        - PKCS8
                        type: string
                      rotationPolicy:
                        description: RotationPolicy controls how private keys should be
                          regenerated when a re-issuance is being processed. If set to
                          Never, a private key will only be generated if one does not
                          already exist in the target `spec.secretName`. If one does exists
                          but it does not have the correct algorithm or size, a warning
                          will be raised to await user intervention. If set to Always,
                          a private key matching the specified requirements will be generated
                          whenever a re-issuance occurs. Default is 'Never' for backward
                          compatibility.
                        type: string
                      size:
                        description: Size is the key bit size of the corresponding private
                          key for this certificate. If `algorithm` is set to `RSA`, valid
                          values are `2048`, `4096` or `8192`, and will default to `2048`
                          if not specified. If `algorithm` is set to `ECDSA`, valid values
                          are `256`, `384` or `521`, and will default to `256` if not
                          specified. No other values are allowed.
                        maximum: 8192
                        minimum: 0
                        type: integer
                    type: object
                  renewBefore:
                    description: The amount of time before the currently issued certificate's
                      `notAfter` time that cert-manager will begin to attempt to renew
                      the certificate. If this value is greater than the total duration
                      of the certificate (i.e. notAfter - notBefore), it will be automatically
                      renewed 2/3rds of the way through the certificate's duration.
                    type: string
                  secretName:
                    description: SecretName is the name of the secret resource that will
                      be automatically created and managed by this Certificate resource.
                      It will be populated with a private key and certificate, signed
                      by the denoted issuer.
                    type: string
                  subject:
                    description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                    properties:
                      countries:
                        description: Countries to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      localities:
                        description: Cities to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      organizationalUnits:
                        description: Organizational Units to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      organizations:
                        description: Organizations to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      postalCodes:
                        description: Postal codes to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      provinces:
                        description: State/Provinces to be used on the Certificate.
                        items:
                          type: string
                        type: array
                      serialNumber:
                        description: Serial number to be used on the Certificate.
                        type: string
                      streetAddresses:
                        description: Street addresses to be used on the Certificate.
                        items:
                          type: string
                        type: array
                    type: object
                  uris:
                    description: URIs is a list of URI subjectAltNames to be set on the
                      Certificate.
                    items:
                      type: string
                    type: array
                  usages:
                    description: Usages is the set of x509 usages that are requested for
                      the certificate. Defaults to `digital signature` and `key encipherment`
                      if not specified.
                    items:
                      description: 'KeyUsage specifies valid usage contexts for keys.
                        See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                        Valid KeyUsage values are as follows: "signing", "digital signature",
                        "content commitment", "key encipherment", "key agreement", "data
                        encipherment", "cert sign", "crl sign", "encipher only", "decipher
                        only", "any", "server auth", "client auth", "code signing", "email
                        protection", "s/mime", "ipsec end system", "ipsec tunnel", "ipsec
                        user", "timestamping", "ocsp signing", "microsoft sgc", "netscape
                        sgc"'
                      enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
                      type: string
                    type: array
                required:
                - issuerRef
                - secretName
                type: object
              status:
                description: Status of the Certificate. This is set and managed automatically.
                properties:
                  conditions:
                    description: List of status conditions to indicate the status of certificates.
                      Known condition types are `Ready` and `Issuing`.
                    items:
                      description: CertificateCondition contains condition information
                        for an Certificate.
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the timestamp corresponding
                            to the last status change of this condition.
                          format: date-time
                          type: string
                        message:
                          description: Message is a human readable description of the
                            details of the last transition, complementing reason.
                          type: string
                        reason:
                          description: Reason is a brief machine readable explanation
                            for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of ('True', 'False',
                            'Unknown').
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: Type of the condition, known values are ('Ready',
                            `Issuing`).
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  lastFailureTime:
                    description: LastFailureTime is the time as recorded by the Certificate
                      controller of the most recent failure to complete a CertificateRequest
                      for this Certificate resource. If set, cert-manager will not re-request
                      another Certificate until 1 hour has elapsed from this time.
                    format: date-time
                    type: string
                  nextPrivateKeySecretName:
                    description: The name of the Secret resource containing the private
                      key to be used for the next certificate iteration. The keymanager
                      controller will automatically set this field if the `Issuing` condition
                      is set to `True`. It will automatically unset this field when the
                      Issuing condition is not set or False.
                    type: string
                  notAfter:
                    description: The expiration time of the certificate stored in the
                      secret named by this resource in `spec.secretName`.
                    format: date-time
                    type: string
                  notBefore:
                    description: The time after which the certificate stored in the secret
                      named by this resource in spec.secretName is valid.
                    format: date-time
                    type: string
                  renewalTime:
                    description: RenewalTime is the time at which the certificate will
                      be next renewed. If not set, no upcoming renewal is scheduled.
                    format: date-time
                    type: string
                  revision:
                    description: "The current 'revision' of the certificate as issued.
                      \n When a CertificateRequest resource is created, it will have the
                      `cert-manager.io/certificate-revision` set to one greater than the
                      current value of this field. \n Upon issuance, this field will be
                      set to the value of the annotation on the CertificateRequest resource
                      used to issue the certificate. \n Persisting the value on the CertificateRequest
                      resource allows the certificates controller to know whether a request
                      is part of an old issuance or if it is part of the ongoing revision's
                      issuance by checking if the revision value in the annotation is
                      greater than this field."
                    type: integer
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: fh5JdorJln3r3io
  name: cert-manager-setup-challenges-crd
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
data:
  crds.yaml: |-
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        cert-manager.io/inject-ca-from-secret: default/release-name-webhook-ca
        helm.sh/hook: crd-install
        helm.sh/hook-delete-policy: before-hook-creation
      labels:
        app: cert-manager
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cert-manager
      name: challenges.acme.cert-manager.io
    spec:
      conversion:
        strategy: Webhook
        webhook:
          clientConfig:
            service:
              name: release-name-webhook
              namespace: default
              path: /convert
          conversionReviewVersions:
          - v1
          - v1beta1
      group: acme.cert-manager.io
      names:
        kind: Challenge
        listKind: ChallengeList
        plural: challenges
        singular: challenge
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .spec.dnsName
          name: Domain
          type: string
        - jsonPath: .status.reason
          name: Reason
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when
            this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is represented
            in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1alpha2
        schema:
          openAPIV3Schema:
            description: Challenge is a type to represent a Challenge request with an
              ACME server
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  authzURL:
                    description: AuthzURL is the URL to the ACME Authorization resource
                      that this challenge is a part of.
                    type: string
                  dnsName:
                    description: DNSName is the identifier that this challenge is for,
                      e.g. example.com. If the requested DNSName is a 'wildcard', this
                      field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                      it must be `example.com`.
                    type: string
                  issuerRef:
                    description: IssuerRef references a properly configured ACME-type
                      Issuer which should be used to create this Challenge. If the Issuer
                      does not exist, processing will be retried. If the Issuer is not
                      an 'ACME' Issuer, an error will be returned and the Challenge will
                      be marked as failed.
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  key:
                    description: 'Key is the ACME challenge key for this challenge For
                      HTTP01 challenges, this is the value that must be responded with
                      to complete the HTTP01 challenge in the format: `<private key JWK
                      thumbprint>.<key from acme server for challenge>`. For DNS01 challenges,
                      this is the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key
                      from acme server for challenge>` text that must be set as the TXT
                      record content.'
                    type: string
                  solver:
                    description: Solver contains the domain solving configuration that
                      should be used to solve this challenge resource.
                    properties:
                      dns01:
                        description: Configures cert-manager to attempt to complete authorizations
                          by performing the DNS01 challenge flow.
                        properties:
                          acmedns:
                            description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                              API to manage DNS01 challenge records.
                            properties:
                              accountSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              host:
                                type: string
                            required:
                            - accountSecretRef
                            - host
                            type: object
                          akamai:
                            description: Use the Akamai DNS zone management API to manage
                              DNS01 challenge records.
                            properties:
                              accessTokenSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              clientSecretSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              clientTokenSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              serviceConsumerDomain:
                                type: string
                            required:
                            - accessTokenSecretRef
                            - clientSecretSecretRef
                            - clientTokenSecretRef
                            - serviceConsumerDomain
                            type: object
                          azuredns:
                            description: Use the Microsoft Azure DNS API to manage DNS01
                              challenge records.
                            properties:
                              clientID:
                                description: if both this and ClientSecret are left unset
                                  MSI will be used
                                type: string
                              clientSecretSecretRef:
                                description: if both this and ClientID are left unset
                                  MSI will be used
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              environment:
                                enum:
                                - AzurePublicCloud
                                - AzureChinaCloud
                                - AzureGermanCloud
                                - AzureUSGovernmentCloud
                                type: string
                              hostedZoneName:
                                type: string
                              resourceGroupName:
                                type: string
                              subscriptionID:
                                type: string
                              tenantID:
                                description: when specifying ClientID and ClientSecret
                                  then this field is also needed
                                type: string
                            required:
                            - resourceGroupName
                            - subscriptionID
                            type: object
                          clouddns:
                            description: Use the Google Cloud DNS API to manage DNS01
                              challenge records.
                            properties:
                              hostedZoneName:
                                description: HostedZoneName is an optional field that
                                  tells cert-manager in which Cloud DNS zone the challenge
                                  record has to be created. If left empty cert-manager
                                  will automatically choose a zone.
                                type: string
                              project:
                                type: string
                              serviceAccountSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - project
                            type: object
                          cloudflare:
                            description: Use the Cloudflare API to manage DNS01 challenge
                              records.
                            properties:
                              apiKeySecretRef:
                                description: 'API key to use to authenticate with Cloudflare.
                                  Note: using an API token to authenticate is now the
                                  recommended method as it allows greater control of permissions.'
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              apiTokenSecretRef:
                                description: API token used to authenticate with Cloudflare.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              email:
                                description: Email of the account, only required when
                                  using API key based authentication.
                                type: string
                            type: object
                          cnameStrategy:
                            description: CNAMEStrategy configures how the DNS01 provider
                              should handle CNAME records when found in DNS zones.
                            enum:
                            - None
                            - Follow
                            type: string
                          digitalocean:
                            description: Use the DigitalOcean DNS API to manage DNS01
                              challenge records.
                            properties:
                              tokenSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - tokenSecretRef
                            type: object
                          rfc2136:
                            description: Use RFC2136 ("Dynamic Updates in the Domain Name
                              System") (https://datatracker.ietf.org/doc/rfc2136/) to
                              manage DNS01 challenge records.
                            properties:
                              nameserver:
                                description: The IP address or hostname of an authoritative
                                  DNS server supporting RFC2136 in the form host:port.
                                  If the host is an IPv6 address it must be enclosed in
                                  square brackets (e.g [2001:db8::1]) ; port is optional.
                                  This field is required.
                                type: string
                              tsigAlgorithm:
                                description: 'The TSIG Algorithm configured in the DNS
                                  supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                  and ``tsigKeyName`` are defined. Supported values are
                                  (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                  ``HMACSHA256`` or ``HMACSHA512``.'
                                type: string
                              tsigKeyName:
                                description: The TSIG Key name configured in the DNS.
                                  If ``tsigSecretSecretRef`` is defined, this field is
                                  required.
                                type: string
                              tsigSecretSecretRef:
                                description: The name of the secret containing the TSIG
                                  value. If ``tsigKeyName`` is defined, this field is
                                  required.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - nameserver
                            type: object
                          route53:
                            description: Use the AWS Route53 API to manage DNS01 challenge
                              records.
                            properties:
                              accessKeyID:
                                description: 'The AccessKeyID is used for authentication.
                                  If not set we fall-back to using env vars, shared credentials
                                  file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                type: string
                              hostedZoneID:
                                description: If set, the provider will manage only this
                                  zone in Route53 and will not do an lookup using the
                                  route53:ListHostedZonesByName api call.
                                type: string
                              region:
                                description: Always set the region when using AccessKeyID
                                  and SecretAccessKey
                                type: string
                              role:
                                description: Role is a Role ARN which the Route53 provider
                                  will assume using either the explicit credentials AccessKeyID/SecretAccessKey
                                  or the inferred credentials from environment variables,
                                  shared credentials file or AWS Instance metadata
                                type: string
                              secretAccessKeySecretRef:
                                description: The SecretAccessKey is used for authentication.
                                  If not set we fall-back to using env vars, shared credentials
                                  file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - region
                            type: object
                          webhook:
                            description: Configure an external webhook based DNS01 challenge
                              solver to manage DNS01 challenge records.
                            properties:
                              config:
                                description: Additional configuration that should be passed
                                  to the webhook apiserver when challenges are processed.
                                  This can contain arbitrary JSON data. Secret values
                                  should not be specified in this stanza. If secret values
                                  are needed (e.g. credentials for a DNS service), you
                                  should use a SecretKeySelector to reference a Secret
                                  resource. For details on the schema of this field, consult
                                  the webhook provider implementation's documentation.
                                x-kubernetes-preserve-unknown-fields: true
                              groupName:
                                description: The API group name that should be used when
                                  POSTing ChallengePayload resources to the webhook apiserver.
                                  This should be the same as the GroupName specified in
                                  the webhook provider implementation.
                                type: string
                              solverName:
                                description: The name of the solver to use, as defined
                                  in the webhook provider implementation. This will typically
                                  be the name of the provider, e.g. 'cloudflare'.
                                type: string
                            required:
                            - groupName
                            - solverName
                            type: object
                        type: object
                      http01:
                        description: Configures cert-manager to attempt to complete authorizations
                          by performing the HTTP01 challenge flow. It is not possible
                          to obtain certificates for wildcard domain names (e.g. `*.example.com`)
                          using the HTTP01 challenge mechanism.
                        properties:
                          ingress:
                            description: The ingress based HTTP01 challenge solver will
                              solve challenges by creating or modifying Ingress resources
                              in order to route requests for '/.well-known/acme-challenge/XYZ'
                              to 'challenge solver' pods that are provisioned by cert-manager
                              for each Challenge to be completed.
                            properties:
                              class:
                                description: The ingress class to use when creating Ingress
                                  resources to solve ACME challenges that use this challenge
                                  solver. Only one of 'class' or 'name' may be specified.
                                type: string
                              ingressTemplate:
                                description: Optional ingress template used to configure
                                  the ACME challenge solver ingress used for HTTP01 challenges
                                properties:
                                  metadata:
                                    description: ObjectMeta overrides for the ingress
                                      used to solve HTTP01 challenges. Only the 'labels'
                                      and 'annotations' fields may be set. If labels or
                                      annotations overlap with in-built values, the values
                                      here will override the in-built values.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: Annotations that should be added
                                          to the created ACME HTTP01 solver ingress.
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: Labels that should be added to the
                                          created ACME HTTP01 solver ingress.
                                        type: object
                                    type: object
                                type: object
                              name:
                                description: The name of the ingress resource that should
                                  have ACME challenge solving routes inserted into it
                                  in order to solve HTTP01 challenges. This is typically
                                  used in conjunction with ingress controllers like ingress-gce,
                                  which maintains a 1:1 mapping between external IPs and
                                  ingress resources.
                                type: string
                              podTemplate:
                                description: Optional pod template used to configure the
                                  ACME challenge solver pods used for HTTP01 challenges
                                properties:
                                  metadata:
                                    description: ObjectMeta overrides for the pod used
                                      to solve HTTP01 challenges. Only the 'labels' and
                                      'annotations' fields may be set. If labels or annotations
                                      overlap with in-built values, the values here will
                                      override the in-built values.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: Annotations that should be added
                                          to the create ACME HTTP01 solver pods.
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: Labels that should be added to the
                                          created ACME HTTP01 solver pods.
                                        type: object
                                    type: object
                                  spec:
                                    description: PodSpec defines overrides for the HTTP01
                                      challenge solver pod. Only the 'priorityClassName',
                                      'nodeSelector', 'affinity', 'serviceAccountName'
                                      and 'tolerations' fields are supported currently.
                                      All other fields will be ignored.
                                    properties:
                                      affinity:
                                        description: If specified, the pod's scheduling
                                          constraints
                                        properties:
                                          nodeAffinity:
                                            description: Describes node affinity scheduling
                                              rules for the pod.
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the affinity expressions specified by
                                                  this field, but it may choose a node
                                                  that violates one or more of the expressions.
                                                  The node that is most preferred is the
                                                  one with the greatest sum of weights,
                                                  i.e. for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling affinity
                                                  expressions, etc.), compute a sum by
                                                  iterating through the elements of this
                                                  field and adding "weight" to the sum
                                                  if the node matches the corresponding
                                                  matchExpressions; the node(s) with the
                                                  highest sum are the most preferred.
                                                items:
                                                  description: An empty preferred scheduling
                                                    term matches all objects with implicit
                                                    weight 0 (i.e. it's a no-op). A null
                                                    preferred scheduling term matches
                                                    no objects (i.e. is also a no-op).
                                                  properties:
                                                    preference:
                                                      description: A node selector term,
                                                        associated with the corresponding
                                                        weight.
                                                      properties:
                                                        matchExpressions:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            labels.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchFields:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            fields.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                      type: object
                                                    weight:
                                                      description: Weight associated with
                                                        matching the corresponding nodeSelectorTerm,
                                                        in the range 1-100.
                                                      format: int32
                                                      type: integer
                                                  required:
                                                  - preference
                                                  - weight
                                                  type: object
                                                type: array
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: If the affinity requirements
                                                  specified by this field are not met
                                                  at scheduling time, the pod will not
                                                  be scheduled onto the node. If the affinity
                                                  requirements specified by this field
                                                  cease to be met at some point during
                                                  pod execution (e.g. due to an update),
                                                  the system may or may not try to eventually
                                                  evict the pod from its node.
                                                properties:
                                                  nodeSelectorTerms:
                                                    description: Required. A list of node
                                                      selector terms. The terms are ORed.
                                                    items:
                                                      description: A null or empty node
                                                        selector term matches no objects.
                                                        The requirements of them are ANDed.
                                                        The TopologySelectorTerm type
                                                        implements a subset of the NodeSelectorTerm.
                                                      properties:
                                                        matchExpressions:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            labels.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchFields:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            fields.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                      type: object
                                                    type: array
                                                required:
                                                - nodeSelectorTerms
                                                type: object
                                            type: object
                                          podAffinity:
                                            description: Describes pod affinity scheduling
                                              rules (e.g. co-locate this pod in the same
                                              node, zone, etc. as some other pod(s)).
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the affinity expressions specified by
                                                  this field, but it may choose a node
                                                  that violates one or more of the expressions.
                                                  The node that is most preferred is the
                                                  one with the greatest sum of weights,
                                                  i.e. for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling affinity
                                                  expressions, etc.), compute a sum by
                                                  iterating through the elements of this
                                                  field and adding "weight" to the sum
                                                  if the node has pods which matches the
                                                  corresponding podAffinityTerm; the node(s)
                                                  with the highest sum are the most preferred.
                                                items:
                                                  description: The weights of all of the
                                                    matched WeightedPodAffinityTerm fields
                                                    are added per-node to find the most
                                                    preferred node(s)
                                                  properties:
                                                    podAffinityTerm:
                                                      description: Required. A pod affinity
                                                        term, associated with the corresponding
                                                        weight.
                                                      properties:
                                                        labelSelector:
                                                          description: A label query over
                                                            a set of resources, in this
                                                            case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label selector
                                                                requirements. The requirements
                                                                are ANDed.
                                                              items:
                                                                description: A label selector
                                                                  requirement is a selector
                                                                  that contains values,
                                                                  a key, and an operator
                                                                  that relates the key
                                                                  and values.
                                                                properties:
                                                                  key:
                                                                    description: key is
                                                                      the label key that
                                                                      the selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a key's
                                                                      relationship to
                                                                      a set of values.
                                                                      Valid operators
                                                                      are In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array of string
                                                                      values. If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or DoesNotExist,
                                                                      the values array
                                                                      must be empty. This
                                                                      array is replaced
                                                                      during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels map
                                                                is equivalent to an element
                                                                of matchExpressions, whose
                                                                key field is "key", the
                                                                operator is "In", and
                                                                the values array contains
                                                                only "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces specifies
                                                            which namespaces the labelSelector
                                                            applies to (matches against);
                                                            null or empty list means "this
                                                            pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity) or
                                                            not co-located (anti-affinity)
                                                            with the pods matching the
                                                            labelSelector in the specified
                                                            namespaces, where co-located
                                                            is defined as running on a
                                                            node whose value of the label
                                                            with key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods is
                                                            running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    weight:
                                                      description: weight associated with
                                                        matching the corresponding podAffinityTerm,
                                                        in the range 1-100.
                                                      format: int32
                                                      type: integer
                                                  required:
                                                  - podAffinityTerm
                                                  - weight
                                                  type: object
                                                type: array
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: If the affinity requirements
                                                  specified by this field are not met
                                                  at scheduling time, the pod will not
                                                  be scheduled onto the node. If the affinity
                                                  requirements specified by this field
                                                  cease to be met at some point during
                                                  pod execution (e.g. due to a pod label
                                                  update), the system may or may not try
                                                  to eventually evict the pod from its
                                                  node. When there are multiple elements,
                                                  the lists of nodes corresponding to
                                                  each podAffinityTerm are intersected,
                                                  i.e. all terms must be satisfied.
                                                items:
                                                  description: Defines a set of pods (namely
                                                    those matching the labelSelector relative
                                                    to the given namespace(s)) that this
                                                    pod should be co-located (affinity)
                                                    or not co-located (anti-affinity)
                                                    with, where co-located is defined
                                                    as running on a node whose value of
                                                    the label with key <topologyKey> matches
                                                    that of any node on which a pod of
                                                    the set of pods is running
                                                  properties:
                                                    labelSelector:
                                                      description: A label query over
                                                        a set of resources, in this case
                                                        pods.
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the
                                                                  label key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists and
                                                                  DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values is
                                                                  an array of string values.
                                                                  If the operator is In
                                                                  or NotIn, the values
                                                                  array must be non-empty.
                                                                  If the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. This array is
                                                                  replaced during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels is
                                                            a map of {key,value} pairs.
                                                            A single {key,value} in the
                                                            matchLabels map is equivalent
                                                            to an element of matchExpressions,
                                                            whose key field is "key",
                                                            the operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                      type: object
                                                    namespaces:
                                                      description: namespaces specifies
                                                        which namespaces the labelSelector
                                                        applies to (matches against);
                                                        null or empty list means "this
                                                        pod's namespace"
                                                      items:
                                                        type: string
                                                      type: array
                                                    topologyKey:
                                                      description: This pod should be
                                                        co-located (affinity) or not co-located
                                                        (anti-affinity) with the pods
                                                        matching the labelSelector in
                                                        the specified namespaces, where
                                                        co-located is defined as running
                                                        on a node whose value of the label
                                                        with key topologyKey matches that
                                                        of any node on which any of the
                                                        selected pods is running. Empty
                                                        topologyKey is not allowed.
                                                      type: string
                                                  required:
                                                  - topologyKey
                                                  type: object
                                                type: array
                                            type: object
                                          podAntiAffinity:
                                            description: Describes pod anti-affinity scheduling
                                              rules (e.g. avoid putting this pod in the
                                              same node, zone, etc. as some other pod(s)).
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the anti-affinity expressions specified
                                                  by this field, but it may choose a node
                                                  that violates one or more of the expressions.
                                                  The node that is most preferred is the
                                                  one with the greatest sum of weights,
                                                  i.e. for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling anti-affinity
                                                  expressions, etc.), compute a sum by
                                                  iterating through the elements of this
                                                  field and adding "weight" to the sum
                                                  if the node has pods which matches the
                                                  corresponding podAffinityTerm; the node(s)
                                                  with the highest sum are the most preferred.
                                                items:
                                                  description: The weights of all of the
                                                    matched WeightedPodAffinityTerm fields
                                                    are added per-node to find the most
                                                    preferred node(s)
                                                  properties:
                                                    podAffinityTerm:
                                                      description: Required. A pod affinity
                                                        term, associated with the corresponding
                                                        weight.
                                                      properties:
                                                        labelSelector:
                                                          description: A label query over
                                                            a set of resources, in this
                                                            case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label selector
                                                                requirements. The requirements
                                                                are ANDed.
                                                              items:
                                                                description: A label selector
                                                                  requirement is a selector
                                                                  that contains values,
                                                                  a key, and an operator
                                                                  that relates the key
                                                                  and values.
                                                                properties:
                                                                  key:
                                                                    description: key is
                                                                      the label key that
                                                                      the selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a key's
                                                                      relationship to
                                                                      a set of values.
                                                                      Valid operators
                                                                      are In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array of string
                                                                      values. If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or DoesNotExist,
                                                                      the values array
                                                                      must be empty. This
                                                                      array is replaced
                                                                      during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels map
                                                                is equivalent to an element
                                                                of matchExpressions, whose
                                                                key field is "key", the
                                                                operator is "In", and
                                                                the values array contains
                                                                only "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces specifies
                                                            which namespaces the labelSelector
                                                            applies to (matches against);
                                                            null or empty list means "this
                                                            pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity) or
                                                            not co-located (anti-affinity)
                                                            with the pods matching the
                                                            labelSelector in the specified
                                                            namespaces, where co-located
                                                            is defined as running on a
                                                            node whose value of the label
                                                            with key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods is
                                                            running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    weight:
                                                      description: weight associated with
                                                        matching the corresponding podAffinityTerm,
                                                        in the range 1-100.
                                                      format: int32
                                                      type: integer
                                                  required:
                                                  - podAffinityTerm
                                                  - weight
                                                  type: object
                                                type: array
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: If the anti-affinity requirements
                                                  specified by this field are not met
                                                  at scheduling time, the pod will not
                                                  be scheduled onto the node. If the anti-affinity
                                                  requirements specified by this field
                                                  cease to be met at some point during
                                                  pod execution (e.g. due to a pod label
                                                  update), the system may or may not try
                                                  to eventually evict the pod from its
                                                  node. When there are multiple elements,
                                                  the lists of nodes corresponding to
                                                  each podAffinityTerm are intersected,
                                                  i.e. all terms must be satisfied.
                                                items:
                                                  description: Defines a set of pods (namely
                                                    those matching the labelSelector relative
                                                    to the given namespace(s)) that this
                                                    pod should be co-located (affinity)
                                                    or not co-located (anti-affinity)
                                                    with, where co-located is defined
                                                    as running on a node whose value of
                                                    the label with key <topologyKey> matches
                                                    that of any node on which a pod of
                                                    the set of pods is running
                                                  properties:
                                                    labelSelector:
                                                      description: A label query over
                                                        a set of resources, in this case
                                                        pods.
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the
                                                                  label key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists and
                                                                  DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values is
                                                                  an array of string values.
                                                                  If the operator is In
                                                                  or NotIn, the values
                                                                  array must be non-empty.
                                                                  If the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. This array is
                                                                  replaced during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels is
                                                            a map of {key,value} pairs.
                                                            A single {key,value} in the
                                                            matchLabels map is equivalent
                                                            to an element of matchExpressions,
                                                            whose key field is "key",
                                                            the operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                      type: object
                                                    namespaces:
                                                      description: namespaces specifies
                                                        which namespaces the labelSelector
                                                        applies to (matches against);
                                                        null or empty list means "this
                                                        pod's namespace"
                                                      items:
                                                        type: string
                                                      type: array
                                                    topologyKey:
                                                      description: This pod should be
                                                        co-located (affinity) or not co-located
                                                        (anti-affinity) with the pods
                                                        matching the labelSelector in
                                                        the specified namespaces, where
                                                        co-located is defined as running
                                                        on a node whose value of the label
                                                        with key topologyKey matches that
                                                        of any node on which any of the
                                                        selected pods is running. Empty
                                                        topologyKey is not allowed.
                                                      type: string
                                                  required:
                                                  - topologyKey
                                                  type: object
                                                type: array
                                            type: object
                                        type: object
                                      nodeSelector:
                                        additionalProperties:
                                          type: string
                                        description: 'NodeSelector is a selector which
                                          must be true for the pod to fit on a node. Selector
                                          which must match a node''s labels for the pod
                                          to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                        type: object
                                      priorityClassName:
                                        description: If specified, the pod's priorityClassName.
                                        type: string
                                      serviceAccountName:
                                        description: If specified, the pod's service account
                                        type: string
                                      tolerations:
                                        description: If specified, the pod's tolerations.
                                        items:
                                          description: The pod this Toleration is attached
                                            to tolerates any taint that matches the triple
                                            <key,value,effect> using the matching operator
                                            <operator>.
                                          properties:
                                            effect:
                                              description: Effect indicates the taint
                                                effect to match. Empty means match all
                                                taint effects. When specified, allowed
                                                values are NoSchedule, PreferNoSchedule
                                                and NoExecute.
                                              type: string
                                            key:
                                              description: Key is the taint key that the
                                                toleration applies to. Empty means match
                                                all taint keys. If the key is empty, operator
                                                must be Exists; this combination means
                                                to match all values and all keys.
                                              type: string
                                            operator:
                                              description: Operator represents a key's
                                                relationship to the value. Valid operators
                                                are Exists and Equal. Defaults to Equal.
                                                Exists is equivalent to wildcard for value,
                                                so that a pod can tolerate all taints
                                                of a particular category.
                                              type: string
                                            tolerationSeconds:
                                              description: TolerationSeconds represents
                                                the period of time the toleration (which
                                                must be of effect NoExecute, otherwise
                                                this field is ignored) tolerates the taint.
                                                By default, it is not set, which means
                                                tolerate the taint forever (do not evict).
                                                Zero and negative values will be treated
                                                as 0 (evict immediately) by the system.
                                              format: int64
                                              type: integer
                                            value:
                                              description: Value is the taint value the
                                                toleration matches to. If the operator
                                                is Exists, the value should be empty,
                                                otherwise just a regular string.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              serviceType:
                                description: Optional service type for Kubernetes solver
                                  service
                                type: string
                            type: object
                        type: object
                      selector:
                        description: Selector selects a set of DNSNames on the Certificate
                          resource that should be solved using this challenge solver.
                          If not specified, the solver will be treated as the 'default'
                          solver with the lowest priority, i.e. if any other solver has
                          a more specific match, it will be used instead.
                        properties:
                          dnsNames:
                            description: List of DNSNames that this solver will be used
                              to solve. If specified and a match is found, a dnsNames
                              selector will take precedence over a dnsZones selector.
                              If multiple solvers match with the same dnsNames value,
                              the solver with the most matching labels in matchLabels
                              will be selected. If neither has more matches, the solver
                              defined earlier in the list will be selected.
                            items:
                              type: string
                            type: array
                          dnsZones:
                            description: List of DNSZones that this solver will be used
                              to solve. The most specific DNS zone match specified here
                              will take precedence over other DNS zone matches, so a solver
                              specifying sys.example.com will be selected over one specifying
                              example.com for the domain www.sys.example.com. If multiple
                              solvers match with the same dnsZones value, the solver with
                              the most matching labels in matchLabels will be selected.
                              If neither has more matches, the solver defined earlier
                              in the list will be selected.
                            items:
                              type: string
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: A label selector that is used to refine the set
                              of certificate's that this challenge solver will apply to.
                            type: object
                        type: object
                    type: object
                  token:
                    description: Token is the ACME challenge token for this challenge.
                      This is the raw value returned from the ACME server.
                    type: string
                  type:
                    description: Type is the type of ACME challenge this resource represents.
                      One of "http-01" or "dns-01".
                    enum:
                    - http-01
                    - dns-01
                    type: string
                  url:
                    description: URL is the URL of the ACME Challenge resource for this
                      challenge. This can be used to lookup details about the status of
                      this challenge.
                    type: string
                  wildcard:
                    description: Wildcard will be true if this challenge is for a wildcard
                      identifier, for example '*.example.com'.
                    type: boolean
                required:
                - authzURL
                - dnsName
                - issuerRef
                - key
                - solver
                - token
                - type
                - url
                type: object
              status:
                properties:
                  presented:
                    description: Presented will be set to true if the challenge values
                      for this challenge are currently 'presented'. This *does not* imply
                      the self check is passing. Only that the values have been 'submitted'
                      for the appropriate challenge mechanism (i.e. the DNS01 TXT record
                      has been presented, or the HTTP01 configuration has been configured).
                    type: boolean
                  processing:
                    description: Processing is used to denote whether this challenge should
                      be processed or not. This field will only be set to true by the
                      'scheduling' component. It will only be set to false by the 'challenges'
                      controller, after the challenge has reached a final state or timed
                      out. If this field is set to false, the challenge controller will
                      not take any more action.
                    type: boolean
                  reason:
                    description: Reason contains human readable information on why the
                      Challenge is in the current state.
                    type: string
                  state:
                    description: State contains the current 'state' of the challenge.
                      If not set, the state of the challenge is unknown.
                    enum:
                    - valid
                    - ready
                    - pending
                    - processing
                    - invalid
                    - expired
                    - errored
                    type: string
                type: object
            required:
            - metadata
            type: object
        served: true
        storage: false
        subresources:
          status: {}
      - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .spec.dnsName
          name: Domain
          type: string
        - jsonPath: .status.reason
          name: Reason
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when
            this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is represented
            in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1alpha3
        schema:
          openAPIV3Schema:
            description: Challenge is a type to represent a Challenge request with an
              ACME server
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  authzURL:
                    description: AuthzURL is the URL to the ACME Authorization resource
                      that this challenge is a part of.
                    type: string
                  dnsName:
                    description: DNSName is the identifier that this challenge is for,
                      e.g. example.com. If the requested DNSName is a 'wildcard', this
                      field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                      it must be `example.com`.
                    type: string
                  issuerRef:
                    description: IssuerRef references a properly configured ACME-type
                      Issuer which should be used to create this Challenge. If the Issuer
                      does not exist, processing will be retried. If the Issuer is not
                      an 'ACME' Issuer, an error will be returned and the Challenge will
                      be marked as failed.
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  key:
                    description: 'Key is the ACME challenge key for this challenge For
                      HTTP01 challenges, this is the value that must be responded with
                      to complete the HTTP01 challenge in the format: `<private key JWK
                      thumbprint>.<key from acme server for challenge>`. For DNS01 challenges,
                      this is the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key
                      from acme server for challenge>` text that must be set as the TXT
                      record content.'
                    type: string
                  solver:
                    description: Solver contains the domain solving configuration that
                      should be used to solve this challenge resource.
                    properties:
                      dns01:
                        description: Configures cert-manager to attempt to complete authorizations
                          by performing the DNS01 challenge flow.
                        properties:
                          acmedns:
                            description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                              API to manage DNS01 challenge records.
                            properties:
                              accountSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              host:
                                type: string
                            required:
                            - accountSecretRef
                            - host
                            type: object
                          akamai:
                            description: Use the Akamai DNS zone management API to manage
                              DNS01 challenge records.
                            properties:
                              accessTokenSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              clientSecretSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              clientTokenSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              serviceConsumerDomain:
                                type: string
                            required:
                            - accessTokenSecretRef
                            - clientSecretSecretRef
                            - clientTokenSecretRef
                            - serviceConsumerDomain
                            type: object
                          azuredns:
                            description: Use the Microsoft Azure DNS API to manage DNS01
                              challenge records.
                            properties:
                              clientID:
                                description: if both this and ClientSecret are left unset
                                  MSI will be used
                                type: string
                              clientSecretSecretRef:
                                description: if both this and ClientID are left unset
                                  MSI will be used
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              environment:
                                enum:
                                - AzurePublicCloud
                                - AzureChinaCloud
                                - AzureGermanCloud
                                - AzureUSGovernmentCloud
                                type: string
                              hostedZoneName:
                                type: string
                              resourceGroupName:
                                type: string
                              subscriptionID:
                                type: string
                              tenantID:
                                description: when specifying ClientID and ClientSecret
                                  then this field is also needed
                                type: string
                            required:
                            - resourceGroupName
                            - subscriptionID
                            type: object
                          clouddns:
                            description: Use the Google Cloud DNS API to manage DNS01
                              challenge records.
                            properties:
                              hostedZoneName:
                                description: HostedZoneName is an optional field that
                                  tells cert-manager in which Cloud DNS zone the challenge
                                  record has to be created. If left empty cert-manager
                                  will automatically choose a zone.
                                type: string
                              project:
                                type: string
                              serviceAccountSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - project
                            type: object
                          cloudflare:
                            description: Use the Cloudflare API to manage DNS01 challenge
                              records.
                            properties:
                              apiKeySecretRef:
                                description: 'API key to use to authenticate with Cloudflare.
                                  Note: using an API token to authenticate is now the
                                  recommended method as it allows greater control of permissions.'
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              apiTokenSecretRef:
                                description: API token used to authenticate with Cloudflare.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              email:
                                description: Email of the account, only required when
                                  using API key based authentication.
                                type: string
                            type: object
                          cnameStrategy:
                            description: CNAMEStrategy configures how the DNS01 provider
                              should handle CNAME records when found in DNS zones.
                            enum:
                            - None
                            - Follow
                            type: string
                          digitalocean:
                            description: Use the DigitalOcean DNS API to manage DNS01
                              challenge records.
                            properties:
                              tokenSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - tokenSecretRef
                            type: object
                          rfc2136:
                            description: Use RFC2136 ("Dynamic Updates in the Domain Name
                              System") (https://datatracker.ietf.org/doc/rfc2136/) to
                              manage DNS01 challenge records.
                            properties:
                              nameserver:
                                description: The IP address or hostname of an authoritative
                                  DNS server supporting RFC2136 in the form host:port.
                                  If the host is an IPv6 address it must be enclosed in
                                  square brackets (e.g [2001:db8::1]) ; port is optional.
                                  This field is required.
                                type: string
                              tsigAlgorithm:
                                description: 'The TSIG Algorithm configured in the DNS
                                  supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                  and ``tsigKeyName`` are defined. Supported values are
                                  (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                  ``HMACSHA256`` or ``HMACSHA512``.'
                                type: string
                              tsigKeyName:
                                description: The TSIG Key name configured in the DNS.
                                  If ``tsigSecretSecretRef`` is defined, this field is
                                  required.
                                type: string
                              tsigSecretSecretRef:
                                description: The name of the secret containing the TSIG
                                  value. If ``tsigKeyName`` is defined, this field is
                                  required.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - nameserver
                            type: object
                          route53:
                            description: Use the AWS Route53 API to manage DNS01 challenge
                              records.
                            properties:
                              accessKeyID:
                                description: 'The AccessKeyID is used for authentication.
                                  If not set we fall-back to using env vars, shared credentials
                                  file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                type: string
                              hostedZoneID:
                                description: If set, the provider will manage only this
                                  zone in Route53 and will not do an lookup using the
                                  route53:ListHostedZonesByName api call.
                                type: string
                              region:
                                description: Always set the region when using AccessKeyID
                                  and SecretAccessKey
                                type: string
                              role:
                                description: Role is a Role ARN which the Route53 provider
                                  will assume using either the explicit credentials AccessKeyID/SecretAccessKey
                                  or the inferred credentials from environment variables,
                                  shared credentials file or AWS Instance metadata
                                type: string
                              secretAccessKeySecretRef:
                                description: The SecretAccessKey is used for authentication.
                                  If not set we fall-back to using env vars, shared credentials
                                  file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - region
                            type: object
                          webhook:
                            description: Configure an external webhook based DNS01 challenge
                              solver to manage DNS01 challenge records.
                            properties:
                              config:
                                description: Additional configuration that should be passed
                                  to the webhook apiserver when challenges are processed.
                                  This can contain arbitrary JSON data. Secret values
                                  should not be specified in this stanza. If secret values
                                  are needed (e.g. credentials for a DNS service), you
                                  should use a SecretKeySelector to reference a Secret
                                  resource. For details on the schema of this field, consult
                                  the webhook provider implementation's documentation.
                                x-kubernetes-preserve-unknown-fields: true
                              groupName:
                                description: The API group name that should be used when
                                  POSTing ChallengePayload resources to the webhook apiserver.
                                  This should be the same as the GroupName specified in
                                  the webhook provider implementation.
                                type: string
                              solverName:
                                description: The name of the solver to use, as defined
                                  in the webhook provider implementation. This will typically
                                  be the name of the provider, e.g. 'cloudflare'.
                                type: string
                            required:
                            - groupName
                            - solverName
                            type: object
                        type: object
                      http01:
                        description: Configures cert-manager to attempt to complete authorizations
                          by performing the HTTP01 challenge flow. It is not possible
                          to obtain certificates for wildcard domain names (e.g. `*.example.com`)
                          using the HTTP01 challenge mechanism.
                        properties:
                          ingress:
                            description: The ingress based HTTP01 challenge solver will
                              solve challenges by creating or modifying Ingress resources
                              in order to route requests for '/.well-known/acme-challenge/XYZ'
                              to 'challenge solver' pods that are provisioned by cert-manager
                              for each Challenge to be completed.
                            properties:
                              class:
                                description: The ingress class to use when creating Ingress
                                  resources to solve ACME challenges that use this challenge
                                  solver. Only one of 'class' or 'name' may be specified.
                                type: string
                              ingressTemplate:
                                description: Optional ingress template used to configure
                                  the ACME challenge solver ingress used for HTTP01 challenges
                                properties:
                                  metadata:
                                    description: ObjectMeta overrides for the ingress
                                      used to solve HTTP01 challenges. Only the 'labels'
                                      and 'annotations' fields may be set. If labels or
                                      annotations overlap with in-built values, the values
                                      here will override the in-built values.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: Annotations that should be added
                                          to the created ACME HTTP01 solver ingress.
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: Labels that should be added to the
                                          created ACME HTTP01 solver ingress.
                                        type: object
                                    type: object
                                type: object
                              name:
                                description: The name of the ingress resource that should
                                  have ACME challenge solving routes inserted into it
                                  in order to solve HTTP01 challenges. This is typically
                                  used in conjunction with ingress controllers like ingress-gce,
                                  which maintains a 1:1 mapping between external IPs and
                                  ingress resources.
                                type: string
                              podTemplate:
                                description: Optional pod template used to configure the
                                  ACME challenge solver pods used for HTTP01 challenges
                                properties:
                                  metadata:
                                    description: ObjectMeta overrides for the pod used
                                      to solve HTTP01 challenges. Only the 'labels' and
                                      'annotations' fields may be set. If labels or annotations
                                      overlap with in-built values, the values here will
                                      override the in-built values.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: Annotations that should be added
                                          to the create ACME HTTP01 solver pods.
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: Labels that should be added to the
                                          created ACME HTTP01 solver pods.
                                        type: object
                                    type: object
                                  spec:
                                    description: PodSpec defines overrides for the HTTP01
                                      challenge solver pod. Only the 'priorityClassName',
                                      'nodeSelector', 'affinity', 'serviceAccountName'
                                      and 'tolerations' fields are supported currently.
                                      All other fields will be ignored.
                                    properties:
                                      affinity:
                                        description: If specified, the pod's scheduling
                                          constraints
                                        properties:
                                          nodeAffinity:
                                            description: Describes node affinity scheduling
                                              rules for the pod.
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the affinity expressions specified by
                                                  this field, but it may choose a node
                                                  that violates one or more of the expressions.
                                                  The node that is most preferred is the
                                                  one with the greatest sum of weights,
                                                  i.e. for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling affinity
                                                  expressions, etc.), compute a sum by
                                                  iterating through the elements of this
                                                  field and adding "weight" to the sum
                                                  if the node matches the corresponding
                                                  matchExpressions; the node(s) with the
                                                  highest sum are the most preferred.
                                                items:
                                                  description: An empty preferred scheduling
                                                    term matches all objects with implicit
                                                    weight 0 (i.e. it's a no-op). A null
                                                    preferred scheduling term matches
                                                    no objects (i.e. is also a no-op).
                                                  properties:
                                                    preference:
                                                      description: A node selector term,
                                                        associated with the corresponding
                                                        weight.
                                                      properties:
                                                        matchExpressions:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            labels.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchFields:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            fields.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                      type: object
                                                    weight:
                                                      description: Weight associated with
                                                        matching the corresponding nodeSelectorTerm,
                                                        in the range 1-100.
                                                      format: int32
                                                      type: integer
                                                  required:
                                                  - preference
                                                  - weight
                                                  type: object
                                                type: array
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: If the affinity requirements
                                                  specified by this field are not met
                                                  at scheduling time, the pod will not
                                                  be scheduled onto the node. If the affinity
                                                  requirements specified by this field
                                                  cease to be met at some point during
                                                  pod execution (e.g. due to an update),
                                                  the system may or may not try to eventually
                                                  evict the pod from its node.
                                                properties:
                                                  nodeSelectorTerms:
                                                    description: Required. A list of node
                                                      selector terms. The terms are ORed.
                                                    items:
                                                      description: A null or empty node
                                                        selector term matches no objects.
                                                        The requirements of them are ANDed.
                                                        The TopologySelectorTerm type
                                                        implements a subset of the NodeSelectorTerm.
                                                      properties:
                                                        matchExpressions:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            labels.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchFields:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            fields.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                      type: object
                                                    type: array
                                                required:
                                                - nodeSelectorTerms
                                                type: object
                                            type: object
                                          podAffinity:
                                            description: Describes pod affinity scheduling
                                              rules (e.g. co-locate this pod in the same
                                              node, zone, etc. as some other pod(s)).
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the affinity expressions specified by
                                                  this field, but it may choose a node
                                                  that violates one or more of the expressions.
                                                  The node that is most preferred is the
                                                  one with the greatest sum of weights,
                                                  i.e. for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling affinity
                                                  expressions, etc.), compute a sum by
                                                  iterating through the elements of this
                                                  field and adding "weight" to the sum
                                                  if the node has pods which matches the
                                                  corresponding podAffinityTerm; the node(s)
                                                  with the highest sum are the most preferred.
                                                items:
                                                  description: The weights of all of the
                                                    matched WeightedPodAffinityTerm fields
                                                    are added per-node to find the most
                                                    preferred node(s)
                                                  properties:
                                                    podAffinityTerm:
                                                      description: Required. A pod affinity
                                                        term, associated with the corresponding
                                                        weight.
                                                      properties:
                                                        labelSelector:
                                                          description: A label query over
                                                            a set of resources, in this
                                                            case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label selector
                                                                requirements. The requirements
                                                                are ANDed.
                                                              items:
                                                                description: A label selector
                                                                  requirement is a selector
                                                                  that contains values,
                                                                  a key, and an operator
                                                                  that relates the key
                                                                  and values.
                                                                properties:
                                                                  key:
                                                                    description: key is
                                                                      the label key that
                                                                      the selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a key's
                                                                      relationship to
                                                                      a set of values.
                                                                      Valid operators
                                                                      are In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array of string
                                                                      values. If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or DoesNotExist,
                                                                      the values array
                                                                      must be empty. This
                                                                      array is replaced
                                                                      during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels map
                                                                is equivalent to an element
                                                                of matchExpressions, whose
                                                                key field is "key", the
                                                                operator is "In", and
                                                                the values array contains
                                                                only "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces specifies
                                                            which namespaces the labelSelector
                                                            applies to (matches against);
                                                            null or empty list means "this
                                                            pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity) or
                                                            not co-located (anti-affinity)
                                                            with the pods matching the
                                                            labelSelector in the specified
                                                            namespaces, where co-located
                                                            is defined as running on a
                                                            node whose value of the label
                                                            with key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods is
                                                            running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    weight:
                                                      description: weight associated with
                                                        matching the corresponding podAffinityTerm,
                                                        in the range 1-100.
                                                      format: int32
                                                      type: integer
                                                  required:
                                                  - podAffinityTerm
                                                  - weight
                                                  type: object
                                                type: array
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: If the affinity requirements
                                                  specified by this field are not met
                                                  at scheduling time, the pod will not
                                                  be scheduled onto the node. If the affinity
                                                  requirements specified by this field
                                                  cease to be met at some point during
                                                  pod execution (e.g. due to a pod label
                                                  update), the system may or may not try
                                                  to eventually evict the pod from its
                                                  node. When there are multiple elements,
                                                  the lists of nodes corresponding to
                                                  each podAffinityTerm are intersected,
                                                  i.e. all terms must be satisfied.
                                                items:
                                                  description: Defines a set of pods (namely
                                                    those matching the labelSelector relative
                                                    to the given namespace(s)) that this
                                                    pod should be co-located (affinity)
                                                    or not co-located (anti-affinity)
                                                    with, where co-located is defined
                                                    as running on a node whose value of
                                                    the label with key <topologyKey> matches
                                                    that of any node on which a pod of
                                                    the set of pods is running
                                                  properties:
                                                    labelSelector:
                                                      description: A label query over
                                                        a set of resources, in this case
                                                        pods.
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the
                                                                  label key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists and
                                                                  DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values is
                                                                  an array of string values.
                                                                  If the operator is In
                                                                  or NotIn, the values
                                                                  array must be non-empty.
                                                                  If the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. This array is
                                                                  replaced during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels is
                                                            a map of {key,value} pairs.
                                                            A single {key,value} in the
                                                            matchLabels map is equivalent
                                                            to an element of matchExpressions,
                                                            whose key field is "key",
                                                            the operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                      type: object
                                                    namespaces:
                                                      description: namespaces specifies
                                                        which namespaces the labelSelector
                                                        applies to (matches against);
                                                        null or empty list means "this
                                                        pod's namespace"
                                                      items:
                                                        type: string
                                                      type: array
                                                    topologyKey:
                                                      description: This pod should be
                                                        co-located (affinity) or not co-located
                                                        (anti-affinity) with the pods
                                                        matching the labelSelector in
                                                        the specified namespaces, where
                                                        co-located is defined as running
                                                        on a node whose value of the label
                                                        with key topologyKey matches that
                                                        of any node on which any of the
                                                        selected pods is running. Empty
                                                        topologyKey is not allowed.
                                                      type: string
                                                  required:
                                                  - topologyKey
                                                  type: object
                                                type: array
                                            type: object
                                          podAntiAffinity:
                                            description: Describes pod anti-affinity scheduling
                                              rules (e.g. avoid putting this pod in the
                                              same node, zone, etc. as some other pod(s)).
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the anti-affinity expressions specified
                                                  by this field, but it may choose a node
                                                  that violates one or more of the expressions.
                                                  The node that is most preferred is the
                                                  one with the greatest sum of weights,
                                                  i.e. for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling anti-affinity
                                                  expressions, etc.), compute a sum by
                                                  iterating through the elements of this
                                                  field and adding "weight" to the sum
                                                  if the node has pods which matches the
                                                  corresponding podAffinityTerm; the node(s)
                                                  with the highest sum are the most preferred.
                                                items:
                                                  description: The weights of all of the
                                                    matched WeightedPodAffinityTerm fields
                                                    are added per-node to find the most
                                                    preferred node(s)
                                                  properties:
                                                    podAffinityTerm:
                                                      description: Required. A pod affinity
                                                        term, associated with the corresponding
                                                        weight.
                                                      properties:
                                                        labelSelector:
                                                          description: A label query over
                                                            a set of resources, in this
                                                            case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label selector
                                                                requirements. The requirements
                                                                are ANDed.
                                                              items:
                                                                description: A label selector
                                                                  requirement is a selector
                                                                  that contains values,
                                                                  a key, and an operator
                                                                  that relates the key
                                                                  and values.
                                                                properties:
                                                                  key:
                                                                    description: key is
                                                                      the label key that
                                                                      the selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a key's
                                                                      relationship to
                                                                      a set of values.
                                                                      Valid operators
                                                                      are In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array of string
                                                                      values. If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or DoesNotExist,
                                                                      the values array
                                                                      must be empty. This
                                                                      array is replaced
                                                                      during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels map
                                                                is equivalent to an element
                                                                of matchExpressions, whose
                                                                key field is "key", the
                                                                operator is "In", and
                                                                the values array contains
                                                                only "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces specifies
                                                            which namespaces the labelSelector
                                                            applies to (matches against);
                                                            null or empty list means "this
                                                            pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity) or
                                                            not co-located (anti-affinity)
                                                            with the pods matching the
                                                            labelSelector in the specified
                                                            namespaces, where co-located
                                                            is defined as running on a
                                                            node whose value of the label
                                                            with key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods is
                                                            running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    weight:
                                                      description: weight associated with
                                                        matching the corresponding podAffinityTerm,
                                                        in the range 1-100.
                                                      format: int32
                                                      type: integer
                                                  required:
                                                  - podAffinityTerm
                                                  - weight
                                                  type: object
                                                type: array
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: If the anti-affinity requirements
                                                  specified by this field are not met
                                                  at scheduling time, the pod will not
                                                  be scheduled onto the node. If the anti-affinity
                                                  requirements specified by this field
                                                  cease to be met at some point during
                                                  pod execution (e.g. due to a pod label
                                                  update), the system may or may not try
                                                  to eventually evict the pod from its
                                                  node. When there are multiple elements,
                                                  the lists of nodes corresponding to
                                                  each podAffinityTerm are intersected,
                                                  i.e. all terms must be satisfied.
                                                items:
                                                  description: Defines a set of pods (namely
                                                    those matching the labelSelector relative
                                                    to the given namespace(s)) that this
                                                    pod should be co-located (affinity)
                                                    or not co-located (anti-affinity)
                                                    with, where co-located is defined
                                                    as running on a node whose value of
                                                    the label with key <topologyKey> matches
                                                    that of any node on which a pod of
                                                    the set of pods is running
                                                  properties:
                                                    labelSelector:
                                                      description: A label query over
                                                        a set of resources, in this case
                                                        pods.
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the
                                                                  label key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists and
                                                                  DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values is
                                                                  an array of string values.
                                                                  If the operator is In
                                                                  or NotIn, the values
                                                                  array must be non-empty.
                                                                  If the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. This array is
                                                                  replaced during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels is
                                                            a map of {key,value} pairs.
                                                            A single {key,value} in the
                                                            matchLabels map is equivalent
                                                            to an element of matchExpressions,
                                                            whose key field is "key",
                                                            the operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                      type: object
                                                    namespaces:
                                                      description: namespaces specifies
                                                        which namespaces the labelSelector
                                                        applies to (matches against);
                                                        null or empty list means "this
                                                        pod's namespace"
                                                      items:
                                                        type: string
                                                      type: array
                                                    topologyKey:
                                                      description: This pod should be
                                                        co-located (affinity) or not co-located
                                                        (anti-affinity) with the pods
                                                        matching the labelSelector in
                                                        the specified namespaces, where
                                                        co-located is defined as running
                                                        on a node whose value of the label
                                                        with key topologyKey matches that
                                                        of any node on which any of the
                                                        selected pods is running. Empty
                                                        topologyKey is not allowed.
                                                      type: string
                                                  required:
                                                  - topologyKey
                                                  type: object
                                                type: array
                                            type: object
                                        type: object
                                      nodeSelector:
                                        additionalProperties:
                                          type: string
                                        description: 'NodeSelector is a selector which
                                          must be true for the pod to fit on a node. Selector
                                          which must match a node''s labels for the pod
                                          to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                        type: object
                                      priorityClassName:
                                        description: If specified, the pod's priorityClassName.
                                        type: string
                                      serviceAccountName:
                                        description: If specified, the pod's service account
                                        type: string
                                      tolerations:
                                        description: If specified, the pod's tolerations.
                                        items:
                                          description: The pod this Toleration is attached
                                            to tolerates any taint that matches the triple
                                            <key,value,effect> using the matching operator
                                            <operator>.
                                          properties:
                                            effect:
                                              description: Effect indicates the taint
                                                effect to match. Empty means match all
                                                taint effects. When specified, allowed
                                                values are NoSchedule, PreferNoSchedule
                                                and NoExecute.
                                              type: string
                                            key:
                                              description: Key is the taint key that the
                                                toleration applies to. Empty means match
                                                all taint keys. If the key is empty, operator
                                                must be Exists; this combination means
                                                to match all values and all keys.
                                              type: string
                                            operator:
                                              description: Operator represents a key's
                                                relationship to the value. Valid operators
                                                are Exists and Equal. Defaults to Equal.
                                                Exists is equivalent to wildcard for value,
                                                so that a pod can tolerate all taints
                                                of a particular category.
                                              type: string
                                            tolerationSeconds:
                                              description: TolerationSeconds represents
                                                the period of time the toleration (which
                                                must be of effect NoExecute, otherwise
                                                this field is ignored) tolerates the taint.
                                                By default, it is not set, which means
                                                tolerate the taint forever (do not evict).
                                                Zero and negative values will be treated
                                                as 0 (evict immediately) by the system.
                                              format: int64
                                              type: integer
                                            value:
                                              description: Value is the taint value the
                                                toleration matches to. If the operator
                                                is Exists, the value should be empty,
                                                otherwise just a regular string.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              serviceType:
                                description: Optional service type for Kubernetes solver
                                  service
                                type: string
                            type: object
                        type: object
                      selector:
                        description: Selector selects a set of DNSNames on the Certificate
                          resource that should be solved using this challenge solver.
                          If not specified, the solver will be treated as the 'default'
                          solver with the lowest priority, i.e. if any other solver has
                          a more specific match, it will be used instead.
                        properties:
                          dnsNames:
                            description: List of DNSNames that this solver will be used
                              to solve. If specified and a match is found, a dnsNames
                              selector will take precedence over a dnsZones selector.
                              If multiple solvers match with the same dnsNames value,
                              the solver with the most matching labels in matchLabels
                              will be selected. If neither has more matches, the solver
                              defined earlier in the list will be selected.
                            items:
                              type: string
                            type: array
                          dnsZones:
                            description: List of DNSZones that this solver will be used
                              to solve. The most specific DNS zone match specified here
                              will take precedence over other DNS zone matches, so a solver
                              specifying sys.example.com will be selected over one specifying
                              example.com for the domain www.sys.example.com. If multiple
                              solvers match with the same dnsZones value, the solver with
                              the most matching labels in matchLabels will be selected.
                              If neither has more matches, the solver defined earlier
                              in the list will be selected.
                            items:
                              type: string
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: A label selector that is used to refine the set
                              of certificate's that this challenge solver will apply to.
                            type: object
                        type: object
                    type: object
                  token:
                    description: Token is the ACME challenge token for this challenge.
                      This is the raw value returned from the ACME server.
                    type: string
                  type:
                    description: Type is the type of ACME challenge this resource represents.
                      One of "http-01" or "dns-01".
                    enum:
                    - http-01
                    - dns-01
                    type: string
                  url:
                    description: URL is the URL of the ACME Challenge resource for this
                      challenge. This can be used to lookup details about the status of
                      this challenge.
                    type: string
                  wildcard:
                    description: Wildcard will be true if this challenge is for a wildcard
                      identifier, for example '*.example.com'.
                    type: boolean
                required:
                - authzURL
                - dnsName
                - issuerRef
                - key
                - solver
                - token
                - type
                - url
                type: object
              status:
                properties:
                  presented:
                    description: Presented will be set to true if the challenge values
                      for this challenge are currently 'presented'. This *does not* imply
                      the self check is passing. Only that the values have been 'submitted'
                      for the appropriate challenge mechanism (i.e. the DNS01 TXT record
                      has been presented, or the HTTP01 configuration has been configured).
                    type: boolean
                  processing:
                    description: Processing is used to denote whether this challenge should
                      be processed or not. This field will only be set to true by the
                      'scheduling' component. It will only be set to false by the 'challenges'
                      controller, after the challenge has reached a final state or timed
                      out. If this field is set to false, the challenge controller will
                      not take any more action.
                    type: boolean
                  reason:
                    description: Reason contains human readable information on why the
                      Challenge is in the current state.
                    type: string
                  state:
                    description: State contains the current 'state' of the challenge.
                      If not set, the state of the challenge is unknown.
                    enum:
                    - valid
                    - ready
                    - pending
                    - processing
                    - invalid
                    - expired
                    - errored
                    type: string
                type: object
            required:
            - metadata
            type: object
        served: true
        storage: false
        subresources:
          status: {}
      - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .spec.dnsName
          name: Domain
          type: string
        - jsonPath: .status.reason
          name: Reason
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when
            this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is represented
            in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1beta1
        schema:
          openAPIV3Schema:
            description: Challenge is a type to represent a Challenge request with an
              ACME server
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  authorizationURL:
                    description: The URL to the ACME Authorization resource that this
                      challenge is a part of.
                    type: string
                  dnsName:
                    description: dnsName is the identifier that this challenge is for,
                      e.g. example.com. If the requested DNSName is a 'wildcard', this
                      field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                      it must be `example.com`.
                    type: string
                  issuerRef:
                    description: References a properly configured ACME-type Issuer which
                      should be used to create this Challenge. If the Issuer does not
                      exist, processing will be retried. If the Issuer is not an 'ACME'
                      Issuer, an error will be returned and the Challenge will be marked
                      as failed.
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  key:
                    description: 'The ACME challenge key for this challenge For HTTP01
                      challenges, this is the value that must be responded with to complete
                      the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key
                      from acme server for challenge>`. For DNS01 challenges, this is
                      the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key
                      from acme server for challenge>` text that must be set as the TXT
                      record content.'
                    type: string
                  solver:
                    description: Contains the domain solving configuration that should
                      be used to solve this challenge resource.
                    properties:
                      dns01:
                        description: Configures cert-manager to attempt to complete authorizations
                          by performing the DNS01 challenge flow.
                        properties:
                          acmeDNS:
                            description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                              API to manage DNS01 challenge records.
                            properties:
                              accountSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              host:
                                type: string
                            required:
                            - accountSecretRef
                            - host
                            type: object
                          akamai:
                            description: Use the Akamai DNS zone management API to manage
                              DNS01 challenge records.
                            properties:
                              accessTokenSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              clientSecretSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              clientTokenSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              serviceConsumerDomain:
                                type: string
                            required:
                            - accessTokenSecretRef
                            - clientSecretSecretRef
                            - clientTokenSecretRef
                            - serviceConsumerDomain
                            type: object
                          azureDNS:
                            description: Use the Microsoft Azure DNS API to manage DNS01
                              challenge records.
                            properties:
                              clientID:
                                description: if both this and ClientSecret are left unset
                                  MSI will be used
                                type: string
                              clientSecretSecretRef:
                                description: if both this and ClientID are left unset
                                  MSI will be used
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              environment:
                                enum:
                                - AzurePublicCloud
                                - AzureChinaCloud
                                - AzureGermanCloud
                                - AzureUSGovernmentCloud
                                type: string
                              hostedZoneName:
                                type: string
                              resourceGroupName:
                                type: string
                              subscriptionID:
                                type: string
                              tenantID:
                                description: when specifying ClientID and ClientSecret
                                  then this field is also needed
                                type: string
                            required:
                            - resourceGroupName
                            - subscriptionID
                            type: object
                          cloudDNS:
                            description: Use the Google Cloud DNS API to manage DNS01
                              challenge records.
                            properties:
                              hostedZoneName:
                                description: HostedZoneName is an optional field that
                                  tells cert-manager in which Cloud DNS zone the challenge
                                  record has to be created. If left empty cert-manager
                                  will automatically choose a zone.
                                type: string
                              project:
                                type: string
                              serviceAccountSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - project
                            type: object
                          cloudflare:
                            description: Use the Cloudflare API to manage DNS01 challenge
                              records.
                            properties:
                              apiKeySecretRef:
                                description: 'API key to use to authenticate with Cloudflare.
                                  Note: using an API token to authenticate is now the
                                  recommended method as it allows greater control of permissions.'
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              apiTokenSecretRef:
                                description: API token used to authenticate with Cloudflare.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              email:
                                description: Email of the account, only required when
                                  using API key based authentication.
                                type: string
                            type: object
                          cnameStrategy:
                            description: CNAMEStrategy configures how the DNS01 provider
                              should handle CNAME records when found in DNS zones.
                            enum:
                            - None
                            - Follow
                            type: string
                          digitalocean:
                            description: Use the DigitalOcean DNS API to manage DNS01
                              challenge records.
                            properties:
                              tokenSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - tokenSecretRef
                            type: object
                          rfc2136:
                            description: Use RFC2136 ("Dynamic Updates in the Domain Name
                              System") (https://datatracker.ietf.org/doc/rfc2136/) to
                              manage DNS01 challenge records.
                            properties:
                              nameserver:
                                description: The IP address or hostname of an authoritative
                                  DNS server supporting RFC2136 in the form host:port.
                                  If the host is an IPv6 address it must be enclosed in
                                  square brackets (e.g [2001:db8::1]) ; port is optional.
                                  This field is required.
                                type: string
                              tsigAlgorithm:
                                description: 'The TSIG Algorithm configured in the DNS
                                  supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                  and ``tsigKeyName`` are defined. Supported values are
                                  (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                  ``HMACSHA256`` or ``HMACSHA512``.'
                                type: string
                              tsigKeyName:
                                description: The TSIG Key name configured in the DNS.
                                  If ``tsigSecretSecretRef`` is defined, this field is
                                  required.
                                type: string
                              tsigSecretSecretRef:
                                description: The name of the secret containing the TSIG
                                  value. If ``tsigKeyName`` is defined, this field is
                                  required.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - nameserver
                            type: object
                          route53:
                            description: Use the AWS Route53 API to manage DNS01 challenge
                              records.
                            properties:
                              accessKeyID:
                                description: 'The AccessKeyID is used for authentication.
                                  If not set we fall-back to using env vars, shared credentials
                                  file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                type: string
                              hostedZoneID:
                                description: If set, the provider will manage only this
                                  zone in Route53 and will not do an lookup using the
                                  route53:ListHostedZonesByName api call.
                                type: string
                              region:
                                description: Always set the region when using AccessKeyID
                                  and SecretAccessKey
                                type: string
                              role:
                                description: Role is a Role ARN which the Route53 provider
                                  will assume using either the explicit credentials AccessKeyID/SecretAccessKey
                                  or the inferred credentials from environment variables,
                                  shared credentials file or AWS Instance metadata
                                type: string
                              secretAccessKeySecretRef:
                                description: The SecretAccessKey is used for authentication.
                                  If not set we fall-back to using env vars, shared credentials
                                  file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - region
                            type: object
                          webhook:
                            description: Configure an external webhook based DNS01 challenge
                              solver to manage DNS01 challenge records.
                            properties:
                              config:
                                description: Additional configuration that should be passed
                                  to the webhook apiserver when challenges are processed.
                                  This can contain arbitrary JSON data. Secret values
                                  should not be specified in this stanza. If secret values
                                  are needed (e.g. credentials for a DNS service), you
                                  should use a SecretKeySelector to reference a Secret
                                  resource. For details on the schema of this field, consult
                                  the webhook provider implementation's documentation.
                                x-kubernetes-preserve-unknown-fields: true
                              groupName:
                                description: The API group name that should be used when
                                  POSTing ChallengePayload resources to the webhook apiserver.
                                  This should be the same as the GroupName specified in
                                  the webhook provider implementation.
                                type: string
                              solverName:
                                description: The name of the solver to use, as defined
                                  in the webhook provider implementation. This will typically
                                  be the name of the provider, e.g. 'cloudflare'.
                                type: string
                            required:
                            - groupName
                            - solverName
                            type: object
                        type: object
                      http01:
                        description: Configures cert-manager to attempt to complete authorizations
                          by performing the HTTP01 challenge flow. It is not possible
                          to obtain certificates for wildcard domain names (e.g. `*.example.com`)
                          using the HTTP01 challenge mechanism.
                        properties:
                          ingress:
                            description: The ingress based HTTP01 challenge solver will
                              solve challenges by creating or modifying Ingress resources
                              in order to route requests for '/.well-known/acme-challenge/XYZ'
                              to 'challenge solver' pods that are provisioned by cert-manager
                              for each Challenge to be completed.
                            properties:
                              class:
                                description: The ingress class to use when creating Ingress
                                  resources to solve ACME challenges that use this challenge
                                  solver. Only one of 'class' or 'name' may be specified.
                                type: string
                              ingressTemplate:
                                description: Optional ingress template used to configure
                                  the ACME challenge solver ingress used for HTTP01 challenges
                                properties:
                                  metadata:
                                    description: ObjectMeta overrides for the ingress
                                      used to solve HTTP01 challenges. Only the 'labels'
                                      and 'annotations' fields may be set. If labels or
                                      annotations overlap with in-built values, the values
                                      here will override the in-built values.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: Annotations that should be added
                                          to the created ACME HTTP01 solver ingress.
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: Labels that should be added to the
                                          created ACME HTTP01 solver ingress.
                                        type: object
                                    type: object
                                type: object
                              name:
                                description: The name of the ingress resource that should
                                  have ACME challenge solving routes inserted into it
                                  in order to solve HTTP01 challenges. This is typically
                                  used in conjunction with ingress controllers like ingress-gce,
                                  which maintains a 1:1 mapping between external IPs and
                                  ingress resources.
                                type: string
                              podTemplate:
                                description: Optional pod template used to configure the
                                  ACME challenge solver pods used for HTTP01 challenges
                                properties:
                                  metadata:
                                    description: ObjectMeta overrides for the pod used
                                      to solve HTTP01 challenges. Only the 'labels' and
                                      'annotations' fields may be set. If labels or annotations
                                      overlap with in-built values, the values here will
                                      override the in-built values.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: Annotations that should be added
                                          to the create ACME HTTP01 solver pods.
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: Labels that should be added to the
                                          created ACME HTTP01 solver pods.
                                        type: object
                                    type: object
                                  spec:
                                    description: PodSpec defines overrides for the HTTP01
                                      challenge solver pod. Only the 'priorityClassName',
                                      'nodeSelector', 'affinity', 'serviceAccountName'
                                      and 'tolerations' fields are supported currently.
                                      All other fields will be ignored.
                                    properties:
                                      affinity:
                                        description: If specified, the pod's scheduling
                                          constraints
                                        properties:
                                          nodeAffinity:
                                            description: Describes node affinity scheduling
                                              rules for the pod.
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the affinity expressions specified by
                                                  this field, but it may choose a node
                                                  that violates one or more of the expressions.
                                                  The node that is most preferred is the
                                                  one with the greatest sum of weights,
                                                  i.e. for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling affinity
                                                  expressions, etc.), compute a sum by
                                                  iterating through the elements of this
                                                  field and adding "weight" to the sum
                                                  if the node matches the corresponding
                                                  matchExpressions; the node(s) with the
                                                  highest sum are the most preferred.
                                                items:
                                                  description: An empty preferred scheduling
                                                    term matches all objects with implicit
                                                    weight 0 (i.e. it's a no-op). A null
                                                    preferred scheduling term matches
                                                    no objects (i.e. is also a no-op).
                                                  properties:
                                                    preference:
                                                      description: A node selector term,
                                                        associated with the corresponding
                                                        weight.
                                                      properties:
                                                        matchExpressions:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            labels.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchFields:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            fields.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                      type: object
                                                    weight:
                                                      description: Weight associated with
                                                        matching the corresponding nodeSelectorTerm,
                                                        in the range 1-100.
                                                      format: int32
                                                      type: integer
                                                  required:
                                                  - preference
                                                  - weight
                                                  type: object
                                                type: array
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: If the affinity requirements
                                                  specified by this field are not met
                                                  at scheduling time, the pod will not
                                                  be scheduled onto the node. If the affinity
                                                  requirements specified by this field
                                                  cease to be met at some point during
                                                  pod execution (e.g. due to an update),
                                                  the system may or may not try to eventually
                                                  evict the pod from its node.
                                                properties:
                                                  nodeSelectorTerms:
                                                    description: Required. A list of node
                                                      selector terms. The terms are ORed.
                                                    items:
                                                      description: A null or empty node
                                                        selector term matches no objects.
                                                        The requirements of them are ANDed.
                                                        The TopologySelectorTerm type
                                                        implements a subset of the NodeSelectorTerm.
                                                      properties:
                                                        matchExpressions:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            labels.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchFields:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            fields.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                      type: object
                                                    type: array
                                                required:
                                                - nodeSelectorTerms
                                                type: object
                                            type: object
                                          podAffinity:
                                            description: Describes pod affinity scheduling
                                              rules (e.g. co-locate this pod in the same
                                              node, zone, etc. as some other pod(s)).
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the affinity expressions specified by
                                                  this field, but it may choose a node
                                                  that violates one or more of the expressions.
                                                  The node that is most preferred is the
                                                  one with the greatest sum of weights,
                                                  i.e. for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling affinity
                                                  expressions, etc.), compute a sum by
                                                  iterating through the elements of this
                                                  field and adding "weight" to the sum
                                                  if the node has pods which matches the
                                                  corresponding podAffinityTerm; the node(s)
                                                  with the highest sum are the most preferred.
                                                items:
                                                  description: The weights of all of the
                                                    matched WeightedPodAffinityTerm fields
                                                    are added per-node to find the most
                                                    preferred node(s)
                                                  properties:
                                                    podAffinityTerm:
                                                      description: Required. A pod affinity
                                                        term, associated with the corresponding
                                                        weight.
                                                      properties:
                                                        labelSelector:
                                                          description: A label query over
                                                            a set of resources, in this
                                                            case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label selector
                                                                requirements. The requirements
                                                                are ANDed.
                                                              items:
                                                                description: A label selector
                                                                  requirement is a selector
                                                                  that contains values,
                                                                  a key, and an operator
                                                                  that relates the key
                                                                  and values.
                                                                properties:
                                                                  key:
                                                                    description: key is
                                                                      the label key that
                                                                      the selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a key's
                                                                      relationship to
                                                                      a set of values.
                                                                      Valid operators
                                                                      are In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array of string
                                                                      values. If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or DoesNotExist,
                                                                      the values array
                                                                      must be empty. This
                                                                      array is replaced
                                                                      during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels map
                                                                is equivalent to an element
                                                                of matchExpressions, whose
                                                                key field is "key", the
                                                                operator is "In", and
                                                                the values array contains
                                                                only "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces specifies
                                                            which namespaces the labelSelector
                                                            applies to (matches against);
                                                            null or empty list means "this
                                                            pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity) or
                                                            not co-located (anti-affinity)
                                                            with the pods matching the
                                                            labelSelector in the specified
                                                            namespaces, where co-located
                                                            is defined as running on a
                                                            node whose value of the label
                                                            with key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods is
                                                            running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    weight:
                                                      description: weight associated with
                                                        matching the corresponding podAffinityTerm,
                                                        in the range 1-100.
                                                      format: int32
                                                      type: integer
                                                  required:
                                                  - podAffinityTerm
                                                  - weight
                                                  type: object
                                                type: array
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: If the affinity requirements
                                                  specified by this field are not met
                                                  at scheduling time, the pod will not
                                                  be scheduled onto the node. If the affinity
                                                  requirements specified by this field
                                                  cease to be met at some point during
                                                  pod execution (e.g. due to a pod label
                                                  update), the system may or may not try
                                                  to eventually evict the pod from its
                                                  node. When there are multiple elements,
                                                  the lists of nodes corresponding to
                                                  each podAffinityTerm are intersected,
                                                  i.e. all terms must be satisfied.
                                                items:
                                                  description: Defines a set of pods (namely
                                                    those matching the labelSelector relative
                                                    to the given namespace(s)) that this
                                                    pod should be co-located (affinity)
                                                    or not co-located (anti-affinity)
                                                    with, where co-located is defined
                                                    as running on a node whose value of
                                                    the label with key <topologyKey> matches
                                                    that of any node on which a pod of
                                                    the set of pods is running
                                                  properties:
                                                    labelSelector:
                                                      description: A label query over
                                                        a set of resources, in this case
                                                        pods.
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the
                                                                  label key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists and
                                                                  DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values is
                                                                  an array of string values.
                                                                  If the operator is In
                                                                  or NotIn, the values
                                                                  array must be non-empty.
                                                                  If the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. This array is
                                                                  replaced during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels is
                                                            a map of {key,value} pairs.
                                                            A single {key,value} in the
                                                            matchLabels map is equivalent
                                                            to an element of matchExpressions,
                                                            whose key field is "key",
                                                            the operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                      type: object
                                                    namespaces:
                                                      description: namespaces specifies
                                                        which namespaces the labelSelector
                                                        applies to (matches against);
                                                        null or empty list means "this
                                                        pod's namespace"
                                                      items:
                                                        type: string
                                                      type: array
                                                    topologyKey:
                                                      description: This pod should be
                                                        co-located (affinity) or not co-located
                                                        (anti-affinity) with the pods
                                                        matching the labelSelector in
                                                        the specified namespaces, where
                                                        co-located is defined as running
                                                        on a node whose value of the label
                                                        with key topologyKey matches that
                                                        of any node on which any of the
                                                        selected pods is running. Empty
                                                        topologyKey is not allowed.
                                                      type: string
                                                  required:
                                                  - topologyKey
                                                  type: object
                                                type: array
                                            type: object
                                          podAntiAffinity:
                                            description: Describes pod anti-affinity scheduling
                                              rules (e.g. avoid putting this pod in the
                                              same node, zone, etc. as some other pod(s)).
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the anti-affinity expressions specified
                                                  by this field, but it may choose a node
                                                  that violates one or more of the expressions.
                                                  The node that is most preferred is the
                                                  one with the greatest sum of weights,
                                                  i.e. for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling anti-affinity
                                                  expressions, etc.), compute a sum by
                                                  iterating through the elements of this
                                                  field and adding "weight" to the sum
                                                  if the node has pods which matches the
                                                  corresponding podAffinityTerm; the node(s)
                                                  with the highest sum are the most preferred.
                                                items:
                                                  description: The weights of all of the
                                                    matched WeightedPodAffinityTerm fields
                                                    are added per-node to find the most
                                                    preferred node(s)
                                                  properties:
                                                    podAffinityTerm:
                                                      description: Required. A pod affinity
                                                        term, associated with the corresponding
                                                        weight.
                                                      properties:
                                                        labelSelector:
                                                          description: A label query over
                                                            a set of resources, in this
                                                            case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label selector
                                                                requirements. The requirements
                                                                are ANDed.
                                                              items:
                                                                description: A label selector
                                                                  requirement is a selector
                                                                  that contains values,
                                                                  a key, and an operator
                                                                  that relates the key
                                                                  and values.
                                                                properties:
                                                                  key:
                                                                    description: key is
                                                                      the label key that
                                                                      the selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a key's
                                                                      relationship to
                                                                      a set of values.
                                                                      Valid operators
                                                                      are In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array of string
                                                                      values. If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or DoesNotExist,
                                                                      the values array
                                                                      must be empty. This
                                                                      array is replaced
                                                                      during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels map
                                                                is equivalent to an element
                                                                of matchExpressions, whose
                                                                key field is "key", the
                                                                operator is "In", and
                                                                the values array contains
                                                                only "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces specifies
                                                            which namespaces the labelSelector
                                                            applies to (matches against);
                                                            null or empty list means "this
                                                            pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity) or
                                                            not co-located (anti-affinity)
                                                            with the pods matching the
                                                            labelSelector in the specified
                                                            namespaces, where co-located
                                                            is defined as running on a
                                                            node whose value of the label
                                                            with key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods is
                                                            running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    weight:
                                                      description: weight associated with
                                                        matching the corresponding podAffinityTerm,
                                                        in the range 1-100.
                                                      format: int32
                                                      type: integer
                                                  required:
                                                  - podAffinityTerm
                                                  - weight
                                                  type: object
                                                type: array
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: If the anti-affinity requirements
                                                  specified by this field are not met
                                                  at scheduling time, the pod will not
                                                  be scheduled onto the node. If the anti-affinity
                                                  requirements specified by this field
                                                  cease to be met at some point during
                                                  pod execution (e.g. due to a pod label
                                                  update), the system may or may not try
                                                  to eventually evict the pod from its
                                                  node. When there are multiple elements,
                                                  the lists of nodes corresponding to
                                                  each podAffinityTerm are intersected,
                                                  i.e. all terms must be satisfied.
                                                items:
                                                  description: Defines a set of pods (namely
                                                    those matching the labelSelector relative
                                                    to the given namespace(s)) that this
                                                    pod should be co-located (affinity)
                                                    or not co-located (anti-affinity)
                                                    with, where co-located is defined
                                                    as running on a node whose value of
                                                    the label with key <topologyKey> matches
                                                    that of any node on which a pod of
                                                    the set of pods is running
                                                  properties:
                                                    labelSelector:
                                                      description: A label query over
                                                        a set of resources, in this case
                                                        pods.
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the
                                                                  label key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists and
                                                                  DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values is
                                                                  an array of string values.
                                                                  If the operator is In
                                                                  or NotIn, the values
                                                                  array must be non-empty.
                                                                  If the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. This array is
                                                                  replaced during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels is
                                                            a map of {key,value} pairs.
                                                            A single {key,value} in the
                                                            matchLabels map is equivalent
                                                            to an element of matchExpressions,
                                                            whose key field is "key",
                                                            the operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                      type: object
                                                    namespaces:
                                                      description: namespaces specifies
                                                        which namespaces the labelSelector
                                                        applies to (matches against);
                                                        null or empty list means "this
                                                        pod's namespace"
                                                      items:
                                                        type: string
                                                      type: array
                                                    topologyKey:
                                                      description: This pod should be
                                                        co-located (affinity) or not co-located
                                                        (anti-affinity) with the pods
                                                        matching the labelSelector in
                                                        the specified namespaces, where
                                                        co-located is defined as running
                                                        on a node whose value of the label
                                                        with key topologyKey matches that
                                                        of any node on which any of the
                                                        selected pods is running. Empty
                                                        topologyKey is not allowed.
                                                      type: string
                                                  required:
                                                  - topologyKey
                                                  type: object
                                                type: array
                                            type: object
                                        type: object
                                      nodeSelector:
                                        additionalProperties:
                                          type: string
                                        description: 'NodeSelector is a selector which
                                          must be true for the pod to fit on a node. Selector
                                          which must match a node''s labels for the pod
                                          to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                        type: object
                                      priorityClassName:
                                        description: If specified, the pod's priorityClassName.
                                        type: string
                                      serviceAccountName:
                                        description: If specified, the pod's service account
                                        type: string
                                      tolerations:
                                        description: If specified, the pod's tolerations.
                                        items:
                                          description: The pod this Toleration is attached
                                            to tolerates any taint that matches the triple
                                            <key,value,effect> using the matching operator
                                            <operator>.
                                          properties:
                                            effect:
                                              description: Effect indicates the taint
                                                effect to match. Empty means match all
                                                taint effects. When specified, allowed
                                                values are NoSchedule, PreferNoSchedule
                                                and NoExecute.
                                              type: string
                                            key:
                                              description: Key is the taint key that the
                                                toleration applies to. Empty means match
                                                all taint keys. If the key is empty, operator
                                                must be Exists; this combination means
                                                to match all values and all keys.
                                              type: string
                                            operator:
                                              description: Operator represents a key's
                                                relationship to the value. Valid operators
                                                are Exists and Equal. Defaults to Equal.
                                                Exists is equivalent to wildcard for value,
                                                so that a pod can tolerate all taints
                                                of a particular category.
                                              type: string
                                            tolerationSeconds:
                                              description: TolerationSeconds represents
                                                the period of time the toleration (which
                                                must be of effect NoExecute, otherwise
                                                this field is ignored) tolerates the taint.
                                                By default, it is not set, which means
                                                tolerate the taint forever (do not evict).
                                                Zero and negative values will be treated
                                                as 0 (evict immediately) by the system.
                                              format: int64
                                              type: integer
                                            value:
                                              description: Value is the taint value the
                                                toleration matches to. If the operator
                                                is Exists, the value should be empty,
                                                otherwise just a regular string.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              serviceType:
                                description: Optional service type for Kubernetes solver
                                  service
                                type: string
                            type: object
                        type: object
                      selector:
                        description: Selector selects a set of DNSNames on the Certificate
                          resource that should be solved using this challenge solver.
                          If not specified, the solver will be treated as the 'default'
                          solver with the lowest priority, i.e. if any other solver has
                          a more specific match, it will be used instead.
                        properties:
                          dnsNames:
                            description: List of DNSNames that this solver will be used
                              to solve. If specified and a match is found, a dnsNames
                              selector will take precedence over a dnsZones selector.
                              If multiple solvers match with the same dnsNames value,
                              the solver with the most matching labels in matchLabels
                              will be selected. If neither has more matches, the solver
                              defined earlier in the list will be selected.
                            items:
                              type: string
                            type: array
                          dnsZones:
                            description: List of DNSZones that this solver will be used
                              to solve. The most specific DNS zone match specified here
                              will take precedence over other DNS zone matches, so a solver
                              specifying sys.example.com will be selected over one specifying
                              example.com for the domain www.sys.example.com. If multiple
                              solvers match with the same dnsZones value, the solver with
                              the most matching labels in matchLabels will be selected.
                              If neither has more matches, the solver defined earlier
                              in the list will be selected.
                            items:
                              type: string
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: A label selector that is used to refine the set
                              of certificate's that this challenge solver will apply to.
                            type: object
                        type: object
                    type: object
                  token:
                    description: The ACME challenge token for this challenge. This is
                      the raw value returned from the ACME server.
                    type: string
                  type:
                    description: The type of ACME challenge this resource represents.
                      One of "HTTP-01" or "DNS-01".
                    enum:
                    - HTTP-01
                    - DNS-01
                    type: string
                  url:
                    description: The URL of the ACME Challenge resource for this challenge.
                      This can be used to lookup details about the status of this challenge.
                    type: string
                  wildcard:
                    description: wildcard will be true if this challenge is for a wildcard
                      identifier, for example '*.example.com'.
                    type: boolean
                required:
                - authorizationURL
                - dnsName
                - issuerRef
                - key
                - solver
                - token
                - type
                - url
                type: object
              status:
                properties:
                  presented:
                    description: presented will be set to true if the challenge values
                      for this challenge are currently 'presented'. This *does not* imply
                      the self check is passing. Only that the values have been 'submitted'
                      for the appropriate challenge mechanism (i.e. the DNS01 TXT record
                      has been presented, or the HTTP01 configuration has been configured).
                    type: boolean
                  processing:
                    description: Used to denote whether this challenge should be processed
                      or not. This field will only be set to true by the 'scheduling'
                      component. It will only be set to false by the 'challenges' controller,
                      after the challenge has reached a final state or timed out. If this
                      field is set to false, the challenge controller will not take any
                      more action.
                    type: boolean
                  reason:
                    description: Contains human readable information on why the Challenge
                      is in the current state.
                    type: string
                  state:
                    description: Contains the current 'state' of the challenge. If not
                      set, the state of the challenge is unknown.
                    enum:
                    - valid
                    - ready
                    - pending
                    - processing
                    - invalid
                    - expired
                    - errored
                    type: string
                type: object
            required:
            - metadata
            - spec
            type: object
        served: true
        storage: false
        subresources:
          status: {}
      - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .spec.dnsName
          name: Domain
          type: string
        - jsonPath: .status.reason
          name: Reason
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when
            this object was created. It is not guaranteed to be set in happens-before
            order across separate operations. Clients may not set this value. It is represented
            in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1
        schema:
          openAPIV3Schema:
            description: Challenge is a type to represent a Challenge request with an
              ACME server
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  authorizationURL:
                    description: The URL to the ACME Authorization resource that this
                      challenge is a part of.
                    type: string
                  dnsName:
                    description: dnsName is the identifier that this challenge is for,
                      e.g. example.com. If the requested DNSName is a 'wildcard', this
                      field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                      it must be `example.com`.
                    type: string
                  issuerRef:
                    description: References a properly configured ACME-type Issuer which
                      should be used to create this Challenge. If the Issuer does not
                      exist, processing will be retried. If the Issuer is not an 'ACME'
                      Issuer, an error will be returned and the Challenge will be marked
                      as failed.
                    properties:
                      group:
                        description: Group of the resource being referred to.
                        type: string
                      kind:
                        description: Kind of the resource being referred to.
                        type: string
                      name:
                        description: Name of the resource being referred to.
                        type: string
                    required:
                    - name
                    type: object
                  key:
                    description: 'The ACME challenge key for this challenge For HTTP01
                      challenges, this is the value that must be responded with to complete
                      the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key
                      from acme server for challenge>`. For DNS01 challenges, this is
                      the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key
                      from acme server for challenge>` text that must be set as the TXT
                      record content.'
                    type: string
                  solver:
                    description: Contains the domain solving configuration that should
                      be used to solve this challenge resource.
                    properties:
                      dns01:
                        description: Configures cert-manager to attempt to complete authorizations
                          by performing the DNS01 challenge flow.
                        properties:
                          acmeDNS:
                            description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                              API to manage DNS01 challenge records.
                            properties:
                              accountSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              host:
                                type: string
                            required:
                            - accountSecretRef
                            - host
                            type: object
                          akamai:
                            description: Use the Akamai DNS zone management API to manage
                              DNS01 challenge records.
                            properties:
                              accessTokenSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              clientSecretSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              clientTokenSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              serviceConsumerDomain:
                                type: string
                            required:
                            - accessTokenSecretRef
                            - clientSecretSecretRef
                            - clientTokenSecretRef
                            - serviceConsumerDomain
                            type: object
                          azureDNS:
                            description: Use the Microsoft Azure DNS API to manage DNS01
                              challenge records.
                            properties:
                              clientID:
                                description: if both this and ClientSecret are left unset
                                  MSI will be used
                                type: string
                              clientSecretSecretRef:
                                description: if both this and ClientID are left unset
                                  MSI will be used
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              environment:
                                enum:
                                - AzurePublicCloud
                                - AzureChinaCloud
                                - AzureGermanCloud
                                - AzureUSGovernmentCloud
                                type: string
                              hostedZoneName:
                                type: string
                              resourceGroupName:
                                type: string
                              subscriptionID:
                                type: string
                              tenantID:
                                description: when specifying ClientID and ClientSecret
                                  then this field is also needed
                                type: string
                            required:
                            - resourceGroupName
                            - subscriptionID
                            type: object
                          cloudDNS:
                            description: Use the Google Cloud DNS API to manage DNS01
                              challenge records.
                            properties:
                              hostedZoneName:
                                description: HostedZoneName is an optional field that
                                  tells cert-manager in which Cloud DNS zone the challenge
                                  record has to be created. If left empty cert-manager
                                  will automatically choose a zone.
                                type: string
                              project:
                                type: string
                              serviceAccountSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - project
                            type: object
                          cloudflare:
                            description: Use the Cloudflare API to manage DNS01 challenge
                              records.
                            properties:
                              apiKeySecretRef:
                                description: 'API key to use to authenticate with Cloudflare.
                                  Note: using an API token to authenticate is now the
                                  recommended method as it allows greater control of permissions.'
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              apiTokenSecretRef:
                                description: API token used to authenticate with Cloudflare.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                              email:
                                description: Email of the account, only required when
                                  using API key based authentication.
                                type: string
                            type: object
                          cnameStrategy:
                            description: CNAMEStrategy configures how the DNS01 provider
                              should handle CNAME records when found in DNS zones.
                            enum:
                            - None
                            - Follow
                            type: string
                          digitalocean:
                            description: Use the DigitalOcean DNS API to manage DNS01
                              challenge records.
                            properties:
                              tokenSecretRef:
                                description: A reference to a specific 'key' within a
                                  Secret resource. In some instances, `key` is a required
                                  field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - tokenSecretRef
                            type: object
                          rfc2136:
                            description: Use RFC2136 ("Dynamic Updates in the Domain Name
                              System") (https://datatracker.ietf.org/doc/rfc2136/) to
                              manage DNS01 challenge records.
                            properties:
                              nameserver:
                                description: The IP address or hostname of an authoritative
                                  DNS server supporting RFC2136 in the form host:port.
                                  If the host is an IPv6 address it must be enclosed in
                                  square brackets (e.g [2001:db8::1]) ; port is optional.
                                  This field is required.
                                type: string
                              tsigAlgorithm:
                                description: 'The TSIG Algorithm configured in the DNS
                                  supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                  and ``tsigKeyName`` are defined. Supported values are
                                  (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                  ``HMACSHA256`` or ``HMACSHA512``.'
                                type: string
                              tsigKeyName:
                                description: The TSIG Key name configured in the DNS.
                                  If ``tsigSecretSecretRef`` is defined, this field is
                                  required.
                                type: string
                              tsigSecretSecretRef:
                                description: The name of the secret containing the TSIG
                                  value. If ``tsigKeyName`` is defined, this field is
                                  required.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - nameserver
                            type: object
                          route53:
                            description: Use the AWS Route53 API to manage DNS01 challenge
                              records.
                            properties:
                              accessKeyID:
                                description: 'The AccessKeyID is used for authentication.
                                  If not set we fall-back to using env vars, shared credentials
                                  file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                type: string
                              hostedZoneID:
                                description: If set, the provider will manage only this
                                  zone in Route53 and will not do an lookup using the
                                  route53:ListHostedZonesByName api call.
                                type: string
                              region:
                                description: Always set the region when using AccessKeyID
                                  and SecretAccessKey
                                type: string
                              role:
                                description: Role is a Role ARN which the Route53 provider
                                  will assume using either the explicit credentials AccessKeyID/SecretAccessKey
                                  or the inferred credentials from environment variables,
                                  shared credentials file or AWS Instance metadata
                                type: string
                              secretAccessKeySecretRef:
                                description: The SecretAccessKey is used for authentication.
                                  If not set we fall-back to using env vars, shared credentials
                                  file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's
                                      `data` field to be used. Some instances of this
                                      field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: 'Name of the resource being referred
                                      to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - region
                            type: object
                          webhook:
                            description: Configure an external webhook based DNS01 challenge
                              solver to manage DNS01 challenge records.
                            properties:
                              config:
                                description: Additional configuration that should be passed
                                  to the webhook apiserver when challenges are processed.
                                  This can contain arbitrary JSON data. Secret values
                                  should not be specified in this stanza. If secret values
                                  are needed (e.g. credentials for a DNS service), you
                                  should use a SecretKeySelector to reference a Secret
                                  resource. For details on the schema of this field, consult
                                  the webhook provider implementation's documentation.
                                x-kubernetes-preserve-unknown-fields: true
                              groupName:
                                description: The API group name that should be used when
                                  POSTing ChallengePayload resources to the webhook apiserver.
                                  This should be the same as the GroupName specified in
                                  the webhook provider implementation.
                                type: string
                              solverName:
                                description: The name of the solver to use, as defined
                                  in the webhook provider implementation. This will typically
                                  be the name of the provider, e.g. 'cloudflare'.
                                type: string
                            required:
                            - groupName
                            - solverName
                            type: object
                        type: object
                      http01:
                        description: Configures cert-manager to attempt to complete authorizations
                          by performing the HTTP01 challenge flow. It is not possible
                          to obtain certificates for wildcard domain names (e.g. `*.example.com`)
                          using the HTTP01 challenge mechanism.
                        properties:
                          ingress:
                            description: The ingress based HTTP01 challenge solver will
                              solve challenges by creating or modifying Ingress resources
                              in order to route requests for '/.well-known/acme-challenge/XYZ'
                              to 'challenge solver' pods that are provisioned by cert-manager
                              for each Challenge to be completed.
                            properties:
                              class:
                                description: The ingress class to use when creating Ingress
                                  resources to solve ACME challenges that use this challenge
                                  solver. Only one of 'class' or 'name' may be specified.
                                type: string
                              ingressTemplate:
                                description: Optional ingress template used to configure
                                  the ACME challenge solver ingress used for HTTP01 challenges
                                properties:
                                  metadata:
                                    description: ObjectMeta overrides for the ingress
                                      used to solve HTTP01 challenges. Only the 'labels'
                                      and 'annotations' fields may be set. If labels or
                                      annotations overlap with in-built values, the values
                                      here will override the in-built values.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: Annotations that should be added
                                          to the created ACME HTTP01 solver ingress.
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: Labels that should be added to the
                                          created ACME HTTP01 solver ingress.
                                        type: object
                                    type: object
                                type: object
                              name:
                                description: The name of the ingress resource that should
                                  have ACME challenge solving routes inserted into it
                                  in order to solve HTTP01 challenges. This is typically
                                  used in conjunction with ingress controllers like ingress-gce,
                                  which maintains a 1:1 mapping between external IPs and
                                  ingress resources.
                                type: string
                              podTemplate:
                                description: Optional pod template used to configure the
                                  ACME challenge solver pods used for HTTP01 challenges
                                properties:
                                  metadata:
                                    description: ObjectMeta overrides for the pod used
                                      to solve HTTP01 challenges. Only the 'labels' and
                                      'annotations' fields may be set. If labels or annotations
                                      overlap with in-built values, the values here will
                                      override the in-built values.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: Annotations that should be added
                                          to the create ACME HTTP01 solver pods.
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: Labels that should be added to the
                                          created ACME HTTP01 solver pods.
                                        type: object
                                    type: object
                                  spec:
                                    description: PodSpec defines overrides for the HTTP01
                                      challenge solver pod. Only the 'priorityClassName',
                                      'nodeSelector', 'affinity', 'serviceAccountName'
                                      and 'tolerations' fields are supported currently.
                                      All other fields will be ignored.
                                    properties:
                                      affinity:
                                        description: If specified, the pod's scheduling
                                          constraints
                                        properties:
                                          nodeAffinity:
                                            description: Describes node affinity scheduling
                                              rules for the pod.
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the affinity expressions specified by
                                                  this field, but it may choose a node
                                                  that violates one or more of the expressions.
                                                  The node that is most preferred is the
                                                  one with the greatest sum of weights,
                                                  i.e. for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling affinity
                                                  expressions, etc.), compute a sum by
                                                  iterating through the elements of this
                                                  field and adding "weight" to the sum
                                                  if the node matches the corresponding
                                                  matchExpressions; the node(s) with the
                                                  highest sum are the most preferred.
                                                items:
                                                  description: An empty preferred scheduling
                                                    term matches all objects with implicit
                                                    weight 0 (i.e. it's a no-op). A null
                                                    preferred scheduling term matches
                                                    no objects (i.e. is also a no-op).
                                                  properties:
                                                    preference:
                                                      description: A node selector term,
                                                        associated with the corresponding
                                                        weight.
                                                      properties:
                                                        matchExpressions:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            labels.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchFields:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            fields.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                      type: object
                                                    weight:
                                                      description: Weight associated with
                                                        matching the corresponding nodeSelectorTerm,
                                                        in the range 1-100.
                                                      format: int32
                                                      type: integer
                                                  required:
                                                  - preference
                                                  - weight
                                                  type: object
                                                type: array
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: If the affinity requirements
                                                  specified by this field are not met
                                                  at scheduling time, the pod will not
                                                  be scheduled onto the node. If the affinity
                                                  requirements specified by this field
                                                  cease to be met at some point during
                                                  pod execution (e.g. due to an update),
                                                  the system may or may not try to eventually
                                                  evict the pod from its node.
                                                properties:
                                                  nodeSelectorTerms:
                                                    description: Required. A list of node
                                                      selector terms. The terms are ORed.
                                                    items:
                                                      description: A null or empty node
                                                        selector term matches no objects.
                                                        The requirements of them are ANDed.
                                                        The TopologySelectorTerm type
                                                        implements a subset of the NodeSelectorTerm.
                                                      properties:
                                                        matchExpressions:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            labels.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchFields:
                                                          description: A list of node
                                                            selector requirements by node's
                                                            fields.
                                                          items:
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists, DoesNotExist.
                                                                  Gt, and Lt.
                                                                type: string
                                                              values:
                                                                description: An array
                                                                  of string values. If
                                                                  the operator is In or
                                                                  NotIn, the values array
                                                                  must be non-empty. If
                                                                  the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. If the operator
                                                                  is Gt or Lt, the values
                                                                  array must have a single
                                                                  element, which will
                                                                  be interpreted as an
                                                                  integer. This array
                                                                  is replaced during a
                                                                  strategic merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                      type: object
                                                    type: array
                                                required:
                                                - nodeSelectorTerms
                                                type: object
                                            type: object
                                          podAffinity:
                                            description: Describes pod affinity scheduling
                                              rules (e.g. co-locate this pod in the same
                                              node, zone, etc. as some other pod(s)).
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the affinity expressions specified by
                                                  this field, but it may choose a node
                                                  that violates one or more of the expressions.
                                                  The node that is most preferred is the
                                                  one with the greatest sum of weights,
                                                  i.e. for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling affinity
                                                  expressions, etc.), compute a sum by
                                                  iterating through the elements of this
                                                  field and adding "weight" to the sum
                                                  if the node has pods which matches the
                                                  corresponding podAffinityTerm; the node(s)
                                                  with the highest sum are the most preferred.
                                                items:
                                                  description: The weights of all of the
                                                    matched WeightedPodAffinityTerm fields
                                                    are added per-node to find the most
                                                    preferred node(s)
                                                  properties:
                                                    podAffinityTerm:
                                                      description: Required. A pod affinity
                                                        term, associated with the corresponding
                                                        weight.
                                                      properties:
                                                        labelSelector:
                                                          description: A label query over
                                                            a set of resources, in this
                                                            case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label selector
                                                                requirements. The requirements
                                                                are ANDed.
                                                              items:
                                                                description: A label selector
                                                                  requirement is a selector
                                                                  that contains values,
                                                                  a key, and an operator
                                                                  that relates the key
                                                                  and values.
                                                                properties:
                                                                  key:
                                                                    description: key is
                                                                      the label key that
                                                                      the selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a key's
                                                                      relationship to
                                                                      a set of values.
                                                                      Valid operators
                                                                      are In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array of string
                                                                      values. If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or DoesNotExist,
                                                                      the values array
                                                                      must be empty. This
                                                                      array is replaced
                                                                      during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels map
                                                                is equivalent to an element
                                                                of matchExpressions, whose
                                                                key field is "key", the
                                                                operator is "In", and
                                                                the values array contains
                                                                only "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces specifies
                                                            which namespaces the labelSelector
                                                            applies to (matches against);
                                                            null or empty list means "this
                                                            pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity) or
                                                            not co-located (anti-affinity)
                                                            with the pods matching the
                                                            labelSelector in the specified
                                                            namespaces, where co-located
                                                            is defined as running on a
                                                            node whose value of the label
                                                            with key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods is
                                                            running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    weight:
                                                      description: weight associated with
                                                        matching the corresponding podAffinityTerm,
                                                        in the range 1-100.
                                                      format: int32
                                                      type: integer
                                                  required:
                                                  - podAffinityTerm
                                                  - weight
                                                  type: object
                                                type: array
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: If the affinity requirements
                                                  specified by this field are not met
                                                  at scheduling time, the pod will not
                                                  be scheduled onto the node. If the affinity
                                                  requirements specified by this field
                                                  cease to be met at some point during
                                                  pod execution (e.g. due to a pod label
                                                  update), the system may or may not try
                                                  to eventually evict the pod from its
                                                  node. When there are multiple elements,
                                                  the lists of nodes corresponding to
                                                  each podAffinityTerm are intersected,
                                                  i.e. all terms must be satisfied.
                                                items:
                                                  description: Defines a set of pods (namely
                                                    those matching the labelSelector relative
                                                    to the given namespace(s)) that this
                                                    pod should be co-located (affinity)
                                                    or not co-located (anti-affinity)
                                                    with, where co-located is defined
                                                    as running on a node whose value of
                                                    the label with key <topologyKey> matches
                                                    that of any node on which a pod of
                                                    the set of pods is running
                                                  properties:
                                                    labelSelector:
                                                      description: A label query over
                                                        a set of resources, in this case
                                                        pods.
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the
                                                                  label key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists and
                                                                  DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values is
                                                                  an array of string values.
                                                                  If the operator is In
                                                                  or NotIn, the values
                                                                  array must be non-empty.
                                                                  If the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. This array is
                                                                  replaced during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels is
                                                            a map of {key,value} pairs.
                                                            A single {key,value} in the
                                                            matchLabels map is equivalent
                                                            to an element of matchExpressions,
                                                            whose key field is "key",
                                                            the operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                      type: object
                                                    namespaces:
                                                      description: namespaces specifies
                                                        which namespaces the labelSelector
                                                        applies to (matches against);
                                                        null or empty list means "this
                                                        pod's namespace"
                                                      items:
                                                        type: string
                                                      type: array
                                                    topologyKey:
                                                      description: This pod should be
                                                        co-located (affinity) or not co-located
                                                        (anti-affinity) with the pods
                                                        matching the labelSelector in
                                                        the specified namespaces, where
                                                        co-located is defined as running
                                                        on a node whose value of the label
                                                        with key topologyKey matches that
                                                        of any node on which any of the
                                                        selected pods is running. Empty
                                                        topologyKey is not allowed.
                                                      type: string
                                                  required:
                                                  - topologyKey
                                                  type: object
                                                type: array
                                            type: object
                                          podAntiAffinity:
                                            description: Describes pod anti-affinity scheduling
                                              rules (e.g. avoid putting this pod in the
                                              same node, zone, etc. as some other pod(s)).
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the anti-affinity expressions specified
                                                  by this field, but it may choose a node
                                                  that violates one or more of the expressions.
                                                  The node that is most preferred is the
                                                  one with the greatest sum of weights,
                                                  i.e. for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling anti-affinity
                                                  expressions, etc.), compute a sum by
                                                  iterating through the elements of this
                                                  field and adding "weight" to the sum
                                                  if the node has pods which matches the
                                                  corresponding podAffinityTerm; the node(s)
                                                  with the highest sum are the most preferred.
                                                items:
                                                  description: The weights of all of the
                                                    matched WeightedPodAffinityTerm fields
                                                    are added per-node to find the most
                                                    preferred node(s)
                                                  properties:
                                                    podAffinityTerm:
                                                      description: Required. A pod affinity
                                                        term, associated with the corresponding
                                                        weight.
                                                      properties:
                                                        labelSelector:
                                                          description: A label query over
                                                            a set of resources, in this
                                                            case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label selector
                                                                requirements. The requirements
                                                                are ANDed.
                                                              items:
                                                                description: A label selector
                                                                  requirement is a selector
                                                                  that contains values,
                                                                  a key, and an operator
                                                                  that relates the key
                                                                  and values.
                                                                properties:
                                                                  key:
                                                                    description: key is
                                                                      the label key that
                                                                      the selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a key's
                                                                      relationship to
                                                                      a set of values.
                                                                      Valid operators
                                                                      are In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array of string
                                                                      values. If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or DoesNotExist,
                                                                      the values array
                                                                      must be empty. This
                                                                      array is replaced
                                                                      during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels map
                                                                is equivalent to an element
                                                                of matchExpressions, whose
                                                                key field is "key", the
                                                                operator is "In", and
                                                                the values array contains
                                                                only "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces specifies
                                                            which namespaces the labelSelector
                                                            applies to (matches against);
                                                            null or empty list means "this
                                                            pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity) or
                                                            not co-located (anti-affinity)
                                                            with the pods matching the
                                                            labelSelector in the specified
                                                            namespaces, where co-located
                                                            is defined as running on a
                                                            node whose value of the label
                                                            with key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods is
                                                            running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    weight:
                                                      description: weight associated with
                                                        matching the corresponding podAffinityTerm,
                                                        in the range 1-100.
                                                      format: int32
                                                      type: integer
                                                  required:
                                                  - podAffinityTerm
                                                  - weight
                                                  type: object
                                                type: array
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                description: If the anti-affinity requirements
                                                  specified by this field are not met
                                                  at scheduling time, the pod will not
                                                  be scheduled onto the node. If the anti-affinity
                                                  requirements specified by this field
                                                  cease to be met at some point during
                                                  pod execution (e.g. due to a pod label
                                                  update), the system may or may not try
                                                  to eventually evict the pod from its
                                                  node. When there are multiple elements,
                                                  the lists of nodes corresponding to
                                                  each podAffinityTerm are intersected,
                                                  i.e. all terms must be satisfied.
                                                items:
                                                  description: Defines a set of pods (namely
                                                    those matching the labelSelector relative
                                                    to the given namespace(s)) that this
                                                    pod should be co-located (affinity)
                                                    or not co-located (anti-affinity)
                                                    with, where co-located is defined
                                                    as running on a node whose value of
                                                    the label with key <topologyKey> matches
                                                    that of any node on which a pod of
                                                    the set of pods is running
                                                  properties:
                                                    labelSelector:
                                                      description: A label query over
                                                        a set of resources, in this case
                                                        pods.
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values, a
                                                              key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the
                                                                  label key that the selector
                                                                  applies to.
                                                                type: string
                                                              operator:
                                                                description: operator
                                                                  represents a key's relationship
                                                                  to a set of values.
                                                                  Valid operators are
                                                                  In, NotIn, Exists and
                                                                  DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: values is
                                                                  an array of string values.
                                                                  If the operator is In
                                                                  or NotIn, the values
                                                                  array must be non-empty.
                                                                  If the operator is Exists
                                                                  or DoesNotExist, the
                                                                  values array must be
                                                                  empty. This array is
                                                                  replaced during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                            required:
                                                            - key
                                                            - operator
                                                            type: object
                                                          type: array
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels is
                                                            a map of {key,value} pairs.
                                                            A single {key,value} in the
                                                            matchLabels map is equivalent
                                                            to an element of matchExpressions,
                                                            whose key field is "key",
                                                            the operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                          type: object
                                                      type: object
                                                    namespaces:
                                                      description: namespaces specifies
                                                        which namespaces the labelSelector
                                                        applies to (matches against);
                                                        null or empty list means "this
                                                        pod's namespace"
                                                      items:
                                                        type: string
                                                      type: array
                                                    topologyKey:
                                                      description: This pod should be
                                                        co-located (affinity) or not co-located
                                                        (anti-affinity) with the pods
                                                        matching the labelSelector in
                                                        the specified namespaces, where
                                                        co-located is defined as running
                                                        on a node whose value of the label
                                                        with key topologyKey matches that
                                                        of any node on which any of the
                                                        selected pods is running. Empty
                                                        topologyKey is not allowed.
                                                      type: string
                                                  required:
                                                  - topologyKey
                                                  type: object
                                                type: array
                                            type: object
                                        type: object
                                      nodeSelector:
                                        additionalProperties:
                                          type: string
                                        description: 'NodeSelector is a selector which
                                          must be true for the pod to fit on a node. Selector
                                          which must match a node''s labels for the pod
                                          to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                        type: object
                                      priorityClassName:
                                        description: If specified, the pod's priorityClassName.
                                        type: string
                                      serviceAccountName:
                                        description: If specified, the pod's service account
                                        type: string
                                      tolerations:
                                        description: If specified, the pod's tolerations.
                                        items:
                                          description: The pod this Toleration is attached
                                            to tolerates any taint that matches the triple
                                            <key,value,effect> using the matching operator
                                            <operator>.
                                          properties:
                                            effect:
                                              description: Effect indicates the taint
                                                effect to match. Empty means match all
                                                taint effects. When specified, allowed
                                                values are NoSchedule, PreferNoSchedule
                                                and NoExecute.
                                              type: string
                                            key:
                                              description: Key is the taint key that the
                                                toleration applies to. Empty means match
                                                all taint keys. If the key is empty, operator
                                                must be Exists; this combination means
                                                to match all values and all keys.
                                              type: string
                                            operator:
                                              description: Operator represents a key's
                                                relationship to the value. Valid operators
                                                are Exists and Equal. Defaults to Equal.
                                                Exists is equivalent to wildcard for value,
                                                so that a pod can tolerate all taints
                                                of a particular category.
                                              type: string
                                            tolerationSeconds:
                                              description: TolerationSeconds represents
                                                the period of time the toleration (which
                                                must be of effect NoExecute, otherwise
                                                this field is ignored) tolerates the taint.
                                                By default, it is not set, which means
                                                tolerate the taint forever (do not evict).
                                                Zero and negative values will be treated
                                                as 0 (evict immediately) by the system.
                                              format: int64
                                              type: integer
                                            value:
                                              description: Value is the taint value the
                                                toleration matches to. If the operator
                                                is Exists, the value should be empty,
                                                otherwise just a regular string.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              serviceType:
                                description: Optional service type for Kubernetes solver
                                  service
                                type: string
                            type: object
                        type: object
                      selector:
                        description: Selector selects a set of DNSNames on the Certificate
                          resource that should be solved using this challenge solver.
                          If not specified, the solver will be treated as the 'default'
                          solver with the lowest priority, i.e. if any other solver has
                          a more specific match, it will be used instead.
                        properties:
                          dnsNames:
                            description: List of DNSNames that this solver will be used
                              to solve. If specified and a match is found, a dnsNames
                              selector will take precedence over a dnsZones selector.
                              If multiple solvers match with the same dnsNames value,
                              the solver with the most matching labels in matchLabels
                              will be selected. If neither has more matches, the solver
                              defined earlier in the list will be selected.
                            items:
                              type: string
                            type: array
                          dnsZones:
                            description: List of DNSZones that this solver will be used
                              to solve. The most specific DNS zone match specified here
                              will take precedence over other DNS zone matches, so a solver
                              specifying sys.example.com will be selected over one specifying
                              example.com for the domain www.sys.example.com. If multiple
                              solvers match with the same dnsZones value, the solver with
                              the most matching labels in matchLabels will be selected.
                              If neither has more matches, the solver defined earlier
                              in the list will be selected.
                            items:
                              type: string
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: A label selector that is used to refine the set
                              of certificate's that this challenge solver will apply to.
                            type: object
                        type: object
                    type: object
                  token:
                    description: The ACME challenge token for this challenge. This is
                      the raw value returned from the ACME server.
                    type: string
                  type:
                    description: The type of ACME challenge this resource represents.
                      One of "HTTP-01" or "DNS-01".
                    enum:
                    - HTTP-01
                    - DNS-01
                    type: string
                  url:
                    description: The URL of the ACME Challenge resource for this challenge.
                      This can be used to lookup details about the status of this challenge.
                    type: string
                  wildcard:
                    description: wildcard will be true if this challenge is for a wildcard
                      identifier, for example '*.example.com'.
                    type: boolean
                required:
                - authorizationURL
                - dnsName
                - issuerRef
                - key
                - solver
                - token
                - type
                - url
                type: object
              status:
                properties:
                  presented:
                    description: presented will be set to true if the challenge values
                      for this challenge are currently 'presented'. This *does not* imply
                      the self check is passing. Only that the values have been 'submitted'
                      for the appropriate challenge mechanism (i.e. the DNS01 TXT record
                      has been presented, or the HTTP01 configuration has been configured).
                    type: boolean
                  processing:
                    description: Used to denote whether this challenge should be processed
                      or not. This field will only be set to true by the 'scheduling'
                      component. It will only be set to false by the 'challenges' controller,
                      after the challenge has reached a final state or timed out. If this
                      field is set to false, the challenge controller will not take any
                      more action.
                    type: boolean
                  reason:
                    description: Contains human readable information on why the Challenge
                      is in the current state.
                    type: string
                  state:
                    description: Contains the current 'state' of the challenge. If not
                      set, the state of the challenge is unknown.
                    enum:
                    - valid
                    - ready
                    - pending
                    - processing
                    - invalid
                    - expired
                    - errored
                    type: string
                type: object
            required:
            - metadata
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: fh5JdorJln3r3io
  name: cert-manager-setup-clusterissuers-crd
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
data:
  crds.yaml: "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    cert-manager.io/inject-ca-from-secret: default/release-name-webhook-ca\n    helm.sh/hook: crd-install\n    helm.sh/hook-delete-policy: before-hook-creation    \n  labels:\n    app: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/name: cert-manager\n  name: clusterissuers.cert-manager.io\nspec:\n  conversion:\n    strategy: Webhook\n    webhook:\n      clientConfig:\n        service:\n          name: release-name-webhook\n          namespace: default\n          path: /convert\n      conversionReviewVersions:\n      - v1\n      - v1beta1\n  group: cert-manager.io\n  names:\n    kind: ClusterIssuer\n    listKind: ClusterIssuerList\n    plural: clusterissuers\n    singular: clusterissuer\n  scope: Cluster\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].status\n      name: Ready\n      type: string\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].message\n      name: Status\n      priority: 1\n      type: string\n    - description: CreationTimestamp is a timestamp representing the server time when\n        this object was created. It is not guaranteed to be set in happens-before\n        order across separate operations. Clients may not set this value. It is represented\n        in RFC3339 form and is in UTC.\n      jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1alpha2\n    schema:\n      openAPIV3Schema:\n        description: A ClusterIssuer represents a certificate issuing authority which\n          can be referenced as part of `issuerRef` fields. It is similar to an Issuer,\n          however it is cluster-scoped and therefore can be referenced by resources\n          that exist in *any* namespace, not just the same namespace as the referent.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: Desired state of the ClusterIssuer resource.\n            properties:\n              acme:\n                description: ACME configures this issuer to communicate with a RFC8555\n                  (ACME) server to obtain signed x509 certificates.\n                properties:\n                  disableAccountKeyGeneration:\n                    description: Enables or disables generating a new ACME account\n                      key. If true, the Issuer resource will *not* request a new account\n                      but will expect the account key to be supplied via an existing\n                      secret. If false, the cert-manager system will generate a new\n                      ACME account key for the Issuer. Defaults to false.\n                    type: boolean\n                  email:\n                    description: Email is the email address to be associated with\n                      the ACME account. This field is optional, but it is strongly\n                      recommended to be set. It will be used to contact you in case\n                      of issues with your account or certificates, including expiry\n                      notification emails. This field may be updated after the account\n                      is initially registered.\n                    type: string\n                  externalAccountBinding:\n                    description: ExternalAccountBinding is a reference to a CA external\n                      account of the ACME server. If set, upon registration cert-manager\n                      will attempt to associate the given external account credentials\n                      with the registered ACME account.\n                    properties:\n                      keyAlgorithm:\n                        description: keyAlgorithm is the MAC key algorithm that the\n                          key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".\n                        enum:\n                        - HS256\n                        - HS384\n                        - HS512\n                        type: string\n                      keyID:\n                        description: keyID is the ID of the CA key that the External\n                          Account is bound to.\n                        type: string\n                      keySecretRef:\n                        description: keySecretRef is a Secret Key Selector referencing\n                          a data item in a Kubernetes Secret which holds the symmetric\n                          MAC key of the External Account Binding. The `key` is the\n                          index string that is paired with the key data in the Secret\n                          and should not be confused with the key data itself, or\n                          indeed with the External Account Binding keyID above. The\n                          secret key stored in the Secret **must** be un-padded, base64\n                          URL encoded data.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    required:\n                    - keyAlgorithm\n                    - keyID\n                    - keySecretRef\n                    type: object\n                  preferredChain:\n                    description: 'PreferredChain is the chain to use if the ACME server\n                      outputs multiple. PreferredChain is no guarantee that this one\n                      gets delivered by the ACME endpoint. For example, for Let''s\n                      Encrypt''s DST crosssign you would use: \"DST Root CA X3\" or\n                      \"ISRG Root X1\" for the newer Let''s Encrypt root CA. This value\n                      picks the first certificate bundle in the ACME alternative chains\n                      that has a certificate with this value as its issuer''s CN'\n                    maxLength: 64\n                    type: string\n                  privateKeySecretRef:\n                    description: PrivateKey is the name of a Kubernetes Secret resource\n                      that will be used to store the automatically generated ACME\n                      account private key. Optionally, a `key` may be specified to\n                      select a specific entry within the named Secret resource. If\n                      `key` is not specified, a default of `tls.key` will be used.\n                    properties:\n                      key:\n                        description: The key of the entry in the Secret resource's\n                          `data` field to be used. Some instances of this field may\n                          be defaulted, in others it may be required.\n                        type: string\n                      name:\n                        description: 'Name of the resource being referred to. More\n                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                        type: string\n                    required:\n                    - name\n                    type: object\n                  server:\n                    description: 'Server is the URL used to access the ACME server''s\n                      ''directory'' endpoint. For example, for Let''s Encrypt''s staging\n                      endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\".\n                      Only ACME v2 endpoints (i.e. RFC 8555) are supported.'\n                    type: string\n                  skipTLSVerify:\n                    description: Enables or disables validation of the ACME server\n                      TLS certificate. If true, requests to the ACME server will not\n                      have their TLS certificate validated (i.e. insecure connections\n                      will be allowed). Only enable this option in development environments.\n                      The cert-manager system installed roots will be used to verify\n                      connections to the ACME server if this is false. Defaults to\n                      false.\n                    type: boolean\n                  solvers:\n                    description: 'Solvers is a list of challenge solvers that will\n                      be used to solve ACME challenges for the matching domains. Solver\n                      configurations must be provided in order to obtain certificates\n                      from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/'\n                    items:\n                      description: Configures an issuer to solve challenges using\n                        the specified options. Only one of HTTP01 or DNS01 may be\n                        provided.\n                      properties:\n                        dns01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the DNS01 challenge flow.\n                          properties:\n                            acmedns:\n                              description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)\n                                API to manage DNS01 challenge records.\n                              properties:\n                                accountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                host:\n                                  type: string\n                              required:\n                              - accountSecretRef\n                              - host\n                              type: object\n                            akamai:\n                              description: Use the Akamai DNS zone management API\n                                to manage DNS01 challenge records.\n                              properties:\n                                accessTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientSecretSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                serviceConsumerDomain:\n                                  type: string\n                              required:\n                              - accessTokenSecretRef\n                              - clientSecretSecretRef\n                              - clientTokenSecretRef\n                              - serviceConsumerDomain\n                              type: object\n                            azuredns:\n                              description: Use the Microsoft Azure DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                clientID:\n                                  description: if both this and ClientSecret are left\n                                    unset MSI will be used\n                                  type: string\n                                clientSecretSecretRef:\n                                  description: if both this and ClientID are left\n                                    unset MSI will be used\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                environment:\n                                  enum:\n                                  - AzurePublicCloud\n                                  - AzureChinaCloud\n                                  - AzureGermanCloud\n                                  - AzureUSGovernmentCloud\n                                  type: string\n                                hostedZoneName:\n                                  type: string\n                                resourceGroupName:\n                                  type: string\n                                subscriptionID:\n                                  type: string\n                                tenantID:\n                                  description: when specifying ClientID and ClientSecret\n                                    then this field is also needed\n                                  type: string\n                              required:\n                              - resourceGroupName\n                              - subscriptionID\n                              type: object\n                            clouddns:\n                              description: Use the Google Cloud DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                hostedZoneName:\n                                  description: HostedZoneName is an optional field\n                                    that tells cert-manager in which Cloud DNS zone\n                                    the challenge record has to be created. If left\n                                    empty cert-manager will automatically choose a\n                                    zone.\n                                  type: string\n                                project:\n                                  type: string\n                                serviceAccountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - project\n                              type: object\n                            cloudflare:\n                              description: Use the Cloudflare API to manage DNS01\n                                challenge records.\n                              properties:\n                                apiKeySecretRef:\n                                  description: 'API key to use to authenticate with\n                                    Cloudflare. Note: using an API token to authenticate\n                                    is now the recommended method as it allows greater\n                                    control of permissions.'\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                apiTokenSecretRef:\n                                  description: API token used to authenticate with\n                                    Cloudflare.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                email:\n                                  description: Email of the account, only required\n                                    when using API key based authentication.\n                                  type: string\n                              type: object\n                            cnameStrategy:\n                              description: CNAMEStrategy configures how the DNS01\n                                provider should handle CNAME records when found in\n                                DNS zones.\n                              enum:\n                              - None\n                              - Follow\n                              type: string\n                            digitalocean:\n                              description: Use the DigitalOcean DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                tokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - tokenSecretRef\n                              type: object\n                            rfc2136:\n                              description: Use RFC2136 (\"Dynamic Updates in the Domain\n                                Name System\") (https://datatracker.ietf.org/doc/rfc2136/)\n                                to manage DNS01 challenge records.\n                              properties:\n                                nameserver:\n                                  description: The IP address or hostname of an authoritative\n                                    DNS server supporting RFC2136 in the form host:port.\n                                    If the host is an IPv6 address it must be enclosed\n                                    in square brackets (e.g [2001:db8::1]) ; port\n                                    is optional. This field is required.\n                                  type: string\n                                tsigAlgorithm:\n                                  description: 'The TSIG Algorithm configured in the\n                                    DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``\n                                    and ``tsigKeyName`` are defined. Supported values\n                                    are (case-insensitive): ``HMACMD5`` (default),\n                                    ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'\n                                  type: string\n                                tsigKeyName:\n                                  description: The TSIG Key name configured in the\n                                    DNS. If ``tsigSecretSecretRef`` is defined, this\n                                    field is required.\n                                  type: string\n                                tsigSecretSecretRef:\n                                  description: The name of the secret containing the\n                                    TSIG value. If ``tsigKeyName`` is defined, this\n                                    field is required.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - nameserver\n                              type: object\n                            route53:\n                              description: Use the AWS Route53 API to manage DNS01\n                                challenge records.\n                              properties:\n                                accessKeyID:\n                                  description: 'The AccessKeyID is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata see:\n                                    https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'\n                                  type: string\n                                hostedZoneID:\n                                  description: If set, the provider will manage only\n                                    this zone in Route53 and will not do an lookup\n                                    using the route53:ListHostedZonesByName api call.\n                                  type: string\n                                region:\n                                  description: Always set the region when using AccessKeyID\n                                    and SecretAccessKey\n                                  type: string\n                                role:\n                                  description: Role is a Role ARN which the Route53\n                                    provider will assume using either the explicit\n                                    credentials AccessKeyID/SecretAccessKey or the\n                                    inferred credentials from environment variables,\n                                    shared credentials file or AWS Instance metadata\n                                  type: string\n                                secretAccessKeySecretRef:\n                                  description: The SecretAccessKey is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - region\n                              type: object\n                            webhook:\n                              description: Configure an external webhook based DNS01\n                                challenge solver to manage DNS01 challenge records.\n                              properties:\n                                config:\n                                  description: Additional configuration that should\n                                    be passed to the webhook apiserver when challenges\n                                    are processed. This can contain arbitrary JSON\n                                    data. Secret values should not be specified in\n                                    this stanza. If secret values are needed (e.g.\n                                    credentials for a DNS service), you should use\n                                    a SecretKeySelector to reference a Secret resource.\n                                    For details on the schema of this field, consult\n                                    the webhook provider implementation's documentation.\n                                  x-kubernetes-preserve-unknown-fields: true\n                                groupName:\n                                  description: The API group name that should be used\n                                    when POSTing ChallengePayload resources to the\n                                    webhook apiserver. This should be the same as\n                                    the GroupName specified in the webhook provider\n                                    implementation.\n                                  type: string\n                                solverName:\n                                  description: The name of the solver to use, as defined\n                                    in the webhook provider implementation. This will\n                                    typically be the name of the provider, e.g. 'cloudflare'.\n                                  type: string\n                              required:\n                              - groupName\n                              - solverName\n                              type: object\n                          type: object\n                        http01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the HTTP01 challenge flow.\n                            It is not possible to obtain certificates for wildcard\n                            domain names (e.g. `*.example.com`) using the HTTP01 challenge\n                            mechanism.\n                          properties:\n                            ingress:\n                              description: The ingress based HTTP01 challenge solver\n                                will solve challenges by creating or modifying Ingress\n                                resources in order to route requests for '/.well-known/acme-challenge/XYZ'\n                                to 'challenge solver' pods that are provisioned by\n                                cert-manager for each Challenge to be completed.\n                              properties:\n                                class:\n                                  description: The ingress class to use when creating\n                                    Ingress resources to solve ACME challenges that\n                                    use this challenge solver. Only one of 'class'\n                                    or 'name' may be specified.\n                                  type: string\n                                ingressTemplate:\n                                  description: Optional ingress template used to configure\n                                    the ACME challenge solver ingress used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the ingress\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the created ACME HTTP01 solver\n                                            ingress.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver ingress.\n                                          type: object\n                                      type: object\n                                  type: object\n                                name:\n                                  description: The name of the ingress resource that\n                                    should have ACME challenge solving routes inserted\n                                    into it in order to solve HTTP01 challenges. This\n                                    is typically used in conjunction with ingress\n                                    controllers like ingress-gce, which maintains\n                                    a 1:1 mapping between external IPs and ingress\n                                    resources.\n                                  type: string\n                                podTemplate:\n                                  description: Optional pod template used to configure\n                                    the ACME challenge solver pods used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the pod\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the create ACME HTTP01 solver\n                                            pods.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver pods.\n                                          type: object\n                                      type: object\n                                    spec:\n                                      description: PodSpec defines overrides for the\n                                        HTTP01 challenge solver pod. Only the 'priorityClassName',\n                                        'nodeSelector', 'affinity', 'serviceAccountName'\n                                        and 'tolerations' fields are supported currently.\n                                        All other fields will be ignored.\n                                      properties:\n                                        affinity:\n                                          description: If specified, the pod's scheduling\n                                            constraints\n                                          properties:\n                                            nodeAffinity:\n                                              description: Describes node affinity\n                                                scheduling rules for the pod.\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node matches\n                                                    the corresponding matchExpressions;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: An empty preferred\n                                                      scheduling term matches all\n                                                      objects with implicit weight\n                                                      0 (i.e. it's a no-op). A null\n                                                      preferred scheduling term matches\n                                                      no objects (i.e. is also a no-op).\n                                                    properties:\n                                                      preference:\n                                                        description: A node selector\n                                                          term, associated with the\n                                                          corresponding weight.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      weight:\n                                                        description: Weight associated\n                                                          with matching the corresponding\n                                                          nodeSelectorTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - preference\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to an\n                                                    update), the system may or may\n                                                    not try to eventually evict the\n                                                    pod from its node.\n                                                  properties:\n                                                    nodeSelectorTerms:\n                                                      description: Required. A list\n                                                        of node selector terms. The\n                                                        terms are ORed.\n                                                      items:\n                                                        description: A null or empty\n                                                          node selector term matches\n                                                          no objects. The requirements\n                                                          of them are ANDed. The TopologySelectorTerm\n                                                          type implements a subset\n                                                          of the NodeSelectorTerm.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      type: array\n                                                  required:\n                                                  - nodeSelectorTerms\n                                                  type: object\n                                              type: object\n                                            podAffinity:\n                                              description: Describes pod affinity\n                                                scheduling rules (e.g. co-locate this\n                                                pod in the same node, zone, etc. as\n                                                some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node has pods\n                                                    which matches the corresponding\n                                                    podAffinityTerm; the node(s) with\n                                                    the highest sum are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to a pod\n                                                    label update), the system may\n                                                    or may not try to eventually evict\n                                                    the pod from its node. When there\n                                                    are multiple elements, the lists\n                                                    of nodes corresponding to each\n                                                    podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                            podAntiAffinity:\n                                              description: Describes pod anti-affinity\n                                                scheduling rules (e.g. avoid putting\n                                                this pod in the same node, zone, etc.\n                                                as some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the anti-affinity\n                                                    expressions specified by this\n                                                    field, but it may choose a node\n                                                    that violates one or more of the\n                                                    expressions. The node that is\n                                                    most preferred is the one with\n                                                    the greatest sum of weights, i.e.\n                                                    for each node that meets all of\n                                                    the scheduling requirements (resource\n                                                    request, requiredDuringScheduling\n                                                    anti-affinity expressions, etc.),\n                                                    compute a sum by iterating through\n                                                    the elements of this field and\n                                                    adding \"weight\" to the sum if\n                                                    the node has pods which matches\n                                                    the corresponding podAffinityTerm;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the anti-affinity\n                                                    requirements specified by this\n                                                    field are not met at scheduling\n                                                    time, the pod will not be scheduled\n                                                    onto the node. If the anti-affinity\n                                                    requirements specified by this\n                                                    field cease to be met at some\n                                                    point during pod execution (e.g.\n                                                    due to a pod label update), the\n                                                    system may or may not try to eventually\n                                                    evict the pod from its node. When\n                                                    there are multiple elements, the\n                                                    lists of nodes corresponding to\n                                                    each podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                          type: object\n                                        nodeSelector:\n                                          additionalProperties:\n                                            type: string\n                                          description: 'NodeSelector is a selector\n                                            which must be true for the pod to fit\n                                            on a node. Selector which must match a\n                                            node''s labels for the pod to be scheduled\n                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'\n                                          type: object\n                                        priorityClassName:\n                                          description: If specified, the pod's priorityClassName.\n                                          type: string\n                                        serviceAccountName:\n                                          description: If specified, the pod's service\n                                            account\n                                          type: string\n                                        tolerations:\n                                          description: If specified, the pod's tolerations.\n                                          items:\n                                            description: The pod this Toleration is\n                                              attached to tolerates any taint that\n                                              matches the triple <key,value,effect>\n                                              using the matching operator <operator>.\n                                            properties:\n                                              effect:\n                                                description: Effect indicates the\n                                                  taint effect to match. Empty means\n                                                  match all taint effects. When specified,\n                                                  allowed values are NoSchedule, PreferNoSchedule\n                                                  and NoExecute.\n                                                type: string\n                                              key:\n                                                description: Key is the taint key\n                                                  that the toleration applies to.\n                                                  Empty means match all taint keys.\n                                                  If the key is empty, operator must\n                                                  be Exists; this combination means\n                                                  to match all values and all keys.\n                                                type: string\n                                              operator:\n                                                description: Operator represents a\n                                                  key's relationship to the value.\n                                                  Valid operators are Exists and Equal.\n                                                  Defaults to Equal. Exists is equivalent\n                                                  to wildcard for value, so that a\n                                                  pod can tolerate all taints of a\n                                                  particular category.\n                                                type: string\n                                              tolerationSeconds:\n                                                description: TolerationSeconds represents\n                                                  the period of time the toleration\n                                                  (which must be of effect NoExecute,\n                                                  otherwise this field is ignored)\n                                                  tolerates the taint. By default,\n                                                  it is not set, which means tolerate\n                                                  the taint forever (do not evict).\n                                                  Zero and negative values will be\n                                                  treated as 0 (evict immediately)\n                                                  by the system.\n                                                format: int64\n                                                type: integer\n                                              value:\n                                                description: Value is the taint value\n                                                  the toleration matches to. If the\n                                                  operator is Exists, the value should\n                                                  be empty, otherwise just a regular\n                                                  string.\n                                                type: string\n                                            type: object\n                                          type: array\n                                      type: object\n                                  type: object\n                                serviceType:\n                                  description: Optional service type for Kubernetes\n                                    solver service\n                                  type: string\n                              type: object\n                          type: object\n                        selector:\n                          description: Selector selects a set of DNSNames on the Certificate\n                            resource that should be solved using this challenge solver.\n                            If not specified, the solver will be treated as the 'default'\n                            solver with the lowest priority, i.e. if any other solver\n                            has a more specific match, it will be used instead.\n                          properties:\n                            dnsNames:\n                              description: List of DNSNames that this solver will\n                                be used to solve. If specified and a match is found,\n                                a dnsNames selector will take precedence over a dnsZones\n                                selector. If multiple solvers match with the same\n                                dnsNames value, the solver with the most matching\n                                labels in matchLabels will be selected. If neither\n                                has more matches, the solver defined earlier in the\n                                list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            dnsZones:\n                              description: List of DNSZones that this solver will\n                                be used to solve. The most specific DNS zone match\n                                specified here will take precedence over other DNS\n                                zone matches, so a solver specifying sys.example.com\n                                will be selected over one specifying example.com for\n                                the domain www.sys.example.com. If multiple solvers\n                                match with the same dnsZones value, the solver with\n                                the most matching labels in matchLabels will be selected.\n                                If neither has more matches, the solver defined earlier\n                                in the list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            matchLabels:\n                              additionalProperties:\n                                type: string\n                              description: A label selector that is used to refine\n                                the set of certificate's that this challenge solver\n                                will apply to.\n                              type: object\n                          type: object\n                      type: object\n                    type: array\n                required:\n                - privateKeySecretRef\n                - server\n                type: object\n              ca:\n                description: CA configures this issuer to sign certificates using\n                  a signing CA keypair stored in a Secret resource. This is used to\n                  build internal PKIs that are managed by cert-manager.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set,\n                      certificates will be issued without distribution points set.\n                    items:\n                      type: string\n                    type: array\n                  secretName:\n                    description: SecretName is the name of the secret used to sign\n                      Certificates issued by this Issuer.\n                    type: string\n                required:\n                - secretName\n                type: object\n              selfSigned:\n                description: SelfSigned configures this issuer to 'self sign' certificates\n                  using the private key used to create the CertificateRequest object.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set\n                      certificate will be issued without CDP. Values are strings.\n                    items:\n                      type: string\n                    type: array\n                type: object\n              vault:\n                description: Vault configures this issuer to sign certificates using\n                  a HashiCorp Vault PKI backend.\n                properties:\n                  auth:\n                    description: Auth configures how cert-manager authenticates with\n                      the Vault server.\n                    properties:\n                      appRole:\n                        description: AppRole authenticates with Vault using the App\n                          Role auth mechanism, with the role and secret stored in\n                          a Kubernetes Secret resource.\n                        properties:\n                          path:\n                            description: 'Path where the App Role authentication backend\n                              is mounted in Vault, e.g: \"approle\"'\n                            type: string\n                          roleId:\n                            description: RoleID configured in the App Role authentication\n                              backend when setting up the authentication backend in\n                              Vault.\n                            type: string\n                          secretRef:\n                            description: Reference to a key in a Secret that contains\n                              the App Role secret used to authenticate with Vault.\n                              The `key` field must be specified and denotes which\n                              entry within the Secret resource is used as the app\n                              role secret.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - path\n                        - roleId\n                        - secretRef\n                        type: object\n                      kubernetes:\n                        description: Kubernetes authenticates with Vault by passing\n                          the ServiceAccount token stored in the named Secret resource\n                          to the Vault server.\n                        properties:\n                          mountPath:\n                            description: The Vault mountPath here is the mount path\n                              to use when authenticating with Vault. For example,\n                              setting a value to `/v1/auth/foo`, will use the path\n                              `/v1/auth/foo/login` to authenticate with Vault. If\n                              unspecified, the default value \"/v1/auth/kubernetes\"\n                              will be used.\n                            type: string\n                          role:\n                            description: A required field containing the Vault Role\n                              to assume. A Role binds a Kubernetes ServiceAccount\n                              with a set of Vault policies.\n                            type: string\n                          secretRef:\n                            description: The required Secret field containing a Kubernetes\n                              ServiceAccount JWT used for authenticating with Vault.\n                              Use of 'ambient credentials' is not supported.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - role\n                        - secretRef\n                        type: object\n                      tokenSecretRef:\n                        description: TokenSecretRef authenticates with Vault by presenting\n                          a token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    type: object\n                  caBundle:\n                    description: PEM encoded CA bundle used to validate Vault server\n                      certificate. Only used if the Server URL is using HTTPS protocol.\n                      This parameter is ignored for plain HTTP protocol connection.\n                      If not set the system root certificates are used to validate\n                      the TLS connection.\n                    format: byte\n                    type: string\n                  namespace:\n                    description: 'Name of the vault namespace. Namespaces is a set\n                      of features within Vault Enterprise that allows Vault environments\n                      to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces\n                      can be found here https://www.vaultproject.io/docs/enterprise/namespaces'\n                    type: string\n                  path:\n                    description: 'Path is the mount path of the Vault PKI backend''s\n                      `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".'\n                    type: string\n                  server:\n                    description: 'Server is the connection address for the Vault server,\n                      e.g: \"https://vault.example.com:8200\".'\n                    type: string\n                required:\n                - auth\n                - path\n                - server\n                type: object\n              venafi:\n                description: Venafi configures this issuer to sign certificates using\n                  a Venafi TPP or Venafi Cloud policy zone.\n                properties:\n                  cloud:\n                    description: Cloud specifies the Venafi cloud configuration settings.\n                      Only one of TPP or Cloud may be specified.\n                    properties:\n                      apiTokenSecretRef:\n                        description: APITokenSecretRef is a secret key selector for\n                          the Venafi Cloud API token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: URL is the base URL for Venafi Cloud. Defaults\n                          to \"https://api.venafi.cloud/v1\".\n                        type: string\n                    required:\n                    - apiTokenSecretRef\n                    type: object\n                  tpp:\n                    description: TPP specifies Trust Protection Platform configuration\n                      settings. Only one of TPP or Cloud may be specified.\n                    properties:\n                      caBundle:\n                        description: CABundle is a PEM encoded TLS certificate to\n                          use to verify connections to the TPP instance. If specified,\n                          system roots will not be used and the issuing CA for the\n                          TPP instance must be verifiable using the provided root.\n                          If not specified, the connection will be verified using\n                          the cert-manager system root certificates.\n                        format: byte\n                        type: string\n                      credentialsRef:\n                        description: CredentialsRef is a reference to a Secret containing\n                          the username and password for the TPP server. The secret\n                          must contain two keys, 'username' and 'password'.\n                        properties:\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: 'URL is the base URL for the vedsdk endpoint\n                          of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".'\n                        type: string\n                    required:\n                    - credentialsRef\n                    - url\n                    type: object\n                  zone:\n                    description: Zone is the Venafi Policy Zone to use for this issuer.\n                      All requests made to the Venafi platform will be restricted\n                      by the named zone policy. This field is required.\n                    type: string\n                required:\n                - zone\n                type: object\n            type: object\n          status:\n            description: Status of the ClusterIssuer. This is set and managed automatically.\n            properties:\n              acme:\n                description: ACME specific status options. This field should only\n                  be set if the Issuer is configured to use an ACME server to issue\n                  certificates.\n                properties:\n                  lastRegisteredEmail:\n                    description: LastRegisteredEmail is the email associated with\n                      the latest registered ACME account, in order to track changes\n                      made to registered account associated with the  Issuer\n                    type: string\n                  uri:\n                    description: URI is the unique account identifier, which can also\n                      be used to retrieve account details from the CA\n                    type: string\n                type: object\n              conditions:\n                description: List of status conditions to indicate the status of a\n                  CertificateRequest. Known condition types are `Ready`.\n                items:\n                  description: IssuerCondition contains condition information for\n                    an Issuer.\n                  properties:\n                    lastTransitionTime:\n                      description: LastTransitionTime is the timestamp corresponding\n                        to the last status change of this condition.\n                      format: date-time\n                      type: string\n                    message:\n                      description: Message is a human readable description of the\n                        details of the last transition, complementing reason.\n                      type: string\n                    reason:\n                      description: Reason is a brief machine readable explanation\n                        for the condition's last transition.\n                      type: string\n                    status:\n                      description: Status of the condition, one of ('True', 'False',\n                        'Unknown').\n                      enum:\n                      - \"True\"\n                      - \"False\"\n                      - Unknown\n                      type: string\n                    type:\n                      description: Type of the condition, known values are ('Ready').\n                      type: string\n                  required:\n                  - status\n                  - type\n                  type: object\n                type: array\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].status\n      name: Ready\n      type: string\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].message\n      name: Status\n      priority: 1\n      type: string\n    - description: CreationTimestamp is a timestamp representing the server time when\n        this object was created. It is not guaranteed to be set in happens-before\n        order across separate operations. Clients may not set this value. It is represented\n        in RFC3339 form and is in UTC.\n      jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1alpha3\n    schema:\n      openAPIV3Schema:\n        description: A ClusterIssuer represents a certificate issuing authority which\n          can be referenced as part of `issuerRef` fields. It is similar to an Issuer,\n          however it is cluster-scoped and therefore can be referenced by resources\n          that exist in *any* namespace, not just the same namespace as the referent.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: Desired state of the ClusterIssuer resource.\n            properties:\n              acme:\n                description: ACME configures this issuer to communicate with a RFC8555\n                  (ACME) server to obtain signed x509 certificates.\n                properties:\n                  disableAccountKeyGeneration:\n                    description: Enables or disables generating a new ACME account\n                      key. If true, the Issuer resource will *not* request a new account\n                      but will expect the account key to be supplied via an existing\n                      secret. If false, the cert-manager system will generate a new\n                      ACME account key for the Issuer. Defaults to false.\n                    type: boolean\n                  email:\n                    description: Email is the email address to be associated with\n                      the ACME account. This field is optional, but it is strongly\n                      recommended to be set. It will be used to contact you in case\n                      of issues with your account or certificates, including expiry\n                      notification emails. This field may be updated after the account\n                      is initially registered.\n                    type: string\n                  externalAccountBinding:\n                    description: ExternalAccountBinding is a reference to a CA external\n                      account of the ACME server. If set, upon registration cert-manager\n                      will attempt to associate the given external account credentials\n                      with the registered ACME account.\n                    properties:\n                      keyAlgorithm:\n                        description: keyAlgorithm is the MAC key algorithm that the\n                          key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".\n                        enum:\n                        - HS256\n                        - HS384\n                        - HS512\n                        type: string\n                      keyID:\n                        description: keyID is the ID of the CA key that the External\n                          Account is bound to.\n                        type: string\n                      keySecretRef:\n                        description: keySecretRef is a Secret Key Selector referencing\n                          a data item in a Kubernetes Secret which holds the symmetric\n                          MAC key of the External Account Binding. The `key` is the\n                          index string that is paired with the key data in the Secret\n                          and should not be confused with the key data itself, or\n                          indeed with the External Account Binding keyID above. The\n                          secret key stored in the Secret **must** be un-padded, base64\n                          URL encoded data.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    required:\n                    - keyAlgorithm\n                    - keyID\n                    - keySecretRef\n                    type: object\n                  preferredChain:\n                    description: 'PreferredChain is the chain to use if the ACME server\n                      outputs multiple. PreferredChain is no guarantee that this one\n                      gets delivered by the ACME endpoint. For example, for Let''s\n                      Encrypt''s DST crosssign you would use: \"DST Root CA X3\" or\n                      \"ISRG Root X1\" for the newer Let''s Encrypt root CA. This value\n                      picks the first certificate bundle in the ACME alternative chains\n                      that has a certificate with this value as its issuer''s CN'\n                    maxLength: 64\n                    type: string\n                  privateKeySecretRef:\n                    description: PrivateKey is the name of a Kubernetes Secret resource\n                      that will be used to store the automatically generated ACME\n                      account private key. Optionally, a `key` may be specified to\n                      select a specific entry within the named Secret resource. If\n                      `key` is not specified, a default of `tls.key` will be used.\n                    properties:\n                      key:\n                        description: The key of the entry in the Secret resource's\n                          `data` field to be used. Some instances of this field may\n                          be defaulted, in others it may be required.\n                        type: string\n                      name:\n                        description: 'Name of the resource being referred to. More\n                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                        type: string\n                    required:\n                    - name\n                    type: object\n                  server:\n                    description: 'Server is the URL used to access the ACME server''s\n                      ''directory'' endpoint. For example, for Let''s Encrypt''s staging\n                      endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\".\n                      Only ACME v2 endpoints (i.e. RFC 8555) are supported.'\n                    type: string\n                  skipTLSVerify:\n                    description: Enables or disables validation of the ACME server\n                      TLS certificate. If true, requests to the ACME server will not\n                      have their TLS certificate validated (i.e. insecure connections\n                      will be allowed). Only enable this option in development environments.\n                      The cert-manager system installed roots will be used to verify\n                      connections to the ACME server if this is false. Defaults to\n                      false.\n                    type: boolean\n                  solvers:\n                    description: 'Solvers is a list of challenge solvers that will\n                      be used to solve ACME challenges for the matching domains. Solver\n                      configurations must be provided in order to obtain certificates\n                      from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/'\n                    items:\n                      description: Configures an issuer to solve challenges using\n                        the specified options. Only one of HTTP01 or DNS01 may be\n                        provided.\n                      properties:\n                        dns01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the DNS01 challenge flow.\n                          properties:\n                            acmedns:\n                              description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)\n                                API to manage DNS01 challenge records.\n                              properties:\n                                accountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                host:\n                                  type: string\n                              required:\n                              - accountSecretRef\n                              - host\n                              type: object\n                            akamai:\n                              description: Use the Akamai DNS zone management API\n                                to manage DNS01 challenge records.\n                              properties:\n                                accessTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientSecretSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                serviceConsumerDomain:\n                                  type: string\n                              required:\n                              - accessTokenSecretRef\n                              - clientSecretSecretRef\n                              - clientTokenSecretRef\n                              - serviceConsumerDomain\n                              type: object\n                            azuredns:\n                              description: Use the Microsoft Azure DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                clientID:\n                                  description: if both this and ClientSecret are left\n                                    unset MSI will be used\n                                  type: string\n                                clientSecretSecretRef:\n                                  description: if both this and ClientID are left\n                                    unset MSI will be used\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                environment:\n                                  enum:\n                                  - AzurePublicCloud\n                                  - AzureChinaCloud\n                                  - AzureGermanCloud\n                                  - AzureUSGovernmentCloud\n                                  type: string\n                                hostedZoneName:\n                                  type: string\n                                resourceGroupName:\n                                  type: string\n                                subscriptionID:\n                                  type: string\n                                tenantID:\n                                  description: when specifying ClientID and ClientSecret\n                                    then this field is also needed\n                                  type: string\n                              required:\n                              - resourceGroupName\n                              - subscriptionID\n                              type: object\n                            clouddns:\n                              description: Use the Google Cloud DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                hostedZoneName:\n                                  description: HostedZoneName is an optional field\n                                    that tells cert-manager in which Cloud DNS zone\n                                    the challenge record has to be created. If left\n                                    empty cert-manager will automatically choose a\n                                    zone.\n                                  type: string\n                                project:\n                                  type: string\n                                serviceAccountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - project\n                              type: object\n                            cloudflare:\n                              description: Use the Cloudflare API to manage DNS01\n                                challenge records.\n                              properties:\n                                apiKeySecretRef:\n                                  description: 'API key to use to authenticate with\n                                    Cloudflare. Note: using an API token to authenticate\n                                    is now the recommended method as it allows greater\n                                    control of permissions.'\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                apiTokenSecretRef:\n                                  description: API token used to authenticate with\n                                    Cloudflare.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                email:\n                                  description: Email of the account, only required\n                                    when using API key based authentication.\n                                  type: string\n                              type: object\n                            cnameStrategy:\n                              description: CNAMEStrategy configures how the DNS01\n                                provider should handle CNAME records when found in\n                                DNS zones.\n                              enum:\n                              - None\n                              - Follow\n                              type: string\n                            digitalocean:\n                              description: Use the DigitalOcean DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                tokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - tokenSecretRef\n                              type: object\n                            rfc2136:\n                              description: Use RFC2136 (\"Dynamic Updates in the Domain\n                                Name System\") (https://datatracker.ietf.org/doc/rfc2136/)\n                                to manage DNS01 challenge records.\n                              properties:\n                                nameserver:\n                                  description: The IP address or hostname of an authoritative\n                                    DNS server supporting RFC2136 in the form host:port.\n                                    If the host is an IPv6 address it must be enclosed\n                                    in square brackets (e.g [2001:db8::1]) ; port\n                                    is optional. This field is required.\n                                  type: string\n                                tsigAlgorithm:\n                                  description: 'The TSIG Algorithm configured in the\n                                    DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``\n                                    and ``tsigKeyName`` are defined. Supported values\n                                    are (case-insensitive): ``HMACMD5`` (default),\n                                    ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'\n                                  type: string\n                                tsigKeyName:\n                                  description: The TSIG Key name configured in the\n                                    DNS. If ``tsigSecretSecretRef`` is defined, this\n                                    field is required.\n                                  type: string\n                                tsigSecretSecretRef:\n                                  description: The name of the secret containing the\n                                    TSIG value. If ``tsigKeyName`` is defined, this\n                                    field is required.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - nameserver\n                              type: object\n                            route53:\n                              description: Use the AWS Route53 API to manage DNS01\n                                challenge records.\n                              properties:\n                                accessKeyID:\n                                  description: 'The AccessKeyID is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata see:\n                                    https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'\n                                  type: string\n                                hostedZoneID:\n                                  description: If set, the provider will manage only\n                                    this zone in Route53 and will not do an lookup\n                                    using the route53:ListHostedZonesByName api call.\n                                  type: string\n                                region:\n                                  description: Always set the region when using AccessKeyID\n                                    and SecretAccessKey\n                                  type: string\n                                role:\n                                  description: Role is a Role ARN which the Route53\n                                    provider will assume using either the explicit\n                                    credentials AccessKeyID/SecretAccessKey or the\n                                    inferred credentials from environment variables,\n                                    shared credentials file or AWS Instance metadata\n                                  type: string\n                                secretAccessKeySecretRef:\n                                  description: The SecretAccessKey is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - region\n                              type: object\n                            webhook:\n                              description: Configure an external webhook based DNS01\n                                challenge solver to manage DNS01 challenge records.\n                              properties:\n                                config:\n                                  description: Additional configuration that should\n                                    be passed to the webhook apiserver when challenges\n                                    are processed. This can contain arbitrary JSON\n                                    data. Secret values should not be specified in\n                                    this stanza. If secret values are needed (e.g.\n                                    credentials for a DNS service), you should use\n                                    a SecretKeySelector to reference a Secret resource.\n                                    For details on the schema of this field, consult\n                                    the webhook provider implementation's documentation.\n                                  x-kubernetes-preserve-unknown-fields: true\n                                groupName:\n                                  description: The API group name that should be used\n                                    when POSTing ChallengePayload resources to the\n                                    webhook apiserver. This should be the same as\n                                    the GroupName specified in the webhook provider\n                                    implementation.\n                                  type: string\n                                solverName:\n                                  description: The name of the solver to use, as defined\n                                    in the webhook provider implementation. This will\n                                    typically be the name of the provider, e.g. 'cloudflare'.\n                                  type: string\n                              required:\n                              - groupName\n                              - solverName\n                              type: object\n                          type: object\n                        http01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the HTTP01 challenge flow.\n                            It is not possible to obtain certificates for wildcard\n                            domain names (e.g. `*.example.com`) using the HTTP01 challenge\n                            mechanism.\n                          properties:\n                            ingress:\n                              description: The ingress based HTTP01 challenge solver\n                                will solve challenges by creating or modifying Ingress\n                                resources in order to route requests for '/.well-known/acme-challenge/XYZ'\n                                to 'challenge solver' pods that are provisioned by\n                                cert-manager for each Challenge to be completed.\n                              properties:\n                                class:\n                                  description: The ingress class to use when creating\n                                    Ingress resources to solve ACME challenges that\n                                    use this challenge solver. Only one of 'class'\n                                    or 'name' may be specified.\n                                  type: string\n                                ingressTemplate:\n                                  description: Optional ingress template used to configure\n                                    the ACME challenge solver ingress used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the ingress\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the created ACME HTTP01 solver\n                                            ingress.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver ingress.\n                                          type: object\n                                      type: object\n                                  type: object\n                                name:\n                                  description: The name of the ingress resource that\n                                    should have ACME challenge solving routes inserted\n                                    into it in order to solve HTTP01 challenges. This\n                                    is typically used in conjunction with ingress\n                                    controllers like ingress-gce, which maintains\n                                    a 1:1 mapping between external IPs and ingress\n                                    resources.\n                                  type: string\n                                podTemplate:\n                                  description: Optional pod template used to configure\n                                    the ACME challenge solver pods used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the pod\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the create ACME HTTP01 solver\n                                            pods.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver pods.\n                                          type: object\n                                      type: object\n                                    spec:\n                                      description: PodSpec defines overrides for the\n                                        HTTP01 challenge solver pod. Only the 'priorityClassName',\n                                        'nodeSelector', 'affinity', 'serviceAccountName'\n                                        and 'tolerations' fields are supported currently.\n                                        All other fields will be ignored.\n                                      properties:\n                                        affinity:\n                                          description: If specified, the pod's scheduling\n                                            constraints\n                                          properties:\n                                            nodeAffinity:\n                                              description: Describes node affinity\n                                                scheduling rules for the pod.\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node matches\n                                                    the corresponding matchExpressions;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: An empty preferred\n                                                      scheduling term matches all\n                                                      objects with implicit weight\n                                                      0 (i.e. it's a no-op). A null\n                                                      preferred scheduling term matches\n                                                      no objects (i.e. is also a no-op).\n                                                    properties:\n                                                      preference:\n                                                        description: A node selector\n                                                          term, associated with the\n                                                          corresponding weight.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      weight:\n                                                        description: Weight associated\n                                                          with matching the corresponding\n                                                          nodeSelectorTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - preference\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to an\n                                                    update), the system may or may\n                                                    not try to eventually evict the\n                                                    pod from its node.\n                                                  properties:\n                                                    nodeSelectorTerms:\n                                                      description: Required. A list\n                                                        of node selector terms. The\n                                                        terms are ORed.\n                                                      items:\n                                                        description: A null or empty\n                                                          node selector term matches\n                                                          no objects. The requirements\n                                                          of them are ANDed. The TopologySelectorTerm\n                                                          type implements a subset\n                                                          of the NodeSelectorTerm.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      type: array\n                                                  required:\n                                                  - nodeSelectorTerms\n                                                  type: object\n                                              type: object\n                                            podAffinity:\n                                              description: Describes pod affinity\n                                                scheduling rules (e.g. co-locate this\n                                                pod in the same node, zone, etc. as\n                                                some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node has pods\n                                                    which matches the corresponding\n                                                    podAffinityTerm; the node(s) with\n                                                    the highest sum are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to a pod\n                                                    label update), the system may\n                                                    or may not try to eventually evict\n                                                    the pod from its node. When there\n                                                    are multiple elements, the lists\n                                                    of nodes corresponding to each\n                                                    podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                            podAntiAffinity:\n                                              description: Describes pod anti-affinity\n                                                scheduling rules (e.g. avoid putting\n                                                this pod in the same node, zone, etc.\n                                                as some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the anti-affinity\n                                                    expressions specified by this\n                                                    field, but it may choose a node\n                                                    that violates one or more of the\n                                                    expressions. The node that is\n                                                    most preferred is the one with\n                                                    the greatest sum of weights, i.e.\n                                                    for each node that meets all of\n                                                    the scheduling requirements (resource\n                                                    request, requiredDuringScheduling\n                                                    anti-affinity expressions, etc.),\n                                                    compute a sum by iterating through\n                                                    the elements of this field and\n                                                    adding \"weight\" to the sum if\n                                                    the node has pods which matches\n                                                    the corresponding podAffinityTerm;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the anti-affinity\n                                                    requirements specified by this\n                                                    field are not met at scheduling\n                                                    time, the pod will not be scheduled\n                                                    onto the node. If the anti-affinity\n                                                    requirements specified by this\n                                                    field cease to be met at some\n                                                    point during pod execution (e.g.\n                                                    due to a pod label update), the\n                                                    system may or may not try to eventually\n                                                    evict the pod from its node. When\n                                                    there are multiple elements, the\n                                                    lists of nodes corresponding to\n                                                    each podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                          type: object\n                                        nodeSelector:\n                                          additionalProperties:\n                                            type: string\n                                          description: 'NodeSelector is a selector\n                                            which must be true for the pod to fit\n                                            on a node. Selector which must match a\n                                            node''s labels for the pod to be scheduled\n                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'\n                                          type: object\n                                        priorityClassName:\n                                          description: If specified, the pod's priorityClassName.\n                                          type: string\n                                        serviceAccountName:\n                                          description: If specified, the pod's service\n                                            account\n                                          type: string\n                                        tolerations:\n                                          description: If specified, the pod's tolerations.\n                                          items:\n                                            description: The pod this Toleration is\n                                              attached to tolerates any taint that\n                                              matches the triple <key,value,effect>\n                                              using the matching operator <operator>.\n                                            properties:\n                                              effect:\n                                                description: Effect indicates the\n                                                  taint effect to match. Empty means\n                                                  match all taint effects. When specified,\n                                                  allowed values are NoSchedule, PreferNoSchedule\n                                                  and NoExecute.\n                                                type: string\n                                              key:\n                                                description: Key is the taint key\n                                                  that the toleration applies to.\n                                                  Empty means match all taint keys.\n                                                  If the key is empty, operator must\n                                                  be Exists; this combination means\n                                                  to match all values and all keys.\n                                                type: string\n                                              operator:\n                                                description: Operator represents a\n                                                  key's relationship to the value.\n                                                  Valid operators are Exists and Equal.\n                                                  Defaults to Equal. Exists is equivalent\n                                                  to wildcard for value, so that a\n                                                  pod can tolerate all taints of a\n                                                  particular category.\n                                                type: string\n                                              tolerationSeconds:\n                                                description: TolerationSeconds represents\n                                                  the period of time the toleration\n                                                  (which must be of effect NoExecute,\n                                                  otherwise this field is ignored)\n                                                  tolerates the taint. By default,\n                                                  it is not set, which means tolerate\n                                                  the taint forever (do not evict).\n                                                  Zero and negative values will be\n                                                  treated as 0 (evict immediately)\n                                                  by the system.\n                                                format: int64\n                                                type: integer\n                                              value:\n                                                description: Value is the taint value\n                                                  the toleration matches to. If the\n                                                  operator is Exists, the value should\n                                                  be empty, otherwise just a regular\n                                                  string.\n                                                type: string\n                                            type: object\n                                          type: array\n                                      type: object\n                                  type: object\n                                serviceType:\n                                  description: Optional service type for Kubernetes\n                                    solver service\n                                  type: string\n                              type: object\n                          type: object\n                        selector:\n                          description: Selector selects a set of DNSNames on the Certificate\n                            resource that should be solved using this challenge solver.\n                            If not specified, the solver will be treated as the 'default'\n                            solver with the lowest priority, i.e. if any other solver\n                            has a more specific match, it will be used instead.\n                          properties:\n                            dnsNames:\n                              description: List of DNSNames that this solver will\n                                be used to solve. If specified and a match is found,\n                                a dnsNames selector will take precedence over a dnsZones\n                                selector. If multiple solvers match with the same\n                                dnsNames value, the solver with the most matching\n                                labels in matchLabels will be selected. If neither\n                                has more matches, the solver defined earlier in the\n                                list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            dnsZones:\n                              description: List of DNSZones that this solver will\n                                be used to solve. The most specific DNS zone match\n                                specified here will take precedence over other DNS\n                                zone matches, so a solver specifying sys.example.com\n                                will be selected over one specifying example.com for\n                                the domain www.sys.example.com. If multiple solvers\n                                match with the same dnsZones value, the solver with\n                                the most matching labels in matchLabels will be selected.\n                                If neither has more matches, the solver defined earlier\n                                in the list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            matchLabels:\n                              additionalProperties:\n                                type: string\n                              description: A label selector that is used to refine\n                                the set of certificate's that this challenge solver\n                                will apply to.\n                              type: object\n                          type: object\n                      type: object\n                    type: array\n                required:\n                - privateKeySecretRef\n                - server\n                type: object\n              ca:\n                description: CA configures this issuer to sign certificates using\n                  a signing CA keypair stored in a Secret resource. This is used to\n                  build internal PKIs that are managed by cert-manager.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set,\n                      certificates will be issued without distribution points set.\n                    items:\n                      type: string\n                    type: array\n                  secretName:\n                    description: SecretName is the name of the secret used to sign\n                      Certificates issued by this Issuer.\n                    type: string\n                required:\n                - secretName\n                type: object\n              selfSigned:\n                description: SelfSigned configures this issuer to 'self sign' certificates\n                  using the private key used to create the CertificateRequest object.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set\n                      certificate will be issued without CDP. Values are strings.\n                    items:\n                      type: string\n                    type: array\n                type: object\n              vault:\n                description: Vault configures this issuer to sign certificates using\n                  a HashiCorp Vault PKI backend.\n                properties:\n                  auth:\n                    description: Auth configures how cert-manager authenticates with\n                      the Vault server.\n                    properties:\n                      appRole:\n                        description: AppRole authenticates with Vault using the App\n                          Role auth mechanism, with the role and secret stored in\n                          a Kubernetes Secret resource.\n                        properties:\n                          path:\n                            description: 'Path where the App Role authentication backend\n                              is mounted in Vault, e.g: \"approle\"'\n                            type: string\n                          roleId:\n                            description: RoleID configured in the App Role authentication\n                              backend when setting up the authentication backend in\n                              Vault.\n                            type: string\n                          secretRef:\n                            description: Reference to a key in a Secret that contains\n                              the App Role secret used to authenticate with Vault.\n                              The `key` field must be specified and denotes which\n                              entry within the Secret resource is used as the app\n                              role secret.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - path\n                        - roleId\n                        - secretRef\n                        type: object\n                      kubernetes:\n                        description: Kubernetes authenticates with Vault by passing\n                          the ServiceAccount token stored in the named Secret resource\n                          to the Vault server.\n                        properties:\n                          mountPath:\n                            description: The Vault mountPath here is the mount path\n                              to use when authenticating with Vault. For example,\n                              setting a value to `/v1/auth/foo`, will use the path\n                              `/v1/auth/foo/login` to authenticate with Vault. If\n                              unspecified, the default value \"/v1/auth/kubernetes\"\n                              will be used.\n                            type: string\n                          role:\n                            description: A required field containing the Vault Role\n                              to assume. A Role binds a Kubernetes ServiceAccount\n                              with a set of Vault policies.\n                            type: string\n                          secretRef:\n                            description: The required Secret field containing a Kubernetes\n                              ServiceAccount JWT used for authenticating with Vault.\n                              Use of 'ambient credentials' is not supported.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - role\n                        - secretRef\n                        type: object\n                      tokenSecretRef:\n                        description: TokenSecretRef authenticates with Vault by presenting\n                          a token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    type: object\n                  caBundle:\n                    description: PEM encoded CA bundle used to validate Vault server\n                      certificate. Only used if the Server URL is using HTTPS protocol.\n                      This parameter is ignored for plain HTTP protocol connection.\n                      If not set the system root certificates are used to validate\n                      the TLS connection.\n                    format: byte\n                    type: string\n                  namespace:\n                    description: 'Name of the vault namespace. Namespaces is a set\n                      of features within Vault Enterprise that allows Vault environments\n                      to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces\n                      can be found here https://www.vaultproject.io/docs/enterprise/namespaces'\n                    type: string\n                  path:\n                    description: 'Path is the mount path of the Vault PKI backend''s\n                      `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".'\n                    type: string\n                  server:\n                    description: 'Server is the connection address for the Vault server,\n                      e.g: \"https://vault.example.com:8200\".'\n                    type: string\n                required:\n                - auth\n                - path\n                - server\n                type: object\n              venafi:\n                description: Venafi configures this issuer to sign certificates using\n                  a Venafi TPP or Venafi Cloud policy zone.\n                properties:\n                  cloud:\n                    description: Cloud specifies the Venafi cloud configuration settings.\n                      Only one of TPP or Cloud may be specified.\n                    properties:\n                      apiTokenSecretRef:\n                        description: APITokenSecretRef is a secret key selector for\n                          the Venafi Cloud API token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: URL is the base URL for Venafi Cloud. Defaults\n                          to \"https://api.venafi.cloud/v1\".\n                        type: string\n                    required:\n                    - apiTokenSecretRef\n                    type: object\n                  tpp:\n                    description: TPP specifies Trust Protection Platform configuration\n                      settings. Only one of TPP or Cloud may be specified.\n                    properties:\n                      caBundle:\n                        description: CABundle is a PEM encoded TLS certificate to\n                          use to verify connections to the TPP instance. If specified,\n                          system roots will not be used and the issuing CA for the\n                          TPP instance must be verifiable using the provided root.\n                          If not specified, the connection will be verified using\n                          the cert-manager system root certificates.\n                        format: byte\n                        type: string\n                      credentialsRef:\n                        description: CredentialsRef is a reference to a Secret containing\n                          the username and password for the TPP server. The secret\n                          must contain two keys, 'username' and 'password'.\n                        properties:\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: 'URL is the base URL for the vedsdk endpoint\n                          of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".'\n                        type: string\n                    required:\n                    - credentialsRef\n                    - url\n                    type: object\n                  zone:\n                    description: Zone is the Venafi Policy Zone to use for this issuer.\n                      All requests made to the Venafi platform will be restricted\n                      by the named zone policy. This field is required.\n                    type: string\n                required:\n                - zone\n                type: object\n            type: object\n          status:\n            description: Status of the ClusterIssuer. This is set and managed automatically.\n            properties:\n              acme:\n                description: ACME specific status options. This field should only\n                  be set if the Issuer is configured to use an ACME server to issue\n                  certificates.\n                properties:\n                  lastRegisteredEmail:\n                    description: LastRegisteredEmail is the email associated with\n                      the latest registered ACME account, in order to track changes\n                      made to registered account associated with the  Issuer\n                    type: string\n                  uri:\n                    description: URI is the unique account identifier, which can also\n                      be used to retrieve account details from the CA\n                    type: string\n                type: object\n              conditions:\n                description: List of status conditions to indicate the status of a\n                  CertificateRequest. Known condition types are `Ready`.\n                items:\n                  description: IssuerCondition contains condition information for\n                    an Issuer.\n                  properties:\n                    lastTransitionTime:\n                      description: LastTransitionTime is the timestamp corresponding\n                        to the last status change of this condition.\n                      format: date-time\n                      type: string\n                    message:\n                      description: Message is a human readable description of the\n                        details of the last transition, complementing reason.\n                      type: string\n                    reason:\n                      description: Reason is a brief machine readable explanation\n                        for the condition's last transition.\n                      type: string\n                    status:\n                      description: Status of the condition, one of ('True', 'False',\n                        'Unknown').\n                      enum:\n                      - \"True\"\n                      - \"False\"\n                      - Unknown\n                      type: string\n                    type:\n                      description: Type of the condition, known values are ('Ready').\n                      type: string\n                  required:\n                  - status\n                  - type\n                  type: object\n                type: array\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].status\n      name: Ready\n      type: string\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].message\n      name: Status\n      priority: 1\n      type: string\n    - description: CreationTimestamp is a timestamp representing the server time when\n        this object was created. It is not guaranteed to be set in happens-before\n        order across separate operations. Clients may not set this value. It is represented\n        in RFC3339 form and is in UTC.\n      jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: A ClusterIssuer represents a certificate issuing authority which\n          can be referenced as part of `issuerRef` fields. It is similar to an Issuer,\n          however it is cluster-scoped and therefore can be referenced by resources\n          that exist in *any* namespace, not just the same namespace as the referent.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: Desired state of the ClusterIssuer resource.\n            properties:\n              acme:\n                description: ACME configures this issuer to communicate with a RFC8555\n                  (ACME) server to obtain signed x509 certificates.\n                properties:\n                  disableAccountKeyGeneration:\n                    description: Enables or disables generating a new ACME account\n                      key. If true, the Issuer resource will *not* request a new account\n                      but will expect the account key to be supplied via an existing\n                      secret. If false, the cert-manager system will generate a new\n                      ACME account key for the Issuer. Defaults to false.\n                    type: boolean\n                  email:\n                    description: Email is the email address to be associated with\n                      the ACME account. This field is optional, but it is strongly\n                      recommended to be set. It will be used to contact you in case\n                      of issues with your account or certificates, including expiry\n                      notification emails. This field may be updated after the account\n                      is initially registered.\n                    type: string\n                  externalAccountBinding:\n                    description: ExternalAccountBinding is a reference to a CA external\n                      account of the ACME server. If set, upon registration cert-manager\n                      will attempt to associate the given external account credentials\n                      with the registered ACME account.\n                    properties:\n                      keyAlgorithm:\n                        description: keyAlgorithm is the MAC key algorithm that the\n                          key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".\n                        enum:\n                        - HS256\n                        - HS384\n                        - HS512\n                        type: string\n                      keyID:\n                        description: keyID is the ID of the CA key that the External\n                          Account is bound to.\n                        type: string\n                      keySecretRef:\n                        description: keySecretRef is a Secret Key Selector referencing\n                          a data item in a Kubernetes Secret which holds the symmetric\n                          MAC key of the External Account Binding. The `key` is the\n                          index string that is paired with the key data in the Secret\n                          and should not be confused with the key data itself, or\n                          indeed with the External Account Binding keyID above. The\n                          secret key stored in the Secret **must** be un-padded, base64\n                          URL encoded data.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    required:\n                    - keyAlgorithm\n                    - keyID\n                    - keySecretRef\n                    type: object\n                  preferredChain:\n                    description: 'PreferredChain is the chain to use if the ACME server\n                      outputs multiple. PreferredChain is no guarantee that this one\n                      gets delivered by the ACME endpoint. For example, for Let''s\n                      Encrypt''s DST crosssign you would use: \"DST Root CA X3\" or\n                      \"ISRG Root X1\" for the newer Let''s Encrypt root CA. This value\n                      picks the first certificate bundle in the ACME alternative chains\n                      that has a certificate with this value as its issuer''s CN'\n                    maxLength: 64\n                    type: string\n                  privateKeySecretRef:\n                    description: PrivateKey is the name of a Kubernetes Secret resource\n                      that will be used to store the automatically generated ACME\n                      account private key. Optionally, a `key` may be specified to\n                      select a specific entry within the named Secret resource. If\n                      `key` is not specified, a default of `tls.key` will be used.\n                    properties:\n                      key:\n                        description: The key of the entry in the Secret resource's\n                          `data` field to be used. Some instances of this field may\n                          be defaulted, in others it may be required.\n                        type: string\n                      name:\n                        description: 'Name of the resource being referred to. More\n                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                        type: string\n                    required:\n                    - name\n                    type: object\n                  server:\n                    description: 'Server is the URL used to access the ACME server''s\n                      ''directory'' endpoint. For example, for Let''s Encrypt''s staging\n                      endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\".\n                      Only ACME v2 endpoints (i.e. RFC 8555) are supported.'\n                    type: string\n                  skipTLSVerify:\n                    description: Enables or disables validation of the ACME server\n                      TLS certificate. If true, requests to the ACME server will not\n                      have their TLS certificate validated (i.e. insecure connections\n                      will be allowed). Only enable this option in development environments.\n                      The cert-manager system installed roots will be used to verify\n                      connections to the ACME server if this is false. Defaults to\n                      false.\n                    type: boolean\n                  solvers:\n                    description: 'Solvers is a list of challenge solvers that will\n                      be used to solve ACME challenges for the matching domains. Solver\n                      configurations must be provided in order to obtain certificates\n                      from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/'\n                    items:\n                      description: Configures an issuer to solve challenges using\n                        the specified options. Only one of HTTP01 or DNS01 may be\n                        provided.\n                      properties:\n                        dns01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the DNS01 challenge flow.\n                          properties:\n                            acmeDNS:\n                              description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)\n                                API to manage DNS01 challenge records.\n                              properties:\n                                accountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                host:\n                                  type: string\n                              required:\n                              - accountSecretRef\n                              - host\n                              type: object\n                            akamai:\n                              description: Use the Akamai DNS zone management API\n                                to manage DNS01 challenge records.\n                              properties:\n                                accessTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientSecretSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                serviceConsumerDomain:\n                                  type: string\n                              required:\n                              - accessTokenSecretRef\n                              - clientSecretSecretRef\n                              - clientTokenSecretRef\n                              - serviceConsumerDomain\n                              type: object\n                            azureDNS:\n                              description: Use the Microsoft Azure DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                clientID:\n                                  description: if both this and ClientSecret are left\n                                    unset MSI will be used\n                                  type: string\n                                clientSecretSecretRef:\n                                  description: if both this and ClientID are left\n                                    unset MSI will be used\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                environment:\n                                  enum:\n                                  - AzurePublicCloud\n                                  - AzureChinaCloud\n                                  - AzureGermanCloud\n                                  - AzureUSGovernmentCloud\n                                  type: string\n                                hostedZoneName:\n                                  type: string\n                                resourceGroupName:\n                                  type: string\n                                subscriptionID:\n                                  type: string\n                                tenantID:\n                                  description: when specifying ClientID and ClientSecret\n                                    then this field is also needed\n                                  type: string\n                              required:\n                              - resourceGroupName\n                              - subscriptionID\n                              type: object\n                            cloudDNS:\n                              description: Use the Google Cloud DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                hostedZoneName:\n                                  description: HostedZoneName is an optional field\n                                    that tells cert-manager in which Cloud DNS zone\n                                    the challenge record has to be created. If left\n                                    empty cert-manager will automatically choose a\n                                    zone.\n                                  type: string\n                                project:\n                                  type: string\n                                serviceAccountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - project\n                              type: object\n                            cloudflare:\n                              description: Use the Cloudflare API to manage DNS01\n                                challenge records.\n                              properties:\n                                apiKeySecretRef:\n                                  description: 'API key to use to authenticate with\n                                    Cloudflare. Note: using an API token to authenticate\n                                    is now the recommended method as it allows greater\n                                    control of permissions.'\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                apiTokenSecretRef:\n                                  description: API token used to authenticate with\n                                    Cloudflare.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                email:\n                                  description: Email of the account, only required\n                                    when using API key based authentication.\n                                  type: string\n                              type: object\n                            cnameStrategy:\n                              description: CNAMEStrategy configures how the DNS01\n                                provider should handle CNAME records when found in\n                                DNS zones.\n                              enum:\n                              - None\n                              - Follow\n                              type: string\n                            digitalocean:\n                              description: Use the DigitalOcean DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                tokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - tokenSecretRef\n                              type: object\n                            rfc2136:\n                              description: Use RFC2136 (\"Dynamic Updates in the Domain\n                                Name System\") (https://datatracker.ietf.org/doc/rfc2136/)\n                                to manage DNS01 challenge records.\n                              properties:\n                                nameserver:\n                                  description: The IP address or hostname of an authoritative\n                                    DNS server supporting RFC2136 in the form host:port.\n                                    If the host is an IPv6 address it must be enclosed\n                                    in square brackets (e.g [2001:db8::1]) ; port\n                                    is optional. This field is required.\n                                  type: string\n                                tsigAlgorithm:\n                                  description: 'The TSIG Algorithm configured in the\n                                    DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``\n                                    and ``tsigKeyName`` are defined. Supported values\n                                    are (case-insensitive): ``HMACMD5`` (default),\n                                    ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'\n                                  type: string\n                                tsigKeyName:\n                                  description: The TSIG Key name configured in the\n                                    DNS. If ``tsigSecretSecretRef`` is defined, this\n                                    field is required.\n                                  type: string\n                                tsigSecretSecretRef:\n                                  description: The name of the secret containing the\n                                    TSIG value. If ``tsigKeyName`` is defined, this\n                                    field is required.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - nameserver\n                              type: object\n                            route53:\n                              description: Use the AWS Route53 API to manage DNS01\n                                challenge records.\n                              properties:\n                                accessKeyID:\n                                  description: 'The AccessKeyID is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata see:\n                                    https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'\n                                  type: string\n                                hostedZoneID:\n                                  description: If set, the provider will manage only\n                                    this zone in Route53 and will not do an lookup\n                                    using the route53:ListHostedZonesByName api call.\n                                  type: string\n                                region:\n                                  description: Always set the region when using AccessKeyID\n                                    and SecretAccessKey\n                                  type: string\n                                role:\n                                  description: Role is a Role ARN which the Route53\n                                    provider will assume using either the explicit\n                                    credentials AccessKeyID/SecretAccessKey or the\n                                    inferred credentials from environment variables,\n                                    shared credentials file or AWS Instance metadata\n                                  type: string\n                                secretAccessKeySecretRef:\n                                  description: The SecretAccessKey is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - region\n                              type: object\n                            webhook:\n                              description: Configure an external webhook based DNS01\n                                challenge solver to manage DNS01 challenge records.\n                              properties:\n                                config:\n                                  description: Additional configuration that should\n                                    be passed to the webhook apiserver when challenges\n                                    are processed. This can contain arbitrary JSON\n                                    data. Secret values should not be specified in\n                                    this stanza. If secret values are needed (e.g.\n                                    credentials for a DNS service), you should use\n                                    a SecretKeySelector to reference a Secret resource.\n                                    For details on the schema of this field, consult\n                                    the webhook provider implementation's documentation.\n                                  x-kubernetes-preserve-unknown-fields: true\n                                groupName:\n                                  description: The API group name that should be used\n                                    when POSTing ChallengePayload resources to the\n                                    webhook apiserver. This should be the same as\n                                    the GroupName specified in the webhook provider\n                                    implementation.\n                                  type: string\n                                solverName:\n                                  description: The name of the solver to use, as defined\n                                    in the webhook provider implementation. This will\n                                    typically be the name of the provider, e.g. 'cloudflare'.\n                                  type: string\n                              required:\n                              - groupName\n                              - solverName\n                              type: object\n                          type: object\n                        http01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the HTTP01 challenge flow.\n                            It is not possible to obtain certificates for wildcard\n                            domain names (e.g. `*.example.com`) using the HTTP01 challenge\n                            mechanism.\n                          properties:\n                            ingress:\n                              description: The ingress based HTTP01 challenge solver\n                                will solve challenges by creating or modifying Ingress\n                                resources in order to route requests for '/.well-known/acme-challenge/XYZ'\n                                to 'challenge solver' pods that are provisioned by\n                                cert-manager for each Challenge to be completed.\n                              properties:\n                                class:\n                                  description: The ingress class to use when creating\n                                    Ingress resources to solve ACME challenges that\n                                    use this challenge solver. Only one of 'class'\n                                    or 'name' may be specified.\n                                  type: string\n                                ingressTemplate:\n                                  description: Optional ingress template used to configure\n                                    the ACME challenge solver ingress used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the ingress\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the created ACME HTTP01 solver\n                                            ingress.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver ingress.\n                                          type: object\n                                      type: object\n                                  type: object\n                                name:\n                                  description: The name of the ingress resource that\n                                    should have ACME challenge solving routes inserted\n                                    into it in order to solve HTTP01 challenges. This\n                                    is typically used in conjunction with ingress\n                                    controllers like ingress-gce, which maintains\n                                    a 1:1 mapping between external IPs and ingress\n                                    resources.\n                                  type: string\n                                podTemplate:\n                                  description: Optional pod template used to configure\n                                    the ACME challenge solver pods used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the pod\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the create ACME HTTP01 solver\n                                            pods.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver pods.\n                                          type: object\n                                      type: object\n                                    spec:\n                                      description: PodSpec defines overrides for the\n                                        HTTP01 challenge solver pod. Only the 'priorityClassName',\n                                        'nodeSelector', 'affinity', 'serviceAccountName'\n                                        and 'tolerations' fields are supported currently.\n                                        All other fields will be ignored.\n                                      properties:\n                                        affinity:\n                                          description: If specified, the pod's scheduling\n                                            constraints\n                                          properties:\n                                            nodeAffinity:\n                                              description: Describes node affinity\n                                                scheduling rules for the pod.\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node matches\n                                                    the corresponding matchExpressions;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: An empty preferred\n                                                      scheduling term matches all\n                                                      objects with implicit weight\n                                                      0 (i.e. it's a no-op). A null\n                                                      preferred scheduling term matches\n                                                      no objects (i.e. is also a no-op).\n                                                    properties:\n                                                      preference:\n                                                        description: A node selector\n                                                          term, associated with the\n                                                          corresponding weight.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      weight:\n                                                        description: Weight associated\n                                                          with matching the corresponding\n                                                          nodeSelectorTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - preference\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to an\n                                                    update), the system may or may\n                                                    not try to eventually evict the\n                                                    pod from its node.\n                                                  properties:\n                                                    nodeSelectorTerms:\n                                                      description: Required. A list\n                                                        of node selector terms. The\n                                                        terms are ORed.\n                                                      items:\n                                                        description: A null or empty\n                                                          node selector term matches\n                                                          no objects. The requirements\n                                                          of them are ANDed. The TopologySelectorTerm\n                                                          type implements a subset\n                                                          of the NodeSelectorTerm.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      type: array\n                                                  required:\n                                                  - nodeSelectorTerms\n                                                  type: object\n                                              type: object\n                                            podAffinity:\n                                              description: Describes pod affinity\n                                                scheduling rules (e.g. co-locate this\n                                                pod in the same node, zone, etc. as\n                                                some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node has pods\n                                                    which matches the corresponding\n                                                    podAffinityTerm; the node(s) with\n                                                    the highest sum are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to a pod\n                                                    label update), the system may\n                                                    or may not try to eventually evict\n                                                    the pod from its node. When there\n                                                    are multiple elements, the lists\n                                                    of nodes corresponding to each\n                                                    podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                            podAntiAffinity:\n                                              description: Describes pod anti-affinity\n                                                scheduling rules (e.g. avoid putting\n                                                this pod in the same node, zone, etc.\n                                                as some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the anti-affinity\n                                                    expressions specified by this\n                                                    field, but it may choose a node\n                                                    that violates one or more of the\n                                                    expressions. The node that is\n                                                    most preferred is the one with\n                                                    the greatest sum of weights, i.e.\n                                                    for each node that meets all of\n                                                    the scheduling requirements (resource\n                                                    request, requiredDuringScheduling\n                                                    anti-affinity expressions, etc.),\n                                                    compute a sum by iterating through\n                                                    the elements of this field and\n                                                    adding \"weight\" to the sum if\n                                                    the node has pods which matches\n                                                    the corresponding podAffinityTerm;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the anti-affinity\n                                                    requirements specified by this\n                                                    field are not met at scheduling\n                                                    time, the pod will not be scheduled\n                                                    onto the node. If the anti-affinity\n                                                    requirements specified by this\n                                                    field cease to be met at some\n                                                    point during pod execution (e.g.\n                                                    due to a pod label update), the\n                                                    system may or may not try to eventually\n                                                    evict the pod from its node. When\n                                                    there are multiple elements, the\n                                                    lists of nodes corresponding to\n                                                    each podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                          type: object\n                                        nodeSelector:\n                                          additionalProperties:\n                                            type: string\n                                          description: 'NodeSelector is a selector\n                                            which must be true for the pod to fit\n                                            on a node. Selector which must match a\n                                            node''s labels for the pod to be scheduled\n                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'\n                                          type: object\n                                        priorityClassName:\n                                          description: If specified, the pod's priorityClassName.\n                                          type: string\n                                        serviceAccountName:\n                                          description: If specified, the pod's service\n                                            account\n                                          type: string\n                                        tolerations:\n                                          description: If specified, the pod's tolerations.\n                                          items:\n                                            description: The pod this Toleration is\n                                              attached to tolerates any taint that\n                                              matches the triple <key,value,effect>\n                                              using the matching operator <operator>.\n                                            properties:\n                                              effect:\n                                                description: Effect indicates the\n                                                  taint effect to match. Empty means\n                                                  match all taint effects. When specified,\n                                                  allowed values are NoSchedule, PreferNoSchedule\n                                                  and NoExecute.\n                                                type: string\n                                              key:\n                                                description: Key is the taint key\n                                                  that the toleration applies to.\n                                                  Empty means match all taint keys.\n                                                  If the key is empty, operator must\n                                                  be Exists; this combination means\n                                                  to match all values and all keys.\n                                                type: string\n                                              operator:\n                                                description: Operator represents a\n                                                  key's relationship to the value.\n                                                  Valid operators are Exists and Equal.\n                                                  Defaults to Equal. Exists is equivalent\n                                                  to wildcard for value, so that a\n                                                  pod can tolerate all taints of a\n                                                  particular category.\n                                                type: string\n                                              tolerationSeconds:\n                                                description: TolerationSeconds represents\n                                                  the period of time the toleration\n                                                  (which must be of effect NoExecute,\n                                                  otherwise this field is ignored)\n                                                  tolerates the taint. By default,\n                                                  it is not set, which means tolerate\n                                                  the taint forever (do not evict).\n                                                  Zero and negative values will be\n                                                  treated as 0 (evict immediately)\n                                                  by the system.\n                                                format: int64\n                                                type: integer\n                                              value:\n                                                description: Value is the taint value\n                                                  the toleration matches to. If the\n                                                  operator is Exists, the value should\n                                                  be empty, otherwise just a regular\n                                                  string.\n                                                type: string\n                                            type: object\n                                          type: array\n                                      type: object\n                                  type: object\n                                serviceType:\n                                  description: Optional service type for Kubernetes\n                                    solver service\n                                  type: string\n                              type: object\n                          type: object\n                        selector:\n                          description: Selector selects a set of DNSNames on the Certificate\n                            resource that should be solved using this challenge solver.\n                            If not specified, the solver will be treated as the 'default'\n                            solver with the lowest priority, i.e. if any other solver\n                            has a more specific match, it will be used instead.\n                          properties:\n                            dnsNames:\n                              description: List of DNSNames that this solver will\n                                be used to solve. If specified and a match is found,\n                                a dnsNames selector will take precedence over a dnsZones\n                                selector. If multiple solvers match with the same\n                                dnsNames value, the solver with the most matching\n                                labels in matchLabels will be selected. If neither\n                                has more matches, the solver defined earlier in the\n                                list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            dnsZones:\n                              description: List of DNSZones that this solver will\n                                be used to solve. The most specific DNS zone match\n                                specified here will take precedence over other DNS\n                                zone matches, so a solver specifying sys.example.com\n                                will be selected over one specifying example.com for\n                                the domain www.sys.example.com. If multiple solvers\n                                match with the same dnsZones value, the solver with\n                                the most matching labels in matchLabels will be selected.\n                                If neither has more matches, the solver defined earlier\n                                in the list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            matchLabels:\n                              additionalProperties:\n                                type: string\n                              description: A label selector that is used to refine\n                                the set of certificate's that this challenge solver\n                                will apply to.\n                              type: object\n                          type: object\n                      type: object\n                    type: array\n                required:\n                - privateKeySecretRef\n                - server\n                type: object\n              ca:\n                description: CA configures this issuer to sign certificates using\n                  a signing CA keypair stored in a Secret resource. This is used to\n                  build internal PKIs that are managed by cert-manager.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set,\n                      certificates will be issued without distribution points set.\n                    items:\n                      type: string\n                    type: array\n                  secretName:\n                    description: SecretName is the name of the secret used to sign\n                      Certificates issued by this Issuer.\n                    type: string\n                required:\n                - secretName\n                type: object\n              selfSigned:\n                description: SelfSigned configures this issuer to 'self sign' certificates\n                  using the private key used to create the CertificateRequest object.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set\n                      certificate will be issued without CDP. Values are strings.\n                    items:\n                      type: string\n                    type: array\n                type: object\n              vault:\n                description: Vault configures this issuer to sign certificates using\n                  a HashiCorp Vault PKI backend.\n                properties:\n                  auth:\n                    description: Auth configures how cert-manager authenticates with\n                      the Vault server.\n                    properties:\n                      appRole:\n                        description: AppRole authenticates with Vault using the App\n                          Role auth mechanism, with the role and secret stored in\n                          a Kubernetes Secret resource.\n                        properties:\n                          path:\n                            description: 'Path where the App Role authentication backend\n                              is mounted in Vault, e.g: \"approle\"'\n                            type: string\n                          roleId:\n                            description: RoleID configured in the App Role authentication\n                              backend when setting up the authentication backend in\n                              Vault.\n                            type: string\n                          secretRef:\n                            description: Reference to a key in a Secret that contains\n                              the App Role secret used to authenticate with Vault.\n                              The `key` field must be specified and denotes which\n                              entry within the Secret resource is used as the app\n                              role secret.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - path\n                        - roleId\n                        - secretRef\n                        type: object\n                      kubernetes:\n                        description: Kubernetes authenticates with Vault by passing\n                          the ServiceAccount token stored in the named Secret resource\n                          to the Vault server.\n                        properties:\n                          mountPath:\n                            description: The Vault mountPath here is the mount path\n                              to use when authenticating with Vault. For example,\n                              setting a value to `/v1/auth/foo`, will use the path\n                              `/v1/auth/foo/login` to authenticate with Vault. If\n                              unspecified, the default value \"/v1/auth/kubernetes\"\n                              will be used.\n                            type: string\n                          role:\n                            description: A required field containing the Vault Role\n                              to assume. A Role binds a Kubernetes ServiceAccount\n                              with a set of Vault policies.\n                            type: string\n                          secretRef:\n                            description: The required Secret field containing a Kubernetes\n                              ServiceAccount JWT used for authenticating with Vault.\n                              Use of 'ambient credentials' is not supported.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - role\n                        - secretRef\n                        type: object\n                      tokenSecretRef:\n                        description: TokenSecretRef authenticates with Vault by presenting\n                          a token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    type: object\n                  caBundle:\n                    description: PEM encoded CA bundle used to validate Vault server\n                      certificate. Only used if the Server URL is using HTTPS protocol.\n                      This parameter is ignored for plain HTTP protocol connection.\n                      If not set the system root certificates are used to validate\n                      the TLS connection.\n                    format: byte\n                    type: string\n                  namespace:\n                    description: 'Name of the vault namespace. Namespaces is a set\n                      of features within Vault Enterprise that allows Vault environments\n                      to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces\n                      can be found here https://www.vaultproject.io/docs/enterprise/namespaces'\n                    type: string\n                  path:\n                    description: 'Path is the mount path of the Vault PKI backend''s\n                      `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".'\n                    type: string\n                  server:\n                    description: 'Server is the connection address for the Vault server,\n                      e.g: \"https://vault.example.com:8200\".'\n                    type: string\n                required:\n                - auth\n                - path\n                - server\n                type: object\n              venafi:\n                description: Venafi configures this issuer to sign certificates using\n                  a Venafi TPP or Venafi Cloud policy zone.\n                properties:\n                  cloud:\n                    description: Cloud specifies the Venafi cloud configuration settings.\n                      Only one of TPP or Cloud may be specified.\n                    properties:\n                      apiTokenSecretRef:\n                        description: APITokenSecretRef is a secret key selector for\n                          the Venafi Cloud API token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: URL is the base URL for Venafi Cloud. Defaults\n                          to \"https://api.venafi.cloud/v1\".\n                        type: string\n                    required:\n                    - apiTokenSecretRef\n                    type: object\n                  tpp:\n                    description: TPP specifies Trust Protection Platform configuration\n                      settings. Only one of TPP or Cloud may be specified.\n                    properties:\n                      caBundle:\n                        description: CABundle is a PEM encoded TLS certificate to\n                          use to verify connections to the TPP instance. If specified,\n                          system roots will not be used and the issuing CA for the\n                          TPP instance must be verifiable using the provided root.\n                          If not specified, the connection will be verified using\n                          the cert-manager system root certificates.\n                        format: byte\n                        type: string\n                      credentialsRef:\n                        description: CredentialsRef is a reference to a Secret containing\n                          the username and password for the TPP server. The secret\n                          must contain two keys, 'username' and 'password'.\n                        properties:\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: 'URL is the base URL for the vedsdk endpoint\n                          of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".'\n                        type: string\n                    required:\n                    - credentialsRef\n                    - url\n                    type: object\n                  zone:\n                    description: Zone is the Venafi Policy Zone to use for this issuer.\n                      All requests made to the Venafi platform will be restricted\n                      by the named zone policy. This field is required.\n                    type: string\n                required:\n                - zone\n                type: object\n            type: object\n          status:\n            description: Status of the ClusterIssuer. This is set and managed automatically.\n            properties:\n              acme:\n                description: ACME specific status options. This field should only\n                  be set if the Issuer is configured to use an ACME server to issue\n                  certificates.\n                properties:\n                  lastRegisteredEmail:\n                    description: LastRegisteredEmail is the email associated with\n                      the latest registered ACME account, in order to track changes\n                      made to registered account associated with the  Issuer\n                    type: string\n                  uri:\n                    description: URI is the unique account identifier, which can also\n                      be used to retrieve account details from the CA\n                    type: string\n                type: object\n              conditions:\n                description: List of status conditions to indicate the status of a\n                  CertificateRequest. Known condition types are `Ready`.\n                items:\n                  description: IssuerCondition contains condition information for\n                    an Issuer.\n                  properties:\n                    lastTransitionTime:\n                      description: LastTransitionTime is the timestamp corresponding\n                        to the last status change of this condition.\n                      format: date-time\n                      type: string\n                    message:\n                      description: Message is a human readable description of the\n                        details of the last transition, complementing reason.\n                      type: string\n                    reason:\n                      description: Reason is a brief machine readable explanation\n                        for the condition's last transition.\n                      type: string\n                    status:\n                      description: Status of the condition, one of ('True', 'False',\n                        'Unknown').\n                      enum:\n                      - \"True\"\n                      - \"False\"\n                      - Unknown\n                      type: string\n                    type:\n                      description: Type of the condition, known values are ('Ready').\n                      type: string\n                  required:\n                  - status\n                  - type\n                  type: object\n                type: array\n            type: object\n        required:\n        - spec\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].status\n      name: Ready\n      type: string\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].message\n      name: Status\n      priority: 1\n      type: string\n    - description: CreationTimestamp is a timestamp representing the server time when\n        this object was created. It is not guaranteed to be set in happens-before\n        order across separate operations. Clients may not set this value. It is represented\n        in RFC3339 form and is in UTC.\n      jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1\n    schema:\n      openAPIV3Schema:\n        description: A ClusterIssuer represents a certificate issuing authority which\n          can be referenced as part of `issuerRef` fields. It is similar to an Issuer,\n          however it is cluster-scoped and therefore can be referenced by resources\n          that exist in *any* namespace, not just the same namespace as the referent.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: Desired state of the ClusterIssuer resource.\n            properties:\n              acme:\n                description: ACME configures this issuer to communicate with a RFC8555\n                  (ACME) server to obtain signed x509 certificates.\n                properties:\n                  disableAccountKeyGeneration:\n                    description: Enables or disables generating a new ACME account\n                      key. If true, the Issuer resource will *not* request a new account\n                      but will expect the account key to be supplied via an existing\n                      secret. If false, the cert-manager system will generate a new\n                      ACME account key for the Issuer. Defaults to false.\n                    type: boolean\n                  email:\n                    description: Email is the email address to be associated with\n                      the ACME account. This field is optional, but it is strongly\n                      recommended to be set. It will be used to contact you in case\n                      of issues with your account or certificates, including expiry\n                      notification emails. This field may be updated after the account\n                      is initially registered.\n                    type: string\n                  externalAccountBinding:\n                    description: ExternalAccountBinding is a reference to a CA external\n                      account of the ACME server. If set, upon registration cert-manager\n                      will attempt to associate the given external account credentials\n                      with the registered ACME account.\n                    properties:\n                      keyAlgorithm:\n                        description: keyAlgorithm is the MAC key algorithm that the\n                          key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".\n                        enum:\n                        - HS256\n                        - HS384\n                        - HS512\n                        type: string\n                      keyID:\n                        description: keyID is the ID of the CA key that the External\n                          Account is bound to.\n                        type: string\n                      keySecretRef:\n                        description: keySecretRef is a Secret Key Selector referencing\n                          a data item in a Kubernetes Secret which holds the symmetric\n                          MAC key of the External Account Binding. The `key` is the\n                          index string that is paired with the key data in the Secret\n                          and should not be confused with the key data itself, or\n                          indeed with the External Account Binding keyID above. The\n                          secret key stored in the Secret **must** be un-padded, base64\n                          URL encoded data.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    required:\n                    - keyAlgorithm\n                    - keyID\n                    - keySecretRef\n                    type: object\n                  preferredChain:\n                    description: 'PreferredChain is the chain to use if the ACME server\n                      outputs multiple. PreferredChain is no guarantee that this one\n                      gets delivered by the ACME endpoint. For example, for Let''s\n                      Encrypt''s DST crosssign you would use: \"DST Root CA X3\" or\n                      \"ISRG Root X1\" for the newer Let''s Encrypt root CA. This value\n                      picks the first certificate bundle in the ACME alternative chains\n                      that has a certificate with this value as its issuer''s CN'\n                    maxLength: 64\n                    type: string\n                  privateKeySecretRef:\n                    description: PrivateKey is the name of a Kubernetes Secret resource\n                      that will be used to store the automatically generated ACME\n                      account private key. Optionally, a `key` may be specified to\n                      select a specific entry within the named Secret resource. If\n                      `key` is not specified, a default of `tls.key` will be used.\n                    properties:\n                      key:\n                        description: The key of the entry in the Secret resource's\n                          `data` field to be used. Some instances of this field may\n                          be defaulted, in others it may be required.\n                        type: string\n                      name:\n                        description: 'Name of the resource being referred to. More\n                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                        type: string\n                    required:\n                    - name\n                    type: object\n                  server:\n                    description: 'Server is the URL used to access the ACME server''s\n                      ''directory'' endpoint. For example, for Let''s Encrypt''s staging\n                      endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\".\n                      Only ACME v2 endpoints (i.e. RFC 8555) are supported.'\n                    type: string\n                  skipTLSVerify:\n                    description: Enables or disables validation of the ACME server\n                      TLS certificate. If true, requests to the ACME server will not\n                      have their TLS certificate validated (i.e. insecure connections\n                      will be allowed). Only enable this option in development environments.\n                      The cert-manager system installed roots will be used to verify\n                      connections to the ACME server if this is false. Defaults to\n                      false.\n                    type: boolean\n                  solvers:\n                    description: 'Solvers is a list of challenge solvers that will\n                      be used to solve ACME challenges for the matching domains. Solver\n                      configurations must be provided in order to obtain certificates\n                      from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/'\n                    items:\n                      description: Configures an issuer to solve challenges using\n                        the specified options. Only one of HTTP01 or DNS01 may be\n                        provided.\n                      properties:\n                        dns01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the DNS01 challenge flow.\n                          properties:\n                            acmeDNS:\n                              description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)\n                                API to manage DNS01 challenge records.\n                              properties:\n                                accountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                host:\n                                  type: string\n                              required:\n                              - accountSecretRef\n                              - host\n                              type: object\n                            akamai:\n                              description: Use the Akamai DNS zone management API\n                                to manage DNS01 challenge records.\n                              properties:\n                                accessTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientSecretSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                serviceConsumerDomain:\n                                  type: string\n                              required:\n                              - accessTokenSecretRef\n                              - clientSecretSecretRef\n                              - clientTokenSecretRef\n                              - serviceConsumerDomain\n                              type: object\n                            azureDNS:\n                              description: Use the Microsoft Azure DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                clientID:\n                                  description: if both this and ClientSecret are left\n                                    unset MSI will be used\n                                  type: string\n                                clientSecretSecretRef:\n                                  description: if both this and ClientID are left\n                                    unset MSI will be used\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                environment:\n                                  enum:\n                                  - AzurePublicCloud\n                                  - AzureChinaCloud\n                                  - AzureGermanCloud\n                                  - AzureUSGovernmentCloud\n                                  type: string\n                                hostedZoneName:\n                                  type: string\n                                resourceGroupName:\n                                  type: string\n                                subscriptionID:\n                                  type: string\n                                tenantID:\n                                  description: when specifying ClientID and ClientSecret\n                                    then this field is also needed\n                                  type: string\n                              required:\n                              - resourceGroupName\n                              - subscriptionID\n                              type: object\n                            cloudDNS:\n                              description: Use the Google Cloud DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                hostedZoneName:\n                                  description: HostedZoneName is an optional field\n                                    that tells cert-manager in which Cloud DNS zone\n                                    the challenge record has to be created. If left\n                                    empty cert-manager will automatically choose a\n                                    zone.\n                                  type: string\n                                project:\n                                  type: string\n                                serviceAccountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - project\n                              type: object\n                            cloudflare:\n                              description: Use the Cloudflare API to manage DNS01\n                                challenge records.\n                              properties:\n                                apiKeySecretRef:\n                                  description: 'API key to use to authenticate with\n                                    Cloudflare. Note: using an API token to authenticate\n                                    is now the recommended method as it allows greater\n                                    control of permissions.'\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                apiTokenSecretRef:\n                                  description: API token used to authenticate with\n                                    Cloudflare.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                email:\n                                  description: Email of the account, only required\n                                    when using API key based authentication.\n                                  type: string\n                              type: object\n                            cnameStrategy:\n                              description: CNAMEStrategy configures how the DNS01\n                                provider should handle CNAME records when found in\n                                DNS zones.\n                              enum:\n                              - None\n                              - Follow\n                              type: string\n                            digitalocean:\n                              description: Use the DigitalOcean DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                tokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - tokenSecretRef\n                              type: object\n                            rfc2136:\n                              description: Use RFC2136 (\"Dynamic Updates in the Domain\n                                Name System\") (https://datatracker.ietf.org/doc/rfc2136/)\n                                to manage DNS01 challenge records.\n                              properties:\n                                nameserver:\n                                  description: The IP address or hostname of an authoritative\n                                    DNS server supporting RFC2136 in the form host:port.\n                                    If the host is an IPv6 address it must be enclosed\n                                    in square brackets (e.g [2001:db8::1]) ; port\n                                    is optional. This field is required.\n                                  type: string\n                                tsigAlgorithm:\n                                  description: 'The TSIG Algorithm configured in the\n                                    DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``\n                                    and ``tsigKeyName`` are defined. Supported values\n                                    are (case-insensitive): ``HMACMD5`` (default),\n                                    ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'\n                                  type: string\n                                tsigKeyName:\n                                  description: The TSIG Key name configured in the\n                                    DNS. If ``tsigSecretSecretRef`` is defined, this\n                                    field is required.\n                                  type: string\n                                tsigSecretSecretRef:\n                                  description: The name of the secret containing the\n                                    TSIG value. If ``tsigKeyName`` is defined, this\n                                    field is required.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - nameserver\n                              type: object\n                            route53:\n                              description: Use the AWS Route53 API to manage DNS01\n                                challenge records.\n                              properties:\n                                accessKeyID:\n                                  description: 'The AccessKeyID is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata see:\n                                    https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'\n                                  type: string\n                                hostedZoneID:\n                                  description: If set, the provider will manage only\n                                    this zone in Route53 and will not do an lookup\n                                    using the route53:ListHostedZonesByName api call.\n                                  type: string\n                                region:\n                                  description: Always set the region when using AccessKeyID\n                                    and SecretAccessKey\n                                  type: string\n                                role:\n                                  description: Role is a Role ARN which the Route53\n                                    provider will assume using either the explicit\n                                    credentials AccessKeyID/SecretAccessKey or the\n                                    inferred credentials from environment variables,\n                                    shared credentials file or AWS Instance metadata\n                                  type: string\n                                secretAccessKeySecretRef:\n                                  description: The SecretAccessKey is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - region\n                              type: object\n                            webhook:\n                              description: Configure an external webhook based DNS01\n                                challenge solver to manage DNS01 challenge records.\n                              properties:\n                                config:\n                                  description: Additional configuration that should\n                                    be passed to the webhook apiserver when challenges\n                                    are processed. This can contain arbitrary JSON\n                                    data. Secret values should not be specified in\n                                    this stanza. If secret values are needed (e.g.\n                                    credentials for a DNS service), you should use\n                                    a SecretKeySelector to reference a Secret resource.\n                                    For details on the schema of this field, consult\n                                    the webhook provider implementation's documentation.\n                                  x-kubernetes-preserve-unknown-fields: true\n                                groupName:\n                                  description: The API group name that should be used\n                                    when POSTing ChallengePayload resources to the\n                                    webhook apiserver. This should be the same as\n                                    the GroupName specified in the webhook provider\n                                    implementation.\n                                  type: string\n                                solverName:\n                                  description: The name of the solver to use, as defined\n                                    in the webhook provider implementation. This will\n                                    typically be the name of the provider, e.g. 'cloudflare'.\n                                  type: string\n                              required:\n                              - groupName\n                              - solverName\n                              type: object\n                          type: object\n                        http01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the HTTP01 challenge flow.\n                            It is not possible to obtain certificates for wildcard\n                            domain names (e.g. `*.example.com`) using the HTTP01 challenge\n                            mechanism.\n                          properties:\n                            ingress:\n                              description: The ingress based HTTP01 challenge solver\n                                will solve challenges by creating or modifying Ingress\n                                resources in order to route requests for '/.well-known/acme-challenge/XYZ'\n                                to 'challenge solver' pods that are provisioned by\n                                cert-manager for each Challenge to be completed.\n                              properties:\n                                class:\n                                  description: The ingress class to use when creating\n                                    Ingress resources to solve ACME challenges that\n                                    use this challenge solver. Only one of 'class'\n                                    or 'name' may be specified.\n                                  type: string\n                                ingressTemplate:\n                                  description: Optional ingress template used to configure\n                                    the ACME challenge solver ingress used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the ingress\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the created ACME HTTP01 solver\n                                            ingress.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver ingress.\n                                          type: object\n                                      type: object\n                                  type: object\n                                name:\n                                  description: The name of the ingress resource that\n                                    should have ACME challenge solving routes inserted\n                                    into it in order to solve HTTP01 challenges. This\n                                    is typically used in conjunction with ingress\n                                    controllers like ingress-gce, which maintains\n                                    a 1:1 mapping between external IPs and ingress\n                                    resources.\n                                  type: string\n                                podTemplate:\n                                  description: Optional pod template used to configure\n                                    the ACME challenge solver pods used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the pod\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the create ACME HTTP01 solver\n                                            pods.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver pods.\n                                          type: object\n                                      type: object\n                                    spec:\n                                      description: PodSpec defines overrides for the\n                                        HTTP01 challenge solver pod. Only the 'priorityClassName',\n                                        'nodeSelector', 'affinity', 'serviceAccountName'\n                                        and 'tolerations' fields are supported currently.\n                                        All other fields will be ignored.\n                                      properties:\n                                        affinity:\n                                          description: If specified, the pod's scheduling\n                                            constraints\n                                          properties:\n                                            nodeAffinity:\n                                              description: Describes node affinity\n                                                scheduling rules for the pod.\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node matches\n                                                    the corresponding matchExpressions;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: An empty preferred\n                                                      scheduling term matches all\n                                                      objects with implicit weight\n                                                      0 (i.e. it's a no-op). A null\n                                                      preferred scheduling term matches\n                                                      no objects (i.e. is also a no-op).\n                                                    properties:\n                                                      preference:\n                                                        description: A node selector\n                                                          term, associated with the\n                                                          corresponding weight.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      weight:\n                                                        description: Weight associated\n                                                          with matching the corresponding\n                                                          nodeSelectorTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - preference\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to an\n                                                    update), the system may or may\n                                                    not try to eventually evict the\n                                                    pod from its node.\n                                                  properties:\n                                                    nodeSelectorTerms:\n                                                      description: Required. A list\n                                                        of node selector terms. The\n                                                        terms are ORed.\n                                                      items:\n                                                        description: A null or empty\n                                                          node selector term matches\n                                                          no objects. The requirements\n                                                          of them are ANDed. The TopologySelectorTerm\n                                                          type implements a subset\n                                                          of the NodeSelectorTerm.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      type: array\n                                                  required:\n                                                  - nodeSelectorTerms\n                                                  type: object\n                                              type: object\n                                            podAffinity:\n                                              description: Describes pod affinity\n                                                scheduling rules (e.g. co-locate this\n                                                pod in the same node, zone, etc. as\n                                                some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node has pods\n                                                    which matches the corresponding\n                                                    podAffinityTerm; the node(s) with\n                                                    the highest sum are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to a pod\n                                                    label update), the system may\n                                                    or may not try to eventually evict\n                                                    the pod from its node. When there\n                                                    are multiple elements, the lists\n                                                    of nodes corresponding to each\n                                                    podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                            podAntiAffinity:\n                                              description: Describes pod anti-affinity\n                                                scheduling rules (e.g. avoid putting\n                                                this pod in the same node, zone, etc.\n                                                as some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the anti-affinity\n                                                    expressions specified by this\n                                                    field, but it may choose a node\n                                                    that violates one or more of the\n                                                    expressions. The node that is\n                                                    most preferred is the one with\n                                                    the greatest sum of weights, i.e.\n                                                    for each node that meets all of\n                                                    the scheduling requirements (resource\n                                                    request, requiredDuringScheduling\n                                                    anti-affinity expressions, etc.),\n                                                    compute a sum by iterating through\n                                                    the elements of this field and\n                                                    adding \"weight\" to the sum if\n                                                    the node has pods which matches\n                                                    the corresponding podAffinityTerm;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the anti-affinity\n                                                    requirements specified by this\n                                                    field are not met at scheduling\n                                                    time, the pod will not be scheduled\n                                                    onto the node. If the anti-affinity\n                                                    requirements specified by this\n                                                    field cease to be met at some\n                                                    point during pod execution (e.g.\n                                                    due to a pod label update), the\n                                                    system may or may not try to eventually\n                                                    evict the pod from its node. When\n                                                    there are multiple elements, the\n                                                    lists of nodes corresponding to\n                                                    each podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                          type: object\n                                        nodeSelector:\n                                          additionalProperties:\n                                            type: string\n                                          description: 'NodeSelector is a selector\n                                            which must be true for the pod to fit\n                                            on a node. Selector which must match a\n                                            node''s labels for the pod to be scheduled\n                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'\n                                          type: object\n                                        priorityClassName:\n                                          description: If specified, the pod's priorityClassName.\n                                          type: string\n                                        serviceAccountName:\n                                          description: If specified, the pod's service\n                                            account\n                                          type: string\n                                        tolerations:\n                                          description: If specified, the pod's tolerations.\n                                          items:\n                                            description: The pod this Toleration is\n                                              attached to tolerates any taint that\n                                              matches the triple <key,value,effect>\n                                              using the matching operator <operator>.\n                                            properties:\n                                              effect:\n                                                description: Effect indicates the\n                                                  taint effect to match. Empty means\n                                                  match all taint effects. When specified,\n                                                  allowed values are NoSchedule, PreferNoSchedule\n                                                  and NoExecute.\n                                                type: string\n                                              key:\n                                                description: Key is the taint key\n                                                  that the toleration applies to.\n                                                  Empty means match all taint keys.\n                                                  If the key is empty, operator must\n                                                  be Exists; this combination means\n                                                  to match all values and all keys.\n                                                type: string\n                                              operator:\n                                                description: Operator represents a\n                                                  key's relationship to the value.\n                                                  Valid operators are Exists and Equal.\n                                                  Defaults to Equal. Exists is equivalent\n                                                  to wildcard for value, so that a\n                                                  pod can tolerate all taints of a\n                                                  particular category.\n                                                type: string\n                                              tolerationSeconds:\n                                                description: TolerationSeconds represents\n                                                  the period of time the toleration\n                                                  (which must be of effect NoExecute,\n                                                  otherwise this field is ignored)\n                                                  tolerates the taint. By default,\n                                                  it is not set, which means tolerate\n                                                  the taint forever (do not evict).\n                                                  Zero and negative values will be\n                                                  treated as 0 (evict immediately)\n                                                  by the system.\n                                                format: int64\n                                                type: integer\n                                              value:\n                                                description: Value is the taint value\n                                                  the toleration matches to. If the\n                                                  operator is Exists, the value should\n                                                  be empty, otherwise just a regular\n                                                  string.\n                                                type: string\n                                            type: object\n                                          type: array\n                                      type: object\n                                  type: object\n                                serviceType:\n                                  description: Optional service type for Kubernetes\n                                    solver service\n                                  type: string\n                              type: object\n                          type: object\n                        selector:\n                          description: Selector selects a set of DNSNames on the Certificate\n                            resource that should be solved using this challenge solver.\n                            If not specified, the solver will be treated as the 'default'\n                            solver with the lowest priority, i.e. if any other solver\n                            has a more specific match, it will be used instead.\n                          properties:\n                            dnsNames:\n                              description: List of DNSNames that this solver will\n                                be used to solve. If specified and a match is found,\n                                a dnsNames selector will take precedence over a dnsZones\n                                selector. If multiple solvers match with the same\n                                dnsNames value, the solver with the most matching\n                                labels in matchLabels will be selected. If neither\n                                has more matches, the solver defined earlier in the\n                                list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            dnsZones:\n                              description: List of DNSZones that this solver will\n                                be used to solve. The most specific DNS zone match\n                                specified here will take precedence over other DNS\n                                zone matches, so a solver specifying sys.example.com\n                                will be selected over one specifying example.com for\n                                the domain www.sys.example.com. If multiple solvers\n                                match with the same dnsZones value, the solver with\n                                the most matching labels in matchLabels will be selected.\n                                If neither has more matches, the solver defined earlier\n                                in the list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            matchLabels:\n                              additionalProperties:\n                                type: string\n                              description: A label selector that is used to refine\n                                the set of certificate's that this challenge solver\n                                will apply to.\n                              type: object\n                          type: object\n                      type: object\n                    type: array\n                required:\n                - privateKeySecretRef\n                - server\n                type: object\n              ca:\n                description: CA configures this issuer to sign certificates using\n                  a signing CA keypair stored in a Secret resource. This is used to\n                  build internal PKIs that are managed by cert-manager.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set,\n                      certificates will be issued without distribution points set.\n                    items:\n                      type: string\n                    type: array\n                  secretName:\n                    description: SecretName is the name of the secret used to sign\n                      Certificates issued by this Issuer.\n                    type: string\n                required:\n                - secretName\n                type: object\n              selfSigned:\n                description: SelfSigned configures this issuer to 'self sign' certificates\n                  using the private key used to create the CertificateRequest object.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set\n                      certificate will be issued without CDP. Values are strings.\n                    items:\n                      type: string\n                    type: array\n                type: object\n              vault:\n                description: Vault configures this issuer to sign certificates using\n                  a HashiCorp Vault PKI backend.\n                properties:\n                  auth:\n                    description: Auth configures how cert-manager authenticates with\n                      the Vault server.\n                    properties:\n                      appRole:\n                        description: AppRole authenticates with Vault using the App\n                          Role auth mechanism, with the role and secret stored in\n                          a Kubernetes Secret resource.\n                        properties:\n                          path:\n                            description: 'Path where the App Role authentication backend\n                              is mounted in Vault, e.g: \"approle\"'\n                            type: string\n                          roleId:\n                            description: RoleID configured in the App Role authentication\n                              backend when setting up the authentication backend in\n                              Vault.\n                            type: string\n                          secretRef:\n                            description: Reference to a key in a Secret that contains\n                              the App Role secret used to authenticate with Vault.\n                              The `key` field must be specified and denotes which\n                              entry within the Secret resource is used as the app\n                              role secret.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - path\n                        - roleId\n                        - secretRef\n                        type: object\n                      kubernetes:\n                        description: Kubernetes authenticates with Vault by passing\n                          the ServiceAccount token stored in the named Secret resource\n                          to the Vault server.\n                        properties:\n                          mountPath:\n                            description: The Vault mountPath here is the mount path\n                              to use when authenticating with Vault. For example,\n                              setting a value to `/v1/auth/foo`, will use the path\n                              `/v1/auth/foo/login` to authenticate with Vault. If\n                              unspecified, the default value \"/v1/auth/kubernetes\"\n                              will be used.\n                            type: string\n                          role:\n                            description: A required field containing the Vault Role\n                              to assume. A Role binds a Kubernetes ServiceAccount\n                              with a set of Vault policies.\n                            type: string\n                          secretRef:\n                            description: The required Secret field containing a Kubernetes\n                              ServiceAccount JWT used for authenticating with Vault.\n                              Use of 'ambient credentials' is not supported.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - role\n                        - secretRef\n                        type: object\n                      tokenSecretRef:\n                        description: TokenSecretRef authenticates with Vault by presenting\n                          a token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    type: object\n                  caBundle:\n                    description: PEM encoded CA bundle used to validate Vault server\n                      certificate. Only used if the Server URL is using HTTPS protocol.\n                      This parameter is ignored for plain HTTP protocol connection.\n                      If not set the system root certificates are used to validate\n                      the TLS connection.\n                    format: byte\n                    type: string\n                  namespace:\n                    description: 'Name of the vault namespace. Namespaces is a set\n                      of features within Vault Enterprise that allows Vault environments\n                      to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces\n                      can be found here https://www.vaultproject.io/docs/enterprise/namespaces'\n                    type: string\n                  path:\n                    description: 'Path is the mount path of the Vault PKI backend''s\n                      `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".'\n                    type: string\n                  server:\n                    description: 'Server is the connection address for the Vault server,\n                      e.g: \"https://vault.example.com:8200\".'\n                    type: string\n                required:\n                - auth\n                - path\n                - server\n                type: object\n              venafi:\n                description: Venafi configures this issuer to sign certificates using\n                  a Venafi TPP or Venafi Cloud policy zone.\n                properties:\n                  cloud:\n                    description: Cloud specifies the Venafi cloud configuration settings.\n                      Only one of TPP or Cloud may be specified.\n                    properties:\n                      apiTokenSecretRef:\n                        description: APITokenSecretRef is a secret key selector for\n                          the Venafi Cloud API token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: URL is the base URL for Venafi Cloud. Defaults\n                          to \"https://api.venafi.cloud/v1\".\n                        type: string\n                    required:\n                    - apiTokenSecretRef\n                    type: object\n                  tpp:\n                    description: TPP specifies Trust Protection Platform configuration\n                      settings. Only one of TPP or Cloud may be specified.\n                    properties:\n                      caBundle:\n                        description: CABundle is a PEM encoded TLS certificate to\n                          use to verify connections to the TPP instance. If specified,\n                          system roots will not be used and the issuing CA for the\n                          TPP instance must be verifiable using the provided root.\n                          If not specified, the connection will be verified using\n                          the cert-manager system root certificates.\n                        format: byte\n                        type: string\n                      credentialsRef:\n                        description: CredentialsRef is a reference to a Secret containing\n                          the username and password for the TPP server. The secret\n                          must contain two keys, 'username' and 'password'.\n                        properties:\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: 'URL is the base URL for the vedsdk endpoint\n                          of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".'\n                        type: string\n                    required:\n                    - credentialsRef\n                    - url\n                    type: object\n                  zone:\n                    description: Zone is the Venafi Policy Zone to use for this issuer.\n                      All requests made to the Venafi platform will be restricted\n                      by the named zone policy. This field is required.\n                    type: string\n                required:\n                - zone\n                type: object\n            type: object\n          status:\n            description: Status of the ClusterIssuer. This is set and managed automatically.\n            properties:\n              acme:\n                description: ACME specific status options. This field should only\n                  be set if the Issuer is configured to use an ACME server to issue\n                  certificates.\n                properties:\n                  lastRegisteredEmail:\n                    description: LastRegisteredEmail is the email associated with\n                      the latest registered ACME account, in order to track changes\n                      made to registered account associated with the  Issuer\n                    type: string\n                  uri:\n                    description: URI is the unique account identifier, which can also\n                      be used to retrieve account details from the CA\n                    type: string\n                type: object\n              conditions:\n                description: List of status conditions to indicate the status of a\n                  CertificateRequest. Known condition types are `Ready`.\n                items:\n                  description: IssuerCondition contains condition information for\n                    an Issuer.\n                  properties:\n                    lastTransitionTime:\n                      description: LastTransitionTime is the timestamp corresponding\n                        to the last status change of this condition.\n                      format: date-time\n                      type: string\n                    message:\n                      description: Message is a human readable description of the\n                        details of the last transition, complementing reason.\n                      type: string\n                    reason:\n                      description: Reason is a brief machine readable explanation\n                        for the condition's last transition.\n                      type: string\n                    status:\n                      description: Status of the condition, one of ('True', 'False',\n                        'Unknown').\n                      enum:\n                      - \"True\"\n                      - \"False\"\n                      - Unknown\n                      type: string\n                    type:\n                      description: Type of the condition, known values are ('Ready').\n                      type: string\n                  required:\n                  - status\n                  - type\n                  type: object\n                type: array\n            type: object\n        required:\n        - spec\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\nstatus:\n  acceptedNames:\n    kind: \"\"\n    plural: \"\"\n  conditions: []\n  storedVersions: []"
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: fh5JdorJln3r3io
  name: cert-manager-setup-issuers-crd
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
data:
  crds.yaml: "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    cert-manager.io/inject-ca-from-secret: default/release-name-webhook-ca\n    helm.sh/hook: crd-install\n    helm.sh/hook-delete-policy: before-hook-creation    \n  labels:\n    app: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/name: cert-manager\n  name: issuers.cert-manager.io\nspec:\n  conversion:\n    strategy: Webhook\n    webhook:\n      clientConfig:\n        service:\n          name: release-name-webhook\n          namespace: default\n          path: /convert\n      conversionReviewVersions:\n      - v1\n      - v1beta1\n  group: cert-manager.io\n  names:\n    kind: Issuer\n    listKind: IssuerList\n    plural: issuers\n    singular: issuer\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].status\n      name: Ready\n      type: string\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].message\n      name: Status\n      priority: 1\n      type: string\n    - description: CreationTimestamp is a timestamp representing the server time when\n        this object was created. It is not guaranteed to be set in happens-before\n        order across separate operations. Clients may not set this value. It is represented\n        in RFC3339 form and is in UTC.\n      jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1alpha2\n    schema:\n      openAPIV3Schema:\n        description: An Issuer represents a certificate issuing authority which can\n          be referenced as part of `issuerRef` fields. It is scoped to a single namespace\n          and can therefore only be referenced by resources within the same namespace.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: Desired state of the Issuer resource.\n            properties:\n              acme:\n                description: ACME configures this issuer to communicate with a RFC8555\n                  (ACME) server to obtain signed x509 certificates.\n                properties:\n                  disableAccountKeyGeneration:\n                    description: Enables or disables generating a new ACME account\n                      key. If true, the Issuer resource will *not* request a new account\n                      but will expect the account key to be supplied via an existing\n                      secret. If false, the cert-manager system will generate a new\n                      ACME account key for the Issuer. Defaults to false.\n                    type: boolean\n                  email:\n                    description: Email is the email address to be associated with\n                      the ACME account. This field is optional, but it is strongly\n                      recommended to be set. It will be used to contact you in case\n                      of issues with your account or certificates, including expiry\n                      notification emails. This field may be updated after the account\n                      is initially registered.\n                    type: string\n                  externalAccountBinding:\n                    description: ExternalAccountBinding is a reference to a CA external\n                      account of the ACME server. If set, upon registration cert-manager\n                      will attempt to associate the given external account credentials\n                      with the registered ACME account.\n                    properties:\n                      keyAlgorithm:\n                        description: keyAlgorithm is the MAC key algorithm that the\n                          key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".\n                        enum:\n                        - HS256\n                        - HS384\n                        - HS512\n                        type: string\n                      keyID:\n                        description: keyID is the ID of the CA key that the External\n                          Account is bound to.\n                        type: string\n                      keySecretRef:\n                        description: keySecretRef is a Secret Key Selector referencing\n                          a data item in a Kubernetes Secret which holds the symmetric\n                          MAC key of the External Account Binding. The `key` is the\n                          index string that is paired with the key data in the Secret\n                          and should not be confused with the key data itself, or\n                          indeed with the External Account Binding keyID above. The\n                          secret key stored in the Secret **must** be un-padded, base64\n                          URL encoded data.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    required:\n                    - keyAlgorithm\n                    - keyID\n                    - keySecretRef\n                    type: object\n                  preferredChain:\n                    description: 'PreferredChain is the chain to use if the ACME server\n                      outputs multiple. PreferredChain is no guarantee that this one\n                      gets delivered by the ACME endpoint. For example, for Let''s\n                      Encrypt''s DST crosssign you would use: \"DST Root CA X3\" or\n                      \"ISRG Root X1\" for the newer Let''s Encrypt root CA. This value\n                      picks the first certificate bundle in the ACME alternative chains\n                      that has a certificate with this value as its issuer''s CN'\n                    maxLength: 64\n                    type: string\n                  privateKeySecretRef:\n                    description: PrivateKey is the name of a Kubernetes Secret resource\n                      that will be used to store the automatically generated ACME\n                      account private key. Optionally, a `key` may be specified to\n                      select a specific entry within the named Secret resource. If\n                      `key` is not specified, a default of `tls.key` will be used.\n                    properties:\n                      key:\n                        description: The key of the entry in the Secret resource's\n                          `data` field to be used. Some instances of this field may\n                          be defaulted, in others it may be required.\n                        type: string\n                      name:\n                        description: 'Name of the resource being referred to. More\n                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                        type: string\n                    required:\n                    - name\n                    type: object\n                  server:\n                    description: 'Server is the URL used to access the ACME server''s\n                      ''directory'' endpoint. For example, for Let''s Encrypt''s staging\n                      endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\".\n                      Only ACME v2 endpoints (i.e. RFC 8555) are supported.'\n                    type: string\n                  skipTLSVerify:\n                    description: Enables or disables validation of the ACME server\n                      TLS certificate. If true, requests to the ACME server will not\n                      have their TLS certificate validated (i.e. insecure connections\n                      will be allowed). Only enable this option in development environments.\n                      The cert-manager system installed roots will be used to verify\n                      connections to the ACME server if this is false. Defaults to\n                      false.\n                    type: boolean\n                  solvers:\n                    description: 'Solvers is a list of challenge solvers that will\n                      be used to solve ACME challenges for the matching domains. Solver\n                      configurations must be provided in order to obtain certificates\n                      from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/'\n                    items:\n                      description: Configures an issuer to solve challenges using\n                        the specified options. Only one of HTTP01 or DNS01 may be\n                        provided.\n                      properties:\n                        dns01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the DNS01 challenge flow.\n                          properties:\n                            acmedns:\n                              description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)\n                                API to manage DNS01 challenge records.\n                              properties:\n                                accountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                host:\n                                  type: string\n                              required:\n                              - accountSecretRef\n                              - host\n                              type: object\n                            akamai:\n                              description: Use the Akamai DNS zone management API\n                                to manage DNS01 challenge records.\n                              properties:\n                                accessTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientSecretSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                serviceConsumerDomain:\n                                  type: string\n                              required:\n                              - accessTokenSecretRef\n                              - clientSecretSecretRef\n                              - clientTokenSecretRef\n                              - serviceConsumerDomain\n                              type: object\n                            azuredns:\n                              description: Use the Microsoft Azure DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                clientID:\n                                  description: if both this and ClientSecret are left\n                                    unset MSI will be used\n                                  type: string\n                                clientSecretSecretRef:\n                                  description: if both this and ClientID are left\n                                    unset MSI will be used\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                environment:\n                                  enum:\n                                  - AzurePublicCloud\n                                  - AzureChinaCloud\n                                  - AzureGermanCloud\n                                  - AzureUSGovernmentCloud\n                                  type: string\n                                hostedZoneName:\n                                  type: string\n                                resourceGroupName:\n                                  type: string\n                                subscriptionID:\n                                  type: string\n                                tenantID:\n                                  description: when specifying ClientID and ClientSecret\n                                    then this field is also needed\n                                  type: string\n                              required:\n                              - resourceGroupName\n                              - subscriptionID\n                              type: object\n                            clouddns:\n                              description: Use the Google Cloud DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                hostedZoneName:\n                                  description: HostedZoneName is an optional field\n                                    that tells cert-manager in which Cloud DNS zone\n                                    the challenge record has to be created. If left\n                                    empty cert-manager will automatically choose a\n                                    zone.\n                                  type: string\n                                project:\n                                  type: string\n                                serviceAccountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - project\n                              type: object\n                            cloudflare:\n                              description: Use the Cloudflare API to manage DNS01\n                                challenge records.\n                              properties:\n                                apiKeySecretRef:\n                                  description: 'API key to use to authenticate with\n                                    Cloudflare. Note: using an API token to authenticate\n                                    is now the recommended method as it allows greater\n                                    control of permissions.'\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                apiTokenSecretRef:\n                                  description: API token used to authenticate with\n                                    Cloudflare.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                email:\n                                  description: Email of the account, only required\n                                    when using API key based authentication.\n                                  type: string\n                              type: object\n                            cnameStrategy:\n                              description: CNAMEStrategy configures how the DNS01\n                                provider should handle CNAME records when found in\n                                DNS zones.\n                              enum:\n                              - None\n                              - Follow\n                              type: string\n                            digitalocean:\n                              description: Use the DigitalOcean DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                tokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - tokenSecretRef\n                              type: object\n                            rfc2136:\n                              description: Use RFC2136 (\"Dynamic Updates in the Domain\n                                Name System\") (https://datatracker.ietf.org/doc/rfc2136/)\n                                to manage DNS01 challenge records.\n                              properties:\n                                nameserver:\n                                  description: The IP address or hostname of an authoritative\n                                    DNS server supporting RFC2136 in the form host:port.\n                                    If the host is an IPv6 address it must be enclosed\n                                    in square brackets (e.g [2001:db8::1]) ; port\n                                    is optional. This field is required.\n                                  type: string\n                                tsigAlgorithm:\n                                  description: 'The TSIG Algorithm configured in the\n                                    DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``\n                                    and ``tsigKeyName`` are defined. Supported values\n                                    are (case-insensitive): ``HMACMD5`` (default),\n                                    ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'\n                                  type: string\n                                tsigKeyName:\n                                  description: The TSIG Key name configured in the\n                                    DNS. If ``tsigSecretSecretRef`` is defined, this\n                                    field is required.\n                                  type: string\n                                tsigSecretSecretRef:\n                                  description: The name of the secret containing the\n                                    TSIG value. If ``tsigKeyName`` is defined, this\n                                    field is required.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - nameserver\n                              type: object\n                            route53:\n                              description: Use the AWS Route53 API to manage DNS01\n                                challenge records.\n                              properties:\n                                accessKeyID:\n                                  description: 'The AccessKeyID is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata see:\n                                    https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'\n                                  type: string\n                                hostedZoneID:\n                                  description: If set, the provider will manage only\n                                    this zone in Route53 and will not do an lookup\n                                    using the route53:ListHostedZonesByName api call.\n                                  type: string\n                                region:\n                                  description: Always set the region when using AccessKeyID\n                                    and SecretAccessKey\n                                  type: string\n                                role:\n                                  description: Role is a Role ARN which the Route53\n                                    provider will assume using either the explicit\n                                    credentials AccessKeyID/SecretAccessKey or the\n                                    inferred credentials from environment variables,\n                                    shared credentials file or AWS Instance metadata\n                                  type: string\n                                secretAccessKeySecretRef:\n                                  description: The SecretAccessKey is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - region\n                              type: object\n                            webhook:\n                              description: Configure an external webhook based DNS01\n                                challenge solver to manage DNS01 challenge records.\n                              properties:\n                                config:\n                                  description: Additional configuration that should\n                                    be passed to the webhook apiserver when challenges\n                                    are processed. This can contain arbitrary JSON\n                                    data. Secret values should not be specified in\n                                    this stanza. If secret values are needed (e.g.\n                                    credentials for a DNS service), you should use\n                                    a SecretKeySelector to reference a Secret resource.\n                                    For details on the schema of this field, consult\n                                    the webhook provider implementation's documentation.\n                                  x-kubernetes-preserve-unknown-fields: true\n                                groupName:\n                                  description: The API group name that should be used\n                                    when POSTing ChallengePayload resources to the\n                                    webhook apiserver. This should be the same as\n                                    the GroupName specified in the webhook provider\n                                    implementation.\n                                  type: string\n                                solverName:\n                                  description: The name of the solver to use, as defined\n                                    in the webhook provider implementation. This will\n                                    typically be the name of the provider, e.g. 'cloudflare'.\n                                  type: string\n                              required:\n                              - groupName\n                              - solverName\n                              type: object\n                          type: object\n                        http01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the HTTP01 challenge flow.\n                            It is not possible to obtain certificates for wildcard\n                            domain names (e.g. `*.example.com`) using the HTTP01 challenge\n                            mechanism.\n                          properties:\n                            ingress:\n                              description: The ingress based HTTP01 challenge solver\n                                will solve challenges by creating or modifying Ingress\n                                resources in order to route requests for '/.well-known/acme-challenge/XYZ'\n                                to 'challenge solver' pods that are provisioned by\n                                cert-manager for each Challenge to be completed.\n                              properties:\n                                class:\n                                  description: The ingress class to use when creating\n                                    Ingress resources to solve ACME challenges that\n                                    use this challenge solver. Only one of 'class'\n                                    or 'name' may be specified.\n                                  type: string\n                                ingressTemplate:\n                                  description: Optional ingress template used to configure\n                                    the ACME challenge solver ingress used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the ingress\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the created ACME HTTP01 solver\n                                            ingress.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver ingress.\n                                          type: object\n                                      type: object\n                                  type: object\n                                name:\n                                  description: The name of the ingress resource that\n                                    should have ACME challenge solving routes inserted\n                                    into it in order to solve HTTP01 challenges. This\n                                    is typically used in conjunction with ingress\n                                    controllers like ingress-gce, which maintains\n                                    a 1:1 mapping between external IPs and ingress\n                                    resources.\n                                  type: string\n                                podTemplate:\n                                  description: Optional pod template used to configure\n                                    the ACME challenge solver pods used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the pod\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the create ACME HTTP01 solver\n                                            pods.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver pods.\n                                          type: object\n                                      type: object\n                                    spec:\n                                      description: PodSpec defines overrides for the\n                                        HTTP01 challenge solver pod. Only the 'priorityClassName',\n                                        'nodeSelector', 'affinity', 'serviceAccountName'\n                                        and 'tolerations' fields are supported currently.\n                                        All other fields will be ignored.\n                                      properties:\n                                        affinity:\n                                          description: If specified, the pod's scheduling\n                                            constraints\n                                          properties:\n                                            nodeAffinity:\n                                              description: Describes node affinity\n                                                scheduling rules for the pod.\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node matches\n                                                    the corresponding matchExpressions;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: An empty preferred\n                                                      scheduling term matches all\n                                                      objects with implicit weight\n                                                      0 (i.e. it's a no-op). A null\n                                                      preferred scheduling term matches\n                                                      no objects (i.e. is also a no-op).\n                                                    properties:\n                                                      preference:\n                                                        description: A node selector\n                                                          term, associated with the\n                                                          corresponding weight.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      weight:\n                                                        description: Weight associated\n                                                          with matching the corresponding\n                                                          nodeSelectorTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - preference\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to an\n                                                    update), the system may or may\n                                                    not try to eventually evict the\n                                                    pod from its node.\n                                                  properties:\n                                                    nodeSelectorTerms:\n                                                      description: Required. A list\n                                                        of node selector terms. The\n                                                        terms are ORed.\n                                                      items:\n                                                        description: A null or empty\n                                                          node selector term matches\n                                                          no objects. The requirements\n                                                          of them are ANDed. The TopologySelectorTerm\n                                                          type implements a subset\n                                                          of the NodeSelectorTerm.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      type: array\n                                                  required:\n                                                  - nodeSelectorTerms\n                                                  type: object\n                                              type: object\n                                            podAffinity:\n                                              description: Describes pod affinity\n                                                scheduling rules (e.g. co-locate this\n                                                pod in the same node, zone, etc. as\n                                                some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node has pods\n                                                    which matches the corresponding\n                                                    podAffinityTerm; the node(s) with\n                                                    the highest sum are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to a pod\n                                                    label update), the system may\n                                                    or may not try to eventually evict\n                                                    the pod from its node. When there\n                                                    are multiple elements, the lists\n                                                    of nodes corresponding to each\n                                                    podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                            podAntiAffinity:\n                                              description: Describes pod anti-affinity\n                                                scheduling rules (e.g. avoid putting\n                                                this pod in the same node, zone, etc.\n                                                as some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the anti-affinity\n                                                    expressions specified by this\n                                                    field, but it may choose a node\n                                                    that violates one or more of the\n                                                    expressions. The node that is\n                                                    most preferred is the one with\n                                                    the greatest sum of weights, i.e.\n                                                    for each node that meets all of\n                                                    the scheduling requirements (resource\n                                                    request, requiredDuringScheduling\n                                                    anti-affinity expressions, etc.),\n                                                    compute a sum by iterating through\n                                                    the elements of this field and\n                                                    adding \"weight\" to the sum if\n                                                    the node has pods which matches\n                                                    the corresponding podAffinityTerm;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the anti-affinity\n                                                    requirements specified by this\n                                                    field are not met at scheduling\n                                                    time, the pod will not be scheduled\n                                                    onto the node. If the anti-affinity\n                                                    requirements specified by this\n                                                    field cease to be met at some\n                                                    point during pod execution (e.g.\n                                                    due to a pod label update), the\n                                                    system may or may not try to eventually\n                                                    evict the pod from its node. When\n                                                    there are multiple elements, the\n                                                    lists of nodes corresponding to\n                                                    each podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                          type: object\n                                        nodeSelector:\n                                          additionalProperties:\n                                            type: string\n                                          description: 'NodeSelector is a selector\n                                            which must be true for the pod to fit\n                                            on a node. Selector which must match a\n                                            node''s labels for the pod to be scheduled\n                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'\n                                          type: object\n                                        priorityClassName:\n                                          description: If specified, the pod's priorityClassName.\n                                          type: string\n                                        serviceAccountName:\n                                          description: If specified, the pod's service\n                                            account\n                                          type: string\n                                        tolerations:\n                                          description: If specified, the pod's tolerations.\n                                          items:\n                                            description: The pod this Toleration is\n                                              attached to tolerates any taint that\n                                              matches the triple <key,value,effect>\n                                              using the matching operator <operator>.\n                                            properties:\n                                              effect:\n                                                description: Effect indicates the\n                                                  taint effect to match. Empty means\n                                                  match all taint effects. When specified,\n                                                  allowed values are NoSchedule, PreferNoSchedule\n                                                  and NoExecute.\n                                                type: string\n                                              key:\n                                                description: Key is the taint key\n                                                  that the toleration applies to.\n                                                  Empty means match all taint keys.\n                                                  If the key is empty, operator must\n                                                  be Exists; this combination means\n                                                  to match all values and all keys.\n                                                type: string\n                                              operator:\n                                                description: Operator represents a\n                                                  key's relationship to the value.\n                                                  Valid operators are Exists and Equal.\n                                                  Defaults to Equal. Exists is equivalent\n                                                  to wildcard for value, so that a\n                                                  pod can tolerate all taints of a\n                                                  particular category.\n                                                type: string\n                                              tolerationSeconds:\n                                                description: TolerationSeconds represents\n                                                  the period of time the toleration\n                                                  (which must be of effect NoExecute,\n                                                  otherwise this field is ignored)\n                                                  tolerates the taint. By default,\n                                                  it is not set, which means tolerate\n                                                  the taint forever (do not evict).\n                                                  Zero and negative values will be\n                                                  treated as 0 (evict immediately)\n                                                  by the system.\n                                                format: int64\n                                                type: integer\n                                              value:\n                                                description: Value is the taint value\n                                                  the toleration matches to. If the\n                                                  operator is Exists, the value should\n                                                  be empty, otherwise just a regular\n                                                  string.\n                                                type: string\n                                            type: object\n                                          type: array\n                                      type: object\n                                  type: object\n                                serviceType:\n                                  description: Optional service type for Kubernetes\n                                    solver service\n                                  type: string\n                              type: object\n                          type: object\n                        selector:\n                          description: Selector selects a set of DNSNames on the Certificate\n                            resource that should be solved using this challenge solver.\n                            If not specified, the solver will be treated as the 'default'\n                            solver with the lowest priority, i.e. if any other solver\n                            has a more specific match, it will be used instead.\n                          properties:\n                            dnsNames:\n                              description: List of DNSNames that this solver will\n                                be used to solve. If specified and a match is found,\n                                a dnsNames selector will take precedence over a dnsZones\n                                selector. If multiple solvers match with the same\n                                dnsNames value, the solver with the most matching\n                                labels in matchLabels will be selected. If neither\n                                has more matches, the solver defined earlier in the\n                                list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            dnsZones:\n                              description: List of DNSZones that this solver will\n                                be used to solve. The most specific DNS zone match\n                                specified here will take precedence over other DNS\n                                zone matches, so a solver specifying sys.example.com\n                                will be selected over one specifying example.com for\n                                the domain www.sys.example.com. If multiple solvers\n                                match with the same dnsZones value, the solver with\n                                the most matching labels in matchLabels will be selected.\n                                If neither has more matches, the solver defined earlier\n                                in the list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            matchLabels:\n                              additionalProperties:\n                                type: string\n                              description: A label selector that is used to refine\n                                the set of certificate's that this challenge solver\n                                will apply to.\n                              type: object\n                          type: object\n                      type: object\n                    type: array\n                required:\n                - privateKeySecretRef\n                - server\n                type: object\n              ca:\n                description: CA configures this issuer to sign certificates using\n                  a signing CA keypair stored in a Secret resource. This is used to\n                  build internal PKIs that are managed by cert-manager.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set,\n                      certificates will be issued without distribution points set.\n                    items:\n                      type: string\n                    type: array\n                  secretName:\n                    description: SecretName is the name of the secret used to sign\n                      Certificates issued by this Issuer.\n                    type: string\n                required:\n                - secretName\n                type: object\n              selfSigned:\n                description: SelfSigned configures this issuer to 'self sign' certificates\n                  using the private key used to create the CertificateRequest object.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set\n                      certificate will be issued without CDP. Values are strings.\n                    items:\n                      type: string\n                    type: array\n                type: object\n              vault:\n                description: Vault configures this issuer to sign certificates using\n                  a HashiCorp Vault PKI backend.\n                properties:\n                  auth:\n                    description: Auth configures how cert-manager authenticates with\n                      the Vault server.\n                    properties:\n                      appRole:\n                        description: AppRole authenticates with Vault using the App\n                          Role auth mechanism, with the role and secret stored in\n                          a Kubernetes Secret resource.\n                        properties:\n                          path:\n                            description: 'Path where the App Role authentication backend\n                              is mounted in Vault, e.g: \"approle\"'\n                            type: string\n                          roleId:\n                            description: RoleID configured in the App Role authentication\n                              backend when setting up the authentication backend in\n                              Vault.\n                            type: string\n                          secretRef:\n                            description: Reference to a key in a Secret that contains\n                              the App Role secret used to authenticate with Vault.\n                              The `key` field must be specified and denotes which\n                              entry within the Secret resource is used as the app\n                              role secret.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - path\n                        - roleId\n                        - secretRef\n                        type: object\n                      kubernetes:\n                        description: Kubernetes authenticates with Vault by passing\n                          the ServiceAccount token stored in the named Secret resource\n                          to the Vault server.\n                        properties:\n                          mountPath:\n                            description: The Vault mountPath here is the mount path\n                              to use when authenticating with Vault. For example,\n                              setting a value to `/v1/auth/foo`, will use the path\n                              `/v1/auth/foo/login` to authenticate with Vault. If\n                              unspecified, the default value \"/v1/auth/kubernetes\"\n                              will be used.\n                            type: string\n                          role:\n                            description: A required field containing the Vault Role\n                              to assume. A Role binds a Kubernetes ServiceAccount\n                              with a set of Vault policies.\n                            type: string\n                          secretRef:\n                            description: The required Secret field containing a Kubernetes\n                              ServiceAccount JWT used for authenticating with Vault.\n                              Use of 'ambient credentials' is not supported.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - role\n                        - secretRef\n                        type: object\n                      tokenSecretRef:\n                        description: TokenSecretRef authenticates with Vault by presenting\n                          a token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    type: object\n                  caBundle:\n                    description: PEM encoded CA bundle used to validate Vault server\n                      certificate. Only used if the Server URL is using HTTPS protocol.\n                      This parameter is ignored for plain HTTP protocol connection.\n                      If not set the system root certificates are used to validate\n                      the TLS connection.\n                    format: byte\n                    type: string\n                  namespace:\n                    description: 'Name of the vault namespace. Namespaces is a set\n                      of features within Vault Enterprise that allows Vault environments\n                      to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces\n                      can be found here https://www.vaultproject.io/docs/enterprise/namespaces'\n                    type: string\n                  path:\n                    description: 'Path is the mount path of the Vault PKI backend''s\n                      `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".'\n                    type: string\n                  server:\n                    description: 'Server is the connection address for the Vault server,\n                      e.g: \"https://vault.example.com:8200\".'\n                    type: string\n                required:\n                - auth\n                - path\n                - server\n                type: object\n              venafi:\n                description: Venafi configures this issuer to sign certificates using\n                  a Venafi TPP or Venafi Cloud policy zone.\n                properties:\n                  cloud:\n                    description: Cloud specifies the Venafi cloud configuration settings.\n                      Only one of TPP or Cloud may be specified.\n                    properties:\n                      apiTokenSecretRef:\n                        description: APITokenSecretRef is a secret key selector for\n                          the Venafi Cloud API token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: URL is the base URL for Venafi Cloud. Defaults\n                          to \"https://api.venafi.cloud/v1\".\n                        type: string\n                    required:\n                    - apiTokenSecretRef\n                    type: object\n                  tpp:\n                    description: TPP specifies Trust Protection Platform configuration\n                      settings. Only one of TPP or Cloud may be specified.\n                    properties:\n                      caBundle:\n                        description: CABundle is a PEM encoded TLS certificate to\n                          use to verify connections to the TPP instance. If specified,\n                          system roots will not be used and the issuing CA for the\n                          TPP instance must be verifiable using the provided root.\n                          If not specified, the connection will be verified using\n                          the cert-manager system root certificates.\n                        format: byte\n                        type: string\n                      credentialsRef:\n                        description: CredentialsRef is a reference to a Secret containing\n                          the username and password for the TPP server. The secret\n                          must contain two keys, 'username' and 'password'.\n                        properties:\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: 'URL is the base URL for the vedsdk endpoint\n                          of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".'\n                        type: string\n                    required:\n                    - credentialsRef\n                    - url\n                    type: object\n                  zone:\n                    description: Zone is the Venafi Policy Zone to use for this issuer.\n                      All requests made to the Venafi platform will be restricted\n                      by the named zone policy. This field is required.\n                    type: string\n                required:\n                - zone\n                type: object\n            type: object\n          status:\n            description: Status of the Issuer. This is set and managed automatically.\n            properties:\n              acme:\n                description: ACME specific status options. This field should only\n                  be set if the Issuer is configured to use an ACME server to issue\n                  certificates.\n                properties:\n                  lastRegisteredEmail:\n                    description: LastRegisteredEmail is the email associated with\n                      the latest registered ACME account, in order to track changes\n                      made to registered account associated with the  Issuer\n                    type: string\n                  uri:\n                    description: URI is the unique account identifier, which can also\n                      be used to retrieve account details from the CA\n                    type: string\n                type: object\n              conditions:\n                description: List of status conditions to indicate the status of a\n                  CertificateRequest. Known condition types are `Ready`.\n                items:\n                  description: IssuerCondition contains condition information for\n                    an Issuer.\n                  properties:\n                    lastTransitionTime:\n                      description: LastTransitionTime is the timestamp corresponding\n                        to the last status change of this condition.\n                      format: date-time\n                      type: string\n                    message:\n                      description: Message is a human readable description of the\n                        details of the last transition, complementing reason.\n                      type: string\n                    reason:\n                      description: Reason is a brief machine readable explanation\n                        for the condition's last transition.\n                      type: string\n                    status:\n                      description: Status of the condition, one of ('True', 'False',\n                        'Unknown').\n                      enum:\n                      - \"True\"\n                      - \"False\"\n                      - Unknown\n                      type: string\n                    type:\n                      description: Type of the condition, known values are ('Ready').\n                      type: string\n                  required:\n                  - status\n                  - type\n                  type: object\n                type: array\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].status\n      name: Ready\n      type: string\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].message\n      name: Status\n      priority: 1\n      type: string\n    - description: CreationTimestamp is a timestamp representing the server time when\n        this object was created. It is not guaranteed to be set in happens-before\n        order across separate operations. Clients may not set this value. It is represented\n        in RFC3339 form and is in UTC.\n      jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1alpha3\n    schema:\n      openAPIV3Schema:\n        description: An Issuer represents a certificate issuing authority which can\n          be referenced as part of `issuerRef` fields. It is scoped to a single namespace\n          and can therefore only be referenced by resources within the same namespace.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: Desired state of the Issuer resource.\n            properties:\n              acme:\n                description: ACME configures this issuer to communicate with a RFC8555\n                  (ACME) server to obtain signed x509 certificates.\n                properties:\n                  disableAccountKeyGeneration:\n                    description: Enables or disables generating a new ACME account\n                      key. If true, the Issuer resource will *not* request a new account\n                      but will expect the account key to be supplied via an existing\n                      secret. If false, the cert-manager system will generate a new\n                      ACME account key for the Issuer. Defaults to false.\n                    type: boolean\n                  email:\n                    description: Email is the email address to be associated with\n                      the ACME account. This field is optional, but it is strongly\n                      recommended to be set. It will be used to contact you in case\n                      of issues with your account or certificates, including expiry\n                      notification emails. This field may be updated after the account\n                      is initially registered.\n                    type: string\n                  externalAccountBinding:\n                    description: ExternalAccountBinding is a reference to a CA external\n                      account of the ACME server. If set, upon registration cert-manager\n                      will attempt to associate the given external account credentials\n                      with the registered ACME account.\n                    properties:\n                      keyAlgorithm:\n                        description: keyAlgorithm is the MAC key algorithm that the\n                          key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".\n                        enum:\n                        - HS256\n                        - HS384\n                        - HS512\n                        type: string\n                      keyID:\n                        description: keyID is the ID of the CA key that the External\n                          Account is bound to.\n                        type: string\n                      keySecretRef:\n                        description: keySecretRef is a Secret Key Selector referencing\n                          a data item in a Kubernetes Secret which holds the symmetric\n                          MAC key of the External Account Binding. The `key` is the\n                          index string that is paired with the key data in the Secret\n                          and should not be confused with the key data itself, or\n                          indeed with the External Account Binding keyID above. The\n                          secret key stored in the Secret **must** be un-padded, base64\n                          URL encoded data.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    required:\n                    - keyAlgorithm\n                    - keyID\n                    - keySecretRef\n                    type: object\n                  preferredChain:\n                    description: 'PreferredChain is the chain to use if the ACME server\n                      outputs multiple. PreferredChain is no guarantee that this one\n                      gets delivered by the ACME endpoint. For example, for Let''s\n                      Encrypt''s DST crosssign you would use: \"DST Root CA X3\" or\n                      \"ISRG Root X1\" for the newer Let''s Encrypt root CA. This value\n                      picks the first certificate bundle in the ACME alternative chains\n                      that has a certificate with this value as its issuer''s CN'\n                    maxLength: 64\n                    type: string\n                  privateKeySecretRef:\n                    description: PrivateKey is the name of a Kubernetes Secret resource\n                      that will be used to store the automatically generated ACME\n                      account private key. Optionally, a `key` may be specified to\n                      select a specific entry within the named Secret resource. If\n                      `key` is not specified, a default of `tls.key` will be used.\n                    properties:\n                      key:\n                        description: The key of the entry in the Secret resource's\n                          `data` field to be used. Some instances of this field may\n                          be defaulted, in others it may be required.\n                        type: string\n                      name:\n                        description: 'Name of the resource being referred to. More\n                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                        type: string\n                    required:\n                    - name\n                    type: object\n                  server:\n                    description: 'Server is the URL used to access the ACME server''s\n                      ''directory'' endpoint. For example, for Let''s Encrypt''s staging\n                      endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\".\n                      Only ACME v2 endpoints (i.e. RFC 8555) are supported.'\n                    type: string\n                  skipTLSVerify:\n                    description: Enables or disables validation of the ACME server\n                      TLS certificate. If true, requests to the ACME server will not\n                      have their TLS certificate validated (i.e. insecure connections\n                      will be allowed). Only enable this option in development environments.\n                      The cert-manager system installed roots will be used to verify\n                      connections to the ACME server if this is false. Defaults to\n                      false.\n                    type: boolean\n                  solvers:\n                    description: 'Solvers is a list of challenge solvers that will\n                      be used to solve ACME challenges for the matching domains. Solver\n                      configurations must be provided in order to obtain certificates\n                      from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/'\n                    items:\n                      description: Configures an issuer to solve challenges using\n                        the specified options. Only one of HTTP01 or DNS01 may be\n                        provided.\n                      properties:\n                        dns01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the DNS01 challenge flow.\n                          properties:\n                            acmedns:\n                              description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)\n                                API to manage DNS01 challenge records.\n                              properties:\n                                accountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                host:\n                                  type: string\n                              required:\n                              - accountSecretRef\n                              - host\n                              type: object\n                            akamai:\n                              description: Use the Akamai DNS zone management API\n                                to manage DNS01 challenge records.\n                              properties:\n                                accessTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientSecretSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                serviceConsumerDomain:\n                                  type: string\n                              required:\n                              - accessTokenSecretRef\n                              - clientSecretSecretRef\n                              - clientTokenSecretRef\n                              - serviceConsumerDomain\n                              type: object\n                            azuredns:\n                              description: Use the Microsoft Azure DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                clientID:\n                                  description: if both this and ClientSecret are left\n                                    unset MSI will be used\n                                  type: string\n                                clientSecretSecretRef:\n                                  description: if both this and ClientID are left\n                                    unset MSI will be used\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                environment:\n                                  enum:\n                                  - AzurePublicCloud\n                                  - AzureChinaCloud\n                                  - AzureGermanCloud\n                                  - AzureUSGovernmentCloud\n                                  type: string\n                                hostedZoneName:\n                                  type: string\n                                resourceGroupName:\n                                  type: string\n                                subscriptionID:\n                                  type: string\n                                tenantID:\n                                  description: when specifying ClientID and ClientSecret\n                                    then this field is also needed\n                                  type: string\n                              required:\n                              - resourceGroupName\n                              - subscriptionID\n                              type: object\n                            clouddns:\n                              description: Use the Google Cloud DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                hostedZoneName:\n                                  description: HostedZoneName is an optional field\n                                    that tells cert-manager in which Cloud DNS zone\n                                    the challenge record has to be created. If left\n                                    empty cert-manager will automatically choose a\n                                    zone.\n                                  type: string\n                                project:\n                                  type: string\n                                serviceAccountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - project\n                              type: object\n                            cloudflare:\n                              description: Use the Cloudflare API to manage DNS01\n                                challenge records.\n                              properties:\n                                apiKeySecretRef:\n                                  description: 'API key to use to authenticate with\n                                    Cloudflare. Note: using an API token to authenticate\n                                    is now the recommended method as it allows greater\n                                    control of permissions.'\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                apiTokenSecretRef:\n                                  description: API token used to authenticate with\n                                    Cloudflare.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                email:\n                                  description: Email of the account, only required\n                                    when using API key based authentication.\n                                  type: string\n                              type: object\n                            cnameStrategy:\n                              description: CNAMEStrategy configures how the DNS01\n                                provider should handle CNAME records when found in\n                                DNS zones.\n                              enum:\n                              - None\n                              - Follow\n                              type: string\n                            digitalocean:\n                              description: Use the DigitalOcean DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                tokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - tokenSecretRef\n                              type: object\n                            rfc2136:\n                              description: Use RFC2136 (\"Dynamic Updates in the Domain\n                                Name System\") (https://datatracker.ietf.org/doc/rfc2136/)\n                                to manage DNS01 challenge records.\n                              properties:\n                                nameserver:\n                                  description: The IP address or hostname of an authoritative\n                                    DNS server supporting RFC2136 in the form host:port.\n                                    If the host is an IPv6 address it must be enclosed\n                                    in square brackets (e.g [2001:db8::1]) ; port\n                                    is optional. This field is required.\n                                  type: string\n                                tsigAlgorithm:\n                                  description: 'The TSIG Algorithm configured in the\n                                    DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``\n                                    and ``tsigKeyName`` are defined. Supported values\n                                    are (case-insensitive): ``HMACMD5`` (default),\n                                    ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'\n                                  type: string\n                                tsigKeyName:\n                                  description: The TSIG Key name configured in the\n                                    DNS. If ``tsigSecretSecretRef`` is defined, this\n                                    field is required.\n                                  type: string\n                                tsigSecretSecretRef:\n                                  description: The name of the secret containing the\n                                    TSIG value. If ``tsigKeyName`` is defined, this\n                                    field is required.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - nameserver\n                              type: object\n                            route53:\n                              description: Use the AWS Route53 API to manage DNS01\n                                challenge records.\n                              properties:\n                                accessKeyID:\n                                  description: 'The AccessKeyID is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata see:\n                                    https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'\n                                  type: string\n                                hostedZoneID:\n                                  description: If set, the provider will manage only\n                                    this zone in Route53 and will not do an lookup\n                                    using the route53:ListHostedZonesByName api call.\n                                  type: string\n                                region:\n                                  description: Always set the region when using AccessKeyID\n                                    and SecretAccessKey\n                                  type: string\n                                role:\n                                  description: Role is a Role ARN which the Route53\n                                    provider will assume using either the explicit\n                                    credentials AccessKeyID/SecretAccessKey or the\n                                    inferred credentials from environment variables,\n                                    shared credentials file or AWS Instance metadata\n                                  type: string\n                                secretAccessKeySecretRef:\n                                  description: The SecretAccessKey is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - region\n                              type: object\n                            webhook:\n                              description: Configure an external webhook based DNS01\n                                challenge solver to manage DNS01 challenge records.\n                              properties:\n                                config:\n                                  description: Additional configuration that should\n                                    be passed to the webhook apiserver when challenges\n                                    are processed. This can contain arbitrary JSON\n                                    data. Secret values should not be specified in\n                                    this stanza. If secret values are needed (e.g.\n                                    credentials for a DNS service), you should use\n                                    a SecretKeySelector to reference a Secret resource.\n                                    For details on the schema of this field, consult\n                                    the webhook provider implementation's documentation.\n                                  x-kubernetes-preserve-unknown-fields: true\n                                groupName:\n                                  description: The API group name that should be used\n                                    when POSTing ChallengePayload resources to the\n                                    webhook apiserver. This should be the same as\n                                    the GroupName specified in the webhook provider\n                                    implementation.\n                                  type: string\n                                solverName:\n                                  description: The name of the solver to use, as defined\n                                    in the webhook provider implementation. This will\n                                    typically be the name of the provider, e.g. 'cloudflare'.\n                                  type: string\n                              required:\n                              - groupName\n                              - solverName\n                              type: object\n                          type: object\n                        http01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the HTTP01 challenge flow.\n                            It is not possible to obtain certificates for wildcard\n                            domain names (e.g. `*.example.com`) using the HTTP01 challenge\n                            mechanism.\n                          properties:\n                            ingress:\n                              description: The ingress based HTTP01 challenge solver\n                                will solve challenges by creating or modifying Ingress\n                                resources in order to route requests for '/.well-known/acme-challenge/XYZ'\n                                to 'challenge solver' pods that are provisioned by\n                                cert-manager for each Challenge to be completed.\n                              properties:\n                                class:\n                                  description: The ingress class to use when creating\n                                    Ingress resources to solve ACME challenges that\n                                    use this challenge solver. Only one of 'class'\n                                    or 'name' may be specified.\n                                  type: string\n                                ingressTemplate:\n                                  description: Optional ingress template used to configure\n                                    the ACME challenge solver ingress used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the ingress\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the created ACME HTTP01 solver\n                                            ingress.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver ingress.\n                                          type: object\n                                      type: object\n                                  type: object\n                                name:\n                                  description: The name of the ingress resource that\n                                    should have ACME challenge solving routes inserted\n                                    into it in order to solve HTTP01 challenges. This\n                                    is typically used in conjunction with ingress\n                                    controllers like ingress-gce, which maintains\n                                    a 1:1 mapping between external IPs and ingress\n                                    resources.\n                                  type: string\n                                podTemplate:\n                                  description: Optional pod template used to configure\n                                    the ACME challenge solver pods used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the pod\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the create ACME HTTP01 solver\n                                            pods.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver pods.\n                                          type: object\n                                      type: object\n                                    spec:\n                                      description: PodSpec defines overrides for the\n                                        HTTP01 challenge solver pod. Only the 'priorityClassName',\n                                        'nodeSelector', 'affinity', 'serviceAccountName'\n                                        and 'tolerations' fields are supported currently.\n                                        All other fields will be ignored.\n                                      properties:\n                                        affinity:\n                                          description: If specified, the pod's scheduling\n                                            constraints\n                                          properties:\n                                            nodeAffinity:\n                                              description: Describes node affinity\n                                                scheduling rules for the pod.\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node matches\n                                                    the corresponding matchExpressions;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: An empty preferred\n                                                      scheduling term matches all\n                                                      objects with implicit weight\n                                                      0 (i.e. it's a no-op). A null\n                                                      preferred scheduling term matches\n                                                      no objects (i.e. is also a no-op).\n                                                    properties:\n                                                      preference:\n                                                        description: A node selector\n                                                          term, associated with the\n                                                          corresponding weight.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      weight:\n                                                        description: Weight associated\n                                                          with matching the corresponding\n                                                          nodeSelectorTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - preference\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to an\n                                                    update), the system may or may\n                                                    not try to eventually evict the\n                                                    pod from its node.\n                                                  properties:\n                                                    nodeSelectorTerms:\n                                                      description: Required. A list\n                                                        of node selector terms. The\n                                                        terms are ORed.\n                                                      items:\n                                                        description: A null or empty\n                                                          node selector term matches\n                                                          no objects. The requirements\n                                                          of them are ANDed. The TopologySelectorTerm\n                                                          type implements a subset\n                                                          of the NodeSelectorTerm.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      type: array\n                                                  required:\n                                                  - nodeSelectorTerms\n                                                  type: object\n                                              type: object\n                                            podAffinity:\n                                              description: Describes pod affinity\n                                                scheduling rules (e.g. co-locate this\n                                                pod in the same node, zone, etc. as\n                                                some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node has pods\n                                                    which matches the corresponding\n                                                    podAffinityTerm; the node(s) with\n                                                    the highest sum are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to a pod\n                                                    label update), the system may\n                                                    or may not try to eventually evict\n                                                    the pod from its node. When there\n                                                    are multiple elements, the lists\n                                                    of nodes corresponding to each\n                                                    podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                            podAntiAffinity:\n                                              description: Describes pod anti-affinity\n                                                scheduling rules (e.g. avoid putting\n                                                this pod in the same node, zone, etc.\n                                                as some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the anti-affinity\n                                                    expressions specified by this\n                                                    field, but it may choose a node\n                                                    that violates one or more of the\n                                                    expressions. The node that is\n                                                    most preferred is the one with\n                                                    the greatest sum of weights, i.e.\n                                                    for each node that meets all of\n                                                    the scheduling requirements (resource\n                                                    request, requiredDuringScheduling\n                                                    anti-affinity expressions, etc.),\n                                                    compute a sum by iterating through\n                                                    the elements of this field and\n                                                    adding \"weight\" to the sum if\n                                                    the node has pods which matches\n                                                    the corresponding podAffinityTerm;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the anti-affinity\n                                                    requirements specified by this\n                                                    field are not met at scheduling\n                                                    time, the pod will not be scheduled\n                                                    onto the node. If the anti-affinity\n                                                    requirements specified by this\n                                                    field cease to be met at some\n                                                    point during pod execution (e.g.\n                                                    due to a pod label update), the\n                                                    system may or may not try to eventually\n                                                    evict the pod from its node. When\n                                                    there are multiple elements, the\n                                                    lists of nodes corresponding to\n                                                    each podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                          type: object\n                                        nodeSelector:\n                                          additionalProperties:\n                                            type: string\n                                          description: 'NodeSelector is a selector\n                                            which must be true for the pod to fit\n                                            on a node. Selector which must match a\n                                            node''s labels for the pod to be scheduled\n                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'\n                                          type: object\n                                        priorityClassName:\n                                          description: If specified, the pod's priorityClassName.\n                                          type: string\n                                        serviceAccountName:\n                                          description: If specified, the pod's service\n                                            account\n                                          type: string\n                                        tolerations:\n                                          description: If specified, the pod's tolerations.\n                                          items:\n                                            description: The pod this Toleration is\n                                              attached to tolerates any taint that\n                                              matches the triple <key,value,effect>\n                                              using the matching operator <operator>.\n                                            properties:\n                                              effect:\n                                                description: Effect indicates the\n                                                  taint effect to match. Empty means\n                                                  match all taint effects. When specified,\n                                                  allowed values are NoSchedule, PreferNoSchedule\n                                                  and NoExecute.\n                                                type: string\n                                              key:\n                                                description: Key is the taint key\n                                                  that the toleration applies to.\n                                                  Empty means match all taint keys.\n                                                  If the key is empty, operator must\n                                                  be Exists; this combination means\n                                                  to match all values and all keys.\n                                                type: string\n                                              operator:\n                                                description: Operator represents a\n                                                  key's relationship to the value.\n                                                  Valid operators are Exists and Equal.\n                                                  Defaults to Equal. Exists is equivalent\n                                                  to wildcard for value, so that a\n                                                  pod can tolerate all taints of a\n                                                  particular category.\n                                                type: string\n                                              tolerationSeconds:\n                                                description: TolerationSeconds represents\n                                                  the period of time the toleration\n                                                  (which must be of effect NoExecute,\n                                                  otherwise this field is ignored)\n                                                  tolerates the taint. By default,\n                                                  it is not set, which means tolerate\n                                                  the taint forever (do not evict).\n                                                  Zero and negative values will be\n                                                  treated as 0 (evict immediately)\n                                                  by the system.\n                                                format: int64\n                                                type: integer\n                                              value:\n                                                description: Value is the taint value\n                                                  the toleration matches to. If the\n                                                  operator is Exists, the value should\n                                                  be empty, otherwise just a regular\n                                                  string.\n                                                type: string\n                                            type: object\n                                          type: array\n                                      type: object\n                                  type: object\n                                serviceType:\n                                  description: Optional service type for Kubernetes\n                                    solver service\n                                  type: string\n                              type: object\n                          type: object\n                        selector:\n                          description: Selector selects a set of DNSNames on the Certificate\n                            resource that should be solved using this challenge solver.\n                            If not specified, the solver will be treated as the 'default'\n                            solver with the lowest priority, i.e. if any other solver\n                            has a more specific match, it will be used instead.\n                          properties:\n                            dnsNames:\n                              description: List of DNSNames that this solver will\n                                be used to solve. If specified and a match is found,\n                                a dnsNames selector will take precedence over a dnsZones\n                                selector. If multiple solvers match with the same\n                                dnsNames value, the solver with the most matching\n                                labels in matchLabels will be selected. If neither\n                                has more matches, the solver defined earlier in the\n                                list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            dnsZones:\n                              description: List of DNSZones that this solver will\n                                be used to solve. The most specific DNS zone match\n                                specified here will take precedence over other DNS\n                                zone matches, so a solver specifying sys.example.com\n                                will be selected over one specifying example.com for\n                                the domain www.sys.example.com. If multiple solvers\n                                match with the same dnsZones value, the solver with\n                                the most matching labels in matchLabels will be selected.\n                                If neither has more matches, the solver defined earlier\n                                in the list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            matchLabels:\n                              additionalProperties:\n                                type: string\n                              description: A label selector that is used to refine\n                                the set of certificate's that this challenge solver\n                                will apply to.\n                              type: object\n                          type: object\n                      type: object\n                    type: array\n                required:\n                - privateKeySecretRef\n                - server\n                type: object\n              ca:\n                description: CA configures this issuer to sign certificates using\n                  a signing CA keypair stored in a Secret resource. This is used to\n                  build internal PKIs that are managed by cert-manager.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set,\n                      certificates will be issued without distribution points set.\n                    items:\n                      type: string\n                    type: array\n                  secretName:\n                    description: SecretName is the name of the secret used to sign\n                      Certificates issued by this Issuer.\n                    type: string\n                required:\n                - secretName\n                type: object\n              selfSigned:\n                description: SelfSigned configures this issuer to 'self sign' certificates\n                  using the private key used to create the CertificateRequest object.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set\n                      certificate will be issued without CDP. Values are strings.\n                    items:\n                      type: string\n                    type: array\n                type: object\n              vault:\n                description: Vault configures this issuer to sign certificates using\n                  a HashiCorp Vault PKI backend.\n                properties:\n                  auth:\n                    description: Auth configures how cert-manager authenticates with\n                      the Vault server.\n                    properties:\n                      appRole:\n                        description: AppRole authenticates with Vault using the App\n                          Role auth mechanism, with the role and secret stored in\n                          a Kubernetes Secret resource.\n                        properties:\n                          path:\n                            description: 'Path where the App Role authentication backend\n                              is mounted in Vault, e.g: \"approle\"'\n                            type: string\n                          roleId:\n                            description: RoleID configured in the App Role authentication\n                              backend when setting up the authentication backend in\n                              Vault.\n                            type: string\n                          secretRef:\n                            description: Reference to a key in a Secret that contains\n                              the App Role secret used to authenticate with Vault.\n                              The `key` field must be specified and denotes which\n                              entry within the Secret resource is used as the app\n                              role secret.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - path\n                        - roleId\n                        - secretRef\n                        type: object\n                      kubernetes:\n                        description: Kubernetes authenticates with Vault by passing\n                          the ServiceAccount token stored in the named Secret resource\n                          to the Vault server.\n                        properties:\n                          mountPath:\n                            description: The Vault mountPath here is the mount path\n                              to use when authenticating with Vault. For example,\n                              setting a value to `/v1/auth/foo`, will use the path\n                              `/v1/auth/foo/login` to authenticate with Vault. If\n                              unspecified, the default value \"/v1/auth/kubernetes\"\n                              will be used.\n                            type: string\n                          role:\n                            description: A required field containing the Vault Role\n                              to assume. A Role binds a Kubernetes ServiceAccount\n                              with a set of Vault policies.\n                            type: string\n                          secretRef:\n                            description: The required Secret field containing a Kubernetes\n                              ServiceAccount JWT used for authenticating with Vault.\n                              Use of 'ambient credentials' is not supported.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - role\n                        - secretRef\n                        type: object\n                      tokenSecretRef:\n                        description: TokenSecretRef authenticates with Vault by presenting\n                          a token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    type: object\n                  caBundle:\n                    description: PEM encoded CA bundle used to validate Vault server\n                      certificate. Only used if the Server URL is using HTTPS protocol.\n                      This parameter is ignored for plain HTTP protocol connection.\n                      If not set the system root certificates are used to validate\n                      the TLS connection.\n                    format: byte\n                    type: string\n                  namespace:\n                    description: 'Name of the vault namespace. Namespaces is a set\n                      of features within Vault Enterprise that allows Vault environments\n                      to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces\n                      can be found here https://www.vaultproject.io/docs/enterprise/namespaces'\n                    type: string\n                  path:\n                    description: 'Path is the mount path of the Vault PKI backend''s\n                      `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".'\n                    type: string\n                  server:\n                    description: 'Server is the connection address for the Vault server,\n                      e.g: \"https://vault.example.com:8200\".'\n                    type: string\n                required:\n                - auth\n                - path\n                - server\n                type: object\n              venafi:\n                description: Venafi configures this issuer to sign certificates using\n                  a Venafi TPP or Venafi Cloud policy zone.\n                properties:\n                  cloud:\n                    description: Cloud specifies the Venafi cloud configuration settings.\n                      Only one of TPP or Cloud may be specified.\n                    properties:\n                      apiTokenSecretRef:\n                        description: APITokenSecretRef is a secret key selector for\n                          the Venafi Cloud API token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: URL is the base URL for Venafi Cloud. Defaults\n                          to \"https://api.venafi.cloud/v1\".\n                        type: string\n                    required:\n                    - apiTokenSecretRef\n                    type: object\n                  tpp:\n                    description: TPP specifies Trust Protection Platform configuration\n                      settings. Only one of TPP or Cloud may be specified.\n                    properties:\n                      caBundle:\n                        description: CABundle is a PEM encoded TLS certificate to\n                          use to verify connections to the TPP instance. If specified,\n                          system roots will not be used and the issuing CA for the\n                          TPP instance must be verifiable using the provided root.\n                          If not specified, the connection will be verified using\n                          the cert-manager system root certificates.\n                        format: byte\n                        type: string\n                      credentialsRef:\n                        description: CredentialsRef is a reference to a Secret containing\n                          the username and password for the TPP server. The secret\n                          must contain two keys, 'username' and 'password'.\n                        properties:\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: 'URL is the base URL for the vedsdk endpoint\n                          of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".'\n                        type: string\n                    required:\n                    - credentialsRef\n                    - url\n                    type: object\n                  zone:\n                    description: Zone is the Venafi Policy Zone to use for this issuer.\n                      All requests made to the Venafi platform will be restricted\n                      by the named zone policy. This field is required.\n                    type: string\n                required:\n                - zone\n                type: object\n            type: object\n          status:\n            description: Status of the Issuer. This is set and managed automatically.\n            properties:\n              acme:\n                description: ACME specific status options. This field should only\n                  be set if the Issuer is configured to use an ACME server to issue\n                  certificates.\n                properties:\n                  lastRegisteredEmail:\n                    description: LastRegisteredEmail is the email associated with\n                      the latest registered ACME account, in order to track changes\n                      made to registered account associated with the  Issuer\n                    type: string\n                  uri:\n                    description: URI is the unique account identifier, which can also\n                      be used to retrieve account details from the CA\n                    type: string\n                type: object\n              conditions:\n                description: List of status conditions to indicate the status of a\n                  CertificateRequest. Known condition types are `Ready`.\n                items:\n                  description: IssuerCondition contains condition information for\n                    an Issuer.\n                  properties:\n                    lastTransitionTime:\n                      description: LastTransitionTime is the timestamp corresponding\n                        to the last status change of this condition.\n                      format: date-time\n                      type: string\n                    message:\n                      description: Message is a human readable description of the\n                        details of the last transition, complementing reason.\n                      type: string\n                    reason:\n                      description: Reason is a brief machine readable explanation\n                        for the condition's last transition.\n                      type: string\n                    status:\n                      description: Status of the condition, one of ('True', 'False',\n                        'Unknown').\n                      enum:\n                      - \"True\"\n                      - \"False\"\n                      - Unknown\n                      type: string\n                    type:\n                      description: Type of the condition, known values are ('Ready').\n                      type: string\n                  required:\n                  - status\n                  - type\n                  type: object\n                type: array\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].status\n      name: Ready\n      type: string\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].message\n      name: Status\n      priority: 1\n      type: string\n    - description: CreationTimestamp is a timestamp representing the server time when\n        this object was created. It is not guaranteed to be set in happens-before\n        order across separate operations. Clients may not set this value. It is represented\n        in RFC3339 form and is in UTC.\n      jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: An Issuer represents a certificate issuing authority which can\n          be referenced as part of `issuerRef` fields. It is scoped to a single namespace\n          and can therefore only be referenced by resources within the same namespace.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: Desired state of the Issuer resource.\n            properties:\n              acme:\n                description: ACME configures this issuer to communicate with a RFC8555\n                  (ACME) server to obtain signed x509 certificates.\n                properties:\n                  disableAccountKeyGeneration:\n                    description: Enables or disables generating a new ACME account\n                      key. If true, the Issuer resource will *not* request a new account\n                      but will expect the account key to be supplied via an existing\n                      secret. If false, the cert-manager system will generate a new\n                      ACME account key for the Issuer. Defaults to false.\n                    type: boolean\n                  email:\n                    description: Email is the email address to be associated with\n                      the ACME account. This field is optional, but it is strongly\n                      recommended to be set. It will be used to contact you in case\n                      of issues with your account or certificates, including expiry\n                      notification emails. This field may be updated after the account\n                      is initially registered.\n                    type: string\n                  externalAccountBinding:\n                    description: ExternalAccountBinding is a reference to a CA external\n                      account of the ACME server. If set, upon registration cert-manager\n                      will attempt to associate the given external account credentials\n                      with the registered ACME account.\n                    properties:\n                      keyAlgorithm:\n                        description: keyAlgorithm is the MAC key algorithm that the\n                          key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".\n                        enum:\n                        - HS256\n                        - HS384\n                        - HS512\n                        type: string\n                      keyID:\n                        description: keyID is the ID of the CA key that the External\n                          Account is bound to.\n                        type: string\n                      keySecretRef:\n                        description: keySecretRef is a Secret Key Selector referencing\n                          a data item in a Kubernetes Secret which holds the symmetric\n                          MAC key of the External Account Binding. The `key` is the\n                          index string that is paired with the key data in the Secret\n                          and should not be confused with the key data itself, or\n                          indeed with the External Account Binding keyID above. The\n                          secret key stored in the Secret **must** be un-padded, base64\n                          URL encoded data.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    required:\n                    - keyAlgorithm\n                    - keyID\n                    - keySecretRef\n                    type: object\n                  preferredChain:\n                    description: 'PreferredChain is the chain to use if the ACME server\n                      outputs multiple. PreferredChain is no guarantee that this one\n                      gets delivered by the ACME endpoint. For example, for Let''s\n                      Encrypt''s DST crosssign you would use: \"DST Root CA X3\" or\n                      \"ISRG Root X1\" for the newer Let''s Encrypt root CA. This value\n                      picks the first certificate bundle in the ACME alternative chains\n                      that has a certificate with this value as its issuer''s CN'\n                    maxLength: 64\n                    type: string\n                  privateKeySecretRef:\n                    description: PrivateKey is the name of a Kubernetes Secret resource\n                      that will be used to store the automatically generated ACME\n                      account private key. Optionally, a `key` may be specified to\n                      select a specific entry within the named Secret resource. If\n                      `key` is not specified, a default of `tls.key` will be used.\n                    properties:\n                      key:\n                        description: The key of the entry in the Secret resource's\n                          `data` field to be used. Some instances of this field may\n                          be defaulted, in others it may be required.\n                        type: string\n                      name:\n                        description: 'Name of the resource being referred to. More\n                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                        type: string\n                    required:\n                    - name\n                    type: object\n                  server:\n                    description: 'Server is the URL used to access the ACME server''s\n                      ''directory'' endpoint. For example, for Let''s Encrypt''s staging\n                      endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\".\n                      Only ACME v2 endpoints (i.e. RFC 8555) are supported.'\n                    type: string\n                  skipTLSVerify:\n                    description: Enables or disables validation of the ACME server\n                      TLS certificate. If true, requests to the ACME server will not\n                      have their TLS certificate validated (i.e. insecure connections\n                      will be allowed). Only enable this option in development environments.\n                      The cert-manager system installed roots will be used to verify\n                      connections to the ACME server if this is false. Defaults to\n                      false.\n                    type: boolean\n                  solvers:\n                    description: 'Solvers is a list of challenge solvers that will\n                      be used to solve ACME challenges for the matching domains. Solver\n                      configurations must be provided in order to obtain certificates\n                      from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/'\n                    items:\n                      description: Configures an issuer to solve challenges using\n                        the specified options. Only one of HTTP01 or DNS01 may be\n                        provided.\n                      properties:\n                        dns01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the DNS01 challenge flow.\n                          properties:\n                            acmeDNS:\n                              description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)\n                                API to manage DNS01 challenge records.\n                              properties:\n                                accountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                host:\n                                  type: string\n                              required:\n                              - accountSecretRef\n                              - host\n                              type: object\n                            akamai:\n                              description: Use the Akamai DNS zone management API\n                                to manage DNS01 challenge records.\n                              properties:\n                                accessTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientSecretSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                serviceConsumerDomain:\n                                  type: string\n                              required:\n                              - accessTokenSecretRef\n                              - clientSecretSecretRef\n                              - clientTokenSecretRef\n                              - serviceConsumerDomain\n                              type: object\n                            azureDNS:\n                              description: Use the Microsoft Azure DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                clientID:\n                                  description: if both this and ClientSecret are left\n                                    unset MSI will be used\n                                  type: string\n                                clientSecretSecretRef:\n                                  description: if both this and ClientID are left\n                                    unset MSI will be used\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                environment:\n                                  enum:\n                                  - AzurePublicCloud\n                                  - AzureChinaCloud\n                                  - AzureGermanCloud\n                                  - AzureUSGovernmentCloud\n                                  type: string\n                                hostedZoneName:\n                                  type: string\n                                resourceGroupName:\n                                  type: string\n                                subscriptionID:\n                                  type: string\n                                tenantID:\n                                  description: when specifying ClientID and ClientSecret\n                                    then this field is also needed\n                                  type: string\n                              required:\n                              - resourceGroupName\n                              - subscriptionID\n                              type: object\n                            cloudDNS:\n                              description: Use the Google Cloud DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                hostedZoneName:\n                                  description: HostedZoneName is an optional field\n                                    that tells cert-manager in which Cloud DNS zone\n                                    the challenge record has to be created. If left\n                                    empty cert-manager will automatically choose a\n                                    zone.\n                                  type: string\n                                project:\n                                  type: string\n                                serviceAccountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - project\n                              type: object\n                            cloudflare:\n                              description: Use the Cloudflare API to manage DNS01\n                                challenge records.\n                              properties:\n                                apiKeySecretRef:\n                                  description: 'API key to use to authenticate with\n                                    Cloudflare. Note: using an API token to authenticate\n                                    is now the recommended method as it allows greater\n                                    control of permissions.'\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                apiTokenSecretRef:\n                                  description: API token used to authenticate with\n                                    Cloudflare.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                email:\n                                  description: Email of the account, only required\n                                    when using API key based authentication.\n                                  type: string\n                              type: object\n                            cnameStrategy:\n                              description: CNAMEStrategy configures how the DNS01\n                                provider should handle CNAME records when found in\n                                DNS zones.\n                              enum:\n                              - None\n                              - Follow\n                              type: string\n                            digitalocean:\n                              description: Use the DigitalOcean DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                tokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - tokenSecretRef\n                              type: object\n                            rfc2136:\n                              description: Use RFC2136 (\"Dynamic Updates in the Domain\n                                Name System\") (https://datatracker.ietf.org/doc/rfc2136/)\n                                to manage DNS01 challenge records.\n                              properties:\n                                nameserver:\n                                  description: The IP address or hostname of an authoritative\n                                    DNS server supporting RFC2136 in the form host:port.\n                                    If the host is an IPv6 address it must be enclosed\n                                    in square brackets (e.g [2001:db8::1]) ; port\n                                    is optional. This field is required.\n                                  type: string\n                                tsigAlgorithm:\n                                  description: 'The TSIG Algorithm configured in the\n                                    DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``\n                                    and ``tsigKeyName`` are defined. Supported values\n                                    are (case-insensitive): ``HMACMD5`` (default),\n                                    ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'\n                                  type: string\n                                tsigKeyName:\n                                  description: The TSIG Key name configured in the\n                                    DNS. If ``tsigSecretSecretRef`` is defined, this\n                                    field is required.\n                                  type: string\n                                tsigSecretSecretRef:\n                                  description: The name of the secret containing the\n                                    TSIG value. If ``tsigKeyName`` is defined, this\n                                    field is required.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - nameserver\n                              type: object\n                            route53:\n                              description: Use the AWS Route53 API to manage DNS01\n                                challenge records.\n                              properties:\n                                accessKeyID:\n                                  description: 'The AccessKeyID is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata see:\n                                    https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'\n                                  type: string\n                                hostedZoneID:\n                                  description: If set, the provider will manage only\n                                    this zone in Route53 and will not do an lookup\n                                    using the route53:ListHostedZonesByName api call.\n                                  type: string\n                                region:\n                                  description: Always set the region when using AccessKeyID\n                                    and SecretAccessKey\n                                  type: string\n                                role:\n                                  description: Role is a Role ARN which the Route53\n                                    provider will assume using either the explicit\n                                    credentials AccessKeyID/SecretAccessKey or the\n                                    inferred credentials from environment variables,\n                                    shared credentials file or AWS Instance metadata\n                                  type: string\n                                secretAccessKeySecretRef:\n                                  description: The SecretAccessKey is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - region\n                              type: object\n                            webhook:\n                              description: Configure an external webhook based DNS01\n                                challenge solver to manage DNS01 challenge records.\n                              properties:\n                                config:\n                                  description: Additional configuration that should\n                                    be passed to the webhook apiserver when challenges\n                                    are processed. This can contain arbitrary JSON\n                                    data. Secret values should not be specified in\n                                    this stanza. If secret values are needed (e.g.\n                                    credentials for a DNS service), you should use\n                                    a SecretKeySelector to reference a Secret resource.\n                                    For details on the schema of this field, consult\n                                    the webhook provider implementation's documentation.\n                                  x-kubernetes-preserve-unknown-fields: true\n                                groupName:\n                                  description: The API group name that should be used\n                                    when POSTing ChallengePayload resources to the\n                                    webhook apiserver. This should be the same as\n                                    the GroupName specified in the webhook provider\n                                    implementation.\n                                  type: string\n                                solverName:\n                                  description: The name of the solver to use, as defined\n                                    in the webhook provider implementation. This will\n                                    typically be the name of the provider, e.g. 'cloudflare'.\n                                  type: string\n                              required:\n                              - groupName\n                              - solverName\n                              type: object\n                          type: object\n                        http01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the HTTP01 challenge flow.\n                            It is not possible to obtain certificates for wildcard\n                            domain names (e.g. `*.example.com`) using the HTTP01 challenge\n                            mechanism.\n                          properties:\n                            ingress:\n                              description: The ingress based HTTP01 challenge solver\n                                will solve challenges by creating or modifying Ingress\n                                resources in order to route requests for '/.well-known/acme-challenge/XYZ'\n                                to 'challenge solver' pods that are provisioned by\n                                cert-manager for each Challenge to be completed.\n                              properties:\n                                class:\n                                  description: The ingress class to use when creating\n                                    Ingress resources to solve ACME challenges that\n                                    use this challenge solver. Only one of 'class'\n                                    or 'name' may be specified.\n                                  type: string\n                                ingressTemplate:\n                                  description: Optional ingress template used to configure\n                                    the ACME challenge solver ingress used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the ingress\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the created ACME HTTP01 solver\n                                            ingress.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver ingress.\n                                          type: object\n                                      type: object\n                                  type: object\n                                name:\n                                  description: The name of the ingress resource that\n                                    should have ACME challenge solving routes inserted\n                                    into it in order to solve HTTP01 challenges. This\n                                    is typically used in conjunction with ingress\n                                    controllers like ingress-gce, which maintains\n                                    a 1:1 mapping between external IPs and ingress\n                                    resources.\n                                  type: string\n                                podTemplate:\n                                  description: Optional pod template used to configure\n                                    the ACME challenge solver pods used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the pod\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the create ACME HTTP01 solver\n                                            pods.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver pods.\n                                          type: object\n                                      type: object\n                                    spec:\n                                      description: PodSpec defines overrides for the\n                                        HTTP01 challenge solver pod. Only the 'priorityClassName',\n                                        'nodeSelector', 'affinity', 'serviceAccountName'\n                                        and 'tolerations' fields are supported currently.\n                                        All other fields will be ignored.\n                                      properties:\n                                        affinity:\n                                          description: If specified, the pod's scheduling\n                                            constraints\n                                          properties:\n                                            nodeAffinity:\n                                              description: Describes node affinity\n                                                scheduling rules for the pod.\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node matches\n                                                    the corresponding matchExpressions;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: An empty preferred\n                                                      scheduling term matches all\n                                                      objects with implicit weight\n                                                      0 (i.e. it's a no-op). A null\n                                                      preferred scheduling term matches\n                                                      no objects (i.e. is also a no-op).\n                                                    properties:\n                                                      preference:\n                                                        description: A node selector\n                                                          term, associated with the\n                                                          corresponding weight.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      weight:\n                                                        description: Weight associated\n                                                          with matching the corresponding\n                                                          nodeSelectorTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - preference\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to an\n                                                    update), the system may or may\n                                                    not try to eventually evict the\n                                                    pod from its node.\n                                                  properties:\n                                                    nodeSelectorTerms:\n                                                      description: Required. A list\n                                                        of node selector terms. The\n                                                        terms are ORed.\n                                                      items:\n                                                        description: A null or empty\n                                                          node selector term matches\n                                                          no objects. The requirements\n                                                          of them are ANDed. The TopologySelectorTerm\n                                                          type implements a subset\n                                                          of the NodeSelectorTerm.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      type: array\n                                                  required:\n                                                  - nodeSelectorTerms\n                                                  type: object\n                                              type: object\n                                            podAffinity:\n                                              description: Describes pod affinity\n                                                scheduling rules (e.g. co-locate this\n                                                pod in the same node, zone, etc. as\n                                                some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node has pods\n                                                    which matches the corresponding\n                                                    podAffinityTerm; the node(s) with\n                                                    the highest sum are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to a pod\n                                                    label update), the system may\n                                                    or may not try to eventually evict\n                                                    the pod from its node. When there\n                                                    are multiple elements, the lists\n                                                    of nodes corresponding to each\n                                                    podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                            podAntiAffinity:\n                                              description: Describes pod anti-affinity\n                                                scheduling rules (e.g. avoid putting\n                                                this pod in the same node, zone, etc.\n                                                as some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the anti-affinity\n                                                    expressions specified by this\n                                                    field, but it may choose a node\n                                                    that violates one or more of the\n                                                    expressions. The node that is\n                                                    most preferred is the one with\n                                                    the greatest sum of weights, i.e.\n                                                    for each node that meets all of\n                                                    the scheduling requirements (resource\n                                                    request, requiredDuringScheduling\n                                                    anti-affinity expressions, etc.),\n                                                    compute a sum by iterating through\n                                                    the elements of this field and\n                                                    adding \"weight\" to the sum if\n                                                    the node has pods which matches\n                                                    the corresponding podAffinityTerm;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the anti-affinity\n                                                    requirements specified by this\n                                                    field are not met at scheduling\n                                                    time, the pod will not be scheduled\n                                                    onto the node. If the anti-affinity\n                                                    requirements specified by this\n                                                    field cease to be met at some\n                                                    point during pod execution (e.g.\n                                                    due to a pod label update), the\n                                                    system may or may not try to eventually\n                                                    evict the pod from its node. When\n                                                    there are multiple elements, the\n                                                    lists of nodes corresponding to\n                                                    each podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                          type: object\n                                        nodeSelector:\n                                          additionalProperties:\n                                            type: string\n                                          description: 'NodeSelector is a selector\n                                            which must be true for the pod to fit\n                                            on a node. Selector which must match a\n                                            node''s labels for the pod to be scheduled\n                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'\n                                          type: object\n                                        priorityClassName:\n                                          description: If specified, the pod's priorityClassName.\n                                          type: string\n                                        serviceAccountName:\n                                          description: If specified, the pod's service\n                                            account\n                                          type: string\n                                        tolerations:\n                                          description: If specified, the pod's tolerations.\n                                          items:\n                                            description: The pod this Toleration is\n                                              attached to tolerates any taint that\n                                              matches the triple <key,value,effect>\n                                              using the matching operator <operator>.\n                                            properties:\n                                              effect:\n                                                description: Effect indicates the\n                                                  taint effect to match. Empty means\n                                                  match all taint effects. When specified,\n                                                  allowed values are NoSchedule, PreferNoSchedule\n                                                  and NoExecute.\n                                                type: string\n                                              key:\n                                                description: Key is the taint key\n                                                  that the toleration applies to.\n                                                  Empty means match all taint keys.\n                                                  If the key is empty, operator must\n                                                  be Exists; this combination means\n                                                  to match all values and all keys.\n                                                type: string\n                                              operator:\n                                                description: Operator represents a\n                                                  key's relationship to the value.\n                                                  Valid operators are Exists and Equal.\n                                                  Defaults to Equal. Exists is equivalent\n                                                  to wildcard for value, so that a\n                                                  pod can tolerate all taints of a\n                                                  particular category.\n                                                type: string\n                                              tolerationSeconds:\n                                                description: TolerationSeconds represents\n                                                  the period of time the toleration\n                                                  (which must be of effect NoExecute,\n                                                  otherwise this field is ignored)\n                                                  tolerates the taint. By default,\n                                                  it is not set, which means tolerate\n                                                  the taint forever (do not evict).\n                                                  Zero and negative values will be\n                                                  treated as 0 (evict immediately)\n                                                  by the system.\n                                                format: int64\n                                                type: integer\n                                              value:\n                                                description: Value is the taint value\n                                                  the toleration matches to. If the\n                                                  operator is Exists, the value should\n                                                  be empty, otherwise just a regular\n                                                  string.\n                                                type: string\n                                            type: object\n                                          type: array\n                                      type: object\n                                  type: object\n                                serviceType:\n                                  description: Optional service type for Kubernetes\n                                    solver service\n                                  type: string\n                              type: object\n                          type: object\n                        selector:\n                          description: Selector selects a set of DNSNames on the Certificate\n                            resource that should be solved using this challenge solver.\n                            If not specified, the solver will be treated as the 'default'\n                            solver with the lowest priority, i.e. if any other solver\n                            has a more specific match, it will be used instead.\n                          properties:\n                            dnsNames:\n                              description: List of DNSNames that this solver will\n                                be used to solve. If specified and a match is found,\n                                a dnsNames selector will take precedence over a dnsZones\n                                selector. If multiple solvers match with the same\n                                dnsNames value, the solver with the most matching\n                                labels in matchLabels will be selected. If neither\n                                has more matches, the solver defined earlier in the\n                                list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            dnsZones:\n                              description: List of DNSZones that this solver will\n                                be used to solve. The most specific DNS zone match\n                                specified here will take precedence over other DNS\n                                zone matches, so a solver specifying sys.example.com\n                                will be selected over one specifying example.com for\n                                the domain www.sys.example.com. If multiple solvers\n                                match with the same dnsZones value, the solver with\n                                the most matching labels in matchLabels will be selected.\n                                If neither has more matches, the solver defined earlier\n                                in the list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            matchLabels:\n                              additionalProperties:\n                                type: string\n                              description: A label selector that is used to refine\n                                the set of certificate's that this challenge solver\n                                will apply to.\n                              type: object\n                          type: object\n                      type: object\n                    type: array\n                required:\n                - privateKeySecretRef\n                - server\n                type: object\n              ca:\n                description: CA configures this issuer to sign certificates using\n                  a signing CA keypair stored in a Secret resource. This is used to\n                  build internal PKIs that are managed by cert-manager.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set,\n                      certificates will be issued without distribution points set.\n                    items:\n                      type: string\n                    type: array\n                  secretName:\n                    description: SecretName is the name of the secret used to sign\n                      Certificates issued by this Issuer.\n                    type: string\n                required:\n                - secretName\n                type: object\n              selfSigned:\n                description: SelfSigned configures this issuer to 'self sign' certificates\n                  using the private key used to create the CertificateRequest object.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set\n                      certificate will be issued without CDP. Values are strings.\n                    items:\n                      type: string\n                    type: array\n                type: object\n              vault:\n                description: Vault configures this issuer to sign certificates using\n                  a HashiCorp Vault PKI backend.\n                properties:\n                  auth:\n                    description: Auth configures how cert-manager authenticates with\n                      the Vault server.\n                    properties:\n                      appRole:\n                        description: AppRole authenticates with Vault using the App\n                          Role auth mechanism, with the role and secret stored in\n                          a Kubernetes Secret resource.\n                        properties:\n                          path:\n                            description: 'Path where the App Role authentication backend\n                              is mounted in Vault, e.g: \"approle\"'\n                            type: string\n                          roleId:\n                            description: RoleID configured in the App Role authentication\n                              backend when setting up the authentication backend in\n                              Vault.\n                            type: string\n                          secretRef:\n                            description: Reference to a key in a Secret that contains\n                              the App Role secret used to authenticate with Vault.\n                              The `key` field must be specified and denotes which\n                              entry within the Secret resource is used as the app\n                              role secret.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - path\n                        - roleId\n                        - secretRef\n                        type: object\n                      kubernetes:\n                        description: Kubernetes authenticates with Vault by passing\n                          the ServiceAccount token stored in the named Secret resource\n                          to the Vault server.\n                        properties:\n                          mountPath:\n                            description: The Vault mountPath here is the mount path\n                              to use when authenticating with Vault. For example,\n                              setting a value to `/v1/auth/foo`, will use the path\n                              `/v1/auth/foo/login` to authenticate with Vault. If\n                              unspecified, the default value \"/v1/auth/kubernetes\"\n                              will be used.\n                            type: string\n                          role:\n                            description: A required field containing the Vault Role\n                              to assume. A Role binds a Kubernetes ServiceAccount\n                              with a set of Vault policies.\n                            type: string\n                          secretRef:\n                            description: The required Secret field containing a Kubernetes\n                              ServiceAccount JWT used for authenticating with Vault.\n                              Use of 'ambient credentials' is not supported.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - role\n                        - secretRef\n                        type: object\n                      tokenSecretRef:\n                        description: TokenSecretRef authenticates with Vault by presenting\n                          a token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    type: object\n                  caBundle:\n                    description: PEM encoded CA bundle used to validate Vault server\n                      certificate. Only used if the Server URL is using HTTPS protocol.\n                      This parameter is ignored for plain HTTP protocol connection.\n                      If not set the system root certificates are used to validate\n                      the TLS connection.\n                    format: byte\n                    type: string\n                  namespace:\n                    description: 'Name of the vault namespace. Namespaces is a set\n                      of features within Vault Enterprise that allows Vault environments\n                      to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces\n                      can be found here https://www.vaultproject.io/docs/enterprise/namespaces'\n                    type: string\n                  path:\n                    description: 'Path is the mount path of the Vault PKI backend''s\n                      `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".'\n                    type: string\n                  server:\n                    description: 'Server is the connection address for the Vault server,\n                      e.g: \"https://vault.example.com:8200\".'\n                    type: string\n                required:\n                - auth\n                - path\n                - server\n                type: object\n              venafi:\n                description: Venafi configures this issuer to sign certificates using\n                  a Venafi TPP or Venafi Cloud policy zone.\n                properties:\n                  cloud:\n                    description: Cloud specifies the Venafi cloud configuration settings.\n                      Only one of TPP or Cloud may be specified.\n                    properties:\n                      apiTokenSecretRef:\n                        description: APITokenSecretRef is a secret key selector for\n                          the Venafi Cloud API token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: URL is the base URL for Venafi Cloud. Defaults\n                          to \"https://api.venafi.cloud/v1\".\n                        type: string\n                    required:\n                    - apiTokenSecretRef\n                    type: object\n                  tpp:\n                    description: TPP specifies Trust Protection Platform configuration\n                      settings. Only one of TPP or Cloud may be specified.\n                    properties:\n                      caBundle:\n                        description: CABundle is a PEM encoded TLS certificate to\n                          use to verify connections to the TPP instance. If specified,\n                          system roots will not be used and the issuing CA for the\n                          TPP instance must be verifiable using the provided root.\n                          If not specified, the connection will be verified using\n                          the cert-manager system root certificates.\n                        format: byte\n                        type: string\n                      credentialsRef:\n                        description: CredentialsRef is a reference to a Secret containing\n                          the username and password for the TPP server. The secret\n                          must contain two keys, 'username' and 'password'.\n                        properties:\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: 'URL is the base URL for the vedsdk endpoint\n                          of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".'\n                        type: string\n                    required:\n                    - credentialsRef\n                    - url\n                    type: object\n                  zone:\n                    description: Zone is the Venafi Policy Zone to use for this issuer.\n                      All requests made to the Venafi platform will be restricted\n                      by the named zone policy. This field is required.\n                    type: string\n                required:\n                - zone\n                type: object\n            type: object\n          status:\n            description: Status of the Issuer. This is set and managed automatically.\n            properties:\n              acme:\n                description: ACME specific status options. This field should only\n                  be set if the Issuer is configured to use an ACME server to issue\n                  certificates.\n                properties:\n                  lastRegisteredEmail:\n                    description: LastRegisteredEmail is the email associated with\n                      the latest registered ACME account, in order to track changes\n                      made to registered account associated with the  Issuer\n                    type: string\n                  uri:\n                    description: URI is the unique account identifier, which can also\n                      be used to retrieve account details from the CA\n                    type: string\n                type: object\n              conditions:\n                description: List of status conditions to indicate the status of a\n                  CertificateRequest. Known condition types are `Ready`.\n                items:\n                  description: IssuerCondition contains condition information for\n                    an Issuer.\n                  properties:\n                    lastTransitionTime:\n                      description: LastTransitionTime is the timestamp corresponding\n                        to the last status change of this condition.\n                      format: date-time\n                      type: string\n                    message:\n                      description: Message is a human readable description of the\n                        details of the last transition, complementing reason.\n                      type: string\n                    reason:\n                      description: Reason is a brief machine readable explanation\n                        for the condition's last transition.\n                      type: string\n                    status:\n                      description: Status of the condition, one of ('True', 'False',\n                        'Unknown').\n                      enum:\n                      - \"True\"\n                      - \"False\"\n                      - Unknown\n                      type: string\n                    type:\n                      description: Type of the condition, known values are ('Ready').\n                      type: string\n                  required:\n                  - status\n                  - type\n                  type: object\n                type: array\n            type: object\n        required:\n        - spec\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].status\n      name: Ready\n      type: string\n    - jsonPath: .status.conditions[?(@.type==\"Ready\")].message\n      name: Status\n      priority: 1\n      type: string\n    - description: CreationTimestamp is a timestamp representing the server time when\n        this object was created. It is not guaranteed to be set in happens-before\n        order across separate operations. Clients may not set this value. It is represented\n        in RFC3339 form and is in UTC.\n      jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1\n    schema:\n      openAPIV3Schema:\n        description: An Issuer represents a certificate issuing authority which can\n          be referenced as part of `issuerRef` fields. It is scoped to a single namespace\n          and can therefore only be referenced by resources within the same namespace.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: Desired state of the Issuer resource.\n            properties:\n              acme:\n                description: ACME configures this issuer to communicate with a RFC8555\n                  (ACME) server to obtain signed x509 certificates.\n                properties:\n                  disableAccountKeyGeneration:\n                    description: Enables or disables generating a new ACME account\n                      key. If true, the Issuer resource will *not* request a new account\n                      but will expect the account key to be supplied via an existing\n                      secret. If false, the cert-manager system will generate a new\n                      ACME account key for the Issuer. Defaults to false.\n                    type: boolean\n                  email:\n                    description: Email is the email address to be associated with\n                      the ACME account. This field is optional, but it is strongly\n                      recommended to be set. It will be used to contact you in case\n                      of issues with your account or certificates, including expiry\n                      notification emails. This field may be updated after the account\n                      is initially registered.\n                    type: string\n                  externalAccountBinding:\n                    description: ExternalAccountBinding is a reference to a CA external\n                      account of the ACME server. If set, upon registration cert-manager\n                      will attempt to associate the given external account credentials\n                      with the registered ACME account.\n                    properties:\n                      keyAlgorithm:\n                        description: keyAlgorithm is the MAC key algorithm that the\n                          key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".\n                        enum:\n                        - HS256\n                        - HS384\n                        - HS512\n                        type: string\n                      keyID:\n                        description: keyID is the ID of the CA key that the External\n                          Account is bound to.\n                        type: string\n                      keySecretRef:\n                        description: keySecretRef is a Secret Key Selector referencing\n                          a data item in a Kubernetes Secret which holds the symmetric\n                          MAC key of the External Account Binding. The `key` is the\n                          index string that is paired with the key data in the Secret\n                          and should not be confused with the key data itself, or\n                          indeed with the External Account Binding keyID above. The\n                          secret key stored in the Secret **must** be un-padded, base64\n                          URL encoded data.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    required:\n                    - keyAlgorithm\n                    - keyID\n                    - keySecretRef\n                    type: object\n                  preferredChain:\n                    description: 'PreferredChain is the chain to use if the ACME server\n                      outputs multiple. PreferredChain is no guarantee that this one\n                      gets delivered by the ACME endpoint. For example, for Let''s\n                      Encrypt''s DST crosssign you would use: \"DST Root CA X3\" or\n                      \"ISRG Root X1\" for the newer Let''s Encrypt root CA. This value\n                      picks the first certificate bundle in the ACME alternative chains\n                      that has a certificate with this value as its issuer''s CN'\n                    maxLength: 64\n                    type: string\n                  privateKeySecretRef:\n                    description: PrivateKey is the name of a Kubernetes Secret resource\n                      that will be used to store the automatically generated ACME\n                      account private key. Optionally, a `key` may be specified to\n                      select a specific entry within the named Secret resource. If\n                      `key` is not specified, a default of `tls.key` will be used.\n                    properties:\n                      key:\n                        description: The key of the entry in the Secret resource's\n                          `data` field to be used. Some instances of this field may\n                          be defaulted, in others it may be required.\n                        type: string\n                      name:\n                        description: 'Name of the resource being referred to. More\n                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                        type: string\n                    required:\n                    - name\n                    type: object\n                  server:\n                    description: 'Server is the URL used to access the ACME server''s\n                      ''directory'' endpoint. For example, for Let''s Encrypt''s staging\n                      endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\".\n                      Only ACME v2 endpoints (i.e. RFC 8555) are supported.'\n                    type: string\n                  skipTLSVerify:\n                    description: Enables or disables validation of the ACME server\n                      TLS certificate. If true, requests to the ACME server will not\n                      have their TLS certificate validated (i.e. insecure connections\n                      will be allowed). Only enable this option in development environments.\n                      The cert-manager system installed roots will be used to verify\n                      connections to the ACME server if this is false. Defaults to\n                      false.\n                    type: boolean\n                  solvers:\n                    description: 'Solvers is a list of challenge solvers that will\n                      be used to solve ACME challenges for the matching domains. Solver\n                      configurations must be provided in order to obtain certificates\n                      from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/'\n                    items:\n                      description: Configures an issuer to solve challenges using\n                        the specified options. Only one of HTTP01 or DNS01 may be\n                        provided.\n                      properties:\n                        dns01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the DNS01 challenge flow.\n                          properties:\n                            acmeDNS:\n                              description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)\n                                API to manage DNS01 challenge records.\n                              properties:\n                                accountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                host:\n                                  type: string\n                              required:\n                              - accountSecretRef\n                              - host\n                              type: object\n                            akamai:\n                              description: Use the Akamai DNS zone management API\n                                to manage DNS01 challenge records.\n                              properties:\n                                accessTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientSecretSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                clientTokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                serviceConsumerDomain:\n                                  type: string\n                              required:\n                              - accessTokenSecretRef\n                              - clientSecretSecretRef\n                              - clientTokenSecretRef\n                              - serviceConsumerDomain\n                              type: object\n                            azureDNS:\n                              description: Use the Microsoft Azure DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                clientID:\n                                  description: if both this and ClientSecret are left\n                                    unset MSI will be used\n                                  type: string\n                                clientSecretSecretRef:\n                                  description: if both this and ClientID are left\n                                    unset MSI will be used\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                environment:\n                                  enum:\n                                  - AzurePublicCloud\n                                  - AzureChinaCloud\n                                  - AzureGermanCloud\n                                  - AzureUSGovernmentCloud\n                                  type: string\n                                hostedZoneName:\n                                  type: string\n                                resourceGroupName:\n                                  type: string\n                                subscriptionID:\n                                  type: string\n                                tenantID:\n                                  description: when specifying ClientID and ClientSecret\n                                    then this field is also needed\n                                  type: string\n                              required:\n                              - resourceGroupName\n                              - subscriptionID\n                              type: object\n                            cloudDNS:\n                              description: Use the Google Cloud DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                hostedZoneName:\n                                  description: HostedZoneName is an optional field\n                                    that tells cert-manager in which Cloud DNS zone\n                                    the challenge record has to be created. If left\n                                    empty cert-manager will automatically choose a\n                                    zone.\n                                  type: string\n                                project:\n                                  type: string\n                                serviceAccountSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - project\n                              type: object\n                            cloudflare:\n                              description: Use the Cloudflare API to manage DNS01\n                                challenge records.\n                              properties:\n                                apiKeySecretRef:\n                                  description: 'API key to use to authenticate with\n                                    Cloudflare. Note: using an API token to authenticate\n                                    is now the recommended method as it allows greater\n                                    control of permissions.'\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                apiTokenSecretRef:\n                                  description: API token used to authenticate with\n                                    Cloudflare.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                                email:\n                                  description: Email of the account, only required\n                                    when using API key based authentication.\n                                  type: string\n                              type: object\n                            cnameStrategy:\n                              description: CNAMEStrategy configures how the DNS01\n                                provider should handle CNAME records when found in\n                                DNS zones.\n                              enum:\n                              - None\n                              - Follow\n                              type: string\n                            digitalocean:\n                              description: Use the DigitalOcean DNS API to manage\n                                DNS01 challenge records.\n                              properties:\n                                tokenSecretRef:\n                                  description: A reference to a specific 'key' within\n                                    a Secret resource. In some instances, `key` is\n                                    a required field.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - tokenSecretRef\n                              type: object\n                            rfc2136:\n                              description: Use RFC2136 (\"Dynamic Updates in the Domain\n                                Name System\") (https://datatracker.ietf.org/doc/rfc2136/)\n                                to manage DNS01 challenge records.\n                              properties:\n                                nameserver:\n                                  description: The IP address or hostname of an authoritative\n                                    DNS server supporting RFC2136 in the form host:port.\n                                    If the host is an IPv6 address it must be enclosed\n                                    in square brackets (e.g [2001:db8::1]) ; port\n                                    is optional. This field is required.\n                                  type: string\n                                tsigAlgorithm:\n                                  description: 'The TSIG Algorithm configured in the\n                                    DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``\n                                    and ``tsigKeyName`` are defined. Supported values\n                                    are (case-insensitive): ``HMACMD5`` (default),\n                                    ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'\n                                  type: string\n                                tsigKeyName:\n                                  description: The TSIG Key name configured in the\n                                    DNS. If ``tsigSecretSecretRef`` is defined, this\n                                    field is required.\n                                  type: string\n                                tsigSecretSecretRef:\n                                  description: The name of the secret containing the\n                                    TSIG value. If ``tsigKeyName`` is defined, this\n                                    field is required.\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - nameserver\n                              type: object\n                            route53:\n                              description: Use the AWS Route53 API to manage DNS01\n                                challenge records.\n                              properties:\n                                accessKeyID:\n                                  description: 'The AccessKeyID is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata see:\n                                    https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'\n                                  type: string\n                                hostedZoneID:\n                                  description: If set, the provider will manage only\n                                    this zone in Route53 and will not do an lookup\n                                    using the route53:ListHostedZonesByName api call.\n                                  type: string\n                                region:\n                                  description: Always set the region when using AccessKeyID\n                                    and SecretAccessKey\n                                  type: string\n                                role:\n                                  description: Role is a Role ARN which the Route53\n                                    provider will assume using either the explicit\n                                    credentials AccessKeyID/SecretAccessKey or the\n                                    inferred credentials from environment variables,\n                                    shared credentials file or AWS Instance metadata\n                                  type: string\n                                secretAccessKeySecretRef:\n                                  description: The SecretAccessKey is used for authentication.\n                                    If not set we fall-back to using env vars, shared\n                                    credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials\n                                  properties:\n                                    key:\n                                      description: The key of the entry in the Secret\n                                        resource's `data` field to be used. Some instances\n                                        of this field may be defaulted, in others\n                                        it may be required.\n                                      type: string\n                                    name:\n                                      description: 'Name of the resource being referred\n                                        to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                      type: string\n                                  required:\n                                  - name\n                                  type: object\n                              required:\n                              - region\n                              type: object\n                            webhook:\n                              description: Configure an external webhook based DNS01\n                                challenge solver to manage DNS01 challenge records.\n                              properties:\n                                config:\n                                  description: Additional configuration that should\n                                    be passed to the webhook apiserver when challenges\n                                    are processed. This can contain arbitrary JSON\n                                    data. Secret values should not be specified in\n                                    this stanza. If secret values are needed (e.g.\n                                    credentials for a DNS service), you should use\n                                    a SecretKeySelector to reference a Secret resource.\n                                    For details on the schema of this field, consult\n                                    the webhook provider implementation's documentation.\n                                  x-kubernetes-preserve-unknown-fields: true\n                                groupName:\n                                  description: The API group name that should be used\n                                    when POSTing ChallengePayload resources to the\n                                    webhook apiserver. This should be the same as\n                                    the GroupName specified in the webhook provider\n                                    implementation.\n                                  type: string\n                                solverName:\n                                  description: The name of the solver to use, as defined\n                                    in the webhook provider implementation. This will\n                                    typically be the name of the provider, e.g. 'cloudflare'.\n                                  type: string\n                              required:\n                              - groupName\n                              - solverName\n                              type: object\n                          type: object\n                        http01:\n                          description: Configures cert-manager to attempt to complete\n                            authorizations by performing the HTTP01 challenge flow.\n                            It is not possible to obtain certificates for wildcard\n                            domain names (e.g. `*.example.com`) using the HTTP01 challenge\n                            mechanism.\n                          properties:\n                            ingress:\n                              description: The ingress based HTTP01 challenge solver\n                                will solve challenges by creating or modifying Ingress\n                                resources in order to route requests for '/.well-known/acme-challenge/XYZ'\n                                to 'challenge solver' pods that are provisioned by\n                                cert-manager for each Challenge to be completed.\n                              properties:\n                                class:\n                                  description: The ingress class to use when creating\n                                    Ingress resources to solve ACME challenges that\n                                    use this challenge solver. Only one of 'class'\n                                    or 'name' may be specified.\n                                  type: string\n                                ingressTemplate:\n                                  description: Optional ingress template used to configure\n                                    the ACME challenge solver ingress used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the ingress\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the created ACME HTTP01 solver\n                                            ingress.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver ingress.\n                                          type: object\n                                      type: object\n                                  type: object\n                                name:\n                                  description: The name of the ingress resource that\n                                    should have ACME challenge solving routes inserted\n                                    into it in order to solve HTTP01 challenges. This\n                                    is typically used in conjunction with ingress\n                                    controllers like ingress-gce, which maintains\n                                    a 1:1 mapping between external IPs and ingress\n                                    resources.\n                                  type: string\n                                podTemplate:\n                                  description: Optional pod template used to configure\n                                    the ACME challenge solver pods used for HTTP01\n                                    challenges\n                                  properties:\n                                    metadata:\n                                      description: ObjectMeta overrides for the pod\n                                        used to solve HTTP01 challenges. Only the\n                                        'labels' and 'annotations' fields may be set.\n                                        If labels or annotations overlap with in-built\n                                        values, the values here will override the\n                                        in-built values.\n                                      properties:\n                                        annotations:\n                                          additionalProperties:\n                                            type: string\n                                          description: Annotations that should be\n                                            added to the create ACME HTTP01 solver\n                                            pods.\n                                          type: object\n                                        labels:\n                                          additionalProperties:\n                                            type: string\n                                          description: Labels that should be added\n                                            to the created ACME HTTP01 solver pods.\n                                          type: object\n                                      type: object\n                                    spec:\n                                      description: PodSpec defines overrides for the\n                                        HTTP01 challenge solver pod. Only the 'priorityClassName',\n                                        'nodeSelector', 'affinity', 'serviceAccountName'\n                                        and 'tolerations' fields are supported currently.\n                                        All other fields will be ignored.\n                                      properties:\n                                        affinity:\n                                          description: If specified, the pod's scheduling\n                                            constraints\n                                          properties:\n                                            nodeAffinity:\n                                              description: Describes node affinity\n                                                scheduling rules for the pod.\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node matches\n                                                    the corresponding matchExpressions;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: An empty preferred\n                                                      scheduling term matches all\n                                                      objects with implicit weight\n                                                      0 (i.e. it's a no-op). A null\n                                                      preferred scheduling term matches\n                                                      no objects (i.e. is also a no-op).\n                                                    properties:\n                                                      preference:\n                                                        description: A node selector\n                                                          term, associated with the\n                                                          corresponding weight.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      weight:\n                                                        description: Weight associated\n                                                          with matching the corresponding\n                                                          nodeSelectorTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - preference\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to an\n                                                    update), the system may or may\n                                                    not try to eventually evict the\n                                                    pod from its node.\n                                                  properties:\n                                                    nodeSelectorTerms:\n                                                      description: Required. A list\n                                                        of node selector terms. The\n                                                        terms are ORed.\n                                                      items:\n                                                        description: A null or empty\n                                                          node selector term matches\n                                                          no objects. The requirements\n                                                          of them are ANDed. The TopologySelectorTerm\n                                                          type implements a subset\n                                                          of the NodeSelectorTerm.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's labels.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchFields:\n                                                            description: A list of\n                                                              node selector requirements\n                                                              by node's fields.\n                                                            items:\n                                                              description: A node\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: The\n                                                                    label key that\n                                                                    the selector applies\n                                                                    to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: Represents\n                                                                    a key's relationship\n                                                                    to a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists, DoesNotExist.\n                                                                    Gt, and Lt.\n                                                                  type: string\n                                                                values:\n                                                                  description: An\n                                                                    array of string\n                                                                    values. If the\n                                                                    operator is In\n                                                                    or NotIn, the\n                                                                    values array must\n                                                                    be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    If the operator\n                                                                    is Gt or Lt, the\n                                                                    values array must\n                                                                    have a single\n                                                                    element, which\n                                                                    will be interpreted\n                                                                    as an integer.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                        type: object\n                                                      type: array\n                                                  required:\n                                                  - nodeSelectorTerms\n                                                  type: object\n                                              type: object\n                                            podAffinity:\n                                              description: Describes pod affinity\n                                                scheduling rules (e.g. co-locate this\n                                                pod in the same node, zone, etc. as\n                                                some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the affinity expressions\n                                                    specified by this field, but it\n                                                    may choose a node that violates\n                                                    one or more of the expressions.\n                                                    The node that is most preferred\n                                                    is the one with the greatest sum\n                                                    of weights, i.e. for each node\n                                                    that meets all of the scheduling\n                                                    requirements (resource request,\n                                                    requiredDuringScheduling affinity\n                                                    expressions, etc.), compute a\n                                                    sum by iterating through the elements\n                                                    of this field and adding \"weight\"\n                                                    to the sum if the node has pods\n                                                    which matches the corresponding\n                                                    podAffinityTerm; the node(s) with\n                                                    the highest sum are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the affinity requirements\n                                                    specified by this field are not\n                                                    met at scheduling time, the pod\n                                                    will not be scheduled onto the\n                                                    node. If the affinity requirements\n                                                    specified by this field cease\n                                                    to be met at some point during\n                                                    pod execution (e.g. due to a pod\n                                                    label update), the system may\n                                                    or may not try to eventually evict\n                                                    the pod from its node. When there\n                                                    are multiple elements, the lists\n                                                    of nodes corresponding to each\n                                                    podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                            podAntiAffinity:\n                                              description: Describes pod anti-affinity\n                                                scheduling rules (e.g. avoid putting\n                                                this pod in the same node, zone, etc.\n                                                as some other pod(s)).\n                                              properties:\n                                                preferredDuringSchedulingIgnoredDuringExecution:\n                                                  description: The scheduler will\n                                                    prefer to schedule pods to nodes\n                                                    that satisfy the anti-affinity\n                                                    expressions specified by this\n                                                    field, but it may choose a node\n                                                    that violates one or more of the\n                                                    expressions. The node that is\n                                                    most preferred is the one with\n                                                    the greatest sum of weights, i.e.\n                                                    for each node that meets all of\n                                                    the scheduling requirements (resource\n                                                    request, requiredDuringScheduling\n                                                    anti-affinity expressions, etc.),\n                                                    compute a sum by iterating through\n                                                    the elements of this field and\n                                                    adding \"weight\" to the sum if\n                                                    the node has pods which matches\n                                                    the corresponding podAffinityTerm;\n                                                    the node(s) with the highest sum\n                                                    are the most preferred.\n                                                  items:\n                                                    description: The weights of all\n                                                      of the matched WeightedPodAffinityTerm\n                                                      fields are added per-node to\n                                                      find the most preferred node(s)\n                                                    properties:\n                                                      podAffinityTerm:\n                                                        description: Required. A pod\n                                                          affinity term, associated\n                                                          with the corresponding weight.\n                                                        properties:\n                                                          labelSelector:\n                                                            description: A label query\n                                                              over a set of resources,\n                                                              in this case pods.\n                                                            properties:\n                                                              matchExpressions:\n                                                                description: matchExpressions\n                                                                  is a list of label\n                                                                  selector requirements.\n                                                                  The requirements\n                                                                  are ANDed.\n                                                                items:\n                                                                  description: A label\n                                                                    selector requirement\n                                                                    is a selector\n                                                                    that contains\n                                                                    values, a key,\n                                                                    and an operator\n                                                                    that relates the\n                                                                    key and values.\n                                                                  properties:\n                                                                    key:\n                                                                      description: key\n                                                                        is the label\n                                                                        key that the\n                                                                        selector applies\n                                                                        to.\n                                                                      type: string\n                                                                    operator:\n                                                                      description: operator\n                                                                        represents\n                                                                        a key's relationship\n                                                                        to a set of\n                                                                        values. Valid\n                                                                        operators\n                                                                        are In, NotIn,\n                                                                        Exists and\n                                                                        DoesNotExist.\n                                                                      type: string\n                                                                    values:\n                                                                      description: values\n                                                                        is an array\n                                                                        of string\n                                                                        values. If\n                                                                        the operator\n                                                                        is In or NotIn,\n                                                                        the values\n                                                                        array must\n                                                                        be non-empty.\n                                                                        If the operator\n                                                                        is Exists\n                                                                        or DoesNotExist,\n                                                                        the values\n                                                                        array must\n                                                                        be empty.\n                                                                        This array\n                                                                        is replaced\n                                                                        during a strategic\n                                                                        merge patch.\n                                                                      items:\n                                                                        type: string\n                                                                      type: array\n                                                                  required:\n                                                                  - key\n                                                                  - operator\n                                                                  type: object\n                                                                type: array\n                                                              matchLabels:\n                                                                additionalProperties:\n                                                                  type: string\n                                                                description: matchLabels\n                                                                  is a map of {key,value}\n                                                                  pairs. A single\n                                                                  {key,value} in the\n                                                                  matchLabels map\n                                                                  is equivalent to\n                                                                  an element of matchExpressions,\n                                                                  whose key field\n                                                                  is \"key\", the operator\n                                                                  is \"In\", and the\n                                                                  values array contains\n                                                                  only \"value\". The\n                                                                  requirements are\n                                                                  ANDed.\n                                                                type: object\n                                                            type: object\n                                                          namespaces:\n                                                            description: namespaces\n                                                              specifies which namespaces\n                                                              the labelSelector applies\n                                                              to (matches against);\n                                                              null or empty list means\n                                                              \"this pod's namespace\"\n                                                            items:\n                                                              type: string\n                                                            type: array\n                                                          topologyKey:\n                                                            description: This pod\n                                                              should be co-located\n                                                              (affinity) or not co-located\n                                                              (anti-affinity) with\n                                                              the pods matching the\n                                                              labelSelector in the\n                                                              specified namespaces,\n                                                              where co-located is\n                                                              defined as running on\n                                                              a node whose value of\n                                                              the label with key topologyKey\n                                                              matches that of any\n                                                              node on which any of\n                                                              the selected pods is\n                                                              running. Empty topologyKey\n                                                              is not allowed.\n                                                            type: string\n                                                        required:\n                                                        - topologyKey\n                                                        type: object\n                                                      weight:\n                                                        description: weight associated\n                                                          with matching the corresponding\n                                                          podAffinityTerm, in the\n                                                          range 1-100.\n                                                        format: int32\n                                                        type: integer\n                                                    required:\n                                                    - podAffinityTerm\n                                                    - weight\n                                                    type: object\n                                                  type: array\n                                                requiredDuringSchedulingIgnoredDuringExecution:\n                                                  description: If the anti-affinity\n                                                    requirements specified by this\n                                                    field are not met at scheduling\n                                                    time, the pod will not be scheduled\n                                                    onto the node. If the anti-affinity\n                                                    requirements specified by this\n                                                    field cease to be met at some\n                                                    point during pod execution (e.g.\n                                                    due to a pod label update), the\n                                                    system may or may not try to eventually\n                                                    evict the pod from its node. When\n                                                    there are multiple elements, the\n                                                    lists of nodes corresponding to\n                                                    each podAffinityTerm are intersected,\n                                                    i.e. all terms must be satisfied.\n                                                  items:\n                                                    description: Defines a set of\n                                                      pods (namely those matching\n                                                      the labelSelector relative to\n                                                      the given namespace(s)) that\n                                                      this pod should be co-located\n                                                      (affinity) or not co-located\n                                                      (anti-affinity) with, where\n                                                      co-located is defined as running\n                                                      on a node whose value of the\n                                                      label with key <topologyKey>\n                                                      matches that of any node on\n                                                      which a pod of the set of pods\n                                                      is running\n                                                    properties:\n                                                      labelSelector:\n                                                        description: A label query\n                                                          over a set of resources,\n                                                          in this case pods.\n                                                        properties:\n                                                          matchExpressions:\n                                                            description: matchExpressions\n                                                              is a list of label selector\n                                                              requirements. The requirements\n                                                              are ANDed.\n                                                            items:\n                                                              description: A label\n                                                                selector requirement\n                                                                is a selector that\n                                                                contains values, a\n                                                                key, and an operator\n                                                                that relates the key\n                                                                and values.\n                                                              properties:\n                                                                key:\n                                                                  description: key\n                                                                    is the label key\n                                                                    that the selector\n                                                                    applies to.\n                                                                  type: string\n                                                                operator:\n                                                                  description: operator\n                                                                    represents a key's\n                                                                    relationship to\n                                                                    a set of values.\n                                                                    Valid operators\n                                                                    are In, NotIn,\n                                                                    Exists and DoesNotExist.\n                                                                  type: string\n                                                                values:\n                                                                  description: values\n                                                                    is an array of\n                                                                    string values.\n                                                                    If the operator\n                                                                    is In or NotIn,\n                                                                    the values array\n                                                                    must be non-empty.\n                                                                    If the operator\n                                                                    is Exists or DoesNotExist,\n                                                                    the values array\n                                                                    must be empty.\n                                                                    This array is\n                                                                    replaced during\n                                                                    a strategic merge\n                                                                    patch.\n                                                                  items:\n                                                                    type: string\n                                                                  type: array\n                                                              required:\n                                                              - key\n                                                              - operator\n                                                              type: object\n                                                            type: array\n                                                          matchLabels:\n                                                            additionalProperties:\n                                                              type: string\n                                                            description: matchLabels\n                                                              is a map of {key,value}\n                                                              pairs. A single {key,value}\n                                                              in the matchLabels map\n                                                              is equivalent to an\n                                                              element of matchExpressions,\n                                                              whose key field is \"key\",\n                                                              the operator is \"In\",\n                                                              and the values array\n                                                              contains only \"value\".\n                                                              The requirements are\n                                                              ANDed.\n                                                            type: object\n                                                        type: object\n                                                      namespaces:\n                                                        description: namespaces specifies\n                                                          which namespaces the labelSelector\n                                                          applies to (matches against);\n                                                          null or empty list means\n                                                          \"this pod's namespace\"\n                                                        items:\n                                                          type: string\n                                                        type: array\n                                                      topologyKey:\n                                                        description: This pod should\n                                                          be co-located (affinity)\n                                                          or not co-located (anti-affinity)\n                                                          with the pods matching the\n                                                          labelSelector in the specified\n                                                          namespaces, where co-located\n                                                          is defined as running on\n                                                          a node whose value of the\n                                                          label with key topologyKey\n                                                          matches that of any node\n                                                          on which any of the selected\n                                                          pods is running. Empty topologyKey\n                                                          is not allowed.\n                                                        type: string\n                                                    required:\n                                                    - topologyKey\n                                                    type: object\n                                                  type: array\n                                              type: object\n                                          type: object\n                                        nodeSelector:\n                                          additionalProperties:\n                                            type: string\n                                          description: 'NodeSelector is a selector\n                                            which must be true for the pod to fit\n                                            on a node. Selector which must match a\n                                            node''s labels for the pod to be scheduled\n                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'\n                                          type: object\n                                        priorityClassName:\n                                          description: If specified, the pod's priorityClassName.\n                                          type: string\n                                        serviceAccountName:\n                                          description: If specified, the pod's service\n                                            account\n                                          type: string\n                                        tolerations:\n                                          description: If specified, the pod's tolerations.\n                                          items:\n                                            description: The pod this Toleration is\n                                              attached to tolerates any taint that\n                                              matches the triple <key,value,effect>\n                                              using the matching operator <operator>.\n                                            properties:\n                                              effect:\n                                                description: Effect indicates the\n                                                  taint effect to match. Empty means\n                                                  match all taint effects. When specified,\n                                                  allowed values are NoSchedule, PreferNoSchedule\n                                                  and NoExecute.\n                                                type: string\n                                              key:\n                                                description: Key is the taint key\n                                                  that the toleration applies to.\n                                                  Empty means match all taint keys.\n                                                  If the key is empty, operator must\n                                                  be Exists; this combination means\n                                                  to match all values and all keys.\n                                                type: string\n                                              operator:\n                                                description: Operator represents a\n                                                  key's relationship to the value.\n                                                  Valid operators are Exists and Equal.\n                                                  Defaults to Equal. Exists is equivalent\n                                                  to wildcard for value, so that a\n                                                  pod can tolerate all taints of a\n                                                  particular category.\n                                                type: string\n                                              tolerationSeconds:\n                                                description: TolerationSeconds represents\n                                                  the period of time the toleration\n                                                  (which must be of effect NoExecute,\n                                                  otherwise this field is ignored)\n                                                  tolerates the taint. By default,\n                                                  it is not set, which means tolerate\n                                                  the taint forever (do not evict).\n                                                  Zero and negative values will be\n                                                  treated as 0 (evict immediately)\n                                                  by the system.\n                                                format: int64\n                                                type: integer\n                                              value:\n                                                description: Value is the taint value\n                                                  the toleration matches to. If the\n                                                  operator is Exists, the value should\n                                                  be empty, otherwise just a regular\n                                                  string.\n                                                type: string\n                                            type: object\n                                          type: array\n                                      type: object\n                                  type: object\n                                serviceType:\n                                  description: Optional service type for Kubernetes\n                                    solver service\n                                  type: string\n                              type: object\n                          type: object\n                        selector:\n                          description: Selector selects a set of DNSNames on the Certificate\n                            resource that should be solved using this challenge solver.\n                            If not specified, the solver will be treated as the 'default'\n                            solver with the lowest priority, i.e. if any other solver\n                            has a more specific match, it will be used instead.\n                          properties:\n                            dnsNames:\n                              description: List of DNSNames that this solver will\n                                be used to solve. If specified and a match is found,\n                                a dnsNames selector will take precedence over a dnsZones\n                                selector. If multiple solvers match with the same\n                                dnsNames value, the solver with the most matching\n                                labels in matchLabels will be selected. If neither\n                                has more matches, the solver defined earlier in the\n                                list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            dnsZones:\n                              description: List of DNSZones that this solver will\n                                be used to solve. The most specific DNS zone match\n                                specified here will take precedence over other DNS\n                                zone matches, so a solver specifying sys.example.com\n                                will be selected over one specifying example.com for\n                                the domain www.sys.example.com. If multiple solvers\n                                match with the same dnsZones value, the solver with\n                                the most matching labels in matchLabels will be selected.\n                                If neither has more matches, the solver defined earlier\n                                in the list will be selected.\n                              items:\n                                type: string\n                              type: array\n                            matchLabels:\n                              additionalProperties:\n                                type: string\n                              description: A label selector that is used to refine\n                                the set of certificate's that this challenge solver\n                                will apply to.\n                              type: object\n                          type: object\n                      type: object\n                    type: array\n                required:\n                - privateKeySecretRef\n                - server\n                type: object\n              ca:\n                description: CA configures this issuer to sign certificates using\n                  a signing CA keypair stored in a Secret resource. This is used to\n                  build internal PKIs that are managed by cert-manager.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set,\n                      certificates will be issued without distribution points set.\n                    items:\n                      type: string\n                    type: array\n                  secretName:\n                    description: SecretName is the name of the secret used to sign\n                      Certificates issued by this Issuer.\n                    type: string\n                required:\n                - secretName\n                type: object\n              selfSigned:\n                description: SelfSigned configures this issuer to 'self sign' certificates\n                  using the private key used to create the CertificateRequest object.\n                properties:\n                  crlDistributionPoints:\n                    description: The CRL distribution points is an X.509 v3 certificate\n                      extension which identifies the location of the CRL from which\n                      the revocation of this certificate can be checked. If not set\n                      certificate will be issued without CDP. Values are strings.\n                    items:\n                      type: string\n                    type: array\n                type: object\n              vault:\n                description: Vault configures this issuer to sign certificates using\n                  a HashiCorp Vault PKI backend.\n                properties:\n                  auth:\n                    description: Auth configures how cert-manager authenticates with\n                      the Vault server.\n                    properties:\n                      appRole:\n                        description: AppRole authenticates with Vault using the App\n                          Role auth mechanism, with the role and secret stored in\n                          a Kubernetes Secret resource.\n                        properties:\n                          path:\n                            description: 'Path where the App Role authentication backend\n                              is mounted in Vault, e.g: \"approle\"'\n                            type: string\n                          roleId:\n                            description: RoleID configured in the App Role authentication\n                              backend when setting up the authentication backend in\n                              Vault.\n                            type: string\n                          secretRef:\n                            description: Reference to a key in a Secret that contains\n                              the App Role secret used to authenticate with Vault.\n                              The `key` field must be specified and denotes which\n                              entry within the Secret resource is used as the app\n                              role secret.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - path\n                        - roleId\n                        - secretRef\n                        type: object\n                      kubernetes:\n                        description: Kubernetes authenticates with Vault by passing\n                          the ServiceAccount token stored in the named Secret resource\n                          to the Vault server.\n                        properties:\n                          mountPath:\n                            description: The Vault mountPath here is the mount path\n                              to use when authenticating with Vault. For example,\n                              setting a value to `/v1/auth/foo`, will use the path\n                              `/v1/auth/foo/login` to authenticate with Vault. If\n                              unspecified, the default value \"/v1/auth/kubernetes\"\n                              will be used.\n                            type: string\n                          role:\n                            description: A required field containing the Vault Role\n                              to assume. A Role binds a Kubernetes ServiceAccount\n                              with a set of Vault policies.\n                            type: string\n                          secretRef:\n                            description: The required Secret field containing a Kubernetes\n                              ServiceAccount JWT used for authenticating with Vault.\n                              Use of 'ambient credentials' is not supported.\n                            properties:\n                              key:\n                                description: The key of the entry in the Secret resource's\n                                  `data` field to be used. Some instances of this\n                                  field may be defaulted, in others it may be required.\n                                type: string\n                              name:\n                                description: 'Name of the resource being referred\n                                  to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                                type: string\n                            required:\n                            - name\n                            type: object\n                        required:\n                        - role\n                        - secretRef\n                        type: object\n                      tokenSecretRef:\n                        description: TokenSecretRef authenticates with Vault by presenting\n                          a token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                    type: object\n                  caBundle:\n                    description: PEM encoded CA bundle used to validate Vault server\n                      certificate. Only used if the Server URL is using HTTPS protocol.\n                      This parameter is ignored for plain HTTP protocol connection.\n                      If not set the system root certificates are used to validate\n                      the TLS connection.\n                    format: byte\n                    type: string\n                  namespace:\n                    description: 'Name of the vault namespace. Namespaces is a set\n                      of features within Vault Enterprise that allows Vault environments\n                      to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces\n                      can be found here https://www.vaultproject.io/docs/enterprise/namespaces'\n                    type: string\n                  path:\n                    description: 'Path is the mount path of the Vault PKI backend''s\n                      `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".'\n                    type: string\n                  server:\n                    description: 'Server is the connection address for the Vault server,\n                      e.g: \"https://vault.example.com:8200\".'\n                    type: string\n                required:\n                - auth\n                - path\n                - server\n                type: object\n              venafi:\n                description: Venafi configures this issuer to sign certificates using\n                  a Venafi TPP or Venafi Cloud policy zone.\n                properties:\n                  cloud:\n                    description: Cloud specifies the Venafi cloud configuration settings.\n                      Only one of TPP or Cloud may be specified.\n                    properties:\n                      apiTokenSecretRef:\n                        description: APITokenSecretRef is a secret key selector for\n                          the Venafi Cloud API token.\n                        properties:\n                          key:\n                            description: The key of the entry in the Secret resource's\n                              `data` field to be used. Some instances of this field\n                              may be defaulted, in others it may be required.\n                            type: string\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: URL is the base URL for Venafi Cloud. Defaults\n                          to \"https://api.venafi.cloud/v1\".\n                        type: string\n                    required:\n                    - apiTokenSecretRef\n                    type: object\n                  tpp:\n                    description: TPP specifies Trust Protection Platform configuration\n                      settings. Only one of TPP or Cloud may be specified.\n                    properties:\n                      caBundle:\n                        description: CABundle is a PEM encoded TLS certificate to\n                          use to verify connections to the TPP instance. If specified,\n                          system roots will not be used and the issuing CA for the\n                          TPP instance must be verifiable using the provided root.\n                          If not specified, the connection will be verified using\n                          the cert-manager system root certificates.\n                        format: byte\n                        type: string\n                      credentialsRef:\n                        description: CredentialsRef is a reference to a Secret containing\n                          the username and password for the TPP server. The secret\n                          must contain two keys, 'username' and 'password'.\n                        properties:\n                          name:\n                            description: 'Name of the resource being referred to.\n                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      url:\n                        description: 'URL is the base URL for the vedsdk endpoint\n                          of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".'\n                        type: string\n                    required:\n                    - credentialsRef\n                    - url\n                    type: object\n                  zone:\n                    description: Zone is the Venafi Policy Zone to use for this issuer.\n                      All requests made to the Venafi platform will be restricted\n                      by the named zone policy. This field is required.\n                    type: string\n                required:\n                - zone\n                type: object\n            type: object\n          status:\n            description: Status of the Issuer. This is set and managed automatically.\n            properties:\n              acme:\n                description: ACME specific status options. This field should only\n                  be set if the Issuer is configured to use an ACME server to issue\n                  certificates.\n                properties:\n                  lastRegisteredEmail:\n                    description: LastRegisteredEmail is the email associated with\n                      the latest registered ACME account, in order to track changes\n                      made to registered account associated with the  Issuer\n                    type: string\n                  uri:\n                    description: URI is the unique account identifier, which can also\n                      be used to retrieve account details from the CA\n                    type: string\n                type: object\n              conditions:\n                description: List of status conditions to indicate the status of a\n                  CertificateRequest. Known condition types are `Ready`.\n                items:\n                  description: IssuerCondition contains condition information for\n                    an Issuer.\n                  properties:\n                    lastTransitionTime:\n                      description: LastTransitionTime is the timestamp corresponding\n                        to the last status change of this condition.\n                      format: date-time\n                      type: string\n                    message:\n                      description: Message is a human readable description of the\n                        details of the last transition, complementing reason.\n                      type: string\n                    reason:\n                      description: Reason is a brief machine readable explanation\n                        for the condition's last transition.\n                      type: string\n                    status:\n                      description: Status of the condition, one of ('True', 'False',\n                        'Unknown').\n                      enum:\n                      - \"True\"\n                      - \"False\"\n                      - Unknown\n                      type: string\n                    type:\n                      description: Type of the condition, known values are ('Ready').\n                      type: string\n                  required:\n                  - status\n                  - type\n                  type: object\n                type: array\n            type: object\n        required:\n        - spec\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\nstatus:\n  acceptedNames:\n    kind: \"\"\n    plural: \"\"\n  conditions: []\n  storedVersions: []"
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: fh5JdorJln3r3io
  name: cert-manager-setup-orders-crd
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
data:
  crds.yaml: "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    cert-manager.io/inject-ca-from-secret: default/release-name-webhook-ca\n    helm.sh/hook: crd-install\n    helm.sh/hook-delete-policy: before-hook-creation   \n  labels:\n    app: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/name: cert-manager\n  name: orders.acme.cert-manager.io\nspec:\n  conversion:\n    strategy: Webhook\n    webhook:\n      clientConfig:\n        service:\n          name: release-name-webhook\n          namespace: default\n          path: /convert\n      conversionReviewVersions:\n      - v1\n      - v1beta1\n  group: acme.cert-manager.io\n  names:\n    kind: Order\n    listKind: OrderList\n    plural: orders\n    singular: order\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .status.state\n      name: State\n      type: string\n    - jsonPath: .spec.issuerRef.name\n      name: Issuer\n      priority: 1\n      type: string\n    - jsonPath: .status.reason\n      name: Reason\n      priority: 1\n      type: string\n    - description: CreationTimestamp is a timestamp representing the server time when\n        this object was created. It is not guaranteed to be set in happens-before\n        order across separate operations. Clients may not set this value. It is represented\n        in RFC3339 form and is in UTC.\n      jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1alpha2\n    schema:\n      openAPIV3Schema:\n        description: Order is a type to represent an Order with an ACME server\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            properties:\n              commonName:\n                description: CommonName is the common name as specified on the DER\n                  encoded CSR. If specified, this value must also be present in `dnsNames`.\n                  This field must match the corresponding field on the DER encoded\n                  CSR.\n                type: string\n              csr:\n                description: Certificate signing request bytes in DER encoding. This\n                  will be used when finalizing the order. This field must be set on\n                  the order.\n                format: byte\n                type: string\n              dnsNames:\n                description: DNSNames is a list of DNS names that should be included\n                  as part of the Order validation process. This field must match the\n                  corresponding field on the DER encoded CSR.\n                items:\n                  type: string\n                type: array\n              issuerRef:\n                description: IssuerRef references a properly configured ACME-type\n                  Issuer which should be used to create this Order. If the Issuer\n                  does not exist, processing will be retried. If the Issuer is not\n                  an 'ACME' Issuer, an error will be returned and the Order will be\n                  marked as failed.\n                properties:\n                  group:\n                    description: Group of the resource being referred to.\n                    type: string\n                  kind:\n                    description: Kind of the resource being referred to.\n                    type: string\n                  name:\n                    description: Name of the resource being referred to.\n                    type: string\n                required:\n                - name\n                type: object\n            required:\n            - csr\n            - dnsNames\n            - issuerRef\n            type: object\n          status:\n            properties:\n              authorizations:\n                description: Authorizations contains data returned from the ACME server\n                  on what authorizations must be completed in order to validate the\n                  DNS names specified on the Order.\n                items:\n                  description: ACMEAuthorization contains data returned from the ACME\n                    server on an authorization that must be completed in order validate\n                    a DNS name on an ACME Order resource.\n                  properties:\n                    challenges:\n                      description: Challenges specifies the challenge types offered\n                        by the ACME server. One of these challenge types will be selected\n                        when validating the DNS name and an appropriate Challenge\n                        resource will be created to perform the ACME challenge process.\n                      items:\n                        description: Challenge specifies a challenge offered by the\n                          ACME server for an Order. An appropriate Challenge resource\n                          can be created to perform the ACME challenge process.\n                        properties:\n                          token:\n                            description: Token is the token that must be presented\n                              for this challenge. This is used to compute the 'key'\n                              that must also be presented.\n                            type: string\n                          type:\n                            description: Type is the type of challenge being offered,\n                              e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is\n                              the raw value retrieved from the ACME server. Only 'http-01'\n                              and 'dns-01' are supported by cert-manager, other values\n                              will be ignored.\n                            type: string\n                          url:\n                            description: URL is the URL of this challenge. It can\n                              be used to retrieve additional metadata about the Challenge\n                              from the ACME server.\n                            type: string\n                        required:\n                        - token\n                        - type\n                        - url\n                        type: object\n                      type: array\n                    identifier:\n                      description: Identifier is the DNS name to be validated as part\n                        of this authorization\n                      type: string\n                    initialState:\n                      description: InitialState is the initial state of the ACME authorization\n                        when first fetched from the ACME server. If an Authorization\n                        is already 'valid', the Order controller will not create a\n                        Challenge resource for the authorization. This will occur\n                        when working with an ACME server that enables 'authz reuse'\n                        (such as Let's Encrypt's production endpoint). If not set\n                        and 'identifier' is set, the state is assumed to be pending\n                        and a Challenge will be created.\n                      enum:\n                      - valid\n                      - ready\n                      - pending\n                      - processing\n                      - invalid\n                      - expired\n                      - errored\n                      type: string\n                    url:\n                      description: URL is the URL of the Authorization that must be\n                        completed\n                      type: string\n                    wildcard:\n                      description: Wildcard will be true if this authorization is\n                        for a wildcard DNS name. If this is true, the identifier will\n                        be the *non-wildcard* version of the DNS name. For example,\n                        if '*.example.com' is the DNS name being validated, this field\n                        will be 'true' and the 'identifier' field will be 'example.com'.\n                      type: boolean\n                  required:\n                  - url\n                  type: object\n                type: array\n              certificate:\n                description: Certificate is a copy of the PEM encoded certificate\n                  for this Order. This field will be populated after the order has\n                  been successfully finalized with the ACME server, and the order\n                  has transitioned to the 'valid' state.\n                format: byte\n                type: string\n              failureTime:\n                description: FailureTime stores the time that this order failed. This\n                  is used to influence garbage collection and back-off.\n                format: date-time\n                type: string\n              finalizeURL:\n                description: FinalizeURL of the Order. This is used to obtain certificates\n                  for this order once it has been completed.\n                type: string\n              reason:\n                description: Reason optionally provides more information about a why\n                  the order is in the current state.\n                type: string\n              state:\n                description: State contains the current state of this Order resource.\n                  States 'success' and 'expired' are 'final'\n                enum:\n                - valid\n                - ready\n                - pending\n                - processing\n                - invalid\n                - expired\n                - errored\n                type: string\n              url:\n                description: URL of the Order. This will initially be empty when the\n                  resource is first created. The Order controller will populate this\n                  field when the Order is first processed. This field will be immutable\n                  after it is initially set.\n                type: string\n            type: object\n        required:\n        - metadata\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - jsonPath: .status.state\n      name: State\n      type: string\n    - jsonPath: .spec.issuerRef.name\n      name: Issuer\n      priority: 1\n      type: string\n    - jsonPath: .status.reason\n      name: Reason\n      priority: 1\n      type: string\n    - description: CreationTimestamp is a timestamp representing the server time when\n        this object was created. It is not guaranteed to be set in happens-before\n        order across separate operations. Clients may not set this value. It is represented\n        in RFC3339 form and is in UTC.\n      jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1alpha3\n    schema:\n      openAPIV3Schema:\n        description: Order is a type to represent an Order with an ACME server\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            properties:\n              commonName:\n                description: CommonName is the common name as specified on the DER\n                  encoded CSR. If specified, this value must also be present in `dnsNames`.\n                  This field must match the corresponding field on the DER encoded\n                  CSR.\n                type: string\n              csr:\n                description: Certificate signing request bytes in DER encoding. This\n                  will be used when finalizing the order. This field must be set on\n                  the order.\n                format: byte\n                type: string\n              dnsNames:\n                description: DNSNames is a list of DNS names that should be included\n                  as part of the Order validation process. This field must match the\n                  corresponding field on the DER encoded CSR.\n                items:\n                  type: string\n                type: array\n              issuerRef:\n                description: IssuerRef references a properly configured ACME-type\n                  Issuer which should be used to create this Order. If the Issuer\n                  does not exist, processing will be retried. If the Issuer is not\n                  an 'ACME' Issuer, an error will be returned and the Order will be\n                  marked as failed.\n                properties:\n                  group:\n                    description: Group of the resource being referred to.\n                    type: string\n                  kind:\n                    description: Kind of the resource being referred to.\n                    type: string\n                  name:\n                    description: Name of the resource being referred to.\n                    type: string\n                required:\n                - name\n                type: object\n            required:\n            - csr\n            - dnsNames\n            - issuerRef\n            type: object\n          status:\n            properties:\n              authorizations:\n                description: Authorizations contains data returned from the ACME server\n                  on what authorizations must be completed in order to validate the\n                  DNS names specified on the Order.\n                items:\n                  description: ACMEAuthorization contains data returned from the ACME\n                    server on an authorization that must be completed in order validate\n                    a DNS name on an ACME Order resource.\n                  properties:\n                    challenges:\n                      description: Challenges specifies the challenge types offered\n                        by the ACME server. One of these challenge types will be selected\n                        when validating the DNS name and an appropriate Challenge\n                        resource will be created to perform the ACME challenge process.\n                      items:\n                        description: Challenge specifies a challenge offered by the\n                          ACME server for an Order. An appropriate Challenge resource\n                          can be created to perform the ACME challenge process.\n                        properties:\n                          token:\n                            description: Token is the token that must be presented\n                              for this challenge. This is used to compute the 'key'\n                              that must also be presented.\n                            type: string\n                          type:\n                            description: Type is the type of challenge being offered,\n                              e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is\n                              the raw value retrieved from the ACME server. Only 'http-01'\n                              and 'dns-01' are supported by cert-manager, other values\n                              will be ignored.\n                            type: string\n                          url:\n                            description: URL is the URL of this challenge. It can\n                              be used to retrieve additional metadata about the Challenge\n                              from the ACME server.\n                            type: string\n                        required:\n                        - token\n                        - type\n                        - url\n                        type: object\n                      type: array\n                    identifier:\n                      description: Identifier is the DNS name to be validated as part\n                        of this authorization\n                      type: string\n                    initialState:\n                      description: InitialState is the initial state of the ACME authorization\n                        when first fetched from the ACME server. If an Authorization\n                        is already 'valid', the Order controller will not create a\n                        Challenge resource for the authorization. This will occur\n                        when working with an ACME server that enables 'authz reuse'\n                        (such as Let's Encrypt's production endpoint). If not set\n                        and 'identifier' is set, the state is assumed to be pending\n                        and a Challenge will be created.\n                      enum:\n                      - valid\n                      - ready\n                      - pending\n                      - processing\n                      - invalid\n                      - expired\n                      - errored\n                      type: string\n                    url:\n                      description: URL is the URL of the Authorization that must be\n                        completed\n                      type: string\n                    wildcard:\n                      description: Wildcard will be true if this authorization is\n                        for a wildcard DNS name. If this is true, the identifier will\n                        be the *non-wildcard* version of the DNS name. For example,\n                        if '*.example.com' is the DNS name being validated, this field\n                        will be 'true' and the 'identifier' field will be 'example.com'.\n                      type: boolean\n                  required:\n                  - url\n                  type: object\n                type: array\n              certificate:\n                description: Certificate is a copy of the PEM encoded certificate\n                  for this Order. This field will be populated after the order has\n                  been successfully finalized with the ACME server, and the order\n                  has transitioned to the 'valid' state.\n                format: byte\n                type: string\n              failureTime:\n                description: FailureTime stores the time that this order failed. This\n                  is used to influence garbage collection and back-off.\n                format: date-time\n                type: string\n              finalizeURL:\n                description: FinalizeURL of the Order. This is used to obtain certificates\n                  for this order once it has been completed.\n                type: string\n              reason:\n                description: Reason optionally provides more information about a why\n                  the order is in the current state.\n                type: string\n              state:\n                description: State contains the current state of this Order resource.\n                  States 'success' and 'expired' are 'final'\n                enum:\n                - valid\n                - ready\n                - pending\n                - processing\n                - invalid\n                - expired\n                - errored\n                type: string\n              url:\n                description: URL of the Order. This will initially be empty when the\n                  resource is first created. The Order controller will populate this\n                  field when the Order is first processed. This field will be immutable\n                  after it is initially set.\n                type: string\n            type: object\n        required:\n        - metadata\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - jsonPath: .status.state\n      name: State\n      type: string\n    - jsonPath: .spec.issuerRef.name\n      name: Issuer\n      priority: 1\n      type: string\n    - jsonPath: .status.reason\n      name: Reason\n      priority: 1\n      type: string\n    - description: CreationTimestamp is a timestamp representing the server time when\n        this object was created. It is not guaranteed to be set in happens-before\n        order across separate operations. Clients may not set this value. It is represented\n        in RFC3339 form and is in UTC.\n      jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: Order is a type to represent an Order with an ACME server\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            properties:\n              commonName:\n                description: CommonName is the common name as specified on the DER\n                  encoded CSR. If specified, this value must also be present in `dnsNames`.\n                  This field must match the corresponding field on the DER encoded\n                  CSR.\n                type: string\n              dnsNames:\n                description: DNSNames is a list of DNS names that should be included\n                  as part of the Order validation process. This field must match the\n                  corresponding field on the DER encoded CSR.\n                items:\n                  type: string\n                type: array\n              issuerRef:\n                description: IssuerRef references a properly configured ACME-type\n                  Issuer which should be used to create this Order. If the Issuer\n                  does not exist, processing will be retried. If the Issuer is not\n                  an 'ACME' Issuer, an error will be returned and the Order will be\n                  marked as failed.\n                properties:\n                  group:\n                    description: Group of the resource being referred to.\n                    type: string\n                  kind:\n                    description: Kind of the resource being referred to.\n                    type: string\n                  name:\n                    description: Name of the resource being referred to.\n                    type: string\n                required:\n                - name\n                type: object\n              request:\n                description: Certificate signing request bytes in DER encoding. This\n                  will be used when finalizing the order. This field must be set on\n                  the order.\n                format: byte\n                type: string\n            required:\n            - dnsNames\n            - issuerRef\n            - request\n            type: object\n          status:\n            properties:\n              authorizations:\n                description: Authorizations contains data returned from the ACME server\n                  on what authorizations must be completed in order to validate the\n                  DNS names specified on the Order.\n                items:\n                  description: ACMEAuthorization contains data returned from the ACME\n                    server on an authorization that must be completed in order validate\n                    a DNS name on an ACME Order resource.\n                  properties:\n                    challenges:\n                      description: Challenges specifies the challenge types offered\n                        by the ACME server. One of these challenge types will be selected\n                        when validating the DNS name and an appropriate Challenge\n                        resource will be created to perform the ACME challenge process.\n                      items:\n                        description: Challenge specifies a challenge offered by the\n                          ACME server for an Order. An appropriate Challenge resource\n                          can be created to perform the ACME challenge process.\n                        properties:\n                          token:\n                            description: Token is the token that must be presented\n                              for this challenge. This is used to compute the 'key'\n                              that must also be presented.\n                            type: string\n                          type:\n                            description: Type is the type of challenge being offered,\n                              e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is\n                              the raw value retrieved from the ACME server. Only 'http-01'\n                              and 'dns-01' are supported by cert-manager, other values\n                              will be ignored.\n                            type: string\n                          url:\n                            description: URL is the URL of this challenge. It can\n                              be used to retrieve additional metadata about the Challenge\n                              from the ACME server.\n                            type: string\n                        required:\n                        - token\n                        - type\n                        - url\n                        type: object\n                      type: array\n                    identifier:\n                      description: Identifier is the DNS name to be validated as part\n                        of this authorization\n                      type: string\n                    initialState:\n                      description: InitialState is the initial state of the ACME authorization\n                        when first fetched from the ACME server. If an Authorization\n                        is already 'valid', the Order controller will not create a\n                        Challenge resource for the authorization. This will occur\n                        when working with an ACME server that enables 'authz reuse'\n                        (such as Let's Encrypt's production endpoint). If not set\n                        and 'identifier' is set, the state is assumed to be pending\n                        and a Challenge will be created.\n                      enum:\n                      - valid\n                      - ready\n                      - pending\n                      - processing\n                      - invalid\n                      - expired\n                      - errored\n                      type: string\n                    url:\n                      description: URL is the URL of the Authorization that must be\n                        completed\n                      type: string\n                    wildcard:\n                      description: Wildcard will be true if this authorization is\n                        for a wildcard DNS name. If this is true, the identifier will\n                        be the *non-wildcard* version of the DNS name. For example,\n                        if '*.example.com' is the DNS name being validated, this field\n                        will be 'true' and the 'identifier' field will be 'example.com'.\n                      type: boolean\n                  required:\n                  - url\n                  type: object\n                type: array\n              certificate:\n                description: Certificate is a copy of the PEM encoded certificate\n                  for this Order. This field will be populated after the order has\n                  been successfully finalized with the ACME server, and the order\n                  has transitioned to the 'valid' state.\n                format: byte\n                type: string\n              failureTime:\n                description: FailureTime stores the time that this order failed. This\n                  is used to influence garbage collection and back-off.\n                format: date-time\n                type: string\n              finalizeURL:\n                description: FinalizeURL of the Order. This is used to obtain certificates\n                  for this order once it has been completed.\n                type: string\n              reason:\n                description: Reason optionally provides more information about a why\n                  the order is in the current state.\n                type: string\n              state:\n                description: State contains the current state of this Order resource.\n                  States 'success' and 'expired' are 'final'\n                enum:\n                - valid\n                - ready\n                - pending\n                - processing\n                - invalid\n                - expired\n                - errored\n                type: string\n              url:\n                description: URL of the Order. This will initially be empty when the\n                  resource is first created. The Order controller will populate this\n                  field when the Order is first processed. This field will be immutable\n                  after it is initially set.\n                type: string\n            type: object\n        required:\n        - metadata\n        - spec\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - jsonPath: .status.state\n      name: State\n      type: string\n    - jsonPath: .spec.issuerRef.name\n      name: Issuer\n      priority: 1\n      type: string\n    - jsonPath: .status.reason\n      name: Reason\n      priority: 1\n      type: string\n    - description: CreationTimestamp is a timestamp representing the server time when\n        this object was created. It is not guaranteed to be set in happens-before\n        order across separate operations. Clients may not set this value. It is represented\n        in RFC3339 form and is in UTC.\n      jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1\n    schema:\n      openAPIV3Schema:\n        description: Order is a type to represent an Order with an ACME server\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            properties:\n              commonName:\n                description: CommonName is the common name as specified on the DER\n                  encoded CSR. If specified, this value must also be present in `dnsNames`.\n                  This field must match the corresponding field on the DER encoded\n                  CSR.\n                type: string\n              dnsNames:\n                description: DNSNames is a list of DNS names that should be included\n                  as part of the Order validation process. This field must match the\n                  corresponding field on the DER encoded CSR.\n                items:\n                  type: string\n                type: array\n              issuerRef:\n                description: IssuerRef references a properly configured ACME-type\n                  Issuer which should be used to create this Order. If the Issuer\n                  does not exist, processing will be retried. If the Issuer is not\n                  an 'ACME' Issuer, an error will be returned and the Order will be\n                  marked as failed.\n                properties:\n                  group:\n                    description: Group of the resource being referred to.\n                    type: string\n                  kind:\n                    description: Kind of the resource being referred to.\n                    type: string\n                  name:\n                    description: Name of the resource being referred to.\n                    type: string\n                required:\n                - name\n                type: object\n              request:\n                description: Certificate signing request bytes in DER encoding. This\n                  will be used when finalizing the order. This field must be set on\n                  the order.\n                format: byte\n                type: string\n            required:\n            - dnsNames\n            - issuerRef\n            - request\n            type: object\n          status:\n            properties:\n              authorizations:\n                description: Authorizations contains data returned from the ACME server\n                  on what authorizations must be completed in order to validate the\n                  DNS names specified on the Order.\n                items:\n                  description: ACMEAuthorization contains data returned from the ACME\n                    server on an authorization that must be completed in order validate\n                    a DNS name on an ACME Order resource.\n                  properties:\n                    challenges:\n                      description: Challenges specifies the challenge types offered\n                        by the ACME server. One of these challenge types will be selected\n                        when validating the DNS name and an appropriate Challenge\n                        resource will be created to perform the ACME challenge process.\n                      items:\n                        description: Challenge specifies a challenge offered by the\n                          ACME server for an Order. An appropriate Challenge resource\n                          can be created to perform the ACME challenge process.\n                        properties:\n                          token:\n                            description: Token is the token that must be presented\n                              for this challenge. This is used to compute the 'key'\n                              that must also be presented.\n                            type: string\n                          type:\n                            description: Type is the type of challenge being offered,\n                              e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is\n                              the raw value retrieved from the ACME server. Only 'http-01'\n                              and 'dns-01' are supported by cert-manager, other values\n                              will be ignored.\n                            type: string\n                          url:\n                            description: URL is the URL of this challenge. It can\n                              be used to retrieve additional metadata about the Challenge\n                              from the ACME server.\n                            type: string\n                        required:\n                        - token\n                        - type\n                        - url\n                        type: object\n                      type: array\n                    identifier:\n                      description: Identifier is the DNS name to be validated as part\n                        of this authorization\n                      type: string\n                    initialState:\n                      description: InitialState is the initial state of the ACME authorization\n                        when first fetched from the ACME server. If an Authorization\n                        is already 'valid', the Order controller will not create a\n                        Challenge resource for the authorization. This will occur\n                        when working with an ACME server that enables 'authz reuse'\n                        (such as Let's Encrypt's production endpoint). If not set\n                        and 'identifier' is set, the state is assumed to be pending\n                        and a Challenge will be created.\n                      enum:\n                      - valid\n                      - ready\n                      - pending\n                      - processing\n                      - invalid\n                      - expired\n                      - errored\n                      type: string\n                    url:\n                      description: URL is the URL of the Authorization that must be\n                        completed\n                      type: string\n                    wildcard:\n                      description: Wildcard will be true if this authorization is\n                        for a wildcard DNS name. If this is true, the identifier will\n                        be the *non-wildcard* version of the DNS name. For example,\n                        if '*.example.com' is the DNS name being validated, this field\n                        will be 'true' and the 'identifier' field will be 'example.com'.\n                      type: boolean\n                  required:\n                  - url\n                  type: object\n                type: array\n              certificate:\n                description: Certificate is a copy of the PEM encoded certificate\n                  for this Order. This field will be populated after the order has\n                  been successfully finalized with the ACME server, and the order\n                  has transitioned to the 'valid' state.\n                format: byte\n                type: string\n              failureTime:\n                description: FailureTime stores the time that this order failed. This\n                  is used to influence garbage collection and back-off.\n                format: date-time\n                type: string\n              finalizeURL:\n                description: FinalizeURL of the Order. This is used to obtain certificates\n                  for this order once it has been completed.\n                type: string\n              reason:\n                description: Reason optionally provides more information about a why\n                  the order is in the current state.\n                type: string\n              state:\n                description: State contains the current state of this Order resource.\n                  States 'success' and 'expired' are 'final'\n                enum:\n                - valid\n                - ready\n                - pending\n                - processing\n                - invalid\n                - expired\n                - errored\n                type: string\n              url:\n                description: URL of the Order. This will initially be empty when the\n                  resource is first created. The Order controller will populate this\n                  field when the Order is first processed. This field will be immutable\n                  after it is initially set.\n                type: string\n            type: object\n        required:\n        - metadata\n        - spec\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\nstatus:\n  acceptedNames:\n    kind: \"\"\n    plural: \"\"\n  conditions: []\n  storedVersions: []"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-setup-deployments
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-7"
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-setup-crds
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-setup-deployments
  namespace: default
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-7"
subjects:
  - kind: ServiceAccount
    namespace: default
    name: default
roleRef:
  kind: ClusterRole
  name: cert-manager-setup-deployments
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-setup-crds
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-setup-crds
subjects:
  - kind: ServiceAccount
    name: cert-manager-setup-crds
    namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: fh5JdorJln3r3io
  name: cert-manager-setup-certificates-crd
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-4"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: cert-manager-setup-crds
      containers:
        - name: cert-manager-setup-certificates-crd
          image: bitnami/kubectl:1.18.8-debian-10-r15
          volumeMounts:
            - name: cert-manager-setup-certificates-crd
              mountPath: /etc/cert-manager-setup-certificates-crd
              readOnly: true
          command:
            - kubectl
            - apply
            - -f
            - /etc/cert-manager-setup-certificates-crd
      volumes:
        - name: cert-manager-setup-certificates-crd
          configMap:
            name: cert-manager-setup-certificates-crd
      restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: fh5JdorJln3r3io
  name: cert-manager-setup-certificaterequests-crd
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-4"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: cert-manager-setup-crds
      containers:
        - name: cert-manager-setup-certificaterequests-crd
          image: bitnami/kubectl:1.18.8-debian-10-r15
          volumeMounts:
            - name: cert-manager-setup-certificaterequests-crd
              mountPath: /etc/cert-manager-setup-certificaterequests-crd
              readOnly: true
          command:
            - kubectl
            - apply
            - -f
            - /etc/cert-manager-setup-certificaterequests-crd
      volumes:
        - name: cert-manager-setup-certificaterequests-crd
          configMap:
            name: cert-manager-setup-certificaterequests-crd
      restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: fh5JdorJln3r3io
  name: cert-manager-setup-challenges-crd
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-4"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: cert-manager-setup-crds
      containers:
        - name: cert-manager-setup-challenges-crd
          image: bitnami/kubectl:1.18.8-debian-10-r15
          volumeMounts:
            - name: cert-manager-setup-challenges-crd
              mountPath: /etc/cert-manager-setup-challenges-crd
              readOnly: true
          command:
            - kubectl
            - apply
            - -f
            - /etc/cert-manager-setup-challenges-crd
      volumes:
        - name: cert-manager-setup-challenges-crd
          configMap:
            name: cert-manager-setup-challenges-crd
      restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: fh5JdorJln3r3io
  name: cert-manager-setup-clusterissuers-crd
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-4"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: cert-manager-setup-crds
      containers:
        - name: cert-manager-setup-clusterissuers-crd
          image: bitnami/kubectl:1.18.8-debian-10-r15
          volumeMounts:
            - name: cert-manager-setup-clusterissuers-crd
              mountPath: /etc/cert-manager-setup-clusterissuers-crd
              readOnly: true
          command:
            - kubectl
            - apply
            - -f
            - /etc/cert-manager-setup-clusterissuers-crd
      volumes:
        - name: cert-manager-setup-clusterissuers-crd
          configMap:
            name: cert-manager-setup-clusterissuers-crd
      restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: fh5JdorJln3r3io
  name: cert-manager-setup-issuers-crd
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-4"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: cert-manager-setup-crds
      containers:
        - name: cert-manager-setup-issuers-crd
          image: bitnami/kubectl:1.18.8-debian-10-r15
          volumeMounts:
            - name: cert-manager-setup-issuers-crd
              mountPath: /etc/cert-manager-setup-issuers-crd
              readOnly: true
          command:
            - kubectl
            - apply
            - -f
            - /etc/cert-manager-setup-issuers-crd
      volumes:
        - name: cert-manager-setup-issuers-crd
          configMap:
            name: cert-manager-setup-issuers-crd
      restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: fh5JdorJln3r3io
  name: cert-manager-setup-orders-crd
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-4"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: cert-manager-setup-crds
      containers:
        - name: cert-manager-setup-orders-crd
          image: bitnami/kubectl:1.18.8-debian-10-r15
          volumeMounts:
            - name: cert-manager-setup-orders-crd
              mountPath: /etc/cert-manager-setup-orders-crd
              readOnly: true
          command:
            - kubectl
            - apply
            - -f
            - /etc/cert-manager-setup-orders-crd
      volumes:
        - name: cert-manager-setup-orders-crd
          configMap:
            name: cert-manager-setup-orders-crd
      restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-cert-manager-setup
  namespace: fh5JdorJln3r3io
  labels:
    app.kubernetes.io/name: cert-manager-setup
    helm.sh/chart: cert-manager-setup-0.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.1
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      name: wait-for-cert-manager-webhook
    spec:
      serviceAccountName: default
      restartPolicy: Never
      containers:
        - name: cert-manager-setup
          image: bitnami/kubectl:1.18.8-debian-10-r15
          imagePullPolicy: IfNotPresent
          command:
            - sleep
            - "30"
