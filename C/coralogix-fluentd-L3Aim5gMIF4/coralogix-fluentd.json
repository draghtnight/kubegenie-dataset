[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "coralogix-fluentd-account-secrets",
      "namespace": "kube-system",
      "labels": {
        "k8s-app": "coralogix-fluentd-logger",
        "k8s-app-version": "1.1.6",
        "chart": "coralogix-fluentd-1.0.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "PRIVATE_KEY": "WFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhY",
      "APP_NAME": "JGt1YmVybmV0ZXMubmFtZXNwYWNlX25hbWU=",
      "SUB_SYSTEM": "JGt1YmVybmV0ZXMuY29udGFpbmVyX25hbWU="
    }
  },
  {
    "kind": "ConfigMap",
    "apiVersion": "v1",
    "metadata": {
      "name": "coralogix-fluentd-configs",
      "namespace": "kube-system",
      "labels": {
        "k8s-app": "coralogix-fluentd-logger",
        "k8s-app-version": "1.1.6",
        "chart": "coralogix-fluentd-1.0.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "fluent.conf": "@include conf/*.conf\n",
      "kubernetes.conf": "<source>\n  @id minion\n  @type tail\n  @label @KUBERNETES_CLUSTER_COMPONENTS\n  path /var/log/salt/minion\n  pos_file /var/log/salt.pos\n  <parse>\n    @type regexp\n    expression /^(?<time>[^ ]* [^ ,]*)[^\\[]*\\[[^\\]]*\\]\\[(?<severity>[^ \\]]*) *\\] (?<message>.*)$/\n    time_format %Y-%m-%d %H:%M:%S\n    keep_time_key true\n  </parse>\n  tag salt\n</source>\n<source>\n  @id startupscript.log\n  @type tail\n  @label @KUBERNETES_CLUSTER_COMPONENTS\n  path /var/log/startupscript.log\n  pos_file /var/log/startupscript.log.pos\n  <parse>\n    @type syslog\n    message_format auto\n  </parse>\n  tag startupscript\n</source>\n<source>\n  @id docker.log\n  @type tail\n  @label @KUBERNETES_CLUSTER_COMPONENTS\n  path /var/log/docker.log\n  pos_file /var/log/docker.log.pos\n  <parse>\n    @type regexp\n    expression /^time=\"(?<time>[^)]*)\" level=(?<severity>[^ ]*) msg=\"(?<message>[^\"]*)\"( err=\"(?<error>[^\"]*)\")?( statusCode=($<status_code>\\d+))?/\n    keep_time_key true\n  </parse>\n  tag docker\n</source>\n<source>\n  @id etcd.log\n  @type tail\n  @label @KUBERNETES_CLUSTER_COMPONENTS\n  path /var/log/etcd.log\n  pos_file /var/log/etcd.log.pos\n  <parse>\n    @type none\n  </parse>\n  tag etcd\n</source>\n<source>\n  @id kubelet.log\n  @type tail\n  @label @KUBERNETES_CLUSTER_COMPONENTS\n  path /var/log/kubelet.log\n  pos_file /var/log/kubelet.log.pos\n  <parse>\n    @type kubernetes\n  </parse>\n  multiline_flush_interval 5s\n  tag kubelet\n</source>\n<source>\n  @id kube-proxy.log\n  @type tail\n  @label @KUBERNETES_CLUSTER_COMPONENTS\n  path /var/log/kube-proxy.log\n  pos_file /var/log/kube-proxy.log.pos\n  <parse>\n    @type kubernetes\n  </parse>\n  multiline_flush_interval 5s\n  tag kube-proxy\n</source>\n<source>\n  @id kube-apiserver.log\n  @type tail\n  @label @KUBERNETES_CLUSTER_COMPONENTS\n  path /var/log/kube-apiserver.log\n  pos_file /var/log/kube-apiserver.log.pos\n  <parse>\n    @type kubernetes\n  </parse>\n  multiline_flush_interval 5s\n  tag kube-apiserver\n</source>\n<source>\n  @id kube-controller-manager.log\n  @type tail\n  @label @KUBERNETES_CLUSTER_COMPONENTS\n  path /var/log/kube-controller-manager.log\n  pos_file /var/log/kube-controller-manager.log.pos\n  <parse>\n    @type kubernetes\n  </parse>\n  multiline_flush_interval 5s\n  tag kube-controller-manager\n</source>\n<source>\n  @id kube-scheduler.log\n  @type tail\n  @label @KUBERNETES_CLUSTER_COMPONENTS\n  path /var/log/kube-scheduler.log\n  pos_file /var/log/kube-scheduler.log.pos\n  <parse>\n    @type kubernetes\n  </parse>\n  multiline_flush_interval 5s\n  tag kube-scheduler\n</source>\n<source>\n  @id rescheduler.log\n  @type tail\n  @label @KUBERNETES_CLUSTER_COMPONENTS\n  path /var/log/rescheduler.log\n  pos_file /var/log/rescheduler.log.pos\n  <parse>\n    @type kubernetes\n  </parse>\n  multiline_flush_interval 5s\n  tag rescheduler\n</source>\n<source>\n  @id glbc.log\n  @type tail\n  @label @KUBERNETES_CLUSTER_COMPONENTS\n  path /var/log/glbc.log\n  pos_file /var/log/glbc.log.pos\n  <parse>\n    @type kubernetes\n  </parse>\n  multiline_flush_interval 5s\n  tag glbc\n</source>\n<source>\n  @id cluster-autoscaler.log\n  @type tail\n  @label @KUBERNETES_CLUSTER_COMPONENTS\n  path /var/log/cluster-autoscaler.log\n  pos_file /var/log/cluster-autoscaler.log.pos\n  <parse>\n    @type kubernetes\n  </parse>\n  multiline_flush_interval 5s\n  tag cluster-autoscaler\n</source>\n<label @KUBERNETES_CLUSTER_COMPONENTS>\n  <filter **>\n    @type record_transformer\n    enable_ruby\n    <record>\n      component ${tag}\n    </record>\n  </filter>\n  <match **>\n    @type coralogix\n    privatekey \"#{ENV['PRIVATE_KEY']}\"\n    appname \"#{ENV['APP_NAME']}-k8s-component\"\n    subsystemname \"$component\"\n    timestamp_key_name time\n    is_json true\n  </match>\n</label>\n<source>\n  @id fluentd-containers.log\n  @type tail\n  @label @KUBERNETES_CONTAINERS\n  path /var/log/containers/*.log\n  pos_file /var/log/containers.log.pos\n  tag raw.containers.*\n  read_from_head true\n  <parse>\n    @type multi_format\n    <pattern>\n      format json\n      time_key time\n      time_format %Y-%m-%dT%H:%M:%S.%NZ\n      keep_time_key true\n    </pattern>\n    <pattern>\n      format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/\n      time_format %Y-%m-%dT%H:%M:%S.%N%:z\n      keep_time_key true\n    </pattern>\n  </parse>\n</source>\n<label @KUBERNETES_CONTAINERS>\n  <match raw.containers.**>\n    @id raw.containers\n    @type detect_exceptions\n    remove_tag_prefix raw\n    message log\n    stream stream\n    multiline_flush_interval 5\n    max_bytes 500000\n    max_lines 1000\n  </match>\n  <filter containers.**>\n    @type kubernetes_metadata\n  </filter>\n  <filter **>\n    @type record_transformer\n    enable_ruby\n    <record>\n      container_id ${record['docker']['container_id']}\n    </record>\n  </filter>\n  <filter **>\n    @type concat\n    key log\n    stream_identity_key container_id\n    multiline_end_regexp /\\n$/\n    separator \" \"\n    flush_interval 30\n  </filter>\n  <filter **>\n    @type record_transformer\n    remove_keys container_id\n  </filter>\n  <match containers.**>\n     @type rewrite_tag_filter\n     <rule>\n       key $.kubernetes.container_name\n       pattern ^(.+)$\n       tag $1.${tag}\n     </rule>\n  </match>\n  <match {heapster,influxdb,grafana,fluentd-coralogix}.containers.**>\n    @type null\n  </match>\n  <filter *.containers.**>\n    @type parser\n    key_name log\n    reserve_time true\n    reserve_data true\n    remove_key_name_field true\n    replace_invalid_sequence true\n    emit_invalid_record_to_error false\n    <parse>\n      @type json\n      keep_time_key true\n    </parse>\n  </filter>\n  <match *.containers.**>\n    @type coralogix\n    privatekey \"#{ENV['PRIVATE_KEY']}\"\n    appname \"#{ENV['APP_NAME']}\"\n    subsystemname \"#{ENV['SUB_SYSTEM']}\"\n    is_json true\n    force_compression false\n    debug false\n  </match>\n</label>\n"
    }
  },
  {
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
      "name": "coralogix-fluentd-service",
      "namespace": "kube-system",
      "labels": {
        "k8s-app": "coralogix-fluentd-logger",
        "k8s-app-version": "1.1.6",
        "chart": "coralogix-fluentd-1.0.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "k8s-app": "coralogix-fluentd-logger"
      },
      "ports": [
        {
          "port": 24224,
          "targetPort": 24224,
          "protocol": "TCP",
          "name": "fluentd"
        },
        {
          "port": 9880,
          "targetPort": 9880,
          "protocol": "TCP",
          "name": "http"
        },
        {
          "port": 5140,
          "targetPort": 5140,
          "protocol": "UDP",
          "name": "syslog"
        },
        {
          "port": 12201,
          "targetPort": 12201,
          "protocol": "UDP",
          "name": "graylog"
        }
      ],
      "clusterIP": "None"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "coralogix-fluentd-daemonset",
      "namespace": "kube-system",
      "labels": {
        "k8s-app": "coralogix-fluentd-logger",
        "k8s-app-version": "1.1.6",
        "chart": "coralogix-fluentd-1.0.4",
        "release": "release-name",
        "heritage": "Helm",
        "kubernetes.io/cluster-service": "true"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "k8s-app": "coralogix-fluentd-logger"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "k8s-app": "coralogix-fluentd-logger",
            "k8s-app-version": "1.1.6",
            "kubernetes.io/cluster-service": "true"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "fluentd-coralogix",
              "image": "docker.io/coralogixrepo/fluentd-coralogix-image:1.1.6",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "containerPort": 24224,
                  "protocol": "TCP",
                  "name": "fluentd"
                },
                {
                  "containerPort": 9880,
                  "protocol": "TCP",
                  "name": "http"
                },
                {
                  "containerPort": 5140,
                  "protocol": "UDP",
                  "name": "syslog"
                },
                {
                  "containerPort": 12201,
                  "protocol": "UDP",
                  "name": "graylog"
                }
              ],
              "envFrom": [
                {
                  "secretRef": {
                    "name": "coralogix-fluentd-account-secrets"
                  }
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "100m",
                  "memory": "400Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "400Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "varlog",
                  "mountPath": "/var/log"
                },
                {
                  "name": "varlibdockercontainers",
                  "mountPath": "/var/lib/docker/containers",
                  "readOnly": true
                },
                {
                  "name": "fluentd-config",
                  "mountPath": "/fluentd/etc/fluent.conf",
                  "subPath": "fluent.conf"
                },
                {
                  "name": "fluentd-config",
                  "mountPath": "/fluentd/etc/conf/kubernetes.conf",
                  "subPath": "kubernetes.conf"
                }
              ]
            }
          ],
          "terminationGracePeriodSeconds": 30,
          "volumes": [
            {
              "name": "varlog",
              "hostPath": {
                "path": "/var/log"
              }
            },
            {
              "name": "varlibdockercontainers",
              "hostPath": {
                "path": "/var/lib/docker/containers"
              }
            },
            {
              "name": "fluentd-config",
              "configMap": {
                "name": "coralogix-fluentd-configs"
              }
            }
          ],
          "tolerations": [
            {
              "effect": "NoSchedule",
              "key": "node-role.kubernetes.io/master"
            }
          ]
        }
      }
    }
  }
]