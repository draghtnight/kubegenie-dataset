[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "logging"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "fluent-bit-conf-release-name"
    },
    "data": {
      "fluent-bit.conf": "#;this file is generate by flb api server\n#;api:start\n#;api:filter\n[FILTER]\n    Name                        kubernetes\n    Match                       kube.*\n#;api:end\n\n#;api:start\n#;api:output\n[OUTPUT]\n    Name                        es\n    Match                       *\n    Host                        ${ES_HOST}\n    Port                        ${ES_PORT}\n    Index                       es_index\n    Type                        es\n#;api:end\n\n#;api:start\n#;api:service\n[SERVICE]\n    Flush                       1\n    Log_Level                   info\n    Parsers_File                parsers.conf\n#;api:end\n\n",
      "parsers.conf": "[PARSER]\n    Name   apache\n    Format regex\n    Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \\[(?<time>[^\\]]*)\\] \"(?<method>\\S+)(?: +(?<path>[^\\\"]*?)(?: +\\S*)?)?\" (?<code>[^ ]*) (?<size>[^ ]*)(?: \"(?<referer>[^\\\"]*)\" \"(?<agent>[^\\\"]*)\")?$\n    Time_Key time\n    Time_Format %d/%b/%Y:%H:%M:%S %z\n\n[PARSER]\n    Name   apache2\n    Format regex\n    Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \\[(?<time>[^\\]]*)\\] \"(?<method>\\S+)(?: +(?<path>[^ ]*) +\\S*)?\" (?<code>[^ ]*) (?<size>[^ ]*)(?: \"(?<referer>[^\\\"]*)\" \"(?<agent>[^\\\"]*)\")?$\n    Time_Key time\n    Time_Format %d/%b/%Y:%H:%M:%S %z\n\n[PARSER]\n    Name   apache_error\n    Format regex\n    Regex  ^\\[[^ ]* (?<time>[^\\]]*)\\] \\[(?<level>[^\\]]*)\\](?: \\[pid (?<pid>[^\\]]*)\\])?( \\[client (?<client>[^\\]]*)\\])? (?<message>.*)$\n\n[PARSER]\n    Name   nginx\n    Format regex\n    Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \\[(?<time>[^\\]]*)\\] \"(?<method>\\S+)(?: +(?<path>[^\\\"]*?)(?: +\\S*)?)?\" (?<code>[^ ]*) (?<size>[^ ]*)(?: \"(?<referer>[^\\\"]*)\" \"(?<agent>[^\\\"]*)\")?$\n    Time_Key time\n    Time_Format %d/%b/%Y:%H:%M:%S %z\n\n[PARSER]\n    Name   json-test\n    Format json\n    Time_Key time\n    Time_Format %d/%b/%Y:%H:%M:%S %z\n\n[PARSER]\n    Name        docker\n    Format      json\n    Time_Key    time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L\n    Time_Keep   On\n\n[PARSER]\n    Name        MicroServiceUI\n    Format      json\n    Time_Key    time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L\n    Time_Keep   On\n\n[PARSER]\n    Name        Application\n    Format      json\n    Time_Key    time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L\n    Time_Keep   On\n\n[PARSER]\n    Name        Mobile\n    Format      json\n    Time_Key    time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L\n    Time_Keep   On\n\n[PARSER]\n    Name        spring-boot\n    Format      regex\n    Time_Key    time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L\n    Decode_Field_as escaped_utf8 msg\n    Regex       (?m-ix)^{\"log\":\"(?<logtime>[^ ]* [^ ]*) {1,2}(?<level>[^ ]*)( \\[(?<appname>[^,]*),(?<traceid>[^,]*),(?<spanid>[^,]*),(?<exportable>[^\\]]*)\\])? (?<processid>\\d+) --- \\[(?<thread>[^\\]]*)\\] (?<class>[^ ]*) *:(?<msg>.*)\",\"stream\".*time\":\"(?<time>[^\"]*)\\\"}$\n\n[PARSER]\n    Name        java-spring\n    Format      regex\n    Time_Key    time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L\n    Regex       (?m-ix)^{\"log\":\"(?<logtime>[^ ]* [^ ]*) {1,2}(?<level>[^ ]*)( \\[(?<appname>[^,]*),(?<traceid>[^,]*),(?<spanid>[^,]*),(?<exportable>[^\\]]*)\\])? (?<processid>\\d+) --- \\[(?<thread>[^\\]]*)\\] (?<class>[^ ]*) *:(?<msg>.*)\",\"stream\".*time\":\"(?<time>[^\"]*)\\\"}$\n\n[PARSER]\n    Name        springnotrace\n    Format      regex\n    Time_Key    time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L\n    Regex       (?m-ix)^{\"log\":\"(?<logtime>[^ ]* [^ ]*)  (?<level>[^ ]*) (?<process_id>[\\d]+) \\-\\-\\- \\[(?<span_id>[^\\]]+)\\](?<msg>.*)\",\"stream\".*time\":\"(?<time>[^\"]*)\\\"}$\n\n[PARSER]\n    Name   ErrLines\n    Format regex\n    Decode_Field_as escaped_utf8 errs\n    Regex  (?<errs>(?<=:\\\").*(?=\\\",\"stream))\n\n[PARSER]\n    Name        syslog\n    Format      regex\n    Regex       ^\\<(?<pri>[0-9]+)\\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?<pid>[0-9]+)\\])?(?:[^\\:]*\\:)? *(?<message>.*)$\n    Time_Key    time\n    Time_Format %b %d %H:%M:%S\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "logging-agent-config-release-name"
    },
    "data": {
      "config.yaml": "---\nfluentbit:\n  Namespace: default\n  ConfigmapName: fluent-bit-conf-release-name\n  DefaultCollectorType: \"tail\"\n  DaemonSetName: fluent-bit-release-name\n  LabelSelector: choerodon.io/logs-parser\n  AnnotationSelector: choerodon.io/logs-parser\n  ConfigKey: fluent-bit.conf\n"
    }
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "metadata": {
      "name": "logging-controller"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cluster-admin"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "logging",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "fluent-bit-release-name",
      "labels": {
        "choerodon.io/release": "release-name",
        "choerodon.io/infra": "fluent-bit",
        "choerodon.io/logs-parser": "docker"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "choerodon.io/release": "release-name",
          "choerodon.io/infra": "fluent-bit"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "choerodon.io/release": "release-name",
            "choerodon.io/infra": "fluent-bit"
          }
        },
        "spec": {
          "serviceAccountName": "logging",
          "containers": [
            {
              "name": "fluent-bit",
              "image": "registry.cn-shanghai.aliyuncs.com/choerodon-tools/fluent-bit:0.13.6",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "usual",
                  "containerPort": 24224,
                  "protocol": "TCP"
                }
              ],
              "env": [
                {
                  "name": "ES_HOST",
                  "value": "elasticsearch.logging.svc"
                },
                {
                  "name": "ES_PORT",
                  "value": "9200"
                }
              ],
              "volumeMounts": [
                {
                  "name": "varlog",
                  "mountPath": "/var/log"
                },
                {
                  "name": "varlibdockercontainers",
                  "mountPath": "/var/lib/docker/containers",
                  "readOnly": true
                },
                {
                  "name": "flb-confmap",
                  "mountPath": "/fluent-bit/etc"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "300m",
                  "memory": "1024Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "512Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "varlog",
              "hostPath": {
                "path": "/var/log"
              }
            },
            {
              "name": "varlibdockercontainers",
              "hostPath": {
                "path": "/var/lib/docker/containers"
              }
            },
            {
              "name": "flb-confmap",
              "configMap": {
                "name": "fluent-bit-conf-release-name",
                "items": [
                  {
                    "key": "fluent-bit.conf",
                    "path": "fluent-bit.conf"
                  },
                  {
                    "key": "parsers.conf",
                    "path": "parsers.conf"
                  }
                ]
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name",
      "labels": {
        "choerodon.io/release": "release-name",
        "choerodon.io/infra": "logging-agent"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "choerodon.io/release": "release-name",
          "choerodon.io/infra": "logging-agent"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "choerodon.io/metrics-group": "logging-agent",
            "choerodon.io/metrics-path": "/metrics"
          },
          "labels": {
            "choerodon.io/release": "release-name",
            "choerodon.io/infra": "logging-agent",
            "release": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "logging",
          "containers": [
            {
              "name": "logging-agent",
              "image": "registry.cn-shanghai.aliyuncs.com/c7n/logging-agent:0.1.2",
              "imagePullPolicy": "Always",
              "command": [
                "sh",
                "-c",
                "/logging-agent -c /var/conf/config.yaml"
              ],
              "volumeMounts": [
                {
                  "mountPath": "/var/conf",
                  "name": "config"
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 9800,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "100m",
                  "memory": "128Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "configMap": {
                "defaultMode": 420,
                "items": [
                  {
                    "key": "config.yaml",
                    "path": "config.yaml"
                  }
                ],
                "name": "logging-agent-config-release-name"
              },
              "name": "config"
            }
          ]
        }
      }
    }
  }
]