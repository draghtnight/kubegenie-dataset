apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: citoid-release-name
  labels:
    app: citoid
    chart: citoid-0.2.0
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: citoid
      release: release-name
  policyTypes:
    - Ingress
  ingress:
    - ports:
        - port: 1970
          protocol: TCP
        - port: 9102
          protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-release-name
data:
  config.yaml: "# Number of worker processes to spawn.\n# Set to 0 to run everything in a single process without clustering.\n# Use 'ncpu' to run as many workers as there are CPU units\nnum_workers: 1\n\n# Log error messages and gracefully restart a worker if v8 reports that it\n# uses more heap (note: not RSS) than this many mb.\nworker_heap_limit_mb: 300\n\n# The maximum interval in ms that can pass between two beat messages\n# sent by each worker to the master before it is killed\nworker_heartbeat_timeout: 7500\n\n# Logger info\nlogging:\n  name: citoid\n  streams:\n    - type: stdout\n      named_levels: true\n\nservices:\n  - name: citoid\n    # a relative path or the name of an npm package, if different from name\n    module: app.js\n    # per-service config\n    conf:\n      port: 1970\n      # interface: localhost # uncomment to only listen on localhost\n      # more per-service config settings\n      # the location of the spec, defaults to spec.yaml if not specified\n      # spec: ./spec.template.yaml\n      # allow cross-domain requests to the API (default '*')\n      cors: '*'\n      # to disable use:\n      # cors: false\n      # to restrict to a particular domain, use:\n      # cors: restricted.domain.org\n      # content for the CSP headers\n      # csp: false  # uncomment this line to disable sending them\n      # URL of the outbound proxy to use (complete with protocol)\n      # the list of domains for which not to use the proxy defined above\n      # no_proxy_list:\n      #   - domain1.com\n      #   - domain2.org\n      # the list of incoming request headers that can be logged; if left empty,\n      # the following headers are allowed: cache-control, content-length,\n      # content-type, if-match, user-agent, x-request-id\n      # log_header_whitelist:\n      #   - cache-control\n      #   - content-length\n      #   - content-type\n      #   - if-match\n      #   - user-agent\n      #   - x-request-id\n      # User-Agent HTTP header to use for requests\n      user_agent: \"Citoid (Wikimedia tool; learn more at https://www.mediawiki.org/wiki/Citoid)\"\n      # contact e-mail address; used for making crossRef requests\n      mailto: noc@wikimedia.org\n      # whether Citoid should use Zotero\n      zotero: false\n      # URL where to contact Zotero\n      zoteroInterface: \n      # zotero's server port\n      zoteroPort: 1969\n      # whether the proxy should be used to contact zotero\n      zoteroUseProxy: false\n      # whether Citoid should always wait for the PubMed request to complete\n      pubmed: false\n      # whether Citoid is allowed to scrape private IPs\n      allowPrivateAddresses: false\n      # maximum number of redirects allowed\n      maxRedirects: 10\n      # the WorldCat Search API key to use\n      wskey: false"
---
apiVersion: v1
kind: Service
metadata:
  name: citoid-release-name
  labels:
    app: citoid
    chart: citoid-0.2.0
    release: release-name
    heritage: Helm
spec:
  type: NodePort
  selector:
    app: citoid
    release: release-name
    routed_via: release-name
  ports:
    - name: http
      protocol: TCP
      port: 1970
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: citoid-release-name
  labels:
    app: citoid
    chart: citoid-0.2.0
    release: release-name
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: citoid
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: citoid
        release: release-name
        routed_via: release-name
      annotations:
        checksum/config: 99377808737563fb62b287da8472385b7057f98d902462524ec572cda92499f5
        prometheus.io/scrape: "false"
    spec:
      containers:
        - name: citoid-release-name
          image: docker-registry.wikimedia.org/wikimedia/mediawiki-services-citoid:latest
          command:
            - nodejs
          args:
            - /srv/service/server.js
            - -c
            - /etc/citoid/config.yaml
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 1970
          livenessProbe:
            tcpSocket:
              port: 1970
          readinessProbe:
            httpGet:
              path: /_info
              port: 1970
          env:
            - name: SERVICE_IDENTIFIER
              value: citoid-release-name
          volumeMounts:
            - name: config-volume
              mountPath: /etc/citoid
          resources:
            requests:
              cpu: 1m
              memory: 100Mi
            limits:
              cpu: 1
              memory: 400Mi
      volumes:
        - name: config-volume
          configMap:
            name: config-release-name
---
apiVersion: v1
kind: Pod
metadata:
  name: citoid-release-name-service-checker
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  containers:
    - name: citoid-release-name-service-checker
      image: docker-registry.wikimedia.org/service-checker
      imagePullPolicy: IfNotPresent
      args:
        - -t
        - "5"
        - $(CITOID_RELEASE_NAME_SERVICE_HOST)
        - http://citoid-release-name:1970
  dnsPolicy: ClusterFirst
  restartPolicy: Never
