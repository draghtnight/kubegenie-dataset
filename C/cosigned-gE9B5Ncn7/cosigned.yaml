apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-policy-webhook
  name: release-name-cosigned-policy-webhook
  namespace: gE9B5Ncn7
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-webhook
  name: release-name-cosigned-webhook
  namespace: gE9B5Ncn7
---
apiVersion: v1
kind: Secret
metadata:
  annotations: null
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-policy-webhook
  name: policy-webhook-certs
  namespace: gE9B5Ncn7
---
apiVersion: v1
kind: Secret
metadata:
  annotations: null
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-webhook
  name: webhook-certs
  namespace: gE9B5Ncn7
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-image-policies
  namespace: gE9B5Ncn7
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
    cluster-image-policy-json: '{"images":[{"glob":"ghcr.io/example/*","regex":""}],"authorities":[{"key":{"data":"-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExB6+H6054/W1SJgs5JR6AJr6J35J\\nRCTfQ5s1kD+hGMSE1rH7s46hmXEeyhnlRnaGF8eMU/SBJE/2NKPnxE7WzQ==\\n-----END PUBLIC KEY-----"}}]}'
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-policy-webhook
  name: release-name-cosigned-policy-webhook-logging
  namespace: gE9B5Ncn7
data:
  zap-logger-config: |-
    {
      "level": "info",
      "development": false,
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
  loglevel.controller: info
  loglevel.webhook: info
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-webhook
  name: release-name-cosigned-webhook-logging
  namespace: gE9B5Ncn7
data:
  zap-logger-config: |-
    {
      "level": "info",
      "development": false,
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
  loglevel.controller: info
  loglevel.webhook: info
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterimagepolicies.cosigned.sigstore.dev
spec:
  group: cosigned.sigstore.dev
  names:
    kind: ClusterImagePolicy
    plural: clusterimagepolicies
    singular: clusterimagepolicy
    categories:
      - all
      - sigstore
    shortNames:
      - cip
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              description: Spec holds the desired state of the ClusterImagePolicy (from the client).
              type: object
              properties:
                authorities:
                  type: array
                  items:
                    type: object
                    properties:
                      attestations:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              description: Name of the attestation. These can then be referenced at the CIP level policy.
                              type: string
                            policy:
                              type: object
                              properties:
                                configMapRef:
                                  type: object
                                  properties:
                                    name:
                                      description: Name is unique within a namespace to reference a configmap resource.
                                      type: string
                                    namespace:
                                      description: Namespace defines the space within which the configmap name must be unique.
                                      type: string
                                data:
                                  type: string
                                type:
                                  description: Which kind of policy this is, currently only rego or cue are supported. Furthermore, only cue is tested :)
                                  type: string
                                url:
                                  type: string
                            predicateType:
                              description: Which predicate type to verify. Matches cosign verify-attestation options.
                              type: string
                      ctlog:
                        type: object
                        properties:
                          url:
                            type: string
                      key:
                        type: object
                        properties:
                          data:
                            description: Data contains the inline public key
                            type: string
                          kms:
                            description: KMS contains the KMS url of the public key
                            type: string
                          secretRef:
                            type: object
                            properties:
                              name:
                                description: Name is unique within a namespace to reference a secret resource.
                                type: string
                              namespace:
                                description: Namespace defines the space within which the secret name must be unique.
                                type: string
                      keyless:
                        type: object
                        properties:
                          ca-cert:
                            type: object
                            properties:
                              data:
                                description: Data contains the inline public key
                                type: string
                              kms:
                                description: KMS contains the KMS url of the public key
                                type: string
                              secretRef:
                                type: object
                                properties:
                                  name:
                                    description: Name is unique within a namespace to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: Namespace defines the space within which the secret name must be unique.
                                    type: string
                          identities:
                            type: array
                            items:
                              type: object
                              properties:
                                issuer:
                                  type: string
                                subject:
                                  type: string
                          url:
                            type: string
                      name:
                        description: Name is the name for this authority. Used by the CIP Policy validator to be able to reference matching signature or attestation verifications. If not specified, the name will be authority-<index in array>
                        type: string
                      source:
                        type: array
                        items:
                          type: object
                          properties:
                            oci:
                              type: string
                            signaturePullSecrets:
                              description: SignaturePullSecrets is an optional list of references to secrets in the same namespace as the deploying resource for pulling any of the signatures used by this Source.
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                images:
                  type: array
                  items:
                    type: object
                    properties:
                      glob:
                        type: string
                      regex:
                        type: string
                policy:
                  description: Policy is an optional policy that can be applied against all the successfully validated Authorities. If no authorities pass, this does not even get evaluated, as the Policy is considered failed.
                  type: object
                  properties:
                    configMapRef:
                      type: object
                      properties:
                        name:
                          description: Name is unique within a namespace to reference a configmap resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the configmap name must be unique.
                          type: string
                    data:
                      type: string
                    type:
                      description: Which kind of policy this is, currently only rego or cue are supported. Furthermore, only cue is tested :)
                      type: string
                    url:
                      type: string
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cosigned-policy-webhook
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-policy-webhook
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - list
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - get
      - update
      - delete
    resourceNames:
      - cosigned.sigstore.dev
      - defaulting.clusterimagepolicy.sigstore.dev
      - validating.clusterimagepolicy.sigstore.dev
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations/finalizers
      - mutatingwebhookconfigurations/finalizers
    verbs:
      - update
    resourceNames:
      - cosigned.sigstore.dev
      - defaulting.clusterimagepolicy.sigstore.dev
      - validating.clusterimagepolicy.sigstore.dev
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
    resourceNames:
      - default
  - apiGroups:
      - ""
    resources:
      - namespaces/finalizers
    verbs:
      - update
    resourceNames:
      - default
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
      - secrets
    verbs:
      - get
  - apiGroups:
      - cosigned.sigstore.dev
    resources:
      - clusterimagepolicies
    verbs:
      - get
      - list
      - update
      - watch
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cosigned-webhook
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-webhook
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - list
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - get
      - update
      - delete
    resourceNames:
      - cosigned.sigstore.dev
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
    resourceNames:
      - default
  - apiGroups:
      - ""
    resources:
      - namespaces/finalizers
    verbs:
      - update
    resourceNames:
      - default
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
      - secrets
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cosigned-policy-webhook
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-policy-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cosigned-policy-webhook
subjects:
  - kind: ServiceAccount
    name: release-name-cosigned-policy-webhook
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cosigned-webhook
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cosigned-webhook
subjects:
  - kind: ServiceAccount
    name: release-name-cosigned-webhook
    namespace: default
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-cosigned-policy-webhook
  namespace: gE9B5Ncn7
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-policy-webhook
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - config-image-policies
    verbs:
      - get
      - list
      - create
      - update
      - patch
      - watch
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-cosigned-webhook
  namespace: gE9B5Ncn7
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-webhook
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-cosigned-policy-webhook
  namespace: gE9B5Ncn7
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-policy-webhook
subjects:
  - kind: ServiceAccount
    name: release-name-cosigned-policy-webhook
    namespace: default
roleRef:
  kind: Role
  name: release-name-cosigned-policy-webhook
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-cosigned-webhook
  namespace: gE9B5Ncn7
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-webhook
subjects:
  - kind: ServiceAccount
    name: release-name-cosigned-webhook
    namespace: default
roleRef:
  kind: Role
  name: release-name-cosigned-webhook
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-policy-webhook
  name: policy-webhook
  namespace: gE9B5Ncn7
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    control-plane: release-name-cosigned-policy-webhook
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-policy-webhook
  name: release-name-cosigned-policy-webhook-metrics
  namespace: gE9B5Ncn7
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: metrics
  selector:
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    control-plane: release-name-cosigned-policy-webhook
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-webhook
  name: webhook
  namespace: gE9B5Ncn7
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    control-plane: release-name-cosigned-webhook
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-webhook
  name: release-name-cosigned-webhook-metrics
  namespace: gE9B5Ncn7
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: metrics
  selector:
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    control-plane: release-name-cosigned-webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cosigned-policy-webhook
  namespace: gE9B5Ncn7
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-policy-webhook
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cosigned
      app.kubernetes.io/instance: release-name
      control-plane: release-name-cosigned-policy-webhook
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cosigned
        app.kubernetes.io/instance: release-name
        control-plane: release-name-cosigned-policy-webhook
    spec:
      nodeSelector: {}
      tolerations: []
      serviceAccountName: release-name-cosigned-policy-webhook
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    control-plane: release-name-cosigned-policy-webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - name: policy-webhook
          image: gcr.io/projectsigstore/policy-webhook@sha256:82940e8c3e0d3d5dd92b4779f4378e664f91b790db0d799b03535648eddc141d
          imagePullPolicy: IfNotPresent
          args:
            - -mutating-webhook-name=defaulting.clusterimagepolicy.sigstore.dev
            - -validating-webhook-name=validating.clusterimagepolicy.sigstore.dev
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: release-name-cosigned-policy-webhook-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: release-name-cosigned-policy-webhook-observability
            - name: METRICS_DOMAIN
              value: sigstore.dev/cosigned
            - name: WEBHOOK_NAME
              value: policy-webhook
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /home/nonroot
              name: writable-home-dir
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 20
            periodSeconds: 1
            httpGet:
              scheme: HTTPS
              port: 8443
              httpHeaders:
                - name: k-kubelet-probe
                  value: policy-webhook
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 20
            periodSeconds: 1
            httpGet:
              scheme: HTTPS
              port: 8443
              httpHeaders:
                - name: k-kubelet-probe
                  value: policy-webhook
      terminationGracePeriodSeconds: 300
      volumes:
        - emptyDir: {}
          name: writable-home-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: cosigned-0.1.23
    app.kubernetes.io/name: cosigned
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.8.0
    app.kubernetes.io/managed-by: Helm
    control-plane: release-name-cosigned-webhook
  name: release-name-cosigned-webhook
  namespace: gE9B5Ncn7
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cosigned
      app.kubernetes.io/instance: release-name
      control-plane: release-name-cosigned-webhook
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cosigned
        app.kubernetes.io/instance: release-name
        control-plane: release-name-cosigned-webhook
    spec:
      nodeSelector: {}
      tolerations: []
      serviceAccountName: release-name-cosigned-webhook
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    control-plane: release-name-cosigned-webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - name: cosigned-webhook
          image: gcr.io/projectsigstore/cosigned@sha256:784518ff3ee755ce42e174e61036094af771c43bdc76b65a8f0e52481ed450ac
          imagePullPolicy: IfNotPresent
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: release-name-cosigned-webhook-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: release-name-cosigned-webhook-observability
            - name: METRICS_DOMAIN
              value: sigstore.dev/cosigned
            - name: WEBHOOK_NAME
              value: webhook
          args:
            - -webhook-name=cosigned.sigstore.dev
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 20
            periodSeconds: 1
            httpGet:
              port: 8443
              scheme: HTTPS
              path: /healthz
              httpHeaders:
                - name: k-kubelet-probe
                  value: webhook
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 20
            periodSeconds: 1
            httpGet:
              port: 8443
              scheme: HTTPS
              path: /readyz
              httpHeaders:
                - name: k-kubelet-probe
                  value: webhook
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsUser: 1000
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: defaulting.clusterimagepolicy.sigstore.dev
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: policy-webhook
        namespace: default
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: defaulting.clusterimagepolicy.sigstore.dev
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: cosigned.sigstore.dev
webhooks:
  - name: cosigned.sigstore.dev
    namespaceSelector:
      matchExpressions:
        - key: cosigned.sigstore.dev/include
          operator: In
          values:
            - "true"
    admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: webhook
        namespace: default
    failurePolicy: Fail
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validating.clusterimagepolicy.sigstore.dev
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: policy-webhook
        namespace: default
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: defaulting.clusterimagepolicy.sigstore.dev
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: cosigned.sigstore.dev
webhooks:
  - name: cosigned.sigstore.dev
    namespaceSelector:
      matchExpressions:
        - key: cosigned.sigstore.dev/include
          operator: In
          values:
            - "true"
    admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: webhook
        namespace: default
    failurePolicy: Fail
    sideEffects: None
