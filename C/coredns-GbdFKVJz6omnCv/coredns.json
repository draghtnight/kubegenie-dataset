[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-coredns",
      "labels": {
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "helm.sh/chart": "coredns-1.13.3",
        "k8s-app": "coredns",
        "kubernetes.io/cluster-service": "true",
        "kubernetes.io/name": "CoreDNS",
        "app.kubernetes.io/name": "coredns"
      }
    },
    "data": {
      "Corefile": ".:53 {\n    errors\n    health {\n        lameduck 5s\n    }\n    ready\n    kubernetes cluster.local in-addr.arpa ip6.arpa {\n        pods insecure\n        fallthrough in-addr.arpa ip6.arpa\n        ttl 30\n    }\n    prometheus 0.0.0.0:9153\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n}"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-coredns",
      "labels": {
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "helm.sh/chart": "coredns-1.13.3",
        "k8s-app": "coredns",
        "kubernetes.io/cluster-service": "true",
        "kubernetes.io/name": "CoreDNS",
        "app.kubernetes.io/name": "coredns"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "endpoints",
          "services",
          "pods",
          "namespaces"
        ],
        "verbs": [
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-coredns",
      "labels": {
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "helm.sh/chart": "coredns-1.13.3",
        "k8s-app": "coredns",
        "kubernetes.io/cluster-service": "true",
        "kubernetes.io/name": "CoreDNS",
        "app.kubernetes.io/name": "coredns"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-coredns"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "default",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-coredns",
      "labels": {
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "helm.sh/chart": "coredns-1.13.3",
        "k8s-app": "coredns",
        "kubernetes.io/cluster-service": "true",
        "kubernetes.io/name": "CoreDNS",
        "app.kubernetes.io/name": "coredns"
      },
      "annotations": {}
    },
    "spec": {
      "selector": {
        "app.kubernetes.io/instance": "release-name",
        "k8s-app": "coredns",
        "app.kubernetes.io/name": "coredns"
      },
      "ports": [
        {
          "port": 53,
          "protocol": "UDP",
          "name": "udp-53"
        },
        {
          "port": 53,
          "protocol": "TCP",
          "name": "tcp-53"
        }
      ],
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-coredns",
      "labels": {
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "helm.sh/chart": "coredns-1.13.3",
        "k8s-app": "coredns",
        "kubernetes.io/cluster-service": "true",
        "kubernetes.io/name": "CoreDNS",
        "app.kubernetes.io/name": "coredns"
      }
    },
    "spec": {
      "replicas": 1,
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": "25%"
        }
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/instance": "release-name",
          "k8s-app": "coredns",
          "app.kubernetes.io/name": "coredns"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "k8s-app": "coredns",
            "app.kubernetes.io/name": "coredns",
            "app.kubernetes.io/instance": "release-name"
          },
          "annotations": {
            "checksum/config": "a9fcf988f9f3d342eaada8853bf1eca61ca3b84fcd58b76192376a8dd3d34e08",
            "scheduler.alpha.kubernetes.io/critical-pod": "",
            "scheduler.alpha.kubernetes.io/tolerations": "[{\"key\":\"CriticalAddonsOnly\", \"operator\":\"Exists\"}]"
          }
        },
        "spec": {
          "terminationGracePeriodSeconds": 30,
          "serviceAccountName": "default",
          "dnsPolicy": "Default",
          "containers": [
            {
              "name": "coredns",
              "image": "coredns/coredns:1.7.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "-conf",
                "/etc/coredns/Corefile"
              ],
              "volumeMounts": [
                {
                  "name": "config-volume",
                  "mountPath": "/etc/coredns"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "100m",
                  "memory": "128Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "ports": [
                {
                  "containerPort": 53,
                  "protocol": "UDP",
                  "name": "udp-53"
                },
                {
                  "containerPort": 53,
                  "protocol": "TCP",
                  "name": "tcp-53"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/health",
                  "port": 8080,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 60,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 5
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/ready",
                  "port": 8181,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 5
              }
            }
          ],
          "volumes": [
            {
              "name": "config-volume",
              "configMap": {
                "name": "release-name-coredns",
                "items": [
                  {
                    "key": "Corefile",
                    "path": "Corefile"
                  }
                ]
              }
            }
          ]
        }
      }
    }
  }
]