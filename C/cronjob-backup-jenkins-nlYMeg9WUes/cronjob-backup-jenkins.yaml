apiVersion: v1
kind: ServiceAccount
metadata:
  name: backup-jenkins-sa
  namespace: nlYMeg9WUes
---
apiVersion: v1
kind: Secret
metadata:
  name: ssh-secret
  namespace: nlYMeg9WUes
type: Opaque
stringData:
  password: npinfra1!
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-sh
  namespace: nlYMeg9WUes
data:
  backup.sh: |
    #!/bin/bash

    echo "Started Backup..."
    export POD_NAME=$(kubectl get pods -l "app.kubernetes.io/component=jenkins-master" -o name -n default | awk -F'/' '{print $2}')
    echo "POD_NAME = "$POD_NAME
    export BACKUP_NAME="backup_jenkins_"$(date "+%Y%m%d")".tar.gz"
    echo "BACKUP_NAME = "$BACKUP_NAME
    export EXECUTOR=$HOSTNAME
    echo "EXECUTOR = "$EXECUTOR
    kubectl exec -it -n default ${POD_NAME} -- /bin/bash -c "tar zcvf ${BACKUP_NAME} var/jenkins_home"
    kubectl cp default/${POD_NAME}:${BACKUP_NAME} ./${BACKUP_NAME}
    kubectl cp ./${BACKUP_NAME} default/${EXECUTOR}:/${BACKUP_NAME} -c sshpass
    kubectl exec -it -n default ${EXECUTOR} -c sshpass -- /bin/bash -c "/root/shell/scp.sh"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scp-sh
  namespace: nlYMeg9WUes
data:
  scp.sh: |
    #!/bin/bash

    BACKUP_NAME="backup_jenkins_"$(date "+%Y%m%d")".tar.gz"
    BACKUP_SERVER_PASSWORD_PATH="/root/ssh/password"
    SSH_OPTS="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
    SSCP="sshpass -f ${BACKUP_SERVER_PASSWORD_PATH} scp ${SSH_OPTS} "
    DEST_USER=taco
    DEST_HOST=10.12.1.99
    DEST_DIR="~/jenkins_bak/"
    echo "Copy backup file to [ ${DEST_DIR} in ${DEST_HOST} ]..."
    ${SSCP} /${BACKUP_NAME} ${DEST_USER}@${DEST_HOST}:${DEST_DIR}
    echo "Completed"
    kill 1
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: backup-jenkins-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: backup-jenkins-sa
    namespace: default
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: cronjob-backup-jenkins
  namespace: nlYMeg9WUes
  labels:
    app.kubernetes.io/name: cronjob-backup-jenkins
    app.kubernetes.io/instance: cronjob-backup-jenkins
spec:
  schedule: 32 18 * * *
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: cronjob-backup-jenkins
            app.kubernetes.io/instance: cronjob-backup-jenkins
        spec:
          serviceAccount: backup-jenkins-sa
          containers:
            - image: pseudojo/docker-sshd-with-curl:alpine3.12
              imagePullPolicy: IfNotPresent
              name: sshpass
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - name: scp-sh
                  mountPath: /root/shell
                - name: ssh-secret
                  mountPath: /root/ssh
                  readOnly: true
            - image: alpine/k8s:1.18.2
              imagePullPolicy: IfNotPresent
              name: k8s
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              command:
                - /root/shell/backup.sh
              volumeMounts:
                - name: backup-sh
                  mountPath: /root/shell
          restartPolicy: Never
          volumes:
            - name: backup-sh
              configMap:
                name: backup-sh
                defaultMode: 320
            - name: scp-sh
              configMap:
                name: scp-sh
                defaultMode: 320
            - name: ssh-secret
              secret:
                secretName: ssh-secret
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 3
