apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
    helm.sh/chart: calico-0.1.18
    app.kubernetes.io/name: calico
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.17.0
    app.kubernetes.io/managed-by: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      k8s-app: calico-kube-controllers
      app.kubernetes.io/name: calico
      app.kubernetes.io/instance: release-name
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: calico-typha
  namespace: kube-system
  labels:
    k8s-app: calico-typha
    helm.sh/chart: calico-0.1.18
    app.kubernetes.io/name: calico
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.17.0
    app.kubernetes.io/managed-by: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      k8s-app: calico-typha
      app.kubernetes.io/name: calico
      app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    helm.sh/chart: calico-0.1.18
    app.kubernetes.io/name: calico
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.17.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    helm.sh/chart: calico-0.1.18
    app.kubernetes.io/name: calico
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.17.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-typha
  namespace: kube-system
  labels:
    helm.sh/chart: calico-0.1.18
    app.kubernetes.io/name: calico
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.17.0
    app.kubernetes.io/managed-by: Helm
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: network-admin
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - nodes
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - namespaces
      - serviceaccounts
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - '*'
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - felixconfigurations
      - ipamblocks
      - blockaffinities
      - ipamhandles
      - ipamconfigs
      - bgppeers
      - bgpconfigurations
      - ippools
      - hostendpoints
      - clusterinformations
      - globalnetworkpolicies
      - globalnetworksets
      - networkpolicies
      - networksets
    verbs:
      - '*'
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: calico-cni
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - nodes
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - patch
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - blockaffinities
      - ipamblocks
      - ipamhandles
    verbs:
      - get
      - list
      - create
      - update
      - delete
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - ipamconfigs
      - clusterinformations
      - ippools
    verbs:
      - get
      - list
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: calico-kube-controllers
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - ippools
    verbs:
      - list
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - blockaffinities
      - ipamblocks
      - ipamhandles
    verbs:
      - get
      - list
      - create
      - update
      - delete
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - hostendpoints
    verbs:
      - get
      - list
      - create
      - update
      - delete
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - clusterinformations
    verbs:
      - get
      - create
      - update
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - kubecontrollersconfigurations
    verbs:
      - get
      - create
      - update
      - watch
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: calico-node
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
      - services
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
      - update
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - globalfelixconfigs
      - felixconfigurations
      - bgppeers
      - globalbgpconfigs
      - bgpconfigurations
      - ippools
      - ipamblocks
      - ipamhandles
      - globalnetworkpolicies
      - globalnetworksets
      - networkpolicies
      - networksets
      - clusterinformations
      - hostendpoints
      - blockaffinities
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - ippools
      - felixconfigurations
      - clusterinformations
    verbs:
      - create
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - ipamconfigs
    verbs:
      - get
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - blockaffinities
    verbs:
      - watch
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: calico-typha
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
      - serviceaccounts
      - endpoints
      - services
      - nodes
    verbs:
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - watch
      - list
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - globalfelixconfigs
      - felixconfigurations
      - bgppeers
      - globalbgpconfigs
      - bgpconfigurations
      - ippools
      - ipamblocks
      - globalnetworkpolicies
      - globalnetworksets
      - networkpolicies
      - clusterinformations
      - hostendpoints
      - blockaffinities
      - networksets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - clusterinformations
    verbs:
      - get
      - create
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: calicoctl
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: network-admin
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: calicoctl
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: calico-cni
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calico-cni
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: calico-cni
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: calico-kube-controllers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calico-kube-controllers
subjects:
  - kind: ServiceAccount
    name: calico-kube-controllers
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: calico-node
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calico-node
subjects:
  - kind: ServiceAccount
    name: calico-node
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: calico-typha
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calico-typha
subjects:
  - kind: ServiceAccount
    name: calico-typha
    namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  name: calico-typha
  namespace: kube-system
  labels:
    k8s-app: calico-typha
    helm.sh/chart: calico-0.1.18
    app.kubernetes.io/name: calico
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.17.0
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 5473
      protocol: TCP
      targetPort: calico-typha
      name: calico-typha
  selector:
    k8s-app: calico-typha
    app.kubernetes.io/name: calico
    app.kubernetes.io/instance: release-name
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    k8s-app: calico-node
    helm.sh/chart: calico-0.1.18
    app.kubernetes.io/name: calico
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.17.0
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      k8s-app: calico-node
      app.kubernetes.io/name: calico
      app.kubernetes.io/instance: release-name
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: calico-node
        helm.sh/chart: calico-0.1.18
        app.kubernetes.io/name: calico
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: 3.17.0
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: calico-node
      hostNetwork: true
      priorityClassName: system-node-critical
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      terminationGracePeriodSeconds: 0
      containers:
        - name: calico-node
          image: docker-registry.wikimedia.org/calico/node:v3.17.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: calico-kubernetes-services-endpoint
                optional: true
          env:
            - name: DATASTORE_TYPE
              value: kubernetes
            - name: FELIX_TYPHAK8SSERVICENAME
              value: calico-typha
            - name: WAIT_FOR_DATASTORE
              value: "true"
            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CALICO_NETWORKING_BACKEND
              value: bird
            - name: CLUSTER_TYPE
              value: k8s,bgp
            - name: IP
              value: autodetect
            - name: IP6
              value: autodetect
            - name: NO_DEFAULT_POOLS
              value: "true"
            - name: CALICO_DISABLE_FILE_LOGGING
              value: "true"
            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
              value: ACCEPT
            - name: FELIX_IPV6SUPPORT
              value: "true"
            - name: FELIX_LOGSEVERITYSCREEN
              value: info
            - name: FELIX_HEALTHENABLED
              value: "true"
            - name: FELIX_PROMETHEUSMETRICSENABLED
              value: "true"
            - name: FELIX_PROMETHEUSMETRICSPORT
              value: "9091"
          livenessProbe:
            exec:
              command:
                - /bin/calico-node
                - -felix-live
                - -bird-live
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/calico-node
                - -felix-ready
                - -bird-ready
            periodSeconds: 10
          securityContext:
            privileged: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 350m
              memory: 400Mi
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
              readOnly: false
            - mountPath: /var/run/calico
              name: var-run-calico
              readOnly: false
            - mountPath: /var/lib/calico
              name: var-lib-calico
              readOnly: false
            - name: policysync
              mountPath: /var/run/nodeagent
      volumes:
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        - name: var-lib-calico
          hostPath:
            path: /var/lib/calico
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
        - name: policysync
          hostPath:
            type: DirectoryOrCreate
            path: /var/run/nodeagent
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
    helm.sh/chart: calico-0.1.18
    app.kubernetes.io/name: calico
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.17.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: calico-kube-controllers
      app.kubernetes.io/name: calico
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        k8s-app: calico-kube-controllers
        helm.sh/chart: calico-0.1.18
        app.kubernetes.io/name: calico
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: 3.17.0
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: calico-kube-controllers
      priorityClassName: system-cluster-critical
      dnsPolicy: Default
      containers:
        - name: calico-kube-controllers
          image: docker-registry.wikimedia.org/calico/kube-controllers:v3.17.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: calico-kubernetes-services-endpoint
                optional: true
          env:
            - name: ENABLED_CONTROLLERS
              value: node
            - name: DATASTORE_TYPE
              value: kubernetes
          readinessProbe:
            exec:
              command:
                - /usr/bin/check-status
                - -r
          resources:
            limits:
              cpu: 150m
              memory: 150Mi
            requests:
              cpu: 150m
              memory: 150Mi
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calico-typha
  namespace: kube-system
  labels:
    helm.sh/chart: calico-0.1.18
    app.kubernetes.io/name: calico
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.17.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      k8s-app: calico-typha
      app.kubernetes.io/name: calico
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9093"
      labels:
        k8s-app: calico-typha
        helm.sh/chart: calico-0.1.18
        app.kubernetes.io/name: calico
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: 3.17.0
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: calico-typha
      hostNetwork: true
      priorityClassName: system-cluster-critical
      securityContext:
        fsGroup: 65534
      containers:
        - name: calico-typha
          image: docker-registry.wikimedia.org/calico/typha:v3.17.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: calico-kubernetes-services-endpoint
                optional: true
          env:
            - name: TYPHA_LOGSEVERITYSCREEN
              value: info
            - name: TYPHA_LOGFILEPATH
              value: none
            - name: TYPHA_LOGSEVERITYSYS
              value: none
            - name: TYPHA_CONNECTIONREBALANCINGMODE
              value: kubernetes
            - name: TYPHA_DATASTORETYPE
              value: kubernetes
            - name: TYPHA_HEALTHENABLED
              value: "true"
            - name: TYPHA_PROMETHEUSMETRICSENABLED
              value: "true"
            - name: TYPHA_PROMETHEUSMETRICSPORT
              value: "9093"
          ports:
            - containerPort: 5473
              name: calico-typha
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /liveness
              port: 9098
              host: localhost
            periodSeconds: 30
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9098
              host: localhost
            periodSeconds: 10
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 150m
              memory: 150Mi
            requests:
              cpu: 150m
              memory: 150Mi
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                      - calico-typha
              topologyKey: failure-domain.beta.kubernetes.io/zone
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
---
apiVersion: crd.projectcalico.org/v1
kind: BGPConfiguration
metadata:
  name: default
  labels:
    helm.sh/chart: calico-0.1.18
    app.kubernetes.io/name: calico
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.17.0
    app.kubernetes.io/managed-by: Helm
spec: {}
---
apiVersion: crd.projectcalico.org/v1
kind: IPAMConfig
metadata:
  name: default
  labels:
    helm.sh/chart: calico-0.1.18
    app.kubernetes.io/name: calico
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.17.0
    app.kubernetes.io/managed-by: Helm
spec:
  autoAllocateBlocks: true
  maxBlocksPerHost: 0
  strictAffinity: false
