[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-wiremock-config",
      "labels": {
        "helm.sh/chart": "wiremock-1.1.3",
        "app.kubernetes.io/name": "wiremock",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.26.0",
        "app.kubernetes.io/managed-by": "Helm",
        "heritage": "Helm",
        "release": "release-name",
        "chart": "wiremock-1.1.3",
        "consumer": "example"
      }
    },
    "data": {
      "init.sh": "#!/bin/sh\n\nset -eu\n\nmkdir -p /working/mappings\nmkdir -p /working/__files\n\ncp -L /config/status.json /working/mappings/status.json\n\nfor mount_path in $(env | grep '^WMSTUBS' | cut -d'=' -f2)\ndo\n  cp -rL \"${mount_path}/mappings\" /working\n  cp -rL \"${mount_path}/__files\" /working\ndone\n",
      "status.json": "// provides the status endpoint for k8s readyness and liveness probes\n{\n  \"request\" : {\n    \"url\" : \"/status\",\n    \"method\" : \"GET\"\n  },\n  \"response\" : {\n    \"status\" : \"200\",\n    \"headers\": {\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    },\n    \"jsonBody\": {\n      \"status\": \"ok\"\n    }\n  }\n}\n",
      "log4j2.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Configuration status=\"ERROR\">\n    <Properties>\n        <Property name=\"logLevel\">${sys:wm.logging.level:-${env.WM_LOGGING_LEVEL:-info}}</Property>\n    </Properties>\n    <Appenders>\n        <Console name=\"console\" target=\"SYSTEM_OUT\">\n\t\t\t<PatternLayout pattern=\"%d{HH:mm:ss,SSS} %-5p [%mdc{RQID}] [%c{1}] %mdc{CTP}%mdc{EIID}%mdc{ESID}%mdc{EOID}%mdc{CID}- %m%n\" />\n        </Console>\n    </Appenders>\n    <Loggers>\n        <Logger name=\"com.ninecookies.wiremock.extensions\" level=\"${logLevel}\" />\n        <Root level=\"info\">\n            <AppenderRef ref=\"console\" />\n        </Root>\n    </Loggers>\n</Configuration>\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-wiremock",
      "labels": {
        "helm.sh/chart": "wiremock-1.1.3",
        "app.kubernetes.io/name": "wiremock",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.26.0",
        "app.kubernetes.io/managed-by": "Helm",
        "heritage": "Helm",
        "release": "release-name",
        "chart": "wiremock-1.1.3",
        "consumer": "example"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": 8080,
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "wiremock",
        "app.kubernetes.io/instance": "release-name",
        "consumer": "example"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-wiremock",
      "labels": {
        "helm.sh/chart": "wiremock-1.1.3",
        "app.kubernetes.io/name": "wiremock",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.26.0",
        "app.kubernetes.io/managed-by": "Helm",
        "heritage": "Helm",
        "release": "release-name",
        "chart": "wiremock-1.1.3",
        "consumer": "example"
      }
    },
    "spec": {
      "revisionHistoryLimit": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "wiremock",
          "app.kubernetes.io/instance": "release-name",
          "consumer": "example"
        }
      },
      "replicas": 1,
      "strategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "helm.sh/chart": "wiremock-1.1.3",
            "app.kubernetes.io/name": "wiremock",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "2.26.0",
            "app.kubernetes.io/managed-by": "Helm",
            "heritage": "Helm",
            "release": "release-name",
            "chart": "wiremock-1.1.3",
            "consumer": "example"
          },
          "annotations": {
            "checksum/config": "9c068d025b0dbef82b1ca055b1d395ad2fd2d52230b571c7056dfe21aadced88"
          }
        },
        "spec": {
          "initContainers": [
            {
              "name": "copy-stubs",
              "image": "busybox:latest",
              "command": [
                "sh",
                "/config/init.sh"
              ],
              "volumeMounts": [
                {
                  "mountPath": "/working",
                  "name": "working"
                },
                {
                  "mountPath": "/config/init.sh",
                  "name": "config",
                  "subPath": "init.sh"
                },
                {
                  "mountPath": "/config/status.json",
                  "name": "config",
                  "subPath": "status.json"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "wiremock",
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "3Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "3Gi"
                }
              },
              "image": "rodolpheche/wiremock:2.26.0",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "containerPort": 8080
                },
                {
                  "containerPort": 7091
                }
              ],
              "env": [
                {
                  "name": "JAVA_OPTS",
                  "value": "-Xms2G -Xmx2G -XX:MaxMetaspaceSize=256M -Dcom.sun.management.jmxremote.port=7091 -Dcom.sun.management.jmxremote.rmi.port=7091 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1"
                }
              ],
              "args": [
                "--disable-banner",
                "--no-request-journal",
                "--container-threads=300",
                "--async-response-enabled",
                "--async-response-threads=300",
                "--global-response-templating"
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/status",
                  "port": 8080
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "failureThreshold": 3
              },
              "livenessProbe": {
                "tcpSocket": {
                  "port": 8080
                },
                "initialDelaySeconds": 80,
                "periodSeconds": 20,
                "timeoutSeconds": 5,
                "failureThreshold": 2
              },
              "volumeMounts": [
                {
                  "mountPath": "/home/wiremock",
                  "name": "working"
                },
                {
                  "mountPath": "/var/wiremock/lib/log4j2.xml",
                  "name": "config",
                  "subPath": "log4j2.xml"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "working",
              "emptyDir": {}
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-wiremock-config"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "autoscaling/v1",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "name": "release-name-wiremock",
      "labels": {
        "helm.sh/chart": "wiremock-1.1.3",
        "app.kubernetes.io/name": "wiremock",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.26.0",
        "app.kubernetes.io/managed-by": "Helm",
        "heritage": "Helm",
        "release": "release-name",
        "chart": "wiremock-1.1.3",
        "consumer": "example"
      }
    },
    "spec": {
      "scaleTargetRef": {
        "kind": "Deployment",
        "apiVersion": "apps/v1",
        "name": "release-name-wiremock"
      },
      "minReplicas": 1,
      "maxReplicas": 40,
      "targetCPUUtilizationPercentage": 40
    }
  }
]