[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "httpd-conf"
    },
    "data": {
      "httpd.conf": "Listen 80\n\nLoadModule mpm_event_module modules/mod_mpm_event.so\nLoadModule alias_module modules/mod_alias.so\nLoadModule authn_core_module modules/mod_authn_core.so\nLoadModule authn_file_module modules/mod_authn_file.so\nLoadModule authz_core_module modules/mod_authz_core.so\nLoadModule authz_user_module modules/mod_authz_user.so\nLoadModule dav_module modules/mod_dav.so\nLoadModule dav_fs_module modules/mod_dav_fs.so\n\nLoadModule unixd_module modules/mod_unixd.so\nUser www-data\nGroup www-data\n\nErrorLog /proc/self/fd/2\nLogLevel warn\nRedirect gone /favicon.ico\nRedirectMatch gone ^/apple-touch-icon\n\nLoadModule log_config_module modules/mod_log_config.so\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b\" common\nCustomLog /proc/self/fd/1 common\n\nLoadModule mime_module modules/mod_mime.so\nTypesConfig conf/mime.types\n\nLoadModule autoindex_module modules/mod_autoindex.so\nInclude conf/extra/httpd-autoindex.conf\n\nServerRoot \"/usr/local/apache2\"\nServerName my-domain.com\nServerAdmin webmaster@localhost\n\nDocumentRoot \"/usr/local/apache2/webdav\"\n<Directory \"/usr/local/apache2/webdav\">\n    Require all denied\n</Directory>\n\n<Directory />\n    Options FollowSymLinks\n    AllowOverride none\n</Directory>\n\nDavLockDB \"/usr/local/apache2/var/DavLock\"\n\nAddDefaultCharset UTF-8\nIndexOptions Charset=UTF-8 NameWidth=*\n\nLoadModule auth_basic_module modules/mod_auth_basic.so\n\n# This lets certain DAV methods work behind an SSL reverse proxy.\nLoadModule headers_module modules/mod_headers.so\nRequestHeader edit Destination ^https http early\n\n# These disable redirects on non-GET requests for directories that\n# don't include the trailing slash (for misbehaving clients).\nLoadModule setenvif_module modules/mod_setenvif.so\nBrowserMatch \"Microsoft Data Access Internet Publishing Provider\" redirect-carefully\nBrowserMatch \"MS FrontPage\" redirect-carefully\nBrowserMatch \"^WebDrive\" redirect-carefully\nBrowserMatch \"^WebDAVFS/1.[01234]\" redirect-carefully\nBrowserMatch \"^gnome-vfs/1.0\" redirect-carefully\nBrowserMatch \"^XML Spy\" redirect-carefully\nBrowserMatch \"^Dreamweaver-WebDAV-SCM1\" redirect-carefully\nBrowserMatch \" Konqueror/4\" redirect-carefully"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "htpasswd"
    },
    "data": null
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "webdav",
      "labels": {
        "helm.sh/chart": "webdav-0.0.1",
        "app.kubernetes.io/name": "webdav",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "http",
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "webdav",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "webdav",
      "labels": {
        "helm.sh/chart": "webdav-0.0.1",
        "app.kubernetes.io/name": "webdav",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "webdav",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "f9ee1ee82d26d74e92c373e54b6631eb3bbe8330ddfd9fe81078e723d1321769"
          },
          "labels": {
            "app.kubernetes.io/name": "webdav",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 33
          },
          "containers": [
            {
              "name": "webdav",
              "securityContext": {
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "privileged": true,
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "image": "httpd:2.4",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c"
              ],
              "args": [
                "mkdir /usr/local/apache2/{webdav,var}; touch /usr/local/apache2/var/DavLock; chown -R www-data:www-data /usr/local/apache2/{webdav,var}; su www-data -s /bin/bash -c ' for path in /usr/local/apache2/htpasswd.d/*; do dir=$(basename $path); if [[ \"$dir\" != \"-\" ]]; then mkdir -p /usr/local/apache2/webdav/$dir; fi; done '; httpd-foreground"
              ],
              "volumeMounts": [
                {
                  "name": "httpd-conf",
                  "mountPath": "/usr/local/apache2/conf/httpd.conf",
                  "subPath": "httpd.conf"
                },
                {
                  "name": "htpasswd",
                  "mountPath": "/usr/local/apache2/htpasswd.d"
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80,
                  "protocol": "TCP"
                }
              ],
              "resources": {}
            }
          ],
          "volumes": [
            {
              "name": "httpd-conf",
              "configMap": {
                "name": "httpd-conf",
                "defaultMode": 420
              }
            },
            {
              "name": "htpasswd",
              "configMap": {
                "name": "htpasswd",
                "defaultMode": 420
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "webdav",
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "nginx.ingress.kubernetes.io/proxy-body-size": "1000m",
        "nginx.ingress.kubernetes.io/proxy-connect-timeout": "600",
        "nginx.ingress.kubernetes.io/proxy-next-upstream-timeout": "600",
        "nginx.ingress.kubernetes.io/proxy-read-timeout": "600",
        "nginx.ingress.kubernetes.io/proxy-send-timeout": "600"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "my-domain.com",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "webdav",
                  "servicePort": 80
                }
              }
            ]
          }
        }
      ],
      "tls": [
        {
          "hosts": [
            "my-domain.com"
          ],
          "secretName": "webdav-tls-secret"
        }
      ]
    }
  }
]