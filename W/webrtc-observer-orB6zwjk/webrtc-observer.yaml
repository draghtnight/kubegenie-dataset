apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-node-red
  labels:
    helm.sh/chart: node-red-0.2.5
    app.kubernetes.io/name: node-red
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.0.6-12
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-webrtc-observer
  labels:
    helm.sh/chart: webrtc-observer-3.0.4
    app.kubernetes.io/name: webrtc-observer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0-beta
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-hazelcast-config
data:
  hazelcast-config.yaml: |-
    hazelcast:
        cluster-name: hazelcast-cluster
        network:
          join:
            kubernetes:
              enabled: true
              namespace: default
              service-name: release-name-webrtc-observer
            multicast:
              enabled: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-observer-config
data:
  observer-config.yaml: |-
    observer:
    obfuscations:
        enabled: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-webrtc-observer-role
  labels:
    helm.sh/chart: webrtc-observer-3.0.4
    app.kubernetes.io/name: webrtc-observer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0-beta
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
      - pods
      - nodes
      - services
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-webrtc-observer-role-binding
  labels:
    helm.sh/chart: webrtc-observer-3.0.4
    app.kubernetes.io/name: webrtc-observer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0-beta
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-webrtc-observer-role
subjects:
  - kind: ServiceAccount
    name: release-name-webrtc-observer
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-node-red
  labels:
    helm.sh/chart: node-red-0.2.5
    app.kubernetes.io/name: node-red
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.0.6-12
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 1880
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: node-red
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-webrtc-observer
  labels:
    helm.sh/chart: webrtc-observer-3.0.4
    app.kubernetes.io/name: webrtc-observer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0-beta
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: obs-svc-port
      port: 27080
      targetPort: 7080
      protocol: TCP
    - name: hazelcast
      port: 5701
      targetPort: hazelcast
  selector:
    app.kubernetes.io/name: webrtc-observer
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-node-red
  labels:
    helm.sh/chart: node-red-0.2.5
    app.kubernetes.io/name: node-red
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.0.6-12
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: node-red
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-red
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-node-red
      securityContext: {}
      containers:
        - name: node-red
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: docker.io/nodered/node-red:2.0.6-12
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 1880
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-webrtc-observer
  labels:
    helm.sh/chart: webrtc-observer-3.0.4
    app.kubernetes.io/name: webrtc-observer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0-beta
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: release-name-webrtc-observer
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webrtc-observer
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        prometheus.io/path: /prometheus
        prometheus.io/port: "7081"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: webrtc-observer
        app.kubernetes.io/instance: release-name
    spec:
      terminationGracePeriodSeconds: 90
      volumes:
        - name: observer-config-volume
          configMap:
            name: release-name-observer-config
        - name: hazelcast-config-volume
          configMap:
            name: release-name-hazelcast-config
      serviceAccountName: release-name-webrtc-observer
      securityContext: {}
      containers:
        - name: observer
          volumeMounts:
            - name: observer-config-volume
              mountPath: /etc/observer-config
            - name: hazelcast-config-volume
              mountPath: /etc/hazelcast-config
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: observertc/observer:latest
          imagePullPolicy: Always
          ports:
            - name: hazelcast
              containerPort: 5701
            - name: obs-pod-port
              containerPort: 7080
              protocol: TCP
          env:
            - name: MICRONAUT_CONFIG_FILES
              value: /etc/observer-config/observer-config.yaml
            - name: HAZELCAST_CONFIG_FILE
              value: /etc/hazelcast-config/hazelcast-config.yaml
            - name: JAVA_OPTS
              value: -Dhazelcast.shutdownhook.policy=GRACEFUL -Dhazelcast.cluster.version.auto.upgrade.enabled=true --add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 7081
            initialDelaySeconds: 5
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 7081
            initialDelaySeconds: 5
            timeoutSeconds: 3
            failureThreshold: 10
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-node-red-test-connection
  labels:
    helm.sh/chart: node-red-0.2.5
    app.kubernetes.io/name: node-red
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.0.6-12
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-node-red:1880
  restartPolicy: Never
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-webrtc-observer-test-connection
  labels:
    helm.sh/chart: webrtc-observer-3.0.4
    app.kubernetes.io/name: webrtc-observer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.0.0-beta
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-webrtc-observer:27080
  restartPolicy: Never
