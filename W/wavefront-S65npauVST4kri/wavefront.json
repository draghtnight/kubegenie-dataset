[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-wavefront-collector",
      "namespace": "S65npauVST4kri",
      "labels": {
        "app.kubernetes.io/name": "wavefront",
        "helm.sh/chart": "wavefront-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "collector"
      }
    },
    "automountServiceAccountToken": true
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-wavefront",
      "namespace": "S65npauVST4kri",
      "labels": {
        "app.kubernetes.io/name": "wavefront",
        "helm.sh/chart": "wavefront-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "collector"
      }
    },
    "type": "Opaque",
    "data": {
      "api-token": "WU9VUl9BUElfVE9LRU4="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-wavefront-collector-config",
      "namespace": "S65npauVST4kri",
      "labels": {
        "app.kubernetes.io/name": "wavefront",
        "helm.sh/chart": "wavefront-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "collector"
      }
    },
    "data": {
      "config.yaml": "clusterName: KUBERNETES_CLUSTER_NAME\nenableDiscovery: true\nenableEvents: false\ndefaultCollectionInterval: 60s\nflushInterval: 10s\nsinkExportDataTimeout: 20s\n\nsinks:\n  - proxyAddress: release-name-wavefront-proxy:2878\n    filters:\n      metricDenyList:\n      - kubernetes.sys_container.*\n      - kubernetes.collector.runtime.*\n      - kubernetes.*.network.rx_rate\n      - kubernetes.*.network.rx_errors_rate\n      - kubernetes.*.network.tx_rate\n      - kubernetes.*.network.tx_errors_rate\n      - kubernetes.*.memory.page_faults\n      - kubernetes.*.memory.page_faults_rate\n      - kubernetes.*.memory.major_page_faults\n      - kubernetes.*.memory.major_page_faults_rate\n      - kubernetes.*.filesystem.inodes\n      - kubernetes.*.filesystem.inodes_free\n      - kubernetes.*.ephemeral_storage.request\n      - kubernetes.*.ephemeral_storage.limit\n      tagExclude:\n      - label?controller?revision*\n      - label?pod?template*\n      - annotation_kubectl_kubernetes_io_last_applied_configuration\n\nsources:\n  kubernetes_source:\n    url: https://kubernetes.default.svc\n    kubeletPort: 10250\n    kubeletHttps: true\n    useServiceAccount: true\n    insecure: true\n    prefix: kubernetes.\n    filters:\n      metricBlacklist:\n        - 'kubernetes.sys_container.*'\n        - 'kubernetes.node.ephemeral_storage.*'\n\n  internal_stats_source:\n    prefix: kubernetes.\n  kubernetes_state_source:\n    prefix: kubernetes.\n\ndiscovery:\n  enable_runtime_plugins: true\n\n  plugins:\n    # auto-discover kube DNS\n    - name: kube-dns-discovery\n      type: prometheus\n      selectors:\n        images:\n          - '*kube-dns/sidecar*'\n        labels:\n          k8s-app:\n            - kube-dns\n      port: 10054\n      path: /metrics\n      scheme: http\n      prefix: kube.dns.\n      filters:\n        metricWhitelist:\n          - 'kube.dns.http.request.duration.microseconds'\n          - 'kube.dns.http.request.size.bytes'\n          - 'kube.dns.http.requests.total.counter'\n          - 'kube.dns.http.response.size.bytes'\n          - 'kube.dns.kubedns.dnsmasq.*'\n          - 'kube.dns.process.*'\n\n    # auto-discover coredns\n    - name: coredns-discovery\n      type: prometheus\n      selectors:\n        images:\n          - '*coredns:*'\n        labels:\n          k8s-app:\n            - kube-dns\n      port: 9153\n      path: /metrics\n      scheme: http\n      prefix: kube.coredns.\n      filters:\n        metricWhitelist:\n          - 'kube.coredns.coredns.cache.*'\n          - 'kube.coredns.coredns.dns.request.count.total.counter'\n          - 'kube.coredns.coredns.dns.request.duration.seconds'\n          - 'kube.coredns.coredns.dns.request.size.bytes'\n          - 'kube.coredns.coredns.dns.request.type.count.total.counter'\n          - 'kube.coredns.coredns.dns.response.rcode.count.total.counter'\n          - 'kube.coredns.coredns.dns.response.size.bytes'\n          - 'kube.coredns.process.*'\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-wavefront-collector",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "wavefront",
        "helm.sh/chart": "wavefront-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "collector",
        "kubernetes.io/bootstrapping": "rbac-defaults"
      },
      "annotations": {
        "rbac.authorization.kubernetes.io/autoupdate": "true"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events",
          "namespaces",
          "nodes",
          "nodes/proxy",
          "nodes/stats",
          "pods",
          "replicationcontrollers",
          "secrets",
          "services"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "get",
          "update",
          "create",
          "list",
          "watch"
        ]
      },
      {
        "nonResourceURLs": [
          "/metrics"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "daemonsets",
          "deployments",
          "statefulsets",
          "replicasets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "jobs",
          "cronjobs"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "autoscaling"
        ],
        "resources": [
          "horizontalpodautoscalers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-wavefront-collector",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "wavefront",
        "helm.sh/chart": "wavefront-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "collector"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-wavefront-collector"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-wavefront-collector",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-wavefront-proxy",
      "namespace": "S65npauVST4kri",
      "labels": {
        "app.kubernetes.io/name": "wavefront",
        "helm.sh/chart": "wavefront-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "proxy"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "wavefront",
          "port": 2878,
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "wavefront",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "proxy"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "release-name-wavefront-collector",
      "namespace": "S65npauVST4kri",
      "labels": {
        "app.kubernetes.io/name": "wavefront",
        "helm.sh/chart": "wavefront-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "collector"
      }
    },
    "spec": {
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "wavefront",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "collector"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "wavefront",
            "helm.sh/chart": "wavefront-4.0.2",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "collector"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-wavefront-collector",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "wavefront",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "collector"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "tolerations": [
            {
              "effect": "NoSchedule",
              "key": "node.alpha.kubernetes.io/role",
              "operator": "Exists"
            },
            {
              "effect": "NoSchedule",
              "key": "node-role.kubernetes.io/master",
              "operator": "Exists"
            }
          ],
          "securityContext": {
            "fsGroup": 1001
          },
          "containers": [
            {
              "name": "wavefront-collector",
              "image": "docker.io/bitnami/wavefront-kubernetes-collector:1.11.0-scratch-r2",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "runAsUser": 10651,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "command": [
                "/wavefront-collector"
              ],
              "args": [
                "--daemon=true",
                "--config-file=/etc/collector/config.yaml"
              ],
              "env": [
                {
                  "name": "HOST_PROC",
                  "value": "/host/proc"
                },
                {
                  "name": "POD_NODE_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "spec.nodeName"
                    }
                  }
                },
                {
                  "name": "POD_NAMESPACE_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "containerPort": 8088,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "procfs",
                  "mountPath": "/host/proc",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "mountPath": "/etc/collector/",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "procfs",
              "hostPath": {
                "path": "/proc"
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-wavefront-collector-config"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-wavefront-proxy",
      "namespace": "S65npauVST4kri",
      "labels": {
        "app.kubernetes.io/name": "wavefront",
        "helm.sh/chart": "wavefront-4.0.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "proxy"
      }
    },
    "spec": {
      "strategy": {
        "type": "RollingUpdate"
      },
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "wavefront",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "proxy"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "wavefront",
            "helm.sh/chart": "wavefront-4.0.2",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "proxy"
          }
        },
        "spec": {
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "wavefront",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "proxy"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "containers": [
            {
              "name": "wavefront-proxy",
              "image": "docker.io/bitnami/wavefront-proxy:11.1.0-debian-11-r2",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "runAsUser": 10638,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "env": [
                {
                  "name": "WAVEFRONT_URL",
                  "value": "https://YOUR_CLUSTER.wavefront.com/api"
                },
                {
                  "name": "WAVEFRONT_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-wavefront",
                      "key": "api-token"
                    }
                  }
                },
                {
                  "name": "WAVEFRONT_PROXY_ARGS",
                  "value": null
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "containerPort": 2878,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "livenessProbe": {
                "tcpSocket": {
                  "port": 2878
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 20,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 2878
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 20,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": null
            }
          ],
          "volumes": null
        }
      }
    }
  }
]