apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-whoami
  labels:
    helm.sh/chart: whoami-2.5.5
    app.kubernetes.io/name: whoami
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.5.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-whoami
  labels:
    helm.sh/chart: whoami-2.5.5
    app.kubernetes.io/name: whoami
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.5.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: whoami
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-whoami
  labels:
    helm.sh/chart: whoami-2.5.5
    app.kubernetes.io/name: whoami
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.5.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: whoami
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: whoami
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-whoami
      securityContext: {}
      containers:
        - name: whoami
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: containous/whoami:v1.5.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-whoami-tests
  labels:
    helm.sh/chart: whoami-2.5.5
    app.kubernetes.io/name: whoami
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.5.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: tests
  annotations:
    helm.sh/hook: test
data:
  test_all.py: |
    import requests


    def test_service_connection():
        url = "http://release-name-whoami:80/"

        response = requests.get(url)

        assert response.status_code == 200
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-whoami-tests
  labels:
    helm.sh/chart: whoami-2.5.5
    app.kubernetes.io/name: whoami
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.5.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: tests
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: tests
      image: ghcr.io/cowboysysop/pytest:1.0.0
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: tests
          mountPath: /tests
          readOnly: true
      workingDir: /tests
  restartPolicy: Never
  volumes:
    - name: tests
      configMap:
        name: release-name-whoami-tests
