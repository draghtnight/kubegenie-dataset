apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: release-name-wavefront
    helm.sh/chart: wavefront-1.11.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io.instance: release-name
    app.kubernetes.io/component: collector
  name: release-name-wavefront-collector
  namespace: uAhOZ9Sq
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-collector
  namespace: uAhOZ9Sq
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: release-name-wavefront
    helm.sh/chart: wavefront-1.11.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io.instance: release-name
    app.kubernetes.io/component: collector
  name: release-name-wavefront
type: Opaque
data:
  api-token: WU9VUl9BUElfVE9LRU4=
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: release-name-wavefront
    helm.sh/chart: wavefront-1.11.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io.instance: release-name
    app.kubernetes.io/component: collector
  name: release-name-wavefront-collector-config
data:
  config.yaml: "clusterName: KUBERNETES_CLUSTER_NAME\nenableDiscovery: true\nenableEvents: false\ndefaultCollectionInterval: 60s\nflushInterval: 10s\nsinkExportDataTimeout: 20s\n\nsinks:\n- proxyAddress: release-name-wavefront-proxy:2878\n  filters:\n    metricDenyList:\n    - kubernetes.sys_container.*\n    - kubernetes.collector.runtime.*\n    - kubernetes.*.network.rx_rate\n    - kubernetes.*.network.rx_errors_rate\n    - kubernetes.*.network.tx_rate\n    - kubernetes.*.network.tx_errors_rate\n    - kubernetes.*.memory.page_faults\n    - kubernetes.*.memory.page_faults_rate\n    - kubernetes.*.memory.major_page_faults\n    - kubernetes.*.memory.major_page_faults_rate\n    - kubernetes.*.filesystem.inodes\n    - kubernetes.*.filesystem.inodes_free\n    - kubernetes.*.ephemeral_storage.request\n    - kubernetes.*.ephemeral_storage.limit\n    tagExclude:\n    - label?controller?revision*\n    - label?pod?template*\n    - annotation_kubectl_kubernetes_io_last_applied_configuration\n\nsources:\n  kubernetes_source:\n    url: https://kubernetes.default.svc\n    kubeletPort: 10250\n    kubeletHttps: true\n    useServiceAccount: true\n    insecure: true\n    prefix: kubernetes.\n    filters:\n      metricBlacklist:\n      - 'kubernetes.sys_container.*'\n      - 'kubernetes.node.ephemeral_storage.*'\n\n  internal_stats_source:\n    prefix: kubernetes.\n  kubernetes_state_source:\n    prefix: kubernetes.\n  \n  kubernetes_control_plane_source:\n    collection:\n      interval: 120s\n  \n\ndiscovery:\n  enable_runtime_plugins: true\n  \n\n  plugins:\n  # auto-discover kube DNS\n  - name: kube-dns-discovery\n    type: prometheus\n    selectors:\n      images:\n      - '*kube-dns/sidecar*'\n      labels:\n        k8s-app:\n        - kube-dns\n    port: 10054\n    path: /metrics\n    scheme: http\n    prefix: kube.dns.\n    filters:\n      metricWhitelist:\n      - 'kube.dns.http.request.duration.microseconds'\n      - 'kube.dns.http.request.size.bytes'\n      - 'kube.dns.http.requests.total.counter'\n      - 'kube.dns.http.response.size.bytes'\n      - 'kube.dns.kubedns.dnsmasq.*'\n      - 'kube.dns.process.*'\n\n  # auto-discover coredns\n  - name: coredns-discovery\n    type: prometheus\n    selectors:\n      images:\n      - '*coredns:*'\n      labels:\n        k8s-app:\n        - kube-dns\n    port: 9153\n    path: /metrics\n    scheme: http\n    prefix: kube.coredns.\n    filters:\n      metricWhitelist:\n      - 'kube.coredns.coredns.cache.*'\n      - 'kube.coredns.coredns.dns.request.count.total.counter'\n      - 'kube.coredns.coredns.dns.request.duration.seconds'\n      - 'kube.coredns.coredns.dns.request.size.bytes'\n      - 'kube.coredns.coredns.dns.request.type.count.total.counter'\n      - 'kube.coredns.coredns.dns.response.rcode.count.total.counter'\n      - 'kube.coredns.coredns.dns.response.size.bytes'\n      - 'kube.coredns.process.*'\n"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: release-name-wavefront
    helm.sh/chart: wavefront-1.11.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io.instance: release-name
    app.kubernetes.io/component: collector
    kubernetes.io/bootstrapping: rbac-defaults
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: release-name-wavefront-collector
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - namespaces
      - nodes
      - nodes/proxy
      - nodes/stats
      - nodes/metrics
      - pods
      - replicationcontrollers
      - secrets
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - update
      - create
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - statefulsets
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: release-name-wavefront
    helm.sh/chart: wavefront-1.11.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io.instance: release-name
    app.kubernetes.io/component: collector
  name: release-name-wavefront-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-wavefront-collector
subjects:
  - kind: ServiceAccount
    name: release-name-wavefront-collector
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: test-collector
  namespace: uAhOZ9Sq
rules:
  - apiGroups:
      - apps
    resources:
      - daemonsets
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: test-collector
  namespace: uAhOZ9Sq
subjects:
  - kind: ServiceAccount
    name: test-collector
    namespace: default
roleRef:
  kind: Role
  name: test-collector
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: release-name-wavefront
    helm.sh/chart: wavefront-1.11.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io.instance: release-name
    app.kubernetes.io/component: proxy
  name: release-name-wavefront-proxy
spec:
  ports:
    - name: wavefront
      port: 2878
      protocol: TCP
  selector:
    app.kubernetes.io/name: release-name-wavefront
    app.kubernetes.io/component: proxy
  type: ClusterIP
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: release-name-wavefront
    helm.sh/chart: wavefront-1.11.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io.instance: release-name
    app.kubernetes.io/component: collector
  name: release-name-wavefront-collector
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: release-name-wavefront
      app.kubernetes.io/component: collector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: release-name-wavefront
        app.kubernetes.io/component: collector
      annotations:
        installation-method: helm
    spec:
      tolerations:
        - effect: NoSchedule
          key: node.alpha.kubernetes.io/role
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      serviceAccountName: release-name-wavefront-collector
      containers:
        - name: wavefront-collector
          image: projects.registry.vmware.com/tanzu_observability/kubernetes-collector:1.11.0
          imagePullPolicy: IfNotPresent
          command:
            - /wavefront-collector
            - --daemon=true
            - --config-file=/etc/collector/config.yaml
          env:
            - name: HOST_PROC
              value: /host/proc
            - name: POD_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_NAMESPACE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INSTALLATION_METHOD
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['installation-method']
          ports:
            - containerPort: 8088
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 10Mi
          volumeMounts:
            - name: procfs
              mountPath: /host/proc
              readOnly: true
            - name: config
              mountPath: /etc/collector/
              readOnly: true
      volumes:
        - name: procfs
          hostPath:
            path: /proc
        - name: config
          configMap:
            name: release-name-wavefront-collector-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: release-name-wavefront
    helm.sh/chart: wavefront-1.11.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io.instance: release-name
    app.kubernetes.io/component: proxy
  name: release-name-wavefront-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: release-name-wavefront
      app.kubernetes.io/component: proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: release-name-wavefront
        app.kubernetes.io/component: proxy
    spec:
      containers:
        - name: wavefront-proxy
          image: projects.registry.vmware.com/tanzu_observability/proxy:11.0
          imagePullPolicy: IfNotPresent
          env:
            - name: WAVEFRONT_URL
              value: https://YOUR_CLUSTER.wavefront.com/api
            - name: WAVEFRONT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: release-name-wavefront
                  key: api-token
            - name: WAVEFRONT_PROXY_ARGS
              value: null
          ports:
            - containerPort: 2878
              protocol: TCP
          resources:
            limits:
              cpu: 1000m
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 1Gi
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts: null
      volumes: null
---
apiVersion: v1
kind: Pod
metadata:
  name: test-collector
  namespace: uAhOZ9Sq
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded,hook-failed
spec:
  serviceAccountName: test-collector
  containers:
    - name: test-collector
      image: bitnami/kubectl:latest
      imagePullPolicy: IfNotPresent
      command:
        - /bin/bash
        - -ec
        - |
          kubectl --namespace default get daemonsets --selector="app.kubernetes.io/component=collector"
  restartPolicy: Never
