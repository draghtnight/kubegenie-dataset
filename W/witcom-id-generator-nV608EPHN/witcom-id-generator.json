[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-witcom-id-generator",
      "labels": {
        "helm.sh/chart": "witcom-id-generator-0.4.2",
        "app.kubernetes.io/name": "witcom-id-generator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "generator",
        "app.kubernetes.io/version": "1.0.7",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-redis",
      "namespace": "nV608EPHN",
      "labels": {
        "app": "redis",
        "chart": "redis-12.1.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "redis-password": "SE5xZ3R0aFZkZA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-scripts",
      "namespace": "nV608EPHN",
      "labels": {
        "app": "redis",
        "chart": "redis-12.1.1",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "start-master.sh": "#!/bin/bash\nuseradd redis\nchown -R redis /data\nif [[ -n $REDIS_PASSWORD_FILE ]]; then\n  password_aux=`cat ${REDIS_PASSWORD_FILE}`\n  export REDIS_PASSWORD=$password_aux\nfi\nif [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/master.conf\")\nexec /run.sh \"${ARGS[@]}\"\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis",
      "namespace": "nV608EPHN",
      "labels": {
        "app": "redis",
        "chart": "redis-12.1.1",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "redis.conf": "# User-supplied configuration:\n# Enable AOF https://redis.io/topics/persistence#append-only-file\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"",
      "master.conf": "dir /data\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"",
      "replica.conf": "dir /data\nslave-read-only yes\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-health",
      "namespace": "nV608EPHN",
      "labels": {
        "app": "redis",
        "chart": "redis-12.1.1",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "ping_readiness_local.sh": "#!/bin/bash\nexport REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_local.sh": "#!/bin/bash\nexport REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_master.sh": "#!/bin/bash\nexport REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_master.sh": "#!/bin/bash\nexport REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-headless",
      "namespace": "nV608EPHN",
      "labels": {
        "app": "redis",
        "chart": "redis-12.1.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "redis",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "nV608EPHN",
      "labels": {
        "app": "redis",
        "chart": "redis-12.1.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "redis",
        "release": "release-name",
        "role": "master"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-witcom-id-generator",
      "labels": {
        "helm.sh/chart": "witcom-id-generator-0.4.2",
        "app.kubernetes.io/name": "witcom-id-generator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "generator",
        "app.kubernetes.io/version": "1.0.7",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 3000,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "witcom-id-generator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "generator"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-witcom-id-generator-webapp",
      "labels": {
        "helm.sh/chart": "witcom-id-generator-0.4.2",
        "app.kubernetes.io/name": "witcom-id-generator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "webapp",
        "app.kubernetes.io/version": "1.0.7",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8080,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "witcom-id-generator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "webapp"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-witcom-id-generator",
      "labels": {
        "helm.sh/chart": "witcom-id-generator-0.4.2",
        "app.kubernetes.io/name": "witcom-id-generator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "generator",
        "app.kubernetes.io/version": "1.0.7",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "witcom-id-generator",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "generator"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "witcom-id-generator",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "generator"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-witcom-id-generator",
          "securityContext": {},
          "containers": [
            {
              "name": "generator",
              "securityContext": {
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                },
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "runAsUser": 11085,
                "allowPrivilegeEscalation": false
              },
              "image": "pub-registry.dev.witcom.services/witcom/id-generator:1.2.3",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "KEYCLOAK_SECRET",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "id-generator-keycloak",
                      "key": "client-secret"
                    }
                  }
                },
                {
                  "name": "KEYCLOAK_SERVER_URL",
                  "value": null
                },
                {
                  "name": "KEYCLOAK_REALM",
                  "value": null
                },
                {
                  "name": "KEYCLOAK_RESOURCE_ID",
                  "value": "id-generator-service"
                },
                {
                  "name": "REDIS_HOST",
                  "value": "release-name-redis-master"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-redis",
                      "key": "redis-password"
                    }
                  }
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "http",
                  "containerPort": 3000,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/-/live",
                  "port": "http"
                },
                "initialDelaySeconds": 60,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/-/ready",
                  "port": "http"
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 1
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": null
            }
          ],
          "volumes": null
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-witcom-id-generator-webapp",
      "labels": {
        "helm.sh/chart": "witcom-id-generator-0.4.2",
        "app.kubernetes.io/name": "witcom-id-generator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "webapp",
        "app.kubernetes.io/version": "1.0.7",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "witcom-id-generator",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "webapp"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "witcom-id-generator",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "webapp"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-witcom-id-generator",
          "securityContext": {},
          "initContainers": [
            {
              "name": "init-config",
              "image": "pub-registry.dev.witcom.services/witcom/env2json:latest",
              "env": [
                {
                  "name": "OUTPUT",
                  "value": "/config/appconfig.json"
                },
                {
                  "name": "APP_KEYCLOAK_URL",
                  "value": null
                },
                {
                  "name": "APP_KEYCLOAK_REALM",
                  "value": null
                },
                {
                  "name": "APP_KEYCLOAK_CLIENT_ID",
                  "value": "id-generator-webapp"
                },
                {
                  "name": "APP_API_URL",
                  "value": null
                }
              ],
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/config"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "generator-webapp",
              "securityContext": {
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                },
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "runAsUser": 10108,
                "allowPrivilegeEscalation": false
              },
              "image": "pub-registry.dev.witcom.services/witcom/id-generator-webapp:1.0.7",
              "imagePullPolicy": "IfNotPresent",
              "env": null,
              "envFrom": null,
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/opt/app-root/src/assets/configdata",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "nV608EPHN",
      "labels": {
        "app": "redis",
        "chart": "redis-12.1.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "redis",
          "release": "release-name",
          "role": "master"
        }
      },
      "serviceName": "release-name-redis-headless",
      "template": {
        "metadata": {
          "labels": {
            "app": "redis",
            "chart": "redis-12.1.1",
            "release": "release-name",
            "role": "master"
          },
          "annotations": {
            "checksum/health": "b3a7a7dcf7f372dae4d566296377075cc2aeeb627a0eb6bf4c4f2f3e027ec3d6",
            "checksum/configmap": "b14ae5775db2ae137326031f65dee857226c17207e8c18131d5b30b8329756ff",
            "checksum/secret": "f6ef58518236ff9671ae654240734762b1db7ceeb70b367d0bb042dcfe558bbd"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "default",
          "containers": [
            {
              "name": "redis",
              "image": "docker.io/bitnami/redis:6.0.9-debian-10-r13",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 10181,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "command": [
                "/bin/bash",
                "-c",
                "/opt/bitnami/scripts/start-scripts/start-master.sh"
              ],
              "env": [
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "master"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-redis",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_TLS_ENABLED",
                  "value": "no"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 6,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 2,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 1"
                  ]
                }
              },
              "resources": null,
              "volumeMounts": [
                {
                  "name": "start-scripts",
                  "mountPath": "/opt/bitnami/scripts/start-scripts"
                },
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc/"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "start-scripts",
              "configMap": {
                "name": "release-name-redis-scripts",
                "defaultMode": 493
              }
            },
            {
              "name": "health",
              "configMap": {
                "name": "release-name-redis-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-redis"
              }
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "redis-data",
            "labels": {
              "app": "redis",
              "release": "release-name",
              "heritage": "Helm",
              "component": "master"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            },
            "selector": null
          }
        }
      ],
      "updateStrategy": {
        "type": "RollingUpdate"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-witcom-id-generator-test-connection",
      "labels": {
        "helm.sh/chart": "witcom-id-generator-0.4.2",
        "app.kubernetes.io/name": "witcom-id-generator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "generator",
        "app.kubernetes.io/version": "1.0.7",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-witcom-id-generator:3000"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]