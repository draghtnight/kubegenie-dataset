apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-web-config
  labels:
    helm.sh/chart: web-0.7.0
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
data:
  default.conf: |-
    server {
        listen       80;
        listen       [::]:80;
        server_name  localhost;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-web
  labels:
    helm.sh/chart: web-0.7.0
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: main
      protocol: TCP
      name: main
  selector:
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-web
  labels:
    helm.sh/chart: web-0.7.0
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: web
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: web
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext: {}
      containers:
        - name: web
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: nginx:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: main
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: main
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: main
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d
              readOnly: true
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
      volumes:
        - name: config
          configMap:
            name: release-name-web-config
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-web-test-connection
  labels:
    helm.sh/chart: web-0.7.0
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-web:80
  restartPolicy: Never
