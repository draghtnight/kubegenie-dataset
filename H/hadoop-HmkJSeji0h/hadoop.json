[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "release-name-hadoop-hdfs-dn",
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "hdfs-dn"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "hadoop",
          "release": "release-name",
          "component": "hdfs-dn"
        }
      },
      "minAvailable": 1
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "release-name-hadoop-hdfs-nn",
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "hdfs-nn"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "hadoop",
          "release": "release-name",
          "component": "hdfs-nn"
        }
      },
      "minAvailable": 1
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "release-name-hadoop-yarn-nm",
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "yarn-nm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "hadoop",
          "release": "release-name",
          "component": "yarn-nm"
        }
      },
      "minAvailable": 1
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "release-name-hadoop-yarn-rm",
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "yarn-rm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "hadoop",
          "release": "release-name",
          "component": "yarn-rm"
        }
      },
      "minAvailable": 1
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-hadoop",
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name"
      }
    },
    "data": {
      "bootstrap.sh": "#!/bin/bash\n\n: ${HADOOP_PREFIX:=/usr/local/hadoop}\n\n. $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\n\n# Directory to find config artifacts\nCONFIG_DIR=\"/tmp/hadoop-config\"\n\n# Copy config files from volume mount\n\nfor f in slaves core-site.xml hdfs-site.xml mapred-site.xml yarn-site.xml; do\n  if [[ -e ${CONFIG_DIR}/$f ]]; then\n    cp ${CONFIG_DIR}/$f $HADOOP_PREFIX/etc/hadoop/$f\n  else\n    echo \"ERROR: Could not find $f in $CONFIG_DIR\"\n    exit 1\n  fi\ndone\n\n# installing libraries if any - (resource urls added comma separated to the ACP system variable)\ncd $HADOOP_PREFIX/share/hadoop/common ; for cp in ${ACP//,/ }; do  echo == $cp; curl -LO $cp ; done; cd -\n\nif [[ \"${HOSTNAME}\" =~ \"hdfs-nn\" ]]; then\n  mkdir -p /root/hdfs/namenode\n  $HADOOP_PREFIX/bin/hdfs namenode -format -force -nonInteractive\n  $HADOOP_PREFIX/sbin/hadoop-daemon.sh start namenode\nfi\n\nif [[ \"${HOSTNAME}\" =~ \"hdfs-dn\" ]]; then\n  mkdir -p /root/hdfs/datanode\n\n  #  wait up to 30 seconds for namenode\n  (while [[ $count -lt 15 && -z `curl -sf http://release-name-hadoop-hdfs-nn:50070` ]]; do ((count=count+1)) ; echo \"Waiting for release-name-hadoop-hdfs-nn\" ; sleep 2; done && [[ $count -lt 15 ]])\n  [[ $? -ne 0 ]] && echo \"Timeout waiting for hdfs-nn, exiting.\" && exit 1\n\n  $HADOOP_PREFIX/sbin/hadoop-daemon.sh start datanode\nfi\n\nif [[ \"${HOSTNAME}\" =~ \"yarn-rm\" ]]; then\n  cp ${CONFIG_DIR}/start-yarn-rm.sh $HADOOP_PREFIX/sbin/\n  cd $HADOOP_PREFIX/sbin\n  chmod +x start-yarn-rm.sh\n  ./start-yarn-rm.sh\nfi\n\nif [[ \"${HOSTNAME}\" =~ \"yarn-nm\" ]]; then\n  sed -i '/<\\/configuration>/d' $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\n  cat >> $HADOOP_PREFIX/etc/hadoop/yarn-site.xml <<- EOM\n  <property>\n    <name>yarn.nodemanager.resource.memory-mb</name>\n    <value>${MY_MEM_LIMIT:-2048}</value>\n  </property>\n\n  <property>\n    <name>yarn.nodemanager.resource.cpu-vcores</name>\n    <value>${MY_CPU_LIMIT:-2}</value>\n  </property>\nEOM\n  echo '</configuration>' >> $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\n  cp ${CONFIG_DIR}/start-yarn-nm.sh $HADOOP_PREFIX/sbin/\n  cd $HADOOP_PREFIX/sbin\n  chmod +x start-yarn-nm.sh\n\n  #  wait up to 30 seconds for resourcemanager\n  (while [[ $count -lt 15 && -z `curl -sf http://release-name-hadoop-yarn-rm:8088/ws/v1/cluster/info` ]]; do ((count=count+1)) ; echo \"Waiting for release-name-hadoop-yarn-rm\" ; sleep 2; done && [[ $count -lt 15 ]])\n  [[ $? -ne 0 ]] && echo \"Timeout waiting for yarn-rm, exiting.\" && exit 1\n\n  ./start-yarn-nm.sh\nfi\n\nif [[ $1 == \"-d\" ]]; then\n  until find ${HADOOP_PREFIX}/logs -mmin -1 | egrep -q '.*'; echo \"`date`: Waiting for logs...\" ; do sleep 2 ; done\n  tail -F ${HADOOP_PREFIX}/logs/* &\n  while true; do sleep 1000; done\nfi\n\nif [[ $1 == \"-bash\" ]]; then\n  /bin/bash\nfi\n",
      "core-site.xml": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n<configuration>\n  <property>\n        <name>fs.defaultFS</name>\n        <value>hdfs://release-name-hadoop-hdfs-nn:9000/</value>\n        <description>NameNode URI</description>\n    </property>\n</configuration>\n",
      "hdfs-site.xml": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n<configuration>\n  <property>\n    <name>dfs.datanode.use.datanode.hostname</name>\n    <value>false</value>\n  </property>\n\n  <property>\n    <name>dfs.client.use.datanode.hostname</name>\n    <value>false</value>\n  </property>\n\n  <property>\n    <name>dfs.replication</name>\n      <value>3</value>\n  </property>\n\n  <property>\n    <name>dfs.datanode.data.dir</name>\n    <value>file:///root/hdfs/datanode</value>\n    <description>DataNode directory</description>\n  </property>\n\n  <property>\n    <name>dfs.namenode.name.dir</name>\n    <value>file:///root/hdfs/namenode</value>\n    <description>NameNode directory for namespace and transaction logs storage.</description>\n  </property>\n\n  <property>\n    <name>dfs.namenode.datanode.registration.ip-hostname-check</name>\n    <value>false</value>\n  </property>\n\n  <!-- Bind to all interfaces -->\n  <property>\n    <name>dfs.namenode.rpc-bind-host</name>\n    <value>0.0.0.0</value>\n  </property>\n  <property>\n    <name>dfs.namenode.servicerpc-bind-host</name>\n    <value>0.0.0.0</value>\n  </property>\n  <!-- /Bind to all interfaces -->\n\n</configuration>\n",
      "mapred-site.xml": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n\n<configuration>\n  <property>\n    <name>mapreduce.framework.name</name>\n    <value>yarn</value>\n  </property>\n  <property>\n    <name>mapreduce.jobhistory.address</name>\n    <value>release-name-hadoop-yarn-rm-0.release-name-hadoop-yarn-rm.default.svc.cluster.local:10020</value>\n  </property>\n  <property>\n    <name>mapreduce.jobhistory.webapp.address</name>\n    <value>release-name-hadoop-yarn-rm-0.release-name-hadoop-yarn-rm.default.svc.cluster.local:19888</value>\n  </property>\n</configuration>\n",
      "slaves": "localhost\n",
      "start-yarn-nm.sh": "#!/usr/bin/env bash\n\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Start all yarn daemons.  Run this on master node.\n\necho \"starting yarn daemons\"\n\nbin=`dirname \"${BASH_SOURCE-$0}\"`\nbin=`cd \"$bin\"; pwd`\n\nDEFAULT_LIBEXEC_DIR=\"$bin\"/../libexec\nHADOOP_LIBEXEC_DIR=${HADOOP_LIBEXEC_DIR:-$DEFAULT_LIBEXEC_DIR}\n. $HADOOP_LIBEXEC_DIR/yarn-config.sh\n\n# start resourceManager\n# \"$bin\"/yarn-daemon.sh --config $YARN_CONF_DIR  start resourcemanager\n# start nodeManager\n\"$bin\"/yarn-daemon.sh --config $YARN_CONF_DIR  start nodemanager\n# start proxyserver\n#\"$bin\"/yarn-daemon.sh --config $YARN_CONF_DIR  start proxyserver\n",
      "start-yarn-rm.sh": "#!/usr/bin/env bash\n\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Start all yarn daemons.  Run this on master node.\n\necho \"starting yarn daemons\"\n\nbin=`dirname \"${BASH_SOURCE-$0}\"`\nbin=`cd \"$bin\"; pwd`\n\nDEFAULT_LIBEXEC_DIR=\"$bin\"/../libexec\nHADOOP_LIBEXEC_DIR=${HADOOP_LIBEXEC_DIR:-$DEFAULT_LIBEXEC_DIR}\n. $HADOOP_LIBEXEC_DIR/yarn-config.sh\n\n# start resourceManager\n\"$bin\"/yarn-daemon.sh --config $YARN_CONF_DIR  start resourcemanager\n# start nodeManager\n# \"$bin\"/yarn-daemons.sh --config $YARN_CONF_DIR  start nodemanager\n# start proxyserver\n\"$bin\"/yarn-daemon.sh --config $YARN_CONF_DIR  start proxyserver\n",
      "yarn-site.xml": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n\n<configuration>\n  <property>\n    <name>yarn.resourcemanager.hostname</name>\n    <value>release-name-hadoop-yarn-rm</value>\n  </property>\n\n  <!-- Bind to all interfaces -->\n  <property>\n    <name>yarn.resourcemanager.bind-host</name>\n    <value>0.0.0.0</value>\n  </property>\n  <property>\n    <name>yarn.nodemanager.bind-host</name>\n    <value>0.0.0.0</value>\n  </property>\n  <property>\n    <name>yarn.timeline-service.bind-host</name>\n    <value>0.0.0.0</value>\n  </property>\n  <!-- /Bind to all interfaces -->\n\n  <property>\n    <name>yarn.nodemanager.vmem-check-enabled</name>\n    <value>false</value>\n  </property>\n\n  <property>\n    <name>yarn.nodemanager.aux-services</name>\n    <value>mapreduce_shuffle</value>\n  </property>\n\n  <property>\n    <name>yarn.nodemanager.aux-services.mapreduce_shuffle.class</name>\n    <value>org.apache.hadoop.mapred.ShuffleHandler</value>\n  </property>\n\n  <property>\n    <description>List of directories to store localized files in.</description>\n    <name>yarn.nodemanager.local-dirs</name>\n    <value>/var/lib/hadoop-yarn/cache/${user.name}/nm-local-dir</value>\n  </property>\n\n  <property>\n    <description>Where to store container logs.</description>\n    <name>yarn.nodemanager.log-dirs</name>\n    <value>/var/log/hadoop-yarn/containers</value>\n  </property>\n\n  <property>\n    <description>Where to aggregate logs to.</description>\n    <name>yarn.nodemanager.remote-app-log-dir</name>\n    <value>/var/log/hadoop-yarn/apps</value>\n  </property>\n\n  <property>\n    <name>yarn.application.classpath</name>\n    <value>\n      /usr/local/hadoop/etc/hadoop,\n      /usr/local/hadoop/share/hadoop/common/*,\n      /usr/local/hadoop/share/hadoop/common/lib/*,\n      /usr/local/hadoop/share/hadoop/hdfs/*,\n      /usr/local/hadoop/share/hadoop/hdfs/lib/*,\n      /usr/local/hadoop/share/hadoop/mapreduce/*,\n      /usr/local/hadoop/share/hadoop/mapreduce/lib/*,\n      /usr/local/hadoop/share/hadoop/yarn/*,\n      /usr/local/hadoop/share/hadoop/yarn/lib/*\n    </value>\n  </property>\n</configuration>\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-hadoop-hdfs-dn",
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "hdfs-dn"
      }
    },
    "spec": {
      "ports": [
        {
          "name": "dfs",
          "port": 9000,
          "protocol": "TCP"
        },
        {
          "name": "webhdfs",
          "port": 50075
        }
      ],
      "clusterIP": "None",
      "selector": {
        "app": "hadoop",
        "release": "release-name",
        "component": "hdfs-dn"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-hadoop-hdfs-nn",
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "hdfs-nn"
      }
    },
    "spec": {
      "ports": [
        {
          "name": "dfs",
          "port": 9000,
          "protocol": "TCP"
        },
        {
          "name": "webhdfs",
          "port": 50070
        }
      ],
      "clusterIP": "None",
      "selector": {
        "app": "hadoop",
        "release": "release-name",
        "component": "hdfs-nn"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-hadoop-yarn-nm",
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "yarn-nm"
      }
    },
    "spec": {
      "ports": [
        {
          "port": 8088,
          "name": "web"
        },
        {
          "port": 8082,
          "name": "web2"
        },
        {
          "port": 8042,
          "name": "api"
        }
      ],
      "clusterIP": "None",
      "selector": {
        "app": "hadoop",
        "release": "release-name",
        "component": "yarn-nm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-hadoop-yarn-rm",
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "yarn-rm"
      }
    },
    "spec": {
      "ports": [
        {
          "port": 8088,
          "name": "web"
        }
      ],
      "clusterIP": "None",
      "selector": {
        "app": "hadoop",
        "release": "release-name",
        "component": "yarn-rm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-hadoop-yarn-ui",
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "yarn-ui"
      }
    },
    "spec": {
      "ports": [
        {
          "port": 8088,
          "name": "web"
        }
      ],
      "selector": {
        "app": "hadoop",
        "component": "yarn-rm"
      }
    }
  },
  {
    "apiVersion": "apps/v1beta1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-hadoop-hdfs-dn",
      "annotations": {
        "checksum/config": "ac32b85ae192b095a003e75a4561c23e9c0d75531c68938571b09677c4af07b0"
      },
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "hdfs-dn"
      }
    },
    "spec": {
      "serviceName": "release-name-hadoop-hdfs-dn",
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "hadoop",
            "release": "release-name",
            "component": "hdfs-dn"
          }
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "weight": 5,
                  "podAffinityTerm": {
                    "topologyKey": "kubernetes.io/hostname",
                    "labelSelector": {
                      "matchLabels": {
                        "app": "hadoop",
                        "release": "release-name",
                        "component": "hdfs-dn"
                      }
                    }
                  }
                }
              ]
            }
          },
          "terminationGracePeriodSeconds": 0,
          "containers": [
            {
              "name": "hdfs-dn",
              "image": "danisla/hadoop:2.9.0",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "/tmp/hadoop-config/bootstrap.sh",
                "-d"
              ],
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "2048Mi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "256Mi"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 50075
                },
                "initialDelaySeconds": 5,
                "timeoutSeconds": 2
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 50075
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 2
              },
              "volumeMounts": [
                {
                  "name": "hadoop-config",
                  "mountPath": "/tmp/hadoop-config"
                },
                {
                  "name": "dfs",
                  "mountPath": "/root/hdfs/datanode"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "hadoop-config",
              "configMap": {
                "name": "release-name-hadoop"
              }
            },
            {
              "name": "dfs",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1beta1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-hadoop-hdfs-nn",
      "annotations": {
        "checksum/config": "ac32b85ae192b095a003e75a4561c23e9c0d75531c68938571b09677c4af07b0"
      },
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "hdfs-nn"
      }
    },
    "spec": {
      "serviceName": "release-name-hadoop-hdfs-nn",
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "hadoop",
            "release": "release-name",
            "component": "hdfs-nn"
          }
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "weight": 5,
                  "podAffinityTerm": {
                    "topologyKey": "kubernetes.io/hostname",
                    "labelSelector": {
                      "matchLabels": {
                        "app": "hadoop",
                        "release": "release-name",
                        "component": "hdfs-nn"
                      }
                    }
                  }
                }
              ]
            }
          },
          "terminationGracePeriodSeconds": 0,
          "containers": [
            {
              "name": "hdfs-nn",
              "image": "danisla/hadoop:2.9.0",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "/tmp/hadoop-config/bootstrap.sh",
                "-d"
              ],
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "2048Mi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "256Mi"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 50070
                },
                "initialDelaySeconds": 5,
                "timeoutSeconds": 2
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 50070
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 2
              },
              "volumeMounts": [
                {
                  "name": "hadoop-config",
                  "mountPath": "/tmp/hadoop-config"
                },
                {
                  "name": "dfs",
                  "mountPath": "/root/hdfs/namenode"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "hadoop-config",
              "configMap": {
                "name": "release-name-hadoop"
              }
            },
            {
              "name": "dfs",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1beta1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-hadoop-yarn-nm",
      "annotations": {
        "checksum/config": "ac32b85ae192b095a003e75a4561c23e9c0d75531c68938571b09677c4af07b0"
      },
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "yarn-nm"
      }
    },
    "spec": {
      "serviceName": "release-name-hadoop-yarn-nm",
      "replicas": 2,
      "template": {
        "metadata": {
          "labels": {
            "app": "hadoop",
            "release": "release-name",
            "component": "yarn-nm"
          }
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "weight": 5,
                  "podAffinityTerm": {
                    "topologyKey": "kubernetes.io/hostname",
                    "labelSelector": {
                      "matchLabels": {
                        "app": "hadoop",
                        "release": "release-name",
                        "component": "yarn-nm"
                      }
                    }
                  }
                }
              ]
            }
          },
          "terminationGracePeriodSeconds": 0,
          "containers": [
            {
              "name": "yarn-nm",
              "image": "danisla/hadoop:2.9.0",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "containerPort": 8088,
                  "name": "web"
                }
              ],
              "command": [
                "/bin/bash",
                "/tmp/hadoop-config/bootstrap.sh",
                "-d"
              ],
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "2048Mi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "2048Mi"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/node",
                  "port": 8042
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 2
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/node",
                  "port": 8042
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 2
              },
              "env": [
                {
                  "name": "MY_CPU_LIMIT",
                  "valueFrom": {
                    "resourceFieldRef": {
                      "containerName": "yarn-nm",
                      "resource": "limits.cpu",
                      "divisor": 1
                    }
                  }
                },
                {
                  "name": "MY_MEM_LIMIT",
                  "valueFrom": {
                    "resourceFieldRef": {
                      "containerName": "yarn-nm",
                      "resource": "limits.memory",
                      "divisor": "1M"
                    }
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "hadoop-config",
                  "mountPath": "/tmp/hadoop-config"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "hadoop-config",
              "configMap": {
                "name": "release-name-hadoop"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1beta1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-hadoop-yarn-rm",
      "annotations": {
        "checksum/config": "ac32b85ae192b095a003e75a4561c23e9c0d75531c68938571b09677c4af07b0"
      },
      "labels": {
        "app": "hadoop",
        "chart": "hadoop-1.1.0",
        "release": "release-name",
        "component": "yarn-rm"
      }
    },
    "spec": {
      "serviceName": "release-name-hadoop-yarn-rm",
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "hadoop",
            "release": "release-name",
            "component": "yarn-rm"
          }
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "weight": 5,
                  "podAffinityTerm": {
                    "topologyKey": "kubernetes.io/hostname",
                    "labelSelector": {
                      "matchLabels": {
                        "app": "hadoop",
                        "release": "release-name",
                        "component": "yarn-rm"
                      }
                    }
                  }
                }
              ]
            }
          },
          "terminationGracePeriodSeconds": 0,
          "containers": [
            {
              "name": "yarn-rm",
              "image": "danisla/hadoop:2.9.0",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "containerPort": 8088,
                  "name": "web"
                }
              ],
              "command": [
                "/bin/bash",
                "/tmp/hadoop-config/bootstrap.sh",
                "-d"
              ],
              "resources": {
                "limits": {
                  "cpu": "2000m",
                  "memory": "2048Mi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "256Mi"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/ws/v1/cluster/info",
                  "port": 8088
                },
                "initialDelaySeconds": 5,
                "timeoutSeconds": 2
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/ws/v1/cluster/info",
                  "port": 8088
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 2
              },
              "volumeMounts": [
                {
                  "name": "hadoop-config",
                  "mountPath": "/tmp/hadoop-config"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "hadoop-config",
              "configMap": {
                "name": "release-name-hadoop"
              }
            }
          ]
        }
      }
    }
  }
]