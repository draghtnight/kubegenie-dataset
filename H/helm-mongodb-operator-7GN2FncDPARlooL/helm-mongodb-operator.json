[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "mongodb-enterprise-appdb",
      "namespace": "mongodb",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "mongodb-enterprise-database-pods",
      "namespace": "mongodb",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "mongodb-enterprise-ops-manager",
      "namespace": "mongodb",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "mongodb-enterprise-operator",
      "namespace": "mongodb",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "mongodb.mongodb.com",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "group": "mongodb.com",
      "scope": "Namespaced",
      "names": {
        "kind": "MongoDB",
        "plural": "mongodb",
        "shortNames": [
          "mdb"
        ],
        "singular": "mongodb"
      },
      "versions": [
        {
          "name": "v1",
          "served": true,
          "storage": true,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "properties": {
                "spec": {
                  "type": "object",
                  "required": [
                    "credentials",
                    "type",
                    "version"
                  ],
                  "oneOf": [
                    {
                      "required": [
                        "cloudManager"
                      ]
                    },
                    {
                      "required": [
                        "opsManager"
                      ]
                    },
                    {
                      "required": [
                        "project"
                      ]
                    }
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "Standalone",
                        "ReplicaSet",
                        "ShardedCluster"
                      ]
                    },
                    "credentials": {
                      "type": "string"
                    },
                    "project": {
                      "type": "string",
                      "description": "DEPRECATED The name of a configMap in the same namespace"
                    },
                    "opsManager": {
                      "type": "object",
                      "properties": {
                        "configMapRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "cloudManager": {
                      "type": "object",
                      "properties": {
                        "configMapRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "version": {
                      "type": "string",
                      "pattern": "^[0-9]+.[0-9]+.[0-9]+(-.+)?$"
                    },
                    "logLevel": {
                      "type": "string",
                      "enum": [
                        "DEBUG",
                        "INFO",
                        "WARN",
                        "ERROR",
                        "FATAL"
                      ]
                    },
                    "persistent": {
                      "type": "boolean"
                    },
                    "clusterName": {
                      "type": "string",
                      "format": "hostname",
                      "description": "DEPRECATED Use clusterDomain instead"
                    },
                    "clusterDomain": {
                      "type": "string",
                      "format": "hostname"
                    },
                    "additionalMongodConfig": {
                      "type": "object"
                    },
                    "exposedExternally": {
                      "type": "boolean"
                    },
                    "agent": {
                      "type": "object",
                      "properties": {
                        "startupOptions": {
                          "type": "object"
                        }
                      }
                    },
                    "podSpec": {
                      "type": "object",
                      "properties": {
                        "podTemplate": {
                          "type": "object",
                          "properties": {
                            "metadata": {
                              "type": "object"
                            },
                            "spec": {
                              "type": "object"
                            }
                          }
                        },
                        "podAntiAffinityTopologyKey": {
                          "type": "string"
                        },
                        "cpu": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "cpuRequests": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "memory": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "memoryRequests": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "podAffinity": {
                          "type": "object"
                        },
                        "nodeAffinity": {
                          "type": "object"
                        },
                        "persistence": {
                          "type": "object",
                          "properties": {
                            "single": {
                              "type": "object",
                              "properties": {
                                "storage": {
                                  "type": "string"
                                },
                                "storageClass": {
                                  "type": "string"
                                },
                                "labelSelector": {
                                  "type": "object"
                                }
                              }
                            },
                            "multiple": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "journal": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "logs": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "security": {
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "type": "object",
                          "properties": {
                            "agents": {
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "type": "string",
                                  "enum": [
                                    "SCRAM",
                                    "X509",
                                    "LDAP"
                                  ]
                                },
                                "automationUsername": {
                                  "type": "string"
                                },
                                "automationPasswordSecretRef": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "key": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "automationLdapGroupDN": {
                                  "type": "string"
                                },
                                "clientCertificateSecretRef": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "required": [
                                "mode"
                              ]
                            },
                            "enabled": {
                              "type": "boolean"
                            },
                            "modes": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "SCRAM",
                                  "X509",
                                  "LDAP"
                                ]
                              }
                            },
                            "ignoreUnknownUsers": {
                              "type": "boolean"
                            },
                            "requireClientTLSAuthentication": {
                              "type": "boolean"
                            }
                          }
                        },
                        "tls": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean"
                            },
                            "ca": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalCertificateDomains": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ldap": {
                          "type": "object",
                          "properties": {
                            "bindQueryUser": {
                              "type": "string"
                            },
                            "servers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "transportSecurity": {
                              "type": "string",
                              "enum": [
                                "none",
                                "tls"
                              ]
                            },
                            "bindQueryPasswordSecretRef": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "caConfigMapRef": {
                              "type": "object"
                            },
                            "authzQueryTemplate": {
                              "type": "string"
                            },
                            "userToDNMapping": {
                              "type": "string"
                            }
                          }
                        },
                        "roles": {
                          "type": "array",
                          "description": "List of roles not bounded to specific users",
                          "items": {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string",
                                "description": "The name of the role"
                              },
                              "db": {
                                "type": "string",
                                "description": "The db the role belongs to"
                              },
                              "roles": {
                                "type": "array",
                                "description": "List of roles this role inherits from",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "db": {
                                      "type": "string",
                                      "description": "The db the role belongs to"
                                    },
                                    "role": {
                                      "type": "string",
                                      "description": "The name of the role"
                                    }
                                  }
                                }
                              },
                              "authenticationRestrictions": {
                                "type": "array",
                                "description": "List of restriction for users authenticating to this role",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "clientSource": {
                                      "type": "array",
                                      "description": "List of IP addresses or CIDR ranges allowed the user can connect from",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "serverAddress": {
                                      "type": "array",
                                      "description": "List of IP addresses or CIDR ranges allowed the user can connect to",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "privileges": {
                                "type": "array",
                                "description": "List of privileges granted to this role",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array",
                                      "description": "List of actions allowed to this role",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "resource": {
                                      "type": "object",
                                      "description": "Resource on which the privileges are granted",
                                      "properties": {
                                        "db": {
                                          "type": "string",
                                          "description": "Name of the database"
                                        },
                                        "collection": {
                                          "type": "string",
                                          "description": "Name of the collection"
                                        },
                                        "cluster": {
                                          "type": "boolean",
                                          "description": "True for cluster-wide privileges"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "shardPodSpec": {
                      "type": "object",
                      "properties": {
                        "podTemplate": {
                          "type": "object",
                          "properties": {
                            "metadata": {
                              "type": "object"
                            },
                            "spec": {
                              "type": "object"
                            }
                          }
                        },
                        "podAntiAffinityTopologyKey": {
                          "type": "string"
                        },
                        "cpu": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "cpuRequests": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "memory": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "memoryRequests": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "podAffinity": {
                          "type": "object"
                        },
                        "nodeAffinity": {
                          "type": "object"
                        },
                        "persistence": {
                          "type": "object",
                          "properties": {
                            "single": {
                              "type": "object",
                              "properties": {
                                "storage": {
                                  "type": "string"
                                },
                                "storageClass": {
                                  "type": "string"
                                },
                                "labelSelector": {
                                  "type": "object"
                                }
                              }
                            },
                            "multiple": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "journal": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "logs": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "mongosPodSpec": {
                      "type": "object",
                      "properties": {
                        "podTemplate": {
                          "type": "object",
                          "properties": {
                            "metadata": {
                              "type": "object"
                            },
                            "spec": {
                              "type": "object"
                            }
                          }
                        },
                        "podAntiAffinityTopologyKey": {
                          "type": "string"
                        },
                        "cpu": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "cpuRequests": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "memory": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "memoryRequests": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "podAffinity": {
                          "type": "object"
                        },
                        "nodeAffinity": {
                          "type": "object"
                        },
                        "persistence": {
                          "type": "object",
                          "properties": {
                            "single": {
                              "type": "object",
                              "properties": {
                                "storage": {
                                  "type": "string"
                                },
                                "storageClass": {
                                  "type": "string"
                                },
                                "labelSelector": {
                                  "type": "object"
                                }
                              }
                            },
                            "multiple": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "journal": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "logs": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "configSrvPodSpec": {
                      "type": "object",
                      "properties": {
                        "podTemplate": {
                          "type": "object",
                          "properties": {
                            "metadata": {
                              "type": "object"
                            },
                            "spec": {
                              "type": "object"
                            }
                          }
                        },
                        "podAntiAffinityTopologyKey": {
                          "type": "string"
                        },
                        "cpu": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "cpuRequests": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "memory": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "memoryRequests": {
                          "type": "string",
                          "description": "DEPRECATED. Please set this value using `spec.podTemplate` instead."
                        },
                        "podAffinity": {
                          "type": "object"
                        },
                        "nodeAffinity": {
                          "type": "object"
                        },
                        "persistence": {
                          "type": "object",
                          "properties": {
                            "single": {
                              "type": "object",
                              "properties": {
                                "storage": {
                                  "type": "string"
                                },
                                "storageClass": {
                                  "type": "string"
                                },
                                "labelSelector": {
                                  "type": "object"
                                }
                              }
                            },
                            "multiple": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "journal": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "logs": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "configServerCount": {
                      "minimum": 1,
                      "type": "integer"
                    },
                    "mongodsPerShardCount": {
                      "minimum": 1,
                      "type": "integer"
                    },
                    "mongosCount": {
                      "minimum": 1,
                      "type": "integer"
                    },
                    "shardCount": {
                      "minimum": 1,
                      "type": "integer"
                    },
                    "mongos": {
                      "type": "object",
                      "properties": {
                        "additionalMongodConfig": {
                          "type": "object"
                        },
                        "agent": {
                          "type": "object",
                          "properties": {
                            "startupOptions": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    },
                    "configSrv": {
                      "type": "object",
                      "properties": {
                        "additionalMongodConfig": {
                          "type": "object"
                        },
                        "agent": {
                          "type": "object",
                          "properties": {
                            "startupOptions": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    },
                    "shard": {
                      "type": "object",
                      "properties": {
                        "additionalMongodConfig": {
                          "type": "object"
                        },
                        "agent": {
                          "type": "object",
                          "properties": {
                            "startupOptions": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "additionalPrinterColumns": [
            {
              "name": "Type",
              "type": "string",
              "description": "The type of MongoDB deployment. One of 'ReplicaSet', 'ShardedCluster' and 'Standalone'.",
              "jsonPath": ".spec.type"
            },
            {
              "name": "State",
              "type": "string",
              "description": "The current state of the MongoDB deployment.",
              "jsonPath": ".status.phase"
            },
            {
              "name": "Version",
              "type": "string",
              "description": "The version of MongoDB.",
              "jsonPath": ".spec.version"
            },
            {
              "name": "Age",
              "type": "date",
              "description": "The time since the MongoDB resource was created.",
              "jsonPath": ".metadata.creationTimestamp"
            }
          ],
          "subresources": {
            "status": {}
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "mongodbusers.mongodb.com",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "group": "mongodb.com",
      "scope": "Namespaced",
      "names": {
        "kind": "MongoDBUser",
        "plural": "mongodbusers",
        "shortNames": [
          "mdbu"
        ],
        "singular": "mongodbuser"
      },
      "versions": [
        {
          "name": "v1",
          "served": true,
          "storage": true,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "properties": {
                "spec": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "description": "The username of the user"
                    },
                    "db": {
                      "type": "string",
                      "description": "The database the user is stored in"
                    },
                    "project": {
                      "type": "string",
                      "description": "The project the user belongs to"
                    },
                    "passwordSecretKeyRef": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        }
                      },
                      "description": "DEPRECATED The project the user belongs to"
                    },
                    "mongodbResourceRef": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of a MongoDB resource in the same namespace"
                        }
                      }
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the role"
                          },
                          "db": {
                            "type": "string",
                            "description": "The db the role can act on"
                          },
                          "passwordSecretKeyRef": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "key": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "required": [
                          "name",
                          "db"
                        ]
                      }
                    }
                  },
                  "required": [
                    "username",
                    "db"
                  ]
                }
              }
            }
          },
          "additionalPrinterColumns": [
            {
              "name": "State",
              "type": "string",
              "description": "The current state of the MongoDB User",
              "jsonPath": ".status.phase"
            },
            {
              "name": "Age",
              "type": "date",
              "description": "The time since the MongoDB User resource was created",
              "jsonPath": ".metadata.creationTimestamp"
            }
          ],
          "subresources": {
            "status": {}
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "opsmanagers.mongodb.com",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "group": "mongodb.com",
      "scope": "Namespaced",
      "names": {
        "kind": "MongoDBOpsManager",
        "plural": "opsmanagers",
        "shortNames": [
          "om"
        ],
        "singular": "opsmanager"
      },
      "versions": [
        {
          "name": "v1",
          "served": true,
          "storage": true,
          "schema": {
            "openAPIV3Schema": {
              "type": "object",
              "properties": {
                "spec": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "replicas": {
                      "minimum": 1,
                      "type": "integer"
                    },
                    "clusterName": {
                      "type": "string",
                      "format": "hostname",
                      "description": "DEPRECATED Use clusterDomain instead"
                    },
                    "clusterDomain": {
                      "type": "string",
                      "format": "hostname"
                    },
                    "security": {
                      "type": "object",
                      "properties": {
                        "tls": {
                          "type": "object",
                          "properties": {
                            "ca": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "adminCredentials": {
                      "type": "string"
                    },
                    "externalConnectivity": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "LoadBalancer",
                            "NodePort"
                          ]
                        },
                        "port": {
                          "type": "integer"
                        },
                        "loadBalancerIP": {
                          "type": "string"
                        },
                        "externalTrafficPolicy": {
                          "type": "string",
                          "enum": [
                            "Cluster",
                            "Local"
                          ]
                        },
                        "annotations": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "configuration": {
                      "type": "object"
                    },
                    "jvmParameters": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "statefulSet": {
                      "type": "object",
                      "properties": {
                        "spec": {
                          "type": "object"
                        }
                      }
                    },
                    "backup": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        },
                        "jvmParameters": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "headDB": {
                          "type": "object",
                          "properties": {
                            "storage": {
                              "type": "string"
                            },
                            "storageClass": {
                              "type": "string"
                            }
                          }
                        },
                        "opLogStores": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mongodbResourceRef": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              },
                              "mongodbUserRef": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "mongodbResourceRef"
                            ]
                          }
                        },
                        "blockStores": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mongodbResourceRef": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              },
                              "mongodbUserRef": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "mongodbResourceRef"
                            ]
                          }
                        },
                        "s3Stores": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mongodbResourceRef": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              },
                              "mongodbUserRef": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              },
                              "pathStyleAccessEnabled": {
                                "type": "boolean"
                              },
                              "s3BucketEndpoint": {
                                "type": "string"
                              },
                              "s3BucketName": {
                                "type": "string"
                              },
                              "s3SecretRef": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "required": [
                              "name",
                              "pathStyleAccessEnabled",
                              "s3BucketEndpoint",
                              "s3BucketName",
                              "s3SecretRef"
                            ]
                          }
                        },
                        "statefulSet": {
                          "type": "object",
                          "properties": {
                            "spec": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    },
                    "applicationDatabase": {
                      "type": "object",
                      "properties": {
                        "passwordSecretKeyRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ]
                        },
                        "security": {
                          "type": "object",
                          "properties": {
                            "tls": {
                              "type": "object",
                              "properties": {
                                "ca": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            }
                          }
                        },
                        "members": {
                          "maximum": 50,
                          "minimum": 3,
                          "type": "integer"
                        },
                        "version": {
                          "type": "string",
                          "pattern": "^[0-9]+.[0-9]+.[0-9]+(-.+)?$|^$"
                        },
                        "logLevel": {
                          "type": "string",
                          "enum": [
                            "DEBUG",
                            "INFO",
                            "WARN",
                            "ERROR",
                            "FATAL"
                          ]
                        },
                        "persistent": {
                          "type": "boolean"
                        },
                        "statefulSet": {
                          "type": "object",
                          "properties": {
                            "spec": {
                              "type": "object"
                            }
                          }
                        },
                        "agent": {
                          "type": "object",
                          "properties": {
                            "startupOptions": {
                              "type": "object"
                            }
                          }
                        },
                        "podSpec": {
                          "type": "object",
                          "properties": {
                            "podTemplate": {
                              "type": "object",
                              "properties": {
                                "metadata": {
                                  "type": "object"
                                },
                                "spec": {
                                  "type": "object"
                                }
                              }
                            },
                            "podAntiAffinityTopologyKey": {
                              "type": "string"
                            },
                            "cpu": {
                              "type": "string"
                            },
                            "cpuRequests": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "string"
                            },
                            "memoryRequests": {
                              "type": "string"
                            },
                            "podAffinity": {
                              "type": "object"
                            },
                            "nodeAffinity": {
                              "type": "object"
                            },
                            "persistence": {
                              "type": "object",
                              "properties": {
                                "single": {
                                  "type": "object",
                                  "properties": {
                                    "storage": {
                                      "type": "string"
                                    },
                                    "storageClass": {
                                      "type": "string"
                                    },
                                    "labelSelector": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "multiple": {
                                  "type": "object",
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "properties": {
                                        "storage": {
                                          "type": "string"
                                        },
                                        "storageClass": {
                                          "type": "string"
                                        },
                                        "labelSelector": {
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "journal": {
                                      "type": "object",
                                      "properties": {
                                        "storage": {
                                          "type": "string"
                                        },
                                        "storageClass": {
                                          "type": "string"
                                        },
                                        "labelSelector": {
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "logs": {
                                      "type": "object",
                                      "properties": {
                                        "storage": {
                                          "type": "string"
                                        },
                                        "storageClass": {
                                          "type": "string"
                                        },
                                        "labelSelector": {
                                          "type": "object"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "members"
                      ]
                    }
                  },
                  "required": [
                    "version",
                    "applicationDatabase"
                  ]
                }
              }
            }
          },
          "additionalPrinterColumns": [
            {
              "name": "Replicas",
              "type": "integer",
              "description": "The number of replicas of MongoDBOpsManager.",
              "jsonPath": ".spec.replicas"
            },
            {
              "name": "Version",
              "type": "string",
              "description": "The version of MongoDBOpsManager.",
              "jsonPath": ".spec.version"
            },
            {
              "name": "State (OpsManager)",
              "type": "string",
              "description": "The current state of the MongoDBOpsManager.",
              "jsonPath": ".status.opsManager.phase"
            },
            {
              "name": "State (AppDB)",
              "type": "string",
              "description": "The current state of the MongoDBOpsManager Application Database.",
              "jsonPath": ".status.applicationDatabase.phase"
            },
            {
              "name": "State (Backup)",
              "type": "string",
              "description": "The current state of the MongoDBOpsManager Backup Daemon.",
              "jsonPath": ".status.backup.phase"
            },
            {
              "name": "Age",
              "type": "date",
              "description": "The time since the MongoDBOpsManager resource was created.",
              "jsonPath": ".metadata.creationTimestamp"
            },
            {
              "name": "Warnings",
              "type": "string",
              "description": "Warnings",
              "jsonPath": ".status.warnings"
            }
          ],
          "subresources": {
            "status": {}
          }
        }
      ]
    }
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "mongodb-enterprise-operator-mongodb-webhook",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "admissionregistration.k8s.io"
        ],
        "resources": [
          "validatingwebhookconfigurations"
        ],
        "verbs": [
          "get",
          "create",
          "update",
          "delete"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRole",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "mongodb-enterprise-operator-mongodb-certs",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "certificates.k8s.io"
        ],
        "resources": [
          "certificatesigningrequests"
        ],
        "verbs": [
          "get",
          "create",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "mongodb-enterprise-operator-mongodb-webhook-binding",
      "namespace": "mongodb",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "mongodb-enterprise-operator-mongodb-webhook"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "mongodb-enterprise-operator",
        "namespace": "mongodb"
      }
    ]
  },
  {
    "kind": "ClusterRoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "mongodb-enterprise-operator-mongodb-certs-binding",
      "namespace": "mongodb",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "mongodb-enterprise-operator-mongodb-certs"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "mongodb-enterprise-operator",
        "namespace": "mongodb"
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "mongodb-enterprise-appdb",
      "namespace": "mongodb",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "patch"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "mongodb-enterprise-operator",
      "namespace": "mongodb",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "secrets",
          "services"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "update",
          "delete",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "statefulsets"
        ],
        "verbs": [
          "create",
          "get",
          "list",
          "watch",
          "delete",
          "update"
        ]
      },
      {
        "apiGroups": [
          "mongodb.com"
        ],
        "resources": [
          "mongodb",
          "mongodb/finalizers",
          "mongodbusers",
          "opsmanagers",
          "opsmanagers/finalizers",
          "mongodb/status",
          "mongodbusers/status",
          "opsmanagers/status"
        ],
        "verbs": [
          "*"
        ]
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "mongodb-enterprise-appdb",
      "namespace": "mongodb",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "mongodb-enterprise-appdb"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "mongodb-enterprise-appdb",
        "namespace": "mongodb"
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "mongodb-enterprise-operator",
      "namespace": "mongodb",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "mongodb-enterprise-operator"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "mongodb-enterprise-operator",
        "namespace": "mongodb"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "operator-webhook",
      "namespace": "mongodb",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "selector": {
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name"
      },
      "ports": [
        {
          "name": "https",
          "protocol": "TCP",
          "port": 443
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "mongodb-enterprise-operator",
      "namespace": "mongodb",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/name": "mongodb-enterprise-operator",
          "app.kubernetes.io/instance": "mongodb-enterprise-operator"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/name": "mongodb-enterprise-operator",
            "app.kubernetes.io/instance": "mongodb-enterprise-operator"
          },
          "annotations": {
            "loadtest.io/scrape_port": "8080",
            "loadtest.io/should_be_scraped": "true"
          }
        },
        "spec": {
          "serviceAccountName": "mongodb-enterprise-operator",
          "securityContext": {
            "runAsNonRoot": true,
            "runAsUser": 2000
          },
          "containers": [
            {
              "name": "mongodb-enterprise-operator",
              "image": "quay.io/mongodb/mongodb-enterprise-operator:1.8.2",
              "imagePullPolicy": "Always",
              "args": [
                "-watch-resource=mongodb",
                "-watch-resource=opsmanagers",
                "-watch-resource=mongodbusers"
              ],
              "command": [
                "/usr/local/bin/mongodb-enterprise-operator"
              ],
              "resources": {
                "limits": {
                  "cpu": "300m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "200Mi"
                }
              },
              "env": [
                {
                  "name": "OPERATOR_ENV",
                  "value": "prod"
                },
                {
                  "name": "WATCH_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "CURRENT_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "IMAGE_PULL_POLICY",
                  "value": "Always"
                },
                {
                  "name": "MONGODB_ENTERPRISE_DATABASE_IMAGE",
                  "value": "quay.io/mongodb/mongodb-enterprise-database"
                },
                {
                  "name": "INIT_DATABASE_IMAGE_REPOSITORY",
                  "value": "quay.io/mongodb/mongodb-enterprise-init-database"
                },
                {
                  "name": "INIT_DATABASE_VERSION",
                  "value": "1.0.1"
                },
                {
                  "name": "DATABASE_VERSION",
                  "value": "2.0.0"
                },
                {
                  "name": "OPS_MANAGER_IMAGE_REPOSITORY",
                  "value": "quay.io/mongodb/mongodb-enterprise-ops-manager"
                },
                {
                  "name": "INIT_OPS_MANAGER_IMAGE_REPOSITORY",
                  "value": "quay.io/mongodb/mongodb-enterprise-init-ops-manager"
                },
                {
                  "name": "INIT_OPS_MANAGER_VERSION",
                  "value": "1.0.3"
                },
                {
                  "name": "APPDB_IMAGE_REPOSITORY",
                  "value": "quay.io/mongodb/mongodb-enterprise-appdb"
                },
                {
                  "name": "INIT_APPDB_IMAGE_REPOSITORY",
                  "value": "quay.io/mongodb/mongodb-enterprise-init-appdb"
                },
                {
                  "name": "INIT_APPDB_VERSION",
                  "value": "1.0.5"
                },
                {
                  "name": "OPS_MANAGER_IMAGE_PULL_POLICY",
                  "value": "Always"
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-helm-mongodb-operator-test-connection",
      "labels": {
        "helm.sh/chart": "helm-mongodb-operator-0.1.0",
        "app.kubernetes.io/name": "helm-mongodb-operator",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.8.2",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-helm-mongodb-operator:"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]