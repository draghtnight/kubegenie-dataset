apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-k8s-backend-ap-configmap
  labels:
    helm.sh/chart: backend-0.1.0
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
data:
  appsettings.Kubernetes.json: |-
    {
      "Logging": {
        "LogLevel": {
          "Default": "Information",
          "Microsoft": "Warning",
          "Microsoft.Hosting.Lifetime": "Information"
        }
      },
      "CorsPolicyName": "AllowSpecificOrigin",
      "AllowedCrossDomains": [
        "http://demo-k8s-web.com",
        "https://demo-k8s-web.com"
      ],
      "Customize": {
        "Theme": "#FFFFE0"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-k8s-backend-env-configmap
  labels:
    helm.sh/chart: backend-0.1.0
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
data:
  ASPNETCORE_ENVIRONMENT: Kubernetes
  ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: demo-k8s-backend
  labels:
    helm.sh/chart: backend-0.1.0
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http-port
      port: 5000
      targetPort: http
      protocol: TCP
    - name: https-port
      port: 5001
      targetPort: https
      protocol: TCP
  selector:
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: demo-k8s-web
  labels:
    helm.sh/chart: web-0.1.0
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http-port
      port: 80
      targetPort: http
      protocol: TCP
    - name: https-port
      port: 443
      targetPort: https
      protocol: TCP
  selector:
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-k8s-backend
  labels:
    helm.sh/chart: backend-0.1.0
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: backend
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backend
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext: {}
      containers:
        - name: backend
          securityContext: null
          image: karatejb/demo-k8s:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
            - name: https
              containerPort: 5001
              protocol: TCP
          envFrom:
            - configMapRef:
                name: demo-k8s-backend-env-configmap
          volumeMounts:
            - name: config-volume
              mountPath: /app/appsettings.Kubernetes.json
              subPath: appsettings.Kubernetes.json
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config-volume
          configMap:
            name: demo-k8s-backend-ap-configmap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-k8s-web
  labels:
    helm.sh/chart: web-0.1.0
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: web
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: web
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext: {}
      containers:
        - name: web
          securityContext: null
          image: karatejb/demo-k8s-web:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-k8s-backend
  labels:
    helm.sh/chart: backend-0.1.0
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: demo-k8s-backend.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: demo-k8s-backend
                port:
                  number: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-k8s-web
  labels:
    helm.sh/chart: web-0.1.0
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: demo-k8s-web.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: demo-k8s-web
                port:
                  number: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: demo-k8s-backend-test-connection
  labels:
    helm.sh/chart: backend-0.1.0
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - 'demo-k8s-backend:'
  restartPolicy: Never
---
apiVersion: v1
kind: Pod
metadata:
  name: demo-k8s-web-test-connection
  labels:
    helm.sh/chart: web-0.1.0
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - 'demo-k8s-web:'
  restartPolicy: Never
