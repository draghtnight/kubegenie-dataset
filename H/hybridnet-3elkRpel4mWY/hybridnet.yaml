apiVersion: v1
kind: ServiceAccount
metadata:
  name: hybridnet
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.k8s.io/system-only: "true"
  name: system:hybridnet
rules:
  - apiGroups:
      - networking.alibaba.com
    resources:
      - networks
      - networks/status
      - subnets
      - subnets/status
      - ipinstances
      - ipinstances/status
    verbs:
      - '*'
  - apiGroups:
      - multicluster.alibaba.com
    resources:
      - remoteclusters
      - remoteclusters/status
      - remotesubnets
      - remotesubnets/status
      - remotevteps
      - remotevteps/status
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
      - nodes
      - nodes/status
      - configmaps
      - services
      - endpoints
      - serviceaccounts
    verbs:
      - create
      - get
      - list
      - watch
      - patch
      - update
  - apiGroups:
      - ""
      - networking.k8s.io
      - apps
    resources:
      - networkpolicies
      - services
      - endpoints
      - statefulsets
      - daemonsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - extensions
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - crd.projectcalico.org
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - list
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hybridnet
roleRef:
  name: system:hybridnet
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: hybridnet
    namespace: kube-system
---
kind: Service
apiVersion: v1
metadata:
  name: hybridnet-webhook
  namespace: kube-system
spec:
  ports:
    - name: webhook-port
      protocol: TCP
      port: 443
      targetPort: webhook-port
  type: ClusterIP
  selector:
    app: hybridnet-webhook
  sessionAffinity: None
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: hybridnet-daemon
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: hybridnet-daemon
  template:
    metadata:
      labels:
        app: hybridnet-daemon
    spec:
      tolerations:
        - operator: Exists
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      priorityClassName: system-cluster-critical
      serviceAccountName: hybridnet
      hostNetwork: true
      hostPID: true
      initContainers:
        - name: install-cni
          image: docker.io/hybridnetdev/hybridnet:v0.5.0
          imagePullPolicy: IfNotPresent
          command:
            - /hybridnet/install-cni.sh
          securityContext:
            runAsUser: 0
            privileged: true
          volumeMounts:
            - mountPath: /etc/cni/net.d
              name: cni-conf
            - mountPath: /opt/cni/bin
              name: cni-bin
      containers:
        - name: cni-daemon
          image: docker.io/hybridnetdev/hybridnet:v0.5.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - /hybridnet/start-daemon.sh
          args:
            - --vtep-address-cidrs=0.0.0.0/0,::/0
            - --enable-vlan-arp-enhancement=true
            - --feature-gates=MultiCluster=false,DualStack=false
          securityContext:
            runAsUser: 10101
            privileged: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: DEFAULT_IP_FAMILY
              value: IPv4
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          livenessProbe:
            httpGet:
              path: /live
              port: 11021
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
            failureThreshold: 1
          volumeMounts:
            - mountPath: /run/cni
              name: host-run-cni
            - mountPath: /lib/modules
              name: host-modules
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/run/netns
              mountPropagation: HostToContainer
              name: host-var-run-netns
            - mountPath: /var/run/docker/netns
              mountPropagation: HostToContainer
              name: host-var-docker-netns
            - mountPath: /run/netns
              mountPropagation: HostToContainer
              name: host-run-netns
            - mountPath: /run/docker/netns
              mountPropagation: HostToContainer
              name: host-docker-netns
        - name: policy
          image: docker.io/hybridnetdev/hybridnet:v0.5.0
          imagePullPolicy: IfNotPresent
          command:
            - /hybridnet/policyinit.sh
          env:
            - name: NODENAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          resources:
            requests:
              cpu: 250m
          securityContext:
            privileged: true
            runAsUser: 0
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - name: host-modules
          hostPath:
            path: /lib/modules
        - name: host-run-cni
          hostPath:
            path: /run/cni
        - name: cni-conf
          hostPath:
            path: /etc/cni/net.d
        - name: cni-bin
          hostPath:
            path: /opt/cni/bin
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
        - name: host-run-netns
          hostPath:
            path: /run/netns
        - name: host-docker-netns
          hostPath:
            path: /run/docker/netns
        - name: host-var-run-netns
          hostPath:
            path: /var/run/netns
        - name: host-var-docker-netns
          hostPath:
            path: /var/run/docker/netns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hybridnet-manager
  namespace: kube-system
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hybridnet-manager
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: hybridnet-manager
    spec:
      tolerations:
        - operator: Exists
          effect: NoSchedule
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: hybridnet-manager
              topologyKey: kubernetes.io/hostname
      priorityClassName: system-cluster-critical
      serviceAccountName: hybridnet
      hostNetwork: true
      containers:
        - name: hybridnet-manager
          image: docker.io/hybridnetdev/hybridnet:v0.5.0
          imagePullPolicy: IfNotPresent
          command:
            - /hybridnet/hybridnet-manager
            - --default-ip-retain=true
            - --feature-gates=MultiCluster=false,DualStack=false
          env:
            - name: DEFAULT_NETWORK_TYPE
              value: Overlay
            - name: DEFAULT_IP_FAMILY
              value: IPv4
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      nodeSelector:
        node-role.kubernetes.io/master: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hybridnet-webhook
  namespace: kube-system
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hybridnet-webhook
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: hybridnet-webhook
        webhook.hybridnet.io/ignore: "true"
    spec:
      tolerations:
        - operator: Exists
          effect: NoSchedule
      nodeSelector:
        node-role.kubernetes.io/master: ""
      priorityClassName: system-cluster-critical
      serviceAccountName: hybridnet
      hostNetwork: true
      containers:
        - name: hybridnet-webhook
          image: docker.io/hybridnetdev/hybridnet:v0.5.0
          imagePullPolicy: IfNotPresent
          command:
            - /hybridnet/hybridnet-webhook
            - --default-ip-retain=true
            - --feature-gates=MultiCluster=false,DualStack=false
          args:
            - --port=9898
          env:
            - name: DEFAULT_NETWORK_TYPE
              value: Overlay
            - name: DEFAULT_IP_FAMILY
              value: IPv4
          ports:
            - containerPort: 9898
              name: webhook-port
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: hybridnet-mutating-webhook
webhooks:
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNwRENDQVl3Q0NRQy9aTnM5bm9oY25UQU5CZ2txaGtpRzl3MEJBUXNGQURBVU1SSXdFQVlEVlFRRERBbG8KZVdKeWFXUnVaWFF3SGhjTk1qRXdPREkyTVRBeU16UTRXaGNOTXpFd09ESTBNVEF5TXpRNFdqQVVNUkl3RUFZRApWUVFEREFsb2VXSnlhV1J1WlhRd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3CmxlMFVWbXRiSkFYRmpodlFXdU8yNzBYRGNibU1sQmhrWTJldlZzWTNpNmVmRXdrYWllMmhCWGdLZFRncDVDSVcKOUFEa3JIY2p0aFFpL1AwTk5DRWpRK055TytKY0lVbUpQWE5XaWVRaG1hV0NzNlFzcWNOWk0zNUhsWTk2ekVVdgp1N3VQOGVOY1hmRXMyeWJ2RFFsRzVUT2pXTi8zNEFIQ1pRSmxpUkVtMUtUSm4zUko5SXNDbXlSYUhKNUF2ODVPClhralJqV0xkVm4wNlJNS3lUeDYxUjRQWTE0RTZYelRlWFk2T2pkT2ZtOWVtYXZTMUJLTGFOMDlBQWovdkoyejIKYzlTZkZMd0tJVkowR01TYXUwS2NNNlNCbUc2UGR5eE5PWmhBRExTOVZYUlMzN1NYeC9WRmQ5TFJMRk1wd3ljNQpZcVJENU1uK2tYNDh1VFU5N2RmTEFnTUJBQUV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUFSWmtBMENUZTRzCldUaU1WR0NOOEQwTjZtc2ZjYURRRjRUVDZNSEJUcjdOcklUMXZsMFlreHVGNXl4ajBDQ2E0bXBQRWNGNmJPcUcKdlQxcnZrZmdoakl2QnRFTVlUUEZ1dXNRZ2JmWU5zWVNkVjkzSVBYVkRTbkZITjdNRlBFMTZBd0xOQXBjUmpYKwpWV1FrNk1MU1RUcFQ2V3dWSUpHemsrZDhxakdYQlgyeE41YngwRDlpeU1oYzVjdnJkNDJHT1RFNko3UG0vTk5uCmdvZ2twYnRPaWRwMGJaVG1XQUkzbnUzNCtzRXQ2T2dzbFpweEt1OGlJanhnQlJrOHZDYXNBa0tMdDFFdXdOVUQKd1hBUGI5Wkl3clNEVFR5Nlg3cUZDSXdRMW9ZNVFFMW8xcUVrMTZROWk2VHNTUU5mbmIxQUxTNjJNcmp1dnZGUgplY21QMHpHSzd4WT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      service:
        name: hybridnet-webhook
        namespace: kube-system
        port: 443
        path: /mutate
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: core-v1.mutating.hybridnet
    objectSelector:
      matchExpressions:
        - key: webhook.hybridnet.io/ignore
          operator: NotIn
          values:
            - "TRUE"
            - "true"
        - key: app
          operator: NotIn
          values:
            - kube-proxy
    reinvocationPolicy: Never
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
    timeoutSeconds: 10
---
apiVersion: networking.alibaba.com/v1
kind: Network
metadata:
  name: init
spec:
  netID: 4
  type: Overlay
---
apiVersion: networking.alibaba.com/v1
kind: Subnet
metadata:
  name: init
spec:
  config:
    autoNatOutgoing: true
  network: init
  range:
    cidr: 100.64.0.0/16
    version: "4"
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: hybridnet-validating-webhook
webhooks:
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNwRENDQVl3Q0NRQy9aTnM5bm9oY25UQU5CZ2txaGtpRzl3MEJBUXNGQURBVU1SSXdFQVlEVlFRRERBbG8KZVdKeWFXUnVaWFF3SGhjTk1qRXdPREkyTVRBeU16UTRXaGNOTXpFd09ESTBNVEF5TXpRNFdqQVVNUkl3RUFZRApWUVFEREFsb2VXSnlhV1J1WlhRd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3CmxlMFVWbXRiSkFYRmpodlFXdU8yNzBYRGNibU1sQmhrWTJldlZzWTNpNmVmRXdrYWllMmhCWGdLZFRncDVDSVcKOUFEa3JIY2p0aFFpL1AwTk5DRWpRK055TytKY0lVbUpQWE5XaWVRaG1hV0NzNlFzcWNOWk0zNUhsWTk2ekVVdgp1N3VQOGVOY1hmRXMyeWJ2RFFsRzVUT2pXTi8zNEFIQ1pRSmxpUkVtMUtUSm4zUko5SXNDbXlSYUhKNUF2ODVPClhralJqV0xkVm4wNlJNS3lUeDYxUjRQWTE0RTZYelRlWFk2T2pkT2ZtOWVtYXZTMUJLTGFOMDlBQWovdkoyejIKYzlTZkZMd0tJVkowR01TYXUwS2NNNlNCbUc2UGR5eE5PWmhBRExTOVZYUlMzN1NYeC9WRmQ5TFJMRk1wd3ljNQpZcVJENU1uK2tYNDh1VFU5N2RmTEFnTUJBQUV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUFSWmtBMENUZTRzCldUaU1WR0NOOEQwTjZtc2ZjYURRRjRUVDZNSEJUcjdOcklUMXZsMFlreHVGNXl4ajBDQ2E0bXBQRWNGNmJPcUcKdlQxcnZrZmdoakl2QnRFTVlUUEZ1dXNRZ2JmWU5zWVNkVjkzSVBYVkRTbkZITjdNRlBFMTZBd0xOQXBjUmpYKwpWV1FrNk1MU1RUcFQ2V3dWSUpHemsrZDhxakdYQlgyeE41YngwRDlpeU1oYzVjdnJkNDJHT1RFNko3UG0vTk5uCmdvZ2twYnRPaWRwMGJaVG1XQUkzbnUzNCtzRXQ2T2dzbFpweEt1OGlJanhnQlJrOHZDYXNBa0tMdDFFdXdOVUQKd1hBUGI5Wkl3clNEVFR5Nlg3cUZDSXdRMW9ZNVFFMW8xcUVrMTZROWk2VHNTUU5mbmIxQUxTNjJNcmp1dnZGUgplY21QMHpHSzd4WT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      service:
        name: hybridnet-webhook
        namespace: kube-system
        port: 443
        path: /validate
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: hybridnet-v1.validating.hybridnet
    rules:
      - apiGroups:
          - networking.alibaba.com
        apiVersions:
          - v1
        operations:
          - CREATE
          - DELETE
          - UPDATE
        resources:
          - networks
          - subnets
      - apiGroups:
          - multicluster.alibaba.com
        apiVersions:
          - v1
        operations:
          - CREATE
          - DELETE
          - UPDATE
        resources:
          - remoteclusters
          - remotesubnets
    sideEffects: None
    timeoutSeconds: 10
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNwRENDQVl3Q0NRQy9aTnM5bm9oY25UQU5CZ2txaGtpRzl3MEJBUXNGQURBVU1SSXdFQVlEVlFRRERBbG8KZVdKeWFXUnVaWFF3SGhjTk1qRXdPREkyTVRBeU16UTRXaGNOTXpFd09ESTBNVEF5TXpRNFdqQVVNUkl3RUFZRApWUVFEREFsb2VXSnlhV1J1WlhRd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3CmxlMFVWbXRiSkFYRmpodlFXdU8yNzBYRGNibU1sQmhrWTJldlZzWTNpNmVmRXdrYWllMmhCWGdLZFRncDVDSVcKOUFEa3JIY2p0aFFpL1AwTk5DRWpRK055TytKY0lVbUpQWE5XaWVRaG1hV0NzNlFzcWNOWk0zNUhsWTk2ekVVdgp1N3VQOGVOY1hmRXMyeWJ2RFFsRzVUT2pXTi8zNEFIQ1pRSmxpUkVtMUtUSm4zUko5SXNDbXlSYUhKNUF2ODVPClhralJqV0xkVm4wNlJNS3lUeDYxUjRQWTE0RTZYelRlWFk2T2pkT2ZtOWVtYXZTMUJLTGFOMDlBQWovdkoyejIKYzlTZkZMd0tJVkowR01TYXUwS2NNNlNCbUc2UGR5eE5PWmhBRExTOVZYUlMzN1NYeC9WRmQ5TFJMRk1wd3ljNQpZcVJENU1uK2tYNDh1VFU5N2RmTEFnTUJBQUV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUFSWmtBMENUZTRzCldUaU1WR0NOOEQwTjZtc2ZjYURRRjRUVDZNSEJUcjdOcklUMXZsMFlreHVGNXl4ajBDQ2E0bXBQRWNGNmJPcUcKdlQxcnZrZmdoakl2QnRFTVlUUEZ1dXNRZ2JmWU5zWVNkVjkzSVBYVkRTbkZITjdNRlBFMTZBd0xOQXBjUmpYKwpWV1FrNk1MU1RUcFQ2V3dWSUpHemsrZDhxakdYQlgyeE41YngwRDlpeU1oYzVjdnJkNDJHT1RFNko3UG0vTk5uCmdvZ2twYnRPaWRwMGJaVG1XQUkzbnUzNCtzRXQ2T2dzbFpweEt1OGlJanhnQlJrOHZDYXNBa0tMdDFFdXdOVUQKd1hBUGI5Wkl3clNEVFR5Nlg3cUZDSXdRMW9ZNVFFMW8xcUVrMTZROWk2VHNTUU5mbmIxQUxTNjJNcmp1dnZGUgplY21QMHpHSzd4WT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      service:
        name: hybridnet-webhook
        namespace: kube-system
        port: 443
        path: /validate
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: core-v1.validating.hybridnet
    objectSelector:
      matchExpressions:
        - key: webhook.hybridnet.io/ignore
          operator: NotIn
          values:
            - "TRUE"
            - "true"
        - key: app
          operator: NotIn
          values:
            - kube-proxy
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
    timeoutSeconds: 10
