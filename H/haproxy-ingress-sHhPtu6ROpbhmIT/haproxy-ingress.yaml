apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    helm.sh/chart: haproxy-ingress-0.13.7
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.7
    app.kubernetes.io/managed-by: Helm
  name: release-name-haproxy-ingress
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: haproxy-ingress
      app.kubernetes.io/instance: release-name
  minAvailable: 1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: haproxy-ingress-0.13.7
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.7
    app.kubernetes.io/managed-by: Helm
  name: release-name-haproxy-ingress
  namespace: sHhPtu6ROpbhmIT
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: haproxy-ingress-0.13.7
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.7
    app.kubernetes.io/managed-by: Helm
  name: release-name-haproxy-ingress
  namespace: sHhPtu6ROpbhmIT
data:
  healthz-port: "10253"
  stats-port: "1936"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: haproxy-ingress-0.13.7
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.7
    app.kubernetes.io/managed-by: Helm
  name: release-name-haproxy-ingress
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.x-k8s.io
    resources:
      - gateways
      - gatewayclasses
      - httproutes
      - tlsroutes
      - tcproutes
      - udproutes
      - backendpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: haproxy-ingress-0.13.7
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.7
    app.kubernetes.io/managed-by: Helm
  name: release-name-haproxy-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-haproxy-ingress
subjects:
  - kind: ServiceAccount
    name: release-name-haproxy-ingress
    namespace: default
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: release-name-haproxy-ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: haproxy-ingress-0.13.7
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.7
    app.kubernetes.io/managed-by: Helm
  name: release-name-haproxy-ingress
  namespace: sHhPtu6ROpbhmIT
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
    verbs:
      - get
      - create
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: haproxy-ingress-0.13.7
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.7
    app.kubernetes.io/managed-by: Helm
  name: release-name-haproxy-ingress
  namespace: sHhPtu6ROpbhmIT
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-haproxy-ingress
subjects:
  - kind: ServiceAccount
    name: release-name-haproxy-ingress
    namespace: default
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: release-name-haproxy-ingress
---
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: haproxy-ingress-0.13.7
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.7
    app.kubernetes.io/managed-by: Helm
  name: release-name-haproxy-ingress
  namespace: sHhPtu6ROpbhmIT
spec:
  externalTrafficPolicy: Local
  ports:
    - name: http-80
      port: 80
      protocol: TCP
      targetPort: http
    - name: https-443
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/instance: release-name
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: haproxy-ingress-0.13.7
    app.kubernetes.io/name: haproxy-ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.7
    app.kubernetes.io/managed-by: Helm
  name: release-name-haproxy-ingress
  namespace: sHhPtu6ROpbhmIT
spec:
  replicas: 1
  revisionHistoryLimit: null
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: haproxy-ingress
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: haproxy-ingress
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-haproxy-ingress
      containers:
        - name: haproxy-ingress
          image: quay.io/jcmoraisjr/haproxy-ingress:v0.13.7
          imagePullPolicy: IfNotPresent
          args:
            - --configmap=default/release-name-haproxy-ingress
            - --ingress-class=haproxy
            - --sort-backends
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: healthz
              containerPort: 10253
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10253
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10253
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            seccompProfile:
              type: RuntimeDefault
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      hostNetwork: false
