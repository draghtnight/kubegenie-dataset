apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.2.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: xGetPrK
type: Opaque
data:
  postgresql-postgres-password: bnhjREpzWEpRVQ==
  postgresql-password: Y2hhbmdlbWU=
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name
  labels:
    app: helm-taiga
    heritage: Helm
    release: release-name
    chart: helm-taiga-0.2.4
data:
  TAIGA_DB_PASSWORD: Y2hhbmdlbWU=
  TAIGA_SECRET_KEY: R0Yza1d6emFLbg==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name
  labels:
    app: helm-taiga
    heritage: Helm
    release: release-name
    chart: helm-taiga-0.2.4
data:
  DEBUG: "False"
  TAIGA_HOSTNAME: localhost:8080
  TAIGA_SSL: "false"
  TAIGA_SSL_BY_REVERSE_PROXY: "False"
  TAIGA_DB_HOST: release-name-postgresql-headless
  TAIGA_DB_NAME: taiga
  TAIGA_DB_USER: taiga
  TAIGA_ENABLE_EMAIL: "False"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name
  labels:
    app: helm-taiga
    heritage: Helm
    release: release-name
    chart: helm-taiga-0.2.4
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.2.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: xGetPrK
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.2.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
  namespace: xGetPrK
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: release-name
  labels:
    app: helm-taiga
    heritage: Helm
    release: release-name
    chart: helm-taiga-0.2.4
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: helm-taiga
    heritage: Helm
    release: release-name
    chart: helm-taiga-0.2.4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name
  labels:
    app: helm-taiga
    heritage: Helm
    release: release-name
    chart: helm-taiga-0.2.4
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: helm-taiga
      heritage: Helm
      release: release-name
      chart: helm-taiga-0.2.4
  template:
    metadata:
      labels:
        app: helm-taiga
        heritage: Helm
        release: release-name
        chart: helm-taiga-0.2.4
    spec:
      initContainers:
        - name: init-db
          image: mvitale1989/docker-taiga:20191031-4.2.14
          imagePullPolicy: IfNotPresent
          env:
            - name: TAIGA_SLEEP
              value: "60"
            - name: TAIGA_DB_CHECK_ONLY
              value: "True"
          envFrom:
            - secretRef:
                name: release-name
                optional: false
            - configMapRef:
                name: release-name
                optional: false
      containers:
        - name: helm-taiga-front
          image: mvitale1989/docker-taiga:20191031-4.2.14
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: TAIGA_COMPONENT
              value: front
            - name: TAIGA_SKIP_DB_CHECK
              value: "True"
          envFrom:
            - secretRef:
                name: release-name
                optional: false
            - configMapRef:
                name: release-name
                optional: false
          volumeMounts:
            - name: taiga-data
              mountPath: /usr/src/taiga-back/media
          resources:
            seccompProfile:
              type: RuntimeDefault
        - name: helm-taiga-back
          image: mvitale1989/docker-taiga:20191031-4.2.14
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /api/v1/projects
              port: 80
          readinessProbe:
            httpGet:
              path: /api/v1/projects
              port: 80
          env:
            - name: TAIGA_COMPONENT
              value: back
            - name: TAIGA_SKIP_DB_CHECK
              value: "True"
          envFrom:
            - secretRef:
                name: release-name
                optional: false
            - configMapRef:
                name: release-name
                optional: false
          volumeMounts:
            - name: taiga-data
              mountPath: /usr/src/taiga-back/media
          resources: {}
      volumes:
        - name: taiga-data
          persistentVolumeClaim:
            claimName: release-name
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.2.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
  namespace: xGetPrK
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.2.8
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      containers:
        - name: release-name-postgresql
          image: docker.io/bitnami/postgresql:11.10.0-debian-10-r83
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          securityContext:
            runAsUser: 10605
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-postgres-password
            - name: POSTGRES_USER
              value: taiga
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: taiga
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "taiga" -d "dbname=taiga" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "taiga" -d "dbname=taiga" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: null
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
