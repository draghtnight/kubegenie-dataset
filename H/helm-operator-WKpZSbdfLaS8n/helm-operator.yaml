apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chart: helm-operator
    release: release-name
    heritage: Helm
  name: helm-operator
  namespace: WKpZSbdfLaS8n
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: myexporters.example.com
spec:
  group: example.com
  names:
    kind: MyExporter
    listKind: MyExporterList
    plural: myexporters
    singular: myexporter
    shortNames:
      - myx
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: MyExporter is the Schema for the myexporters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of MyExporter
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              description: Status defines the observed state of MyExporter
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: host
          type: string
          jsonPath: .spec.connection.host
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: helm-operator-manager-role
  labels:
    app: helm-operator
    chart: helm-operator
    release: release-name
    heritage: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - example.com
    resources:
      - myexporters
      - myexporters/status
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - verbs:
      - '*'
    apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
      - roles
  - verbs:
      - '*'
    apiGroups:
      - ""
    resources:
      - services
  - verbs:
      - '*'
    apiGroups:
      - apps
    resources:
      - deployments
  - verbs:
      - '*'
    apiGroups:
      - monitoring.coreos.com
    resources:
      - prometheusrules
      - servicemonitors
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: helm-operator-manager-rolebinding
  labels:
    app: helm-operator
    chart: helm-operator
    release: release-name
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: helm-operator-manager-role
subjects:
  - kind: ServiceAccount
    name: helm-operator
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: helm-operator-leader-election-role
  labels:
    app: helm-operator
    chart: helm-operator
    release: release-name
    heritage: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: helm-operator-leader-election-rolebinding
  labels:
    app: helm-operator
    chart: helm-operator
    release: release-name
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: helm-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    name: helm-operator
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: helm-operator
  labels:
    app: helm-operator
    chart: helm-operator
    release: release-name
    heritage: Helm
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: helm-operator
    release: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-operator
  labels:
    app: helm-operator
    chart: helm-operator
    release: release-name
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: helm-operator
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: helm-operator
        release: release-name
    spec:
      serviceAccountName: helm-operator
      containers:
        - name: helm-operator
          image: bsgrigorov/helm-operator:latest
          imagePullPolicy: Always
          env:
            - name: MY_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args:
            - --leader-elect
            - --leader-election-id=helm-operator
            - --max-concurrent-reconciles=2
          resources:
            limits:
              cpu: 0.125
              memory: 256Mi
            requests:
              cpu: 0.125
              memory: 256Mi
          ports:
            - containerPort: 80
      terminationGracePeriodSeconds: 10
