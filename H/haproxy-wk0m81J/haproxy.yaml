apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-haproxy-config
  labels:
    helm.sh/chart: haproxy-0.1.2
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/instance: release-name
    app: haproxy
    app.kubernetes.io/version: 2.2.14
    app.kubernetes.io/managed-by: Helm
data:
  haproxy.cfg: "global\n  log 127.0.0.1 local0 notice\n  maxconn 2000\n  user root\n  group root\n\ndefaults\n  log global\n  retries 2\n  maxconn 2000\n  timeout connect 10s\n  timeout server 10800s\n  timeout client 10800s\n\nfrontend mysql-cluster-front\n  bind 0.0.0.0:3306\n  mode tcp\n  option tcplog\n  default_backend mysql-cluster-back\n\nresolvers mydns\n  nameserver dns1 10.96.0.10:53\n  parse-resolv-conf\n  resolve_retries       3\n  timeout resolve       2s\n  timeout retry         2s\n  hold other           30s\n  hold refused         30s\n  hold nx              30s\n  hold timeout         30s\n  hold valid           10s\n  hold obsolete        30s\n  accepted_payload_size 8192 # allow larger DNS payloads\n\nbackend mysql-cluster-back\n  mode tcp\n  option tcplog\n  option httpchk GET / HTTP/1.1\n  balance roundrobin\n  default-server port 8081 inter 5s downinter 5s rise 1 fall 2 slowstart 15s weight 1\n  \n  server mysql-0 percona-xtradb-cluster-pxc-0.percona-xtradb-cluster-pxc.default.svc.cluster.local:3306 check resolvers mydns resolve-prefer ipv4\n  server mysql-1 percona-xtradb-cluster-pxc-1.percona-xtradb-cluster-pxc.default.svc.cluster.local:3306 check resolvers mydns resolve-prefer ipv4 backup\n  server mysql-2 percona-xtradb-cluster-pxc-2.percona-xtradb-cluster-pxc.default.svc.cluster.local:3306 check resolvers mydns resolve-prefer ipv4 backup\n\nlisten 0.0.0.0:8899\n  bind 0.0.0.0:8899\n  mode http\n  stats enable\n  stats uri /\n  stats realm Strictly\\ Private\n  stats auth admin:admin\n  stats admin if TRUE\n"
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-haproxy
  labels:
    helm.sh/chart: haproxy-0.1.2
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/instance: release-name
    app: haproxy
    app.kubernetes.io/version: 2.2.14
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: tcp-port
    - port: 8899
      targetPort: 8899
      protocol: TCP
      name: http-web-port
  selector:
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/instance: release-name
    app: haproxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-haproxy
  labels:
    helm.sh/chart: haproxy-0.1.2
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/instance: release-name
    app: haproxy
    app.kubernetes.io/version: 2.2.14
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: haproxy
      app.kubernetes.io/instance: release-name
      app: haproxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: haproxy
        app.kubernetes.io/instance: release-name
        app: haproxy
        version: 2.2.14
      annotations: null
    spec:
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 5
      volumes:
        - name: esconfig
          configMap:
            name: release-name-haproxy-config
      serviceAccountName: default
      securityContext:
        fsGroup: 2000
      containers:
        - name: haproxy
          image: haproxy:2.2.14
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10178
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
          ports:
            - name: tcp-port
              containerPort: 3306
              protocol: TCP
            - name: http-web-port
              containerPort: 8899
              protocol: TCP
          resources:
            seccompProfile:
              type: RuntimeDefault
          livenessProbe:
            tcpSocket:
              port: 8899
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 8899
            initialDelaySeconds: 5
            periodSeconds: 3
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 2
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - sleep 5
          volumeMounts:
            - name: esconfig
              mountPath: /usr/local/etc/haproxy/haproxy.cfg
              readOnly: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - haproxy
