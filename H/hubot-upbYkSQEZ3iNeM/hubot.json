[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis",
      "labels": {
        "app": "redis",
        "chart": "redis-9.4.3",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "redis.conf": "# User-supplied configuration:\n# Enable AOF https://redis.io/topics/persistence#append-only-file\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"",
      "master.conf": "dir /data\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"",
      "replica.conf": "dir /data\nslave-read-only yes\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-health",
      "labels": {
        "app": "redis",
        "chart": "redis-9.4.3",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "ping_readiness_local.sh": "response=$(\n  timeout -s 9 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_local.sh": "response=$(\n  timeout -s 9 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_master.sh": "response=$(\n  timeout -s 9 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_master.sh": "response=$(\n  timeout -s 9 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-hubot-external-scripts",
      "labels": {
        "app.kubernetes.io/name": "hubot",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "hubot-1.0.2"
      }
    },
    "data": {
      "external-scripts.json": "[\n  \"hubot-diagnostics\",\n  \"hubot-help\",\n  \"hubot-redis-brain\",\n  \"hubot-rules\",\n  \"hubot-health\"\n]"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-headless",
      "labels": {
        "app": "redis",
        "chart": "redis-9.4.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "redis",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-master",
      "labels": {
        "app": "redis",
        "chart": "redis-9.4.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "redis",
        "release": "release-name",
        "role": "master"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-hubot",
      "labels": {
        "app.kubernetes.io/name": "hubot",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "hubot-1.0.2"
      }
    },
    "spec": {
      "type": "NodePort",
      "ports": [
        {
          "name": "http",
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "hubot",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-hubot",
      "labels": {
        "app.kubernetes.io/name": "hubot",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "hubot-1.0.2"
      }
    },
    "spec": {
      "replicas": 1,
      "strategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "hubot",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
            "checksum/secret-config": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
            "checksum/external-scripts.json": "36252199f63d1450e6dc110fea767f18565b8db9efa7ecd1bcf6a0c9bac77d0a"
          },
          "labels": {
            "app.kubernetes.io/name": "hubot",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "initContainers": [
            {
              "name": "wait-for-redis",
              "image": "busybox",
              "env": [
                {
                  "name": "HUBOT_REDIS_HOST",
                  "value": "release-name-redis-master"
                },
                {
                  "name": "HUBOT_REDIS_PORT",
                  "value": "6379"
                }
              ],
              "command": [
                "/bin/sh",
                "-c",
                "until nc -zv $HUBOT_REDIS_HOST $HUBOT_REDIS_PORT -w1; do echo 'waiting for redis'; sleep 1; done"
              ]
            }
          ],
          "containers": [
            {
              "name": "hubot",
              "image": "decayofmind/hubot:3.3.2",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--name",
                "${HUBOT_NAME}",
                "--adapter",
                "slack"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/health",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/health",
                  "port": "http"
                }
              },
              "volumeMounts": [
                {
                  "name": "release-name-hubot-external-scripts",
                  "mountPath": "/home/hubot/external-scripts.json",
                  "subPath": "external-scripts.json",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "REDIS_URL",
                  "value": "redis://release-name-redis-master:/hubot"
                },
                {
                  "name": "EXTRA_PACKAGES",
                  "value": ""
                }
              ],
              "envFrom": null,
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "release-name-hubot-external-scripts",
              "configMap": {
                "name": "release-name-hubot-external-scripts"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-redis-master",
      "labels": {
        "app": "redis",
        "chart": "redis-9.4.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "redis",
          "release": "release-name",
          "role": "master"
        }
      },
      "serviceName": "release-name-redis-headless",
      "template": {
        "metadata": {
          "labels": {
            "app": "redis",
            "chart": "redis-9.4.3",
            "release": "release-name",
            "role": "master"
          },
          "annotations": {
            "checksum/health": "0cbbe04eceb88e06c01029335b1a0e7020994afed370ebf048a473bb650cce00",
            "checksum/configmap": "edf918c3b6a8179640307b2131261f666721b1f38a9425b93415670e515ac6c9",
            "checksum/secret": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "default",
          "containers": [
            {
              "name": "release-name-redis",
              "image": "docker.io/bitnami/redis:5.0.5-debian-9-r169",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 11039,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "command": [
                "/bin/bash",
                "-c",
                "if [[ -n $REDIS_PASSWORD_FILE ]]; then\n  password_aux=`cat ${REDIS_PASSWORD_FILE}`\n  export REDIS_PASSWORD=$password_aux\nfi\nif [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--protected-mode\" \"no\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/master.conf\")\n/run.sh ${ARGS[@]}\n"
              ],
              "env": [
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "master"
                },
                {
                  "name": "ALLOW_EMPTY_PASSWORD",
                  "value": "yes"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 5"
                  ]
                }
              },
              "resources": null,
              "volumeMounts": [
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc/"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "health",
              "configMap": {
                "name": "release-name-redis-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-redis"
              }
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "redis-data",
            "labels": {
              "app": "redis",
              "release": "release-name",
              "heritage": "Helm",
              "component": "master"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ],
      "updateStrategy": {
        "type": "RollingUpdate"
      }
    }
  }
]