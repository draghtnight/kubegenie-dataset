apiVersion: v1
kind: Secret
metadata:
  name: release-name-minio
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-0.1.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  access-key: Ym5WejIzNGdyVw==
  secret-key: SmVHWFR3SXBGSDU4a1dkRWlSTE05c1FkdnNwM2VDZHVrZnNxYkpGMg==
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-minio
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-0.1.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-minio
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-0.1.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: minio
      port: 9000
      targetPort: minio
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: release-name
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-minio
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-0.1.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/instance: release-name
        helm.sh/chart: minio-0.1.3
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: minio
                    app.kubernetes.io/instance: release-name
      securityContext:
        fsGroup: 1001
      containers:
        - name: minio
          image: docker.io/bitnami/minio:2019.5.14
          imagePullPolicy: Always
          securityContext:
            runAsUser: 11476
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-minio
                  key: access-key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-minio
                  key: secret-key
            - name: MINIO_BROWSER
              value: "on"
          ports:
            - name: minio
              containerPort: 9000
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /minio/health/live
              port: minio
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            tcpSocket:
              port: minio
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-minio
