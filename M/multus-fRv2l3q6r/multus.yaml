apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-multus
  labels:
    helm.sh/chart: multus-3.4.2
    app.kubernetes.io/name: multus
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v3.7.1
    app.kubernetes.io/managed-by: Helm
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-multus
  labels:
    helm.sh/chart: multus-3.4.2
    app.kubernetes.io/name: multus
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v3.7.1
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - k8s.cni.cncf.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/status
    verbs:
      - get
      - update
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-multus
  labels:
    helm.sh/chart: multus-3.4.2
    app.kubernetes.io/name: multus
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v3.7.1
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-multus
subjects:
  - kind: ServiceAccount
    name: release-name-multus
    namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-multus
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: multus
    app.kubernetes.io/version: v3.7.1
    helm.sh/chart: multus-3.4.2
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: multus
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: multus
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-multus
      automountServiceAccountToken: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      enableServiceLinks: true
      initContainers:
        - image: ghcr.io/k8s-at-home/cni-plugins:v0.9.1
          imagePullPolicy: IfNotPresent
          name: cni-installer
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cnibin
      containers:
        - name: release-name-multus
          image: ghcr.io/k8snetworkplumbingwg/multus-cni:v3.7.1
          imagePullPolicy: IfNotPresent
          command:
            - /entrypoint.sh
          args:
            - --multus-conf-file=auto
            - --cleanup-config-on-exit=true
            - --cni-version=0.3.1
            - --multus-kubeconfig-file-host=/var/lib/rancher/k3s/agent/etc/cni/net.d/multus.d/multus.kubeconfig
          securityContext:
            privileged: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          ports: null
          volumeMounts:
            - name: cni
              mountPath: /host/etc/cni/net.d
            - name: cnibin
              mountPath: /host/opt/cni/bin
      volumes:
        - name: cni
          hostPath:
            path: /var/lib/rancher/k3s/agent/etc/cni/net.d
            type: Directory
        - name: cnibin
          hostPath:
            path: /var/lib/rancher/k3s/data/current/bin
            type: Directory
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-multus-pod-test
  labels:
    helm.sh/chart: multus-3.4.2
    app.kubernetes.io/name: multus
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v3.7.1
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
    k8s.v1.cni.cncf.io/networks: |
      [{
        "name": "release-name-multus-test"
      }]
spec:
  containers:
    - name: podt-test
      image: alpine
      command:
        - /bin/true
  restartPolicy: Never
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-multus-uninstall
  labels:
    helm.sh/chart: multus-3.4.2
    app.kubernetes.io/name: multus
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v3.7.1
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  template:
    metadata:
      name: release-name-multus-uninstall
      labels:
        helm.sh/chart: multus-3.4.2
        app.kubernetes.io/name: multus
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: v3.7.1
        app.kubernetes.io/managed-by: Helm
    spec:
      restartPolicy: OnFailure
      containers:
        - name: remove-config
          image: alpine
          command:
            - /bin/sh
            - -c
            - rm -rf  /host/etc/cni/net.d/*multus*
          volumeMounts:
            - name: cni
              mountPath: /host/etc/cni/net.d
      volumes:
        - name: cni
          hostPath:
            path: /var/lib/rancher/k3s/agent/etc/cni/net.d
            type: Directory
---
apiVersion: k8s.cni.cncf.io/v1
kind: NetworkAttachmentDefinition
metadata:
  name: release-name-multus-test
  labels:
    helm.sh/chart: multus-3.4.2
    app.kubernetes.io/name: multus
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v3.7.1
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  config: '{ "cniVersion": "0.3.1", "name": "release-name-multus-test", "type": "macvlan", "capabilities": { "ips": true } }'
