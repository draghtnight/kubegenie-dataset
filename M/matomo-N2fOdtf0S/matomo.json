[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-mariadb",
      "namespace": "N2fOdtf0S",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-9.2.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-matomo",
      "labels": {
        "helm.sh/chart": "matomo-4.1.1_01",
        "app.kubernetes.io/name": "matomo",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.1.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-mariadb",
      "namespace": "N2fOdtf0S",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-9.2.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "mariadb-root-password": "bWF0b21v",
      "mariadb-password": "bWF0b21v"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-redis",
      "namespace": "N2fOdtf0S",
      "labels": {
        "app": "redis",
        "chart": "redis-12.6.2",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "redis-password": "bWF0b21v"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-matomo",
      "namespace": "N2fOdtf0S",
      "labels": {
        "helm.sh/chart": "matomo-4.1.1_01",
        "app.kubernetes.io/name": "matomo",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.1.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "ALLOW_EMPTY_PASSWORD": "bm8=",
      "MATOMO_HOST": "Y2hhcnQtZXhhbXBsZS5sb2NhbA==",
      "MATOMO_USERNAME": "YWRtaW4=",
      "MATOMO_PASSWORD": "TXkkdXBlciRlY3JldFBhc3N3b3JkMTIzIw==",
      "MATOMO_EMAIL": "YWRtaW5AY2hhcnQtZXhhbXBsZS5sb2NhbA==",
      "MATOMO_WEBSITE_NAME": "VHJhY2tlZCBXZWJzaXRl",
      "MATOMO_WEBSITE_HOST": "aHR0cHM6Ly90cmFja2VkLXdlYnNpdGUubG9jYWw=",
      "MATOMO_DATABASE_HOST": "cmVsZWFzZS1uYW1lLW1hcmlhZGI=",
      "MATOMO_DATABASE_PORT_NUMBER": "MzMwNg==",
      "MATOMO_DATABASE_NAME": "bWF0b21v",
      "MATOMO_DATABASE_USER": "bWF0b21v",
      "MATOMO_DATABASE_PASSWORD": "bWF0b21v",
      "MATOMO_CACHE_HOST": "cmVsZWFzZS1uYW1lLXJlZGlzLW1hc3Rlcg==",
      "MATOMO_CACHE_PORT_NUMBER": "NjM3OQ==",
      "MATOMO_CACHE_PASSWORD": "bWF0b21v",
      "MATOMO_CACHE_DATABASE_NUMBER": "MA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-mariadb",
      "namespace": "N2fOdtf0S",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-9.2.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      }
    },
    "data": {
      "my.cnf": "[mysqld]\nskip-name-resolve\nexplicit_defaults_for_timestamp\nbasedir=/opt/bitnami/mariadb\nplugin_dir=/opt/bitnami/mariadb/plugin\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\ntmpdir=/opt/bitnami/mariadb/tmp\nmax_allowed_packet=128M\nbind-address=0.0.0.0\npid-file=/opt/bitnami/mariadb/tmp/mysqld.pid\nlog-error=/opt/bitnami/mariadb/logs/mysqld.log\ncharacter-set-server=UTF8\ncollation-server=utf8_general_ci\n\n[client]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\ndefault-character-set=UTF8\nplugin_dir=/opt/bitnami/mariadb/plugin\n\n[manager]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\npid-file=/opt/bitnami/mariadb/tmp/mysqld.pid"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-scripts",
      "namespace": "N2fOdtf0S",
      "labels": {
        "app": "redis",
        "chart": "redis-12.6.2",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "start-master.sh": "#!/bin/bash\nif [[ -n $REDIS_PASSWORD_FILE ]]; then\n  password_aux=`cat ${REDIS_PASSWORD_FILE}`\n  export REDIS_PASSWORD=$password_aux\nfi\nif [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/master.conf\")\nexec /run.sh \"${ARGS[@]}\"\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis",
      "namespace": "N2fOdtf0S",
      "labels": {
        "app": "redis",
        "chart": "redis-12.6.2",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "redis.conf": "# User-supplied configuration:\n# Enable AOF https://redis.io/topics/persistence#append-only-file\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"",
      "master.conf": "dir /data\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"",
      "replica.conf": "dir /data\nslave-read-only yes\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-health",
      "namespace": "N2fOdtf0S",
      "labels": {
        "app": "redis",
        "chart": "redis-12.6.2",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "ping_readiness_local.sh": "#!/bin/bash\nexport REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_local.sh": "#!/bin/bash\nexport REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_master.sh": "#!/bin/bash\nexport REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_master.sh": "#!/bin/bash\nexport REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-mariadb",
      "namespace": "N2fOdtf0S",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-9.2.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "mysql",
          "port": 3306,
          "protocol": "TCP",
          "targetPort": "mysql",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "mariadb",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-headless",
      "namespace": "N2fOdtf0S",
      "labels": {
        "app": "redis",
        "chart": "redis-12.6.2",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "redis",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "N2fOdtf0S",
      "labels": {
        "app": "redis",
        "chart": "redis-12.6.2",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "redis",
        "release": "release-name",
        "role": "master"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-matomo",
      "labels": {
        "helm.sh/chart": "matomo-4.1.1_01",
        "app.kubernetes.io/name": "matomo",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.1.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "matomo",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-matomo",
      "labels": {
        "helm.sh/chart": "matomo-4.1.1_01",
        "app.kubernetes.io/name": "matomo",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.1.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "matomo",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "matomo",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-matomo",
          "securityContext": {},
          "initContainers": [
            {
              "args": [
                "for i in {30..0}; do redis-cli -h ${MATOMO_CACHE_HOST} -a ${MATOMO_CACHE_PASSWORD} ping &> /dev/null; if [[ $? == 0 ]]; then echo \"Connection to Redis established.\"; exit 0; fi; echo \"Redis init process in progress...\"; sleep 1; done; echo \"No connection to Redis could be established!\"; exit 1;"
              ],
              "command": [
                "/bin/bash",
                "-c"
              ],
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-matomo"
                  }
                }
              ],
              "image": "library/redis",
              "imagePullPolicy": "Always",
              "name": "redis-init",
              "resources": {
                "requests": {
                  "memory": "50Mi"
                }
              }
            },
            {
              "args": [
                "for i in {30..0}; do mysql -h${MATOMO_DATABASE_HOST} -u${MATOMO_DATABASE_USER} -p${MATOMO_DATABASE_PASSWORD} -N -e \"SELECT 1\" &> /dev/null; if [[ $? == 0 ]]; then echo \"Connection to MariaDB established.\"; exit 0; fi; echo \"MariaDB init process in progress...\"; sleep 1; done; echo \"No connection to MariaDB could be established!\"; exit 1;"
              ],
              "command": [
                "/bin/bash",
                "-c"
              ],
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-matomo"
                  }
                }
              ],
              "image": "library/mariadb",
              "imagePullPolicy": "Always",
              "name": "mariadb-init",
              "resources": {
                "requests": {
                  "memory": "50Mi"
                }
              }
            }
          ],
          "containers": [
            {
              "name": "matomo",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "bitnami/matomo:4.1.1",
              "imagePullPolicy": "IfNotPresent",
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-matomo"
                  }
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                },
                {
                  "name": "https",
                  "containerPort": 8443,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "https",
                  "scheme": "HTTPS"
                },
                "initialDelaySeconds": 90
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "https",
                  "scheme": "HTTPS"
                },
                "initialDelaySeconds": 90
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-mariadb",
      "namespace": "N2fOdtf0S",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-9.2.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "mariadb",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "primary"
        }
      },
      "serviceName": "release-name-mariadb",
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/configuration": "92974429f3bd59db199dd112e70d180f55bf2044d420bc28f3410a180926fd2c"
          },
          "labels": {
            "app.kubernetes.io/name": "mariadb",
            "helm.sh/chart": "mariadb-9.2.4",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "primary"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-mariadb",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "mariadb",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "containers": [
            {
              "name": "mariadb",
              "image": "docker.io/bitnami/mariadb:10.5.8-debian-10-r46",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "true"
                },
                {
                  "name": "MARIADB_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-mariadb",
                      "key": "mariadb-root-password"
                    }
                  }
                },
                {
                  "name": "MARIADB_USER",
                  "value": "matomo"
                },
                {
                  "name": "MARIADB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-mariadb",
                      "key": "mariadb-password"
                    }
                  }
                },
                {
                  "name": "MARIADB_DATABASE",
                  "value": "matomo"
                }
              ],
              "ports": [
                {
                  "name": "mysql",
                  "containerPort": 3306
                }
              ],
              "livenessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 120,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                  ]
                }
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/bitnami/mariadb"
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/mariadb/conf/my.cnf",
                  "subPath": "my.cnf"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-mariadb"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data",
            "labels": {
              "app.kubernetes.io/name": "mariadb",
              "app.kubernetes.io/instance": "release-name",
              "app.kubernetes.io/component": "primary"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "N2fOdtf0S",
      "labels": {
        "app": "redis",
        "chart": "redis-12.6.2",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "redis",
          "release": "release-name",
          "role": "master"
        }
      },
      "serviceName": "release-name-redis-headless",
      "template": {
        "metadata": {
          "labels": {
            "app": "redis",
            "chart": "redis-12.6.2",
            "release": "release-name",
            "role": "master"
          },
          "annotations": {
            "checksum/health": "4c751a36609aecfbabc5649953c5044a041152cde828e0fa6e7db6301ef41a2a",
            "checksum/configmap": "4be0f123d5be668f65bf4dc47f4044c90b67f92f9418b2c37d597def100502bd",
            "checksum/secret": "4d9a59aea5a972fed0cc7499c815ddc067579183a8bc542122f668f1a54c0f8f"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "containers": [
            {
              "name": "redis",
              "image": "docker.io/bitnami/redis:6.0.10-debian-10-r1",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/opt/bitnami/scripts/start-scripts/start-master.sh"
              ],
              "env": [
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "master"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-redis",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_TLS_ENABLED",
                  "value": "no"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 6,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 2,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 1"
                  ]
                }
              },
              "resources": null,
              "volumeMounts": [
                {
                  "name": "start-scripts",
                  "mountPath": "/opt/bitnami/scripts/start-scripts"
                },
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc/"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "start-scripts",
              "configMap": {
                "name": "release-name-redis-scripts",
                "defaultMode": 493
              }
            },
            {
              "name": "health",
              "configMap": {
                "name": "release-name-redis-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-redis"
              }
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "redis-data",
            "labels": {
              "app": "redis",
              "release": "release-name",
              "heritage": "Helm",
              "component": "master"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            },
            "selector": null
          }
        }
      ],
      "updateStrategy": {
        "type": "RollingUpdate"
      }
    }
  },
  {
    "apiVersion": "route.openshift.io/v1",
    "kind": "Route",
    "metadata": {
      "name": "release-name-matomo",
      "labels": {
        "helm.sh/chart": "matomo-4.1.1_01",
        "app.kubernetes.io/name": "matomo",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.1.1",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "haproxy.router.openshift.io/balance": "roundrobin"
      }
    },
    "spec": {
      "port": {
        "targetPort": "http"
      },
      "to": {
        "kind": "Service",
        "name": "release-name-matomo",
        "weight": 100
      },
      "tls": {
        "insecureEdgeTerminationPolicy": "Redirect",
        "termination": "edge"
      },
      "wildcardPolicy": "None"
    },
    "status": {
      "ingress": [
        {
          "conditions": [
            {
              "status": "True",
              "type": "Admitted"
            }
          ]
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-matomo-test-connection",
      "labels": {
        "helm.sh/chart": "matomo-4.1.1_01",
        "app.kubernetes.io/name": "matomo",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.1.1",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-matomo:80"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]