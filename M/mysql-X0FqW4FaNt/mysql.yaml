apiVersion: v1
kind: Secret
metadata:
  name: release-name-mysql
  labels:
    helm.sh/chart: mysql-0.1.0
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mysql-root-password: RnJGSjB4cE05aQ==
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: release-name-mysql-data-volume
  labels:
    helm.sh/chart: mysql-0.1.0
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  claimRef:
    namespace: default
    name: release-name-mysql-data-claim
  gcePersistentDisk:
    pdName: prod-db-1-disk
    fsType: ext4
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-mysql-data-claim
  labels:
    helm.sh/chart: mysql-0.1.0
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-mysql
  labels:
    helm.sh/chart: mysql-0.1.0
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: mysql
      protocol: TCP
      name: mysql
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mysql
  labels:
    helm.sh/chart: mysql-0.1.0
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
        app.kubernetes.io/instance: release-name
    spec:
      securityContext: {}
      containers:
        - name: mysql
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: mysql:5.6
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mysql
                  key: mysql-root-password
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: release-name-mysql-data-claim
