apiVersion: v1
kind: ConfigMap
metadata:
  name: mongooseim
  labels:
    app: mongooseim
data:
  mongooseim.toml: |-
    [general]
      loglevel = "warning"
      default_server_domain = "localhost"
      hosts = ["localhost"]
      registration_timeout = "infinity"
      language = "en"
      all_metrics_are_global = false
      sm_backend = "mnesia"
      max_fsm_queue = 1000

    [[listen.http]]
      port = 5280
      transport.num_acceptors = 10
      transport.max_connections = 1024

      [[listen.http.handlers.mod_bosh]]
        host = "_"
        path = "/http-bind"

      [[listen.http.handlers.mod_websockets]]
        host = "_"
        path = "/ws-xmpp"

        [listen.http.handlers.mod_websockets.service]
          access = "all"
          shaper_rule = "fast"
          password = "secret"

    [[listen.http]]
      port = 5285
      transport.num_acceptors = 10
      transport.max_connections = 1024
      tls.verify_mode = "none"
      tls.certfile = "priv/ssl/fake_cert.pem"
      tls.keyfile = "priv/ssl/fake_key.pem"
      tls.password =  ""

      [[listen.http.handlers.mod_bosh]]
        host = "_"
        path = "/http-bind"

      [[listen.http.handlers.mod_websockets]]
        host = "_"
        path = "/ws-xmpp"

    [[listen.http]]
      ip_address = "127.0.0.1"
      port = 8088
      transport.num_acceptors = 10
      transport.max_connections = 1024

      [[listen.http.handlers.mongoose_api_admin]]
        host = "localhost"
        path = "/api"

      [[listen.http.handlers.mongoose_domain_handler]]
        host = "localhost"
        path = "/api"

    [[listen.http]]
      port = 8089
      transport.num_acceptors = 10
      transport.max_connections = 1024
      protocol.compress = true
      tls.verify_mode = "none"
      tls.certfile = "priv/ssl/fake_cert.pem"
      tls.keyfile = "priv/ssl/fake_key.pem"
      tls.password =  ""

      [[listen.http.handlers.mongoose_client_api]]
        host = "_"
        path = "/api"

    [[listen.http]]
      ip_address = "127.0.0.1"
      port = 5288
      transport.num_acceptors = 10
      transport.max_connections = 1024

      [[listen.http.handlers.mongoose_api]]
        host = "localhost"
        path = "/api"

    [[listen.c2s]]
      port = 5222
      zlib = 10_000
      access = "c2s"
      shaper = "c2s_shaper"
      max_stanza_size = 65536
      tls.verify_mode = "none"
      tls.certfile = "priv/ssl/fake_server.pem"
      tls.dhfile = "priv/ssl/fake_dh_server.pem"

    [[listen.s2s]]
      port = 5269
      shaper = "s2s_shaper"
      max_stanza_size = 131072

    [[listen.service]]
      port = 8888
      access = "all"
      shaper_rule = "fast"
      ip_address = "127.0.0.1"
      password = "secret"

    [auth]

      [auth.password]
        format = "scram"
        hash = ["sha256"]
        scram_iterations = 64

      [auth.internal]

    #[outgoing_pools.rdbms.default]
    #  scope = "global"
    #  workers = 5
    #
    #  [outgoing_pools.rdbms.default.connection]
    #    driver = "pgsql"
    #    host = "localhost"
    #    database = "mongooseim"
    #    username = "mongooseim"
    #    password = "mongooseim_secret"
    #    tls.required = true
    #    tls.cacertfile = "priv/ssl/cacert.pem"
    #    tls.server_name_indication.enabled = false

    [services.service_admin_extra]

    [services.service_mongoose_system_metrics]

    [modules.mod_adhoc]

    [modules.mod_disco]
      users_can_see_hidden_services = false

    [modules.mod_commands]

    [modules.mod_muc_commands]

    [modules.mod_muc_light_commands]

    [modules.mod_last]

    [modules.mod_stream_management]

    [modules.mod_offline]
      access_max_user_messages = "max_user_offline_messages"

    [modules.mod_privacy]

    [modules.mod_blocking]

    [modules.mod_private]
      backend = "mnesia"

    [modules.mod_register]
      ip_access = [
        {address = "127.0.0.0/8", policy = "allow"},
        {address = "0.0.0.0/0", policy = "deny"}
      ]
      access = "register"

    [modules.mod_roster]

    [modules.mod_sic]

    [modules.mod_vcard]
      host = "vjud.@HOST@"

    [modules.mod_bosh]

    [modules.mod_carboncopy]

    [shaper.normal]
      max_rate = 1000

    [shaper.fast]
      max_rate = 50_000

    [shaper.mam_shaper]
      max_rate = 1

    [shaper.mam_global_shaper]
      max_rate = 1000

    [acl]
      local = [
        {user_regexp = ""}
      ]

    [access]
      max_user_sessions = [
        {acl = "all", value = 10}
      ]

      max_user_offline_messages = [
        {acl = "admin", value = 5000},
        {acl = "all", value = 100}
      ]

      local = [
        {acl = "local", value = "allow"}
      ]

      c2s = [
        {acl = "blocked", value = "deny"},
        {acl = "all", value = "allow"}
      ]

      c2s_shaper = [
        {acl = "admin", value = "none"},
        {acl = "all", value = "normal"}
      ]

      s2s_shaper = [
        {acl = "all", value = "fast"}
      ]

      muc_admin = [
        {acl = "admin", value = "allow"}
      ]

      muc_create = [
        {acl = "local", value = "allow"}
      ]

      muc = [
        {acl = "all", value = "allow"}
      ]

      register = [
        {acl = "all", value = "allow"}
      ]

      mam_set_prefs = [
        {acl = "all", value = "default"}
      ]

      mam_get_prefs = [
        {acl = "all", value = "default"}
      ]

      mam_lookup_messages = [
        {acl = "all", value = "default"}
      ]

      mam_set_prefs_shaper = [
        {acl = "all", value = "mam_shaper"}
      ]

      mam_get_prefs_shaper = [
        {acl = "all", value = "mam_shaper"}
      ]

      mam_lookup_messages_shaper = [
        {acl = "all", value = "mam_shaper"}
      ]

      mam_set_prefs_global_shaper = [
        {acl = "all", value = "mam_global_shaper"}
      ]

      mam_get_prefs_global_shaper = [
        {acl = "all", value = "mam_global_shaper"}
      ]

      mam_lookup_messages_global_shaper = [
        {acl = "all", value = "mam_global_shaper"}
      ]

    [s2s]
      use_starttls = "optional"
      certfile = "priv/ssl/fake_server.pem"
      default_policy = "deny"
      outgoing.port = 5269

    #[[host_config]]
    #  host = "anonymous.localhost"
    #
    #  [host_config.auth]
    #    methods = ["anonymous"]
    #    anonymous.allow_multiple_connections = true
    #    anonymous.protocol = "both"
  vm.args: |-
    ## Name of the node.
    -name mongooseim

    ## Cookie for distributed erlang
    -setcookie mongooseim

    ## Enable more processes (10M)
    +P 10000000

    ## Increase number of concurrent ports/sockets
    -env ERL_MAX_PORTS 250000

    ## Tweak GC to run more often
    -env ERL_FULLSWEEP_AFTER 2

    ## With lager sasl reports are redundant so turn them off
    -sasl sasl_error_logger false

    -kernel inet_dist_listen_min 9100
    -kernel inet_dist_listen_max 9100
---
apiVersion: v1
kind: Service
metadata:
  name: mongooseim-lb
  namespace: null
  labels: null
spec:
  ports:
    - protocol: TCP
      port: 5222
      targetPort: 5222
  selector:
    app: mongooseim
  type: LoadBalancer
  loadBalancerIP: null
---
apiVersion: v1
kind: Service
metadata:
  name: mongooseim
  labels:
    app: mongooseim
spec:
  ports:
    - name: epmd
      port: 4369
      targetPort: 4369
    - name: c2s
      port: 5222
      targetPort: 5222
    - name: s2s
      port: 5269
      targetPort: 5269
    - name: bosh
      port: 5280
      targetPort: 5280
    - name: erlang-dist
      targetPort: 9100
      port: 9100
  clusterIP: None
  selector:
    app: mongooseim
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongooseim
  namespace: null
  labels:
    type: statefulset
spec:
  serviceName: mongooseim
  replicas: 1
  selector:
    matchLabels:
      app: mongooseim
  template:
    metadata:
      labels:
        app: mongooseim
    spec:
      subdomain: mongooseim
      containers:
        - name: mongooseim
          image: mongooseim/mongooseim:5.1.0
          env:
            - name: MASTER_ORDINAL
              value: "0"
            - name: NODE_TYPE
              value: name
            - name: NODE_NAME
              value: mongooseim
          ports:
            - name: epmd
              containerPort: 4369
            - name: c2s
              containerPort: 5222
            - name: s2s
              containerPort: 5269
            - name: bosh
              containerPort: 5280
            - name: erlang-dist
              containerPort: 9100
          readinessProbe:
            tcpSocket:
              port: c2s
            initialDelaySeconds: 60
            periodSeconds: 10
          volumeMounts:
            - name: config-map
              mountPath: /member
            - name: mnesia
              mountPath: /var/lib/mongooseim
      volumes:
        - name: config-map
          configMap:
            name: mongooseim
  volumeClaimTemplates:
    - metadata:
        name: mnesia
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
