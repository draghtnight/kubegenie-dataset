[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "mongooseim",
      "labels": {
        "app": "mongooseim"
      }
    },
    "data": {
      "mongooseim.toml": "[general]\n  loglevel = \"warning\"\n  default_server_domain = \"localhost\"\n  hosts = [\"localhost\"]\n  registration_timeout = \"infinity\"\n  language = \"en\"\n  all_metrics_are_global = false\n  sm_backend = \"mnesia\"\n  max_fsm_queue = 1000\n\n[[listen.http]]\n  port = 5280\n  transport.num_acceptors = 10\n  transport.max_connections = 1024\n\n  [[listen.http.handlers.mod_bosh]]\n    host = \"_\"\n    path = \"/http-bind\"\n\n  [[listen.http.handlers.mod_websockets]]\n    host = \"_\"\n    path = \"/ws-xmpp\"\n\n    [listen.http.handlers.mod_websockets.service]\n      access = \"all\"\n      shaper_rule = \"fast\"\n      password = \"secret\"\n\n[[listen.http]]\n  port = 5285\n  transport.num_acceptors = 10\n  transport.max_connections = 1024\n  tls.verify_mode = \"none\"\n  tls.certfile = \"priv/ssl/fake_cert.pem\"\n  tls.keyfile = \"priv/ssl/fake_key.pem\"\n  tls.password =  \"\"\n\n  [[listen.http.handlers.mod_bosh]]\n    host = \"_\"\n    path = \"/http-bind\"\n\n  [[listen.http.handlers.mod_websockets]]\n    host = \"_\"\n    path = \"/ws-xmpp\"\n\n[[listen.http]]\n  ip_address = \"127.0.0.1\"\n  port = 8088\n  transport.num_acceptors = 10\n  transport.max_connections = 1024\n\n  [[listen.http.handlers.mongoose_api_admin]]\n    host = \"localhost\"\n    path = \"/api\"\n\n  [[listen.http.handlers.mongoose_domain_handler]]\n    host = \"localhost\"\n    path = \"/api\"\n\n[[listen.http]]\n  port = 8089\n  transport.num_acceptors = 10\n  transport.max_connections = 1024\n  protocol.compress = true\n  tls.verify_mode = \"none\"\n  tls.certfile = \"priv/ssl/fake_cert.pem\"\n  tls.keyfile = \"priv/ssl/fake_key.pem\"\n  tls.password =  \"\"\n\n  [[listen.http.handlers.mongoose_client_api]]\n    host = \"_\"\n    path = \"/api\"\n\n[[listen.http]]\n  ip_address = \"127.0.0.1\"\n  port = 5288\n  transport.num_acceptors = 10\n  transport.max_connections = 1024\n\n  [[listen.http.handlers.mongoose_api]]\n    host = \"localhost\"\n    path = \"/api\"\n\n[[listen.c2s]]\n  port = 5222\n  zlib = 10_000\n  access = \"c2s\"\n  shaper = \"c2s_shaper\"\n  max_stanza_size = 65536\n  tls.verify_mode = \"none\"\n  tls.certfile = \"priv/ssl/fake_server.pem\"\n  tls.dhfile = \"priv/ssl/fake_dh_server.pem\"\n\n[[listen.s2s]]\n  port = 5269\n  shaper = \"s2s_shaper\"\n  max_stanza_size = 131072\n\n[[listen.service]]\n  port = 8888\n  access = \"all\"\n  shaper_rule = \"fast\"\n  ip_address = \"127.0.0.1\"\n  password = \"secret\"\n\n[auth]\n\n  [auth.password]\n    format = \"scram\"\n    hash = [\"sha256\"]\n    scram_iterations = 64\n\n  [auth.internal]\n\n#[outgoing_pools.rdbms.default]\n#  scope = \"global\"\n#  workers = 5\n#\n#  [outgoing_pools.rdbms.default.connection]\n#    driver = \"pgsql\"\n#    host = \"localhost\"\n#    database = \"mongooseim\"\n#    username = \"mongooseim\"\n#    password = \"mongooseim_secret\"\n#    tls.required = true\n#    tls.cacertfile = \"priv/ssl/cacert.pem\"\n#    tls.server_name_indication.enabled = false\n\n[services.service_admin_extra]\n\n[services.service_mongoose_system_metrics]\n\n[modules.mod_adhoc]\n\n[modules.mod_disco]\n  users_can_see_hidden_services = false\n\n[modules.mod_commands]\n\n[modules.mod_muc_commands]\n\n[modules.mod_muc_light_commands]\n\n[modules.mod_last]\n\n[modules.mod_stream_management]\n\n[modules.mod_offline]\n  access_max_user_messages = \"max_user_offline_messages\"\n\n[modules.mod_privacy]\n\n[modules.mod_blocking]\n\n[modules.mod_private]\n  backend = \"mnesia\"\n\n[modules.mod_register]\n  ip_access = [\n    {address = \"127.0.0.0/8\", policy = \"allow\"},\n    {address = \"0.0.0.0/0\", policy = \"deny\"}\n  ]\n  access = \"register\"\n\n[modules.mod_roster]\n\n[modules.mod_sic]\n\n[modules.mod_vcard]\n  host = \"vjud.@HOST@\"\n\n[modules.mod_bosh]\n\n[modules.mod_carboncopy]\n\n[shaper.normal]\n  max_rate = 1000\n\n[shaper.fast]\n  max_rate = 50_000\n\n[shaper.mam_shaper]\n  max_rate = 1\n\n[shaper.mam_global_shaper]\n  max_rate = 1000\n\n[acl]\n  local = [\n    {user_regexp = \"\"}\n  ]\n\n[access]\n  max_user_sessions = [\n    {acl = \"all\", value = 10}\n  ]\n\n  max_user_offline_messages = [\n    {acl = \"admin\", value = 5000},\n    {acl = \"all\", value = 100}\n  ]\n\n  local = [\n    {acl = \"local\", value = \"allow\"}\n  ]\n\n  c2s = [\n    {acl = \"blocked\", value = \"deny\"},\n    {acl = \"all\", value = \"allow\"}\n  ]\n\n  c2s_shaper = [\n    {acl = \"admin\", value = \"none\"},\n    {acl = \"all\", value = \"normal\"}\n  ]\n\n  s2s_shaper = [\n    {acl = \"all\", value = \"fast\"}\n  ]\n\n  muc_admin = [\n    {acl = \"admin\", value = \"allow\"}\n  ]\n\n  muc_create = [\n    {acl = \"local\", value = \"allow\"}\n  ]\n\n  muc = [\n    {acl = \"all\", value = \"allow\"}\n  ]\n\n  register = [\n    {acl = \"all\", value = \"allow\"}\n  ]\n\n  mam_set_prefs = [\n    {acl = \"all\", value = \"default\"}\n  ]\n\n  mam_get_prefs = [\n    {acl = \"all\", value = \"default\"}\n  ]\n\n  mam_lookup_messages = [\n    {acl = \"all\", value = \"default\"}\n  ]\n\n  mam_set_prefs_shaper = [\n    {acl = \"all\", value = \"mam_shaper\"}\n  ]\n\n  mam_get_prefs_shaper = [\n    {acl = \"all\", value = \"mam_shaper\"}\n  ]\n\n  mam_lookup_messages_shaper = [\n    {acl = \"all\", value = \"mam_shaper\"}\n  ]\n\n  mam_set_prefs_global_shaper = [\n    {acl = \"all\", value = \"mam_global_shaper\"}\n  ]\n\n  mam_get_prefs_global_shaper = [\n    {acl = \"all\", value = \"mam_global_shaper\"}\n  ]\n\n  mam_lookup_messages_global_shaper = [\n    {acl = \"all\", value = \"mam_global_shaper\"}\n  ]\n\n[s2s]\n  use_starttls = \"optional\"\n  certfile = \"priv/ssl/fake_server.pem\"\n  default_policy = \"deny\"\n  outgoing.port = 5269\n\n#[[host_config]]\n#  host = \"anonymous.localhost\"\n#\n#  [host_config.auth]\n#    methods = [\"anonymous\"]\n#    anonymous.allow_multiple_connections = true\n#    anonymous.protocol = \"both\"",
      "vm.args": "## Name of the node.\n-name mongooseim\n\n## Cookie for distributed erlang\n-setcookie mongooseim\n\n## Enable more processes (10M)\n+P 10000000\n\n## Increase number of concurrent ports/sockets\n-env ERL_MAX_PORTS 250000\n\n## Tweak GC to run more often\n-env ERL_FULLSWEEP_AFTER 2\n\n## With lager sasl reports are redundant so turn them off\n-sasl sasl_error_logger false\n\n-kernel inet_dist_listen_min 9100\n-kernel inet_dist_listen_max 9100"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "mongooseim-lb",
      "namespace": null,
      "labels": null
    },
    "spec": {
      "ports": [
        {
          "protocol": "TCP",
          "port": 5222,
          "targetPort": 5222
        }
      ],
      "selector": {
        "app": "mongooseim"
      },
      "type": "LoadBalancer",
      "loadBalancerIP": null
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "mongooseim",
      "labels": {
        "app": "mongooseim"
      }
    },
    "spec": {
      "ports": [
        {
          "name": "epmd",
          "port": 4369,
          "targetPort": 4369
        },
        {
          "name": "c2s",
          "port": 5222,
          "targetPort": 5222
        },
        {
          "name": "s2s",
          "port": 5269,
          "targetPort": 5269
        },
        {
          "name": "bosh",
          "port": 5280,
          "targetPort": 5280
        },
        {
          "name": "erlang-dist",
          "targetPort": 9100,
          "port": 9100
        }
      ],
      "clusterIP": "None",
      "selector": {
        "app": "mongooseim"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "mongooseim",
      "namespace": null,
      "labels": {
        "type": "statefulset"
      }
    },
    "spec": {
      "serviceName": "mongooseim",
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "mongooseim"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "mongooseim"
          }
        },
        "spec": {
          "subdomain": "mongooseim",
          "containers": [
            {
              "name": "mongooseim",
              "image": "mongooseim/mongooseim:5.1.0",
              "env": [
                {
                  "name": "MASTER_ORDINAL",
                  "value": "0"
                },
                {
                  "name": "NODE_TYPE",
                  "value": "name"
                },
                {
                  "name": "NODE_NAME",
                  "value": "mongooseim"
                }
              ],
              "ports": [
                {
                  "name": "epmd",
                  "containerPort": 4369
                },
                {
                  "name": "c2s",
                  "containerPort": 5222
                },
                {
                  "name": "s2s",
                  "containerPort": 5269
                },
                {
                  "name": "bosh",
                  "containerPort": 5280
                },
                {
                  "name": "erlang-dist",
                  "containerPort": 9100
                }
              ],
              "readinessProbe": {
                "tcpSocket": {
                  "port": "c2s"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 10
              },
              "volumeMounts": [
                {
                  "name": "config-map",
                  "mountPath": "/member"
                },
                {
                  "name": "mnesia",
                  "mountPath": "/var/lib/mongooseim"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config-map",
              "configMap": {
                "name": "mongooseim"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "mnesia"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "1Gi"
              }
            }
          }
        }
      ]
    }
  }
]