apiVersion: v1
kind: Secret
metadata:
  name: mlflow-db
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.14
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: Cv8x9mbVvb
type: Opaque
data:
  postgresql-password: Y2hhbmdlbWU=
---
apiVersion: v1
kind: Secret
metadata:
  name: discoverable-release-name-mlflow
  annotations:
    onyxia/discovery: mlflow
type: Opaque
data:
  uri: aHR0cHM6Ly9jaGFydC1leGFtcGxlLmxvY2Fs
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mlflow-configmaps3
  labels:
    helm.sh/chart: mlflow-3.1.0
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
data:
  AWS_ACCESS_KEY_ID: ""
  AWS_S3_ENDPOINT: ""
  S3_ENDPOINT: https:///
  AWS_DEFAULT_REGION: ""
  AWS_SECRET_ACCESS_KEY: ""
  AWS_SESSION_TOKEN: ""
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-db-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.14
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: Cv8x9mbVvb
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-db
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.14
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
  namespace: Cv8x9mbVvb
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-mlflow
  labels:
    helm.sh/chart: mlflow-3.1.0
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mlflow
  labels:
    helm.sh/chart: mlflow-3.1.0
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mlflow
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mlflow
        app.kubernetes.io/instance: release-name
    spec:
      securityContext: {}
      containers:
        - name: mlflow
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: inseefrlab/mlflow:main
          args:
            - --host=0.0.0.0
            - --port=8000
            - --backend-store-uri=postgresql://:changeme@mlflow-db:5432/mlflow
            - --default-artifact-root=/tmp/mlflow/artifacts/
            - --workers=2
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: release-name-mlflow-configmaps3
          env:
            - name: MLFLOW_S3_ENDPOINT_URL
              value: https://
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            seccompProfile:
              type: RuntimeDefault
      initContainers:
        - name: wait-for-postgresql
          image: alpine
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              until printf "." && nc -z -w 2 mlflow-db 5432; do
                  sleep 2;
              done;
              echo 'PostgreSQL OK âœ“'
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mlflow-db
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.14
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
  namespace: Cv8x9mbVvb
spec:
  serviceName: mlflow-db-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: primary
  template:
    metadata:
      name: mlflow-db
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.3.14
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      containers:
        - name: mlflow-db
          image: docker.io/bitnami/postgresql:12
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          securityContext:
            runAsUser: 10266
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mlflow-db
                  key: postgresql-password
            - name: POSTGRES_DB
              value: mlflow
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -d "dbname=mlflow" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -d "dbname=mlflow" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: null
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-mlflow
  labels:
    helm.sh/chart: mlflow-3.1.0
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
spec:
  tls:
    - hosts:
        - chart-example.local
  rules:
    - host: chart-example.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-mlflow
                port:
                  number: 80
