apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mercure
  labels:
    helm.sh/chart: mercure-0.13.0
    app.kubernetes.io/name: mercure
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-mercure
  labels:
    helm.sh/chart: mercure-0.13.0
    app.kubernetes.io/name: mercure
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.0
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  transport-url: Ym9sdDovLy9kYXRhL21lcmN1cmUuZGI=
  publisher-jwt-key: Y0h3RVcxYmV4QnR4ZUFDUXoxSDFLQ0E1eTAyeW9NUXgwZUFtUDF0eQ==
  subscriber-jwt-key: SU1FR0ZKMlVNWnNPdm92MXVqRU40T01mYzNqSmkwdVVSaElSWjd2ag==
  extra-directives: ""
  license: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mercure
  labels:
    helm.sh/chart: mercure-0.13.0
    app.kubernetes.io/name: mercure
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.0
    app.kubernetes.io/managed-by: Helm
data:
  global-options: ""
  publisher-jwt-alg: HS256
  subscriber-jwt-alg: HS256
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-mercure
  labels:
    helm.sh/chart: mercure-0.13.0
    app.kubernetes.io/name: mercure
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mercure
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mercure
  labels:
    helm.sh/chart: mercure-0.13.0
    app.kubernetes.io/name: mercure
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mercure
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mercure
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-mercure
      securityContext: {}
      containers:
        - name: mercure
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: dunglas/mercure:v0.13.0
          imagePullPolicy: IfNotPresent
          env:
            - name: SERVER_NAME
              value: :80
            - name: GLOBAL_OPTIONS
              valueFrom:
                configMapKeyRef:
                  name: release-name-mercure
                  key: global-options
            - name: MERCURE_TRANSPORT_URL
              valueFrom:
                secretKeyRef:
                  name: release-name-mercure
                  key: transport-url
            - name: MERCURE_PUBLISHER_JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-mercure
                  key: publisher-jwt-key
            - name: MERCURE_PUBLISHER_JWT_ALG
              valueFrom:
                configMapKeyRef:
                  name: release-name-mercure
                  key: publisher-jwt-alg
            - name: MERCURE_SUBSCRIBER_JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-mercure
                  key: subscriber-jwt-key
            - name: MERCURE_SUBSCRIBER_JWT_ALG
              valueFrom:
                configMapKeyRef:
                  name: release-name-mercure
                  key: subscriber-jwt-alg
            - name: MERCURE_EXTRA_DIRECTIVES
              valueFrom:
                secretKeyRef:
                  name: release-name-mercure
                  key: extra-directives
            - name: MERCURE_LICENSE
              valueFrom:
                secretKeyRef:
                  name: release-name-mercure
                  key: license
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
          lifecycle:
            preStop:
              exec:
                command:
                  - curl
                  - -XPOST
                  - http://localhost:2019/stop
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-mercure-test-connection
  labels:
    helm.sh/chart: mercure-0.13.0
    app.kubernetes.io/name: mercure
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.13.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-mercure:80/healthz
  restartPolicy: Never
