[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "msb",
      "namespace": "li5PhipW1og"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-msb-discovery-log",
      "namespace": "li5PhipW1og"
    },
    "data": {
      "logback.xml": "<!--# Copyright © 2018 Amdocs, Bell Canada , ZTE\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License. -->\n<configuration scan=\"false\" debug=\"true\">\n    <property name=\"p_tim\" value=\"%d{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;, UTC}\"/>\n    <property name=\"p_lvl\" value=\"%level\"/>\n    <property name=\"p_log\" value=\"%logger\"/>\n    <property name=\"p_mdc\" value=\"%replace(%replace(%mdc){'\\t','\\\\\\\\t'}){'\\n', '\\\\\\\\n'}\"/>\n    <property name=\"p_msg\" value=\"%replace(%replace(%msg){'\\t', '\\\\\\\\t'}){'\\n','\\\\\\\\n'}\"/>\n    <property name=\"p_exc\" value=\"%replace(%replace(%rootException){'\\t', '\\\\\\\\t'}){'\\n','\\\\\\\\n'}\"/>\n    <property name=\"p_mak\" value=\"%replace(%replace(%marker){'\\t', '\\\\\\\\t'}){'\\n','\\\\\\\\n'}\"/>\n    <property name=\"p_thr\" value=\"%thread\"/>\n    <property name=\"pattern\" value=\"%nopexception${p_tim}\\t${p_thr}\\t${p_lvl}\\t${p_log}\\t${p_mdc}\\t${p_msg}\\t${p_exc}\\t${p_mak}\\t%n\"/>\n\n  <property name=\"logDir\" value=\"/var/log/onap\" />\n  <property name=\"debugDir\" value=\"/var/log/onap\" />\n\n  <property name=\"componentName\" value=\"msb\"></property>\n  <property name=\"subComponentName\" value=\"msb-discovery\"></property>\n\n  <property name=\"errorLogName\" value=\"error\" />\n  <property name=\"metricsLogName\" value=\"metrics\" />\n  <property name=\"auditLogName\" value=\"audit\" />\n  <property name=\"debugLogName\" value=\"debug\" />\n\n  <property name=\"errorPattern\" value=\"%d{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;, UTC}|%X{RequestId}|%thread|%X{ServiceName}|%X{PartnerName}|%X{TargetEntity}|%X{TargetServiceName}|%.-5level|%X{ErrorCode}|%X{ErrorDesc}|%msg%n\\t${p_mdc}\\t${p_msg}\\t${p_exc}\\t${p_mak}\\t%n\" />\n  <property name=\"debugPattern\" value=\"%d{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;, UTC}|%X{RequestId}|%msg%n\\t${p_mdc}\\t${p_msg}\\t${p_exc}\\t${p_mak}\\t%n\" />\n\n  <property name=\"auditPattern\" value=\"%X{BeginTimestamp}|%X{EndTimestamp}|%X{RequestId}|%X{ServiceInstanceId}|%thread||%X{ServiceName}|%X{PartnerName}|%X{StatusCode}|%X{ResponseCode}|%X{ResponseDesc}|%X{InstanceUUID}|%.-5level|%X{AlertSeverity}|%X{ServerIPAddress}|%X{Timer}|%X{ServerFQDN}|%X{RemoteHost}||||||||%msg%n\" />\n  <property name=\"metricPattern\" value=\"%X{BeginTimestamp}|%X{EndTimestamp}|%X{RequestId}|%X{ServiceInstanceId}|%thread||%X{ServiceName}|%X{PartnerName}|%X{TargetEntity}|%X{TargetServiceName}|%X{StatusCode}|%X{ResponseCode}|%X{ResponseDesc}|%X{InstanceUUID}|%.-5level|%X{AlertSeverity}|%X{ServerIPAddress}|%X{Timer}|%X{ServerFQDN}|%X{RemoteHost}||||%X{TargetVirtualEntity}|||||%msg%n\" />\n  <property name=\"logDirectory\" value=\"${logDir}/${componentName}/${subComponentName}\" />\n  <property name=\"debugLogDirectory\" value=\"${debugDir}/${componentName}/${subComponentName}\" />\n\n  <appender name=\"EELFAudit\"\n            class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logDirectory}/${auditLogName}.log</file>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logDirectory}/${auditLogName}.log.%d</fileNamePattern>\n    </rollingPolicy>\n    <encoder>\n      <pattern>${auditPattern}</pattern>\n    </encoder>\n  </appender>\n  \n  <appender name=\"asyncEELFAudit\" class=\"ch.qos.logback.classic.AsyncAppender\">\n    <queueSize>256</queueSize>\n    <appender-ref ref=\"EELFAudit\" />\n  </appender>\n\n  <appender name=\"EELFMetrics\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logDirectory}/${metricsLogName}.log</file>\n    <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logDirectory}/${metricsLogName}.log.%d</fileNamePattern>\n    </rollingPolicy>\n    <encoder>\n      <pattern>${metricPattern}</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"asyncEELFMetrics\" class=\"ch.qos.logback.classic.AsyncAppender\">\n    <queueSize>256</queueSize>\n    <appender-ref ref=\"EELFMetrics\"/>\n  </appender>\n\n  <appender name=\"EELFError\"\n            class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logDirectory}/${errorLogName}.log</file>\n    <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logDirectory}/${errorLogName}.log.%d</fileNamePattern>\n    </rollingPolicy>\n    <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">\n      <level>INFO</level>\n    </filter>\n    <encoder>\n      <pattern>${errorPattern}</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"asyncEELFError\" class=\"ch.qos.logback.classic.AsyncAppender\">\n    <queueSize>256</queueSize>\n    <appender-ref ref=\"EELFError\"/>\n  </appender>\n\n  <appender name=\"EELFDebug\"\n            class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${debugLogDirectory}/${debugLogName}.log</file>\n    <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${debugLogDirectory}/${debugLogName}.log.%d</fileNamePattern>\n    </rollingPolicy>\n    <encoder>\n      <pattern>${debugPattern}</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"asyncEELFDebug\" class=\"ch.qos.logback.classic.AsyncAppender\">\n    <queueSize>256</queueSize>\n    <appender-ref ref=\"EELFDebug\" />\n    <includeCallerData>true</includeCallerData>\n  </appender>\n\n  <logger name=\"com.att.eelf.audit\" level=\"info\" additivity=\"false\">\n    <appender-ref ref=\"asyncEELFAudit\" />\n  </logger>\n\n  <logger name=\"com.att.eelf.metrics\" level=\"info\" additivity=\"false\">\n    <appender-ref ref=\"asyncEELFMetrics\" />\n  </logger>\n\n  <logger name=\"com.att.eelf.error\" level=\"debug\" additivity=\"false\">\n    <appender-ref ref=\"asyncEELFError\" />\n  </logger>\n  \n  <root level=\"INFO\">\n    <appender-ref ref=\"asyncEELFDebug\" />\n  </root>\n\n</configuration>\n\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-msb-eag-log",
      "namespace": "li5PhipW1og"
    },
    "data": {
      "logback.xml": "<!--# Copyright © 2018 Amdocs, Bell Canada , ZTE\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License. -->\n<configuration scan=\"false\" debug=\"true\">\n    <property name=\"p_tim\" value=\"%d{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;, UTC}\"/>\n    <property name=\"p_lvl\" value=\"%level\"/>\n    <property name=\"p_log\" value=\"%logger\"/>\n    <property name=\"p_mdc\" value=\"%replace(%replace(%mdc){'\\t','\\\\\\\\t'}){'\\n', '\\\\\\\\n'}\"/>\n    <property name=\"p_msg\" value=\"%replace(%replace(%msg){'\\t', '\\\\\\\\t'}){'\\n','\\\\\\\\n'}\"/>\n    <property name=\"p_exc\" value=\"%replace(%replace(%rootException){'\\t', '\\\\\\\\t'}){'\\n','\\\\\\\\n'}\"/>\n    <property name=\"p_mak\" value=\"%replace(%replace(%marker){'\\t', '\\\\\\\\t'}){'\\n','\\\\\\\\n'}\"/>\n    <property name=\"p_thr\" value=\"%thread\"/>\n    <property name=\"pattern\" value=\"%nopexception${p_tim}\\t${p_thr}\\t${p_lvl}\\t${p_log}\\t${p_mdc}\\t${p_msg}\\t${p_exc}\\t${p_mak}\\t%n\"/>\n\n  <property name=\"logDir\" value=\"/var/log/onap\" />\n  <property name=\"debugDir\" value=\"/var/log/onap\" />\n\n  <property name=\"componentName\" value=\"msb\"></property>\n  <property name=\"subComponentName\" value=\"msb-eag\"></property>\n\n  <property name=\"errorLogName\" value=\"error\" />\n  <property name=\"metricsLogName\" value=\"metrics\" />\n  <property name=\"auditLogName\" value=\"audit\" />\n  <property name=\"debugLogName\" value=\"debug\" />\n\n  <property name=\"errorPattern\" value=\"%d{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;, UTC}|%X{RequestId}|%thread|%X{ServiceName}|%X{PartnerName}|%X{TargetEntity}|%X{TargetServiceName}|%.-5level|%X{ErrorCode}|%X{ErrorDesc}|%msg%n\\t${p_mdc}\\t${p_msg}\\t${p_exc}\\t${p_mak}\\t%n\" />\n  <property name=\"debugPattern\" value=\"%d{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;, UTC}|%X{RequestId}|%msg%n\\t${p_mdc}\\t${p_msg}\\t${p_exc}\\t${p_mak}\\t%n\" />\n\n  <property name=\"auditPattern\" value=\"%X{BeginTimestamp}|%X{EndTimestamp}|%X{RequestId}|%X{ServiceInstanceId}|%thread||%X{ServiceName}|%X{PartnerName}|%X{StatusCode}|%X{ResponseCode}|%X{ResponseDesc}|%X{InstanceUUID}|%.-5level|%X{AlertSeverity}|%X{ServerIPAddress}|%X{Timer}|%X{ServerFQDN}|%X{RemoteHost}||||||||%msg%n\" />\n  <property name=\"metricPattern\" value=\"%X{BeginTimestamp}|%X{EndTimestamp}|%X{RequestId}|%X{ServiceInstanceId}|%thread||%X{ServiceName}|%X{PartnerName}|%X{TargetEntity}|%X{TargetServiceName}|%X{StatusCode}|%X{ResponseCode}|%X{ResponseDesc}|%X{InstanceUUID}|%.-5level|%X{AlertSeverity}|%X{ServerIPAddress}|%X{Timer}|%X{ServerFQDN}|%X{RemoteHost}||||%X{TargetVirtualEntity}|||||%msg%n\" />\n  <property name=\"logDirectory\" value=\"${logDir}/${componentName}/${subComponentName}\" />\n  <property name=\"debugLogDirectory\" value=\"${debugDir}/${componentName}/${subComponentName}\" />\n\n  <appender name=\"EELFAudit\"\n            class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logDirectory}/${auditLogName}.log</file>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logDirectory}/${auditLogName}.log.%d</fileNamePattern>\n    </rollingPolicy>\n    <encoder>\n      <pattern>${auditPattern}</pattern>\n    </encoder>\n  </appender>\n  \n  <appender name=\"asyncEELFAudit\" class=\"ch.qos.logback.classic.AsyncAppender\">\n    <queueSize>256</queueSize>\n    <appender-ref ref=\"EELFAudit\" />\n  </appender>\n\n  <appender name=\"EELFMetrics\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logDirectory}/${metricsLogName}.log</file>\n    <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logDirectory}/${metricsLogName}.log.%d</fileNamePattern>\n    </rollingPolicy>\n    <encoder>\n      <pattern>${metricPattern}</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"asyncEELFMetrics\" class=\"ch.qos.logback.classic.AsyncAppender\">\n    <queueSize>256</queueSize>\n    <appender-ref ref=\"EELFMetrics\"/>\n  </appender>\n\n  <appender name=\"EELFError\"\n            class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logDirectory}/${errorLogName}.log</file>\n    <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logDirectory}/${errorLogName}.log.%d</fileNamePattern>\n    </rollingPolicy>\n    <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">\n      <level>INFO</level>\n    </filter>\n    <encoder>\n      <pattern>${errorPattern}</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"asyncEELFError\" class=\"ch.qos.logback.classic.AsyncAppender\">\n    <queueSize>256</queueSize>\n    <appender-ref ref=\"EELFError\"/>\n  </appender>\n\n  <appender name=\"EELFDebug\"\n            class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${debugLogDirectory}/${debugLogName}.log</file>\n    <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${debugLogDirectory}/${debugLogName}.log.%d</fileNamePattern>\n    </rollingPolicy>\n    <encoder>\n      <pattern>${debugPattern}</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"asyncEELFDebug\" class=\"ch.qos.logback.classic.AsyncAppender\">\n    <queueSize>256</queueSize>\n    <appender-ref ref=\"EELFDebug\" />\n    <includeCallerData>true</includeCallerData>\n  </appender>\n\n  <logger name=\"com.att.eelf.audit\" level=\"info\" additivity=\"false\">\n    <appender-ref ref=\"asyncEELFAudit\" />\n  </logger>\n\n  <logger name=\"com.att.eelf.metrics\" level=\"info\" additivity=\"false\">\n    <appender-ref ref=\"asyncEELFMetrics\" />\n  </logger>\n\n  <logger name=\"com.att.eelf.error\" level=\"debug\" additivity=\"false\">\n    <appender-ref ref=\"asyncEELFError\" />\n  </logger>\n  \n  <root level=\"INFO\">\n    <appender-ref ref=\"asyncEELFDebug\" />\n  </root>\n\n</configuration>\n\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-msb-iag-log",
      "namespace": "li5PhipW1og"
    },
    "data": {
      "logback.xml": "<!--# Copyright © 2018 Amdocs, Bell Canada , ZTE\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License. -->\n<configuration scan=\"false\" debug=\"true\">\n    <property name=\"p_tim\" value=\"%d{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;, UTC}\"/>\n    <property name=\"p_lvl\" value=\"%level\"/>\n    <property name=\"p_log\" value=\"%logger\"/>\n    <property name=\"p_mdc\" value=\"%replace(%replace(%mdc){'\\t','\\\\\\\\t'}){'\\n', '\\\\\\\\n'}\"/>\n    <property name=\"p_msg\" value=\"%replace(%replace(%msg){'\\t', '\\\\\\\\t'}){'\\n','\\\\\\\\n'}\"/>\n    <property name=\"p_exc\" value=\"%replace(%replace(%rootException){'\\t', '\\\\\\\\t'}){'\\n','\\\\\\\\n'}\"/>\n    <property name=\"p_mak\" value=\"%replace(%replace(%marker){'\\t', '\\\\\\\\t'}){'\\n','\\\\\\\\n'}\"/>\n    <property name=\"p_thr\" value=\"%thread\"/>\n    <property name=\"pattern\" value=\"%nopexception${p_tim}\\t${p_thr}\\t${p_lvl}\\t${p_log}\\t${p_mdc}\\t${p_msg}\\t${p_exc}\\t${p_mak}\\t%n\"/>\n\n  <property name=\"logDir\" value=\"/var/log/onap\" />\n  <property name=\"debugDir\" value=\"/var/log/onap\" />\n\n  <property name=\"componentName\" value=\"msb\"></property>\n  <property name=\"subComponentName\" value=\"msb-iag\"></property>\n\n  <property name=\"errorLogName\" value=\"error\" />\n  <property name=\"metricsLogName\" value=\"metrics\" />\n  <property name=\"auditLogName\" value=\"audit\" />\n  <property name=\"debugLogName\" value=\"debug\" />\n\n  <property name=\"errorPattern\" value=\"%d{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;, UTC}|%X{RequestId}|%thread|%X{ServiceName}|%X{PartnerName}|%X{TargetEntity}|%X{TargetServiceName}|%.-5level|%X{ErrorCode}|%X{ErrorDesc}|%msg%n\\t${p_mdc}\\t${p_msg}\\t${p_exc}\\t${p_mak}\\t%n\" />\n  <property name=\"debugPattern\" value=\"%d{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;, UTC}|%X{RequestId}|%msg%n\\t${p_mdc}\\t${p_msg}\\t${p_exc}\\t${p_mak}\\t%n\" />\n\n  <property name=\"auditPattern\" value=\"%X{BeginTimestamp}|%X{EndTimestamp}|%X{RequestId}|%X{ServiceInstanceId}|%thread||%X{ServiceName}|%X{PartnerName}|%X{StatusCode}|%X{ResponseCode}|%X{ResponseDesc}|%X{InstanceUUID}|%.-5level|%X{AlertSeverity}|%X{ServerIPAddress}|%X{Timer}|%X{ServerFQDN}|%X{RemoteHost}||||||||%msg%n\" />\n  <property name=\"metricPattern\" value=\"%X{BeginTimestamp}|%X{EndTimestamp}|%X{RequestId}|%X{ServiceInstanceId}|%thread||%X{ServiceName}|%X{PartnerName}|%X{TargetEntity}|%X{TargetServiceName}|%X{StatusCode}|%X{ResponseCode}|%X{ResponseDesc}|%X{InstanceUUID}|%.-5level|%X{AlertSeverity}|%X{ServerIPAddress}|%X{Timer}|%X{ServerFQDN}|%X{RemoteHost}||||%X{TargetVirtualEntity}|||||%msg%n\" />\n  <property name=\"logDirectory\" value=\"${logDir}/${componentName}/${subComponentName}\" />\n  <property name=\"debugLogDirectory\" value=\"${debugDir}/${componentName}/${subComponentName}\" />\n\n  <appender name=\"EELFAudit\"\n            class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logDirectory}/${auditLogName}.log</file>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logDirectory}/${auditLogName}.log.%d</fileNamePattern>\n    </rollingPolicy>\n    <encoder>\n      <pattern>${auditPattern}</pattern>\n    </encoder>\n  </appender>\n  \n  <appender name=\"asyncEELFAudit\" class=\"ch.qos.logback.classic.AsyncAppender\">\n    <queueSize>256</queueSize>\n    <appender-ref ref=\"EELFAudit\" />\n  </appender>\n\n  <appender name=\"EELFMetrics\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logDirectory}/${metricsLogName}.log</file>\n    <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logDirectory}/${metricsLogName}.log.%d</fileNamePattern>\n    </rollingPolicy>\n    <encoder>\n      <pattern>${metricPattern}</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"asyncEELFMetrics\" class=\"ch.qos.logback.classic.AsyncAppender\">\n    <queueSize>256</queueSize>\n    <appender-ref ref=\"EELFMetrics\"/>\n  </appender>\n\n  <appender name=\"EELFError\"\n            class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logDirectory}/${errorLogName}.log</file>\n    <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logDirectory}/${errorLogName}.log.%d</fileNamePattern>\n    </rollingPolicy>\n    <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">\n      <level>INFO</level>\n    </filter>\n    <encoder>\n      <pattern>${errorPattern}</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"asyncEELFError\" class=\"ch.qos.logback.classic.AsyncAppender\">\n    <queueSize>256</queueSize>\n    <appender-ref ref=\"EELFError\"/>\n  </appender>\n\n  <appender name=\"EELFDebug\"\n            class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${debugLogDirectory}/${debugLogName}.log</file>\n    <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${debugLogDirectory}/${debugLogName}.log.%d</fileNamePattern>\n    </rollingPolicy>\n    <encoder>\n      <pattern>${debugPattern}</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"asyncEELFDebug\" class=\"ch.qos.logback.classic.AsyncAppender\">\n    <queueSize>256</queueSize>\n    <appender-ref ref=\"EELFDebug\" />\n    <includeCallerData>true</includeCallerData>\n  </appender>\n\n  <logger name=\"com.att.eelf.audit\" level=\"info\" additivity=\"false\">\n    <appender-ref ref=\"asyncEELFAudit\" />\n  </logger>\n\n  <logger name=\"com.att.eelf.metrics\" level=\"info\" additivity=\"false\">\n    <appender-ref ref=\"asyncEELFMetrics\" />\n  </logger>\n\n  <logger name=\"com.att.eelf.error\" level=\"debug\" additivity=\"false\">\n    <appender-ref ref=\"asyncEELFError\" />\n  </logger>\n  \n  <root level=\"INFO\">\n    <appender-ref ref=\"asyncEELFDebug\" />\n  </root>\n\n</configuration>\n\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-msb-filebeat-configmap",
      "namespace": "li5PhipW1og"
    },
    "data": {
      "filebeat.yml": "# Copyright © 2018 Amdocs, Bell Canada , ZTE\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nfilebeat.prospectors:\n#it is mandatory, in our case it's log\n- input_type: log\n  #This is the canolical path as mentioned in logback.xml, *.* means it will monitor all files in the directory.\n  paths:\n    - /var/log/onap/*/*/*/*.log\n    - /var/log/onap/*/*/*.log\n    - /var/log/onap/*/*.log\n  #Files older than this should be ignored.In our case it will be 48 hours i.e. 2 days. It is a helping flag for clean_inactive\n  ignore_older: 48h\n  # Remove the registry entry for a file that is more than the specified time. In our case it will be 96 hours, i.e. 4 days. It will help to keep registry records with in limit\n  clean_inactive: 96h\n\n\n# Name of the registry file. If a relative path is used, it is considered relative to the\n# data path. Else full qualified file name.\n#filebeat.registry_file: ${path.data}/registry\n\n\noutput.logstash:\n  #List of logstash server ip addresses with port number.\n  #But, in our case, this will be the loadbalancer IP address.\n  #For the below property to work the loadbalancer or logstash should expose 5044 port to listen the filebeat events or port in the property should be changed appropriately.\n  hosts: [\"log-ls.default:5044\"]\n  #If enable will do load balancing among availabe Logstash, automatically.\n  loadbalance: true\n\n  #The list of root certificates for server verifications.\n  #If certificate_authorities is empty or not set, the trusted\n  #certificate authorities of the host system are used.\n  #ssl.certificate_authorities: $ssl.certificate_authorities\n\n  #The path to the certificate for SSL client authentication. If the certificate is not specified,\n  #client authentication is not available.\n  #ssl.certificate: $ssl.certificate\n\n  #The client certificate key used for client authentication.\n  #ssl.key: $ssl.key\n\n  #The passphrase used to decrypt an encrypted key stored in the configured key file\n  #ssl.key_passphrase: $ssl.key_passphrase\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "default-msb-binding",
      "namespace": "default",
      "labels": {
        "app": "msb",
        "chart": "msb-6.0.0",
        "release": "release",
        "heritage": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cluster-admin"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "msb",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "msb-consul",
      "namespace": "li5PhipW1og",
      "labels": {
        "app": "msb-consul",
        "chart": "msb-consul-6.0.0",
        "release": "release",
        "heritage": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8500,
          "targetPort": 8500,
          "name": "http-msb-consul"
        }
      ],
      "selector": {
        "app": "msb-consul",
        "release": "release"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "msb-discovery",
      "namespace": "li5PhipW1og",
      "labels": {
        "app": "msb-discovery",
        "chart": "msb-discovery-6.0.0",
        "release": "release",
        "heritage": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 10081,
          "targetPort": 10081,
          "name": "http-msb-discovery"
        }
      ],
      "selector": {
        "app": "msb-discovery",
        "release": "release"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "msb-eag",
      "namespace": "li5PhipW1og",
      "labels": {
        "app": "msb-eag",
        "chart": "msb-eag-6.0.0",
        "release": "release",
        "heritage": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "NodePort",
      "ports": [
        {
          "port": 443,
          "nodePort": 30284,
          "name": "https-msb-eag"
        }
      ],
      "selector": {
        "app": "msb-eag",
        "release": "release"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "msb-iag",
      "namespace": "li5PhipW1og",
      "labels": {
        "app": "msb-iag",
        "chart": "msb-iag-6.0.0",
        "release": "release",
        "heritage": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "NodePort",
      "ports": [
        {
          "port": 443,
          "nodePort": 30283,
          "name": "https-msb-iag"
        }
      ],
      "selector": {
        "app": "msb-iag",
        "release": "release"
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-kube2msb",
      "namespace": "li5PhipW1og",
      "labels": {
        "app": "kube2msb",
        "chart": "kube2msb-6.0.0",
        "release": "release",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "kube2msb",
            "release": "release"
          },
          "annotations": {
            "sidecar.istio.io/inject": "true"
          }
        },
        "spec": {
          "serviceAccountName": "msb",
          "initContainers": [
            {
              "command": [
                "/root/ready.py"
              ],
              "args": [
                "--container-name",
                "msb-discovery"
              ],
              "env": [
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "image": "oomk8s/readiness-check:2.0.0",
              "imagePullPolicy": "Always",
              "name": "kube2msb-readiness"
            }
          ],
          "containers": [
            {
              "name": "kube2msb",
              "image": "nexus3.onap.org:10001/onap/oom/kube2msb:1.2.6",
              "imagePullPolicy": "Always",
              "env": [
                {
                  "name": "KUBE_MASTER_URL",
                  "value": "https://kubernetes.default:443"
                },
                {
                  "name": "MSB_URL",
                  "value": "http://msb-discovery.default:10081"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/etc/localtime",
                  "name": "localtime",
                  "readOnly": true
                }
              ],
              "resources": {
                "limits": {
                  "cpu": 1,
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "500Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "localtime",
              "hostPath": {
                "path": "/etc/localtime"
              }
            }
          ],
          "imagePullSecrets": [
            {
              "name": "default-docker-registry-key"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-msb-consul",
      "namespace": "li5PhipW1og",
      "labels": {
        "app": "msb-consul",
        "chart": "msb-consul-6.0.0",
        "release": "release",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "msb-consul",
            "release": "release"
          },
          "annotations": {
            "sidecar.istio.io/inject": "true"
          }
        },
        "spec": {
          "serviceAccountName": "msb",
          "containers": [
            {
              "name": "msb-consul",
              "image": "registry.hub.docker.com/library/consul:1.4.3",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "containerPort": 8500
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 8500
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 8500
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10
              },
              "env": null,
              "volumeMounts": [
                {
                  "mountPath": "/etc/localtime",
                  "name": "localtime",
                  "readOnly": true
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "20m",
                  "memory": "100Mi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "localtime",
              "hostPath": {
                "path": "/etc/localtime"
              }
            }
          ],
          "imagePullSecrets": [
            {
              "name": "default-docker-registry-key"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-msb-discovery",
      "namespace": "li5PhipW1og",
      "labels": {
        "app": "msb-discovery",
        "chart": "msb-discovery-6.0.0",
        "release": "release",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "msb-discovery",
            "release": "release"
          },
          "annotations": {
            "sidecar.istio.io/inject": "true"
          }
        },
        "spec": {
          "serviceAccountName": "msb",
          "initContainers": [
            {
              "command": [
                "/root/ready.py"
              ],
              "args": [
                "--container-name",
                "msb-consul"
              ],
              "env": [
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "image": "oomk8s/readiness-check:2.0.0",
              "imagePullPolicy": "Always",
              "name": "msb-discovery-readiness"
            }
          ],
          "containers": [
            {
              "name": "msb-discovery",
              "image": "nexus3.onap.org:10001/onap/msb/msb_discovery:1.2.6",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "containerPort": 10081
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 10081
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 10081
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10
              },
              "env": [
                {
                  "name": "CONSUL_IP",
                  "value": "msb-consul.default"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/etc/localtime",
                  "name": "localtime",
                  "readOnly": true
                },
                {
                  "mountPath": "/usr/local/discover-works/logs",
                  "name": "release-msb-discovery-logs"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "400Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "200Mi"
                }
              }
            },
            {
              "name": "msb-discovery-filebeat-onap",
              "image": "docker.elastic.co/beats/filebeat:5.5.0",
              "imagePullPolicy": "Always",
              "volumeMounts": [
                {
                  "name": "release-msb-discovery-filebeat-conf",
                  "mountPath": "/usr/share/filebeat/filebeat.yml",
                  "subPath": "filebeat.yml"
                },
                {
                  "name": "release-msb-discovery-data-filebeat",
                  "mountPath": "/usr/share/filebeat/data"
                },
                {
                  "name": "release-msb-discovery-logs",
                  "mountPath": "/var/log/onap/msb/msb-discovery"
                },
                {
                  "mountPath": "/opt/ajsc/etc/config/logback.xml",
                  "name": "release-msb-discovery-log-conf",
                  "subPath": "logback.xml"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "release-msb-discovery-log-conf",
              "configMap": {
                "name": "release-msb-discovery-log"
              }
            },
            {
              "name": "release-msb-discovery-filebeat-conf",
              "configMap": {
                "name": "release-msb-filebeat-configmap"
              }
            },
            {
              "name": "release-msb-discovery-data-filebeat",
              "emptyDir": {}
            },
            {
              "name": "release-msb-discovery-logs",
              "emptyDir": {}
            },
            {
              "name": "localtime",
              "hostPath": {
                "path": "/etc/localtime"
              }
            }
          ],
          "imagePullSecrets": [
            {
              "name": "default-docker-registry-key"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-msb-eag",
      "namespace": "li5PhipW1og",
      "labels": {
        "app": "msb-eag",
        "chart": "msb-eag-6.0.0",
        "release": "release",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "msb-eag",
            "release": "release"
          },
          "annotations": {
            "sidecar.istio.io/inject": "true"
          }
        },
        "spec": {
          "serviceAccountName": "msb",
          "initContainers": [
            {
              "command": [
                "/root/ready.py"
              ],
              "args": [
                "--container-name",
                "msb-discovery"
              ],
              "env": [
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "image": "oomk8s/readiness-check:2.0.0",
              "imagePullPolicy": "Always",
              "name": "msb-eag-readiness"
            }
          ],
          "containers": [
            {
              "name": "msb-eag",
              "image": "nexus3.onap.org:10001/onap/msb/msb_apigateway:1.2.7",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "containerPort": 80,
                  "name": "msb-eag"
                },
                {
                  "containerPort": 443,
                  "name": "msb-eag-https"
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 80
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 80
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10
              },
              "env": [
                {
                  "name": "CONSUL_IP",
                  "value": "msb-consul.default"
                },
                {
                  "name": "SDCLIENT_IP",
                  "value": "msb-discovery.default"
                },
                {
                  "name": "ROUTE_LABELS",
                  "value": "visualRange:0"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/etc/localtime",
                  "name": "localtime",
                  "readOnly": true
                },
                {
                  "mountPath": "/usr/local/apiroute-works/logs",
                  "name": "release-msb-eag-logs"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "200m",
                  "memory": "500Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "memory": "200Mi"
                }
              }
            },
            {
              "name": "filebeat-onap",
              "image": "docker.elastic.co/beats/filebeat:5.5.0",
              "imagePullPolicy": "Always",
              "volumeMounts": [
                {
                  "name": "release-msb-eag-filebeat-conf",
                  "mountPath": "/usr/share/filebeat/filebeat.yml",
                  "subPath": "filebeat.yml"
                },
                {
                  "name": "release-msb-eag-data-filebeat",
                  "mountPath": "/usr/share/filebeat/data"
                },
                {
                  "name": "release-msb-eag-logs",
                  "mountPath": "/var/log/onap/msb/msb-eag"
                },
                {
                  "mountPath": "/opt/ajsc/etc/config/logback.xml",
                  "name": "release-msb-eag-log-conf",
                  "subPath": "logback.xml"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "release-msb-eag-log-conf",
              "configMap": {
                "name": "release-msb-eag-log"
              }
            },
            {
              "name": "release-msb-eag-filebeat-conf",
              "configMap": {
                "name": "release-msb-filebeat-configmap"
              }
            },
            {
              "name": "release-msb-eag-data-filebeat",
              "emptyDir": {}
            },
            {
              "name": "release-msb-eag-logs",
              "emptyDir": {}
            },
            {
              "name": "localtime",
              "hostPath": {
                "path": "/etc/localtime"
              }
            }
          ],
          "imagePullSecrets": [
            {
              "name": "default-docker-registry-key"
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-msb-iag",
      "namespace": "li5PhipW1og",
      "labels": {
        "app": "msb-iag",
        "chart": "msb-iag-6.0.0",
        "release": "release",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "msb-iag",
            "release": "release"
          },
          "annotations": {
            "sidecar.istio.io/inject": "true"
          }
        },
        "spec": {
          "serviceAccountName": "msb",
          "initContainers": [
            {
              "command": [
                "/root/ready.py"
              ],
              "args": [
                "--container-name",
                "msb-discovery"
              ],
              "env": [
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "image": "oomk8s/readiness-check:2.0.0",
              "imagePullPolicy": "Always",
              "name": "msb-iag-readiness"
            }
          ],
          "containers": [
            {
              "name": "msb-iag",
              "image": "nexus3.onap.org:10001/onap/msb/msb_apigateway:1.2.7",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "containerPort": 80,
                  "name": "msb-iag"
                },
                {
                  "containerPort": 443,
                  "name": "msb-iag-https"
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 80
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 80
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10
              },
              "env": [
                {
                  "name": "CONSUL_IP",
                  "value": "msb-consul.default"
                },
                {
                  "name": "SDCLIENT_IP",
                  "value": "msb-discovery.default"
                },
                {
                  "name": "ROUTE_LABELS",
                  "value": "visualRange:1"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/etc/localtime",
                  "name": "localtime",
                  "readOnly": true
                },
                {
                  "mountPath": "/usr/local/apiroute-works/logs",
                  "name": "release-msb-iag-logs"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "100m",
                  "memory": "400Mi"
                },
                "requests": {
                  "cpu": "50m",
                  "memory": "200Mi"
                }
              }
            },
            {
              "name": "filebeat-onap",
              "image": "docker.elastic.co/beats/filebeat:5.5.0",
              "imagePullPolicy": "Always",
              "volumeMounts": [
                {
                  "name": "release-msb-iag-filebeat-conf",
                  "mountPath": "/usr/share/filebeat/filebeat.yml",
                  "subPath": "filebeat.yml"
                },
                {
                  "name": "release-msb-iag-data-filebeat",
                  "mountPath": "/usr/share/filebeat/data"
                },
                {
                  "name": "release-msb-iag-logs",
                  "mountPath": "/var/log/onap/msb/msb-iag"
                },
                {
                  "mountPath": "/opt/ajsc/etc/config/logback.xml",
                  "name": "release-msb-iag-log-conf",
                  "subPath": "logback.xml"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "release-msb-iag-log-conf",
              "configMap": {
                "name": "release-msb-iag-log"
              }
            },
            {
              "name": "release-msb-iag-filebeat-conf",
              "configMap": {
                "name": "release-msb-filebeat-configmap"
              }
            },
            {
              "name": "release-msb-iag-data-filebeat",
              "emptyDir": {}
            },
            {
              "name": "release-msb-iag-logs",
              "emptyDir": {}
            },
            {
              "name": "localtime",
              "hostPath": {
                "path": "/etc/localtime"
              }
            }
          ],
          "imagePullSecrets": [
            {
              "name": "default-docker-registry-key"
            }
          ]
        }
      }
    }
  }
]