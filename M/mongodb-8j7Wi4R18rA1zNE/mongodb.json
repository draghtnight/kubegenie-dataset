[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "release-name-mongodb-arbiter",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-0.3.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.0.10",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "arbiter"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "mongodb",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "arbiter"
        }
      },
      "minAvailable": 1
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "release-name-mongodb-data",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-0.3.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.0.10",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "data"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "mongodb",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "data"
        }
      },
      "minAvailable": 1
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-mongodb",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-0.3.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.0.10",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "selector": {
        "app.kubernetes.io/name": "mongodb",
        "app.kubernetes.io/instance": "release-name"
      },
      "clusterIP": "None",
      "type": "ClusterIP",
      "ports": [
        {
          "name": "mongodb",
          "port": 27017,
          "targetPort": "mongodb"
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-mongodb-arbiter",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-0.3.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.0.10",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "arbiter"
      }
    },
    "spec": {
      "selector": {
        "app.kubernetes.io/name": "mongodb",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "arbiter"
      },
      "clusterIP": "None",
      "type": "ClusterIP",
      "ports": [
        {
          "name": "mongodb",
          "port": 27017,
          "targetPort": "mongodb"
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-mongodb-data",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-0.3.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.0.10",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "data"
      }
    },
    "spec": {
      "selector": {
        "app.kubernetes.io/name": "mongodb",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "data"
      },
      "clusterIP": "None",
      "type": "ClusterIP",
      "ports": [
        {
          "name": "mongodb",
          "port": 27017,
          "targetPort": "mongodb"
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-mongodb-arbiter",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-0.3.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.0.10",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "arbiter"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "mongodb",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "arbiter"
        }
      },
      "serviceName": "release-name-mongodb-arbiter",
      "podManagementPolicy": "OrderedReady",
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "mongodb",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "arbiter"
          }
        },
        "spec": {
          "terminationGracePeriodSeconds": 60,
          "volumes": [
            {
              "name": "certs",
              "emptyDir": {
                "medium": "Memory",
                "sizeLimit": "4Mi"
              }
            },
            {
              "name": "data",
              "emptyDir": {}
            }
          ],
          "containers": [
            {
              "name": "database",
              "image": "mongo:4.0.10",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "mongod"
              ],
              "args": [
                "--bind_ip_all",
                "--dbpath=/var/lib/mongodb",
                "--replSet=rs0",
                "--timeStampFormat=iso8601-utc",
                "--serviceExecutor=adaptive",
                "--storageEngine=wiredTiger",
                "--directoryperdb"
              ],
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "mongo",
                      "--port=27017",
                      "--eval",
                      "db.shutdownServer({ timeoutSecs:60 })"
                    ]
                  }
                }
              },
              "livenessProbe": {
                "exec": {
                  "command": [
                    "mongo",
                    "--port=27017",
                    "--eval",
                    "db.adminCommand({ ping:1 })"
                  ]
                }
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "mongo",
                    "--port=27017",
                    "--eval",
                    "db.adminCommand({ ping:1 })"
                  ]
                }
              },
              "volumeMounts": [
                {
                  "name": "certs",
                  "mountPath": "/etc/mongodb/certs"
                },
                {
                  "name": "data",
                  "mountPath": "/var/lib/mongodb"
                }
              ],
              "ports": [
                {
                  "name": "mongodb",
                  "containerPort": 27017
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-mongodb-data",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-0.3.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.0.10",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "data"
      }
    },
    "spec": {
      "replicas": 2,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "mongodb",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "data"
        }
      },
      "serviceName": "release-name-mongodb-data",
      "podManagementPolicy": "OrderedReady",
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "2Gi"
              }
            }
          }
        }
      ],
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "mongodb",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "data"
          }
        },
        "spec": {
          "terminationGracePeriodSeconds": 60,
          "volumes": [
            {
              "name": "certs",
              "emptyDir": {
                "medium": "Memory",
                "sizeLimit": "4Mi"
              }
            }
          ],
          "containers": [
            {
              "name": "database",
              "image": "mongo:4.0.10",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "mongod"
              ],
              "args": [
                "--bind_ip_all",
                "--dbpath=/var/lib/mongodb",
                "--replSet=rs0",
                "--timeStampFormat=iso8601-utc",
                "--serviceExecutor=adaptive",
                "--storageEngine=wiredTiger",
                "--directoryperdb"
              ],
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "mongo",
                      "--port=27017",
                      "--eval",
                      "db.shutdownServer({ timeoutSecs:60 })"
                    ]
                  }
                }
              },
              "livenessProbe": {
                "exec": {
                  "command": [
                    "mongo",
                    "--port=27017",
                    "--eval",
                    "db.adminCommand({ ping:1 })"
                  ]
                }
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "mongo",
                    "--port=27017",
                    "--eval",
                    "db.adminCommand({ ping:1 })"
                  ]
                }
              },
              "volumeMounts": [
                {
                  "name": "certs",
                  "mountPath": "/etc/mongodb/certs"
                },
                {
                  "name": "data",
                  "mountPath": "/var/lib/mongodb"
                }
              ],
              "ports": [
                {
                  "name": "mongodb",
                  "containerPort": 27017
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-mongodb-configure-rs",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-0.3.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.0.10",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "hooks"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade,post-rollback",
        "helm.sh/hook-delete-policy": "before-hook-creation",
        "helm.sh/hook-weigth": "-1"
      }
    },
    "data": {
      "helm-values.js": "Y29uc3QgaGVsbURhdGEgPXsiZnVsbG5hbWUiOiJyZWxlYXNlLW5hbWUtbW9uZ29kYiIsInBvcnQiOjI3MDE3LCJyZWxlYXNlIjp7IklzSW5zdGFsbCI6dHJ1ZSwiSXNVcGdyYWRlIjpmYWxzZSwiTmFtZSI6InJlbGVhc2UtbmFtZSIsIk5hbWVzcGFjZSI6ImRlZmF1bHQiLCJSZXZpc2lvbiI6MSwiU2VydmljZSI6IkhlbG0ifSwidmFsdWVzIjp7ImVuYWJsZWRKb2JzIjp7InJzQ29uZmlndXJhdGlvbiI6dHJ1ZX0sImV4dHJhQXJncyI6WyItLXRpbWVTdGFtcEZvcm1hdD1pc284NjAxLXV0YyIsIi0tc2VydmljZUV4ZWN1dG9yPWFkYXB0aXZlIiwiLS1zdG9yYWdlRW5naW5lPXdpcmVkVGlnZXIiLCItLWRpcmVjdG9yeXBlcmRiIl0sImZ1bGxuYW1lT3ZlcnJpZGUiOiIiLCJpbWFnZXMiOnsiZGF0YWJhc2UiOnsicHVsbFBvbGljeSI6IklmTm90UHJlc2VudCIsInJlcG9zaXRvcnkiOiJtb25nbyIsInRhZyI6IjQuMC4xMCJ9fSwibW9kZSI6InN0YW5kYWxvbmUiLCJuYW1lT3ZlcnJpZGUiOiIiLCJwZGIiOnsiZW5hYmxlZCI6dHJ1ZSwibWluQXJiaXRlcnMiOjEsIm1pbkRhdGFTZXJ2ZXJzIjoxfSwicGVyc2lzdGVuY2UiOnsiZW5hYmxlZCI6dHJ1ZSwic2l6ZSI6IjJHaSIsInN0b3JhZ2VDbGFzc05hbWUiOiIifSwicmVwbGljYVNldE5hbWUiOiJyczAiLCJyZXBsaWNhU2V0VG9wb2xvZ3kiOnsiYXJiaXRlcnMiOjEsImRhdGEiOjJ9fX07",
      "wait-alive.js": "bG9hZCgnL29wdC9tb25nby1zY3JpcHRzL2hlbG0tdmFsdWVzLmpzJykKY29uc3QgdGltZW91dCA9IDYwOwoKLy8gRnVuY3Rpb25zCmZ1bmN0aW9uIHdhaXRDb25uZWN0aW9uKGhvc3QpIHsKICBsZXQgcmV0cmllc0xlZnQgPSA2MDsKICBwcmludChgVHJ5aW5nIGNvbm5lY3Rpb24gdG8gJHtob3N0fWApCiAgd2hpbGUgKHRydWUpIHsKICAgIHRyeSB7CiAgICAgIG5ldyBNb25nbyhob3N0KTsKICAgICAgcHJpbnQoYENvbm5lY3RlZCB0byAke2hvc3R9YCkKICAgICAgYnJlYWs7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIHJldHJpZXNMZWZ0LS0KICAgICAgc2xlZXAoMTAwMCkKICAgIH0KICAgIC8vIEZhaWwgd2l0aCBlcnJvcgogICAgaWYgKHJldHJpZXNMZWZ0IDw9IDApIHsKICAgICAgcHJpbnQoYENvdWxkIG5vdCBjb25uZWN0IHRvICR7aG9zdH0gYWZ0ZXIgJHt0aW1lb3V0fSByZXRyaWVzYCkKICAgICAgcXVpdCgxKQogICAgfQogIH0KfQoKLy8gV2FpdCBhcmJpdGVycwpmb3IgKGxldCBpID0gMDsgaSA8IGhlbG1EYXRhWyd2YWx1ZXMnXVsncmVwbGljYVNldFRvcG9sb2d5J11bJ2FyYml0ZXJzJ107IGkrKykgewogIHdhaXRDb25uZWN0aW9uKGAke2hlbG1EYXRhWydmdWxsbmFtZSddfS1hcmJpdGVyLSR7aX0uJHtoZWxtRGF0YVsnZnVsbG5hbWUnXX0tYXJiaXRlci4ke2hlbG1EYXRhWydyZWxlYXNlJ11bJ05hbWVzcGFjZSddfS5zdmMuY2x1c3Rlci5sb2NhbDoke2hlbG1EYXRhWydwb3J0J119YCkKfQovLyBXYWl0IGRhdGEgbm9kZXMKZm9yIChsZXQgaSA9IDA7IGkgPCBoZWxtRGF0YVsndmFsdWVzJ11bJ3JlcGxpY2FTZXRUb3BvbG9neSddWydkYXRhJ107IGkrKykgewogIHdhaXRDb25uZWN0aW9uKGAke2hlbG1EYXRhWydmdWxsbmFtZSddfS1kYXRhLSR7aX0uJHtoZWxtRGF0YVsnZnVsbG5hbWUnXX0tZGF0YS4ke2hlbG1EYXRhWydyZWxlYXNlJ11bJ05hbWVzcGFjZSddfS5zdmMuY2x1c3Rlci5sb2NhbDoke2hlbG1EYXRhWydwb3J0J119YCkKfQovLyBOb3RpZnkgc3VjY2VzcwpwcmludCgnQWxsIHNlcnZlcnMgYXJlIGFsaXZlJyk=",
      "reconfigure-rs.js": "bG9hZCgnL29wdC9tb25nby1zY3JpcHRzL2hlbG0tdmFsdWVzLmpzJykKCi8vIEZ1bmN0aW9ucwpmdW5jdGlvbiBnZXRBcmJpdGVycygpIHsKICBsZXQgYXJiaXRlcnMgPSBbXTsKICBmb3IgKGxldCBpID0gMDsgaSA8IGhlbG1EYXRhWyd2YWx1ZXMnXVsncmVwbGljYVNldFRvcG9sb2d5J11bJ2FyYml0ZXJzJ107IGkrKykgewogICAgYXJiaXRlcnMucHVzaChgJHtoZWxtRGF0YVsnZnVsbG5hbWUnXX0tYXJiaXRlci0ke2l9LiR7aGVsbURhdGFbJ2Z1bGxuYW1lJ119LWFyYml0ZXIuJHtoZWxtRGF0YVsncmVsZWFzZSddWydOYW1lc3BhY2UnXX0uc3ZjLmNsdXN0ZXIubG9jYWw6JHtoZWxtRGF0YVsncG9ydCddfWApCiAgfQogIHJldHVybiBhcmJpdGVycwp9CmZ1bmN0aW9uIGdldERhdGFub2RlcygpIHsKICBsZXQgZGF0YW5vZGVzID0gW107CiAgZm9yIChsZXQgaSA9IDA7IGkgPCBoZWxtRGF0YVsndmFsdWVzJ11bJ3JlcGxpY2FTZXRUb3BvbG9neSddWydkYXRhJ107IGkrKykgewogICAgZGF0YW5vZGVzLnB1c2goYCR7aGVsbURhdGFbJ2Z1bGxuYW1lJ119LWRhdGEtJHtpfS4ke2hlbG1EYXRhWydmdWxsbmFtZSddfS1kYXRhLiR7aGVsbURhdGFbJ3JlbGVhc2UnXVsnTmFtZXNwYWNlJ119LnN2Yy5jbHVzdGVyLmxvY2FsOiR7aGVsbURhdGFbJ3BvcnQnXX1gKQogIH0KICByZXR1cm4gZGF0YW5vZGVzCn0KCmZ1bmN0aW9uIGdldFJlcXVpcmVkTWVtYmVyTmFtZXMoKSB7CiAgcmV0dXJuIGdldEFyYml0ZXJzKCkuY29uY2F0KGdldERhdGFub2RlcygpKQp9CgpmdW5jdGlvbiBnZXRDdXJyZW50TWVtYmVyTmFtZXMoKSB7CiAgcmV0dXJuIHJzLnN0YXR1cygpWydtZW1iZXJzJ10ubWFwKG1lbWJlciA9PiBtZW1iZXJbJ25hbWUnXSkKfQoKZnVuY3Rpb24gZ2V0SW5pdGlhbFJTRG9jKCkgewogIHJldHVybiB7CiAgICBfaWQ6IGhlbG1EYXRhWyd2YWx1ZXMnXVsncmVwbGljYVNldE5hbWUnXSwKICAgIGNvbmZpZ3N2cjogaGVsbURhdGFbJ3ZhbHVlcyddWydtb2RlJ10gPT09ICdjb25maWcnLAogICAgbWVtYmVyczogZ2V0QXJiaXRlcnMoKS5tYXAoYXJiaXRlciA9PiB7CiAgICAgIHJldHVybiB7IGhvc3Q6IGFyYml0ZXIsIGFyYml0ZXJPbmx5OiB0cnVlIH07CiAgICB9KS5jb25jYXQoZ2V0RGF0YW5vZGVzKCkubWFwKGRhdGFub2RlID0+IHsKICAgICAgcmV0dXJuIHsgaG9zdDogZGF0YW5vZGUgfTsKICAgIH0pKS5tYXAoKG1lbWJlciwgaWQpID0+IHsKICAgICAgY29uc3Qgb2xkTWVtYmVyID0gbWVtYmVyOwogICAgICBvbGRNZW1iZXJbJ19pZCddID0gaWQ7CiAgICAgIHJldHVybiBvbGRNZW1iZXI7CiAgICB9KQogIH07Cn0KCi8vIEhlYWx0aCBjaGVja3MKCmZ1bmN0aW9uIHByaW1hcnlQcmVzZW50KCkgewogIHByaW50KCdXYWl0aW5nIGZvciBhIHByaW1hcnkgdG8gYmUgZWxlY3RlZCcpCiAgd2hpbGUgKCFycy5zdGF0dXMoKVsnbWVtYmVycyddLm1hcChtZW1iZXIgPT4gbWVtYmVyWydzdGF0ZVN0ciddKS5zb21lKHN0YXRlID0+IHsgcmV0dXJuIHN0YXRlID09PSAnUFJJTUFSWSc7IH0pKSB7CiAgICBzbGVlcCgxMDAwKQogIH0KICBwcmludCgnQ29uc2Vuc3VzIHJlYWNoZWQnKQp9CgpmdW5jdGlvbiBzdGF0dXNlc09LKCkgewogIHByaW50KCdXYWl0aW5nIGZvciBhbGwgbWVtYmVycyB0byBiZSBvbiBhIHJlZ3VsYXIgc3RhdHVzJykKICB3aGlsZSAoIXJzLnN0YXR1cygpWydtZW1iZXJzJ10ubWFwKG1lbWJlciA9PiBtZW1iZXJbJ3N0YXRlU3RyJ10pLmV2ZXJ5KHN0YXRlID0+IFsnUFJJTUFSWScsICdTRUNPTkRBUlknLCAnQVJCSVRFUiddLmluY2x1ZGVzKHN0YXRlKSkpIHsKICAgIHNsZWVwKDEwMDApCiAgfQogIHByaW50KCdBbGwgbWVtYmVycyBvaycpCn0KCmZ1bmN0aW9uIGNoZWNrUlNIZWFsdGgoKSB7CiAgcHJpbWFyeVByZXNlbnQoKQogIHN0YXR1c2VzT0soKQp9CgoKLy8gUlMgUmVjb25maWd1cmF0aW9uCmlmIChycy5zdGF0dXMoKS5vayA9PSAwKSB7CiAgcHJpbnQoJ0luaXRpYWxpemluZyByZXBsaWNhIHNldCcpCgogIHByaW50anNvbihnZXRJbml0aWFsUlNEb2MoKSkKICBjb25zdCByc0luaXRSZXN1bHQgPSBycy5pbml0aWF0ZShnZXRJbml0aWFsUlNEb2MoKSkKCiAgaWYgKHJzSW5pdFJlc3VsdC5vayA9PSAwKSB7CiAgICBwcmludCgnSW5pdGlhbGl6YXRpb24gZmFpbGVkIScpCiAgICBwcmludGpzb24ocnNJbml0UmVzdWx0KQogICAgcXVpdCgxKQogIH0KCiAgY2hlY2tSU0hlYWx0aCgpCgogIHByaW50KCdJbml0aWFsaXphdGlvbiBjb21wbGV0ZScpCn0gZWxzZSB7CiAgcHJpbnQoJ1JlY29uZmlndXJpbmcgcmVwbGljYSBzZXQnKQoKICAvLyBSZW1vdmUgZXh0cmFuZW91cyBtZW1iZXJzCiAgZ2V0Q3VycmVudE1lbWJlck5hbWVzKCkuZmlsdGVyKG1lbWJlciA9PiAhZ2V0UmVxdWlyZWRNZW1iZXJOYW1lcygpLmluY2x1ZGVzKG1lbWJlcikpLmZvckVhY2goZXh0cmFuZW91cyA9PiB7CiAgICBwcmludChgUmVtb3ZpbmcgZXh0cmFuZW91cyBtZW1iZXIgJHtleHRyYW5lb3VzfWApCiAgICBycy5yZW1vdmUoZXh0cmFuZW91cykKICB9KQogIGNoZWNrUlNIZWFsdGgoKQoKICAvLyBBZGQgbWlzc2luZyBhcmJpdGVycwogIC8vIEFkZCBtaXNzaW5nIG1lbWJlcnMKICBnZXRSZXF1aXJlZE1lbWJlck5hbWVzKCkuZmlsdGVyKG1lbWJlciA9PiAhZ2V0Q3VycmVudE1lbWJlck5hbWVzKCkuaW5jbHVkZXMobWVtYmVyKSkuZm9yRWFjaChyZXF1aXJlZCA9PiB7CiAgICBpZiAocmVxdWlyZWQubWF0Y2goJ2FyYml0ZXInKSkgewogICAgICBwcmludChgQWRkaW5nIG1pc3NpbmcgYXJiaXRlciAke3JlcXVpcmVkfWApCiAgICAgIHJzLmFkZEFyYihyZXF1aXJlZCkKICAgIH0gZWxzZSB7CiAgICAgIHByaW50KGBBZGRpbmcgbWlzc2luZyBzZXJ2ZXIgJHtyZXF1aXJlZH1gKQogICAgICBycy5hZGQocmVxdWlyZWQpCiAgICB9CiAgICBjaGVja1JTSGVhbHRoKCkKICB9KQoKICBwcmludCgnUmVjb25maWd1cmF0aW9uIGNvbXBsZXRlJykKfQ=="
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "release-name-mongodb-configure-rs",
      "labels": {
        "app.kubernetes.io/name": "mongodb",
        "helm.sh/chart": "mongodb-0.3.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "4.0.10",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "hooks"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade,post-rollback",
        "helm.sh/hook-delete-policy": "before-hook-creation",
        "helm.sh/hook-weigth": "0"
      }
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "mongodb",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "hooks"
          }
        },
        "spec": {
          "restartPolicy": "Never",
          "volumes": [
            {
              "name": "scripts",
              "secret": {
                "defaultMode": 493,
                "secretName": "release-name-mongodb-configure-rs"
              }
            }
          ],
          "initContainers": [
            {
              "name": "wait-alive",
              "image": "mongo:4.0.10",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "mongo"
              ],
              "args": [
                "--nodb",
                "/opt/mongo-scripts/wait-alive.js"
              ],
              "volumeMounts": [
                {
                  "name": "scripts",
                  "mountPath": "/opt/mongo-scripts"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "configure-rs",
              "image": "mongo:4.0.10",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "mongo"
              ],
              "args": [
                "mongodb://release-name-mongodb-data-0.release-name-mongodb-data.default.svc.cluster.local:27017,release-name-mongodb-data-1.release-name-mongodb-data.default.svc.cluster.local:27017",
                "/opt/mongo-scripts/reconfigure-rs.js"
              ],
              "volumeMounts": [
                {
                  "name": "scripts",
                  "mountPath": "/opt/mongo-scripts"
                }
              ]
            }
          ]
        }
      }
    }
  }
]