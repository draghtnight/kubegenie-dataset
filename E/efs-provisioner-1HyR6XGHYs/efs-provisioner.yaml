apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-efs-provisioner
  labels:
    app: efs-provisioner
    env: dev
    chart: efs-provisioner-0.4.0
    release: release-name
    heritage: Helm
  annotations: {}
---
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: efs
  labels:
    app: efs-provisioner
    env: dev
    chart: efs-provisioner-0.4.0
    release: release-name
    heritage: Helm
  annotations: null
provisioner: example.com/aws-efs
parameters:
  gidAllocate: "true"
  gidMin: "40000"
  gidMax: "50000"
reclaimPolicy: Delete
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-efs-provisioner
  labels:
    app: efs-provisioner
    env: dev
    chart: efs-provisioner-0.4.0
    release: release-name
    heritage: Helm
  annotations: {}
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-efs-provisioner
  labels:
    app: efs-provisioner
    env: dev
    chart: efs-provisioner-0.4.0
    release: release-name
    heritage: Helm
  annotations: {}
subjects:
  - kind: ServiceAccount
    name: release-name-efs-provisioner
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-efs-provisioner
  apiGroup: rbac.authorization.k8s.io
