apiVersion: v1
kind: Secret
metadata:
  namespace: Yj8G5qTGWTgrn
  name: release-name
data:
  MYSQL_ROOT_PASSWORD: cm9vdA==
---
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: Yj8G5qTGWTgrn
  name: release-name
  labels:
    name: easyclaim-backend
data:
  application: |-
    spring.datasource.url=jdbc:mysql://mysql:3306/test
    spring.datasource.username=root
    spring.datasource.password=root
    spring.jpa.show-sql=true
    spring.jpa.hibernate.ddl-auto=update
    spring.user.datasource.driver-class-name=com.mysql.jdbc.Driver
    spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
---
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: default
  name: release-name
  labels:
    name: easyclaim-frontend
data:
  config: |-
    {
      "authConfig": {
        "backendUrl": "192.68.0.0"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  name: release-name
data:
  MYSQL_DATABASE: test
---
apiVersion: v1
kind: Service
metadata:
  namespace: Yj8G5qTGWTgrn
  name: release-name
  labels:
    name: easyclaim-backend
spec:
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 32012
  selector:
    name: easyclaim-backend
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name
  labels:
    name: easyclaim-frontend
spec:
  ports:
    - port: 80
      targetPort: 80
      nodePort: 32011
  selector:
    name: easyclaim-frontend
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: release-name
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: Yj8G5qTGWTgrn
  name: release-name
  labels:
    name: easyclaim-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      name: easyclaim-backend
  template:
    metadata:
      name: release-name
      labels:
        name: easyclaim-backend
    spec:
      containers:
        - name: release-name
          image: vigneshsweekaran/easyclaim-backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: config-volume
              mountPath: /config
          resources:
            requests:
              memory: 300Mi
              cpu: 200m
            limits:
              memory: 600Mi
              cpu: 400m
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config-volume
          configMap:
            name: release-name
            items:
              - key: application
                path: application.properties
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name
  labels:
    name: easyclaim-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      name: easyclaim-frontend
  template:
    metadata:
      name: release-name
      labels:
        name: easyclaim-frontend
    spec:
      containers:
        - name: release-name
          image: vigneshsweekaran/easyclaim-frontend:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/nginx/html/assets
          resources:
            requests:
              memory: 64Mi
              cpu: 250m
            limits:
              memory: 128Mi
              cpu: 500m
      volumes:
        - name: config-volume
          configMap:
            name: release-name
            items:
              - key: config
                path: config.json
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: release-name
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:5.7
          name: mysql
          envFrom:
            - secretRef:
                name: mysql
            - configMapRef:
                name: mysql
          ports:
            - containerPort: 3306
              name: mysql
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  namespace: default
  name: release-name
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  namespace: default
  name: release-name
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-post-install
  labels:
    name: release-name
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  template:
    metadata:
      name: release-name-post-install
      labels:
        name: release-name
    spec:
      restartPolicy: Never
      containers:
        - name: post-install-job
          image: oraclelinux:8-slim
          command:
            - /bin/sh
            - -c
            - |
              curl -H "Content-Type: application/json" -X POST -d '{"username":"test","password":"test","firstName":"test","lastName":"test","age":25,"salary":50000}' http://release-name:8080/users -v
