[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "tekton-pipelines"
    },
    "spec": {
      "privileged": false,
      "allowPrivilegeEscalation": false,
      "volumes": [
        "emptyDir",
        "configMap",
        "secret"
      ],
      "hostNetwork": false,
      "hostIPC": false,
      "hostPID": false,
      "runAsUser": {
        "rule": "RunAsAny"
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      },
      "fsGroup": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      },
      "rule": "MustRunAsNonRoot"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "tekton-pipelines"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "tekton-bot"
    },
    "secrets": null
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "environment-controller"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "environment-controller-hmac",
      "labels": {
        "app": "environment-controller"
      }
    },
    "type": "Opaque",
    "data": {
      "hmac": ""
    }
  },
  {
    "apiVersion": "v1",
    "type": "Opaque",
    "kind": "Secret",
    "metadata": {
      "name": "jx-pipeline-git-github",
      "annotations": {
        "jenkins.io/credentials-description": "API Token for acccessing git for GitOps",
        "jenkins.io/name": "Git",
        "jenkins.io/url": "https://github.com"
      },
      "labels": {
        "jenkins.io/created-by": "jx",
        "jenkins.io/credentials-type": "usernamePassword",
        "jenkins.io/kind": "git",
        "jenkins.io/service-kind": "github"
      }
    },
    "data": {
      "username": "",
      "password": ""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "config-artifact-bucket"
    },
    "data": null
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "config-artifact-pvc"
    },
    "data": {
      "size": "5Gi"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "config-defaults"
    },
    "data": {
      "_example": "################################\n#                              #\n#    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n# This block is not actually functional configuration,\n# but serves to illustrate the available configuration\n# options and document them in a way that is accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample configuration options may be copied out of\n# this example block and unindented to be in the data block\n# to actually change the configuration.\n\n# default-timeout-minutes contains the default number of\n# minutes to use for TaskRun, if none is specified.\ndefault-timeout-minutes: \"60\"  # 60 minutes\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "config-entrypoint"
    },
    "data": {
      "image": "gcr.io/k8s-prow/entrypoint@sha256:7c7cd8906ce4982ffee326218e9fc75da2d4896d53cabc9833b9cc8d2d6b2b8f"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "config-logging"
    },
    "data": {
      "zap-logger-config": "{\n  \"level\": \"info\",\n  \"development\": false,\n  \"sampling\": {\n    \"initial\": 100,\n    \"thereafter\": 100\n  },\n  \"outputPaths\": [\"stdout\"],\n  \"errorOutputPaths\": [\"stderr\"],\n  \"encoding\": \"json\",\n  \"encoderConfig\": {\n    \"timeKey\": \"\",\n    \"levelKey\": \"level\",\n    \"nameKey\": \"logger\",\n    \"callerKey\": \"caller\",\n    \"messageKey\": \"msg\",\n    \"stacktraceKey\": \"stacktrace\",\n    \"lineEnding\": \"\",\n    \"levelEncoder\": \"\",\n    \"timeEncoder\": \"\",\n    \"durationEncoder\": \"\",\n    \"callerEncoder\": \"\"\n  }\n}\n",
      "loglevel.controller": "info",
      "loglevel.webhook": "info"
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1beta1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "clustertasks.tekton.dev"
    },
    "spec": {
      "group": "tekton.dev",
      "names": {
        "kind": "ClusterTask",
        "plural": "clustertasks",
        "categories": [
          "all",
          "tekton-pipelines"
        ]
      },
      "scope": "Cluster",
      "subresources": {
        "status": {}
      },
      "version": "v1alpha1"
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1beta1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "pipelines.tekton.dev"
    },
    "spec": {
      "group": "tekton.dev",
      "names": {
        "kind": "Pipeline",
        "plural": "pipelines",
        "categories": [
          "all",
          "tekton-pipelines"
        ]
      },
      "scope": "Namespaced",
      "subresources": {
        "status": {}
      },
      "version": "v1alpha1"
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1beta1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "pipelineruns.tekton.dev"
    },
    "spec": {
      "group": "tekton.dev",
      "names": {
        "kind": "PipelineRun",
        "plural": "pipelineruns",
        "categories": [
          "all",
          "tekton-pipelines"
        ]
      },
      "scope": "Namespaced",
      "subresources": {
        "status": {}
      },
      "version": "v1alpha1"
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1beta1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "pipelineresources.tekton.dev"
    },
    "spec": {
      "group": "tekton.dev",
      "names": {
        "kind": "PipelineResource",
        "plural": "pipelineresources",
        "categories": [
          "all",
          "tekton-pipelines"
        ]
      },
      "scope": "Namespaced",
      "subresources": {
        "status": {}
      },
      "version": "v1alpha1"
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1beta1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "tasks.tekton.dev"
    },
    "spec": {
      "group": "tekton.dev",
      "names": {
        "kind": "Task",
        "plural": "tasks",
        "categories": [
          "all",
          "tekton-pipelines"
        ]
      },
      "scope": "Namespaced",
      "subresources": {
        "status": {}
      },
      "version": "v1alpha1"
    }
  },
  {
    "apiVersion": "apiextensions.k8s.io/v1beta1",
    "kind": "CustomResourceDefinition",
    "metadata": {
      "name": "taskruns.tekton.dev"
    },
    "spec": {
      "group": "tekton.dev",
      "names": {
        "kind": "TaskRun",
        "plural": "taskruns",
        "categories": [
          "all",
          "tekton-pipelines"
        ]
      },
      "scope": "Namespaced",
      "subresources": {
        "status": {}
      },
      "version": "v1alpha1"
    }
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "tekton-pipelines"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "namespaces",
          "secrets",
          "events",
          "serviceaccounts",
          "configmaps",
          "persistentvolumeclaims"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "update",
          "delete",
          "patch",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "deployments"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "update",
          "delete",
          "patch",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "admissionregistration.k8s.io"
        ],
        "resources": [
          "mutatingwebhookconfigurations"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "update",
          "delete",
          "patch",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "tekton.dev"
        ],
        "resources": [
          "tasks/status",
          "clustertasks/status",
          "taskruns/status",
          "pipelines/status",
          "pipelineruns/status",
          "pipelineresources/status"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "update",
          "delete",
          "patch",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "tekton.dev"
        ],
        "resources": [
          "tasks",
          "clustertasks",
          "taskruns",
          "pipelines",
          "pipelineruns",
          "pipelineresources"
        ],
        "verbs": [
          "get",
          "list",
          "create",
          "update",
          "delete",
          "patch",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "tekton-bot"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets",
          "configmaps",
          "services"
        ],
        "verbs": [
          "list",
          "get",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "create",
          "get",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods/exec"
        ],
        "verbs": [
          "create"
        ]
      },
      {
        "apiGroups": [
          "jenkins.io"
        ],
        "resources": [
          "pipelineactivities",
          "sourcerepositories"
        ],
        "verbs": [
          "get",
          "create",
          "update"
        ]
      },
      {
        "apiGroups": [
          "jenkins.io"
        ],
        "resources": [
          "plugins"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "jenkins.io"
        ],
        "resources": [
          "users"
        ],
        "verbs": [
          "create",
          "update",
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "jenkins.io"
        ],
        "resources": [
          "releases"
        ],
        "verbs": [
          "get",
          "create",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ],
        "verbs": [
          "get",
          "list"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "ingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "jenkins.io"
        ],
        "resources": [
          "pipelineactivities",
          "pipelinestructures"
        ],
        "verbs": [
          "get",
          "create",
          "update"
        ]
      },
      {
        "apiGroups": [
          "jenkins.io"
        ],
        "resources": [
          "environments"
        ],
        "verbs": [
          "create",
          "list",
          "get",
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "jenkins.io"
        ],
        "resources": [
          "extensions"
        ],
        "verbs": [
          "get",
          "list"
        ]
      },
      {
        "apiGroups": [
          "vault.banzaicloud.com"
        ],
        "resources": [
          "vaults"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "environment-controller"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "*"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "jenkins.io"
        ],
        "resources": [
          "*"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "tekton.dev"
        ],
        "resources": [
          "*"
        ],
        "verbs": [
          "*"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "tekton-pipelines-default"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "tekton-pipelines",
        "namespace": "default"
      }
    ],
    "roleRef": {
      "kind": "Role",
      "name": "tekton-pipelines",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "tekton-bot"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "tekton-bot"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "tekton-bot",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "environment-controller"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "environment-controller"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "environment-controller"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app": "tekton-pipelines-controller"
      },
      "name": "tekton-pipelines-controller"
    },
    "spec": {
      "ports": [
        {
          "name": "metrics",
          "port": 9090,
          "protocol": "TCP",
          "targetPort": 9090
        }
      ],
      "selector": {
        "app": "tekton-pipelines-controller"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "environment-controller",
      "labels": {
        "app": "environment-controller"
      },
      "annotations": {
        "fabric8.io/expose": "true",
        "fabric8.io/ingress.annotations": "kubernetes.io/ingress.class: nginx"
      }
    },
    "spec": {
      "type": "LoadBalancer",
      "ports": [
        {
          "port": 80,
          "targetPort": 8080,
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app": "environment-controller"
      }
    }
  },
  {
    "apiVersion": "apps/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "tekton-pipelines-controller"
    },
    "spec": {
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "tekton-pipelines-controller"
          }
        },
        "spec": {
          "serviceAccountName": "tekton-pipelines",
          "containers": [
            {
              "name": "tekton-pipelines",
              "image": "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller:v0.5.1",
              "args": [
                "-logtostderr",
                "-stderrthreshold",
                "INFO",
                "-kubeconfig-writer-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/kubeconfigwriter:v0.5.1",
                "-creds-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/creds-init:v0.5.1",
                "-git-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.5.1",
                "-nop-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/nop:v0.5.1",
                "-bash-noop-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/bash:v0.5.1",
                "-gsutil-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/gsutil:v0.5.1",
                "-entrypoint-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/entrypoint:v0.5.1",
                "-pr-image",
                "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/pullrequest-init:v0.5.1",
                "-namespace",
                "default"
              ],
              "env": [
                {
                  "name": "SYSTEM_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "config-logging",
                  "mountPath": "/etc/config-logging"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config-logging",
              "configMap": {
                "name": "config-logging"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "environment-controller",
      "labels": {
        "app": "environment-controller"
      }
    },
    "spec": {
      "replicas": null,
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 1
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "environment-controller"
          }
        },
        "spec": {
          "serviceAccountName": "environment-controller",
          "terminationGracePeriodSeconds": 180,
          "containers": [
            {
              "name": "environment-controller",
              "image": "gcr.io/jenkinsxio/builder-maven:2.1.100-729",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "SYSTEM_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "WEBHOOK_URL",
                  "value": ""
                },
                {
                  "name": "GIT_SERVER_URL",
                  "value": "https://github.com"
                },
                {
                  "name": "GIT_KIND",
                  "value": "github"
                },
                {
                  "name": "OWNER",
                  "value": ""
                },
                {
                  "name": "REPO",
                  "value": ""
                },
                {
                  "name": "PROJECT_ID",
                  "value": ""
                },
                {
                  "name": "BUILD_PACK_URL",
                  "value": ""
                },
                {
                  "name": "BUILD_PACK_REF",
                  "value": ""
                },
                {
                  "name": "DOCKER_REGISTRY",
                  "value": ""
                },
                {
                  "name": "DOCKER_REGISTRY_ORG",
                  "value": ""
                },
                {
                  "name": "XDG_CONFIG_HOME",
                  "value": "/home/jenkins"
                },
                {
                  "name": "JX_BUILD_NUMBER",
                  "value": "1"
                }
              ],
              "command": [
                "jx"
              ],
              "args": [
                "controller",
                "environment",
                "-b"
              ],
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "128Mi"
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/etc/config-logging",
                  "name": "config-logging"
                }
              ]
            }
          ],
          "volumes": [
            {
              "configMap": {
                "name": "config-logging"
              },
              "name": "config-logging"
            }
          ]
        }
      }
    }
  }
]