[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodSecurityPolicy",
    "metadata": {
      "name": "release-name-enterprise-logs",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "privileged": false,
      "allowPrivilegeEscalation": false,
      "volumes": [
        "configMap",
        "emptyDir",
        "persistentVolumeClaim",
        "secret"
      ],
      "hostNetwork": false,
      "hostIPC": false,
      "hostPID": false,
      "runAsUser": {
        "rule": "MustRunAsNonRoot"
      },
      "seLinux": {
        "rule": "RunAsAny"
      },
      "supplementalGroups": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      },
      "fsGroup": {
        "rule": "MustRunAs",
        "ranges": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      },
      "readOnlyRootFilesystem": true,
      "requiredDropCapabilities": [
        "ALL"
      ]
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "release-name-enterprise-logs-read",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "read"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "enterprise-logs",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "read"
        }
      },
      "maxUnavailable": 1
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "release-name-enterprise-logs-write",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "write"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "enterprise-logs",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "write"
        }
      },
      "maxUnavailable": 1
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-enterprise-logs",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "automountServiceAccountToken": true
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-minio-update-prometheus-secret",
      "labels": {
        "app": "minio-update-prometheus-secret",
        "chart": "minio-8.0.9",
        "release": "release-name",
        "heritage": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-minio",
      "namespace": "Y7XUdxP8R0i65",
      "labels": {
        "app": "minio",
        "chart": "minio-8.0.9",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-minio",
      "labels": {
        "app": "minio",
        "chart": "minio-8.0.9",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "accesskey": "ZW50ZXJwcmlzZS1sb2dz",
      "secretkey": "c3VwZXJzZWNyZXQ="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "enterprise-logs-config",
      "labels": {
        "helm.sh/chart": "enterprise-logs-simple-1.2.0",
        "app.kubernetes.io/name": "enterprise-logs-simple",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "config.yaml": "YWRtaW5fY2xpZW50OgogIHN0b3JhZ2U6CiAgICBzMzoKICAgICAgYnVja2V0X25hbWU6IGVudGVycHJpc2UtbG9ncy1hZG1pbgogICAgdHlwZTogczMKYXV0aDoKICB0eXBlOiBlbnRlcnByaXNlCmF1dGhfZW5hYmxlZDogdHJ1ZQpjbHVzdGVyX25hbWU6IHJlbGVhc2UtbmFtZQpjb21tb246CiAgcGF0aF9wcmVmaXg6IC92YXIvbG9raQogIHJlcGxpY2F0aW9uX2ZhY3RvcjogMwogIHN0b3JhZ2U6CiAgICBzMzoKICAgICAgYWNjZXNzX2tleV9pZDogZW50ZXJwcmlzZS1sb2dzCiAgICAgIGJ1Y2tldG5hbWVzOiBlbnRlcnByaXNlLWxvZ3MtdHNkYgogICAgICBlbmRwb2ludDogJ3JlbGVhc2UtbmFtZS1taW5pby5kZWZhdWx0LnN2Yzo5MDAwJwogICAgICBpbnNlY3VyZTogdHJ1ZQogICAgICBzM2ZvcmNlcGF0aHN0eWxlOiB0cnVlCiAgICAgIHNlY3JldF9hY2Nlc3Nfa2V5OiBzdXBlcnNlY3JldAppbmdlc3RlcjoKICBtYXhfY2h1bmtfYWdlOiAyaAppbmdlc3Rlcl9jbGllbnQ6CiAgZ3JwY19jbGllbnRfY29uZmlnOgogICAgbWF4X3JlY3ZfbXNnX3NpemU6IDEwNDg1NzYwMAogICAgbWF4X3NlbmRfbXNnX3NpemU6IDEwNDg1NzYwMApsaWNlbnNlOgogIHBhdGg6IC9ldGMvZW50ZXJwcmlzZS1sb2dzL2xpY2Vuc2UvbGljZW5zZS5qd3QKbGltaXRzX2NvbmZpZzoKICBlbmZvcmNlX21ldHJpY19uYW1lOiBmYWxzZQogIG1heF9jYWNoZV9mcmVzaG5lc3NfcGVyX3F1ZXJ5OiAxMG0KICByZWplY3Rfb2xkX3NhbXBsZXM6IHRydWUKICByZWplY3Rfb2xkX3NhbXBsZXNfbWF4X2FnZTogMTY4aAptZW1iZXJsaXN0OgogIGpvaW5fbWVtYmVyczoKICAtIHJlbGVhc2UtbmFtZS1lbnRlcnByaXNlLWxvZ3Mtc2ltcGxlLW1lbWJlcmxpc3QKcXVlcmllcjoKICBxdWVyeV9pbmdlc3RlcnNfd2l0aGluOiAyaApydWxlcjoKICBlbmFibGVfYWxlcnRtYW5hZ2VyX2Rpc2NvdmVyeTogZmFsc2UKICBlbmFibGVfYXBpOiB0cnVlCiAgZW5hYmxlX3NoYXJkaW5nOiB0cnVlCiAgc3RvcmFnZToKICAgIHMzOgogICAgICBidWNrZXRuYW1lczogZW50ZXJwcmlzZS1sb2dzLXJ1bGVyCnNjaGVtYV9jb25maWc6CiAgY29uZmlnczoKICAtIGZyb206ICIyMDIwLTA5LTA3IgogICAgaW5kZXg6CiAgICAgIHBlcmlvZDogMjRoCiAgICAgIHByZWZpeDogbG9raV9pbmRleF8KICAgIG9iamVjdF9zdG9yZTogZmlsZXN5c3RlbQogICAgc2NoZW1hOiB2MTEKICAgIHN0b3JlOiBib2x0ZGItc2hpcHBlcgpzZXJ2ZXI6CiAgZ3JwY19saXN0ZW5fcG9ydDogOTA5NQogIGh0dHBfbGlzdGVuX3BvcnQ6IDMxMDA="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "enterprise-logs-license",
      "labels": {
        "helm.sh/chart": "enterprise-logs-simple-1.2.0",
        "app.kubernetes.io/name": "enterprise-logs-simple",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "license.jwt": "Tk9UQVZBTElETElDRU5TRQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-enterprise-logs-gateway",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "gateway"
      }
    },
    "data": {
      "nginx.conf": "worker_processes  5;  ## Default: 1\nerror_log  /dev/stderr;\npid        /tmp/nginx.pid;\nworker_rlimit_nofile 8192;\n\nevents {\n  worker_connections  4096;  ## Default: 1024\n}\n\nhttp {\n  client_body_temp_path /tmp/client_temp;\n  proxy_temp_path       /tmp/proxy_temp_path;\n  fastcgi_temp_path     /tmp/fastcgi_temp;\n  uwsgi_temp_path       /tmp/uwsgi_temp;\n  scgi_temp_path        /tmp/scgi_temp;\n\n  default_type application/octet-stream;\n  log_format   main '$remote_addr - $remote_user [$time_local]  $status '\n        '\"$request\" $body_bytes_sent \"$http_referer\" '\n        '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n  access_log   /dev/stderr  main;\n\n  sendfile     on;\n  tcp_nopush   on;\n  resolver kube-dns.kube-system.svc.cluster.local;\n\n  server {\n    listen             8080;\n\n    location = / {\n      return 200 'OK';\n      auth_basic off;\n    }\n\n    location = /api/prom/push {\n      proxy_pass       http://release-name-enterprise-logs-write.default.svc.cluster.local:3100$request_uri;\n    }\n\n    location = /api/prom/tail {\n      proxy_pass       http://release-name-enterprise-logs-read.default.svc.cluster.local:3100$request_uri;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection \"upgrade\";\n    }\n\n    location ~ /api/prom/.* {\n      proxy_pass       http://release-name-enterprise-logs-read.default.svc.cluster.local:3100$request_uri;\n    }\n\n    location = /loki/api/v1/push {\n      proxy_pass       http://release-name-enterprise-logs-write.default.svc.cluster.local:3100$request_uri;\n    }\n\n    location = /loki/api/v1/tail {\n      proxy_pass       http://release-name-enterprise-logs-read.default.svc.cluster.local:3100$request_uri;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection \"upgrade\";\n    }\n\n    location ~ /loki/api/.* {\n      proxy_pass       http://release-name-enterprise-logs-read.default.svc.cluster.local:3100$request_uri;\n    }\n\n    location ~ /admin/api/.* {\n      proxy_pass       http://release-name-enterprise-logs-write.default.svc.cluster.local:3100$request_uri;\n    }\n\n    location ~ /compactor/.* {\n      proxy_pass       http://release-name-enterprise-logs-read.default.svc.cluster.local:3100$request_uri;\n    }\n\n    location ~ /distributor/.* {\n      proxy_pass       http://release-name-enterprise-logs-write.default.svc.cluster.local:3100$request_uri;\n    }\n\n    location ~ /ring {\n      proxy_pass       http://release-name-enterprise-logs-write.default.svc.cluster.local:3100$request_uri;\n    }\n\n    location ~ /ingester/.* {\n      proxy_pass       http://release-name-enterprise-logs-write.default.svc.cluster.local:3100$request_uri;\n    }\n\n    location ~ /ruler/.* {\n      proxy_pass       http://release-name-enterprise-logs-read.default.svc.cluster.local:3100$request_uri;\n    }\n\n    location ~ /scheduler/.* {\n      proxy_pass       http://release-name-enterprise-logs-read.default.svc.cluster.local:3100$request_uri;\n    }\n  }\n}\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-minio",
      "labels": {
        "app": "minio",
        "chart": "minio-8.0.9",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "initialize": "#!/bin/sh\nset -e ; # Have script exit in the event of a failed command.\nMC_CONFIG_DIR=\"/etc/minio/mc/\"\nMC=\"/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}\"\n\n# connectToMinio\n# Use a check-sleep-check loop to wait for Minio service to be available\nconnectToMinio() {\n  SCHEME=$1\n  ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts\n  set -e ; # fail if we can't read the keys.\n  ACCESS=$(cat /config/accesskey) ; SECRET=$(cat /config/secretkey) ;\n  set +e ; # The connections to minio are allowed to fail.\n  echo \"Connecting to Minio server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT\" ;\n  MC_COMMAND=\"${MC} config host add myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET\" ;\n  $MC_COMMAND ;\n  STATUS=$? ;\n  until [ $STATUS = 0 ]\n  do\n    ATTEMPTS=`expr $ATTEMPTS + 1` ;\n    echo \\\"Failed attempts: $ATTEMPTS\\\" ;\n    if [ $ATTEMPTS -gt $LIMIT ]; then\n      exit 1 ;\n    fi ;\n    sleep 2 ; # 1 second intervals between attempts\n    $MC_COMMAND ;\n    STATUS=$? ;\n  done ;\n  set -e ; # reset `e` as active\n  return 0\n}\n\n# checkBucketExists ($bucket)\n# Check if the bucket exists, by using the exit code of `mc ls`\ncheckBucketExists() {\n  BUCKET=$1\n  CMD=$(${MC} ls myminio/$BUCKET > /dev/null 2>&1)\n  return $?\n}\n\n# createBucket ($bucket, $policy, $purge)\n# Ensure bucket exists, purging if asked to\ncreateBucket() {\n  BUCKET=$1\n  POLICY=$2\n  PURGE=$3\n  VERSIONING=$4\n\n  # Purge the bucket, if set & exists\n  # Since PURGE is user input, check explicitly for `true`\n  if [ $PURGE = true ]; then\n    if checkBucketExists $BUCKET ; then\n      echo \"Purging bucket '$BUCKET'.\"\n      set +e ; # don't exit if this fails\n      ${MC} rm -r --force myminio/$BUCKET\n      set -e ; # reset `e` as active\n    else\n      echo \"Bucket '$BUCKET' does not exist, skipping purge.\"\n    fi\n  fi\n\n  # Create the bucket if it does not exist\n  if ! checkBucketExists $BUCKET ; then\n    echo \"Creating bucket '$BUCKET'\"\n    ${MC} mb myminio/$BUCKET\n  else\n    echo \"Bucket '$BUCKET' already exists.\"\n  fi\n\n\n  # set versioning for bucket\n  if [ ! -z $VERSIONING ] ; then\n    if [ $VERSIONING = true ] ; then\n        echo \"Enabling versioning for '$BUCKET'\"\n        ${MC} version enable myminio/$BUCKET\n    elif [ $VERSIONING = false ] ; then\n        echo \"Suspending versioning for '$BUCKET'\"\n        ${MC} version suspend myminio/$BUCKET\n    fi\n  else\n      echo \"Bucket '$BUCKET' versioning unchanged.\"\n  fi\n\n  # At this point, the bucket should exist, skip checking for existence\n  # Set policy on the bucket\n  echo \"Setting policy of bucket '$BUCKET' to '$POLICY'.\"\n  ${MC} policy set $POLICY myminio/$BUCKET\n}\n\n# Try connecting to Minio instance\nscheme=http\nconnectToMinio $scheme\n# Create the buckets\ncreateBucket enterprise-logs-tsdb none false \ncreateBucket enterprise-logs-admin none false \ncreateBucket enterprise-logs-ruler none false"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "name": "release-name-minio",
      "labels": {
        "app": "minio",
        "chart": "minio-8.0.9",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "5Gi"
        }
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-enterprise-logs",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "podsecuritypolicies"
        ],
        "verbs": [
          "use"
        ],
        "resourceNames": [
          "release-name-enterprise-logs"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-minio-update-prometheus-secret",
      "labels": {
        "app": "minio-update-prometheus-secret",
        "chart": "minio-8.0.9",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "create",
          "update",
          "patch"
        ],
        "resourceNames": [
          "release-name-minio-prometheus"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "create"
        ]
      },
      {
        "apiGroups": [
          "monitoring.coreos.com"
        ],
        "resources": [
          "servicemonitors"
        ],
        "verbs": [
          "get"
        ],
        "resourceNames": [
          "release-name-minio"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-enterprise-logs",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-enterprise-logs"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-enterprise-logs"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-minio-update-prometheus-secret",
      "labels": {
        "app": "minio-update-prometheus-secret",
        "chart": "minio-8.0.9",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-minio-update-prometheus-secret"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-minio-update-prometheus-secret",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-enterprise-logs-gateway",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "gateway"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "http",
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "gateway"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-enterprise-logs-read",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "read"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "http",
          "port": 3100,
          "targetPort": "http",
          "protocol": "TCP"
        },
        {
          "name": "grpc",
          "port": 9095,
          "targetPort": "grpc",
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "read"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-enterprise-logs-read-headless",
      "labels": {
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "read"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "http",
          "port": 3100,
          "targetPort": "http",
          "protocol": "TCP"
        },
        {
          "name": "grpc",
          "port": 9095,
          "targetPort": "grpc",
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "read"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-enterprise-logs-memberlist",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "http",
          "port": 7946,
          "targetPort": "http-memberlist",
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/part-of": "memberlist"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-enterprise-logs-write-headless",
      "labels": {
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "write"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "http",
          "port": 3100,
          "targetPort": "http",
          "protocol": "TCP"
        },
        {
          "name": "grpc",
          "port": 9095,
          "targetPort": "grpc",
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "write"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-enterprise-logs-write",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "write"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "http",
          "port": 3100,
          "targetPort": "http",
          "protocol": "TCP"
        },
        {
          "name": "grpc",
          "port": 9095,
          "targetPort": "grpc",
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "write"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-minio",
      "labels": {
        "app": "minio",
        "chart": "minio-8.0.9",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "http",
          "port": 9000,
          "protocol": "TCP",
          "targetPort": 9000
        }
      ],
      "selector": {
        "app": "minio",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-enterprise-logs-gateway",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "gateway"
      }
    },
    "spec": {
      "replicas": 1,
      "strategy": {
        "type": "RollingUpdate"
      },
      "revisionHistoryLimit": 10,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "enterprise-logs",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "gateway"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "97e7a39dc2d13e12a815564c7afaf55dfa0e98878c2698a9f72a73148d6da7f4"
          },
          "labels": {
            "app.kubernetes.io/name": "enterprise-logs",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "gateway"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-enterprise-logs",
          "securityContext": {
            "fsGroup": 101,
            "runAsGroup": 101,
            "runAsNonRoot": true,
            "runAsUser": 101
          },
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "nginx",
              "image": "docker.io/nginxinc/nginx-unprivileged:1.19-alpine",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 15,
                "timeoutSeconds": 1
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                },
                "readOnlyRootFilesystem": true
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etc/nginx"
                },
                {
                  "name": "tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "docker-entrypoint-d-override",
                  "mountPath": "/docker-entrypoint.d"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchLabels": {
                      "app.kubernetes.io/name": "enterprise-logs",
                      "app.kubernetes.io/instance": "release-name",
                      "app.kubernetes.io/component": "gateway"
                    }
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              ],
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "weight": 100,
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "enterprise-logs",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "gateway"
                      }
                    },
                    "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                  }
                }
              ]
            }
          },
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-enterprise-logs-gateway"
              }
            },
            {
              "name": "tmp",
              "emptyDir": {}
            },
            {
              "name": "docker-entrypoint-d-override",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-minio",
      "labels": {
        "app": "minio",
        "chart": "minio-8.0.9",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": "100%",
          "maxUnavailable": 0
        }
      },
      "selector": {
        "matchLabels": {
          "app": "minio",
          "release": "release-name"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-minio",
          "labels": {
            "app": "minio",
            "release": "release-name"
          },
          "annotations": {
            "checksum/secrets": "2493fcdaf0c74cb1fa28b5c92d87245fdcd60386a797e644ee667bda1798f098",
            "checksum/config": "a83624ee97ead5d0934fc5e5d14b692bc134cb60c073e1ffe44655976de685f4"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-minio",
          "securityContext": {
            "runAsUser": 1000,
            "runAsGroup": 1000,
            "fsGroup": 1000
          },
          "containers": [
            {
              "name": "minio",
              "image": "minio/minio:RELEASE.2020-12-03T05-49-24Z",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/sh",
                "-ce",
                "/usr/bin/docker-entrypoint.sh minio -S /etc/minio/certs/ server /export"
              ],
              "volumeMounts": [
                {
                  "name": "export",
                  "mountPath": "/export"
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 9000
                }
              ],
              "env": [
                {
                  "name": "MINIO_ACCESS_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-minio",
                      "key": "accesskey"
                    }
                  }
                },
                {
                  "name": "MINIO_SECRET_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-minio",
                      "key": "secretkey"
                    }
                  }
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "128Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "export",
              "persistentVolumeClaim": {
                "claimName": "release-name-minio"
              }
            },
            {
              "name": "minio-user",
              "secret": {
                "secretName": "release-name-minio"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-enterprise-logs-read",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "read",
        "app.kubernetes.io/part-of": "memberlist"
      }
    },
    "spec": {
      "replicas": 3,
      "podManagementPolicy": "Parallel",
      "updateStrategy": {
        "rollingUpdate": {
          "partition": 0
        }
      },
      "serviceName": "release-name-enterprise-logs-read-headless",
      "revisionHistoryLimit": 10,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "enterprise-logs",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "read"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          },
          "labels": {
            "app.kubernetes.io/name": "enterprise-logs",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "read",
            "app.kubernetes.io/part-of": "memberlist"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-enterprise-logs",
          "securityContext": {
            "fsGroup": 10001,
            "runAsGroup": 10001,
            "runAsNonRoot": true,
            "runAsUser": 10001
          },
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "loki",
              "image": "docker.io/grafana/enterprise-logs:v1.4.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "-config.file=/etc/loki/config/config.yaml",
                "-target=read"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 3100,
                  "protocol": "TCP"
                },
                {
                  "name": "grpc",
                  "containerPort": 9095,
                  "protocol": "TCP"
                },
                {
                  "name": "http-memberlist",
                  "containerPort": 7946,
                  "protocol": "TCP"
                }
              ],
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                },
                "readOnlyRootFilesystem": true
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/ready",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 1
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etc/loki/config"
                },
                {
                  "name": "tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "data",
                  "mountPath": "/var/loki"
                },
                {
                  "mountPath": "/etc/enterprise-logs/license",
                  "name": "license"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchLabels": {
                      "app.kubernetes.io/name": "enterprise-logs",
                      "app.kubernetes.io/instance": "release-name",
                      "app.kubernetes.io/component": "read"
                    }
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              ],
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "weight": 100,
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "enterprise-logs",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "read"
                      }
                    },
                    "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                  }
                }
              ]
            }
          },
          "volumes": [
            {
              "name": "tmp",
              "emptyDir": {}
            },
            {
              "name": "config",
              "secret": {
                "secretName": "enterprise-logs-config"
              }
            },
            {
              "name": "license",
              "secret": {
                "secretName": "enterprise-logs-license"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "10Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-enterprise-logs-write",
      "labels": {
        "helm.sh/chart": "loki-simple-scalable-0.3.2",
        "app.kubernetes.io/name": "enterprise-logs",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.4.2",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "write",
        "app.kubernetes.io/part-of": "memberlist"
      }
    },
    "spec": {
      "replicas": 3,
      "podManagementPolicy": "Parallel",
      "updateStrategy": {
        "rollingUpdate": {
          "partition": 0
        }
      },
      "serviceName": "release-name-enterprise-logs-write-headless",
      "revisionHistoryLimit": 10,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "enterprise-logs",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "write"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          },
          "labels": {
            "app.kubernetes.io/name": "enterprise-logs",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "write",
            "app.kubernetes.io/part-of": "memberlist"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-enterprise-logs",
          "securityContext": {
            "fsGroup": 10001,
            "runAsGroup": 10001,
            "runAsNonRoot": true,
            "runAsUser": 10001
          },
          "terminationGracePeriodSeconds": 300,
          "containers": [
            {
              "name": "loki",
              "image": "docker.io/grafana/enterprise-logs:v1.4.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "-config.file=/etc/loki/config/config.yaml",
                "-target=write"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 3100,
                  "protocol": "TCP"
                },
                {
                  "name": "grpc",
                  "containerPort": 9095,
                  "protocol": "TCP"
                },
                {
                  "name": "http-memberlist",
                  "containerPort": 7946,
                  "protocol": "TCP"
                }
              ],
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                },
                "readOnlyRootFilesystem": true
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/ready",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 1
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/etc/loki/config"
                },
                {
                  "name": "data",
                  "mountPath": "/var/loki"
                },
                {
                  "mountPath": "/etc/enterprise-logs/license",
                  "name": "license"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "affinity": {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchLabels": {
                      "app.kubernetes.io/name": "enterprise-logs",
                      "app.kubernetes.io/instance": "release-name",
                      "app.kubernetes.io/component": "write"
                    }
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              ],
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "weight": 100,
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "enterprise-logs",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "write"
                      }
                    },
                    "topologyKey": "failure-domain.beta.kubernetes.io/zone"
                  }
                }
              ]
            }
          },
          "volumes": [
            {
              "name": "config",
              "secret": {
                "secretName": "enterprise-logs-config"
              }
            },
            {
              "name": "license",
              "secret": {
                "secretName": "enterprise-logs-license"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "10Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-enterprise-logs-simple-tokengen",
      "labels": {
        "helm.sh/chart": "enterprise-logs-simple-1.2.0",
        "app.kubernetes.io/name": "enterprise-logs-simple",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v1.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "tokengen"
      },
      "annotations": {
        "helm.sh/hook": "post-install"
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-enterprise-logs-simple-tokengen",
      "labels": {
        "helm.sh/chart": "enterprise-logs-simple-1.2.0",
        "app.kubernetes.io/name": "enterprise-logs-simple",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v1.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "tokengen"
      },
      "annotations": {
        "helm.sh/hook": "post-install"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "create"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-enterprise-logs-simple-tokengen",
      "labels": {
        "helm.sh/chart": "enterprise-logs-simple-1.2.0",
        "app.kubernetes.io/name": "enterprise-logs-simple",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v1.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "tokengen"
      },
      "annotations": {
        "helm.sh/hook": "post-install"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-enterprise-logs-simple-tokengen"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-enterprise-logs-simple-tokengen"
      }
    ]
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "release-name-minio-make-bucket-job",
      "labels": {
        "app": "minio-make-bucket-job",
        "chart": "minio-8.0.9",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
      }
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "app": "minio-job",
            "release": "release-name"
          }
        },
        "spec": {
          "restartPolicy": "OnFailure",
          "volumes": [
            {
              "name": "minio-configuration",
              "projected": {
                "sources": [
                  {
                    "configMap": {
                      "name": "release-name-minio"
                    }
                  },
                  {
                    "secret": {
                      "name": "release-name-minio"
                    }
                  }
                ]
              }
            }
          ],
          "serviceAccountName": "release-name-minio",
          "containers": [
            {
              "name": "minio-mc",
              "image": "minio/mc:RELEASE.2020-11-25T23-04-07Z",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/sh",
                "/config/initialize"
              ],
              "env": [
                {
                  "name": "MINIO_ENDPOINT",
                  "value": "release-name-minio"
                },
                {
                  "name": "MINIO_PORT",
                  "value": "9000"
                }
              ],
              "volumeMounts": [
                {
                  "name": "minio-configuration",
                  "mountPath": "/config"
                }
              ],
              "resources": {
                "requests": {
                  "memory": "128Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "release-name-enterprise-logs-simple-tokengen",
      "labels": {
        "helm.sh/chart": "enterprise-logs-simple-1.2.0",
        "app.kubernetes.io/name": "enterprise-logs-simple",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v1.4.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "tokengen"
      },
      "annotations": {
        "helm.sh/hook": "post-install"
      }
    },
    "spec": {
      "backoffLimit": 6,
      "completions": 1,
      "parallelism": 1,
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "enterprise-logs-simple",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "tokengen"
          },
          "annotations": null
        },
        "spec": {
          "securityContext": {
            "fsGroup": 10001,
            "runAsGroup": 10001,
            "runAsNonRoot": true,
            "runAsUser": 10001
          },
          "initContainers": [
            {
              "name": "enterprise-logs",
              "image": "docker.io/grafana/enterprise-logs:v1.4.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "-config.file=/etc/loki/config/config.yaml",
                "-target=tokengen",
                "-admin.client.backend-type=s3",
                "-admin.client.s3.endpoint=release-name-minio.default.svc:9000",
                "-admin.client.s3.bucket-name=enterprise-logs-admin",
                "-admin.client.s3.access-key-id=enterprise-logs",
                "-admin.client.s3.secret-access-key=supersecret",
                "-admin.client.s3.insecure=true",
                "-tokengen.token-file=/shared/admin-token"
              ],
              "volumeMounts": [
                {
                  "name": "shared",
                  "mountPath": "/shared"
                },
                {
                  "name": "config",
                  "mountPath": "/etc/loki/config"
                },
                {
                  "name": "license",
                  "mountPath": "/etc/enterprise-logs/license"
                }
              ],
              "env": null
            }
          ],
          "containers": [
            {
              "name": "create-secret",
              "image": "bitnami/kubectl",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-euc",
                "kubectl create secret generic gel-admin-token --from-file=token=/shared/admin-token --from-literal=grafana-token=\"$(base64 <(echo :$(cat /shared/admin-token)))\""
              ],
              "volumeMounts": [
                {
                  "name": "shared",
                  "mountPath": "/shared"
                },
                {
                  "name": "config",
                  "mountPath": "/etc/loki/config"
                },
                {
                  "name": "license",
                  "mountPath": "/etc/enterprise-logs/license"
                }
              ]
            }
          ],
          "restartPolicy": "OnFailure",
          "serviceAccount": "release-name-enterprise-logs-simple-tokengen",
          "serviceAccountName": "release-name-enterprise-logs-simple-tokengen",
          "volumes": [
            {
              "name": "config",
              "secret": {
                "secretName": "enterprise-logs-config"
              }
            },
            {
              "name": "license",
              "secret": {
                "secretName": "enterprise-logs-license"
              }
            },
            {
              "name": "shared",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  }
]