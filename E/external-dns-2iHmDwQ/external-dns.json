[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-external-dns",
      "namespace": "2iHmDwQ",
      "labels": {
        "app.kubernetes.io/name": "external-dns",
        "helm.sh/chart": "external-dns-6.5.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "automountServiceAccountToken": true
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-external-dns",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "external-dns",
        "helm.sh/chart": "external-dns-6.5.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services",
          "pods",
          "nodes",
          "endpoints"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions",
          "networking.k8s.io",
          "getambassador.io"
        ],
        "resources": [
          "ingresses",
          "hosts"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "route.openshift.io"
        ],
        "resources": [
          "routes"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "networking.istio.io"
        ],
        "resources": [
          "gateways",
          "virtualservices"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "zalando.org"
        ],
        "resources": [
          "routegroups"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "zalando.org"
        ],
        "resources": [
          "routegroups/status"
        ],
        "verbs": [
          "patch",
          "update"
        ]
      },
      {
        "apiGroups": [
          "projectcontour.io"
        ],
        "resources": [
          "httpproxies"
        ],
        "verbs": [
          "get",
          "watch",
          "list"
        ]
      },
      {
        "apiGroups": [
          "gloo.solo.io",
          "gateway.solo.io"
        ],
        "resources": [
          "proxies",
          "virtualservices"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "configuration.konghq.com"
        ],
        "resources": [
          "tcpingresses"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-external-dns",
      "namespace": "default",
      "labels": {
        "app.kubernetes.io/name": "external-dns",
        "helm.sh/chart": "external-dns-6.5.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-external-dns"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-external-dns",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-external-dns",
      "namespace": "2iHmDwQ",
      "labels": {
        "app.kubernetes.io/name": "external-dns",
        "helm.sh/chart": "external-dns-6.5.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "sessionAffinity": "None",
      "ports": [
        {
          "name": "http",
          "port": 7979,
          "protocol": "TCP",
          "targetPort": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "external-dns",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-external-dns",
      "namespace": "2iHmDwQ",
      "labels": {
        "app.kubernetes.io/name": "external-dns",
        "helm.sh/chart": "external-dns-6.5.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "external-dns",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "external-dns",
            "helm.sh/chart": "external-dns-6.5.5",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm"
          },
          "annotations": null
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001,
            "runAsUser": 1001
          },
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "external-dns",
                        "app.kubernetes.io/instance": "release-name"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "serviceAccountName": "release-name-external-dns",
          "containers": [
            {
              "name": "external-dns",
              "image": "docker.io/bitnami/external-dns:0.12.0-debian-11-r3",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--metrics-address=:7979",
                "--log-level=info",
                "--log-format=text",
                "--policy=upsert-only",
                "--provider=aws",
                "--registry=txt",
                "--interval=1m",
                "--source=service",
                "--source=ingress",
                "--aws-api-retries=3",
                "--aws-zone-type=",
                "--aws-batch-change-size=1000"
              ],
              "env": [
                {
                  "name": "AWS_DEFAULT_REGION",
                  "value": "us-east-1"
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "http",
                  "containerPort": 7979
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": "http"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 2
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": "http"
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": null
            }
          ],
          "volumes": null
        }
      }
    }
  }
]