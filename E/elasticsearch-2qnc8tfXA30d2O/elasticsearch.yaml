apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.30.0
    component: client
    heritage: Helm
    release: release-name
  name: release-name-elasticsearch-client
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.30.0
    component: data
    heritage: Helm
    release: release-name
  name: release-name-elasticsearch-data
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.30.0
    component: master
    heritage: Helm
    release: release-name
  name: release-name-elasticsearch-master
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-elasticsearch
  labels:
    app: release-name-elasticsearch
    chart: elasticsearch-1.30.0
    release: release-name
    heritage: Helm
data:
  elasticsearch.yml: |-
    cluster.name: elasticsearch

    node.data: ${NODE_DATA:true}
    node.master: ${NODE_MASTER:true}
    node.ingest: ${NODE_INGEST:true}
    node.name: ${HOSTNAME}

    network.host: 0.0.0.0
    # see https://github.com/kubernetes/kubernetes/issues/3595
    bootstrap.memory_lock: ${BOOTSTRAP_MEMORY_LOCK:false}

    discovery:
      zen:
        ping.unicast.hosts: ${DISCOVERY_SERVICE:}
        minimum_master_nodes: ${MINIMUM_MASTER_NODES:2}

    # see https://github.com/elastic/elasticsearch-definitive-guide/pull/679
    processors: ${PROCESSORS:}

    # avoid split-brain w/ a minimum consensus of two masters plus a data node
    gateway.expected_master_nodes: ${EXPECTED_MASTER_NODES:2}
    gateway.expected_data_nodes: ${EXPECTED_DATA_NODES:1}
    gateway.recover_after_time: ${RECOVER_AFTER_TIME:5m}
    gateway.recover_after_master_nodes: ${RECOVER_AFTER_MASTER_NODES:2}
    gateway.recover_after_data_nodes: ${RECOVER_AFTER_DATA_NODES:1}
  log4j2.properties: |-
    status = error
    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] %marker%m%n
    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console
    logger.searchguard.name = com.floragunn
    logger.searchguard.level = info
  data-pre-stop-hook.sh: |-
    #!/bin/bash
    exec &> >(tee -a "/var/log/elasticsearch-hooks.log")
    NODE_NAME=${HOSTNAME}
    echo "Prepare to migrate data of the node ${NODE_NAME}"
    echo "Move all data from node ${NODE_NAME}"
    curl -s -XPUT -H 'Content-Type: application/json' 'release-name-elasticsearch-client:9200/_cluster/settings' -d "{
      \"transient\" :{
          \"cluster.routing.allocation.exclude._name\" : \"${NODE_NAME}\"
      }
    }"
    echo ""

    while true ; do
      echo -e "Wait for node ${NODE_NAME} to become empty"
      SHARDS_ALLOCATION=$(curl -s -XGET 'http://release-name-elasticsearch-client:9200/_cat/shards')
      if ! echo "${SHARDS_ALLOCATION}" | grep -E "${NODE_NAME}"; then
        break
      fi
      sleep 1
    done
    echo "Node ${NODE_NAME} is ready to shutdown"
  data-post-start-hook.sh: |-
    #!/bin/bash
    exec &> >(tee -a "/var/log/elasticsearch-hooks.log")
    NODE_NAME=${HOSTNAME}
    CLUSTER_SETTINGS=$(curl -s -XGET "http://release-name-elasticsearch-client:9200/_cluster/settings")
    if echo "${CLUSTER_SETTINGS}" | grep -E "${NODE_NAME}"; then
      echo "Activate node ${NODE_NAME}"
      curl -s -XPUT -H 'Content-Type: application/json' "http://release-name-elasticsearch-client:9200/_cluster/settings" -d "{
        \"transient\" :{
            \"cluster.routing.allocation.exclude._name\" : null
        }
      }"
    fi
    echo "Node ${NODE_NAME} is ready to be used"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-elasticsearch-test
  labels:
    app: release-name-elasticsearch
    chart: elasticsearch-1.30.0
    heritage: Helm
    release: release-name
data:
  run.sh: |-
    @test "Test Access and Health" {
      curl -D - http://release-name-elasticsearch-client:9200
      curl -D - http://release-name-elasticsearch-client:9200/_cluster/health?wait_for_status=green
    }
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.30.0
    component: client
    heritage: Helm
    release: release-name
  name: release-name-elasticsearch-client
spec:
  ports:
    - name: http
      port: 9200
      targetPort: http
  selector:
    app: elasticsearch
    component: client
    release: release-name
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.30.0
    component: master
    heritage: Helm
    release: release-name
  name: release-name-elasticsearch-discovery
spec:
  clusterIP: None
  ports:
    - port: 9300
      targetPort: transport
  selector:
    app: elasticsearch
    component: master
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.30.0
    component: master
    heritage: Helm
    release: release-name
  name: release-name-elasticsearch-master
spec:
  ports:
    - port: 9300
      targetPort: transport
  selector:
    app: elasticsearch
    component: master
    release: release-name
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.30.0
    component: client
    heritage: Helm
    release: release-name
  name: release-name-elasticsearch-client
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: elasticsearch
        component: client
        release: release-name
      annotations:
        checksum/config: ff13adbf845687e9f2384c2a24c4b8cec8c7587e9ea6ce51b23fc5758e00361d
    spec:
      serviceAccountName: release-name-elasticsearch-client
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: elasticsearch
                    release: release-name
                    component: client
      initContainers:
        - name: sysctl
          image: busybox:latest
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          command:
            - sysctl
            - -w
            - vm.max_map_count=262144
          securityContext:
            privileged: true
      containers:
        - name: elasticsearch
          env:
            - name: NODE_DATA
              value: "false"
            - name: NODE_MASTER
              value: "false"
            - name: DISCOVERY_SERVICE
              value: release-name-elasticsearch-discovery
            - name: PROCESSORS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: ES_JAVA_OPTS
              value: '-Djava.net.preferIPv4Stack=true -Xms512m -Xmx512m  '
            - name: MINIMUM_MASTER_NODES
              value: "2"
          resources:
            limits:
              cpu: "1"
            requests:
              cpu: 25m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
            initialDelaySeconds: 90
          image: ygqygq2/elasticsearch:6.7.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9200
              name: http
            - containerPort: 9300
              name: transport
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              name: config
              subPath: elasticsearch.yml
      volumes:
        - name: config
          configMap:
            name: release-name-elasticsearch
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.30.0
    component: data
    heritage: Helm
    release: release-name
  name: release-name-elasticsearch-data
spec:
  serviceName: release-name-elasticsearch-data
  replicas: 2
  template:
    metadata:
      labels:
        app: elasticsearch
        component: data
        release: release-name
        role: data
    spec:
      serviceAccountName: release-name-elasticsearch-data
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: elasticsearch
                    release: release-name
                    component: data
      initContainers:
        - name: sysctl
          image: busybox:latest
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          command:
            - sysctl
            - -w
            - vm.max_map_count=262144
          securityContext:
            privileged: true
        - name: chown
          image: ygqygq2/elasticsearch:6.7.0
          imagePullPolicy: IfNotPresent
          resources: {}
          command:
            - /bin/bash
            - -c
            - |
              set -e; set -x; chown elasticsearch:elasticsearch /usr/share/elasticsearch/data; for datadir in $(find /usr/share/elasticsearch/data -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
                chown -R elasticsearch:elasticsearch $datadir;
              done; chown elasticsearch:elasticsearch /usr/share/elasticsearch/logs; for logfile in $(find /usr/share/elasticsearch/logs -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
                chown -R elasticsearch:elasticsearch $logfile;
              done
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: data
      containers:
        - name: elasticsearch
          env:
            - name: DISCOVERY_SERVICE
              value: release-name-elasticsearch-discovery
            - name: NODE_MASTER
              value: "false"
            - name: PROCESSORS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: ES_JAVA_OPTS
              value: '-Djava.net.preferIPv4Stack=true -Xms1536m -Xmx1536m  '
            - name: MINIMUM_MASTER_NODES
              value: "2"
          image: ygqygq2/elasticsearch:6.7.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9300
              name: transport
          resources:
            limits:
              cpu: "1"
            requests:
              cpu: 25m
              memory: 1536Mi
          readinessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
            initialDelaySeconds: 5
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: data
            - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              name: config
              subPath: elasticsearch.yml
            - name: config
              mountPath: /data-pre-stop-hook.sh
              subPath: data-pre-stop-hook.sh
            - name: config
              mountPath: /data-post-start-hook.sh
              subPath: data-post-start-hook.sh
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - /data-pre-stop-hook.sh
            postStart:
              exec:
                command:
                  - /bin/bash
                  - /data-post-start-hook.sh
      terminationGracePeriodSeconds: 3600
      volumes:
        - name: config
          configMap:
            name: release-name-elasticsearch
        - name: data
          emptyDir: {}
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: OnDelete
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: elasticsearch
    chart: elasticsearch-1.30.0
    component: master
    heritage: Helm
    release: release-name
  name: release-name-elasticsearch-master
spec:
  serviceName: release-name-elasticsearch-master
  replicas: 3
  template:
    metadata:
      labels:
        app: elasticsearch
        component: master
        release: release-name
        role: master
    spec:
      serviceAccountName: release-name-elasticsearch-master
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: elasticsearch
                    release: release-name
                    component: master
      initContainers:
        - name: sysctl
          image: busybox:latest
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          command:
            - sysctl
            - -w
            - vm.max_map_count=262144
          securityContext:
            privileged: true
        - name: chown
          image: ygqygq2/elasticsearch:6.7.0
          imagePullPolicy: IfNotPresent
          resources: {}
          command:
            - /bin/bash
            - -c
            - |
              set -e; set -x; chown elasticsearch:elasticsearch -R /usr/share/elasticsearch/config; chown elasticsearch:elasticsearch -R /usr/share/elasticsearch/plugins; chown elasticsearch:elasticsearch /usr/share/elasticsearch/data; for datadir in $(find /usr/share/elasticsearch/data -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
                chown -R elasticsearch:elasticsearch $datadir;
              done; chown elasticsearch:elasticsearch /usr/share/elasticsearch/logs; for logfile in $(find /usr/share/elasticsearch/logs -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
                chown -R elasticsearch:elasticsearch $logfile;
              done
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: data
      containers:
        - name: elasticsearch
          env:
            - name: NODE_DATA
              value: "false"
            - name: DISCOVERY_SERVICE
              value: release-name-elasticsearch-discovery
            - name: PROCESSORS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: ES_JAVA_OPTS
              value: '-Djava.net.preferIPv4Stack=true -Xms512m -Xmx512m  '
            - name: MINIMUM_MASTER_NODES
              value: "2"
          resources:
            limits:
              cpu: "1"
            requests:
              cpu: 25m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
            initialDelaySeconds: 5
          image: ygqygq2/elasticsearch:6.7.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9300
              name: transport
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: data
            - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              name: config
              subPath: elasticsearch.yml
      volumes:
        - name: config
          configMap:
            name: release-name-elasticsearch
        - name: data
          emptyDir: {}
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: OnDelete
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-elasticsearch-test
  labels:
    app: release-name-elasticsearch
    chart: elasticsearch-1.30.0
    heritage: Helm
    release: release-name
  annotations:
    helm.sh/hook: test-success
spec:
  initContainers:
    - name: test-framework
      image: dduportal/bats:0.4.0
      command:
        - bash
        - -c
        - |
          set -ex
          # copy bats to tools dir
          cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
        - mountPath: /tools
          name: tools
  containers:
    - name: release-name-test
      image: dduportal/bats:0.4.0
      command:
        - /tools/bats/bats
        - -t
        - /tests/run.sh
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
        - mountPath: /tools
          name: tools
  volumes:
    - name: tests
      configMap:
        name: release-name-elasticsearch-test
    - name: tools
      emptyDir: {}
  restartPolicy: Never
