[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "labels": {
        "app": "prometheus",
        "chart": "exporter-kubernetes-0.1.1",
        "heritage": "Helm",
        "prometheus": "release-name",
        "release": "release-name"
      },
      "name": "release-name-exporter-kubernetes"
    },
    "data": {
      "kubernetes.rules": "# NOTE: These rules were kindly contributed by the SoundCloud engineering team.\n\nALERT K8SApiserverDown\n  IF up{job=\"kubernetes\"} == 0\n  FOR 15m\n  LABELS {\n    service = \"k8s\",\n    severity = \"warning\"\n  }\n  ANNOTATIONS {\n    summary = \"API server unreachable\",\n    description = \"An API server could not be scraped.\",\n  }\n\n# Disable for non HA kubernetes setups.\nALERT K8SApiserverDown\n  IF absent({job=\"kubernetes\"}) or (count by(cluster) (up{job=\"kubernetes\"} == 1) < count by(cluster) (up{job=\"kubernetes\"}))\n  FOR 5m\n  LABELS {\n    service = \"k8s\",\n    severity = \"critical\"\n  }\n  ANNOTATIONS {\n    summary = \"API server unreachable\",\n    description = \"Prometheus failed to scrape multiple API servers, or all API servers have disappeared from service discovery.\",\n  }"
    }
  },
  {
    "apiVersion": "monitoring.coreos.com/v1alpha1",
    "kind": "ServiceMonitor",
    "metadata": {
      "labels": {
        "app": "prometheus",
        "chart": "exporter-kubernetes-0.1.1",
        "component": "kubelets",
        "heritage": "Helm",
        "release": "release-name",
        "prometheus": "release-name"
      },
      "name": "release-name-exporter-kubernetes"
    },
    "spec": {
      "jobLabel": "release-name-exporter-kubernetes",
      "selector": {
        "matchLabels": {
          "component": "apiserver",
          "provider": "kubernetes"
        }
      },
      "namespaceSelector": {
        "matchNames": [
          "default"
        ]
      },
      "endpoints": [
        {
          "port": "https",
          "interval": "15s",
          "scheme": "https",
          "tlsConfig": {
            "caFile": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
            "insecureSkipVerify": true
          },
          "bearerTokenFile": "/var/run/secrets/kubernetes.io/serviceaccount/token"
        }
      ]
    }
  }
]