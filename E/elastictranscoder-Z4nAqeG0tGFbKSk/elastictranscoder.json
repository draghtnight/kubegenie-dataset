[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-media-storage",
      "labels": {
        "helm.sh/chart": "media-storage-0.2.0",
        "app.kubernetes.io/name": "media-storage",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-media",
      "labels": {
        "helm.sh/chart": "media-0.1.0",
        "app.kubernetes.io/name": "media",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-transcoder-handler",
      "labels": {
        "helm.sh/chart": "transcoder-handler-0.2.0",
        "app.kubernetes.io/name": "transcoder-handler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-transcoder",
      "labels": {
        "helm.sh/chart": "transcoder-0.1.0",
        "app.kubernetes.io/name": "transcoder",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-media-storage",
      "labels": {
        "helm.sh/chart": "media-storage-0.2.0",
        "app.kubernetes.io/name": "media-storage",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8080,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "media-storage",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-media",
      "labels": {
        "helm.sh/chart": "media-0.1.0",
        "app.kubernetes.io/name": "media",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8080,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "media",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-transcoder-handler",
      "labels": {
        "helm.sh/chart": "transcoder-handler-0.2.0",
        "app.kubernetes.io/name": "transcoder-handler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8080,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "transcoder-handler",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-transcoder",
      "labels": {
        "helm.sh/chart": "transcoder-0.1.0",
        "app.kubernetes.io/name": "transcoder",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8080,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "transcoder",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-media-storage",
      "labels": {
        "helm.sh/chart": "media-storage-0.2.0",
        "app.kubernetes.io/name": "media-storage",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "media-storage",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "media-storage",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-media-storage",
          "securityContext": {},
          "containers": [
            {
              "name": "media-storage",
              "securityContext": {
                "runAsGroup": 3000,
                "runAsNonRoot": true,
                "runAsUser": 10947,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "elastictranscoder/media-storage:f6d861a0",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/actuator/health/liveness",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 5,
                "timeoutSeconds": 5,
                "failureThreshold": 6,
                "successThreshold": 1
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/actuator/health/readiness",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 5,
                "timeoutSeconds": 5,
                "failureThreshold": 3,
                "successThreshold": 1
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "elastictranscoder-data",
                  "mountPath": "/media/elastictranscoder-data"
                }
              ],
              "env": [
                {
                  "name": "SPRING_PROFILES_ACTIVE",
                  "value": "prod,host"
                },
                {
                  "name": "AWS_ACCESS_KEY_ID",
                  "value": null
                },
                {
                  "name": "AWS_SECRET_ACCESS_KEY",
                  "value": null
                },
                {
                  "name": "OKTA_OAUTH2_ISSUER",
                  "value": null
                },
                {
                  "name": "OKTA_OAUTH2_CLIENT_ID",
                  "value": null
                },
                {
                  "name": "OKTA_OAUTH2_CLIENT_SECRET",
                  "value": null
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "elastictranscoder-data",
              "nfs": {
                "server": null,
                "path": null
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-media",
      "labels": {
        "helm.sh/chart": "media-0.1.0",
        "app.kubernetes.io/name": "media",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "media",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "media",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-media",
          "securityContext": {},
          "containers": [
            {
              "name": "media",
              "securityContext": {
                "runAsGroup": 3000,
                "runAsNonRoot": true,
                "runAsUser": 10102,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "elastictranscoder/media:627e21dc",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/actuator/health/liveness",
                  "port": "http"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 10,
                "timeoutSeconds": 10,
                "failureThreshold": 6,
                "successThreshold": 1
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/actuator/health/readiness",
                  "port": "http"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 10,
                "timeoutSeconds": 10,
                "failureThreshold": 3,
                "successThreshold": 1
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "env": [
                {
                  "name": "SPRING_PROFILES_ACTIVE",
                  "value": "prod"
                },
                {
                  "name": "AWS_ACCESS_KEY_ID",
                  "value": null
                },
                {
                  "name": "AWS_SECRET_ACCESS_KEY",
                  "value": null
                },
                {
                  "name": "OKTA_OAUTH2_ISSUER",
                  "value": null
                },
                {
                  "name": "OKTA_OAUTH2_CLIENT_ID",
                  "value": null
                },
                {
                  "name": "OKTA_OAUTH2_CLIENT_SECRET",
                  "value": null
                }
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-transcoder-handler",
      "labels": {
        "helm.sh/chart": "transcoder-handler-0.2.0",
        "app.kubernetes.io/name": "transcoder-handler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "transcoder-handler",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "transcoder-handler",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-transcoder-handler",
          "securityContext": {},
          "containers": [
            {
              "name": "transcoder-handler",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "elastictranscoder/transcoder-handler:627e21dc",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/actuator/health/liveness",
                  "port": "http"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 10,
                "timeoutSeconds": 10,
                "failureThreshold": 6,
                "successThreshold": 1
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/actuator/health/readiness",
                  "port": "http"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 10,
                "timeoutSeconds": 10,
                "failureThreshold": 3,
                "successThreshold": 1
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "elastictranscoder-data",
                  "mountPath": "/media/elastictranscoder-data"
                }
              ],
              "env": [
                {
                  "name": "SPRING_PROFILES_ACTIVE",
                  "value": "prod"
                },
                {
                  "name": "AWS_ACCESS_KEY_ID",
                  "value": null
                },
                {
                  "name": "AWS_SECRET_ACCESS_KEY",
                  "value": null
                },
                {
                  "name": "OKTA_OAUTH2_ISSUER",
                  "value": null
                },
                {
                  "name": "OKTA_OAUTH2_CLIENT_ID",
                  "value": null
                },
                {
                  "name": "OKTA_OAUTH2_CLIENT_SECRET",
                  "value": null
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "elastictranscoder-data",
              "nfs": {
                "server": null,
                "path": null
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-transcoder",
      "labels": {
        "helm.sh/chart": "transcoder-0.1.0",
        "app.kubernetes.io/name": "transcoder",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "transcoder",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "transcoder",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-transcoder",
          "securityContext": {},
          "containers": [
            {
              "name": "transcoder",
              "securityContext": {
                "runAsGroup": 3000,
                "runAsNonRoot": true,
                "runAsUser": 10473,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "elastictranscoder/transcoder:627e21dc",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/actuator/health/liveness",
                  "port": "http"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 10,
                "timeoutSeconds": 10,
                "failureThreshold": 6,
                "successThreshold": 1
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/actuator/health/readiness",
                  "port": "http"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 10,
                "timeoutSeconds": 10,
                "failureThreshold": 3,
                "successThreshold": 1
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                },
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "volumeMounts": [
                {
                  "name": "elastictranscoder-data",
                  "mountPath": "/media/elastictranscoder-data"
                }
              ],
              "env": [
                {
                  "name": "SPRING_PROFILES_ACTIVE",
                  "value": "prod"
                },
                {
                  "name": "AWS_ACCESS_KEY_ID",
                  "value": null
                },
                {
                  "name": "AWS_SECRET_ACCESS_KEY",
                  "value": null
                }
              ],
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "curl",
                      "-XPOST",
                      "http://localhost:8080/actuator/shutdown"
                    ]
                  }
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "elastictranscoder-data",
              "nfs": {
                "server": null,
                "path": null
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-media-storage",
      "labels": {
        "helm.sh/chart": "media-storage-0.2.0",
        "app.kubernetes.io/name": "media-storage",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "cert-manager.io/cluster-issuer": "letsencrypt-production",
        "nginx.ingress.kubernetes.io/auth-response-headers": "Authorization",
        "nginx.ingress.kubernetes.io/auth-signin": "https://oauth2.lavandadelpatio.es/oauth2/start?rd=https://$host$request_uri$is_args$args",
        "nginx.ingress.kubernetes.io/auth-snippet": "proxy_method $request_method;\n",
        "nginx.ingress.kubernetes.io/auth-url": "http://oauth2-proxy.kubernetes-dashboard.svc.cluster.local:4180/oauth2/auth",
        "nginx.ingress.kubernetes.io/proxy-body-size": "2000m",
        "nginx.ingress.kubernetes.io/proxy-pass-request-body": "on",
        "nginx.ingress.kubernetes.io/proxy-request-buffering": "off"
      }
    },
    "spec": {
      "tls": [
        {
          "hosts": [
            "files.lavandadelpatio.es"
          ],
          "secretName": "files-tls"
        }
      ],
      "rules": [
        {
          "host": "files.lavandadelpatio.es",
          "http": {
            "paths": [
              {
                "path": "/files",
                "backend": {
                  "serviceName": "release-name-media-storage",
                  "servicePort": 8080
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-media",
      "labels": {
        "helm.sh/chart": "media-0.1.0",
        "app.kubernetes.io/name": "media",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "nginx.ingress.kubernetes.io/auth-response-headers": "Authorization",
        "nginx.ingress.kubernetes.io/auth-signin": "https://oauth2.lavandadelpatio.es/oauth2/start?rd=https://$host$request_uri$is_args$args",
        "nginx.ingress.kubernetes.io/auth-snippet": "proxy_method $request_method;\n",
        "nginx.ingress.kubernetes.io/auth-url": "http://oauth2-proxy.kubernetes-dashboard.svc.cluster.local:4180/oauth2/auth"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "api.lavandadelpatio.es",
          "http": {
            "paths": [
              {
                "path": "/media",
                "backend": {
                  "serviceName": "release-name-media",
                  "servicePort": 8080
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-transcoder-handler",
      "labels": {
        "helm.sh/chart": "transcoder-handler-0.2.0",
        "app.kubernetes.io/name": "transcoder-handler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "nginx.ingress.kubernetes.io/auth-response-headers": "Authorization",
        "nginx.ingress.kubernetes.io/auth-signin": "https://oauth2.lavandadelpatio.es/oauth2/start?rd=https://$host$request_uri$is_args$args",
        "nginx.ingress.kubernetes.io/auth-snippet": "proxy_method $request_method;\n",
        "nginx.ingress.kubernetes.io/auth-url": "http://oauth2-proxy.kubernetes-dashboard.svc.cluster.local:4180/oauth2/auth"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "api.lavandadelpatio.es",
          "http": {
            "paths": [
              {
                "path": "/transcodes",
                "backend": {
                  "serviceName": "release-name-transcoder-handler",
                  "servicePort": 8080
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-media-storage-test-connection",
      "labels": {
        "helm.sh/chart": "media-storage-0.2.0",
        "app.kubernetes.io/name": "media-storage",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-media-storage:8080"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-media-test-connection",
      "labels": {
        "helm.sh/chart": "media-0.1.0",
        "app.kubernetes.io/name": "media",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-media:8080"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-transcoder-handler-test-connection",
      "labels": {
        "helm.sh/chart": "transcoder-handler-0.2.0",
        "app.kubernetes.io/name": "transcoder-handler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-transcoder-handler:8080"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-transcoder-test-connection",
      "labels": {
        "helm.sh/chart": "transcoder-0.1.0",
        "app.kubernetes.io/name": "transcoder",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-transcoder:8080"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]