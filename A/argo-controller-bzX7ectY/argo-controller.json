[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-argo-controller",
      "labels": {
        "helm.sh/chart": "argo-controller-0.0.7",
        "app.kubernetes.io/name": "argo-controller",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.0.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-argo-controller",
      "labels": {
        "helm.sh/chart": "argo-controller-0.0.7",
        "app.kubernetes.io/name": "argo-controller",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.0.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces",
          "endpoints"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "serviceaccounts"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "patch",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "rbac.authorization.k8s.io"
        ],
        "resources": [
          "rolebindings"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "patch",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "rbac.authorization.k8s.io"
        ],
        "resources": [
          "clusterroles"
        ],
        "verbs": [
          "bind"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "patch",
          "delete"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-argo-controller",
      "labels": {
        "helm.sh/chart": "argo-controller-0.0.7",
        "app.kubernetes.io/name": "argo-controller",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.0.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-argo-controller",
        "namespace": "default"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-argo-controller"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-argo-controller-image-pull-secrets",
      "labels": {
        "helm.sh/chart": "argo-controller-0.0.7",
        "app.kubernetes.io/name": "argo-controller",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.0.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "argo-controller",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "argo-controller",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-argo-controller",
          "securityContext": {},
          "containers": [
            {
              "name": "argo-controller",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "StatCan/argo-controller:0.0.1",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "image-pull-secrets",
                "--image-pull-secret=image-pull-secret"
              ],
              "env": null,
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-argo-controller-workflows",
      "labels": {
        "helm.sh/chart": "argo-controller-0.0.7",
        "app.kubernetes.io/name": "argo-controller",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.0.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "argo-controller",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "argo-controller",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-argo-controller",
          "securityContext": {},
          "containers": [
            {
              "name": "argo-controller",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "StatCan/argo-controller:0.0.1",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "workflows"
              ],
              "env": null,
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  }
]