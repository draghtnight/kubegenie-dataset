apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-events-sa
  namespace: 2jBJS
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-events-role
  namespace: 2jBJS
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - argoproj.io
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
    resources:
      - sensors
      - sensors/finalizers
      - sensors/status
      - eventsources
      - eventsources/finalizers
      - eventsources/status
      - eventbus
      - eventbus/finalizers
      - eventbus/status
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/exec
      - configmaps
      - secrets
      - services
      - persistentvolumeclaims
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - apps
    resources:
      - deployments
      - statefulsets
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-events-binding
  namespace: 2jBJS
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-events-role
subjects:
  - kind: ServiceAccount
    name: argo-events-sa
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-eventbus-controller
  namespace: 2jBJS
  labels:
    app: release-name-eventbus-controller
    chart: argo-events-1.13.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-eventbus-controller
      release: release-name
  template:
    metadata:
      labels:
        app: release-name-eventbus-controller
        release: release-name
    spec:
      serviceAccountName: argo-events-sa
      containers:
        - name: eventbus-controller
          image: quay.io/argoproj/argo-events:v1.6.0
          imagePullPolicy: Always
          args:
            - eventbus-controller
            - --namespaced
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NATS_STREAMING_IMAGE
              value: nats-streaming:0.22.1
            - name: NATS_METRICS_EXPORTER_IMAGE
              value: natsio/prometheus-nats-exporter:0.8.0
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            seccompProfile:
              type: RuntimeDefault
      securityContext:
        runAsNonRoot: true
        runAsUser: 9731
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-eventsource-controller
  namespace: 2jBJS
  labels:
    app: release-name-eventsource-controller
    chart: argo-events-1.13.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-eventsource-controller
      release: release-name
  template:
    metadata:
      labels:
        app: release-name-eventsource-controller
        release: release-name
    spec:
      serviceAccountName: argo-events-sa
      containers:
        - name: eventsource-controller
          image: quay.io/argoproj/argo-events:v1.6.0
          imagePullPolicy: Always
          args:
            - eventsource-controller
            - --namespaced
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: EVENTSOURCE_IMAGE
              value: quay.io/argoproj/argo-events:v1.6.0
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            seccompProfile:
              type: RuntimeDefault
      securityContext:
        runAsNonRoot: true
        runAsUser: 9731
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-sensor-controller
  namespace: 2jBJS
  labels:
    app: release-name-sensor-controller
    chart: argo-events-1.13.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-sensor-controller
      release: release-name
  template:
    metadata:
      labels:
        app: release-name-sensor-controller
        release: release-name
    spec:
      serviceAccountName: argo-events-sa
      containers:
        - name: sensor-controller
          image: quay.io/argoproj/argo-events:v1.6.0
          imagePullPolicy: Always
          args:
            - sensor-controller
            - --namespaced
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SENSOR_IMAGE
              value: quay.io/argoproj/argo-events:v1.6.0
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            seccompProfile:
              type: RuntimeDefault
      securityContext:
        runAsNonRoot: true
        runAsUser: 9731
