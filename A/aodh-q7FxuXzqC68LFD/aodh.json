[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "aodh-api"
    },
    "spec": {
      "minAvailable": 0,
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "aodh",
          "component": "api"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "aodh-alarms-cleaner",
      "namespace": "q7FxuXzqC68LFD"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "aodh-api",
      "namespace": "q7FxuXzqC68LFD"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "aodh-evaluator",
      "namespace": "q7FxuXzqC68LFD"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "aodh-listener",
      "namespace": "q7FxuXzqC68LFD"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "aodh-notifier",
      "namespace": "q7FxuXzqC68LFD"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "aodh-db-init",
      "namespace": "q7FxuXzqC68LFD"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "aodh-db-sync",
      "namespace": "q7FxuXzqC68LFD"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "aodh-ks-endpoints",
      "namespace": "q7FxuXzqC68LFD"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "aodh-ks-service",
      "namespace": "q7FxuXzqC68LFD"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "aodh-ks-user",
      "namespace": "q7FxuXzqC68LFD"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "aodh-rabbit-init",
      "namespace": "q7FxuXzqC68LFD"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-test",
      "namespace": "q7FxuXzqC68LFD"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "aodh-etc"
    },
    "type": "Opaque",
    "data": {
      "aodh.conf": "W0RFRkFVTFRdCmRlYnVnID0gZmFsc2UKbG9nX2NvbmZpZ19hcHBlbmQgPSAvZXRjL2FvZGgvbG9nZ2luZy5jb25mCnRyYW5zcG9ydF91cmwgPSByYWJiaXQ6Ly9hb2RoOnBhc3N3b3JkQHJhYmJpdG1xLXJhYmJpdG1xLTAucmFiYml0bXEuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbDo1NjcyLGFvZGg6cGFzc3dvcmRAcmFiYml0bXEtcmFiYml0bXEtMS5yYWJiaXRtcS5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjU2NzIvYW9kaApbZGF0YWJhc2VdCmFsYXJtX2hpc3RvcnlfdGltZV90b19saXZlID0gODY0MDAKY29ubmVjdGlvbiA9IG15c3FsK3B5bXlzcWw6Ly9hb2RoOnBhc3N3b3JkQG1hcmlhZGIuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbDozMzA2L2FvZGgKbWF4X3JldHJpZXMgPSAtMQpba2V5c3RvbmVfYXV0aHRva2VuXQphdXRoX3R5cGUgPSBwYXNzd29yZAphdXRoX3VyaSA9IGh0dHA6Ly9rZXlzdG9uZS1hcGkuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbDo1MDAwL3YzCmF1dGhfdXJsID0gaHR0cDovL2tleXN0b25lLWFwaS5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjUwMDAvdjMKYXV0aF92ZXJzaW9uID0gdjMKbWVtY2FjaGVfc2VjcmV0X2tleSA9IFRQaGk0U2xiOU1EN3VMNXlObUphNm82WHZra1pzeThTa3YzakVRY05GalNLREhBdzQwN2xrcW0weHlHa1psM3MKbWVtY2FjaGVfc2VjdXJpdHlfc3RyYXRlZ3kgPSBFTkNSWVBUCm1lbWNhY2hlZF9zZXJ2ZXJzID0gbWVtY2FjaGVkLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWw6MTEyMTEKcGFzc3dvcmQgPSBwYXNzd29yZApwcm9qZWN0X2RvbWFpbl9uYW1lID0gc2VydmljZQpwcm9qZWN0X25hbWUgPSBzZXJ2aWNlCnJlZ2lvbl9uYW1lID0gUmVnaW9uT25lCnVzZXJfZG9tYWluX25hbWUgPSBzZXJ2aWNlCnVzZXJuYW1lID0gYW9kaApbb3Nsb19taWRkbGV3YXJlXQplbmFibGVfcHJveHlfaGVhZGVyc19wYXJzaW5nID0gdHJ1ZQpbc2VydmljZV9jcmVkZW50aWFsc10KYXV0aF90eXBlID0gcGFzc3dvcmQKYXV0aF91cmwgPSBodHRwOi8va2V5c3RvbmUtYXBpLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWw6NTAwMC92MwphdXRoX3ZlcnNpb24gPSB2MwppbnRlcmZhY2UgPSBpbnRlcm5hbApwYXNzd29yZCA9IHBhc3N3b3JkCnByb2plY3RfZG9tYWluX25hbWUgPSBzZXJ2aWNlCnByb2plY3RfbmFtZSA9IHNlcnZpY2UKcmVnaW9uX25hbWUgPSBSZWdpb25PbmUKdXNlcl9kb21haW5fbmFtZSA9IHNlcnZpY2UKdXNlcm5hbWUgPSBhb2RoCg==",
      "logging.conf": "W2Zvcm1hdHRlcl9jb250ZXh0XQpjbGFzcyA9IG9zbG9fbG9nLmZvcm1hdHRlcnMuQ29udGV4dEZvcm1hdHRlcgpbZm9ybWF0dGVyX2RlZmF1bHRdCmZvcm1hdCA9ICUobWVzc2FnZSlzCltmb3JtYXR0ZXJzXQprZXlzID0gY29udGV4dCxkZWZhdWx0CltoYW5kbGVyX251bGxdCmFyZ3MgPSAoKQpjbGFzcyA9IGxvZ2dpbmcuTnVsbEhhbmRsZXIKZm9ybWF0dGVyID0gZGVmYXVsdApbaGFuZGxlcl9zdGRlcnJdCmFyZ3MgPSAoc3lzLnN0ZGVyciwpCmNsYXNzID0gU3RyZWFtSGFuZGxlcgpmb3JtYXR0ZXIgPSBjb250ZXh0CltoYW5kbGVyX3N0ZG91dF0KYXJncyA9IChzeXMuc3Rkb3V0LCkKY2xhc3MgPSBTdHJlYW1IYW5kbGVyCmZvcm1hdHRlciA9IGNvbnRleHQKW2hhbmRsZXJzXQprZXlzID0gc3Rkb3V0LHN0ZGVycixudWxsCltsb2dnZXJfYW1xcF0KaGFuZGxlcnMgPSBzdGRlcnIKbGV2ZWwgPSBXQVJOSU5HCnF1YWxuYW1lID0gYW1xcApbbG9nZ2VyX2FtcXBsaWJdCmhhbmRsZXJzID0gc3RkZXJyCmxldmVsID0gV0FSTklORwpxdWFsbmFtZSA9IGFtcXBsaWIKW2xvZ2dlcl9hb2RoXQpoYW5kbGVycyA9IHN0ZG91dApsZXZlbCA9IElORk8KcXVhbG5hbWUgPSBhb2RoCltsb2dnZXJfYm90b10KaGFuZGxlcnMgPSBzdGRlcnIKbGV2ZWwgPSBXQVJOSU5HCnF1YWxuYW1lID0gYm90bwpbbG9nZ2VyX2V2ZW50bGV0d3NnaV0KaGFuZGxlcnMgPSBzdGRlcnIKbGV2ZWwgPSBXQVJOSU5HCnF1YWxuYW1lID0gZXZlbnRsZXQud3NnaS5zZXJ2ZXIKW2xvZ2dlcl9yb290XQpoYW5kbGVycyA9IG51bGwKbGV2ZWwgPSBXQVJOSU5HCltsb2dnZXJfc3FsYWxjaGVteV0KaGFuZGxlcnMgPSBzdGRlcnIKbGV2ZWwgPSBXQVJOSU5HCnF1YWxuYW1lID0gc3FsYWxjaGVteQpbbG9nZ2Vyc10Ka2V5cyA9IHJvb3QsYW9kaAo=",
      "api-paste.ini": "W2FwcDphb2RodjJdCnBhc3RlLmFwcF9mYWN0b3J5ID0gYW9kaC5hcGkuYXBwOmFwcF9mYWN0b3J5CnJvb3QgPSBhb2RoLmFwaS5jb250cm9sbGVycy52Mi5yb290LlYyQ29udHJvbGxlcgpbYXBwOmFvZGh2ZXJzaW9uc10KcGFzdGUuYXBwX2ZhY3RvcnkgPSBhb2RoLmFwaS5hcHA6YXBwX2ZhY3RvcnkKcm9vdCA9IGFvZGguYXBpLmNvbnRyb2xsZXJzLnJvb3QuVmVyc2lvbnNDb250cm9sbGVyClthcHA6aGVhbHRoY2hlY2tdCm9zbG9fY29uZmlnX3Byb2plY3QgPSBhb2RoCnVzZSA9IGVnZzpvc2xvLm1pZGRsZXdhcmUjaGVhbHRoY2hlY2sKW2NvbXBvc2l0ZTphb2RoK2tleXN0b25lXQovID0gYW9kaHZlcnNpb25zX3BpcGVsaW5lCi9oZWFsdGhjaGVjayA9IGhlYWx0aGNoZWNrCi92MiA9IGFvZGh2Ml9rZXlzdG9uZV9waXBlbGluZQp1c2UgPSBlZ2c6UGFzdGUjdXJsbWFwCltjb21wb3NpdGU6YW9kaCtub2F1dGhdCi8gPSBhb2RodmVyc2lvbnNfcGlwZWxpbmUKL2hlYWx0aGNoZWNrID0gaGVhbHRoY2hlY2sKL3YyID0gYW9kaHYyX25vYXV0aF9waXBlbGluZQp1c2UgPSBlZ2c6UGFzdGUjdXJsbWFwCltmaWx0ZXI6YXV0aHRva2VuXQpvc2xvX2NvbmZpZ19wcm9qZWN0ID0gYW9kaApwYXN0ZS5maWx0ZXJfZmFjdG9yeSA9IGtleXN0b25lbWlkZGxld2FyZS5hdXRoX3Rva2VuOmZpbHRlcl9mYWN0b3J5CltmaWx0ZXI6Y29yc10Kb3Nsb19jb25maWdfcHJvamVjdCA9IGFvZGgKcGFzdGUuZmlsdGVyX2ZhY3RvcnkgPSBvc2xvX21pZGRsZXdhcmUuY29yczpmaWx0ZXJfZmFjdG9yeQpbZmlsdGVyOmh0dHBfcHJveHlfdG9fd3NnaV0Kb3Nsb19jb25maWdfcHJvamVjdCA9IGFvZGgKcGFzdGUuZmlsdGVyX2ZhY3RvcnkgPSBvc2xvX21pZGRsZXdhcmUuaHR0cF9wcm94eV90b193c2dpOkhUVFBQcm94eVRvV1NHSS5mYWN0b3J5CltmaWx0ZXI6cmVxdWVzdF9pZF0KcGFzdGUuZmlsdGVyX2ZhY3RvcnkgPSBvc2xvX21pZGRsZXdhcmU6UmVxdWVzdElkLmZhY3RvcnkKW3BpcGVsaW5lOmFvZGh2Ml9rZXlzdG9uZV9waXBlbGluZV0KcGlwZWxpbmUgPSBjb3JzIGh0dHBfcHJveHlfdG9fd3NnaSByZXF1ZXN0X2lkIGF1dGh0b2tlbiBhb2RodjIKW3BpcGVsaW5lOmFvZGh2Ml9ub2F1dGhfcGlwZWxpbmVdCnBpcGVsaW5lID0gY29ycyBodHRwX3Byb3h5X3RvX3dzZ2kgcmVxdWVzdF9pZCBhb2RodjIKW3BpcGVsaW5lOmFvZGh2ZXJzaW9uc19waXBlbGluZV0KcGlwZWxpbmUgPSBjb3JzIGh0dHBfcHJveHlfdG9fd3NnaSBhb2RodmVyc2lvbnMK",
      "policy.json": "eyJhZG1pbl9vcl9vd25lciI6InJ1bGU6Y29udGV4dF9pc19hZG1pbiBvciBwcm9qZWN0X2lkOiUocHJvamVjdF9pZClzIiwiY29udGV4dF9pc19hZG1pbiI6InJvbGU6YWRtaW4iLCJkZWZhdWx0IjoicnVsZTphZG1pbl9vcl9vd25lciIsInNlZ3JlZ2F0aW9uIjoicnVsZTpjb250ZXh0X2lzX2FkbWluIiwidGVsZW1ldHJ5OmFsYXJtX2hpc3RvcnkiOiJydWxlOmFkbWluX29yX293bmVyIiwidGVsZW1ldHJ5OmNoYW5nZV9hbGFybSI6InJ1bGU6YWRtaW5fb3Jfb3duZXIiLCJ0ZWxlbWV0cnk6Y2hhbmdlX2FsYXJtX3N0YXRlIjoicnVsZTphZG1pbl9vcl9vd25lciIsInRlbGVtZXRyeTpjcmVhdGVfYWxhcm0iOiIiLCJ0ZWxlbWV0cnk6ZGVsZXRlX2FsYXJtIjoicnVsZTphZG1pbl9vcl9vd25lciIsInRlbGVtZXRyeTpnZXRfYWxhcm0iOiJydWxlOmFkbWluX29yX293bmVyIiwidGVsZW1ldHJ5OmdldF9hbGFybV9zdGF0ZSI6InJ1bGU6YWRtaW5fb3Jfb3duZXIiLCJ0ZWxlbWV0cnk6Z2V0X2FsYXJtcyI6InJ1bGU6YWRtaW5fb3Jfb3duZXIiLCJ0ZWxlbWV0cnk6cXVlcnlfYWxhcm0iOiJydWxlOmFkbWluX29yX293bmVyIiwidGVsZW1ldHJ5OnF1ZXJ5X2FsYXJtX2hpc3RvcnkiOiJydWxlOmFkbWluX29yX293bmVyIn0=",
      "wsgi-aodh.conf": "TGlzdGVuIDAuMC4wLjA6ODA0MgoKTG9nRm9ybWF0ICIlaCAlbCAldSAldCBcIiVyXCIgJT5zICViIFwiJXtSZWZlcmVyfWlcIiBcIiV7VXNlci1BZ2VudH1pXCIiIGNvbWJpbmVkCkxvZ0Zvcm1hdCAiJXtYLUZvcndhcmRlZC1Gb3J9aSAlbCAldSAldCBcIiVyXCIgJT5zICViIFwiJXtSZWZlcmVyfWlcIiBcIiV7VXNlci1BZ2VudH1pXCIiIHByb3h5CgpTZXRFbnZJZiBYLUZvcndhcmRlZC1Gb3IgIl4uKlwuLipcLi4qXC4uKiIgZm9yd2FyZGVkCkN1c3RvbUxvZyAvZGV2L3N0ZG91dCBjb21iaW5lZCBlbnY9IWZvcndhcmRlZApDdXN0b21Mb2cgL2Rldi9zdGRvdXQgcHJveHkgZW52PWZvcndhcmRlZAoKPFZpcnR1YWxIb3N0ICo6ODA0Mj4KICAgIFdTR0lEYWVtb25Qcm9jZXNzIGFvZGggcHJvY2Vzc2VzPTIgdGhyZWFkcz0xIHVzZXI9YW9kaCBncm91cD1hb2RoIGRpc3BsYXktbmFtZT0le0dST1VQfQogICAgV1NHSVByb2Nlc3NHcm91cCBhb2RoCiAgICBXU0dJU2NyaXB0QWxpYXMgLyAvdmFyL3d3dy9jZ2ktYmluL2FvZGgvYW9kaC1hcGkKICAgIFdTR0lBcHBsaWNhdGlvbkdyb3VwICV7R0xPQkFMfQogICAgPElmVmVyc2lvbiA+PSAyLjQ+CiAgICAgIEVycm9yTG9nRm9ybWF0ICIle2N1fXQgJU0iCiAgICA8L0lmVmVyc2lvbj4KCiAgICBFcnJvckxvZyAvZGV2L3N0ZG91dAogICAgU2V0RW52SWYgWC1Gb3J3YXJkZWQtRm9yICJeLipcLi4qXC4uKlwuLioiIGZvcndhcmRlZAogICAgQ3VzdG9tTG9nIC9kZXYvc3Rkb3V0IGNvbWJpbmVkIGVudj0hZm9yd2FyZGVkCiAgICBDdXN0b21Mb2cgL2Rldi9zdGRvdXQgcHJveHkgZW52PWZvcndhcmRlZAo8L1ZpcnR1YWxIb3N0Pg=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "aodh-db-admin"
    },
    "type": "Opaque",
    "data": {
      "DB_CONNECTION": "bXlzcWwrcHlteXNxbDovL3Jvb3Q6cGFzc3dvcmRAbWFyaWFkYi5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjMzMDYvYW9kaA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "aodh-db-user"
    },
    "type": "Opaque",
    "data": {
      "DB_CONNECTION": "bXlzcWwrcHlteXNxbDovL2FvZGg6cGFzc3dvcmRAbWFyaWFkYi5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjMzMDYvYW9kaA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "aodh-keystone-admin"
    },
    "type": "Opaque",
    "data": {
      "OS_AUTH_URL": "aHR0cDovL2tleXN0b25lLWFwaS5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjUwMDAvdjM=",
      "OS_REGION_NAME": "UmVnaW9uT25l",
      "OS_INTERFACE": "aW50ZXJuYWw=",
      "OS_PROJECT_DOMAIN_NAME": "ZGVmYXVsdA==",
      "OS_PROJECT_NAME": "YWRtaW4=",
      "OS_USER_DOMAIN_NAME": "ZGVmYXVsdA==",
      "OS_USERNAME": "YWRtaW4=",
      "OS_PASSWORD": "cGFzc3dvcmQ=",
      "OS_DEFAULT_DOMAIN": "ZGVmYXVsdA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "aodh-keystone-user"
    },
    "type": "Opaque",
    "data": {
      "OS_AUTH_URL": "aHR0cDovL2tleXN0b25lLWFwaS5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjUwMDAvdjM=",
      "OS_REGION_NAME": "UmVnaW9uT25l",
      "OS_INTERFACE": "aW50ZXJuYWw=",
      "OS_PROJECT_DOMAIN_NAME": "c2VydmljZQ==",
      "OS_PROJECT_NAME": "c2VydmljZQ==",
      "OS_USER_DOMAIN_NAME": "c2VydmljZQ==",
      "OS_USERNAME": "YW9kaA==",
      "OS_PASSWORD": "cGFzc3dvcmQ=",
      "OS_DEFAULT_DOMAIN": "ZGVmYXVsdA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "aodh-rabbitmq-admin"
    },
    "type": "Opaque",
    "data": {
      "RABBITMQ_CONNECTION": "cmFiYml0Oi8vcmFiYml0bXE6cGFzc3dvcmRAcmFiYml0bXEuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbDoxNTY3Mi9hb2Ro"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "aodh-rabbitmq-user"
    },
    "type": "Opaque",
    "data": {
      "RABBITMQ_CONNECTION": "cmFiYml0Oi8vYW9kaDpwYXNzd29yZEByYWJiaXRtcS5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjE1NjcyL2FvZGg="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "aodh-bin"
    },
    "data": {
      "aodh-test.sh": "#!/bin/bash\n\n\n\nset -ex\n\nexport HOME=/tmp\n\necho \"Test: create an alarm\"\naodh alarm create \\\n    --name test_cpu_aggregation \\\n    --type gnocchi_aggregation_by_resources_threshold \\\n    --metric cpu --threshold 214106115 \\\n    --comparison-operator lt \\\n    --aggregation-method mean \\\n    --granularity 300  \\\n    --evaluation-periods 1 \\\n    --alarm-action 'http://localhost:8776/alarm' \\\n    --resource-type instance \\\n    --query '{\"=\": {\"flavor_name\": \"small\"}}'\nsleep 5\n\necho \"Test: list alarms\"\naodh alarm list\nsleep 5\n\necho \"Test: show an alarm\"\nALARM_UUID=$(aodh alarm list -c alarm_id -f value | head -1)\naodh alarm show ${ALARM_UUID}\nsleep 5\n\necho \"Test: update an alarm\"\naodh alarm update ${ALARM_UUID} --comparison-operator gt\nsleep 5\n\necho \"Test: delete an alarm\"\naodh alarm delete ${ALARM_UUID}\n\nexit 0\n",
      "db-init.py": "#!/usr/bin/env python\n\n# Creates db and user for an OpenStack Service:\n# Set ROOT_DB_CONNECTION and DB_CONNECTION environment variables to contain\n# SQLAlchemy strings for the root connection to the database and the one you\n# wish the service to use. Alternatively, you can use an ini formatted config\n# at the location specified by OPENSTACK_CONFIG_FILE, and extract the string\n# from the key OPENSTACK_CONFIG_DB_KEY, in the section specified by\n# OPENSTACK_CONFIG_DB_SECTION.\n\nimport os\nimport sys\ntry:\n    import ConfigParser\n    PARSER_OPTS = {}\nexcept ImportError:\n    import configparser as ConfigParser\n    PARSER_OPTS = {\"strict\": False}\nimport logging\nfrom sqlalchemy import create_engine\n\n# Create logger, console handler and formatter\nlogger = logging.getLogger('OpenStack-Helm DB Init')\nlogger.setLevel(logging.DEBUG)\nch = logging.StreamHandler()\nch.setLevel(logging.DEBUG)\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n\n# Set the formatter and add the handler\nch.setFormatter(formatter)\nlogger.addHandler(ch)\n\n\n# Get the connection string for the service db root user\nif \"ROOT_DB_CONNECTION\" in os.environ:\n    db_connection = os.environ['ROOT_DB_CONNECTION']\n    logger.info('Got DB root connection')\nelse:\n    logger.critical('environment variable ROOT_DB_CONNECTION not set')\n    sys.exit(1)\n\nmysql_x509 = os.getenv('MARIADB_X509', \"\")\nssl_args = {}\nif mysql_x509:\n    ssl_args = {'ssl': {'ca': '/etc/mysql/certs/ca.crt',\n                'key': '/etc/mysql/certs/tls.key',\n                'cert': '/etc/mysql/certs/tls.crt'}}\n\n# Get the connection string for the service db\nif \"OPENSTACK_CONFIG_FILE\" in os.environ:\n    os_conf = os.environ['OPENSTACK_CONFIG_FILE']\n    if \"OPENSTACK_CONFIG_DB_SECTION\" in os.environ:\n        os_conf_section = os.environ['OPENSTACK_CONFIG_DB_SECTION']\n    else:\n        logger.critical('environment variable OPENSTACK_CONFIG_DB_SECTION not set')\n        sys.exit(1)\n    if \"OPENSTACK_CONFIG_DB_KEY\" in os.environ:\n        os_conf_key = os.environ['OPENSTACK_CONFIG_DB_KEY']\n    else:\n        logger.critical('environment variable OPENSTACK_CONFIG_DB_KEY not set')\n        sys.exit(1)\n    try:\n        config = ConfigParser.RawConfigParser(**PARSER_OPTS)\n        logger.info(\"Using {0} as db config source\".format(os_conf))\n        config.read(os_conf)\n        logger.info(\"Trying to load db config from {0}:{1}\".format(\n            os_conf_section, os_conf_key))\n        user_db_conn = config.get(os_conf_section, os_conf_key)\n        logger.info(\"Got config from {0}\".format(os_conf))\n    except:\n        logger.critical(\"Tried to load config from {0} but failed.\".format(os_conf))\n        raise\nelif \"DB_CONNECTION\" in os.environ:\n    user_db_conn = os.environ['DB_CONNECTION']\n    logger.info('Got config from DB_CONNECTION env var')\nelse:\n    logger.critical('Could not get db config, either from config file or env var')\n    sys.exit(1)\n\n# Root DB engine\ntry:\n    root_engine_full = create_engine(db_connection)\n    root_user = root_engine_full.url.username\n    root_password = root_engine_full.url.password\n    drivername = root_engine_full.url.drivername\n    host = root_engine_full.url.host\n    port = root_engine_full.url.port\n    root_engine_url = ''.join([drivername, '://', root_user, ':', root_password, '@', host, ':', str (port)])\n    root_engine = create_engine(root_engine_url, connect_args=ssl_args)\n    connection = root_engine.connect()\n    connection.close()\n    logger.info(\"Tested connection to DB @ {0}:{1} as {2}\".format(\n        host, port, root_user))\nexcept:\n    logger.critical('Could not connect to database as root user')\n    raise\n\n# User DB engine\ntry:\n    user_engine = create_engine(user_db_conn, connect_args=ssl_args)\n    # Get our user data out of the user_engine\n    database = user_engine.url.database\n    user = user_engine.url.username\n    password = user_engine.url.password\n    logger.info('Got user db config')\nexcept:\n    logger.critical('Could not get user database config')\n    raise\n\n# Create DB\ntry:\n    root_engine.execute(\"CREATE DATABASE IF NOT EXISTS {0}\".format(database))\n    logger.info(\"Created database {0}\".format(database))\nexcept:\n    logger.critical(\"Could not create database {0}\".format(database))\n    raise\n\n# Create DB User\ntry:\n    root_engine.execute(\n        \"GRANT ALL ON `{0}`.* TO \\'{1}\\'@\\'%%\\' IDENTIFIED BY \\'{2}\\' {3}\".format(\n            database, user, password, mysql_x509))\n    logger.info(\"Created user {0} for {1}\".format(user, database))\nexcept:\n    logger.critical(\"Could not create user {0} for {1}\".format(user, database))\n    raise\n\n# Test connection\ntry:\n    connection = user_engine.connect()\n    connection.close()\n    logger.info(\"Tested connection to DB @ {0}:{1}/{2} as {3}\".format(\n        host, port, database, user))\nexcept:\n    logger.critical('Could not connect to database as user')\n    raise\n\nlogger.info('Finished DB Management')\n",
      "db-sync.sh": "#!/bin/bash\n\n\n\nset -ex\n\nexec aodh-dbsync\n",
      "db-drop.py": "#!/usr/bin/env python\n\n# Drops db and user for an OpenStack Service:\n# Set ROOT_DB_CONNECTION and DB_CONNECTION environment variables to contain\n# SQLAlchemy strings for the root connection to the database and the one you\n# wish the service to use. Alternatively, you can use an ini formatted config\n# at the location specified by OPENSTACK_CONFIG_FILE, and extract the string\n# from the key OPENSTACK_CONFIG_DB_KEY, in the section specified by\n# OPENSTACK_CONFIG_DB_SECTION.\n\nimport os\nimport sys\ntry:\n    import ConfigParser\n    PARSER_OPTS = {}\nexcept ImportError:\n    import configparser as ConfigParser\n    PARSER_OPTS = {\"strict\": False}\nimport logging\nfrom sqlalchemy import create_engine\n\n# Create logger, console handler and formatter\nlogger = logging.getLogger('OpenStack-Helm DB Drop')\nlogger.setLevel(logging.DEBUG)\nch = logging.StreamHandler()\nch.setLevel(logging.DEBUG)\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n\n# Set the formatter and add the handler\nch.setFormatter(formatter)\nlogger.addHandler(ch)\n\n\n# Get the connection string for the service db root user\nif \"ROOT_DB_CONNECTION\" in os.environ:\n    db_connection = os.environ['ROOT_DB_CONNECTION']\n    logger.info('Got DB root connection')\nelse:\n    logger.critical('environment variable ROOT_DB_CONNECTION not set')\n    sys.exit(1)\n\nmysql_x509 = os.getenv('MARIADB_X509', \"\")\nssl_args = {}\nif mysql_x509:\n    ssl_args = {'ssl': {'ca': '/etc/mysql/certs/ca.crt',\n                        'key': '/etc/mysql/certs/tls.key',\n                        'cert': '/etc/mysql/certs/tls.crt'}}\n\n# Get the connection string for the service db\nif \"OPENSTACK_CONFIG_FILE\" in os.environ:\n    os_conf = os.environ['OPENSTACK_CONFIG_FILE']\n    if \"OPENSTACK_CONFIG_DB_SECTION\" in os.environ:\n        os_conf_section = os.environ['OPENSTACK_CONFIG_DB_SECTION']\n    else:\n        logger.critical('environment variable OPENSTACK_CONFIG_DB_SECTION not set')\n        sys.exit(1)\n    if \"OPENSTACK_CONFIG_DB_KEY\" in os.environ:\n        os_conf_key = os.environ['OPENSTACK_CONFIG_DB_KEY']\n    else:\n        logger.critical('environment variable OPENSTACK_CONFIG_DB_KEY not set')\n        sys.exit(1)\n    try:\n        config = ConfigParser.RawConfigParser(**PARSER_OPTS)\n        logger.info(\"Using {0} as db config source\".format(os_conf))\n        config.read(os_conf)\n        logger.info(\"Trying to load db config from {0}:{1}\".format(\n            os_conf_section, os_conf_key))\n        user_db_conn = config.get(os_conf_section, os_conf_key)\n        logger.info(\"Got config from {0}\".format(os_conf))\n    except:\n        logger.critical(\"Tried to load config from {0} but failed.\".format(os_conf))\n        raise\nelif \"DB_CONNECTION\" in os.environ:\n    user_db_conn = os.environ['DB_CONNECTION']\n    logger.info('Got config from DB_CONNECTION env var')\nelse:\n    logger.critical('Could not get db config, either from config file or env var')\n    sys.exit(1)\n\n# Root DB engine\ntry:\n    root_engine_full = create_engine(db_connection)\n    root_user = root_engine_full.url.username\n    root_password = root_engine_full.url.password\n    drivername = root_engine_full.url.drivername\n    host = root_engine_full.url.host\n    port = root_engine_full.url.port\n    root_engine_url = ''.join([drivername, '://', root_user, ':', root_password, '@', host, ':', str (port)])\n    root_engine = create_engine(root_engine_url, connect_args=ssl_args)\n    connection = root_engine.connect()\n    connection.close()\n    logger.info(\"Tested connection to DB @ {0}:{1} as {2}\".format(\n        host, port, root_user))\nexcept:\n    logger.critical('Could not connect to database as root user')\n    raise\n\n# User DB engine\ntry:\n    user_engine = create_engine(user_db_conn, connect_args=ssl_args)\n    # Get our user data out of the user_engine\n    database = user_engine.url.database\n    user = user_engine.url.username\n    password = user_engine.url.password\n    logger.info('Got user db config')\nexcept:\n    logger.critical('Could not get user database config')\n    raise\n\n# Delete DB\ntry:\n    root_engine.execute(\"DROP DATABASE IF EXISTS {0}\".format(database))\n    logger.info(\"Deleted database {0}\".format(database))\nexcept:\n    logger.critical(\"Could not drop database {0}\".format(database))\n    raise\n\n# Delete DB User\ntry:\n    root_engine.execute(\"DROP USER IF EXISTS {0}\".format(user))\n    logger.info(\"Deleted user {0}\".format(user))\nexcept:\n    logger.critical(\"Could not delete user {0}\".format(user))\n    raise\n\nlogger.info('Finished DB Management')\n",
      "aodh-api.sh": "#!/bin/bash\n\n\n\nset -ex\n\nCOMMAND=\"${@:-start}\"\n\nfunction start () {\n\n  cp -a $(type -p aodh-api) /var/www/cgi-bin/aodh/\n\n  if [ -f /etc/apache2/envvars ]; then\n    # Loading Apache2 ENV variables\n    source /etc/apache2/envvars\n    # The directory below has to be created due to the fact that\n    # libapache2-mod-wsgi-py3 doesn't create it in contrary by libapache2-mod-wsgi\n    if [ ! -d ${APACHE_RUN_DIR} ]; then\n       mkdir -p ${APACHE_RUN_DIR}\n    fi\n  fi\n\n  # Get rid of stale pid file if present.\n  rm -f /var/run/apache2/*.pid\n\n  # Start Apache2\n  exec apache2 -DFOREGROUND\n}\n\nfunction stop () {\n  apachectl -k graceful-stop\n}\n\n$COMMAND\n",
      "aodh-evaluator.sh": "#!/bin/bash\n\n\n\nset -ex\n\nexec aodh-evaluator --config-file=/etc/aodh/aodh.conf\n",
      "aodh-listener.sh": "#!/bin/bash\n\n\n\nset -ex\n\nexec aodh-listener --config-file=/etc/aodh/aodh.conf\n",
      "aodh-notifier.sh": "#!/bin/bash\n\n\n\nset -ex\n\nexec aodh-notifier --config-file=/etc/aodh/aodh.conf\n",
      "aodh-alarms-cleaner.sh": "#!/bin/bash\n\n\n\nset -ex\n\nexec aodh-expirer\n",
      "ks-service.sh": "#!/bin/bash\n\n# Copyright 2017 Pete Birley\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -ex\n\n# Service boilerplate description\nOS_SERVICE_DESC=\"${OS_REGION_NAME}: ${OS_SERVICE_NAME} (${OS_SERVICE_TYPE}) service\"\n\n# Get Service ID if it exists\nunset OS_SERVICE_ID\n\n# FIXME - There seems to be an issue once in a while where the\n# openstack service list fails and encounters an error message such as:\n#   Unable to establish connection to\n#   https://keystone-api.openstack.svc.cluster.local:5000/v3/auth/tokens:\n#   ('Connection aborted.', OSError(\"(104, 'ECONNRESET')\",))\n# During an upgrade scenario, this would cause the OS_SERVICE_ID to be blank\n# and it would attempt to create a new service when it was not needed.\n# This duplciate service would sometimes be used by other services such as\n# Horizon and would give an 'Invalid Service Catalog' error.\n# This loop allows for a 'retry' of the openstack service list in an\n# attempt to get the service list as expected if it does ecounter an error.\n# This loop and recheck can be reverted once the underlying issue is addressed.\n\n# If OS_SERVICE_ID is blank then wait a few seconds to give it\n# additional time and try again\nfor i in $(seq 3)\ndo\n  OS_SERVICE_ID=$( openstack service list -f csv --quote none | \\\n                   grep \",${OS_SERVICE_NAME},${OS_SERVICE_TYPE}$\" | \\\n                   sed -e \"s/,${OS_SERVICE_NAME},${OS_SERVICE_TYPE}//g\" )\n\n  # If the service was found, go ahead and exit successfully.\n  if [[ -n \"${OS_SERVICE_ID}\" ]]; then\n    exit 0\n  fi\n\n  sleep 2\ndone\n\n# If we've reached this point and a Service ID was not found,\n# then create the service\nOS_SERVICE_ID=$(openstack service create -f value -c id \\\n                --name=\"${OS_SERVICE_NAME}\" \\\n                --description \"${OS_SERVICE_DESC}\" \\\n                --enable \\\n                \"${OS_SERVICE_TYPE}\")\n",
      "ks-endpoints.sh": "#!/bin/bash\n\n# Copyright 2017 Pete Birley\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -ex\n\n# Get Service ID\nOS_SERVICE_ID=$( openstack service list -f csv --quote none | \\\n                  grep \",${OS_SERVICE_NAME},${OS_SERVICE_TYPE}$\" | \\\n                    sed -e \"s/,${OS_SERVICE_NAME},${OS_SERVICE_TYPE}//g\" )\n\n# Get Endpoint ID if it exists\nOS_ENDPOINT_ID=$( openstack endpoint list  -f csv --quote none | \\\n                  grep \"^[a-z0-9]*,${OS_REGION_NAME},${OS_SERVICE_NAME},${OS_SERVICE_TYPE},True,${OS_SVC_ENDPOINT},\" | \\\n                  awk -F ',' '{ print $1 }' )\n\n# Making sure only a single endpoint exists for a service within a region\nif [ \"$(echo $OS_ENDPOINT_ID | wc -w)\" -gt \"1\" ]; then\n  echo \"More than one endpoint found, cleaning up\"\n  for ENDPOINT_ID in $OS_ENDPOINT_ID; do\n    openstack endpoint delete ${ENDPOINT_ID}\n  done\n  unset OS_ENDPOINT_ID\nfi\n\n# Determine if Endpoint needs updated\nif [[ ${OS_ENDPOINT_ID} ]]; then\n  OS_ENDPOINT_URL_CURRENT=$(openstack endpoint show ${OS_ENDPOINT_ID} -f value -c url)\n  if [ \"${OS_ENDPOINT_URL_CURRENT}\" == \"${OS_SERVICE_ENDPOINT}\" ]; then\n    echo \"Endpoints Match: no action required\"\n    OS_ENDPOINT_UPDATE=\"False\"\n  else\n    echo \"Endpoints Dont Match: removing existing entries\"\n    openstack endpoint delete ${OS_ENDPOINT_ID}\n    OS_ENDPOINT_UPDATE=\"True\"\n  fi\nelse\n  OS_ENDPOINT_UPDATE=\"True\"\nfi\n\n# Update Endpoint if required\nif [[ \"${OS_ENDPOINT_UPDATE}\" == \"True\" ]]; then\n  OS_ENDPOINT_ID=$( openstack endpoint create -f value -c id \\\n    --region=\"${OS_REGION_NAME}\" \\\n    \"${OS_SERVICE_ID}\" \\\n    ${OS_SVC_ENDPOINT} \\\n    \"${OS_SERVICE_ENDPOINT}\" )\nfi\n\n# Display the Endpoint\nopenstack endpoint show ${OS_ENDPOINT_ID}\n",
      "ks-user.sh": "#!/bin/bash\n\n# Copyright 2017 Pete Birley\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -ex\n\nshopt -s nocasematch\n\nif [[ \"${SERVICE_OS_PROJECT_DOMAIN_NAME}\" == \"Default\" ]]\nthen\n  PROJECT_DOMAIN_ID=\"default\"\nelse\n  # Manage project domain\n  PROJECT_DOMAIN_ID=$(openstack domain create --or-show --enable -f value -c id \\\n    --description=\"Domain for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_PROJECT_DOMAIN_NAME}\" \\\n    \"${SERVICE_OS_PROJECT_DOMAIN_NAME}\")\nfi\n\nif [[ \"${SERVICE_OS_USER_DOMAIN_NAME}\" == \"Default\" ]]\nthen\n  USER_DOMAIN_ID=\"default\"\nelse\n  # Manage user domain\n  USER_DOMAIN_ID=$(openstack domain create --or-show --enable -f value -c id \\\n    --description=\"Domain for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_USER_DOMAIN_NAME}\" \\\n    \"${SERVICE_OS_USER_DOMAIN_NAME}\")\nfi\n\nshopt -u nocasematch\n\n# Manage user project\nUSER_PROJECT_DESC=\"Service Project for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_PROJECT_DOMAIN_NAME}\"\nUSER_PROJECT_ID=$(openstack project create --or-show --enable -f value -c id \\\n    --domain=\"${PROJECT_DOMAIN_ID}\" \\\n    --description=\"${USER_PROJECT_DESC}\" \\\n    \"${SERVICE_OS_PROJECT_NAME}\");\n\n# Manage user\nUSER_DESC=\"Service User for ${SERVICE_OS_REGION_NAME}/${SERVICE_OS_USER_DOMAIN_NAME}/${SERVICE_OS_SERVICE_NAME}\"\nUSER_ID=$(openstack user create --or-show --enable -f value -c id \\\n    --domain=\"${USER_DOMAIN_ID}\" \\\n    --project-domain=\"${PROJECT_DOMAIN_ID}\" \\\n    --project=\"${USER_PROJECT_ID}\" \\\n    --description=\"${USER_DESC}\" \\\n    \"${SERVICE_OS_USERNAME}\");\n\n# Manage user password (we do this in a seperate step to ensure the password is updated if required)\nset +x\necho \"Setting user password via: openstack user set --password=xxxxxxx ${USER_ID}\"\nopenstack user set --password=\"${SERVICE_OS_PASSWORD}\" \"${USER_ID}\"\nset -x\n\nfunction ks_assign_user_role () {\n  if [[ \"$SERVICE_OS_ROLE\" == \"admin\" ]]\n  then\n    USER_ROLE_ID=\"$SERVICE_OS_ROLE\"\n  else\n    USER_ROLE_ID=$(openstack role create --or-show -f value -c id \"${SERVICE_OS_ROLE}\");\n  fi\n\n  # Manage user role assignment\n  openstack role add \\\n      --user=\"${USER_ID}\" \\\n      --user-domain=\"${USER_DOMAIN_ID}\" \\\n      --project-domain=\"${PROJECT_DOMAIN_ID}\" \\\n      --project=\"${USER_PROJECT_ID}\" \\\n      \"${USER_ROLE_ID}\"\n}\n\n# Manage user service role\nIFS=','\nfor SERVICE_OS_ROLE in ${SERVICE_OS_ROLES}; do\n  ks_assign_user_role\ndone\n\n# Manage user member role\n: ${MEMBER_OS_ROLE:=\"member\"}\nexport USER_ROLE_ID=$(openstack role create --or-show -f value -c id \\\n    \"${MEMBER_OS_ROLE}\");\nks_assign_user_role\n",
      "rabbit-init.sh": "#!/bin/bash\nset -e\n# Extract connection details\nRABBIT_HOSTNAME=$(echo \"${RABBITMQ_ADMIN_CONNECTION}\" | \\\n  awk -F'[@]' '{print $2}' | \\\n  awk -F'[:/]' '{print $1}')\nRABBIT_PORT=$(echo \"${RABBITMQ_ADMIN_CONNECTION}\" | \\\n  awk -F'[@]' '{print $2}' | \\\n  awk -F'[:/]' '{print $2}')\n\n# Extract Admin User creadential\nRABBITMQ_ADMIN_USERNAME=$(echo \"${RABBITMQ_ADMIN_CONNECTION}\" | \\\n  awk -F'[@]' '{print $1}' | \\\n  awk -F'[//:]' '{print $4}')\nRABBITMQ_ADMIN_PASSWORD=$(echo \"${RABBITMQ_ADMIN_CONNECTION}\" | \\\n  awk -F'[@]' '{print $1}' | \\\n  awk -F'[//:]' '{print $5}')\n\n# Extract User creadential\nRABBITMQ_USERNAME=$(echo \"${RABBITMQ_USER_CONNECTION}\" | \\\n  awk -F'[@]' '{print $1}' | \\\n  awk -F'[//:]' '{print $4}')\nRABBITMQ_PASSWORD=$(echo \"${RABBITMQ_USER_CONNECTION}\" | \\\n  awk -F'[@]' '{print $1}' | \\\n  awk -F'[//:]' '{print $5}')\n\n# Extract User vHost\nRABBITMQ_VHOST=$(echo \"${RABBITMQ_USER_CONNECTION}\" | \\\n  awk -F'[@]' '{print $2}' | \\\n  awk -F'[:/]' '{print $3}')\n# Resolve vHost to / if no value is set\nRABBITMQ_VHOST=\"${RABBITMQ_VHOST:-/}\"\n\nfunction rabbitmqadmin_cli () {\n  rabbitmqadmin \\\n    --host=\"${RABBIT_HOSTNAME}\" \\\n    --port=\"${RABBIT_PORT}\" \\\n    --username=\"${RABBITMQ_ADMIN_USERNAME}\" \\\n    --password=\"${RABBITMQ_ADMIN_PASSWORD}\" \\\n    ${@}\n}\n\necho \"Managing: User: ${RABBITMQ_USERNAME}\"\nrabbitmqadmin_cli \\\n  declare user \\\n  name=\"${RABBITMQ_USERNAME}\" \\\n  password=\"${RABBITMQ_PASSWORD}\" \\\n  tags=\"user\"\n\nif [ \"${RABBITMQ_VHOST}\" != \"/\" ]\nthen\n  echo \"Managing: vHost: ${RABBITMQ_VHOST}\"\n  rabbitmqadmin_cli \\\n    declare vhost \\\n    name=\"${RABBITMQ_VHOST}\"\nelse\n  echo \"Skipping root vHost declaration: vHost: ${RABBITMQ_VHOST}\"\nfi\n\necho \"Managing: Permissions: ${RABBITMQ_USERNAME} on ${RABBITMQ_VHOST}\"\nrabbitmqadmin_cli \\\n  declare permission \\\n  vhost=\"${RABBITMQ_VHOST}\" \\\n  user=\"${RABBITMQ_USERNAME}\" \\\n  configure=\".*\" \\\n  write=\".*\" \\\n  read=\".*\"\n\nif [ ! -z \"$RABBITMQ_AUXILIARY_CONFIGURATION\" ]\nthen\n  echo \"Applying additional configuration\"\n  echo \"${RABBITMQ_AUXILIARY_CONFIGURATION}\" > /tmp/rmq_definitions.json\n  rabbitmqadmin_cli import /tmp/rmq_definitions.json\nfi\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-aodh-api",
      "namespace": "q7FxuXzqC68LFD"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-aodh-evaluator",
      "namespace": "q7FxuXzqC68LFD"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-aodh-listener",
      "namespace": "q7FxuXzqC68LFD"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-aodh-notifier",
      "namespace": "q7FxuXzqC68LFD"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-aodh-db-init",
      "namespace": "q7FxuXzqC68LFD"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-aodh-db-sync",
      "namespace": "q7FxuXzqC68LFD"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-aodh-ks-endpoints",
      "namespace": "q7FxuXzqC68LFD"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-aodh-ks-service",
      "namespace": "q7FxuXzqC68LFD"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-aodh-ks-user",
      "namespace": "q7FxuXzqC68LFD"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-aodh-rabbit-init",
      "namespace": "q7FxuXzqC68LFD"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-release-name-test",
      "namespace": "q7FxuXzqC68LFD"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints",
          "jobs",
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-aodh-api",
      "namespace": "q7FxuXzqC68LFD"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-aodh-api"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "aodh-api",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-aodh-evaluator",
      "namespace": "q7FxuXzqC68LFD"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-aodh-evaluator"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "aodh-evaluator",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-aodh-listener",
      "namespace": "q7FxuXzqC68LFD"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-aodh-listener"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "aodh-listener",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-aodh-notifier",
      "namespace": "q7FxuXzqC68LFD"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-aodh-notifier"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "aodh-notifier",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-aodh-db-init",
      "namespace": "q7FxuXzqC68LFD"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-aodh-db-init"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "aodh-db-init",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-aodh-db-sync",
      "namespace": "q7FxuXzqC68LFD"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-aodh-db-sync"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "aodh-db-sync",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-aodh-ks-endpoints",
      "namespace": "q7FxuXzqC68LFD"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-aodh-ks-endpoints"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "aodh-ks-endpoints",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-aodh-ks-service",
      "namespace": "q7FxuXzqC68LFD"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-aodh-ks-service"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "aodh-ks-service",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-aodh-ks-user",
      "namespace": "q7FxuXzqC68LFD"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-aodh-ks-user"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "aodh-ks-user",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-aodh-rabbit-init",
      "namespace": "q7FxuXzqC68LFD"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-aodh-rabbit-init"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "aodh-rabbit-init",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-release-name-test",
      "namespace": "q7FxuXzqC68LFD"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-release-name-test"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-test",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "aodh-api"
    },
    "spec": {
      "ports": [
        {
          "name": "a-api",
          "port": 8042
        }
      ],
      "selector": {
        "release_group": "release-name",
        "application": "aodh",
        "component": "api"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "aodh"
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 80
        },
        {
          "name": "https",
          "port": 443
        }
      ],
      "selector": {
        "app": "ingress-api"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "aodh-api",
      "annotations": {
        "openstackhelm.openstack.org/release_uuid": "",
        "labels": null,
        "release_group": "release-name",
        "application": "aodh",
        "component": "api"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "aodh",
          "component": "api"
        }
      },
      "revisionHistoryLimit": 3,
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": 3
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "aodh",
            "component": "api"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "28753e596f8cd5193d1bbf7592f1a17d24fe2b6880e50aec14c8323443710d1f",
            "configmap-etc-hash": "f0959fa70e5ab7403dbe97d7b9f63e73dbde62f728b91c403f10b1e7a3907683"
          }
        },
        "spec": {
          "serviceAccountName": "aodh-api",
          "securityContext": {
            "runAsUser": 42402
          },
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "release_group",
                          "operator": "In",
                          "values": [
                            "release-name"
                          ]
                        },
                        {
                          "key": "application",
                          "operator": "In",
                          "values": [
                            "aodh"
                          ]
                        },
                        {
                          "key": "component",
                          "operator": "In",
                          "values": [
                            "api"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 10
                }
              ]
            }
          },
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "terminationGracePeriodSeconds": 30,
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:mariadb,default:keystone-api"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "aodh-db-sync,aodh-ks-user,aodh-ks-endpoints"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": null
            }
          ],
          "containers": [
            {
              "name": "aodh-api",
              "image": "docker.io/kolla/ubuntu-source-aodh-api:ocata",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 10374,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "command": [
                "/tmp/aodh-api.sh",
                "start"
              ],
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/tmp/aodh-api.sh",
                      "stop"
                    ]
                  }
                }
              },
              "ports": [
                {
                  "name": "a-api",
                  "containerPort": 8042
                }
              ],
              "readinessProbe": {
                "tcpSocket": {
                  "port": 8042
                }
              },
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "wsgi-aodh",
                  "mountPath": "/var/www/cgi-bin/aodh"
                },
                {
                  "name": "pod-etc-aodh",
                  "mountPath": "/etc/aodh"
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/aodh.conf",
                  "subPath": "aodh.conf",
                  "readOnly": true
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/logging.conf",
                  "subPath": "logging.conf",
                  "readOnly": true
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/api_paste.ini",
                  "subPath": "api-paste.ini",
                  "readOnly": true
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/policy.json",
                  "subPath": "policy.json",
                  "readOnly": true
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/apache2/conf-enabled/wsgi-aodh.conf",
                  "subPath": "wsgi-aodh.conf",
                  "readOnly": true
                },
                {
                  "name": "aodh-bin",
                  "mountPath": "/tmp/aodh-api.sh",
                  "subPath": "aodh-api.sh",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "wsgi-aodh",
              "emptyDir": {}
            },
            {
              "name": "pod-etc-aodh",
              "emptyDir": {}
            },
            {
              "name": "aodh-etc",
              "secret": {
                "secretName": "aodh-etc",
                "defaultMode": 292
              }
            },
            {
              "name": "aodh-bin",
              "configMap": {
                "name": "aodh-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "aodh-evaluator",
      "annotations": {
        "openstackhelm.openstack.org/release_uuid": ""
      },
      "labels": {
        "release_group": "release-name",
        "application": "aodh",
        "component": "evaluator"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "aodh",
          "component": "evaluator"
        }
      },
      "revisionHistoryLimit": 3,
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": 3
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "aodh",
            "component": "evaluator"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "28753e596f8cd5193d1bbf7592f1a17d24fe2b6880e50aec14c8323443710d1f",
            "configmap-etc-hash": "f0959fa70e5ab7403dbe97d7b9f63e73dbde62f728b91c403f10b1e7a3907683"
          }
        },
        "spec": {
          "serviceAccountName": "aodh-evaluator",
          "securityContext": {
            "runAsUser": 42402
          },
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "release_group",
                          "operator": "In",
                          "values": [
                            "release-name"
                          ]
                        },
                        {
                          "key": "application",
                          "operator": "In",
                          "values": [
                            "aodh"
                          ]
                        },
                        {
                          "key": "component",
                          "operator": "In",
                          "values": [
                            "evaluator"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 10
                }
              ]
            }
          },
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:mariadb,default:keystone-api,default:aodh-api"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "aodh-db-sync,aodh-rabbit-init"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": null
            }
          ],
          "containers": [
            {
              "name": "aodh-evaluator",
              "image": "docker.io/kolla/ubuntu-source-aodh-evaluator:ocata",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "command": [
                "/tmp/aodh-evaluator.sh",
                "start"
              ],
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/tmp/aodh-evaluator.sh",
                      "stop"
                    ]
                  }
                }
              },
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "pod-etc-aodh",
                  "mountPath": "/etc/aodh"
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/aodh.conf",
                  "subPath": "aodh.conf",
                  "readOnly": true
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/logging.conf",
                  "subPath": "logging.conf",
                  "readOnly": true
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/policy.json",
                  "subPath": "policy.json",
                  "readOnly": true
                },
                {
                  "name": "aodh-bin",
                  "mountPath": "/tmp/aodh-evaluator.sh",
                  "subPath": "aodh-evaluator.sh",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "pod-etc-aodh",
              "emptyDir": {}
            },
            {
              "name": "aodh-etc",
              "secret": {
                "secretName": "aodh-etc",
                "defaultMode": 292
              }
            },
            {
              "name": "aodh-bin",
              "configMap": {
                "name": "aodh-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "aodh-listener",
      "annotations": {
        "openstackhelm.openstack.org/release_uuid": ""
      },
      "labels": {
        "release_group": "release-name",
        "application": "aodh",
        "component": "listener"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "aodh",
          "component": "listener"
        }
      },
      "revisionHistoryLimit": 3,
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": 3
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "aodh",
            "component": "listener"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "28753e596f8cd5193d1bbf7592f1a17d24fe2b6880e50aec14c8323443710d1f",
            "configmap-etc-hash": "f0959fa70e5ab7403dbe97d7b9f63e73dbde62f728b91c403f10b1e7a3907683"
          }
        },
        "spec": {
          "serviceAccountName": "aodh-listener",
          "securityContext": {
            "runAsUser": 42402
          },
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "release_group",
                          "operator": "In",
                          "values": [
                            "release-name"
                          ]
                        },
                        {
                          "key": "application",
                          "operator": "In",
                          "values": [
                            "aodh"
                          ]
                        },
                        {
                          "key": "component",
                          "operator": "In",
                          "values": [
                            "listener"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 10
                }
              ]
            }
          },
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:mariadb,default:keystone-api,default:aodh-api"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "aodh-db-sync,aodh-rabbit-init"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": null
            }
          ],
          "containers": [
            {
              "name": "aodh-listener",
              "image": "docker.io/kolla/ubuntu-source-aodh-listener:ocata",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "command": [
                "/tmp/aodh-listener.sh",
                "start"
              ],
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/tmp/aodh-listener.sh",
                      "stop"
                    ]
                  }
                }
              },
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "pod-etc-aodh",
                  "mountPath": "/etc/aodh"
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/aodh.conf",
                  "subPath": "aodh.conf",
                  "readOnly": true
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/logging.conf",
                  "subPath": "logging.conf",
                  "readOnly": true
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/policy.json",
                  "subPath": "policy.json",
                  "readOnly": true
                },
                {
                  "name": "aodh-bin",
                  "mountPath": "/tmp/aodh-listener.sh",
                  "subPath": "aodh-listener.sh",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "pod-etc-aodh",
              "emptyDir": {}
            },
            {
              "name": "aodh-etc",
              "secret": {
                "secretName": "aodh-etc",
                "defaultMode": 292
              }
            },
            {
              "name": "aodh-bin",
              "configMap": {
                "name": "aodh-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "aodh-notifier",
      "annotations": {
        "openstackhelm.openstack.org/release_uuid": ""
      },
      "labels": {
        "release_group": "release-name",
        "application": "aodh",
        "component": "notifier"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "aodh",
          "component": "notifier"
        }
      },
      "revisionHistoryLimit": 3,
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": 3
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "aodh",
            "component": "notifier"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "28753e596f8cd5193d1bbf7592f1a17d24fe2b6880e50aec14c8323443710d1f",
            "configmap-etc-hash": "f0959fa70e5ab7403dbe97d7b9f63e73dbde62f728b91c403f10b1e7a3907683"
          }
        },
        "spec": {
          "serviceAccountName": "aodh-notifier",
          "securityContext": {
            "runAsUser": 42402
          },
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "release_group",
                          "operator": "In",
                          "values": [
                            "release-name"
                          ]
                        },
                        {
                          "key": "application",
                          "operator": "In",
                          "values": [
                            "aodh"
                          ]
                        },
                        {
                          "key": "component",
                          "operator": "In",
                          "values": [
                            "notifier"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 10
                }
              ]
            }
          },
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:mariadb,default:keystone-api,default:aodh-api"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "aodh-db-sync,aodh-rabbit-init"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": null
            }
          ],
          "containers": [
            {
              "name": "aodh-notifier",
              "image": "docker.io/kolla/ubuntu-source-aodh-notifier:ocata",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "command": [
                "/tmp/aodh-notifier.sh",
                "start"
              ],
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/tmp/aodh-notifier.sh",
                      "stop"
                    ]
                  }
                }
              },
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "pod-etc-aodh",
                  "mountPath": "/etc/aodh"
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/aodh.conf",
                  "subPath": "aodh.conf",
                  "readOnly": true
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/logging.conf",
                  "subPath": "logging.conf",
                  "readOnly": true
                },
                {
                  "name": "aodh-etc",
                  "mountPath": "/etc/aodh/policy.json",
                  "subPath": "policy.json",
                  "readOnly": true
                },
                {
                  "name": "aodh-bin",
                  "mountPath": "/tmp/aodh-notifier.sh",
                  "subPath": "aodh-notifier.sh",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "pod-etc-aodh",
              "emptyDir": {}
            },
            {
              "name": "aodh-etc",
              "secret": {
                "secretName": "aodh-etc",
                "defaultMode": 292
              }
            },
            {
              "name": "aodh-bin",
              "configMap": {
                "name": "aodh-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "aodh-db-init",
      "annotations": {
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "spec": {
      "backoffLimit": 1000,
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "aodh",
            "component": "db-init"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": ""
          }
        },
        "spec": {
          "serviceAccountName": "aodh-db-init",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:mariadb"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "aodh-db-init-0",
              "image": "docker.io/openstackhelm/heat:ocata-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "ROOT_DB_CONNECTION",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-db-admin",
                      "key": "DB_CONNECTION"
                    }
                  }
                },
                {
                  "name": "OPENSTACK_CONFIG_FILE",
                  "value": "/etc/aodh/aodh.conf"
                },
                {
                  "name": "OPENSTACK_CONFIG_DB_SECTION",
                  "value": "database"
                },
                {
                  "name": "OPENSTACK_CONFIG_DB_KEY",
                  "value": "connection"
                }
              ],
              "command": [
                "/tmp/db-init.py"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "db-init-sh",
                  "mountPath": "/tmp/db-init.py",
                  "subPath": "db-init.py",
                  "readOnly": true
                },
                {
                  "name": "etc-service",
                  "mountPath": "/etc/aodh"
                },
                {
                  "name": "db-init-conf",
                  "mountPath": "/etc/aodh/aodh.conf",
                  "subPath": "aodh.conf",
                  "readOnly": true
                },
                {
                  "name": "db-init-conf",
                  "mountPath": "/etc/aodh/logging.conf",
                  "subPath": "logging.conf",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "db-init-sh",
              "configMap": {
                "name": "aodh-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "etc-service",
              "emptyDir": {}
            },
            {
              "name": "db-init-conf",
              "secret": {
                "secretName": "aodh-etc",
                "defaultMode": 292
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "aodh-db-sync",
      "annotations": {
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "spec": {
      "backoffLimit": 1000,
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "aodh",
            "component": "db-sync"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": ""
          }
        },
        "spec": {
          "serviceAccountName": "aodh-db-sync",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:mariadb"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "aodh-db-init"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "aodh-db-sync",
              "image": "docker.io/kolla/ubuntu-source-aodh-api:ocata",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/tmp/db-sync.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "db-sync-sh",
                  "mountPath": "/tmp/db-sync.sh",
                  "subPath": "db-sync.sh",
                  "readOnly": true
                },
                {
                  "name": "etc-service",
                  "mountPath": "/etc/aodh"
                },
                {
                  "name": "db-sync-conf",
                  "mountPath": "/etc/aodh/aodh.conf",
                  "subPath": "aodh.conf",
                  "readOnly": true
                },
                {
                  "name": "db-sync-conf",
                  "mountPath": "/etc/aodh/logging.conf",
                  "subPath": "logging.conf",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "db-sync-sh",
              "configMap": {
                "name": "aodh-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "etc-service",
              "emptyDir": {}
            },
            {
              "name": "db-sync-conf",
              "secret": {
                "secretName": "aodh-etc",
                "defaultMode": 292
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "aodh-ks-endpoints",
      "annotations": {
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "spec": {
      "backoffLimit": 1000,
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "aodh",
            "component": "ks-endpoints"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": ""
          }
        },
        "spec": {
          "serviceAccountName": "aodh-ks-endpoints",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:keystone-api"
                },
                {
                  "name": "DEPENDENCY_JOBS",
                  "value": "aodh-ks-service"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "alarming-ks-endpoints-admin",
              "image": "docker.io/openstackhelm/heat:ocata-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/tmp/ks-endpoints.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "ks-endpoints-sh",
                  "mountPath": "/tmp/ks-endpoints.sh",
                  "subPath": "ks-endpoints.sh",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "OS_IDENTITY_API_VERSION",
                  "value": "3"
                },
                {
                  "name": "OS_AUTH_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_AUTH_URL"
                    }
                  }
                },
                {
                  "name": "OS_REGION_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_REGION_NAME"
                    }
                  }
                },
                {
                  "name": "OS_INTERFACE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_ENDPOINT_TYPE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PROJECT_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PROJECT_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USER_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_USER_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_USERNAME"
                    }
                  }
                },
                {
                  "name": "OS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "OS_DEFAULT_DOMAIN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_DEFAULT_DOMAIN"
                    }
                  }
                },
                {
                  "name": "OS_SVC_ENDPOINT",
                  "value": "admin"
                },
                {
                  "name": "OS_SERVICE_NAME",
                  "value": "aodh"
                },
                {
                  "name": "OS_SERVICE_TYPE",
                  "value": "alarming"
                },
                {
                  "name": "OS_SERVICE_ENDPOINT",
                  "value": "http://aodh-api.default.svc.cluster.local:8042/"
                }
              ]
            },
            {
              "name": "alarming-ks-endpoints-internal",
              "image": "docker.io/openstackhelm/heat:ocata-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/tmp/ks-endpoints.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "ks-endpoints-sh",
                  "mountPath": "/tmp/ks-endpoints.sh",
                  "subPath": "ks-endpoints.sh",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "OS_IDENTITY_API_VERSION",
                  "value": "3"
                },
                {
                  "name": "OS_AUTH_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_AUTH_URL"
                    }
                  }
                },
                {
                  "name": "OS_REGION_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_REGION_NAME"
                    }
                  }
                },
                {
                  "name": "OS_INTERFACE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_ENDPOINT_TYPE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PROJECT_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PROJECT_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USER_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_USER_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_USERNAME"
                    }
                  }
                },
                {
                  "name": "OS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "OS_DEFAULT_DOMAIN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_DEFAULT_DOMAIN"
                    }
                  }
                },
                {
                  "name": "OS_SVC_ENDPOINT",
                  "value": "internal"
                },
                {
                  "name": "OS_SERVICE_NAME",
                  "value": "aodh"
                },
                {
                  "name": "OS_SERVICE_TYPE",
                  "value": "alarming"
                },
                {
                  "name": "OS_SERVICE_ENDPOINT",
                  "value": "http://aodh-api.default.svc.cluster.local:8042/"
                }
              ]
            },
            {
              "name": "alarming-ks-endpoints-public",
              "image": "docker.io/openstackhelm/heat:ocata-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/tmp/ks-endpoints.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "ks-endpoints-sh",
                  "mountPath": "/tmp/ks-endpoints.sh",
                  "subPath": "ks-endpoints.sh",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "OS_IDENTITY_API_VERSION",
                  "value": "3"
                },
                {
                  "name": "OS_AUTH_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_AUTH_URL"
                    }
                  }
                },
                {
                  "name": "OS_REGION_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_REGION_NAME"
                    }
                  }
                },
                {
                  "name": "OS_INTERFACE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_ENDPOINT_TYPE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PROJECT_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PROJECT_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USER_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_USER_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_USERNAME"
                    }
                  }
                },
                {
                  "name": "OS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "OS_DEFAULT_DOMAIN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_DEFAULT_DOMAIN"
                    }
                  }
                },
                {
                  "name": "OS_SVC_ENDPOINT",
                  "value": "public"
                },
                {
                  "name": "OS_SERVICE_NAME",
                  "value": "aodh"
                },
                {
                  "name": "OS_SERVICE_TYPE",
                  "value": "alarming"
                },
                {
                  "name": "OS_SERVICE_ENDPOINT",
                  "value": "http://aodh.default.svc.cluster.local/"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "ks-endpoints-sh",
              "configMap": {
                "name": "aodh-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "aodh-ks-service",
      "annotations": {
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "spec": {
      "backoffLimit": 1000,
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "aodh",
            "component": "ks-service"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": ""
          }
        },
        "spec": {
          "serviceAccountName": "aodh-ks-service",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:keystone-api"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "alarming-ks-service-registration",
              "image": "docker.io/openstackhelm/heat:ocata-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/tmp/ks-service.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "ks-service-sh",
                  "mountPath": "/tmp/ks-service.sh",
                  "subPath": "ks-service.sh",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "OS_IDENTITY_API_VERSION",
                  "value": "3"
                },
                {
                  "name": "OS_AUTH_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_AUTH_URL"
                    }
                  }
                },
                {
                  "name": "OS_REGION_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_REGION_NAME"
                    }
                  }
                },
                {
                  "name": "OS_INTERFACE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_ENDPOINT_TYPE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PROJECT_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PROJECT_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USER_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_USER_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_USERNAME"
                    }
                  }
                },
                {
                  "name": "OS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "OS_DEFAULT_DOMAIN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_DEFAULT_DOMAIN"
                    }
                  }
                },
                {
                  "name": "OS_SERVICE_NAME",
                  "value": "aodh"
                },
                {
                  "name": "OS_SERVICE_TYPE",
                  "value": "alarming"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "ks-service-sh",
              "configMap": {
                "name": "aodh-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "aodh-ks-user",
      "annotations": {
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "spec": {
      "backoffLimit": 1000,
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "aodh",
            "component": "ks-user"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": ""
          }
        },
        "spec": {
          "serviceAccountName": "aodh-ks-user",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:keystone-api"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "ks-user",
              "image": "docker.io/openstackhelm/heat:ocata-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/tmp/ks-user.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "ks-user-sh",
                  "mountPath": "/tmp/ks-user.sh",
                  "subPath": "ks-user.sh",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "OS_IDENTITY_API_VERSION",
                  "value": "3"
                },
                {
                  "name": "OS_AUTH_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_AUTH_URL"
                    }
                  }
                },
                {
                  "name": "OS_REGION_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_REGION_NAME"
                    }
                  }
                },
                {
                  "name": "OS_INTERFACE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_ENDPOINT_TYPE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_INTERFACE"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PROJECT_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_PROJECT_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PROJECT_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USER_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_USER_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "OS_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_USERNAME"
                    }
                  }
                },
                {
                  "name": "OS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "OS_DEFAULT_DOMAIN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-admin",
                      "key": "OS_DEFAULT_DOMAIN"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_SERVICE_NAME",
                  "value": "aodh"
                },
                {
                  "name": "SERVICE_OS_REGION_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-user",
                      "key": "OS_REGION_NAME"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_PROJECT_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-user",
                      "key": "OS_PROJECT_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_PROJECT_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-user",
                      "key": "OS_PROJECT_NAME"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_USER_DOMAIN_NAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-user",
                      "key": "OS_USER_DOMAIN_NAME"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_USERNAME",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-user",
                      "key": "OS_USERNAME"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-keystone-user",
                      "key": "OS_PASSWORD"
                    }
                  }
                },
                {
                  "name": "SERVICE_OS_ROLES",
                  "value": "admin"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "ks-user-sh",
              "configMap": {
                "name": "aodh-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "aodh-rabbit-init",
      "annotations": {
        "helm.sh/hook-delete-policy": "before-hook-creation"
      }
    },
    "spec": {
      "backoffLimit": 1000,
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "aodh",
            "component": "rabbit-init"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": ""
          }
        },
        "spec": {
          "serviceAccountName": "aodh-rabbit-init",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:rabbitmq"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "rabbit-init",
              "image": "docker.io/rabbitmq:3.7-management",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/bash",
                "-c",
                "/tmp/rabbit-init.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "rabbit-init-sh",
                  "mountPath": "/tmp/rabbit-init.sh",
                  "subPath": "rabbit-init.sh",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "RABBITMQ_ADMIN_CONNECTION",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-rabbitmq-admin",
                      "key": "RABBITMQ_CONNECTION"
                    }
                  }
                },
                {
                  "name": "RABBITMQ_USER_CONNECTION",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "aodh-rabbitmq-user",
                      "key": "RABBITMQ_CONNECTION"
                    }
                  }
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "rabbit-init-sh",
              "configMap": {
                "name": "aodh-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1beta1",
    "kind": "CronJob",
    "metadata": {
      "name": "aodh-alarms-cleaner",
      "annotations": {
        "openstackhelm.openstack.org/release_uuid": ""
      }
    },
    "spec": {
      "schedule": "0 */24 * * *",
      "successfulJobsHistoryLimit": 3,
      "failedJobsHistoryLimit": 1,
      "concurrencyPolicy": "Forbid",
      "jobTemplate": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "aodh",
            "component": "alarms-cleaner"
          }
        },
        "spec": {
          "template": {
            "metadata": {
              "labels": {
                "release_group": "release-name",
                "application": "aodh",
                "component": "alarms-cleaner"
              }
            },
            "spec": {
              "serviceAccountName": "aodh-alarms-cleaner",
              "restartPolicy": "OnFailure",
              "nodeSelector": {
                "openstack-control-plane": "enabled"
              },
              "initContainers": [
                {
                  "name": "init",
                  "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
                  "imagePullPolicy": "IfNotPresent",
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "readOnlyRootFilesystem": true,
                    "runAsUser": 65534
                  },
                  "env": [
                    {
                      "name": "POD_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.name"
                        }
                      }
                    },
                    {
                      "name": "NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    },
                    {
                      "name": "INTERFACE_NAME",
                      "value": "eth0"
                    },
                    {
                      "name": "PATH",
                      "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                    },
                    {
                      "name": "DEPENDENCY_SERVICE",
                      "value": ""
                    },
                    {
                      "name": "DEPENDENCY_DAEMONSET",
                      "value": ""
                    },
                    {
                      "name": "DEPENDENCY_CONTAINER",
                      "value": ""
                    },
                    {
                      "name": "DEPENDENCY_POD_JSON",
                      "value": ""
                    },
                    {
                      "name": "DEPENDENCY_CUSTOM_RESOURCE",
                      "value": ""
                    }
                  ],
                  "command": [
                    "kubernetes-entrypoint"
                  ],
                  "volumeMounts": null
                }
              ],
              "containers": [
                {
                  "name": "aodh-alarms-cleaner",
                  "image": "docker.io/kolla/ubuntu-source-aodh-base:ocata",
                  "imagePullPolicy": "IfNotPresent",
                  "command": [
                    "/tmp/aodh-alarms-cleaner.sh"
                  ],
                  "volumeMounts": [
                    {
                      "name": "pod-tmp",
                      "mountPath": "/tmp"
                    },
                    {
                      "name": "aodh-bin",
                      "mountPath": "/tmp/aodh-alarms-cleaner.sh",
                      "subPath": "aodh-alarms-cleaner.sh",
                      "readOnly": true
                    },
                    {
                      "name": "pod-etc-aodh",
                      "mountPath": "/etc/aodh"
                    },
                    {
                      "name": "aodh-etc",
                      "mountPath": "/etc/aodh/aodh.conf",
                      "subPath": "aodh.conf",
                      "readOnly": true
                    },
                    {
                      "name": "aodh-etc",
                      "mountPath": "/etc/aodh/logging.conf",
                      "subPath": "logging.conf",
                      "readOnly": true
                    }
                  ]
                }
              ],
              "volumes": [
                {
                  "name": "pod-tmp",
                  "emptyDir": {}
                },
                {
                  "name": "pod-etc-aodh",
                  "emptyDir": {}
                },
                {
                  "name": "aodh-etc",
                  "secret": {
                    "secretName": "aodh-etc",
                    "defaultMode": 292
                  }
                },
                {
                  "name": "aodh-bin",
                  "configMap": {
                    "name": "aodh-bin",
                    "defaultMode": 365
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "aodh",
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "nginx.ingress.kubernetes.io/rewrite-target": "/"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "aodh",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "aodh-api",
                  "servicePort": "a-api"
                }
              }
            ]
          }
        },
        {
          "host": "aodh.default",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "aodh-api",
                  "servicePort": "a-api"
                }
              }
            ]
          }
        },
        {
          "host": "aodh.default.svc.cluster.local",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "aodh-api",
                  "servicePort": "a-api"
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-test",
      "labels": {
        "release_group": "release-name",
        "application": "aodh",
        "component": "test"
      },
      "annotations": {
        "helm.sh/hook": "test-success",
        "openstackhelm.openstack.org/release_uuid": ""
      }
    },
    "spec": {
      "restartPolicy": "Never",
      "nodeSelector": {
        "openstack-control-plane": "enabled"
      },
      "serviceAccountName": "release-name-test",
      "initContainers": [
        {
          "name": "init",
          "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
          "imagePullPolicy": "IfNotPresent",
          "securityContext": {
            "allowPrivilegeEscalation": false,
            "readOnlyRootFilesystem": true,
            "runAsUser": 65534
          },
          "env": [
            {
              "name": "POD_NAME",
              "valueFrom": {
                "fieldRef": {
                  "apiVersion": "v1",
                  "fieldPath": "metadata.name"
                }
              }
            },
            {
              "name": "NAMESPACE",
              "valueFrom": {
                "fieldRef": {
                  "apiVersion": "v1",
                  "fieldPath": "metadata.namespace"
                }
              }
            },
            {
              "name": "INTERFACE_NAME",
              "value": "eth0"
            },
            {
              "name": "PATH",
              "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
            },
            {
              "name": "DEPENDENCY_SERVICE",
              "value": "default:keystone-api,default:mariadb,default:aodh-api"
            },
            {
              "name": "DEPENDENCY_JOBS",
              "value": "aodh-db-sync"
            },
            {
              "name": "DEPENDENCY_DAEMONSET",
              "value": ""
            },
            {
              "name": "DEPENDENCY_CONTAINER",
              "value": ""
            },
            {
              "name": "DEPENDENCY_POD_JSON",
              "value": ""
            },
            {
              "name": "DEPENDENCY_CUSTOM_RESOURCE",
              "value": ""
            }
          ],
          "command": [
            "kubernetes-entrypoint"
          ],
          "volumeMounts": null
        }
      ],
      "containers": [
        {
          "name": "release-name-test",
          "image": "docker.io/kolla/ubuntu-source-aodh-api:ocata",
          "imagePullPolicy": "IfNotPresent",
          "env": [
            {
              "name": "OS_IDENTITY_API_VERSION",
              "value": "3"
            },
            {
              "name": "OS_AUTH_URL",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "aodh-keystone-admin",
                  "key": "OS_AUTH_URL"
                }
              }
            },
            {
              "name": "OS_REGION_NAME",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "aodh-keystone-admin",
                  "key": "OS_REGION_NAME"
                }
              }
            },
            {
              "name": "OS_INTERFACE",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "aodh-keystone-admin",
                  "key": "OS_INTERFACE"
                }
              }
            },
            {
              "name": "OS_ENDPOINT_TYPE",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "aodh-keystone-admin",
                  "key": "OS_INTERFACE"
                }
              }
            },
            {
              "name": "OS_PROJECT_DOMAIN_NAME",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "aodh-keystone-admin",
                  "key": "OS_PROJECT_DOMAIN_NAME"
                }
              }
            },
            {
              "name": "OS_PROJECT_NAME",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "aodh-keystone-admin",
                  "key": "OS_PROJECT_NAME"
                }
              }
            },
            {
              "name": "OS_USER_DOMAIN_NAME",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "aodh-keystone-admin",
                  "key": "OS_USER_DOMAIN_NAME"
                }
              }
            },
            {
              "name": "OS_USERNAME",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "aodh-keystone-admin",
                  "key": "OS_USERNAME"
                }
              }
            },
            {
              "name": "OS_PASSWORD",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "aodh-keystone-admin",
                  "key": "OS_PASSWORD"
                }
              }
            },
            {
              "name": "OS_DEFAULT_DOMAIN",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "aodh-keystone-admin",
                  "key": "OS_DEFAULT_DOMAIN"
                }
              }
            }
          ],
          "command": [
            "/tmp/aodh-test.sh"
          ],
          "volumeMounts": [
            {
              "name": "pod-tmp",
              "mountPath": "/tmp"
            },
            {
              "name": "aodh-etc",
              "mountPath": "/etc/aodh/aodh.conf",
              "subPath": "aodh.conf",
              "readOnly": true
            },
            {
              "name": "aodh-bin",
              "mountPath": "/tmp/aodh-test.sh",
              "subPath": "aodh-test.sh",
              "readOnly": true
            }
          ]
        }
      ],
      "volumes": [
        {
          "name": "pod-tmp",
          "emptyDir": {}
        },
        {
          "name": "aodh-etc",
          "secret": {
            "secretName": "aodh-etc",
            "defaultMode": 292
          }
        },
        {
          "name": "aodh-bin",
          "configMap": {
            "name": "aodh-bin",
            "defaultMode": 365
          }
        }
      ]
    }
  }
]