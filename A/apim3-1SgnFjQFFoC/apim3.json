[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-apim3",
      "annotations": null,
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "apim",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-apim3-api",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      }
    },
    "data": {
      "gravitee.yml": "\nmanagement:\n  url: https://apim.example.com/console/\n  type: mongodb\n  mongodb:\n    sslEnabled: false\n    socketKeepAlive: false\n    uri: mongodb://graviteeio-apim-mongodb-replicaset:27017/gravitee?&replicaSet=rs0&connectTimeoutMS=30000\n\nconsole:\n  api:\n    url: \"https://apim.example.com/management\"\n  ui:\n    url: \"https://apim.example.com/console\"\nservices:\n  core:\n    http:\n      enabled: true\n      port: 18083\n      host: localhost\n      authentication:\n        type: basic\n        users:\n          admin: adminadmin\nhttpClient:\n  timeout: 10000\nhttp:\n  api:\n    entrypoint: /\n    management:\n      entrypoint: ${http.api.entrypoint}management\n    portal:\n      entrypoint: ${http.api.entrypoint}portal\n\nanalytics:\n  type: elasticsearch\n  elasticsearch:\n    endpoints:\n      - http://graviteeio-apim-elasticsearch-client.default.svc.cluster.local:9200\n    index_mode: daily\n    index: gravitee\nsecurity:\n  trustAll: false\n  providers:\n    - type: gravitee\n    - type: memory\n      # password encoding/hashing algorithm. One of:\n      # - bcrypt : passwords are hashed with bcrypt\n      # - none : passwords are not hashed/encrypted\n      # default value is bcrypt\n      password-encoding-algo: bcrypt\n      allow-email-in-search-results: false\n      users:\n        - user:\n          username: admin\n          password: $2a$10$Ihk05VSds5rUSgMdsMVi9OKMIx2yUvMz7y9VP3rJmQeizZLrhLMyq\n          roles: ORGANIZATION:ADMIN, ENVIRONMENT:ADMIN\n          email: \n          firstName: \n          lastName: \n        - user:\n          username: user\n          # Password value: password\n          password: $2a$10$9kjw/SH9gucCId3Lnt6EmuFreUAcXSZgpvAYuW2ISv7hSOhHRH1AO\n          roles: ORGANIZATION:USER, ENVIRONMENT:USER\n          # Useful to receive notifications\n          #email:\n          #firstName:\n          #lastName:\n        - user:\n          username: api1\n          # Password value: api1\n          password: $2a$10$iXdXO4wAYdhx2LOwijsp7.PsoAZQ05zEdHxbriIYCbtyo.y32LTji\n          # You can declare multiple roles using comma separator\n          roles: ORGANIZATION:USER, ENVIRONMENT:API_PUBLISHER\n          #email:\n          #firstName:\n          #lastName:\n        - user:\n          username: application1\n          # Password value: application1\n          password: $2a$10$2gtKPYRB9zaVaPcn5RBx/.3T.7SeZoDGs9GKqbo9G64fKyXFR1He.\n          roles: ORGANIZATION:USER, ENVIRONMENT:USER\n          #email:\n          #firstName:\n          #lastName:\n        \n# SMTP configuration used to send mails\nemail:\n  enabled: true \n  host: smtp.example.com\n  subject: \"[gravitee] %s\"\n  port: 25\n  from: info@example.com\n  username: info@example.com\n  password: example.com\n  properties:\n    auth: true\n    starttls.enable: false\n\n# SMTP configuration used to send notifications / alerts\nnotifiers:\n  email:\n    enabled: true\n    host: ${email.host}\n    subject: \"${email.subject}\"\n    port: ${email.port}\n    from: ${email.from}\n    username: ${email.username}\n    password: ${email.password}\n    starttls.enabled: false\n\n# Mail templates\ntemplates:\n  path: ${gravitee.home}/templates\n\njwt:\n  secret: myJWT4Gr4v1t33_S3cr3t\n\nswagger:\n  # Default scheme used when creating an API from a Swagger descriptor if there is no scheme specified.\n  scheme: https\n\nuser:\n  login:\n    # Create a default application when user connects to the portal for the very first time (default true)\n    defaultApplication: true\n  creation:\n    # Allows to register new users from portal (default false)\n    #enabled: true\n    token:\n      #expire-after: 86400\n    anonymize-on-delete:\n      enabled: false\n# The portal URL used in emails\nportalURL: https://apim.example.com\n\n# Allows to create support ticket (default value: false)\nsupport:\n  enabled: true\n\n# Allows to rate an API (default value: false)\nrating :\n  enabled: true\n\n# Set the Subscribe to newsletter feature (default value: true)\nnewsletter :\n  enabled: true\n\n# Alert Engine communication\n\nalerts:\n  alert-engine-connector-ws:\n    enabled: false\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-apim3-gateway",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "gateway",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      }
    },
    "data": {
      "gravitee.yml": "# Gateway HTTP server\nhttp:\n  port: 8082\n  host: 0.0.0.0\n#  idleTimeout: 0\n#  tcpKeepAlive: true\n#  compressionSupported: false\n#  instances: 0\n  alpn: true\n  websocket:\n    enabled: false\nmanagement:\n  type: mongodb\n  mongodb:\n    sslEnabled: false\n    socketKeepAlive: false\n    uri: mongodb://graviteeio-apim-mongodb-replicaset:27017/gravitee?&replicaSet=rs0&connectTimeoutMS=30000\n\nratelimit:\n  type: mongodb\n  mongodb:\n    sslEnabled: false\n    socketKeepAlive: false\n    uri: mongodb://graviteeio-apim-mongodb-replicaset:27017/gravitee?&replicaSet=rs0&connectTimeoutMS=30000\n\ncache:\n  type: ehcache\n  enabled: true\n\n# Sharding tags configuration\n# Allows to define inclusion/exclusion sharding tags to only deploy a part of APIs. To exclude just prefix the tag with '!'.\ntags:   \n\n# Multi-tenant configuration\n# Allow only a single-value\ntenant: \n\n# Reporters configuration (used to store reporting monitoring data, request metrics, healthchecks and others...\n# All reporters are enabled by default. To stop one of them, you have to add the property 'enabled: false'\nreporters:\n  # Elasticsearch reporter\n  elasticsearch:\n    enabled: true\n    endpoints:\n      - http://graviteeio-apim-elasticsearch-client.default.svc.cluster.local:9200\n    index_mode: daily\n    pipeline:\n      plugins:\n        ingest: geoip, user_agent\n    index: gravitee\n    bulk:\n      actions: 1000           # Number of requests action before flush\n      flush_interval: 5       # Flush interval in seconds\n\nservices:\n  core:\n    http:\n      enabled: true\n      port: 18082\n      host: localhost\n      authentication:\n        type: basic\n        users:\n          admin: adminadmin\n      secured: false\n  kubernetes:\n    enabled: false\n\n  sync: \n    cron: '*/5 * * * * *'\n\n  # Service used to store and cache api-keys from the management repository to avoid direct repository communication\n  # while serving requests.\n  apikeyscache:\n    delay: 10000\n    unit: MILLISECONDS\n    threads: 3 # Threads core size used to retrieve api-keys from repository.\n\n  # Local registry service.\n  # This registry is used to load API Definition with json format from the file system. By doing so, you do not need\n  # to configure your API using the web console or the rest API (but you need to know and understand the json descriptor\n  # format to make it work....)\n  local:\n    enabled: false\n    path: ${gravitee.home}/apis # The path to API descriptors\n\n  # Gateway monitoring service.\n  # This service retrieves metrics like os / process / jvm metrics and send them to an underlying reporting service.\n  monitoring:\n    delay: 5000\n    unit: MILLISECONDS\n\n  # Endpoint healthcheck service.\n  healthcheck:\n    threads: 3 # Threads core size used to check endpoint availability\npolicy:\n  api-key:\n    header: X-Gravitee-Api-Key\n    param: api-key\n\n# Alert Engine communication\nalerts:\n  alert-engine-connector-ws:\n    enabled: false\n\n# Old class loader behavior, false by default\nclassloader:\n  legacy:\n    enabled: false\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-apim3-portal",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "portal",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      }
    },
    "data": {
      "use-gzip": "true",
      "gzip-level": "5",
      "gzip-types": "*",
      "config.json": "{\n  \"baseURL\": \"https://apim.example.com/portal/environments/DEFAULT\",\n  \"loaderURL\": \"assets/images/gravitee-loader.gif\",\n  \"pagination\": {\n    \"size\": {\n      \"default\": 10,\n      \"values\": [5, 10, 25, 50, 100]\n    }\n  }\n}\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-apim3-ui",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "ui",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      }
    },
    "data": {
      "use-gzip": "true",
      "gzip-level": "5",
      "gzip-types": "*",
      "constants.json": "{\n  \"baseURL\": \"https://apim.example.com/management/organizations/DEFAULT/environments/DEFAULT/\",\n  \"management\": {\n    \"title\": \"API Management\"\n  },\n  \"company\": {\n    \"name\": \"Gravitee.io\"\n  },\n  \"documentation\": {\n    \"url\": \"http://docs.gravitee.io/\"\n  },\n  \"portal\": {\n    \"entrypoint\": \"https://apim.example.com/gateway\",\n    \"title\": \"Management UI\",\n    \"analytics\": {\"enabled\":false,\"trackingId\":\"\"},\n    \"apikeyHeader\": \"X-Gravitee-Api-Key\",\n    \"rating\": {\"enabled\":false},\n    \"support\": {\"enabled\":true},\n    \"userCreation\": {\"enabled\":false}\n  },\n  \"theme\": {\"loader\":\"assets/gravitee_logo_anim.gif\",\"logo\":\"themes/assets/GRAVITEE_LOGO1-01.png\",\"name\":\"default\"},\n  \"scheduler\": {\"tasks\":10}\n}\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-apim3-cluster-role",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "apim",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "secrets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-apim3-cluster-role-binding",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "apim",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "kind": "ClusterRole",
      "name": "release-name-apim3-cluster-role",
      "apiGroup": "rbac.authorization.k8s.io"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-apim3",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-apim3-api",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 83,
          "targetPort": 8083,
          "protocol": "TCP",
          "name": "api"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "api"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-apim3-gateway",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "gateway",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 82,
          "targetPort": 8082,
          "protocol": "TCP",
          "name": "gateway"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "gateway"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-apim3-portal",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "portal",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8003,
          "targetPort": 8080,
          "protocol": "TCP",
          "name": "portal"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "portal"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-apim3-ui",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "ui",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8002,
          "targetPort": 8080,
          "protocol": "TCP",
          "name": "ui"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "ui"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-apim3-api",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      }
    },
    "spec": {
      "strategy": {
        "rollingUpdate": {
          "maxUnavailable": 1
        },
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "apim3",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "api"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "chaos.alpha.kubernetes.io/enabled": "false",
            "checksum/config": "c378f254e98ec9cc7545c726abbd10f02931feb7c2d2c7314676ba8d5774e515"
          },
          "labels": {
            "app.kubernetes.io/name": "apim3",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "3.15.8",
            "app.kubernetes.io/component": "api"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-apim3",
          "affinity": {},
          "nodeSelector": {},
          "topologySpreadConstraints": [],
          "tolerations": [],
          "terminationGracePeriodSeconds": 30,
          "initContainers": null,
          "containers": [
            {
              "name": "release-name-apim3-api",
              "image": "graviteeio/apim-management-api:3.15.8",
              "imagePullPolicy": "Always",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 10064,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8083
                },
                {
                  "name": "api-techapi",
                  "containerPort": 18083
                }
              ],
              "env": [
                {
                  "name": "portal.entrypoint",
                  "value": "https://apim.example.com/gateway"
                }
              ],
              "envFrom": [],
              "livenessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 30,
                "periodSeconds": 30,
                "tcpSocket": {
                  "port": "http"
                }
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 30,
                "periodSeconds": 30,
                "tcpSocket": {
                  "port": "http"
                }
              },
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "1024Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/opt/graviteeio-management-api/config/gravitee.yml",
                  "subPath": "gravitee.yml"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-apim3-api"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-apim3-gateway",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "gateway",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      }
    },
    "spec": {
      "strategy": {
        "rollingUpdate": {
          "maxUnavailable": 1
        },
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "apim3",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "gateway"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "chaos.alpha.kubernetes.io/enabled": "false",
            "checksum/config": "0567be5219b6bd3b080f63e832c03264a7b3c8876e7bfa3e5e7c66c64b474a0f"
          },
          "labels": {
            "app.kubernetes.io/name": "apim3",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "3.15.8",
            "app.kubernetes.io/component": "gateway"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-apim3",
          "affinity": {},
          "nodeSelector": {},
          "topologySpreadConstraints": [],
          "tolerations": [],
          "terminationGracePeriodSeconds": 30,
          "initContainers": null,
          "containers": [
            {
              "name": "release-name-apim3-gateway",
              "image": "graviteeio/apim-gateway:3.15.8",
              "imagePullPolicy": "Always",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 10705,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8082
                }
              ],
              "env": null,
              "envFrom": [],
              "livenessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 30,
                "periodSeconds": 30,
                "tcpSocket": {
                  "port": "http"
                }
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 10,
                "periodSeconds": 30,
                "tcpSocket": {
                  "port": "http"
                }
              },
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "512Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "256Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/opt/graviteeio-gateway/config/gravitee.yml",
                  "subPath": "gravitee.yml"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-apim3-gateway"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-apim3-portal",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "portal",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      }
    },
    "spec": {
      "strategy": {
        "rollingUpdate": {
          "maxUnavailable": 1
        },
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "apim3",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "portal"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "chaos.alpha.kubernetes.io/enabled": "false",
            "checksum/config": "5646bd789d54c02eac914c93fcad46ff390895d8c795e142c567859392347c92"
          },
          "labels": {
            "app.kubernetes.io/name": "apim3",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "3.15.8",
            "app.kubernetes.io/component": "portal"
          }
        },
        "spec": {
          "affinity": {},
          "nodeSelector": {},
          "topologySpreadConstraints": [],
          "tolerations": [],
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "release-name-apim3-portal",
              "image": "graviteeio/apim-portal-ui:3.15.8",
              "imagePullPolicy": "Always",
              "securityContext": {
                "runAsGroup": 101,
                "runAsNonRoot": true,
                "runAsUser": 10488,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "env": [
                {
                  "name": "PORTAL_API_URL",
                  "value": "https://apim.example.com/portal/"
                }
              ],
              "envFrom": [],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080
                }
              ],
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30
              },
              "resources": {
                "limits": {
                  "cpu": "100m",
                  "memory": "128Mi"
                },
                "requests": {
                  "cpu": "50m",
                  "memory": "64Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/usr/share/nginx/html/assets/config.json",
                  "subPath": "config.json"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-apim3-portal"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-apim3-ui",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "ui",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      }
    },
    "spec": {
      "strategy": {
        "rollingUpdate": {
          "maxUnavailable": 1
        },
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "apim3",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "ui"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "chaos.alpha.kubernetes.io/enabled": "false",
            "checksum/config": "63ed8dd6846d94e0f7dbf6dffc00ab7514c31dcbf6e79842f8693e4bf655f7fa"
          },
          "labels": {
            "app.kubernetes.io/name": "apim3",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "3.15.8",
            "app.kubernetes.io/component": "ui"
          }
        },
        "spec": {
          "affinity": {},
          "nodeSelector": {},
          "topologySpreadConstraints": [],
          "tolerations": [],
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "release-name-apim3-ui",
              "image": "graviteeio/apim-management-ui:3.15.8",
              "imagePullPolicy": "Always",
              "securityContext": {
                "runAsGroup": 101,
                "runAsNonRoot": true,
                "runAsUser": 10684,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "env": [
                {
                  "name": "MGMT_API_URL",
                  "value": "https://apim.example.com/management/"
                }
              ],
              "envFrom": [],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080
                }
              ],
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30
              },
              "resources": {
                "limits": {
                  "cpu": "100m",
                  "memory": "128Mi"
                },
                "requests": {
                  "cpu": "50m",
                  "memory": "64Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/usr/share/nginx/html/constants.json",
                  "subPath": "constants.json"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-apim3-ui"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "autoscaling/v2beta1",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "name": "release-name-apim3-api",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      }
    },
    "spec": {
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "release-name-apim3-api"
      },
      "minReplicas": 1,
      "maxReplicas": 3,
      "metrics": [
        {
          "type": "Resource",
          "resource": {
            "name": "memory",
            "targetAverageUtilization": 80
          }
        },
        {
          "type": "Resource",
          "resource": {
            "name": "cpu",
            "targetAverageUtilization": 50
          }
        }
      ]
    }
  },
  {
    "apiVersion": "autoscaling/v2beta1",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "name": "release-name-apim3-gateway",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "gateway",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      }
    },
    "spec": {
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "release-name-apim3-gateway"
      },
      "minReplicas": 1,
      "maxReplicas": 3,
      "metrics": [
        {
          "type": "Resource",
          "resource": {
            "name": "memory",
            "targetAverageUtilization": 80
          }
        },
        {
          "type": "Resource",
          "resource": {
            "name": "cpu",
            "targetAverageUtilization": 50
          }
        }
      ]
    }
  },
  {
    "apiVersion": "autoscaling/v2beta1",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "name": "release-name-apim3-portal",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "portal",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      }
    },
    "spec": {
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "release-name-apim3-portal"
      },
      "minReplicas": 1,
      "maxReplicas": 3,
      "metrics": [
        {
          "type": "Resource",
          "resource": {
            "name": "memory",
            "targetAverageUtilization": 80
          }
        },
        {
          "type": "Resource",
          "resource": {
            "name": "cpu",
            "targetAverageUtilization": 50
          }
        }
      ]
    }
  },
  {
    "apiVersion": "autoscaling/v2beta1",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "name": "release-name-apim3-ui",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "ui",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      }
    },
    "spec": {
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "release-name-apim3-ui"
      },
      "minReplicas": 1,
      "maxReplicas": 3,
      "metrics": [
        {
          "type": "Resource",
          "resource": {
            "name": "memory",
            "targetAverageUtilization": 80
          }
        },
        {
          "type": "Resource",
          "resource": {
            "name": "cpu",
            "targetAverageUtilization": 50
          }
        }
      ]
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-apim3-api-management",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      },
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "nginx.ingress.kubernetes.io/configuration-snippet": "etag on;\nproxy_pass_header ETag;\nproxy_pass_header if-match;\n"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "apim.example.com",
          "http": {
            "paths": [
              {
                "pathType": "Prefix",
                "path": "/management",
                "backend": {
                  "service": {
                    "name": "release-name-apim3-api",
                    "port": {
                      "number": 83
                    }
                  }
                }
              }
            ]
          }
        }
      ],
      "tls": [
        {
          "hosts": [
            "apim.example.com"
          ],
          "secretName": "api-custom-cert"
        }
      ]
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-apim3-api-portal",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "api",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      },
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "nginx.ingress.kubernetes.io/configuration-snippet": "etag on;\nproxy_pass_header ETag;\nproxy_set_header if-match \"\";\n"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "apim.example.com",
          "http": {
            "paths": [
              {
                "pathType": "Prefix",
                "path": "/portal",
                "backend": {
                  "service": {
                    "name": "release-name-apim3-api",
                    "port": {
                      "number": 83
                    }
                  }
                }
              }
            ]
          }
        }
      ],
      "tls": [
        {
          "hosts": [
            "apim.example.com"
          ],
          "secretName": "api-custom-cert"
        }
      ]
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-apim3-gateway",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "gateway",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      },
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "nginx.ingress.kubernetes.io/ssl-redirect": "false"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "apim.example.com",
          "http": {
            "paths": [
              {
                "pathType": "Prefix",
                "path": "/gateway",
                "backend": {
                  "service": {
                    "name": "release-name-apim3-gateway",
                    "port": {
                      "number": 82
                    }
                  }
                }
              }
            ]
          }
        }
      ],
      "tls": [
        {
          "hosts": [
            "apim.example.com"
          ],
          "secretName": "api-custom-cert"
        }
      ]
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-apim3-portal",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "portal",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      },
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "nginx.ingress.kubernetes.io/configuration-snippet": "etag on;\nproxy_pass_header ETag;\n"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "apim.example.com",
          "http": {
            "paths": [
              {
                "pathType": "Prefix",
                "path": "/",
                "backend": {
                  "service": {
                    "name": "release-name-apim3-portal",
                    "port": {
                      "number": 8003
                    }
                  }
                }
              }
            ]
          }
        }
      ],
      "tls": [
        {
          "hosts": [
            "apim.example.com"
          ],
          "secretName": "api-custom-cert"
        }
      ]
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-apim3-ui",
      "labels": {
        "app.kubernetes.io/name": "apim3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.15.8",
        "app.kubernetes.io/component": "ui",
        "app.kubernetes.io/managed-by": "Helm",
        "helm.sh/chart": "apim3-3.1.45"
      },
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "nginx.ingress.kubernetes.io/configuration-snippet": "etag on;\nproxy_pass_header ETag;\n",
        "nginx.ingress.kubernetes.io/rewrite-target": "/$1$2"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "apim.example.com",
          "http": {
            "paths": [
              {
                "pathType": "Prefix",
                "path": "/console(/|$)(.*)",
                "backend": {
                  "service": {
                    "name": "release-name-apim3-ui",
                    "port": {
                      "number": 8002
                    }
                  }
                }
              }
            ]
          }
        }
      ],
      "tls": [
        {
          "hosts": [
            "apim.example.com"
          ],
          "secretName": "api-custom-cert"
        }
      ]
    }
  },
  null
]