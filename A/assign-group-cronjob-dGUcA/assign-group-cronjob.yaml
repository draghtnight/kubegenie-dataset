apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-assign-group-cronjob
  labels:
    helm.sh/chart: assign-group-cronjob-0.2.1
    app.kubernetes.io/name: assign-group-cronjob
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.1.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-assign-group-cronjob
  labels:
    helm.sh/chart: assign-group-cronjob-0.2.1
    app.kubernetes.io/name: assign-group-cronjob
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.1.0
    app.kubernetes.io/managed-by: Helm
data:
  reconcile-users-in-group.sh: |
    #!/bin/bash

    if [[ -z "${GROUP_NAMES}" ]]; then
      echo "GROUP_NAMES not set"
      exit 1
    fi

    if [[ -n "${NAMESPACE}}" ]] && [[ -n "${JOB_NAME}" ]]; then
      MANAGED_BY="${NAMESPACE}_cronjob_${JOB_NAME}"
    else
      MANAGED_BY="unknown"
    fi

    # list all routes and configmaps with console-link.cloud-native-toolkit.dev/enabled label
    USERS=$(kubectl get users -o json | jq -c '[.items[].metadata.name] | {"users": .}')

    if [[ -z "${USERS}" ]]; then
      echo "No users found"
      exit 0
    fi

    echo "${GROUP_NAMES}" | jq -r '.[]' | while read group_name; do
      echo "Processing group: ${group_name}"
      kubectl get group "${group_name}" -o json > /tmp/group.json

      GROUP_USERS=$(cat /tmp/group.json | jq -c '.users | {"users": .}')
      cat /tmp/group.json | jq --arg MANAGED_BY $MANAGED_BY 'del(.users) | .metadata.labels["app.kubernetes.io/managed-by"] = $MANAGED_BY' > /tmp/group-nousers.json

      if [[ "${USERS}" != "${GROUP_USERS}" ]]; then
        echo "Reconciling users to group"
        echo "${USERS}" | jq -s '.[0] * .[1]' /tmp/group-nousers.json - | kubectl apply -f -
      fi
    done
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-assign-group-cronjob
  labels:
    helm.sh/chart: assign-group-cronjob-0.2.1
    app.kubernetes.io/name: assign-group-cronjob
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.1.0
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - user.openshift.io
    resources:
      - groups
    verbs:
      - '*'
  - apiGroups:
      - user.openshift.io
    resources:
      - users
    verbs:
      - list
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-assign-group-cronjob
  labels:
    helm.sh/chart: assign-group-cronjob-0.2.1
    app.kubernetes.io/name: assign-group-cronjob
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.1.0
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-assign-group-cronjob
subjects:
  - kind: ServiceAccount
    name: release-name-assign-group-cronjob
    namespace: default
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-assign-group-cronjob
  labels:
    helm.sh/chart: assign-group-cronjob-0.2.1
    app.kubernetes.io/name: assign-group-cronjob
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.1.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    checksum/config: 898d1b8eb33e5dc548cbcdb7b673b2179ef8bad6d83b05502b6b04f296983cb1
spec:
  schedule: '*/1 * * * *'
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          volumes:
            - name: scripts
              configMap:
                name: release-name-assign-group-cronjob
                defaultMode: 511
          serviceAccountName: release-name-assign-group-cronjob
          containers:
            - name: job
              image: quay.io/cloudnativetoolkit/console-link-cronjob:v0.1.0
              volumeMounts:
                - mountPath: /scripts
                  name: scripts
              env:
                - name: GROUP_NAMES
                  value: '[]'
                - name: JOB_NAME
                  value: release-name-assign-group-cronjob
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              command:
                - /bin/sh
              args:
                - -c
                - /scripts/reconcile-users-in-group.sh
