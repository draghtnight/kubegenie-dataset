[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-actinia",
      "labels": {
        "helm.sh/chart": "actinia-2.2.3",
        "app.kubernetes.io/name": "actinia",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-redis",
      "namespace": "IakKvL75Z",
      "labels": {
        "app": "redis",
        "chart": "redis-12.10.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "redis-password": "NUVBVEdxaWcwNQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-actinia",
      "labels": {
        "helm.sh/chart": "actinia-2.2.3",
        "app.kubernetes.io/name": "actinia",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      ".pgpass": "cG9zdGdpczo1NDMyOm15ZGI6YWN0aW5pYTphY3RpbmlhCg==",
      ".grass8": "cGd8bXlkYnxhY3RpbmlhfHxwb3N0Z2lzfDU0MzIK"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-scripts",
      "namespace": "IakKvL75Z",
      "labels": {
        "app": "redis",
        "chart": "redis-12.10.1",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "start-master.sh": "#!/bin/bash\nif [[ -n $REDIS_PASSWORD_FILE ]]; then\n  password_aux=`cat ${REDIS_PASSWORD_FILE}`\n  export REDIS_PASSWORD=$password_aux\nfi\nif [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/master.conf\")\nexec /run.sh \"${ARGS[@]}\"\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis",
      "namespace": "IakKvL75Z",
      "labels": {
        "app": "redis",
        "chart": "redis-12.10.1",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "redis.conf": "# User-supplied configuration:\n# Enable AOF https://redis.io/topics/persistence#append-only-file\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"",
      "master.conf": "dir /data\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"",
      "replica.conf": "dir /data\nslave-read-only yes\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-health",
      "namespace": "IakKvL75Z",
      "labels": {
        "app": "redis",
        "chart": "redis-12.10.1",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "ping_readiness_local.sh": "#!/bin/bash\nexport REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_local.sh": "#!/bin/bash\nexport REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_master.sh": "#!/bin/bash\nexport REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_master.sh": "#!/bin/bash\nexport REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-actinia",
      "labels": {
        "helm.sh/chart": "actinia-2.2.3",
        "app.kubernetes.io/name": "actinia",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "start.sh": "#!/bin/sh\n\n# TODO: read paths from config\nmkdir -p /actinia_core/grassdb\nmkdir -p /actinia_core/userdata\nmkdir -p /actinia_core/workspace/temp_db\nmkdir -p /actinia_core/workspace/tmp\nmkdir -p /actinia_core/resources\n\n# copy pgpass from mounted (!) file\ncp /mnt/pgpass/.pgpass $HOME/.pgpass\nchmod 0600 $HOME/.pgpass\n\n# copy db.login file from mounted (!) file\ncp /mnt/pgpass/.grass8 $HOME/.grass8/dblogin\nchmod 0600 $HOME/.grass8/dblogin\n\n# copy db.login file to actinia-core tmp location\nmkdir -p /tmp/:/root/.grass8\ncp /root/.grass8/dblogin /tmp/:/root/.grass8/\n\n# Create default location in mounted (!) directory\n[ ! -d \"/actinia_core/grassdb/nc_spm_08\" ] && grass --text -e -c 'EPSG:3358' /actinia_core/grassdb/nc_spm_08\n\nactinia-user create -u actinia-gdi -w actinia-gdi -r superadmin -g superadmin -c 100000000000 -n 1000 -t 31536000\nactinia-user update -u actinia-gdi -w actinia-gdi\nstatus=$?\nif [ $status -ne 0 ]; then\n  echo \"Failed to start actinia-user: $status\"\n  exit $status\nfi\n\ngunicorn -b 0.0.0.0:8088 -w 1 --access-logfile=- -k gthread actinia_core.main:flask_app\nstatus=$?\nif [ $status -ne 0 ]; then\n  echo \"Failed to start actinia_core/main.py: $status\"\n  exit $status\nfi\n",
      "actinia-core-config": "[GRASS]\ngrass_database = /actinia_core/grassdb\ngrass_user_database = /actinia_core/userdata\ngrass_tmp_database = /actinia_core/workspace/temp_db\ngrass_resource_dir = /actinia_core/resources\ngrass_gis_base = /usr/local/grass\ngrass_gis_start_script = /usr/local/bin/grass\ngrass_addon_path = /root/.grass8/addons/\n\n[API]\nplugins = [\"actinia_module_plugin\", \"actinia_stac_plugin\"]\nforce_https_urls = True\n\n[REDIS]\nredis_server_url = release-name-actinia-redis-headless\nredis_server_port = 6379\nredis_resource_expire_time = 864000\nworker_logfile = /actinia_core/workspace/tmp/actinia_worker.log\n\n[LOGGING]\nlog_stdout_format = json\nlog_level = 1\n\n[MISC]\ntmp_workdir = /actinia_core/workspace/tmp\ndownload_cache = /actinia_core/workspace/download_cache\nsecret_key = token_signing_key_changeme\n",
      "init-data.sh": "#!/bin/bash\napk add curl\necho \"check if sampledata exists\"\nFILE=/actinia_core/grassdb/.init\nif [ -f \"$FILE\" ]; then\n    echo \"sampledata already exists\"\n    exit 0\nfi\n\nmkdir -p /actinia_core/grassdb\ncd /actinia_core/grassdb\n\necho \"download basic sampledata\"\nDOWNLOAD=nc_basic_spm_grass7.tar.gz\ncurl --continue - -O https://grass.osgeo.org/sampledata/north_carolina/${DOWNLOAD}\ntar -zxf ${DOWNLOAD} && rm ${DOWNLOAD}\nmv nc_basic_spm_grass7 nc_spm_08\n\necho \"download temporal sampledata\"\nDOWNLOAD=nc_spm_mapset_modis2015_2016_lst.zip\ncurl --continue - -O https://grass.osgeo.org/sampledata/north_carolina/${DOWNLOAD}\nunzip ${DOWNLOAD} && rm ${DOWNLOAD}\nmv modis_lst /actinia_core/grassdb/nc_spm_08/modis_lst\n\nCMD=\"touch $FILE\"\necho $CMD && eval $CMD\n\n# chown -R 1001:1001 /actinia_core/grassdb/nc_spm_08/modis_lst && chmod -R g+w /actinia_core/grassdb/nc_spm_08/modis_lst"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-headless",
      "namespace": "IakKvL75Z",
      "labels": {
        "app": "redis",
        "chart": "redis-12.10.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "tcp-redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "redis",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "IakKvL75Z",
      "labels": {
        "app": "redis",
        "chart": "redis-12.10.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "redis",
        "release": "release-name",
        "role": "master"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-actinia",
      "labels": {
        "helm.sh/chart": "actinia-2.2.3",
        "app.kubernetes.io/name": "actinia",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8088,
          "targetPort": "actinia-tcp",
          "protocol": "TCP",
          "name": "actinia-tcp"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "actinia",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "IakKvL75Z",
      "labels": {
        "app": "redis",
        "chart": "redis-12.10.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "redis",
          "release": "release-name",
          "role": "master"
        }
      },
      "serviceName": "release-name-redis-headless",
      "template": {
        "metadata": {
          "labels": {
            "app": "redis",
            "chart": "redis-12.10.1",
            "release": "release-name",
            "role": "master"
          },
          "annotations": {
            "checksum/health": "6bb9d46ee4066384045d4ad6a3e3c978227176cf83a0fe6d369206709bf21169",
            "checksum/configmap": "623d4f191023794d00e013060862a40af5e721ab0d94994774d640f139b657a7",
            "checksum/secret": "95b25007d695095e1beedfeb1c7d2d4cbd65320013524d06601caaad3b956564"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "default",
          "containers": [
            {
              "name": "redis",
              "image": "docker.io/bitnami/redis:6.0.12-debian-10-r33",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 10340,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "command": [
                "/bin/bash",
                "-c",
                "/opt/bitnami/scripts/start-scripts/start-master.sh"
              ],
              "env": [
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "master"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-redis",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_TLS_ENABLED",
                  "value": "no"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 6,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 2,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 1"
                  ]
                }
              },
              "resources": null,
              "volumeMounts": [
                {
                  "name": "start-scripts",
                  "mountPath": "/opt/bitnami/scripts/start-scripts"
                },
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc/"
                },
                {
                  "name": "tmp",
                  "mountPath": "/tmp"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "start-scripts",
              "configMap": {
                "name": "release-name-redis-scripts",
                "defaultMode": 493
              }
            },
            {
              "name": "health",
              "configMap": {
                "name": "release-name-redis-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-redis"
              }
            },
            {
              "name": "redis-data",
              "emptyDir": {}
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            },
            {
              "name": "tmp",
              "emptyDir": {}
            }
          ]
        }
      },
      "updateStrategy": {
        "type": "RollingUpdate"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-actinia",
      "labels": {
        "helm.sh/chart": "actinia-2.2.3",
        "app.kubernetes.io/name": "actinia",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.2",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "serviceName": "release-name-actinia",
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "actinia",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "actinia",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-actinia",
          "securityContext": {},
          "initContainers": [
            {
              "name": "download-data",
              "image": "alpine:3.13",
              "command": [
                "/bin/sh",
                "/mnt/init-data.sh"
              ],
              "volumeMounts": [
                {
                  "name": "temp",
                  "mountPath": "/mnt/download"
                },
                {
                  "name": "init-configmap",
                  "mountPath": "/mnt/"
                },
                {
                  "name": "grassdb",
                  "mountPath": "/actinia_core/grassdb/"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "actinia",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "mundialis/actinia:2.2.2",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh"
              ],
              "args": [
                "/src/start/start.sh"
              ],
              "env": [
                {
                  "name": "DEFAULT_CONFIG_PATH",
                  "value": "/etc/default/actinia-config/actinia.cfg"
                },
                {
                  "name": "REDIS_SERVER_PW",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-actinia-redis",
                      "key": "redis-password"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "name": "actinia-tcp",
                  "containerPort": 8088,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/api/v3/health_check",
                  "port": "actinia-tcp"
                },
                "periodSeconds": 30,
                "timeoutSeconds": 5,
                "failureThreshold": 10
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/api/v3/health_check",
                  "port": "actinia-tcp"
                },
                "timeoutSeconds": 5
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "startup",
                  "mountPath": "/src/start"
                },
                {
                  "name": "config",
                  "mountPath": "/etc/default/actinia-config"
                },
                {
                  "name": "secret",
                  "mountPath": "/mnt/pgpass/"
                },
                {
                  "name": "actinia-worker-workspace",
                  "mountPath": "/actinia_core/workspace/"
                },
                {
                  "name": "grassdb",
                  "mountPath": "/actinia_core/grassdb/"
                },
                {
                  "name": "userdata",
                  "mountPath": "/actinia_core/userdata/"
                },
                {
                  "name": "resources",
                  "mountPath": "/actinia_core/resources/"
                },
                {
                  "name": "geodata",
                  "mountPath": "/mnt/geodata/"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "temp",
              "emptyDir": {}
            },
            {
              "name": "init-configmap",
              "configMap": {
                "name": "release-name-actinia",
                "items": [
                  {
                    "key": "init-data.sh",
                    "path": "init-data.sh"
                  }
                ]
              }
            },
            {
              "name": "grassdb",
              "emptyDir": {}
            },
            {
              "name": "userdata",
              "emptyDir": {}
            },
            {
              "name": "resources",
              "emptyDir": {}
            },
            {
              "name": "geodata",
              "emptyDir": {}
            },
            {
              "name": "actinia-worker-workspace",
              "emptyDir": {}
            },
            {
              "name": "startup",
              "configMap": {
                "name": "release-name-actinia",
                "items": [
                  {
                    "key": "start.sh",
                    "path": "start.sh"
                  }
                ]
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-actinia",
                "items": [
                  {
                    "key": "actinia-core-config",
                    "path": "actinia.cfg"
                  }
                ]
              }
            },
            {
              "name": "secret",
              "secret": {
                "secretName": "release-name-actinia",
                "items": [
                  {
                    "key": ".pgpass",
                    "path": ".pgpass"
                  },
                  {
                    "key": ".grass8",
                    "path": ".grass8"
                  }
                ]
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-actinia-test-connection",
      "labels": {
        "helm.sh/chart": "actinia-2.2.3",
        "app.kubernetes.io/name": "actinia",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.2.2",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-actinia:8088"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]