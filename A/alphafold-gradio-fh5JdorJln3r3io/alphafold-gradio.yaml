apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-alphafold-gradio
  labels:
    helm.sh/chart: alphafold-gradio-0.1.0
    app.kubernetes.io/name: alphafold-gradio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-alphafold-gradio-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1024Gi
  storageClassName: gp2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-alphafold-gradio-output
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: gp2
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-alphafold-gradio
  labels:
    helm.sh/chart: alphafold-gradio-0.1.0
    app.kubernetes.io/name: alphafold-gradio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: alphafold-gradio
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-alphafold-gradio
  labels:
    helm.sh/chart: alphafold-gradio-0.1.0
    app.kubernetes.io/name: alphafold-gradio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: alphafold-gradio
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: alphafold-gradio
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-alphafold-gradio
      securityContext: {}
      volumes:
        - name: release-name-alphafold-gradio-data
          persistentVolumeClaim:
            claimName: release-name-alphafold-gradio-data
        - name: release-name-alphafold-gradio-output
          persistentVolumeClaim:
            claimName: release-name-alphafold-gradio-output
      initContainers:
        - name: alphafold-gradio-download
          image: navashiva/alphafold-gradio:latest:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - if [ $(find $DATA_DIR -mindepth 1 -maxdepth 1 -type d | wc -l) -gt 8 ]; then echo 'Nothing to download. Data directory is already in place.' && exit 0; else /app/alphafold/scripts/download_all_data.sh $DATA_DIR reduced_dbs; fi;
          env:
            - name: DATA_DIR
              value: /app/data
          volumeMounts:
            - name: release-name-alphafold-gradio-data
              mountPath: /app/data
      containers:
        - name: alphafold-gradio
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: navashiva/alphafold-gradio:latest:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: DATA_DIR
              value: /app/data
            - name: OUTPUT_DIR
              value: /opt/conda/lib/python3.7/site-packages/gradio/templates/frontend/static/output
            - name: TF_FORCE_UNIFIED_MEMORY
              value: "1"
            - name: XLA_PYTHON_CLIENT_MEM_FRACTION
              value: "4.0"
            - name: NVIDIA_VISIBLE_DEVICES
              value: all
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
          resources:
            limits:
              nvidia.com/gpu: 3
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: release-name-alphafold-gradio-data
              mountPath: /app/data
            - name: release-name-alphafold-gradio-output
              mountPath: /opt/conda/lib/python3.7/site-packages/gradio/templates/frontend/static/output
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-alphafold-gradio-test-connection
  labels:
    helm.sh/chart: alphafold-gradio-0.1.0
    app.kubernetes.io/name: alphafold-gradio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-alphafold-gradio:80
  restartPolicy: Never
