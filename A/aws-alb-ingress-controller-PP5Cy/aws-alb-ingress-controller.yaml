apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-aws-alb-ingress-controller
  labels:
    app.kubernetes.io/name: aws-alb-ingress-controller
    helm.sh/chart: aws-alb-ingress-controller-0.1.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-aws-alb-ingress-controller
  labels:
    app.kubernetes.io/name: aws-alb-ingress-controller
    helm.sh/chart: aws-alb-ingress-controller-0.1.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
      - extensions
    resources:
      - configmaps
      - endpoints
      - events
      - ingresses
      - ingresses/status
      - services
    verbs:
      - create
      - get
      - list
      - update
      - watch
      - patch
  - apiGroups:
      - ""
      - extensions
    resources:
      - nodes
      - pods
      - secrets
      - services
      - namespaces
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-aws-alb-ingress-controller
  labels:
    app.kubernetes.io/name: aws-alb-ingress-controller
    helm.sh/chart: aws-alb-ingress-controller-0.1.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-aws-alb-ingress-controller
subjects:
  - kind: ServiceAccount
    name: release-name-aws-alb-ingress-controller
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-aws-alb-ingress-controller
  labels:
    app.kubernetes.io/name: aws-alb-ingress-controller
    helm.sh/chart: aws-alb-ingress-controller-0.1.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: aws-alb-ingress-controller
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aws-alb-ingress-controller
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: aws-alb-ingress-controller
          image: docker.io/amazon/aws-alb-ingress-controller:v1.1.2
          imagePullPolicy: IfNotPresent
          args:
            - --cluster-name=k8s
            - --ingress-class=alb
            - --aws-region=us-east-2
            - --aws-vpc-id=vpc-xxx
          env: null
          ports:
            - name: health
              containerPort: 10254
              protocol: TCP
          resources:
            seccompProfile:
              type: RuntimeDefault
      serviceAccountName: release-name-aws-alb-ingress-controller
      terminationGracePeriodSeconds: 60
