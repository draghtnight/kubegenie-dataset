[
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-avorion-serverfiles",
      "labels": {
        "helm.sh/chart": "avorion-0.0.11",
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "999Gi"
        }
      }
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-avorion-steamcmd",
      "labels": {
        "helm.sh/chart": "avorion-0.0.11",
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "999Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-avorion-hostport2",
      "labels": {
        "helm.sh/chart": "avorion-0.0.11",
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 27000,
          "targetPort": 27000,
          "protocol": "UDP",
          "name": "hostport2"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-avorion-hostport3",
      "labels": {
        "helm.sh/chart": "avorion-0.0.11",
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 27003,
          "targetPort": 27003,
          "protocol": "UDP",
          "name": "hostport3"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-avorion-hostport4",
      "labels": {
        "helm.sh/chart": "avorion-0.0.11",
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 27020,
          "targetPort": 27020,
          "protocol": "UDP",
          "name": "hostport4"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-avorion-hostport5",
      "labels": {
        "helm.sh/chart": "avorion-0.0.11",
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 27021,
          "targetPort": 27021,
          "protocol": "UDP",
          "name": "hostport5"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-avorion",
      "labels": {
        "helm.sh/chart": "avorion-0.0.11",
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ipFamilyPolicy": "SingleStack",
      "ports": [
        {
          "port": 27000,
          "targetPort": 27000,
          "protocol": "TCP",
          "name": "main"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-avorion",
      "labels": {
        "helm.sh/chart": "avorion-0.0.11",
        "app.kubernetes.io/name": "avorion",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "latest",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "rollme": "TtGuc"
      }
    },
    "spec": {
      "revisionHistoryLimit": 3,
      "replicas": 1,
      "strategy": {
        "type": "Recreate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "avorion",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "rollme": "ovMwU"
          },
          "labels": {
            "app.kubernetes.io/name": "avorion",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "securityContext": {
            "fsGroup": 568,
            "fsGroupChangePolicy": "OnRootMismatch",
            "runAsGroup": 0,
            "runAsUser": 0,
            "supplementalGroups": [
              568
            ]
          },
          "dnsPolicy": "ClusterFirst",
          "dnsConfig": {
            "options": [
              {
                "name": "ndots",
                "value": "1"
              }
            ]
          },
          "enableServiceLinks": false,
          "terminationGracePeriodSeconds": 10,
          "initContainers": [
            {
              "name": "autopermissions",
              "image": "ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583",
              "securityContext": {
                "runAsUser": 0,
                "privileged": false,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                }
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              },
              "command": [
                "/bin/sh",
                "-c",
                "echo 'Automatically correcting permissions...';"
              ],
              "volumeMounts": null
            },
            {
              "name": "hostpatch",
              "image": "ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583",
              "securityContext": {
                "runAsUser": 11724,
                "privileged": true,
                "allowPrivilegeEscalation": false
              },
              "command": [
                "/bin/sh",
                "-c",
                "( sysctl -w fs.inotify.max_user_watches=524288 || echo \"error setting inotify\") && ( sysctl -w fs.inotify.max_user_instances=512 || echo \"error setting inotify\") && ( chmod -x /host/usr/bin/docker-compose || echo \"error locking docker-compose\") && ( chmod -x /host/bin/docker-compose || echo \"error locking docker-compose\")"
              ],
              "volumeMounts": [
                {
                  "mountPath": "/host/usr/bin",
                  "name": "host-usr-bin"
                },
                {
                  "mountPath": "/host/bin",
                  "name": "host-bin"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "release-name-avorion",
              "image": "tccr.io/truecharts/avorion:latest",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/sh"
              ],
              "args": [
                "-c",
                "groupmod -g ${GID} ${USER} && bash /opt/scripts/start.sh"
              ],
              "tty": true,
              "stdin": false,
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": false
              },
              "env": [
                {
                  "name": "PUID",
                  "value": "568"
                },
                {
                  "name": "USER_ID",
                  "value": "568"
                },
                {
                  "name": "UID",
                  "value": "568"
                },
                {
                  "name": "UMASK",
                  "value": "2"
                },
                {
                  "name": "UMASK_SET",
                  "value": "2"
                },
                {
                  "name": "PGID",
                  "value": "568"
                },
                {
                  "name": "GROUP_ID",
                  "value": "568"
                },
                {
                  "name": "GID",
                  "value": "568"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "void"
                },
                {
                  "name": "TZ",
                  "value": "UTC"
                },
                {
                  "name": "GALAXY_NAME",
                  "value": "AvorionDocker"
                },
                {
                  "name": "GAME_ID",
                  "value": "565060"
                },
                {
                  "name": "GAME_PARAMS",
                  "value": ""
                },
                {
                  "name": "PASSWRD",
                  "value": ""
                },
                {
                  "name": "UMASK",
                  "value": "000"
                },
                {
                  "name": "USERNAME",
                  "value": ""
                },
                {
                  "name": "VALIDATE",
                  "value": ""
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "hostport2",
                  "containerPort": 27000,
                  "protocol": "UDP"
                },
                {
                  "name": "hostport3",
                  "containerPort": 27003,
                  "protocol": "UDP"
                },
                {
                  "name": "hostport4",
                  "containerPort": 27020,
                  "protocol": "UDP"
                },
                {
                  "name": "hostport5",
                  "containerPort": 27021,
                  "protocol": "UDP"
                },
                {
                  "name": "main",
                  "containerPort": 27000,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/serverdata/serverfiles",
                  "name": "serverfiles"
                },
                {
                  "mountPath": "/shared",
                  "name": "shared"
                },
                {
                  "mountPath": "/serverdata/steamcmd",
                  "name": "steamcmd"
                },
                {
                  "mountPath": "/tmp",
                  "name": "temp"
                },
                {
                  "mountPath": "/var/logs",
                  "name": "varlogs"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "host-bin",
              "hostPath": {
                "path": "/bin"
              }
            },
            {
              "name": "host-usr-bin",
              "hostPath": {
                "path": "/usr/bin"
              }
            },
            {
              "name": "serverfiles",
              "persistentVolumeClaim": {
                "claimName": "release-name-avorion-serverfiles"
              }
            },
            {
              "name": "shared",
              "emptyDir": {}
            },
            {
              "name": "steamcmd",
              "persistentVolumeClaim": {
                "claimName": "release-name-avorion-steamcmd"
              }
            },
            {
              "name": "temp",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "varlogs",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  }
]