apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-amazon-eks-pod-identity-webhook
  labels:
    helm.sh/chart: amazon-eks-pod-identity-webhook-1.0.3
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.4.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-amazon-eks-pod-identity-webhook
  labels:
    helm.sh/chart: amazon-eks-pod-identity-webhook-1.0.3
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.4.0
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-amazon-eks-pod-identity-webhook
  labels:
    helm.sh/chart: amazon-eks-pod-identity-webhook-1.0.3
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.4.0
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-amazon-eks-pod-identity-webhook
subjects:
  - kind: ServiceAccount
    name: release-name-amazon-eks-pod-identity-webhook
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-amazon-eks-pod-identity-webhook
  labels:
    helm.sh/chart: amazon-eks-pod-identity-webhook-1.0.3
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.4.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-amazon-eks-pod-identity-webhook
  namespace: pJR5ABeT
  labels:
    helm.sh/chart: amazon-eks-pod-identity-webhook-1.0.3
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.4.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: amazon-eks-pod-identity-webhook
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: amazon-eks-pod-identity-webhook
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: amazon-eks-pod-identity-webhook
          securityContext:
            readOnlyRootFilesystem: true
            runAsGroup: 1
            runAsNonRoot: false
            runAsUser: 10067
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
          image: docker.io/amazon/amazon-eks-pod-identity-webhook:v0.4.0
          imagePullPolicy: IfNotPresent
          command:
            - /webhook
            - --annotation-prefix=eks.amazonaws.com
            - --aws-default-region=us-east-1
            - --in-cluster=false
            - --logtostderr
            - --namespace=default
            - --metrics-port=9999
            - --port=8443
            - --sts-regional-endpoint=true
            - --token-audience=sts.amazonaws.com
            - --token-expiration=86400
            - --token-mount-path=/var/run/secrets/eks.amazonaws.com/serviceaccount
            - --tls-cert=/etc/webhook/certs/tls.crt
            - --tls-key=/etc/webhook/certs/tls.key
          volumeMounts:
            - name: cert
              mountPath: /etc/webhook/certs
              readOnly: true
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: metrics
              containerPort: 9999
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics
          readinessProbe:
            httpGet:
              path: /healthz
              port: metrics
          resources:
            limits: {}
            requests: {}
            seccompProfile:
              type: RuntimeDefault
      hostNetwork: false
      serviceAccountName: release-name-amazon-eks-pod-identity-webhook
      securityContext: {}
      volumes:
        - name: cert
          secret:
            secretName: release-name-amazon-eks-pod-identity-webhook-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: release-name-amazon-eks-pod-identity-webhook
  namespace: default
spec:
  secretName: release-name-amazon-eks-pod-identity-webhook-cert
  commonName: release-name-amazon-eks-pod-identity-webhook.default.svc
  dnsNames:
    - release-name-amazon-eks-pod-identity-webhook
    - release-name-amazon-eks-pod-identity-webhook.default
    - release-name-amazon-eks-pod-identity-webhook.default.svc
    - release-name-amazon-eks-pod-identity-webhook.default.svc.local
  duration: 2160h
  renewBefore: 360h
  issuerRef:
    name: release-name-amazon-eks-pod-identity-webhook
    kind: Issuer
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: release-name-amazon-eks-pod-identity-webhook
  namespace: default
  labels:
    helm.sh/chart: amazon-eks-pod-identity-webhook-1.0.3
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.4.0
    app.kubernetes.io/managed-by: Helm
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: release-name-amazon-eks-pod-identity-webhook
  annotations:
    cert-manager.io/inject-ca-from: default/release-name-amazon-eks-pod-identity-webhook
webhooks:
  - name: pod-identity-webhook.amazonaws.com
    failurePolicy: Ignore
    clientConfig:
      service:
        name: release-name-amazon-eks-pod-identity-webhook
        namespace: default
        port: 8443
        path: /mutate
    rules:
      - operations:
          - CREATE
        apiGroups:
          - ""
        apiVersions:
          - v1
        resources:
          - pods
    objectSelector:
      matchExpressions:
        - key: app.kubernetes.io/name
          operator: NotIn
          values:
            - amazon-eks-pod-identity-webhook
    sideEffects: None
    admissionReviewVersions:
      - v1beta1
