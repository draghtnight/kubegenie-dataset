[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-apisix-ingress-controller",
      "namespace": "viHB0GBoH4slH"
    },
    "automountServiceAccountToken": true
  },
  {
    "apiVersion": "v1",
    "data": {
      "config.yaml": "# log options\nlog_level: \"info\"\nlog_output: \"stderr\"\ncert_file: \"/etc/webhook/certs/cert.pem\"\nkey_file: \"/etc/webhook/certs/key.pem\"\nhttp_listen: \":8080\"\nhttps_listen: \":8443\"\ningress_publish_service: \nenable_profiling: true\nkubernetes:\n  kubeconfig: \"\"\n  resync_interval: \"6h\"\n  app_namespaces:\n  - \"*\"\n  namespace_selector:\n  - \"\"\n  election_id: \"ingress-apisix-leader\"\n  ingress_class: \"apisix\"\n  ingress_version: \"networking/v1\"\n  watch_endpointslices: false\n  apisix_route_version: \"apisix.apache.org/v2beta3\"\n  enable_gateway_api: false\napisix:\n  default_cluster_base_url: http://apisix-admin.ingress-apisix.svc.cluster.local:9180/apisix/admin\n  default_cluster_admin_key: \"edd1c9f034335f136f87ad84b625c8f1\"\n  default_cluster_name: \"default\"\n"
    },
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-configmap",
      "namespace": "viHB0GBoH4slH",
      "labels": {
        "helm.sh/chart": "apisix-ingress-controller-0.9.2",
        "app.kubernetes.io/name": "apisix-ingress-controller",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-clusterrole"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "endpoints",
          "persistentvolumeclaims",
          "pods",
          "replicationcontrollers",
          "replicationcontrollers/scale",
          "serviceaccounts",
          "services",
          "secrets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "bindings",
          "limitranges",
          "namespaces/status",
          "pods/log",
          "pods/status",
          "replicationcontrollers/status",
          "resourcequotas",
          "resourcequotas/status"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "controllerrevisions",
          "daemonsets",
          "deployments",
          "deployments/scale",
          "replicasets",
          "replicasets/scale",
          "statefulsets",
          "statefulsets/scale"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "autoscaling"
        ],
        "resources": [
          "horizontalpodautoscalers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "cronjobs",
          "jobs"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "daemonsets",
          "deployments",
          "deployments/scale",
          "ingresses",
          "networkpolicies",
          "replicasets",
          "replicasets/scale",
          "replicationcontrollers/scale"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "policy"
        ],
        "resources": [
          "poddisruptionbudgets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "networking.k8s.io"
        ],
        "resources": [
          "ingresses",
          "ingresses/status",
          "networkpolicies"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "metrics.k8s.io"
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apisix.apache.org"
        ],
        "resources": [
          "apisixroutes",
          "apisixroutes/status",
          "apisixupstreams",
          "apisixupstreams/status",
          "apisixtlses",
          "apisixtlses/status",
          "apisixclusterconfigs",
          "apisixclusterconfigs/status",
          "apisixconsumers",
          "apisixconsumers/status",
          "apisixpluginconfigs",
          "apisixpluginconfigs/status"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "coordination.k8s.io"
        ],
        "resources": [
          "leases"
        ],
        "verbs": [
          "*"
        ]
      },
      {
        "apiGroups": [
          "discovery.k8s.io"
        ],
        "resources": [
          "endpointslices"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-clusterrolebinding"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-clusterrole"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-apisix-ingress-controller",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-apisix-ingress-controller",
      "namespace": "viHB0GBoH4slH",
      "labels": {
        "helm.sh/chart": "apisix-ingress-controller-0.9.2",
        "app.kubernetes.io/name": "apisix-ingress-controller",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": 8080,
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "apisix-ingress-controller",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-apisix-ingress-controller",
      "namespace": "viHB0GBoH4slH",
      "labels": {
        "helm.sh/chart": "apisix-ingress-controller-0.9.2",
        "app.kubernetes.io/name": "apisix-ingress-controller",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "apisix-ingress-controller",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "457dfb72a862a02625069419d6dd5560dd41ed3160db9fa90a2a92b2ddf4e82f"
          },
          "labels": {
            "app.kubernetes.io/name": "apisix-ingress-controller",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-apisix-ingress-controller",
          "securityContext": {},
          "volumes": [
            {
              "name": "configuration",
              "configMap": {
                "name": "release-name-configmap",
                "items": [
                  {
                    "key": "config.yaml",
                    "path": "config.yaml"
                  }
                ]
              }
            }
          ],
          "initContainers": [
            {
              "name": "wait-apisix-admin",
              "image": "busybox:1.28",
              "command": [
                "sh",
                "-c",
                "until nc -z apisix-admin.ingress-apisix.svc.cluster.local 9180 ; do echo waiting for apisix-admin; sleep 2; done;"
              ],
              "securityContext": {}
            }
          ],
          "containers": [
            {
              "name": "apisix-ingress-controller",
              "command": [
                "/ingress-apisix/apisix-ingress-controller",
                "ingress",
                "--config-path",
                "/ingress-apisix/conf/config.yaml"
              ],
              "image": "apache/apisix-ingress-controller:1.4.1",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 8080
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": 8080
                }
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/ingress-apisix/conf",
                  "name": "configuration"
                }
              ],
              "env": [
                {
                  "name": "POD_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                }
              ]
            }
          ]
        }
      }
    }
  },
  null,
  null
]