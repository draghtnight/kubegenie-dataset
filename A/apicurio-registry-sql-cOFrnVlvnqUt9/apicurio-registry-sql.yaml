apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-apicurio-registry-sql
  labels:
    helm.sh/chart: apicurio-registry-sql-0.1.0
    app.kubernetes.io/name: apicurio-registry-sql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.2.Final
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-apicurio-registry-sql
  labels:
    helm.sh/chart: apicurio-registry-sql-0.1.0
    app.kubernetes.io/name: apicurio-registry-sql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.2.Final
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: apicurio-registry-sql
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-apicurio-registry-sql
  labels:
    helm.sh/chart: apicurio-registry-sql-0.1.0
    app.kubernetes.io/name: apicurio-registry-sql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.2.Final
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: apicurio-registry-sql
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: apicurio-registry-sql
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-apicurio-registry-sql
      securityContext: {}
      containers:
        - name: schema-registry
          securityContext:
            runAsNonRoot: true
            runAsUser: 11447
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: apicurio/apicurio-registry-jpa:1.3.2.Final
          imagePullPolicy: IfNotPresent
          env:
            - name: QUARKUS_DATASOURCE_URL
              value: jdbc:postgresql://map[]/map[]
            - name: QUARKUS_DATASOURCE_USERNAME
              value: map[]
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: map[]
                  key: map[]
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            seccompProfile:
              type: RuntimeDefault
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-apicurio-registry-sql-test-connection
  labels:
    helm.sh/chart: apicurio-registry-sql-0.1.0
    app.kubernetes.io/name: apicurio-registry-sql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.3.2.Final
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-apicurio-registry-sql:8080
  restartPolicy: Never
