apiVersion: v1
kind: Secret
metadata:
  name: release-name-mysql
  namespace: lrxuzYeT
  labels:
    app: release-name-mysql
    chart: mysql-1.6.9
    release: release-name
    heritage: Helm
type: Opaque
data:
  mysql-root-password: QU9BWUtGSnprZA==
  mysql-password: aW1wYXNz
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mysql-initialization
  namespace: lrxuzYeT
data:
  imdashdb.sql: |-
    CREATE DATABASE IF NOT EXISTS imdashdb;
    GRANT ALL PRIVILEGES ON imdashdb.* TO 'imuser'@'%';
  imdb.sql: |-
    CREATE DATABASE IF NOT EXISTS imdb;
    GRANT ALL PRIVILEGES ON imdb.* TO 'imuser'@'%';
  imweb.sql: |-
    CREATE DATABASE IF NOT EXISTS imweb;
    GRANT ALL PRIVILEGES ON imweb.* TO 'imuser'@'%';
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: im
data:
  logging.conf: |
    [loggers]
    keys=root,ConfManager,CloudConnector,InfrastructureManager
    [handlers]
    keys=fileHandler
    [formatters]
    keys=simpleFormatter
    [logger_root]
    level=ERROR
    handlers=fileHandler
    [logger_ConfManager]
    level=DEBUG
    handlers=fileHandler
    qualname=ConfManager
    propagate=0
    [logger_CloudConnector]
    level=DEBUG
    handlers=fileHandler
    qualname=CloudConnector
    propagate=0
    [logger_InfrastructureManager]
    level=DEBUG
    handlers=fileHandler
    qualname=InfrastructureManager
    propagate=0
    [handler_fileHandler]
    level=DEBUG
    formatter=simpleFormatter
    class=logging.handlers.RotatingFileHandler
    args=('/var/log/im/im.log', 'w', 10485760, 3)
    [formatter_simpleFormatter]
    format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
    datefmt=
  im.cfg: |
    [im]
    ACTIVATE_XMLRPC = False
    ACTIVATE_REST = True
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: im-web
data:
  analyticstracking.php: |
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script>
    </script>
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-mysql
  namespace: default
  labels:
    app: release-name-mysql
    chart: mysql-1.6.9
    release: release-name
    heritage: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: imlog
spec:
  storageClassName: null
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-mysql
  namespace: lrxuzYeT
  labels:
    app: release-name-mysql
    chart: mysql-1.6.9
    release: release-name
    heritage: Helm
  annotations: null
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector:
    app: release-name-mysql
---
apiVersion: v1
kind: Service
metadata:
  name: im-backend
spec:
  ports:
    - name: restapi
      port: 8800
  selector:
    name: im-backend
---
apiVersion: v1
kind: Service
metadata:
  name: im-web-svc
spec:
  ports:
    - name: http
      port: 80
  selector:
    name: im-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mysql
  namespace: lrxuzYeT
  labels:
    app: release-name-mysql
    chart: mysql-1.6.9
    release: release-name
    heritage: Helm
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: release-name-mysql
      release: release-name
  template:
    metadata:
      labels:
        app: release-name-mysql
        release: release-name
    spec:
      serviceAccountName: default
      initContainers:
        - name: remove-lost-found
          image: busybox:1.32
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
          command:
            - rm
            - -fr
            - /var/lib/mysql/lost+found
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
      containers:
        - name: release-name-mysql
          image: mysql:5.7.30
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mysql
                  key: mysql-root-password
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mysql
                  key: mysql-password
            - name: MYSQL_USER
              value: imuser
            - name: MYSQL_DATABASE
              value: ""
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - name: migrations
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: migrations
          configMap:
            name: release-name-mysql-initialization
        - name: data
          persistentVolumeClaim:
            claimName: release-name-mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: im-backend
  labels:
    name: im-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      name: im-backend
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: im-backend
    spec:
      containers:
        - name: im
          image: grycap/im:latest
          resources:
            requests:
              memory: 256Mi
              cpu: 250m
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8800
          imagePullPolicy: Always
          env:
            - name: IM_DATA_DB
              value: mysql://imuser:impass@release-name-mysql/imdb
          volumeMounts:
            - name: im
              mountPath: /etc/im/logging.conf
              subPath: logging.conf
            - name: im
              mountPath: /etc/im/im.cfg
              subPath: im.cfg
            - name: imlog
              mountPath: /var/log/im
          livenessProbe:
            httpGet:
              path: /version
              port: 8800
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
      volumes:
        - name: im
          configMap:
            name: im
        - name: imlog
          persistentVolumeClaim:
            claimName: imlog
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: im-web
spec:
  replicas: 1
  selector:
    matchLabels:
      name: im-web
  template:
    metadata:
      labels:
        name: im-web
    spec:
      containers:
        - name: im-web
          image: grycap/im-web:latest
          resources:
            requests:
              memory: 256Mi
              cpu: 250m
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 80
              protocol: TCP
              name: http
          env:
            - name: im_use_rest
              value: "true"
            - name: im_host
              value: im-backend
            - name: im_port
              value: "8800"
            - name: im_db
              value: mysql://imuser:impass@release-name-mysql/imweb
          volumeMounts:
            - name: im-web
              mountPath: /var/www/html/im-web/analyticstracking.php
              subPath: analyticstracking.php
          livenessProbe:
            httpGet:
              path: /im-web/
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 2
      volumes:
        - name: im-web
          configMap:
            name: im-web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: im
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 20m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/x-forwarded-prefix: /im
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: im-backend
                port:
                  number: 8800
            pathType: Prefix
            path: /im/?(.*)
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: im-web
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/x-forwarded-prefix: /im-web
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: im-web-svc
                port:
                  number: 80
            pathType: Prefix
            path: /im-web/?(.*)
---
null
---
null
---
null
---
null
