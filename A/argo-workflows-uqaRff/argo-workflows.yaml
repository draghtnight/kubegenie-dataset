apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name
  labels:
    helm.sh/chart: argo-workflows-2.0.6
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: release-name
  ingress:
    - from:
        - podSelector: {}
  policyTypes:
    - Ingress
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: release-name-argo-workflows-2
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: release-name
  ingress:
    - from:
        - ipBlock:
            cidr: 10.233.103.0/32
        - ipBlock:
            cidr: 10.233.111.0/32
  policyTypes:
    - Ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-argo-workflows-workflow-controller
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-workflows
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-argo-workflows-server
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: workflow
  labels:
    helm.sh/chart: argo-workflows-2.0.6
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-argo-workflows-workflow-controller-configmap
  labels:
    helm.sh/chart: argo-workflows-0.15.0
    app.kubernetes.io/name: argo-workflows-cm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
data:
  config: |
    containerRuntimeExecutor: emissary
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-argo-workflows-workflow-controller
  labels:
    helm.sh/chart: argo-workflows-0.15.0
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/exec
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - persistentvolumeclaims/finalizers
    verbs:
      - create
      - update
      - delete
      - get
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
      - workflows/finalizers
      - workflowtasksets
      - workflowtasksets/finalizers
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - delete
      - create
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtemplates
      - workflowtemplates/finalizers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtaskresults
      - workflowtaskresults/finalizers
    verbs:
      - list
      - watch
      - deletecollection
  - apiGroups:
      - argoproj.io
    resources:
      - cronworkflows
      - cronworkflows/finalizers
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - get
      - list
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - create
      - get
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    resourceNames:
      - workflow-controller
      - workflow-controller-lease
    verbs:
      - get
      - watch
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-argo-workflows-workflow
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtaskresults
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-argo-workflows-server
  labels:
    helm.sh/chart: argo-workflows-0.15.0
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - events
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/exec
      - pods/log
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - watch
      - create
      - patch
  - apiGroups:
      - argoproj.io
    resources:
      - eventsources
      - sensors
      - workflows
      - workfloweventbindings
      - workflowtemplates
      - cronworkflows
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: workflow
  labels:
    helm.sh/chart: argo-workflows-2.0.6
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-argo-workflows-workflow-controller
  labels:
    helm.sh/chart: argo-workflows-0.15.0
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-argo-workflows-workflow-controller
subjects:
  - kind: ServiceAccount
    name: release-name-argo-workflows-workflow-controller
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-argo-workflows-workflow
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-argo-workflows-workflow
subjects:
  - kind: ServiceAccount
    name: argo-workflows
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-argo-workflows-server
  labels:
    helm.sh/chart: argo-workflows-0.15.0
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-argo-workflows-server
subjects:
  - kind: ServiceAccount
    name: release-name-argo-workflows-server
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: workflow
  labels:
    helm.sh/chart: argo-workflows-2.0.6
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: workflow
subjects:
  - kind: ServiceAccount
    name: workflow
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-argo-workflows-server
  labels:
    helm.sh/chart: argo-workflows-0.15.0
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    app.kubernetes.io/version: v3.3.2
spec:
  ports:
    - port: 2746
      targetPort: 2746
  selector:
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-argo-workflows-workflow-controller
  labels:
    helm.sh/chart: argo-workflows-0.15.0
    app.kubernetes.io/name: argo-workflows-workflow-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    app.kubernetes.io/version: v3.3.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-workflows-workflow-controller
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: argo-workflows-0.15.0
        app.kubernetes.io/name: argo-workflows-workflow-controller
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: workflow-controller
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argo-workflows
        app.kubernetes.io/version: v3.3.2
    spec:
      serviceAccountName: release-name-argo-workflows-workflow-controller
      containers:
        - name: controller
          image: quay.io/argoproj/workflow-controller:v3.3.2
          imagePullPolicy: Always
          command:
            - workflow-controller
          args:
            - --configmap
            - release-name-argo-workflows-workflow-controller-configmap
            - --executor-image
            - quay.io/argoproj/argoexec:v3.3.2
            - --loglevel
            - info
            - --gloglevel
            - "0"
            - --namespaced
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          env:
            - name: ARGO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: LEADER_ELECTION_IDENTITY
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          resources:
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: metrics
              containerPort: 9090
            - containerPort: 6060
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6060
            initialDelaySeconds: 90
            periodSeconds: 60
            timeoutSeconds: 30
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-argo-workflows-server
  labels:
    helm.sh/chart: argo-workflows-0.15.0
    app.kubernetes.io/name: argo-workflows-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-workflows
    app.kubernetes.io/version: v3.3.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-workflows-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: argo-workflows-0.15.0
        app.kubernetes.io/name: argo-workflows-server
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: server
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argo-workflows
        app.kubernetes.io/version: v3.3.2
    spec:
      serviceAccountName: release-name-argo-workflows-server
      containers:
        - name: argo-server
          image: quay.io/argoproj/argocli:v3.3.2
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          args:
            - server
            - --configmap=release-name-argo-workflows-workflow-controller-configmap
            - --auth-mode=server
            - --secure=false
            - --namespaced
          ports:
            - name: web
              containerPort: 2746
          readinessProbe:
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
          env:
            - name: IN_CLUSTER
              value: "true"
            - name: ARGO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: BASE_HREF
              value: /
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name
  labels:
    helm.sh/chart: argo-workflows-2.0.6
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
spec:
  tls:
    - hosts:
        - chart-example.local
  rules:
    - host: chart-example.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-server
                port:
                  number: 2746
