[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-etcd-jwt-token",
      "namespace": "ZI1EYfWy",
      "labels": {
        "app.kubernetes.io/name": "etcd",
        "helm.sh/chart": "etcd-7.0.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "jwt-token.pem": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBdVJSQmNERmJoeUlmWkprQnh6T242K050RWZrREZnV0xGYS9GMnI5WHZmdG9wbEFuCnlPaFhMKzUyU2Y0SVU1M0lEWjMwendaS2hzdDVEV3A3T2dZZ1huTGtOUEcxMU5maHh0SUtPYUw0RlVyOFFFRksKemRUVTBmT1JLMGRWY3ptekVaVC9hbjZya1B4cnpLVWZpcGZpYWNyVnd0WHBCVkVGYzRFeElTOVYxRnNicHBwcwpSYmFMcEhWcVRHUjBPb2M0TGE5c0lQd3pLRndKK0NybkJBbkNJcko5NXhmMUVjbmpFZFRHd0x0amJ2VFNZTEtNCmYwMnhPWElJd1J2OUxPVXpZVG1rT1h3UzZMaDBQN0dTeURnajdGSUlFOXNzRmpPd2ltd2Y0OHRTR3Z3RVNLd1gKTHpOWVhRTTIybFZIUmFMbzF4YnJoRjUvdWlaZ2NkanFjMkxwZ3Rqc25xM2tSVFpHTkkxbnA5a25nTHE3aS9hTwpHMWxjVEk4UklOWDAzNjRiV0cwTTdXaThlVks1T3VUL2pLRTJLUnVudTF6elFXa3Z6Qm1rNWk2ZWpZYTM2VS9ECkVWWGxPQUk4Z1pNOUFsUzdRTWhVOTZVR3k2SjB3b0pySnZIWVY1NXd2SEQrT05GTDBSZkVsOFNoWFVwU21lTDYKTWNlby9kS2dMZ1E1elVKUUJWbUF5a25PcXdKYVVrcnM3WlkxZ1hCcWVDczVxKysxN0xvOXRjSzM1SjdKZ3oyKwpFMUVyamwxQ2M3dmVjVGRUTVRteTBKNzVvVHoxMU5HQ3FMQnkwcnJMa2lLSU1zbGxyQks4U093SFBoWDR3cnkyCmJxVEZBejF0cTdqTTZUNGhxVzNNQm5NUzZPZzRhbW1LcVY0b3BraWJ5RHNyMjFCNlg1YUpmVGpoYnZzQ0F3RUEKQVFLQ0FnQSt4MFlqSGpyanJZbGtnQm9BVGQ5SnZrMEM2YXBJVC8wTGtDSFd2MHl0M3BkeXdvR2NQbU5FbU9oNgoxTFpTVnBURE9hOE9naDNKZHo5S2M3SDB6cHN3TGx5R01PN3lrWCsrQndUODQvQ3VtRTdVSk5HUTIvNk1jTWZ2CkhEVTU3bnAxSGtzOC9sYUh5WGR2WlJzNzBhVTFLVjQweG9aU0RWZUNCSEo3eFNpaDdYMkZsNS9lVGJzMFA3ZWMKemY0MjFDTVVMQXJMYllDVTBoTjNvR1hZRXM5TklhcGZOdHNqKzQwUVFWSmhrYTU2dG9TZDFES2dBK1IzamR5MgpWQjRlbW1oQk5HSW1OWlhjWnFUWDdnM1I2R2tYQWdSSFovS2VYVTRteGVKVFRHWS9UUGpQQmNDZmZCVWZCN1lWCmZSTzk1VEtCc3Y2VVdkR05mUEw5Nnd3cnM0TnRFUjY5SVRJWXdTL1hsbVZ0MFo5SVBDeDlZRjRYZE5UU09Bb3IKZFJYdUdTbzI5emVXZzZUbE0xYkJBdlBXLzRja1N3OXlCUm5SVTMzK3BoMnZkRG05VjFWMElQUTNoeTlnYXJ3KwoyalUvbWp1TTZkU0tmUldYUFJTb3BMMytaRGpzYTUweGVsbTlMSUk1OUxaT3l2RW55cW5RMG0rdzBOaGY3TkJJCnA4OXZ2NlFCUURTUzZvdEhaZW1XQVRPMERReVJxazRCTGdJcW1Qay9PUnMzQ0QyYW5UTEFnS0pibmFRNFV1V1kKdDIyU0RuRUVzdmc3enIrc3AySElvcVJ0Y1YvRXRWS3c1M1owZTdKTWEveUk5aFRPVmZzQmxBT2M2WDV0Y25Tdgpoek14TmhrS3BKTHZvaGF3SEE0N3NzVCt2TFh4bHk1UW9mVzdhdmF2MDlUaEQ3TnJzUUtDQVFFQTFNSFV6SlpQClpSZ1FrS1U1ZGFZbTZldHZxWGFsdW5HdlVDNVVkMU5BQVBpM2lwN25HKzAreUMwendtQkorcjVwUWhrcXMxOHIKZCtHdFhJWVgyLzVnSFJhS0pOcFdjQVFXeXBVQjBGRjIxcERVdGVEZWZCNUhaL3BOd2o2eW94UmQ4L3EyV3RYTQplTjVhUnNoWFgyUHNKVFcxdHFkOXhMdHU3UmtHZlNpRXB4c2h2a3IxYklyekFwb0tJb2lsV3NIMWlGbEh0NDVpCkNIb0txWXlkWklMSEorK2lxL3RGaGJhNkpzbmg4UFVVeURxUE1JWG1POXBwdXJrUWpFbHFseVBHdHBrdzc5N2kKeS9FOFg0VnpoOWd1NFRVZjdWMGdOZTJzVGEzY3JvRWJ5RjlLZlJWVXd4VTVKZWttaDlTVHJZZC9IWDhsc2pNTApUMlF3a1FtOXVGMmdod0tDQVFFQTNySklXV2JuaGNSTXhpOWtrS0tjVUsyTGQyaE51QVNnMUNiRmQvazVQWnhyCmV0OHZBWjMwSVQ3WUEra2x1cnY0MmY5Yzh3MWQ4c2w2UGsxNVBtbTJPNlpDdmROcmc0WEtKOGNVb25lSkF1aVYKYStwMHE0Vi9uVU4xZnA0T3phM3RJVnM1blQvT1hkTHYvK1g4UUtwM2V4aDVuOTVPOE8waWZwNXNPeFdHelpwegpIYXBLaFlpYm9ndThScGNIdGdzUXZxTHcrY1RCU2Fhejg0RlpMNmNST1ozUU9Va04zcDd1aG9JRVhWNU0xMWwwCmFPS3N1Q2x0UnJIY1lVT202MlJsaDJxcXlIM1VLeW9LczZRS1EvemtHck1hcUFyckE2NWd3cy82TkJGWHdINjMKcjlDQ3NNVTF3QkpUVXhicXEzQ0Jqa25aUjE5dFRldUUrSUE0c0h3ZTdRS0NBUUVBamxjWHpjQ0tZYkpWOHMvMwp2MVJvR0h3aGVwa2NpNzVmY2g5czkyQkZJK0ZDdW9WUlRZZk9SeEttM0ZhYmFCeFlRNWFlME43Tk1DbFdXTjZGCnUvTlZ6bUEwRUMvYlFKb2J2WEV2ZzNYZE1mUTN1MjgwcW9sL2NIc3Y1dE1YcEsrTnBCdUtRUDlsQzBDSDJXOVQKdFVnZXgwNUZ3bXdRWXJ5Ym5CandGSEExUDYrUlJjVFVxY2ZVaVZzUmlNVXZDNmRVWStLSGJyRGR1Wm9jNUE1bApoc2RRQXRINlhXR0F3OUxhZS9UNUtzSnRJd0M2cDlZTmtPR3hkdkUxdHdXdlFHcjVHVlVvUG5NNS9RUHFSbVg4ClExaEpGUGI3NDB3NHJwdlNlUzNteFFFdjIwQ1ZqMVhrSFpobllZdTQ4WXN4T2htNjI3c2pOek9iVDRSU1VkYlkKalM1bXBRS0NBUUVBZ3dTR3RqcHBpZlNFYXJEbFRJYXV5blJmc2grbVlkWXZQTUdXdWMvaGtsTGRsUXVMWHpzcgpyd2VIRlQzczJhRFBkb25iaUk5YnI0UkRyRFh1Vi83Zm5OWmpPOFVQNHZBcWtCNTdFRjZkT0IzWUV3WjhINUZLCkZCN2xHRm9yUVd6TEx5MjVocjlNVFR6VndFcnhqcVg3NTJydDIxVnlRaUp4Z2ViNHJBWXRLZmR0TkkzRWpDMWoKeXdGMmdsMUd4eDVaZXA3b2dUbjFzYndtOE9NdnNtNXJIdWV1NHBVTldPVk9WY3BXZ1F3Q3owdXN4aXhlQzNjcgorRVNaOEl0WnYvRndIaXh1VDhoZnRBbG5CR3RGTXR5czR0eHVtV0RiQlc1cE5SUWhFdE1GT3BZU3daZzkyM3dhCjlHYVRxVFc1V0tXM1F4eEZmYzB4eEg4RTJ5S3N0NEErdlFLQ0FRQUVzdDJRWFp0YkphNUpkeFBiMXFFZG9lV0EKelJ1UEFTTjkrcmRVSjU0bWJoa2JwcGZ6QldteXlaWEFNc2dFazNrWDdPRUgybWp4eXdSaXNnc3dMS2QvVXdZcgo5elc0OXc2WUFDeHdhUlBqYkxFLzZ6NG5tYWc3NnFZcUw4cXJDdWJNSGpodGoyYlF1UitabDZMRTZXRmowTG1zCi9Icm5UcjZzL3hnb1BRL2ZtUVJtajhwOWNnWjV4OW9Dd0JCdFcyL090VEFVTy9xY25WRjErcnVzeGZKcWE2OWIKTnhXUVFkODRvV3hNNEM1eXBMMVh2YU93SGY0aHJVQXNHK0lqZnRTRk1tM3hvbVAxN2lyQk5UWFdsVk5LbCt3dApYb0JHeDliV3VONXQzKzBCY3o2ZmNTRnNQMmVpTlpaY1Mvem13MWJCcExua3dCZU5JTlpjZVZVdnUycCsKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-apisix",
      "namespace": "ZI1EYfWy"
    },
    "data": {
      "config.yaml": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\napisix:\n  node_listen: 9080             # APISIX listening port\n  enable_heartbeat: true\n  enable_admin: true\n  enable_admin_cors: true\n  enable_debug: false\n\n  enable_dev_mode: false                       # Sets nginx worker_processes to 1 if set to true\n  enable_reuseport: true                       # Enable nginx SO_REUSEPORT switch if set to true.\n  enable_ipv6: true # Enable nginx IPv6 resolver\n  config_center: etcd                          # etcd: use etcd to store the config value\n                                               # yaml: fetch the config value from local yaml file `/your_path/conf/apisix.yaml`\n\n  #proxy_protocol:                 # Proxy Protocol configuration\n  #  listen_http_port: 9181        # The port with proxy protocol for http, it differs from node_listen and port_admin.\n                                  # This port can only receive http request with proxy protocol, but node_listen & port_admin\n                                  # can only receive http request. If you enable proxy protocol, you must use this port to\n                                  # receive http request with proxy protocol\n  #  listen_https_port: 9182       # The port with proxy protocol for https\n  #  enable_tcp_pp: true           # Enable the proxy protocol for tcp proxy, it works for stream_proxy.tcp option\n  #  enable_tcp_pp_to_upstream: true # Enables the proxy protocol to the upstream server\n\n  proxy_cache:                     # Proxy Caching configuration\n    cache_ttl: 10s                 # The default caching time if the upstream does not specify the cache time\n    zones:                         # The parameters of a cache\n    - name: disk_cache_one         # The name of the cache, administrator can be specify\n                                  # which cache to use by name in the admin api\n      memory_size: 50m             # The size of shared memory, it's used to store the cache index\n      disk_size: 1G                # The size of disk, it's used to store the cache data\n      disk_path: \"/tmp/disk_cache_one\" # The path to store the cache data\n      cache_levels: \"1:2\"           # The hierarchy levels of a cache\n  #  - name: disk_cache_two\n  #    memory_size: 50m\n  #    disk_size: 1G\n  #    disk_path: \"/tmp/disk_cache_two\"\n  #    cache_levels: \"1:2\"\n\n  allow_admin:                  # http://nginx.org/en/docs/http/ngx_http_access_module.html#allow\n    - 127.0.0.1/24\n  #   - \"::/64\"\n  port_admin: 9180\n\n  # Default token when use API to call for Admin API.\n  # *NOTE*: Highly recommended to modify this value to protect APISIX's Admin API.\n  # Disabling this configuration item means that the Admin API does not\n  # require any authentication.\n  admin_key:\n    # admin: can everything for configuration data\n    - name: \"admin\"\n      key: edd1c9f034335f136f87ad84b625c8f1\n      role: admin\n    # viewer: only can view configuration data\n    - name: \"viewer\"\n      key: 4054f7cf07e344346cd3f287985e76a2\n      role: viewer\n  router:\n    http: 'radixtree_uri'         # radixtree_uri: match route by uri(base on radixtree)\n                                  # radixtree_host_uri: match route by host + uri(base on radixtree)\n    ssl: 'radixtree_sni'          # radixtree_sni: match route by SNI(base on radixtree)\n  # dns_resolver:\n  #\n  #   - 127.0.0.1\n  #\n  #   - 172.20.0.10\n  #\n  #   - 114.114.114.114\n  #\n  #   - 223.5.5.5\n  #\n  #   - 1.1.1.1\n  #\n  #   - 8.8.8.8\n  #\n  dns_resolver_valid: 30\n  resolver_timeout: 5\n  ssl:\n    enable: false\n    enable_http2: true\n    listen_port: 9443\n    ssl_protocols: \"TLSv1 TLSv1.1 TLSv1.2 TLSv1.3\"\n    ssl_ciphers: \"ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA\"\n\nnginx_config:                     # config for render the template to genarate nginx.conf\n  error_log: \"/dev/stderr\"\n  error_log_level: \"warn\"         # warn,error\n  worker_rlimit_nofile: 20480     # the number of files a worker process can open, should be larger than worker_connections\n  event:\n    worker_connections: 10620\n  http:\n    enable_access_log: true\n    access_log: \"/dev/stdout\"\n    access_log_format: \"$remote_addr - $remote_user [$time_local] $http_host \\\"$request\\\" $status $body_bytes_sent $request_time \\\"$http_referer\\\" \\\"$http_user_agent\\\" $upstream_addr $upstream_status $upstream_response_time \\\"$upstream_scheme://$upstream_host$upstream_uri\\\"\"\n    access_log_format_escape: default\n    keepalive_timeout: 60s         # timeout during which a keep-alive client connection will stay open on the server side.\n    client_header_timeout: 60s     # timeout for reading client request header, then 408 (Request Time-out) error is returned to the client\n    client_body_timeout: 60s       # timeout for reading client request body, then 408 (Request Time-out) error is returned to the client\n    send_timeout: 10s              # timeout for transmitting a response to the client.then the connection is closed\n    underscores_in_headers: \"on\"   # default enables the use of underscores in client request header fields\n    real_ip_header: \"X-Real-IP\"    # http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header\n    real_ip_from:                  # http://nginx.org/en/docs/http/ngx_http_realip_module.html#set_real_ip_from\n      - 127.0.0.1\n      - 'unix:'\n\netcd:\n  host:                                 # it's possible to define multiple etcd hosts addresses of the same etcd cluster.\n    - \"http://release-name-etcd.default.svc.cluster.local:2379\"\n  prefix: \"/apisix\"     # apisix configurations prefix\n  timeout: 30   # 30 seconds\nplugins:                          # plugin list\n  - api-breaker\n  - authz-keycloak\n  - basic-auth\n  - batch-requests\n  - consumer-restriction\n  - cors\n  - echo\n  - fault-injection\n  - grpc-transcode\n  - hmac-auth\n  - http-logger\n  - ip-restriction\n  - ua-restriction\n  - jwt-auth\n  - kafka-logger\n  - key-auth\n  - limit-conn\n  - limit-count\n  - limit-req\n  - node-status\n  - openid-connect\n  - authz-casbin\n  - prometheus\n  - proxy-cache\n  - proxy-mirror\n  - proxy-rewrite\n  - redirect\n  - referer-restriction\n  - request-id\n  - request-validation\n  - response-rewrite\n  - serverless-post-function\n  - serverless-pre-function\n  - sls-logger\n  - syslog\n  - tcp-logger\n  - udp-logger\n  - uri-blocker\n  - wolf-rbac\n  - zipkin\n  - traffic-split\n  - gzip\n  - real-ip\n  - ext-plugin-pre-req\n  - ext-plugin-post-req\nstream_plugins:\n  - mqtt-proxy\n  - ip-restriction\n  - limit-conn"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-etcd-headless",
      "namespace": "ZI1EYfWy",
      "labels": {
        "app.kubernetes.io/name": "etcd",
        "helm.sh/chart": "etcd-7.0.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "publishNotReadyAddresses": true,
      "ports": [
        {
          "name": "client",
          "port": 2379,
          "targetPort": "client"
        },
        {
          "name": "peer",
          "port": 2380,
          "targetPort": "peer"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "etcd",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-etcd",
      "namespace": "ZI1EYfWy",
      "labels": {
        "app.kubernetes.io/name": "etcd",
        "helm.sh/chart": "etcd-7.0.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "sessionAffinity": "None",
      "ports": [
        {
          "name": "client",
          "port": 2379,
          "targetPort": "client",
          "nodePort": null
        },
        {
          "name": "peer",
          "port": 2380,
          "targetPort": "peer",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "etcd",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-apisix-admin",
      "namespace": "ZI1EYfWy",
      "annotations": null,
      "labels": {
        "helm.sh/chart": "apisix-0.10.0",
        "app.kubernetes.io/name": "apisix",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.14.1",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/service": "apisix-admin"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "apisix-admin",
          "port": 9180,
          "targetPort": 9180,
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "apisix",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-apisix-gateway",
      "namespace": "ZI1EYfWy",
      "annotations": null,
      "labels": {
        "helm.sh/chart": "apisix-0.10.0",
        "app.kubernetes.io/name": "apisix",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.14.1",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/service": "apisix-gateway"
      }
    },
    "spec": {
      "type": "NodePort",
      "externalTrafficPolicy": "Cluster",
      "ports": [
        {
          "name": "apisix-gateway",
          "port": 80,
          "targetPort": 9080,
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "apisix",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-apisix",
      "namespace": "ZI1EYfWy",
      "labels": {
        "helm.sh/chart": "apisix-0.10.0",
        "app.kubernetes.io/name": "apisix",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "2.14.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "apisix",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "e6eeb6c337109df1bc2869f47bfb707e2238ac1aef0c71c0f04dc999b9f98b3f"
          },
          "labels": {
            "app.kubernetes.io/name": "apisix",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "securityContext": null,
          "containers": [
            {
              "name": "apisix",
              "securityContext": null,
              "image": "apache/apisix:2.14.1-alpine",
              "imagePullPolicy": "IfNotPresent",
              "env": null,
              "ports": [
                {
                  "name": "http",
                  "containerPort": 9080,
                  "protocol": "TCP"
                },
                {
                  "name": "tls",
                  "containerPort": 9443,
                  "protocol": "TCP"
                },
                {
                  "name": "admin",
                  "containerPort": 9180,
                  "protocol": "TCP"
                }
              ],
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "tcpSocket": {
                  "port": 9080
                },
                "timeoutSeconds": 1
              },
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/bin/sh",
                      "-c",
                      "sleep 30"
                    ]
                  }
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/usr/local/apisix/conf/config.yaml",
                  "name": "apisix-config",
                  "subPath": "config.yaml"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "initContainers": [
            {
              "name": "wait-etcd",
              "image": "busybox:1.28",
              "command": [
                "sh",
                "-c",
                "until nc -z release-name-etcd.default.svc.cluster.local 2379; do echo waiting for etcd `date`; sleep 2; done;"
              ]
            }
          ],
          "volumes": [
            {
              "configMap": {
                "name": "release-name-apisix"
              },
              "name": "apisix-config"
            }
          ],
          "affinity": null
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-etcd",
      "namespace": "ZI1EYfWy",
      "labels": {
        "app.kubernetes.io/name": "etcd",
        "helm.sh/chart": "etcd-7.0.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 3,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "etcd",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "serviceName": "release-name-etcd-headless",
      "podManagementPolicy": "Parallel",
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "etcd",
            "helm.sh/chart": "etcd-7.0.4",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm"
          },
          "annotations": {
            "checksum/token-secret": "0ba4491c6ca3d76b9fc0d5a23a2acd26b61470868c178fda4e432dccfc5673ae"
          }
        },
        "spec": {
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "etcd",
                        "app.kubernetes.io/instance": "release-name"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "default",
          "containers": [
            {
              "name": "etcd",
              "image": "docker.io/bitnami/etcd:3.4.18-debian-10-r14",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 10746,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "MY_POD_IP",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "status.podIP"
                    }
                  }
                },
                {
                  "name": "MY_POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "MY_STS_NAME",
                  "value": "release-name-etcd"
                },
                {
                  "name": "ETCDCTL_API",
                  "value": "3"
                },
                {
                  "name": "ETCD_ON_K8S",
                  "value": "yes"
                },
                {
                  "name": "ETCD_START_FROM_SNAPSHOT",
                  "value": "no"
                },
                {
                  "name": "ETCD_DISASTER_RECOVERY",
                  "value": "no"
                },
                {
                  "name": "ETCD_NAME",
                  "value": "$(MY_POD_NAME)"
                },
                {
                  "name": "ETCD_DATA_DIR",
                  "value": "/bitnami/etcd/data"
                },
                {
                  "name": "ETCD_LOG_LEVEL",
                  "value": "info"
                },
                {
                  "name": "ALLOW_NONE_AUTHENTICATION",
                  "value": "yes"
                },
                {
                  "name": "ETCD_AUTH_TOKEN",
                  "value": "jwt,priv-key=/opt/bitnami/etcd/certs/token/jwt-token.pem,sign-method=RS256,ttl=10m"
                },
                {
                  "name": "ETCD_ADVERTISE_CLIENT_URLS",
                  "value": "http://$(MY_POD_NAME).release-name-etcd-headless.default.svc.cluster.local:2379,http://release-name-etcd.default.svc.cluster.local:2379"
                },
                {
                  "name": "ETCD_LISTEN_CLIENT_URLS",
                  "value": "http://0.0.0.0:2379"
                },
                {
                  "name": "ETCD_INITIAL_ADVERTISE_PEER_URLS",
                  "value": "http://$(MY_POD_NAME).release-name-etcd-headless.default.svc.cluster.local:2380"
                },
                {
                  "name": "ETCD_LISTEN_PEER_URLS",
                  "value": "http://0.0.0.0:2380"
                },
                {
                  "name": "ETCD_INITIAL_CLUSTER_TOKEN",
                  "value": "etcd-cluster-k8s"
                },
                {
                  "name": "ETCD_INITIAL_CLUSTER_STATE",
                  "value": "new"
                },
                {
                  "name": "ETCD_INITIAL_CLUSTER",
                  "value": "release-name-etcd-0=http://release-name-etcd-0.release-name-etcd-headless.default.svc.cluster.local:2380,release-name-etcd-1=http://release-name-etcd-1.release-name-etcd-headless.default.svc.cluster.local:2380,release-name-etcd-2=http://release-name-etcd-2.release-name-etcd-headless.default.svc.cluster.local:2380"
                },
                {
                  "name": "ETCD_CLUSTER_DOMAIN",
                  "value": "release-name-etcd-headless.default.svc.cluster.local"
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "client",
                  "containerPort": 2379,
                  "protocol": "TCP"
                },
                {
                  "name": "peer",
                  "containerPort": 2380,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/opt/bitnami/scripts/etcd/healthcheck.sh"
                  ]
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 30,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 5
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/opt/bitnami/scripts/etcd/healthcheck.sh"
                  ]
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 5
              },
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/opt/bitnami/scripts/etcd/prestop.sh"
                    ]
                  }
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/bitnami/etcd"
                },
                {
                  "name": "etcd-jwt-token",
                  "mountPath": "/opt/bitnami/etcd/certs/token/",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "etcd-jwt-token",
              "secret": {
                "secretName": "release-name-etcd-jwt-token",
                "defaultMode": 256
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  null,
  null,
  null,
  null,
  null
]