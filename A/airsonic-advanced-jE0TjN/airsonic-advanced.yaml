apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql-credentials
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 14.3.0
    helm-revision: "1"
    helm.sh/chart: postgresql-8.0.5
stringData:
  postgresql-password: testpass
  postgresql-postgres-password: testroot
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    helm.sh/chart: airsonic-advanced-4.0.1
    app.kubernetes.io/name: airsonic-advanced
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: 11.0.0
    app.kubernetes.io/managed-by: Helm
  name: dbcreds
data:
  postgresql-password: b3preWFyNTZ0dGFKTTNvN0hIdUppTjhxMDZHVWxwSHRoWWpER2RqZ3B2YWdDU082TjA=
  postgresql-postgres-password: Vkp1V2phMU9BVUhCV0ZkQTNQa2hTUXJaOVFhTHRHV01yVHY2MmZxVkR5c3hVZWdPdWw=
  url: cG9zdGdyZXNxbDovL2FpcnNvbmljLWFkdmFuY2VkOm96a3lhcjU2dHRhSk0zbzdISHVKaU44cTA2R1VscEh0aFlqREdkamdwdmFnQ1NPNk4wQHJlbGVhc2UtbmFtZS1wb3N0Z3Jlc3FsOjU0MzIvYWlyc29uaWMtYWR2YW5jZWQ=
  url-noql: cG9zdGdyZXM6Ly9haXJzb25pYy1hZHZhbmNlZDpvemt5YXI1NnR0YUpNM283SEh1SmlOOHEwNkdVbHBIdGhZakRHZGpncHZhZ0NTTzZOMEByZWxlYXNlLW5hbWUtcG9zdGdyZXNxbDo1NDMyL2FpcnNvbmljLWFkdmFuY2Vk
  urlnossl: cG9zdGdyZXNxbDovL2FpcnNvbmljLWFkdmFuY2VkOm96a3lhcjU2dHRhSk0zbzdISHVKaU44cTA2R1VscEh0aFlqREdkamdwdmFnQ1NPNk4wQHJlbGVhc2UtbmFtZS1wb3N0Z3Jlc3FsOjU0MzIvYWlyc29uaWMtYWR2YW5jZWQ/c3NsbW9kZT1kaXNhYmxl
  plainporthost: cmVsZWFzZS1uYW1lLXBvc3RncmVzcWw=
  plainhost: cmVsZWFzZS1uYW1lLXBvc3RncmVzcWw=
  jdbc: amRiYzpwb3N0Z3Jlc3FsOi8vcmVsZWFzZS1uYW1lLXBvc3RncmVzcWw6NTQzMi9haXJzb25pYy1hZHZhbmNlZA==
type: Opaque
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-airsonic-advanced-config
  labels:
    helm.sh/chart: airsonic-advanced-4.0.1
    app.kubernetes.io/name: airsonic-advanced
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: 11.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 999Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-airsonic-advanced-music
  labels:
    helm.sh/chart: airsonic-advanced-4.0.1
    app.kubernetes.io/name: airsonic-advanced
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: 11.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 999Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-airsonic-advanced-playlists
  labels:
    helm.sh/chart: airsonic-advanced-4.0.1
    app.kubernetes.io/name: airsonic-advanced
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: 11.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 999Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-airsonic-advanced-podcasts
  labels:
    helm.sh/chart: airsonic-advanced-4.0.1
    app.kubernetes.io/name: airsonic-advanced
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: 11.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 999Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 14.3.0
    helm-revision: "1"
    helm.sh/chart: postgresql-8.0.5
  annotations: null
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: main
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-airsonic-advanced
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: airsonic-advanced
    app.kubernetes.io/version: 11.0.0
    helm-revision: "1"
    helm.sh/chart: airsonic-advanced-4.0.1
  annotations: null
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  ports:
    - port: 10122
      targetPort: 4040
      protocol: TCP
      name: main
  selector:
    app.kubernetes.io/name: airsonic-advanced
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-airsonic-advanced
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: airsonic-advanced
    app.kubernetes.io/version: 11.0.0
    helm-revision: "1"
    helm.sh/chart: airsonic-advanced-4.0.1
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: airsonic-advanced
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: airsonic-advanced
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 0
        runAsUser: 0
        supplementalGroups:
          - 568
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      enableServiceLinks: false
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: autopermissions
          image: ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583
          securityContext:
            runAsUser: 10212
            privileged: true
            allowPrivilegeEscalation: false
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          command:
            - /bin/sh
            - -c
            - |
              /bin/bash <<'EOF'
              echo "Automatically correcting permissions..."
              echo "increasing inotify limits..."
              ( sysctl -w fs.inotify.max_user_watches=524288 || echo "error setting inotify") && ( sysctl -w fs.inotify.max_user_instances=512 || echo "error setting inotify")
              EOF
          volumeMounts: null
        - name: postgresql-init
          image: ghcr.io/truecharts/postgresql:v14.3.0@sha256:a05700459c7d20acebb13edfe713174cccbdb63c727f8a6cd421be8592b172a4
          securityContext:
            capabilities:
              drop:
                - ALL
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          command:
            - sh
            - -c
            - until pg_isready -U airsonic-advanced -h release-name-postgresql; do sleep 2 ; done
          imagePullPolicy: IfNotPresent
      containers:
        - name: release-name-airsonic-advanced
          image: tccr.io/truecharts/airsonic-advanced:v11.0.0@sha256:b6a1b30ecc3e16c39ca56392cd13d55af80235b57ec2d27c2e5f1a21fec34bd9
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: PUID
              value: "568"
            - name: USER_ID
              value: "568"
            - name: UID
              value: "568"
            - name: UMASK
              value: "2"
            - name: UMASK_SET
              value: "2"
            - name: PGID
              value: "568"
            - name: GROUP_ID
              value: "568"
            - name: GID
              value: "568"
            - name: NVIDIA_VISIBLE_DEVICES
              value: void
            - name: TZ
              value: UTC
            - name: AIRSONIC_DIR
              value: /
            - name: CONTEXT_PATH
              value: /
            - name: JAVA_OPTS
              value: null
            - name: spring_datasource_password
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: dbcreds
            - name: spring_datasource_url
              valueFrom:
                secretKeyRef:
                  key: jdbc
                  name: dbcreds
            - name: spring_datasource_username
              value: airsonic-advanced
            - name: spring_liquibase_parameters_userTableQuote
              value: '"'
          envFrom: null
          ports:
            - name: main
              containerPort: 4040
              protocol: TCP
          volumeMounts:
            - mountPath: /airsonic
              name: config
            - mountPath: /music
              name: music
            - mountPath: /playlists
              name: playlists
            - mountPath: /podcasts
              name: podcasts
            - mountPath: /shared
              name: shared
            - mountPath: /tmp
              name: temp
            - mountPath: /var/logs
              name: varlogs
          livenessProbe:
            tcpSocket:
              port: 4040
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 4040
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 4040
            initialDelaySeconds: 10
            failureThreshold: 60
            timeoutSeconds: 2
            periodSeconds: 5
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: release-name-airsonic-advanced-config
        - name: music
          persistentVolumeClaim:
            claimName: release-name-airsonic-advanced-music
        - name: playlists
          persistentVolumeClaim:
            claimName: release-name-airsonic-advanced-playlists
        - name: podcasts
          persistentVolumeClaim:
            claimName: release-name-airsonic-advanced-podcasts
        - name: shared
          emptyDir: {}
        - name: temp
          emptyDir:
            medium: Memory
        - name: varlogs
          emptyDir: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 14.3.0
    helm-revision: "1"
    helm.sh/chart: postgresql-8.0.5
spec:
  revisionHistoryLimit: 3
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
  serviceName: release-name-postgresql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 0
        runAsUser: 568
        supplementalGroups:
          - 568
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      enableServiceLinks: false
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: autopermissions
          image: ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583
          securityContext:
            runAsUser: 11015
            privileged: true
            allowPrivilegeEscalation: false
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          command:
            - /bin/sh
            - -c
            - |
              /bin/bash <<'EOF'
              echo "Automatically correcting permissions..."
              echo "increasing inotify limits..."
              ( sysctl -w fs.inotify.max_user_watches=524288 || echo "error setting inotify") && ( sysctl -w fs.inotify.max_user_instances=512 || echo "error setting inotify")
              EOF
          volumeMounts: null
      containers:
        - name: release-name-postgresql
          image: ghcr.io/truecharts/postgresql:v14.3.0@sha256:a05700459c7d20acebb13edfe713174cccbdb63c727f8a6cd421be8592b172a4
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: PUID
              value: "568"
            - name: USER_ID
              value: "568"
            - name: UID
              value: "568"
            - name: UMASK
              value: "2"
            - name: UMASK_SET
              value: "2"
            - name: PGID
              value: "568"
            - name: GROUP_ID
              value: "568"
            - name: GID
              value: "568"
            - name: S6_READ_ONLY_ROOT
              value: "1"
            - name: NVIDIA_VISIBLE_DEVICES
              value: void
            - name: TZ
              value: UTC
            - name: POSTGRESQL_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-postgres-password
                  name: dbcreds
            - name: POSTGRES_DB
              value: airsonic-advanced
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: dbcreds
            - name: POSTGRES_USER
              value: airsonic-advanced
          envFrom: null
          ports:
            - name: main
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /shared
              name: shared
            - mountPath: /tmp
              name: temp
            - mountPath: /var/logs
              name: varlogs
            - mountPath: /bitnami/postgresql
              name: db
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - until pg_isready -U ${POSTGRES_USER} -h localhost; do sleep 2 ; done
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - until pg_isready -U ${POSTGRES_USER} -h localhost; do sleep 2 ; done
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - until pg_isready -U ${POSTGRES_USER} -h localhost; do sleep 2 ; done
            failureThreshold: 60
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: shared
          emptyDir: {}
        - name: temp
          emptyDir:
            medium: Memory
        - name: varlogs
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: db
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 999Gi
