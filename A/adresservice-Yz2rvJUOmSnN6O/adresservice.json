[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "automountServiceAccountToken": true,
    "metadata": {
      "name": "release-name-redis",
      "namespace": "Yz2rvJUOmSnN6O",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-15.3.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-adresservice",
      "labels": {
        "helm.sh/chart": "adresservice-1.1.0",
        "app.kubernetes.io/name": "adresservice",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "V1.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.10.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "Yz2rvJUOmSnN6O"
    },
    "type": "Opaque",
    "data": {
      "postgresql-postgres-password": "Qk1PZTJkbjhmWg==",
      "postgresql-password": "IUNoYW5nZU1lIQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "adresservice-dependencies",
      "labels": {
        "helm.sh/chart": "adresservice-1.1.0",
        "app.kubernetes.io/name": "adresservice",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "V1.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "stringData": {
      "dependencies.yaml": "parameters:\n    components:\n        bag:\n          apikey: \"\"\n          auth: apikey\n          location: \"\"\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "adresservice",
      "labels": {
        "helm.sh/chart": "adresservice-1.1.0",
        "app.kubernetes.io/name": "adresservice",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "V1.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "database-url": "cGdzcWw6Ly93ZWJyZXNvdXJjZWNhdGFsb2d1czohQ2hhbmdlTWUhQHJlbGVhc2UtbmFtZS1wb3N0Z3Jlc3FsL3dlYnJlc291cmNlY2F0YWxvZ3VzP3NlcnZlclZlcnNpb249MTAmc3NsbW9kZT1kaXNhYmxl",
      "app_application_key": "NDVjMWE0YjYtNTlkMy00YTZlLTg2YmYtODhhODcyZjM1ODQ1"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-configuration",
      "namespace": "Yz2rvJUOmSnN6O",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-15.3.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "redis.conf": "# User-supplied common configuration:\n# Enable AOF https://redis.io/topics/persistence#append-only-file\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"\n# End of common configuration",
      "master.conf": "dir /data\n# User-supplied master configuration:\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"\n# End of master configuration",
      "replica.conf": "dir /data\nslave-read-only yes\n# User-supplied replica configuration:\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"\n# End of replica configuration"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-health",
      "namespace": "Yz2rvJUOmSnN6O",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-15.3.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "ping_readiness_local.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_local.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_master.sh": "#!/bin/bash\n\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD=\"$(< \"${REDIS_MASTER_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_MASTER_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_master.sh": "#!/bin/bash\n\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD=\"$(< \"${REDIS_MASTER_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_MASTER_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-scripts",
      "namespace": "Yz2rvJUOmSnN6O",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-15.3.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "start-master.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\nif [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--protected-mode\" \"no\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/master.conf\")\nexec redis-server \"${ARGS[@]}\"\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "adresservice",
      "labels": {
        "helm.sh/chart": "adresservice-1.1.0",
        "app.kubernetes.io/name": "adresservice",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "V1.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "app-version": "V1.0",
      "app-corsAllowOrigin": "[*]",
      "cache": "true",
      "debug": "0",
      "trusted-proxies": "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16",
      "trusted-hosts": "^.+$",
      "php-service": "release-name-php",
      "url": "https://adresservice.local/",
      "redis-host": "release-name-redis-headless",
      "redis-port": "6379"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql-headless",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.10.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      },
      "namespace": "Yz2rvJUOmSnN6O"
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "publishNotReadyAddresses": true,
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.10.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null,
      "namespace": "Yz2rvJUOmSnN6O"
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name",
        "role": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-headless",
      "namespace": "Yz2rvJUOmSnN6O",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-15.3.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "tcp-redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "redis",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "Yz2rvJUOmSnN6O",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-15.3.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "master"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-redis",
          "port": 6379,
          "targetPort": "redis",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "redis",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "master"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-adresservice",
      "labels": {
        "helm.sh/chart": "adresservice-1.1.0",
        "app.kubernetes.io/name": "adresservice",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "V1.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": 80,
          "protocol": "TCP",
          "name": "http"
        },
        {
          "port": 443,
          "targetPort": 80,
          "protocol": "TCP",
          "name": "https"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "adresservice",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-adresservice",
      "labels": {
        "helm.sh/chart": "adresservice-1.1.0",
        "app.kubernetes.io/name": "adresservice",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "V1.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 2,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "adresservice",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "adresservice",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-adresservice",
          "securityContext": {},
          "volumes": [
            {
              "name": "dependencies",
              "secret": {
                "secretName": "release-name-adresservice-dependencies",
                "defaultMode": 420
              }
            }
          ],
          "containers": [
            {
              "name": "release-name-adresservice-php",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "image": "ghcr.io/conductionnl/adresservice-php:latest",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "containerPort": 9000
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/srv/api/config/packages/dependencies.yaml",
                  "subPath": "dependencies.yaml",
                  "name": "dependencies",
                  "readOnly": true
                }
              ],
              "env": [
                {
                  "name": "JWT_SECRET_KEY",
                  "value": "%kernel.project_dir%/config/jwt/private.pem"
                },
                {
                  "name": "JWT_PUBLIC_KEY",
                  "value": "%kernel.project_dir%/config/jwt/public.pem"
                },
                {
                  "name": "JWT_PASSPHRASE",
                  "value": "bafe1dc254b45471754c221081f874aa"
                },
                {
                  "name": "APP_ENV",
                  "value": "prod"
                },
                {
                  "name": "TRUSTED_HOSTS",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "key": "trusted-hosts",
                      "name": "release-name-adresservice"
                    }
                  }
                },
                {
                  "name": "TRUSTED_PROXIES",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "key": "trusted-proxies",
                      "name": "release-name-adresservice"
                    }
                  }
                },
                {
                  "name": "APP_VERSION",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "key": "app-version",
                      "name": "release-name-adresservice"
                    }
                  }
                },
                {
                  "name": "APP_DEBUG",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "key": "debug",
                      "name": "release-name-adresservice"
                    }
                  }
                },
                {
                  "name": "APP_CACHE",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "key": "cache",
                      "name": "release-name-adresservice"
                    }
                  }
                },
                {
                  "name": "DATABASE_URL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "database-url",
                      "name": "release-name-adresservice"
                    }
                  }
                },
                {
                  "name": "CORS_ALLOW_ORIGIN",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "key": "app-corsAllowOrigin",
                      "name": "release-name-adresservice"
                    }
                  }
                },
                {
                  "name": "APP_APPLICATION_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "app_application_key",
                      "name": "release-name-adresservice"
                    }
                  }
                },
                {
                  "name": "REDIS_HOST",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "key": "redis-host",
                      "name": "release-name-adresservice"
                    }
                  }
                },
                {
                  "name": "REDIS_PORT",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "key": "redis-port",
                      "name": "release-name-adresservice"
                    }
                  }
                },
                {
                  "name": "APP_URL",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "key": "url",
                      "name": "release-name-adresservice"
                    }
                  }
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            },
            {
              "name": "release-name-adresservice-nginx",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false
              },
              "image": "ghcr.io/conductionnl/adresservice-nginx:latest",
              "imagePullPolicy": "Always",
              "env": [
                {
                  "name": "PHP_SERVICE",
                  "value": "localhost"
                },
                {
                  "name": "NGINX_HOST",
                  "value": "localhost"
                },
                {
                  "name": "BACKENDS",
                  "value": "localhost"
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 30
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 30
              },
              "resources": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.10.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null,
      "namespace": "Yz2rvJUOmSnN6O"
    },
    "spec": {
      "serviceName": "release-name-postgresql-headless",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "postgresql",
          "app.kubernetes.io/instance": "release-name",
          "role": "primary"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-postgresql",
          "labels": {
            "app.kubernetes.io/name": "postgresql",
            "helm.sh/chart": "postgresql-10.10.3",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "role": "primary",
            "app.kubernetes.io/component": "primary"
          }
        },
        "spec": {
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "postgresql",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "automountServiceAccountToken": false,
          "initContainers": [
            {
              "name": "init-chmod-data",
              "image": "docker.io/bitnami/bitnami-shell:10-debian-10-r200",
              "imagePullPolicy": "Always",
              "resources": {
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                }
              },
              "command": [
                "/bin/sh",
                "-cx",
                "chown 1001:1001 /bitnami/postgresql\nmkdir -p /bitnami/postgresql/data\nchmod 700 /bitnami/postgresql/data\nfind /bitnami/postgresql -mindepth 1 -maxdepth 1 -not -name \"conf\" -not -name \".snapshot\" -not -name \"lost+found\" | \\\n  xargs chown -R 1001:1001\nchmod -R 777 /dev/shm\n"
              ],
              "securityContext": {
                "runAsUser": 0
              },
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql",
                  "subPath": null
                },
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "release-name-postgresql",
              "image": "docker.io/bitnami/postgresql:11",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "securityContext": {
                "runAsUser": 11303,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432"
                },
                {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql"
                },
                {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data"
                },
                {
                  "name": "POSTGRES_POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-postgres-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "webresourcecatalogus"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "webresourcecatalogus"
                },
                {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_ENABLE_TLS",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_LOG_HOSTNAME",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_CONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_DISCONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PGAUDIT_LOG_CATALOG",
                  "value": "off"
                },
                {
                  "name": "POSTGRESQL_CLIENT_MIN_MESSAGES",
                  "value": "error"
                },
                {
                  "name": "POSTGRESQL_SHARED_PRELOAD_LIBRARIES",
                  "value": "pgaudit"
                }
              ],
              "ports": [
                {
                  "name": "tcp-postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \"webresourcecatalogus\" -d \"dbname=webresourcecatalogus\" -h 127.0.0.1 -p 5432"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "exec pg_isready -U \"webresourcecatalogus\" -d \"dbname=webresourcecatalogus\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": [
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql",
                  "subPath": null
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "dshm",
              "emptyDir": {
                "medium": "Memory"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "Yz2rvJUOmSnN6O",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-15.3.2",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "master"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "redis",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "master"
        }
      },
      "serviceName": "release-name-redis-headless",
      "updateStrategy": {
        "rollingUpdate": {},
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "redis",
            "helm.sh/chart": "redis-15.3.2",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "master"
          },
          "annotations": {
            "checksum/configmap": "f9121261fbdaab4f200bc5bbbfd022c775d50c83f6a6e50a356b7b5845498a0a",
            "checksum/health": "336d8382d4adda7a1c092770560aa3e54327fc09390def15fb53cce0e6e0772d",
            "checksum/scripts": "4627949b66b7cc44b81ef9a5e9731635ca698feceef80bd04832d517fb6894a0",
            "checksum/secret": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "release-name-redis",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "redis",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "master"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "redis",
              "image": "docker.io/bitnami/redis:6.2.5-debian-10-r34",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 11769,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "command": [
                "/bin/bash"
              ],
              "args": [
                "-c",
                "/opt/bitnami/scripts/start-scripts/start-master.sh"
              ],
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "master"
                },
                {
                  "name": "ALLOW_EMPTY_PASSWORD",
                  "value": "yes"
                },
                {
                  "name": "REDIS_TLS_ENABLED",
                  "value": "no"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 5,
                "timeoutSeconds": 6,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 5,
                "timeoutSeconds": 2,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 1"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "start-scripts",
                  "mountPath": "/opt/bitnami/scripts/start-scripts"
                },
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc/"
                },
                {
                  "name": "tmp",
                  "mountPath": "/tmp"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "start-scripts",
              "configMap": {
                "name": "release-name-redis-scripts",
                "defaultMode": 493
              }
            },
            {
              "name": "health",
              "configMap": {
                "name": "release-name-redis-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-redis-configuration"
              }
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            },
            {
              "name": "tmp",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "redis-data",
            "labels": {
              "app.kubernetes.io/name": "redis",
              "app.kubernetes.io/instance": "release-name",
              "app.kubernetes.io/component": "master"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "batch/v1beta1",
    "kind": "CronJob",
    "metadata": {
      "name": "adresservice-warmup",
      "labels": {
        "helm.sh/chart": "adresservice-1.1.0",
        "app.kubernetes.io/name": "adresservice",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "V1.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "schedule": "0 5 * * *",
      "jobTemplate": {
        "spec": {
          "template": {
            "spec": {
              "volumes": [
                {
                  "name": "dependencies",
                  "secret": {
                    "secretName": "adresservice-dependencies",
                    "defaultMode": 420
                  }
                }
              ],
              "containers": [
                {
                  "name": "adresservice-php",
                  "image": "ghcr.io/conductionnl/adresservice-php:latest",
                  "imagePullPolicy": "Always",
                  "args": [
                    "bin/console",
                    "app:cache:warmup"
                  ],
                  "volumeMounts": [
                    {
                      "mountPath": "/srv/api/config/packages/dependencies.yaml",
                      "subPath": "dependencies.yaml",
                      "name": "dependencies",
                      "readOnly": true
                    }
                  ],
                  "env": [
                    {
                      "name": "JWT_SECRET_KEY",
                      "value": "%kernel.project_dir%/config/jwt/private.pem"
                    },
                    {
                      "name": "JWT_PUBLIC_KEY",
                      "value": "%kernel.project_dir%/config/jwt/public.pem"
                    },
                    {
                      "name": "JWT_PASSPHRASE",
                      "value": "bafe1dc254b45471754c221081f874aa"
                    },
                    {
                      "name": "APP_ENV",
                      "value": "prod"
                    },
                    {
                      "name": "TRUSTED_HOSTS",
                      "valueFrom": {
                        "configMapKeyRef": {
                          "name": "adresservice",
                          "key": "trusted-hosts"
                        }
                      }
                    },
                    {
                      "name": "TRUSTED_PROXIES",
                      "valueFrom": {
                        "configMapKeyRef": {
                          "name": "adresservice",
                          "key": "trusted-proxies"
                        }
                      }
                    },
                    {
                      "name": "APP_VERSION",
                      "valueFrom": {
                        "configMapKeyRef": {
                          "name": "adresservice",
                          "key": "app-version"
                        }
                      }
                    },
                    {
                      "name": "APP_DEBUG",
                      "valueFrom": {
                        "configMapKeyRef": {
                          "name": "adresservice",
                          "key": "debug"
                        }
                      }
                    },
                    {
                      "name": "APP_CACHE",
                      "valueFrom": {
                        "configMapKeyRef": {
                          "name": "adresservice",
                          "key": "cache"
                        }
                      }
                    },
                    {
                      "name": "DATABASE_URL",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "adresservice",
                          "key": "database-url"
                        }
                      }
                    },
                    {
                      "name": "CORS_ALLOW_ORIGIN",
                      "valueFrom": {
                        "configMapKeyRef": {
                          "name": "adresservice",
                          "key": "app-corsAllowOrigin"
                        }
                      }
                    },
                    {
                      "name": "APP_APPLICATION_KEY",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "adresservice",
                          "key": "app_application_key"
                        }
                      }
                    },
                    {
                      "name": "REDIS_HOST",
                      "valueFrom": {
                        "configMapKeyRef": {
                          "name": "adresservice",
                          "key": "redis-host"
                        }
                      }
                    },
                    {
                      "name": "REDIS_PORT",
                      "valueFrom": {
                        "configMapKeyRef": {
                          "name": "adresservice",
                          "key": "redis-port"
                        }
                      }
                    },
                    {
                      "name": "APP_URL",
                      "valueFrom": {
                        "configMapKeyRef": {
                          "key": "url",
                          "name": "adresservice"
                        }
                      }
                    }
                  ]
                }
              ],
              "restartPolicy": "OnFailure"
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-adresservice-test-connection",
      "labels": {
        "helm.sh/chart": "adresservice-1.1.0",
        "app.kubernetes.io/name": "adresservice",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "V1.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-adresservice:80"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]