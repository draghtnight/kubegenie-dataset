apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-ark-config
  labels:
    app.kubernetes.io/name: ark
    helm.sh/chart: ark-0.4.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  ARK_SESSION_NAME: A Docker Powered Ark Server
  ARK_SERVER_MAP: TheIsland
  ARK_RCON_ENABLED: "True"
  ARK_SERVER_PASSWORD: ""
  ARK_SERVER_ADMIN_PASSWORD: ""
  ARK_WARN_ON_STOP: ""
  ARK_MAX_PLAYERS: "70"
  ARK_MOD_IDS: ""
  ARK_TOTAL_CONVERSION_MOD: ""
  ARK_MAP_MOD: ""
  ARK_LOG_DIRECTORY: /data/log
  ARK_UPDATE_ON_START: "false"
  ARK_BACKUP_PRE_UPDATE: "false"
  ARK_MAX_BACKUP_SIZE_MIB: "500"
  ARK_PORT: "7777"
  ARK_QUERY_PORT: "27015"
  ARK_RCON_PORT: "32330"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  name: release-name-ark-data
  labels:
    helm.sh/chart: ark-0.4.0
    app.kubernetes.io/name: ark
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  resources:
    requests:
      storage: 20Gi
  accessModes:
    - ReadWriteMany
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-ark
  labels:
    helm.sh/chart: ark-0.4.0
    app.kubernetes.io/name: ark
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 7777
      targetPort: game
      protocol: TCP
      name: game
    - port: 27015
      targetPort: query
      protocol: TCP
      name: query
  selector:
    app.kubernetes.io/name: ark
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-ark-udp
  labels:
    helm.sh/chart: ark-0.4.0
    app.kubernetes.io/name: ark
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 7777
      targetPort: gameudp
      protocol: UDP
      name: gameudp
    - port: 27015
      targetPort: queryudp
      protocol: UDP
      name: queryudp
  selector:
    app.kubernetes.io/name: ark
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-ark-rcon
  labels:
    helm.sh/chart: ark-0.4.0
    app.kubernetes.io/name: ark
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  type: null
  ports:
    - port: 32330
      targetPort: rcon
      protocol: TCP
      name: rcon
  selector:
    app.kubernetes.io/name: ark
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ark
  labels:
    helm.sh/chart: ark-0.4.0
    app.kubernetes.io/name: ark
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ark
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ark
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
      containers:
        - name: ark
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: cocainefarm/ark:latest
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: release-name-ark-config
          ports:
            - name: game
              containerPort: 7777
              protocol: TCP
            - name: gameudp
              containerPort: 7777
              protocol: UDP
            - name: query
              containerPort: 27015
              protocol: TCP
            - name: queryudp
              containerPort: 27015
              protocol: UDP
            - name: rcon
              containerPort: 32330
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: game
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: game
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-ark-data
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-ark-test-connection
  labels:
    helm.sh/chart: ark-0.4.0
    app.kubernetes.io/name: ark
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - 'release-name-ark:'
  restartPolicy: Never
