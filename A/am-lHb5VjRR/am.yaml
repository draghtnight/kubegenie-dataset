apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-am
  annotations: null
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: am
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-management-api
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: management-api
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
data:
  gravitee.yml: "jetty:\n  host: 0.0.0.0\n  port: 8093\n  idleTimeout: 30000\n  acceptors: -1\n  selectors: -1\n  statistics: false\n  outputBufferSize: 32768\n  requestHeaderSize: 8192\n  responseHeaderSize: 8192\n  secured: false\n\nliquibase:\n  enabled: true\n\nmanagement:\n  type: mongodb\n  mongodb:\n    sslEnabled: false\n    socketKeepAlive: false\n    uri: mongodb://mongo-mongodb-replicaset:27017/gravitee?&replicaSet=rs0&connectTimeoutMS=30000\n\noauth2:\n  type: mongodb\n  mongodb:\n    sslEnabled: false\n    socketKeepAlive: false\n    uri: mongodb://mongo-mongodb-replicaset:27017/gravitee?&replicaSet=rs0&connectTimeoutMS=30000\n\nservices:\n  core:\n    http:\n      enabled: true\n      port: 18093\n      host: localhost\n      authentication:\n        type: basic\n        users:\n          admin: adminadmin\n  notifier:\n    enabled: true\n    tryAvoidDuplicateNotification: true\n  certificate:\n    enabled: true\n    cronExpression: 0 0 5 * * *\n    expiryThresholds: 20,15,10,5,1\n    expiryEmailSubject: \"Certificate will expire soon\"\n\nnotifiers:\n  email: \n    enabled: false\n    host: smtp.example.com\n    subject: \"[gravitee] %s\"\n    port: 25\n    from: info@example.com\n    username: info@example.com\n    password: example.com\n    startTLSEnabled: false\n    sslTrustAll: false\n  ui:\n    enabled: true\n\n# SMTP configuration used to send mails\nemail:\n  enabled: true\n  host: smtp.example.com\n  subject: \"[gravitee] %s\"\n  port: 25\n  from: info@example.com\n  username: info@example.com\n  password: example.com\n  properties:\n    auth: true\n    starttls.enable: false\n\ndomains:\n  certificates:\n    default:\n      keysize: 2048\n      alias: default\n      keypass: gravitee\n      storepass: gravitee\n      validity: 365\n      algorithm: SHA256withRSA\n      name: cn=Gravitee.io\n\njwt:\n  secret: s3cR3t4grAv1t3310AMS1g1ingDftK3y\n  kid: default-gravitee-AM-key\n  # Allows to define the end of validity of the token in seconds (default 604800 = a week)\n  expire-after: 604800\n  # Allows to define issuer (default https://gravitee.am)\n  issuer: https://gravitee.am\n  # Allows to define cookie context path (default /)\n  cookie-path: /\n  # Allows to define cookie domain (default \"\")\n  cookie-domain: \n  # Allows to define if cookie secure only (default false)\n  cookie-secure: false\n\n# Gateway entry point used in emails\ngateway:\n  url: https://am.example.com/auth\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-gateway
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: gateway
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
data:
  gravitee.yml: "# Gateway HTTP server\nhttp:\n  port: 8092\n  host: 0.0.0.0\n#  idleTimeout: 0\n#  tcpKeepAlive: true\n#  compressionSupported: false\n#  instances: 0\n  maxHeaderSize: 8192\n  maxChunkSize: 8192\n  maxInitialLineLength: 4096\n  maxFormAttributeSize: 2048\n  alpn: true\n\nliquibase:\n  enabled: false\n\nmanagement:\n  type: mongodb\n  mongodb:\n    sslEnabled: false\n    socketKeepAlive: false\n    uri: mongodb://mongo-mongodb-replicaset:27017/gravitee?&replicaSet=rs0&connectTimeoutMS=30000\n\noauth2:\n  type: mongodb\n  mongodb:\n    sslEnabled: false\n    socketKeepAlive: false\n    uri: mongodb://mongo-mongodb-replicaset:27017/gravitee?&replicaSet=rs0&connectTimeoutMS=30000\n\n# Sharding tags configuration\n# Allows to define inclusion/exclusion sharding tags to only deploy a part of APIs. To exclude just prefix the tag with '!'.\ntags: \n\nservices:\n  core:\n    http:\n      enabled: true\n      port: 18092\n      host: localhost\n      authentication:\n       type: basic\n       users:\n         admin: adminadmin\n      secured: false\n\n  # Gateway monitoring service.\n  # This service retrieves metrics like os / process / jvm metrics.\n  monitoring:\n    delay: 5000\n    unit: MILLISECONDS\n\njwt:\n  secret: s3cR3t4grAv1t3310AMS1g1ingDftK3y\n  kid: default-gravitee-AM-key\n  # Allows to define the end of validity of the token in seconds (default 604800 = a week)\n  expire-after: 604800\n  # Allows to define issuer (default https://gravitee.am)\n  issuer: https://gravitee.am\n  # Allows to define cookie context path (default /)\n  cookie-path: /\n  # Allows to define cookie domain (default \"\")\n  cookie-domain: \n  # Allows to define if cookie secure only (default false)\n  cookie-secure: false\n\n# SMTP configuration used to send mails\nemail:\n  enabled: true\n  host: smtp.example.com\n  subject: \"[gravitee] %s\"\n  port: 25\n  from: info@example.com\n  username: info@example.com\n  password: example.com\n  properties:\n    auth: true\n    starttls.enable: false\n\n# Gateway entry point used in emails\ngateway:\n  url: https://am.example.com/auth\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-management-ui
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: management-ui
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
data:
  use-gzip: "true"
  gzip-level: "5"
  gzip-types: '*'
  constants.json: |
    {
      "baseURL": "https://am.example.com/management"
    }
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-am-cluster-role
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: am
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-am-cluster-role-binding
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: am
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  name: release-name-am-cluster-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: release-name-am
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-management-api
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: management-api
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
  annotations: null
spec:
  type: ClusterIP
  ports:
    - port: 83
      targetPort: 8093
      protocol: TCP
      name: management-api
  selector:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: management-api
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-gateway
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: gateway
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
  annotations: null
spec:
  type: ClusterIP
  ports:
    - port: 82
      targetPort: 8092
      protocol: TCP
      name: gateway
  selector:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: gateway
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-management-ui
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: management-ui
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
  annotations: null
spec:
  type: ClusterIP
  ports:
    - port: 8002
      targetPort: 8080
      protocol: TCP
      name: management-ui
  selector:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: management-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-management-api
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: management-api
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: am
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: management-api
  template:
    metadata:
      annotations:
        chaos.alpha.kubernetes.io/enabled: "false"
        checksum/config: 2a78148fb104d6e59e33f95645555ca96c9f54f7688f6a001f43694687b1c4f4
      labels:
        app.kubernetes.io/name: am
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: management-api
    spec:
      serviceAccountName: release-name-am
      affinity: {}
      nodeSelector: {}
      topologySpreadConstraints: []
      tolerations: []
      terminationGracePeriodSeconds: 30
      initContainers: null
      containers:
        - name: release-name-management-api
          image: graviteeio/am-management-api:3.15.0
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 11182
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: http
              containerPort: 8093
          env: null
          envFrom: []
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 30
            tcpSocket:
              port: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 30
            tcpSocket:
              port: http
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 200m
              memory: 512Mi
          volumeMounts:
            - name: config
              mountPath: /opt/graviteeio-am-management-api/config/gravitee.yml
              subPath: gravitee.yml
      volumes:
        - name: config
          configMap:
            name: release-name-management-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-gateway
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: gateway
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: am
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: gateway
  template:
    metadata:
      annotations:
        chaos.alpha.kubernetes.io/enabled: "false"
        checksum/config: a0779573e249a4eba624a70521f07922649bdf28e21be759c219c26ba8e69748
      labels:
        app.kubernetes.io/name: am
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: gateway
    spec:
      serviceAccountName: release-name-am
      affinity: {}
      nodeSelector: {}
      topologySpreadConstraints: []
      tolerations: []
      terminationGracePeriodSeconds: 30
      initContainers: null
      containers:
        - name: release-name-gateway
          image: graviteeio/am-gateway:3.15.0
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 11903
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: http
              containerPort: 8092
          env: null
          envFrom: []
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 30
            tcpSocket:
              port: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 30
            tcpSocket:
              port: http
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: config
              mountPath: /opt/graviteeio-am-gateway/config/gravitee.yml
              subPath: gravitee.yml
      volumes:
        - name: config
          configMap:
            name: release-name-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-management-ui
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: management-ui
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: am
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: management-ui
  template:
    metadata:
      annotations:
        chaos.alpha.kubernetes.io/enabled: "false"
        checksum/config: 1341d1ef9de3794eabcad0cde11764ed01628d57f53444259b80a9f9ffff50e8
      labels:
        app.kubernetes.io/name: am
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: management-ui
    spec:
      affinity: {}
      nodeSelector: {}
      topologySpreadConstraints: []
      tolerations: []
      terminationGracePeriodSeconds: 30
      containers:
        - name: release-name-management-ui
          image: graviteeio/am-management-ui:3.15.0
          imagePullPolicy: Always
          securityContext:
            runAsGroup: 101
            runAsNonRoot: true
            runAsUser: 11138
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: MGMT_API_URL
              value: https://am.example.com
            - name: MGMT_UI_URL
              value: https://am.example.com/
          envFrom: []
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          volumeMounts:
            - name: config
              mountPath: /usr/share/nginx/html/constants.json
              subPath: constants.json
      volumes:
        - name: config
          configMap:
            name: release-name-management-ui
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-management-api
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: management-api
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-management-api
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 80
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 50
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-gateway
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: gateway
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-gateway
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 80
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 50
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-management-ui
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: management-ui
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-management-ui
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 80
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 50
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-management-api
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: management-api
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
  annotations:
    ingress.kubernetes.io/configuration-snippet: |
      etag on;
      proxy_pass_header ETag;
      proxy_set_header if-match "";
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: am.example.com
      http:
        paths:
          - pathType: Prefix
            path: /management
            backend:
              service:
                name: release-name-management-api
                port:
                  number: 83
  tls:
    - hosts:
        - am.example.com
      secretName: api-custom-cert
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-gateway
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: gateway
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
  annotations:
    kubernetes.io/app-root: /auth
    kubernetes.io/ingress.class: nginx
    kubernetes.io/rewrite-target: /auth
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - host: am.example.com
      http:
        paths:
          - pathType: Prefix
            path: /auth
            backend:
              service:
                name: release-name-gateway
                port:
                  number: 82
  tls:
    - hosts:
        - am.example.com
      secretName: api-custom-cert
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-management-ui
  labels:
    app.kubernetes.io/name: am
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 3.15.0
    app.kubernetes.io/component: management-ui
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: am-1.0.42
  annotations:
    ingress.kubernetes.io/configuration-snippet: |
      etag on;
      proxy_pass_header ETag;
    kubernetes.io/app-root: /
    kubernetes.io/ingress.class: nginx
    kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: am.example.com
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: release-name-management-ui
                port:
                  number: 8002
  tls:
    - hosts:
        - am.example.com
      secretName: api-custom-cert
