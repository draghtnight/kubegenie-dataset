[
  {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": {
      "name": "release-name-ns",
      "labels": {
        "app.kubernetes.io/name": "aws-multi-ecr-credentials",
        "helm.sh/chart": "aws-multi-ecr-credentials-1.4.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.3",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-account",
      "namespace": "release-name-ns",
      "labels": {
        "app.kubernetes.io/name": "aws-multi-ecr-credentials",
        "helm.sh/chart": "aws-multi-ecr-credentials-1.4.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.3",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-secret",
      "namespace": "release-name-ns",
      "labels": {
        "app.kubernetes.io/name": "aws-multi-ecr-credentials",
        "helm.sh/chart": "aws-multi-ecr-credentials-1.4.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.3",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "AWS_ACCESS_KEY_ID": null,
      "AWS_SECRET_ACCESS_KEY": null
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-account",
      "labels": {
        "app.kubernetes.io/name": "aws-multi-ecr-credentials",
        "helm.sh/chart": "aws-multi-ecr-credentials-1.4.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.3",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cluster-admin"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-account",
        "namespace": "release-name-ns"
      }
    ]
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "release-name-job",
      "namespace": "release-name-ns",
      "labels": {
        "app.kubernetes.io/name": "aws-multi-ecr-credentials",
        "helm.sh/chart": "aws-multi-ecr-credentials-1.4.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.3",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "backoffLimit": 4,
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "aws-multi-ecr-credentials",
            "helm.sh/chart": "aws-multi-ecr-credentials-1.4.3",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "1.4.3"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-account",
          "terminationGracePeriodSeconds": 0,
          "restartPolicy": "Never",
          "containers": [
            {
              "name": "kubectl",
              "imagePullPolicy": "IfNotPresent",
              "image": "amazon/aws-cli:latest",
              "env": [
                {
                  "name": "AWS_ACCESS_KEY_ID",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secret",
                      "key": "AWS_ACCESS_KEY_ID"
                    }
                  }
                },
                {
                  "name": "AWS_SECRET_ACCESS_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-secret",
                      "key": "AWS_SECRET_ACCESS_KEY"
                    }
                  }
                }
              ],
              "command": [
                "/bin/sh",
                "-c",
                "set -e #stop script because of error\n\n#fetching docker password\nDOCKER_REGISTRY_SERVER=https://.dkr.ecr..amazonaws.com\nDOCKER_USER=AWS\nDOCKER_PASSWORD=`aws ecr get-login-password --region `\n\n#download latest kubectl binary app\ncurl -LO \"https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\"\nchmod +x kubectl\n\n#delete old secret\n./kubectl delete secret --namespace default aws-registry- || true\n\n#create new secret (.dockerconfigjson)\n./kubectl create secret --namespace default docker-registry aws-registry- \\\n--docker-server=$DOCKER_REGISTRY_SERVER \\\n--docker-username=$DOCKER_USER \\\n--docker-password=$DOCKER_PASSWORD \\\n--docker-email=no@email.local\n./kubectl patch serviceaccount default -p '{\"imagePullSecrets\":[{\"name\":\"aws-registry-\"}]}'\n"
              ]
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1beta1",
    "kind": "CronJob",
    "metadata": {
      "name": "release-name-cron",
      "namespace": "release-name-ns",
      "labels": {
        "app.kubernetes.io/name": "aws-multi-ecr-credentials",
        "helm.sh/chart": "aws-multi-ecr-credentials-1.4.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.3",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "schedule": "",
      "successfulJobsHistoryLimit": 2,
      "failedJobsHistoryLimit": 2,
      "jobTemplate": {
        "spec": {
          "backoffLimit": 4,
          "template": {
            "metadata": {
              "labels": {
                "app.kubernetes.io/name": "aws-multi-ecr-credentials",
                "helm.sh/chart": "aws-multi-ecr-credentials-1.4.3",
                "app.kubernetes.io/instance": "release-name",
                "app.kubernetes.io/version": "1.4.3"
              }
            },
            "spec": {
              "serviceAccountName": "release-name-account",
              "terminationGracePeriodSeconds": 0,
              "restartPolicy": "Never",
              "containers": [
                {
                  "name": "kubectl",
                  "imagePullPolicy": "IfNotPresent",
                  "image": "amazon/aws-cli:latest",
                  "env": [
                    {
                      "name": "AWS_ACCESS_KEY_ID",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "release-name-secret",
                          "key": "AWS_ACCESS_KEY_ID"
                        }
                      }
                    },
                    {
                      "name": "AWS_SECRET_ACCESS_KEY",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "release-name-secret",
                          "key": "AWS_SECRET_ACCESS_KEY"
                        }
                      }
                    }
                  ],
                  "command": [
                    "/bin/sh",
                    "-c",
                    "set -e #stop script because of error\n\n#fetching docker password\nDOCKER_REGISTRY_SERVER=https://.dkr.ecr..amazonaws.com\nDOCKER_USER=AWS\nDOCKER_PASSWORD=`aws ecr get-login-password --region `\n\n#download latest kubectl binary app\ncurl -LO \"https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\"\nchmod +x kubectl\n\n#delete old secret\n./kubectl delete secret --namespace default aws-registry- || true\n\n#create new secret (.dockerconfigjson)\n./kubectl create secret --namespace default docker-registry aws-registry- \\\n--docker-server=$DOCKER_REGISTRY_SERVER \\\n--docker-username=$DOCKER_USER \\\n--docker-password=$DOCKER_PASSWORD \\\n--docker-email=no@email.local\n./kubectl patch serviceaccount default -p '{\"imagePullSecrets\":[{\"name\":\"aws-registry-\"}]}'\n"
                  ]
                }
              ]
            }
          }
        }
      }
    }
  }
]