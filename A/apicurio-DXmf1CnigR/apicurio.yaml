apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgresql-postgres-password: dEd0NGRoSmdxMA==
  postgresql-password: dlNYNVJJTEhCaw==
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-api
  namespace: DXmf1CnigR
type: Opaque
data:
  APICURIO_DB_PASSWORD: dlNYNVJJTEhCaw==
  APICURIO_KC_CLIENT_SECRET: YXBpY3VyaW9rYw==
  APICURIO_MICROCKS_CLIENT_SECRET: YXBpY3VyaW9tcg==
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ui
  namespace: DXmf1CnigR
type: Opaque
data:
  APICURIO_KC_CLIENT_SECRET: YXBpY3VyaW9rYw==
  APICURIO_MICROCKS_CLIENT_SECRET: YXBpY3VyaW9tcg==
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ws
  namespace: DXmf1CnigR
type: Opaque
data:
  APICURIO_DB_PASSWORD: dlNYNVJJTEhCaw==
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-api
  namespace: DXmf1CnigR
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 8080
      targetPort: 8080
  selector:
    org.apicurio.instance: release-name-api
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-ui
  namespace: DXmf1CnigR
spec:
  type: ClusterIP
  ports:
    - name: ui
      port: 8080
      targetPort: 8080
  selector:
    org.apicurio.instance: release-name-ui
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-ws
  namespace: DXmf1CnigR
spec:
  type: ClusterIP
  ports:
    - name: ws
      port: 8080
      targetPort: 8080
  selector:
    org.apicurio.instance: release-name-ws
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-api
  namespace: DXmf1CnigR
  labels:
    org.apicurio.instance: release-name-api
spec:
  replicas: 1
  selector:
    matchLabels:
      org.apicurio.instance: release-name-api
  template:
    metadata:
      labels:
        org.apicurio.instance: release-name-api
      annotations:
        checksum/secrets: f56f39f2aeb2399ef993699d8e201be8b19d213844744a31d0d6079e6ed491bd
    spec:
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      restartPolicy: Always
      initContainers:
        - name: wait-db
          image: jwilder/dockerize
          imagePullPolicy: IfNotPresent
          args:
            - -timeout=300s
            - -wait=tcp://release-name-postgresql:5432
      containers:
        - name: api
          image: apicurio/apicurio-studio-api:latest
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          env:
            - name: APICURIO_DB_CONNECTION_URL
              value: jdbc:postgresql://release-name-postgresql:5432/apicuriodb
            - name: APICURIO_DB_DRIVER_NAME
              value: postgresql
            - name: APICURIO_DB_INITIALIZE
              value: "true"
            - name: APICURIO_DB_TYPE
              value: postgresql9
            - name: APICURIO_DB_USER_NAME
              value: apicuriodb
            - name: APICURIO_MICROCKS_API_URL
              value: http://www.example.com/api
            - name: APICURIO_MICROCKS_CLIENT_ID
              value: microcks-serviceaccount
            - name: APICURIO_KC_AUTH_URL
              value: https://www.example.com/auth
            - name: APICURIO_KC_REALM
              value: Apicurio
            - name: APICURIO_KC_CLIENT_ID
              value: apicurio-studio
            - name: APICURIO_SHARE_FOR_EVERYONE
              value: "true"
            - name: APICURIO_LOGGING_LEVEL
              value: INFO
            - name: JAVA_TOOL_OPTIONS
              value: -Djava.net.preferIPv4Stack=true
          envFrom:
            - secretRef:
                name: release-name-api
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /system/ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 15
          livenessProbe:
            httpGet:
              path: /system/ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 15
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ui
  namespace: DXmf1CnigR
  labels:
    org.apicurio.instance: release-name-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      org.apicurio.instance: release-name-ui
  template:
    metadata:
      labels:
        org.apicurio.instance: release-name-ui
      annotations:
        checksum/secrets: 0ab06f831b1902348a18d20db9cb4d0eebebc004ac624acd824abf611c0f0ffc
    spec:
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      restartPolicy: Always
      containers:
        - name: api
          image: apicurio/apicurio-studio-ui:latest
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          env:
            - name: APICURIO_UI_FEATURE_SHARE_WITH_EVERYONE
              value: "true"
            - name: APICURIO_UI_HUB_API_URL
              value: https://www.example.com/studio-api
            - name: APICURIO_UI_EDITING_URL
              value: wss://www.example.com/ws
            - name: APICURIO_MICROCKS_API_URL
              value: http://www.example.com/api
            - name: APICURIO_MICROCKS_CLIENT_ID
              value: microcks-serviceaccount
            - name: APICURIO_KC_AUTH_URL
              value: https://www.example.com/auth
            - name: APICURIO_KC_REALM
              value: Apicurio
            - name: APICURIO_KC_CLIENT_ID
              value: apicurio-studio
            - name: APICURIO_LOGGING_LEVEL
              value: INFO
            - name: APICURIO_UI_FEATURE_MICROCKS
              value: "false"
            - name: APICURIO_UI_LOGOUT_REDIRECT_URI
              value: /
            - name: APICURIO_UI_VALIDATION_CHANNELNAME_REGEXP
              value: ([^{}\/]*(\{[a-zA-Z_][0-9a-zA-Z_]*\})?)+
            - name: JAVA_TOOL_OPTIONS
              value: -Djava.net.preferIPv4Stack=true
          envFrom:
            - secretRef:
                name: release-name-ui
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 15
          livenessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 15
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ws
  namespace: DXmf1CnigR
  labels:
    org.apicurio.instance: release-name-ws
spec:
  replicas: 1
  selector:
    matchLabels:
      org.apicurio.instance: release-name-ws
  template:
    metadata:
      labels:
        org.apicurio.instance: release-name-ws
      annotations:
        checksum/secrets: 56a3badf145f9f589e305c2587ef0fea3e3ac71511a8bc79bc4be2461a6c7d10
    spec:
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      restartPolicy: Always
      initContainers:
        - name: wait-db
          image: jwilder/dockerize
          imagePullPolicy: IfNotPresent
          args:
            - -wait
            - tcp://release-name-postgresql:5432
            - -timeout
            - 300s
      containers:
        - name: api
          image: apicurio/apicurio-studio-ws:latest
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          env:
            - name: APICURIO_DB_CONNECTION_URL
              value: jdbc:postgresql://release-name-postgresql:5432/apicuriodb
            - name: APICURIO_DB_DRIVER_NAME
              value: postgresql
            - name: APICURIO_DB_INITIALIZE
              value: "true"
            - name: APICURIO_DB_TYPE
              value: postgresql9
            - name: APICURIO_DB_USER_NAME
              value: apicuriodb
            - name: APICURIO_SHARE_FOR_EVERYONE
              value: "true"
            - name: APICURIO_LOGGING_LEVEL
              value: INFO
            - name: JAVA_TOOL_OPTIONS
              value: -Djava.net.preferIPv4Stack=true
          envFrom:
            - secretRef:
                name: release-name-ws
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 15
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 15
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.1.4
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: primary
    spec:
      securityContext:
        fsGroup: 1001
      containers:
        - name: release-name-postgresql
          image: docker.io/bitnami/postgresql:11.10.0-debian-10-r24
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          securityContext:
            runAsUser: 11521
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-postgres-password
            - name: POSTGRES_USER
              value: apicuriodb
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: apicuriodb
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "apicuriodb" -d "dbname=apicuriodb" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "apicuriodb" -d "dbname=apicuriodb" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: null
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-test-apicurio-connections
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - image: jwilder/dockerize
      imagePullPolicy: IfNotPresent
      name: test-connections
      args:
        - -timeout=5m
        - -wait=tcp://release-name-postgresql:5432
        - -wait=http://release-name-api:8080/system/ready
        - -wait=http://release-name-ui:8080/ready
        - -wait=http://release-name-ws:8080/metrics
  restartPolicy: Never
