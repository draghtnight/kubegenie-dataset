[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-akeyless-csi-provider-csi-provider",
      "namespace": "bKt8VOdH3J",
      "labels": {
        "app.kubernetes.io/name": "akeyless-csi-provider-csi-provider",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-akeyless-csi-provider-csi-provider-clusterrole",
      "labels": {
        "app.kubernetes.io/name": "akeyless-csi-provider-csi-provider",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "serviceaccounts/token"
        ],
        "verbs": [
          "create"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-akeyless-csi-provider-csi-provider-clusterrolebinding",
      "labels": {
        "app.kubernetes.io/name": "akeyless-csi-provider-csi-provider",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-akeyless-csi-provider-csi-provider-clusterrole"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-akeyless-csi-provider-csi-provider",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "release-name-akeyless-csi-provider-csi-provider",
      "namespace": "bKt8VOdH3J",
      "labels": {
        "app.kubernetes.io/name": "akeyless-csi-provider-csi-provider",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "akeyless-csi-provider-csi-provider",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "akeyless-csi-provider-csi-provider",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-akeyless-csi-provider-csi-provider",
          "containers": [
            {
              "name": "akeyless-csi-provider-csi-provider",
              "image": "akeyless/akeyless-csi-provider:latest",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--endpoint=/provider/akeyless.sock"
              ],
              "volumeMounts": [
                {
                  "name": "providervol",
                  "mountPath": "/provider"
                },
                {
                  "name": "mountpoint-dir",
                  "mountPath": "/var/lib/kubelet/pods",
                  "mountPropagation": "HostToContainer"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/health/ready",
                  "port": 8080
                },
                "failureThreshold": 2,
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "successThreshold": 1,
                "timeoutSeconds": 3
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/health/ready",
                  "port": 8080
                },
                "failureThreshold": 2,
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "successThreshold": 1,
                "timeoutSeconds": 3
              }
            }
          ],
          "volumes": [
            {
              "name": "providervol",
              "hostPath": {
                "path": "/etc/kubernetes/secrets-store-csi-providers"
              }
            },
            {
              "name": "mountpoint-dir",
              "hostPath": {
                "path": "/var/lib/kubelet/pods"
              }
            }
          ]
        }
      }
    }
  }
]