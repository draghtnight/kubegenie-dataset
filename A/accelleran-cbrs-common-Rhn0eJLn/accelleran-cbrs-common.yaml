apiVersion: v1
kind: ServiceAccount
metadata:
  name: accelleran-cbrs-nats
  namespace: Rhn0eJLn
  labels:
    release: release-name
    app: accelleran-cbrs-nats
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: accelleran-cbrs-redis
  namespace: Rhn0eJLn
  labels:
    release: release-name
    app: accelleran-cbrs-redis
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: accelleran-cbrs-ric
  namespace: Rhn0eJLn
  labels:
    release: release-name
    app: accelleran-cbrs-ric
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: accelleran-cbrs-ricweb
  namespace: Rhn0eJLn
  labels:
    release: release-name
    app: accelleran-cbrs-ricweb
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: accelleran-cbrs-ric-cm
  labels:
    release: release-name
    app: accelleran-cbrs-ric-cm
data:
  bootstrap: |
    redis.hostname:accelleran-cbrs-redis
    redis.port:6379
    instance.filter:ONFRIC001
  zlog.conf: |
    [global]
    strict init = true
    buffer min = 64K
    buffer max = 64K
    rotate lock file = /tmp/zlog.lock

    [formats]
    printf_format = "%d(%b %d %H:%M:%S).%ms %8.8H %m%n"
    [rules]
    user.* >stdout ;printf_format
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: accelleran-cbrs-nats
  namespace: Rhn0eJLn
  labels:
    release: release-name
    app: accelleran-cbrs-nats
rules:
  - apiGroups:
      - ""
      - extensions
      - batch
      - apps
    verbs:
      - get
      - list
      - patch
    resources:
      - statefulsets
      - daemonsets
      - jobs
      - pods
      - services
      - endpoints
      - configmaps
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: accelleran-cbrs-redis
  namespace: Rhn0eJLn
  labels:
    release: release-name
    app: accelleran-cbrs-redis
rules:
  - apiGroups:
      - ""
      - extensions
      - batch
      - apps
    verbs:
      - get
      - list
      - patch
    resources:
      - statefulsets
      - daemonsets
      - jobs
      - pods
      - services
      - endpoints
      - configmaps
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: accelleran-cbrs-ric
  namespace: Rhn0eJLn
  labels:
    release: release-name
    app: accelleran-cbrs-ric
rules:
  - apiGroups:
      - ""
      - extensions
      - batch
      - apps
    verbs:
      - get
      - list
      - patch
    resources:
      - statefulsets
      - daemonsets
      - jobs
      - pods
      - services
      - endpoints
      - configmaps
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: accelleran-cbrs-ricweb
  namespace: Rhn0eJLn
  labels:
    release: release-name
    app: accelleran-cbrs-ricweb
rules:
  - apiGroups:
      - ""
      - extensions
      - batch
      - apps
    verbs:
      - get
      - list
      - patch
    resources:
      - statefulsets
      - daemonsets
      - jobs
      - pods
      - services
      - endpoints
      - configmaps
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: accelleran-cbrs-nats
  namespace: Rhn0eJLn
  labels:
    release: release-name
    app: accelleran-cbrs-nats
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: accelleran-cbrs-nats
subjects:
  - kind: ServiceAccount
    name: accelleran-cbrs-nats
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: accelleran-cbrs-redis
  namespace: Rhn0eJLn
  labels:
    release: release-name
    app: accelleran-cbrs-redis
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: accelleran-cbrs-redis
subjects:
  - kind: ServiceAccount
    name: accelleran-cbrs-redis
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: accelleran-cbrs-ric
  namespace: Rhn0eJLn
  labels:
    release: release-name
    app: accelleran-cbrs-ric
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: accelleran-cbrs-ric
subjects:
  - kind: ServiceAccount
    name: accelleran-cbrs-ric
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: accelleran-cbrs-ricweb
  namespace: Rhn0eJLn
  labels:
    release: release-name
    app: accelleran-cbrs-ricweb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: accelleran-cbrs-ricweb
subjects:
  - kind: ServiceAccount
    name: accelleran-cbrs-ricweb
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: accelleran-cbrs-nats
  labels:
    release: release-name
    app: accelleran-cbrs-nats
spec:
  selector:
    release: release-name
    app: accelleran-cbrs-nats
  ports:
    - name: nats-port
      port: 4222
      protocol: TCP
    - name: cluster-port
      port: 6222
      protocol: TCP
    - name: console-port
      port: 8222
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: accelleran-cbrs-nats-exernal
  labels:
    release: release-name
    app: accelleran-cbrs-nats
spec:
  selector:
    release: release-name
    app: accelleran-cbrs-nats
  type: NodePort
  ports:
    - name: nats-port
      port: 4222
      nodePort: 31000
      protocol: TCP
    - name: cluster-port
      port: 6222
      nodePort: 31001
      protocol: TCP
    - name: console-port
      port: 8222
      nodePort: 31002
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: accelleran-cbrs-redis
  labels:
    release: release-name
    app: accelleran-cbrs-redis
spec:
  selector:
    release: release-name
    app: accelleran-cbrs-redis
  ports:
    - name: redis-port
      port: 6379
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: accelleran-cbrs-redis-exernal
  labels:
    release: release-name
    app: accelleran-cbrs-redis
spec:
  selector:
    release: release-name
    app: accelleran-cbrs-redis
  type: NodePort
  ports:
    - name: redis-port
      port: 6379
      nodePort: 32000
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: accelleran-cbrs-ricweb
  labels:
    release: release-name
    app: accelleran-cbrs-ricweb
spec:
  selector:
    release: release-name
    app: accelleran-cbrs-ricweb
  ports:
    - name: ric-web-port
      port: 8080
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: accelleran-cbrs-ricweb-exernal
  labels:
    release: release-name
    app: accelleran-cbrs-ricweb
spec:
  selector:
    release: release-name
    app: accelleran-cbrs-ricweb
  type: NodePort
  ports:
    - name: ric-web-port
      port: 8080
      nodePort: 30000
      protocol: TCP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: accelleran-cbrs-nats
  labels:
    release: release-name
    app: accelleran-cbrs-nats
spec:
  selector:
    matchLabels:
      release: release-name
      app: accelleran-cbrs-nats
  serviceName: accelleran-cbrs-nats
  template:
    metadata:
      labels:
        release: release-name
        app: accelleran-cbrs-nats
    spec:
      serviceAccountName: accelleran-cbrs-nats
      containers:
        - name: nats
          image: registry.aether.opennetworking.org/aether/accelleran-cu-nats:v1.0.0
          imagePullPolicy: IfNotPresent
          command:
            - /entrypoint.sh
          args:
            - /usr/bin/gnatsd
            - -c
            - /etc/gnatsd.conf
          resources:
            limits:
              cpu: 3
              memory: 1Gi
            requests:
              cpu: 3
              memory: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: accelleran-cbrs-redis
  labels:
    release: release-name
    app: accelleran-cbrs-redis
spec:
  selector:
    matchLabels:
      release: release-name
      app: accelleran-cbrs-redis
  serviceName: accelleran-cbrs-redis
  template:
    metadata:
      labels:
        release: release-name
        app: accelleran-cbrs-redis
    spec:
      serviceAccountName: accelleran-cbrs-redis
      containers:
        - name: redis
          image: registry.aether.opennetworking.org/aether/accelleran-cu-redis:v1.0.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - /usr/local/bin/redis-server /etc/redis.conf
          resources:
            limits:
              cpu: 3
              memory: 1Gi
            requests:
              cpu: 3
              memory: 1Gi
          volumeMounts:
            - mountPath: /data
              name: redis-data-volume
      volumes:
        - name: redis-data-volume
          hostPath:
            path: /tmp/redis-storage
            type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: accelleran-cbrs-ric
  labels:
    release: release-name
    app: accelleran-cbrs-ric
spec:
  selector:
    matchLabels:
      release: release-name
      app: accelleran-cbrs-ric
  serviceName: accelleran-cbrs-ric
  template:
    metadata:
      labels:
        release: release-name
        app: accelleran-cbrs-ric
    spec:
      serviceAccountName: accelleran-cbrs-ric
      initContainers:
        - name: redis-init-dep-check
          image: quay.io/stackanetes/kubernetes-entrypoint:v0.3.1
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: COMMAND
              value: echo done
            - name: DEPENDENCY_JOBS
              value: job-redis-init
      containers:
        - name: ric
          image: registry.aether.opennetworking.org/aether/accelleran-cu-ric:v1.0.0
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            capabilities:
              drop:
                "": NET_RAW
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          env:
            - name: ZLOG_CONF_PATH
              value: /zlog.conf
            - name: BOOTSTRAP_FILENAME
              value: /bootstrap
            - name: LD_LIBRARY_PATH
              value: /data/
            - name: FAP_DB_PATH
              value: /data/
          command:
            - /data/ric
          resources:
            limits:
              cpu: 3
              memory: 1Gi
            requests:
              cpu: 3
              memory: 1Gi
          volumeMounts:
            - name: ric-config-volume
              mountPath: /bootstrap
              subPath: bootstrap
            - name: ric-config-volume
              mountPath: /zlog.conf
              subPath: zlog.conf
      volumes:
        - name: ric-config-volume
          configMap:
            name: accelleran-cbrs-ric-cm
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: accelleran-cbrs-ricweb
  labels:
    release: release-name
    app: accelleran-cbrs-ricweb
spec:
  selector:
    matchLabels:
      release: release-name
      app: accelleran-cbrs-ricweb
  serviceName: accelleran-cbrs-ricweb
  template:
    metadata:
      labels:
        release: release-name
        app: accelleran-cbrs-ricweb
    spec:
      serviceAccountName: accelleran-cbrs-ricweb
      initContainers:
        - name: accelleran-cbrs-ric-dep-check
          image: quay.io/stackanetes/kubernetes-entrypoint:v0.3.1
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: COMMAND
              value: echo done
            - name: DEPENDENCY_POD_JSON
              value: '[{"labels": {"app": "accelleran-cbrs-ric"}, "requireSameNode": false}]'
      containers:
        - name: ric-web
          image: registry.aether.opennetworking.org/aether/accelleran-cu-ricweb:v1.0.0
          imagePullPolicy: IfNotPresent
          env:
            - name: NATS_URL
              value: accelleran-cbrs-nats:4222
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-redis-init
  labels:
    release: release-name
    app: accelleran-cbrs-redis
spec:
  template:
    metadata:
      release: release-name
      app: accelleran-cbrs-redis
    spec:
      serviceAccountName: accelleran-cbrs-redis
      restartPolicy: OnFailure
      initContainers:
        - name: accelleran-cbrs-redis-dep-check
          image: quay.io/stackanetes/kubernetes-entrypoint:v0.3.1
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: COMMAND
              value: echo done
            - name: DEPENDENCY_POD_JSON
              value: '[{"labels": {"app": "accelleran-cbrs-redis"}, "requireSameNode": false}]'
      containers:
        - name: accelleran-cbrs-redis-init
          image: docker.io/redis:5.0.6-alpine3.10
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - redis-cli -h accelleran-cbrs-redis -p 6379 flushall; redis-cli -h accelleran-cbrs-redis -p 6379 set NATS_SERVICE_URL "nat://119.0.0.30:31000"; redis-cli -h accelleran-cbrs-redis -p 6379 keys '*';
