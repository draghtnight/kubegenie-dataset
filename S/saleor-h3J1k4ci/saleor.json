[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.8.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "h3J1k4ci"
    },
    "type": "Opaque",
    "data": {
      "postgresql-postgres-password": "OVZBdGh3TWpTMw==",
      "postgresql-password": "cHJpdmFjeS1kaXNhcnJheS1tb3Aw"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-redis",
      "namespace": "h3J1k4ci",
      "labels": {
        "app": "redis",
        "chart": "redis-10.6.13",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "redis-password": "dzY3MzZpdS0xMzQ2NzI2aHoxMi01NzgtMmgyMjh1MzU3NmpoMjQ2NTgtNDU2aA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-saleor"
    },
    "type": "Opaque",
    "data": {
      "EMAIL_URL": "",
      "SECRET_KEY": "c2VmYjY4LTIxMzNyLTI0NTc3di10Z25xZXRiLXFlNXpi",
      "DATABASE_URL": "cG9zdGdyZXM6Ly9zYWxlb3I6cHJpdmFjeS1kaXNhcnJheS1tb3AwQHJlbGVhc2UtbmFtZS1zYWxlb3ItcG9zdGdyZXNxbDo1NDMyL3NhbGVvcg==",
      "REDIS_URL": "cmVkaXM6Ly86dzY3MzZpdS0xMzQ2NzI2aHoxMi01NzgtMmgyMjh1MzU3NmpoMjQ2NTgtNDU2aEByZWxlYXNlLW5hbWUtc2FsZW9yLXJlZGlzLW1hc3Rlcjo2Mzc5LzA=",
      "CELERY_BROKER_URL": "cmVkaXM6Ly86dzY3MzZpdS0xMzQ2NzI2aHoxMi01NzgtMmgyMjh1MzU3NmpoMjQ2NTgtNDU2aEByZWxlYXNlLW5hbWUtc2FsZW9yLXJlZGlzLW1hc3Rlcjo2Mzc5LzE=",
      "MAX_CHECKOUT_LINE_QUANTITY": "MTAw",
      "AWS_S3_ENDPOINT_URL": "aHR0cHM6Ly9zMy5leGFtcGxlLmNvbS8=",
      "AWS_ACCESS_KEY_ID": "MTIzNDU2ZmV0cmc=",
      "AWS_SECRET_ACCESS_KEY": "MTIzNDU2NzY4OXE=",
      "AWS_STORAGE_BUCKET_NAME": "c3RhdGlj",
      "AWS_MEDIA_BUCKET_NAME": "c3RhdGlj",
      "AWS_QUERYSTRING_AUTH": "RmFsc2U=",
      "AWS_QUERYSTRING_EXPIRE": "NDMyMDAw",
      "JWT_TTL_REFRESH": "MzY1IGRheXM=",
      "JWT_TTL_ACCESS": "MyBkYXlz",
      "RSA_PRIVATE_KEY": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlDWFFJQkFBS0JnUUMwMkdtRWVZcFhndUJDbkRneEdvTW9jVzZzb0ZpR0pQM2NuWWJ1N1lUM0xXdGtEejl4CktoektsZy9JSEFYaEFuelFoYldDSS9XOURuc29MNXFpdTNlQThjNFBWTzQzRE1HUHFwSEMvelU1Y3JwOXRJVUIKa1RCRnlBQUJPd29jWk9iUDVka2dRUTRtckRCYkhwODFvKzh1RGpzdFJ1OWtNTUREZGoyL2drT0c4UUlEQVFBQgpBb0dCQUs1b1Y3cnZERUJCYzg1Sm90ZVlYZzFPK0JGN3dtUDhvT2QyOUg3UWluOW5TajZCaGdtNU4zTVpMYmNyCmIzQUZXaUl3RVZDbEpZVml4ZHVIclhacm5WOFc4Z3FIV2FBSk9OSjBiSWdCVWhwRERUdllPZGM0bmdiTFovZk0KQk9rNUw5V05CZGduZzdUUFMzSVg1VWduZEtqemlpY1dwWkVkR2dLZ1NCankyM2xSQWtFQTlwbkJGYVBydlFOQwppTDBOK0YxKzVUUXgxSThvbnlsWndZWWRWTll6cnkrcWpUZjNDZlNpMlRoYkV1S2pZSHpseU5TUDRSSlYzYjJpCm9leGpTK01mSXdKQkFMdTlDbGRSQVF4b0M3aThYdWlCUTFJK3pibFlaMGdxVjBIY0V4Z2lDS0p1YkNTd29QQloKSnpSQi9LRkhieXNDNFF6dEQzeFZFK01EeHdQZjJQTzR6TnNDUUhYOFFvR1VHQ29xOFI1ek5jZnJFOWVlRFdsaAp4VkhCZXd3NG1yZ0lkRm9ST0V5d3hpV2hRbmtqbVkrRG1CK0dJbnJnR0tiYkd2SW8xVE1iNHJaZ1NIa0NRRHRYCkxteVpDeGJMMEdDdEVlYTE3UHlUSTEyaFpzdjFyaTBBRGYwRHpPemlzRVlNbW1JK0c5azF2aytRRDhCdG9Zci8KWjNTcVE2WHU3TG41eUU2SkxCOENRUURpc0xIc2gwQ1Y2SVdqclpqMmhtelBnOTlrSkpMSmpvZG5DZEFMZG1wOApqZk94M2MrZE1UdWR4a3p1WFFHWFBZdUhxWWJVbUhacTc1VmQyeklZMTlrQwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis",
      "namespace": "h3J1k4ci",
      "labels": {
        "app": "redis",
        "chart": "redis-10.6.13",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "redis.conf": "# User-supplied configuration:\n# Enable AOF https://redis.io/topics/persistence#append-only-file\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"",
      "master.conf": "dir /data\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"",
      "replica.conf": "dir /data\nslave-read-only yes\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-health",
      "namespace": "h3J1k4ci",
      "labels": {
        "app": "redis",
        "chart": "redis-10.6.13",
        "heritage": "Helm",
        "release": "release-name"
      }
    },
    "data": {
      "ping_readiness_local.sh": "#!/bin/bash\nno_auth_warning=$([[ \"$(redis-cli --version)\" =~ (redis-cli 5.*) ]] && echo --no-auth-warning)\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -a $REDIS_PASSWORD $no_auth_warning \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_local.sh": "#!/bin/bash\nno_auth_warning=$([[ \"$(redis-cli --version)\" =~ (redis-cli 5.*) ]] && echo --no-auth-warning)\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -a $REDIS_PASSWORD $no_auth_warning \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_master.sh": "#!/bin/bash\nno_auth_warning=$([[ \"$(redis-cli --version)\" =~ (redis-cli 5.*) ]] && echo --no-auth-warning)\n response=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -a $REDIS_MASTER_PASSWORD $no_auth_warning \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_master.sh": "#!/bin/bash\nno_auth_warning=$([[ \"$(redis-cli --version)\" =~ (redis-cli 5.*) ]] && echo --no-auth-warning)\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -a $REDIS_MASTER_PASSWORD $no_auth_warning \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"$response\" != \"LOADING Redis is loading the dataset in memory\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql-headless",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.8.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      },
      "namespace": "h3J1k4ci"
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "publishNotReadyAddresses": true,
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.8.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null,
      "namespace": "h3J1k4ci"
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name",
        "role": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-headless",
      "namespace": "h3J1k4ci",
      "labels": {
        "app": "redis",
        "chart": "redis-10.6.13",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "redis",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "h3J1k4ci",
      "labels": {
        "app": "redis",
        "chart": "redis-10.6.13",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "redis",
        "release": "release-name",
        "role": "master"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-saleor",
      "labels": {
        "helm.sh/chart": "saleor-0.1.51",
        "app.kubernetes.io/name": "saleor",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8000,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "saleor",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-saleor-celery",
      "labels": {
        "helm.sh/chart": "saleor-0.1.51",
        "app.kubernetes.io/name": "saleor",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "celery-worker",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "celery-worker",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "imagePullSecrets": [
            {
              "name": "github"
            }
          ],
          "serviceAccountName": "default",
          "securityContext": {},
          "containers": [
            {
              "name": "saleor",
              "securityContext": {
                "runAsUser": 10691,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "registry.gitlab.com/trieb.work/saleor:3.0.0",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "DEFAULT_CURRENCY",
                  "value": "EUR"
                },
                {
                  "name": "DEFAULT_COUNTRY",
                  "value": "DE"
                },
                {
                  "name": "DEBUG",
                  "value": "False"
                },
                {
                  "name": "GUNICORN_CMD_ARGS",
                  "value": "--access-logfile='-'"
                },
                {
                  "name": "ALLOWED_HOSTS",
                  "value": "test-api.example.com"
                },
                {
                  "name": "ALLOWED_CLIENT_HOSTS",
                  "value": "test-api.example.com"
                }
              ],
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-saleor"
                  }
                }
              ],
              "args": [
                "celery",
                "--app=saleor",
                "--app=saleor.celeryconf:app",
                "worker",
                "--loglevel=INFO"
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "timeout 10 celery -b $CELERY_BROKER_URL inspect ping -d celery@$HOSTNAME"
                  ]
                },
                "failureThreshold": 1,
                "initialDelaySeconds": 40,
                "periodSeconds": 40,
                "successThreshold": 1,
                "timeoutSeconds": 10
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "timeout 10 celery -b $CELERY_BROKER_URL inspect ping -d celery@$HOSTNAME"
                  ]
                },
                "failureThreshold": 1,
                "initialDelaySeconds": 40,
                "periodSeconds": 40,
                "successThreshold": 1,
                "timeoutSeconds": 10
              },
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "400Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 100
                }
              ]
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-saleor",
      "labels": {
        "helm.sh/chart": "saleor-0.1.51",
        "app.kubernetes.io/name": "saleor",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 2,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "saleor",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "saleor",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "imagePullSecrets": [
            {
              "name": "github"
            }
          ],
          "serviceAccountName": "default",
          "securityContext": {},
          "containers": [
            {
              "name": "saleor",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "registry.gitlab.com/trieb.work/saleor:3.0.0",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "DEFAULT_CURRENCY",
                  "value": "EUR"
                },
                {
                  "name": "DEFAULT_COUNTRY",
                  "value": "DE"
                },
                {
                  "name": "DEBUG",
                  "value": "False"
                },
                {
                  "name": "GUNICORN_CMD_ARGS",
                  "value": "--access-logfile='-'"
                },
                {
                  "name": "ALLOWED_HOSTS",
                  "value": "test-api.example.com"
                },
                {
                  "name": "ALLOWED_CLIENT_HOSTS",
                  "value": "test-api.example.com"
                },
                {
                  "name": "SENTRY_DSN",
                  "value": null
                },
                {
                  "name": "KEEP_ALIVE",
                  "value": "20"
                }
              ],
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-saleor"
                  }
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8000,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "httpHeaders": [
                    {
                      "name": "Host",
                      "value": "kube-probe"
                    }
                  ],
                  "path": "/health/",
                  "port": 8000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 8,
                "successThreshold": 1,
                "timeoutSeconds": 3
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "httpHeaders": [
                    {
                      "name": "Host",
                      "value": "kube-probe"
                    }
                  ],
                  "path": "/health/",
                  "port": 8000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 8,
                "successThreshold": 1,
                "timeoutSeconds": 3
              },
              "resources": {
                "requests": {
                  "cpu": "300m",
                  "memory": "600Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/cache",
                  "name": "cache-volume"
                }
              ]
            }
          ],
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 100
                }
              ]
            }
          },
          "volumes": [
            {
              "name": "cache-volume",
              "emptyDir": {
                "medium": "Memory"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "autoscaling/v2beta2",
    "kind": "HorizontalPodAutoscaler",
    "metadata": {
      "annotations": null,
      "labels": null,
      "name": "release-name-saleor"
    },
    "spec": {
      "maxReplicas": 3,
      "metrics": [
        {
          "resource": {
            "name": "cpu",
            "target": {
              "averageUtilization": 80,
              "type": "Utilization"
            }
          },
          "type": "Resource"
        }
      ],
      "minReplicas": 2,
      "scaleTargetRef": {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "name": "release-name-saleor"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.8.0",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null,
      "namespace": "h3J1k4ci"
    },
    "spec": {
      "serviceName": "release-name-postgresql-headless",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "postgresql",
          "app.kubernetes.io/instance": "release-name",
          "role": "primary"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-postgresql",
          "labels": {
            "app.kubernetes.io/name": "postgresql",
            "helm.sh/chart": "postgresql-10.8.0",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "role": "primary",
            "app.kubernetes.io/component": "primary"
          }
        },
        "spec": {
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "postgresql",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "automountServiceAccountToken": false,
          "containers": [
            {
              "name": "release-name-postgresql",
              "image": "docker.io/bitnami/postgresql:11.12.0-debian-10-r44",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "limits": {
                  "memory": "300Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "200Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "securityContext": {
                "runAsUser": 10905,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432"
                },
                {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql"
                },
                {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data"
                },
                {
                  "name": "POSTGRES_POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-postgres-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "saleor"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "saleor"
                },
                {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_ENABLE_TLS",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_LOG_HOSTNAME",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_CONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_DISCONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PGAUDIT_LOG_CATALOG",
                  "value": "off"
                },
                {
                  "name": "POSTGRESQL_CLIENT_MIN_MESSAGES",
                  "value": "error"
                },
                {
                  "name": "POSTGRESQL_SHARED_PRELOAD_LIBRARIES",
                  "value": "pgaudit"
                }
              ],
              "ports": [
                {
                  "name": "tcp-postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \"saleor\" -d \"dbname=saleor\" -h 127.0.0.1 -p 5432"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "exec pg_isready -U \"saleor\" -d \"dbname=saleor\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": [
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql",
                  "subPath": null
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "dshm",
              "emptyDir": {
                "medium": "Memory"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "10Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "h3J1k4ci",
      "labels": {
        "app": "redis",
        "chart": "redis-10.6.13",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "redis",
          "release": "release-name",
          "role": "master"
        }
      },
      "serviceName": "release-name-redis-headless",
      "template": {
        "metadata": {
          "labels": {
            "app": "redis",
            "chart": "redis-10.6.13",
            "release": "release-name",
            "role": "master"
          },
          "annotations": {
            "checksum/health": "a18bcb000847fb4f1400037f5fb8c57f4e72df33e32c599ff8eddea38bb337b0",
            "checksum/configmap": "53ad91df4c235ac8f2b0ed93074d361df363b0be809f1bbae6d79296fc9f9033",
            "checksum/secret": "1cdbdd8db083e6a28f7de8e392384d23d59d2ea282a855d6c940f7919d4e5d72"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "default",
          "containers": [
            {
              "name": "redis",
              "image": "docker.io/bitnami/redis:6.0.1-debian-10-r1",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 11321,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "command": [
                "/bin/bash",
                "-c",
                "if [[ -n $REDIS_PASSWORD_FILE ]]; then\n  password_aux=`cat ${REDIS_PASSWORD_FILE}`\n  export REDIS_PASSWORD=$password_aux\nfi\nif [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n  cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/master.conf\")\n/run.sh ${ARGS[@]}\n"
              ],
              "env": [
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "master"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-redis",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 5"
                  ]
                }
              },
              "resources": {
                "limits": {
                  "cpu": "80m",
                  "memory": "80Mi"
                },
                "requests": {
                  "cpu": "30m",
                  "memory": "70Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc/"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "health",
              "configMap": {
                "name": "release-name-redis-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-redis"
              }
            },
            {
              "name": "redis-data",
              "emptyDir": {}
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            }
          ]
        }
      },
      "updateStrategy": {
        "type": "RollingUpdate"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-saleor-test-connection",
      "labels": {
        "helm.sh/chart": "saleor-0.1.51",
        "app.kubernetes.io/name": "saleor",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-saleor:8000"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  }
]