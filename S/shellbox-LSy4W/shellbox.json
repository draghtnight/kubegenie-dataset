[
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": {
      "name": "shellbox-release-name",
      "labels": {
        "app": "shellbox",
        "chart": "shellbox-1.0.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "podSelector": {
        "matchLabels": {
          "app": "shellbox",
          "release": "release-name"
        }
      },
      "policyTypes": [
        "Ingress"
      ],
      "ingress": [
        {
          "ports": [
            {
              "port": 8080,
              "protocol": "TCP"
            },
            {
              "port": 9102,
              "protocol": "TCP"
            },
            {
              "port": 9117,
              "protocol": "TCP"
            },
            {
              "port": 9118,
              "protocol": "TCP"
            },
            {
              "port": 9181,
              "protocol": "TCP"
            }
          ]
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "shellbox-release-name-secret-config",
      "labels": {
        "app": "shellbox",
        "chart": "shellbox-1.0.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque"
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "shellbox-release-name-metrics-config",
      "labels": {
        "app": "shellbox",
        "chart": "shellbox-1.0.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "prometheus-statsd.conf": "# Note: DO NOT REMOVE THIS FILE FROM THE CHART\n# prometheus-statsd-exporter won't work without it.\n# Instead keep it fully commented if you have no valid mappings\n#\n# This file should contain the prometheus-statsd-exporter configuration\n# For reference on how to write it, see\n# https://github.com/prometheus/statsd_exporter/blob/master/README.md\n#\n# You can map your statsd metrics to prometheus ones, by mapping the hierarchical\n#  names you get for statsd into prometheus labels; so say you have a metric\n# called serviceA.dcA.serverA.endpoints.foobar.time   and you want to transform\n# it to a metrics called \"mean_response_time\" with labels\n#  {service: serviceA, datacenter: dcA, host: serverA, endpoint: foobar} you\n# need to create a mapping as follows:\n#\n#  mappings:\n#    - match: serviceA.*.*.endpoints.*.mean_response_time\n#      name: \"mean_response_time\"\n#      labels:\n#        service: $1\n#        datacenter: $2\n#        host: $3\n#        endpoint: $4\n#\n# If the app is a service-runner based one, consider uncommenting the following\n# Note: statsd timer metrics are millisecond based, but prometheus-statsd-exporter makes them\n# second based to conform to prometheus, so all metrics are divided by 1000\n#mappings:\n#  - match: '*.gc.*'\n#    name: service_runner_gc_seconds\n#    timer_type: histogram\n#    buckets: [5e-4, 1e-3, 5e-3, 10e-3, 15e-3, 30e-3, 50e-3]\n#    labels:\n#      service: $1\n#      event: $2\n#\n#  - match: '*.heap.*'\n#    # service-runner abuses timer for heap data\n#    name: service_runner_${2}_heap_kilobytes\n#    timer_type: histogram\n#    buckets: [1e+3, 1e+4, 1e+5, 1e+6, 1e+7]\n#    labels:\n#      service: $1\n#\n# This will match standard service-runner request metrics of the form:\n#    <service_name>.<endpoint>.<method>.<http_status>, e.g.:\n#    mathoid.-info.GET.200\n#\n#  - match: '^([a-z0-9-]+)\\.([^.]+)\\.(GET|HEAD|POST|PUT|DELETE|CONNECT|OPTIONS|TRACE|PATCH)\\.([0-9][0-9][0-9]|ALL|[0-9]xx)$'\n#    match_type: regex\n#    name: service_runner_request_duration_seconds\n#    timer_type: histogram\n#    buckets:  [0.01, 0.05, 0.1, 0.3, 1]\n#    labels:\n#      service: $1\n#      uri: $2\n#      method: $3\n#      status: $4"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "shellbox-release-name-shellbox-config",
      "labels": {
        "app": "shellbox",
        "chart": "shellbox-1.0.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "config.json": "{\n\t\"url\": \"http://localhost/\",\n\t\"tempDir\": \"/tmp\",\n\t\"logFormat\": \"[%datetime%] %channel%.%level_name%: %message% %context% %extra%\\n\",\n\t\"logFile\": false,\n\t\"jsonLogFile\": false,\n\t\"logToStderr\": false,\n\t\"jsonLogToStderr\": true,\n\t\"syslogIdent\": \"shellbox\",\n\t\"logToSyslog\": false,\n\t\"logToClient\": true,\n\t\"allowedActions\": [ \"call\", \"shell\" ],\n\t\"useSystemd\": false,\n\t\"useBashWrapper\": true,\n\t\"useFirejail\": false,\n\t\"firejailPath\": \"/usr/bin/firejail\",\n\t\"firejailProfile\": false\n}"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "shellbox-release-name-shellbox-httpd-config",
      "labels": {
        "app": "shellbox",
        "chart": "shellbox-1.0.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "90-shellbox.conf": "SetEnvIf Request_URI . SHELLBOX_SECRET_KEY=@@ CHANGE THIS @@"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "shellbox-release-name",
      "labels": {
        "app": "shellbox",
        "chart": "shellbox-1.0.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "NodePort",
      "selector": {
        "app": "shellbox",
        "release": "release-name",
        "routed_via": "release-name"
      },
      "ports": [
        {
          "name": "http",
          "targetPort": 8080,
          "port": 8080
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "shellbox-release-name",
      "labels": {
        "app": "shellbox",
        "chart": "shellbox-1.0.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "shellbox",
          "release": "release-name"
        }
      },
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "shellbox",
            "release": "release-name",
            "routed_via": "release-name"
          },
          "annotations": {
            "checksum/secrets": "c2db11f3c2dd69128a45139b832669929c2af08f3c43deab6fdb35f356def40c",
            "prometheus.io/scrape": "true",
            "checksum/prometheus-statsd": "05c9753b286b2422d13f490acd3b0500f25b041ad1aee12e3d5f5bcc5a5ae6ff",
            "checksum/apache": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "shellbox-release-name-httpd",
              "image": "docker-registry.wikimedia.org/httpd-fcgi:2.4.38-4",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "FCGI_MODE",
                  "value": "FCGI_TCP"
                },
                {
                  "name": "SERVERGROUP",
                  "value": "main"
                },
                {
                  "name": "APACHE_RUN_PORT",
                  "value": "8080"
                }
              ],
              "ports": [
                {
                  "name": "httpd",
                  "containerPort": 8080
                },
                {
                  "name": "php-metrics",
                  "containerPort": 9181
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 8080
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/healthz",
                  "port": "php-metrics"
                }
              },
              "resources": {
                "requests": {
                  "cpu": "200m",
                  "memory": "200Mi"
                },
                "limits": {
                  "cpu": 1,
                  "memory": "400Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "shellbox-httpd-config",
                  "mountPath": "/etc/apache2/conf-enabled/90-shellbox.conf",
                  "subPath": "90-shellbox.conf",
                  "readOnly": true
                }
              ]
            },
            {
              "name": "shellbox-release-name-app",
              "image": "docker-registry.wikimedia.org/wikimedia/mediawiki-libs-shellbox:score",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "SERVERGROUP",
                  "value": "main"
                },
                {
                  "name": "FCGI_MODE",
                  "value": "FCGI_TCP"
                },
                {
                  "name": "PHP__opcache__memory_consumption",
                  "value": "200"
                },
                {
                  "name": "PHP__opcache__max_accelerated_files",
                  "value": "1000"
                },
                {
                  "name": "FPM__request_slowlog_timeout",
                  "value": "0"
                },
                {
                  "name": "FPM__request_terminate_timeout",
                  "value": "60"
                },
                {
                  "name": "PHP__apc__shm_size",
                  "value": "200M"
                },
                {
                  "name": "FPM__pm__max_children",
                  "value": "2"
                },
                {
                  "name": "FCGI_URL",
                  "value": "0.0.0.0:9000"
                },
                {
                  "name": "FCGI_ALLOW",
                  "value": "127.0.0.1"
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 9000
                },
                "initialDelaySeconds": 1,
                "periodSeconds": 5
              },
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "1024Mi"
                },
                "limits": {
                  "cpu": 1,
                  "memory": "2048Mi"
                }
              },
              "volumeMounts": [
                {
                  "name": "shellbox-config",
                  "mountPath": "/srv/app/config",
                  "readOnly": true
                }
              ]
            },
            {
              "name": "shellbox-release-name-httpd-exporter",
              "image": "docker-registry.wikimedia.org/prometheus-apache-exporter:0.0.3",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "-scrape_uri",
                "http://127.0.0.1:9181/server-status?auto"
              ],
              "ports": [
                {
                  "name": "httpd-metrics",
                  "containerPort": 9117
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 9117
                }
              }
            },
            {
              "name": "shellbox-release-name-php-fpm-exporter",
              "image": "docker-registry.wikimedia.org/prometheus-php-fpm-exporter:0.0.2",
              "args": [
                "--endpoint=http://127.0.0.1:9181/fpm-status",
                "--addr=0.0.0.0:9118"
              ],
              "ports": [
                {
                  "name": "fpm-metrics",
                  "containerPort": 9118
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 9118
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "release-name-metrics-exporter",
              "configMap": {
                "name": "shellbox-release-name-metrics-config"
              }
            },
            {
              "name": "shellbox-config",
              "configMap": {
                "name": "shellbox-release-name-shellbox-config"
              }
            },
            {
              "name": "shellbox-httpd-config",
              "configMap": {
                "name": "shellbox-release-name-shellbox-httpd-config"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "shellbox-release-name-service-checker",
      "annotations": {
        "helm.sh/hook": "test",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "shellbox-release-name-service-checker",
          "image": "docker-registry.wikimedia.org/service-checker",
          "imagePullPolicy": "IfNotPresent",
          "args": [
            "-t",
            "5",
            "$(SHELLBOX_RELEASE_NAME_SERVICE_HOST)",
            "http://shellbox-release-name:8080"
          ]
        }
      ],
      "dnsPolicy": "ClusterFirst",
      "restartPolicy": "Never"
    }
  }
]