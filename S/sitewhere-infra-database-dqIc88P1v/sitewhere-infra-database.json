[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "labels": {
        "app": "mongodb",
        "chart": "mongodb-5.2.0",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-mongodb-arbiter"
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "mongodb",
          "release": "release-name",
          "component": "arbiter"
        }
      },
      "minAvailable": 1
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "labels": {
        "app": "mongodb",
        "chart": "mongodb-5.2.0",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-mongodb-primary"
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "mongodb",
          "release": "release-name",
          "component": "primary"
        }
      },
      "minAvailable": 1
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "labels": {
        "app": "mongodb",
        "chart": "mongodb-5.2.0",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-mongodb-secondary"
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "mongodb",
          "release": "release-name",
          "component": "secondary"
        }
      },
      "minAvailable": 1
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-tenantsdb",
      "labels": {
        "app": "tenantsdb",
        "chart": "tenantsdb-8.6.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "postgresql-password": "bUJnaVo0UG9adA=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-influxdb",
      "labels": {
        "app": "release-name-influxdb",
        "chart": "influxdb-3.0.2",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "influxdb.conf": "reporting-disabled = false\nbind-address = \":8088\"\n\n[meta]\n  dir = \"/var/lib/influxdb/meta\"\n  retention-autocreate = true\n  logging-enabled = true\n\n[data]\n  dir = \"/var/lib/influxdb/data\"\n  wal-dir = \"/var/lib/influxdb/wal\"\n  query-log-enabled = true\n  cache-max-memory-size = 1073741824\n  cache-snapshot-memory-size = 26214400\n  cache-snapshot-write-cold-duration = \"10m0s\"\n  compact-full-write-cold-duration = \"4h0m0s\"\n  max-series-per-database = 1000000\n  max-values-per-tag = 100000\n  index-version = \"inmem\"\n  trace-logging-enabled = false\n\n[coordinator]\n  write-timeout = \"10s\"\n  max-concurrent-queries = 0\n  query-timeout = \"0s\"\n  log-queries-after = \"0s\"\n  max-select-point = 0\n  max-select-series = 0\n  max-select-buckets = 0\n\n[retention]\n  enabled = true\n  check-interval = \"30m0s\"\n\n[shard-precreation]\n  enabled = true\n  check-interval = \"10m0s\"\n  advance-period = \"30m0s\"\n\n[admin]\n  enabled = false\n  bind-address = \":8083\"\n  https-enabled = false\n  https-certificate = \"/etc/ssl/influxdb.pem\"\n\n[monitor]\n  store-enabled = true\n  store-database = \"_internal\"\n  store-interval = \"10s\"\n\n[subscriber]\n  enabled = true\n  http-timeout = \"30s\"\n  insecure-skip-verify = false\n  ca-certs = \"\"\n  write-concurrency = 40\n  write-buffer-size = 1000\n\n[http]\n  enabled = true\n  bind-address = \":8086\"\n  flux-enabled = true\n  auth-enabled = false\n  log-enabled = true\n  write-tracing = false\n  pprof-enabled = true\n  https-enabled = false\n  https-certificate = \"/etc/ssl/influxdb.pem\"\n  https-private-key = \"\"\n  max-row-limit = 10000\n  max-connection-limit = 0\n  shared-secret = \"beetlejuicebeetlejuicebeetlejuice\"\n  realm = \"InfluxDB\"\n  unix-socket-enabled = false\n  bind-socket = \"/var/run/influxdb.sock\"\n\n# TODO: allow multiple graphite listeners\n\n[[graphite]]\n  enabled = false\n  bind-address = \":2003\"\n  database = \"graphite\"\n  retention-policy = \"autogen\"\n  protocol = \"tcp\"\n  batch-size = 5000\n  batch-pending = 10\n  batch-timeout = \"1s\"\n  consistency-level = \"one\"\n  separator = \".\"\n  udp-read-buffer = 0\n\n# TODO: allow multiple collectd listeners with templates\n\n[[collectd]]\n  enabled = false\n  bind-address = \":25826\"\n  database = \"collectd\"\n  retention-policy = \"autogen\"\n  batch-size = 5000\n  batch-pending = 10\n  batch-timeout = \"10s\"\n  read-buffer = 0\n  typesdb = \"/usr/share/collectd/types.db\"\n  security-level = \"none\"\n  auth-file = \"/etc/collectd/auth_file\"\n\n# TODO: allow multiple opentsdb listeners with templates\n\n[[opentsdb]]\n  enabled = false\n  bind-address = \":4242\"\n  database = \"opentsdb\"\n  retention-policy = \"autogen\"\n  consistency-level = \"one\"\n  tls-enabled = false\n  certificate = \"/etc/ssl/influxdb.pem\"\n  batch-size = 1000\n  batch-pending = 5\n  batch-timeout = \"1s\"\n  log-point-errors = true\n\n# TODO: allow multiple udp listeners with templates\n\n[[udp]]\n  enabled = false\n  bind-address = \":8089\"\n  database = \"udp\"\n  retention-policy = \"autogen\"\n  batch-size = 5000\n  batch-pending = 10\n  read-buffer = 0\n  batch-timeout = \"1s\"\n  precision = \"ns\"\n\n[continuous_queries]\n  log-enabled = true\n  enabled = true\n  run-interval = \"1s\"\n\n[logging]\n  format =  \"auto\"\n  level =  \"info\"\n  supress-logo = false\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-warp10",
      "labels": {
        "app.kubernetes.io/name": "warp10",
        "helm.sh/chart": "warp10-0.2.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "wrap10.conf": ""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-cassandra",
      "labels": {
        "app": "cassandra",
        "chart": "cassandra-0.10.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "clusterIP": "None",
      "type": "ClusterIP",
      "ports": [
        {
          "name": "intra",
          "port": 7000,
          "targetPort": 7000
        },
        {
          "name": "tls",
          "port": 7001,
          "targetPort": 7001
        },
        {
          "name": "jmx",
          "port": 7199,
          "targetPort": 7199
        },
        {
          "name": "cql",
          "port": 9042,
          "targetPort": 9042
        },
        {
          "name": "thrift",
          "port": 9160,
          "targetPort": 9160
        }
      ],
      "selector": {
        "app": "cassandra",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-influxdb",
      "labels": {
        "app": "release-name-influxdb",
        "chart": "influxdb-3.0.2",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "api",
          "port": 8086,
          "targetPort": 8086
        },
        {
          "name": "rpc",
          "port": 8088,
          "targetPort": 8088
        }
      ],
      "selector": {
        "app": "release-name-influxdb"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-mongodb-headless",
      "labels": {
        "app": "mongodb",
        "chart": "mongodb-5.2.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "mongodb",
          "port": 27017
        }
      ],
      "selector": {
        "app": "mongodb",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-mongodb",
      "labels": {
        "app": "mongodb",
        "chart": "mongodb-5.2.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "mongodb",
          "port": 27017,
          "targetPort": "mongodb"
        }
      ],
      "selector": {
        "app": "mongodb",
        "release": "release-name",
        "component": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-tenantsdb-headless",
      "labels": {
        "app": "tenantsdb",
        "chart": "tenantsdb-8.6.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app": "tenantsdb",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-tenantsdb",
      "labels": {
        "app": "tenantsdb",
        "chart": "tenantsdb-8.6.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app": "tenantsdb",
        "release": "release-name",
        "role": "master"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-warp10-headless",
      "labels": {
        "app.kubernetes.io/name": "warp10",
        "helm.sh/chart": "warp10-0.2.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "ports": [
        {
          "name": "api",
          "port": 8080,
          "targetPort": 8080
        },
        {
          "name": "studio",
          "port": 8081,
          "targetPort": 8081
        }
      ],
      "clusterIP": "None",
      "selector": {
        "app": "warp10",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-warp10",
      "labels": {
        "app.kubernetes.io/name": "warp10",
        "helm.sh/chart": "warp10-0.2.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "ports": [
        {
          "name": "api",
          "port": 8080,
          "targetPort": 8080
        },
        {
          "name": "studio",
          "port": 8081,
          "targetPort": 8081
        }
      ],
      "selector": {
        "app": "warp10",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-cassandra",
      "labels": {
        "app": "cassandra",
        "chart": "cassandra-0.10.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "cassandra",
          "release": "release-name"
        }
      },
      "serviceName": "release-name-cassandra",
      "replicas": 3,
      "podManagementPolicy": "OrderedReady",
      "updateStrategy": {
        "type": "OnDelete"
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "cassandra",
            "release": "release-name"
          },
          "annotations": {
            "sidecar.istio.io/inject": "false"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "release-name-cassandra",
              "image": "cassandra:3.11.3",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "env": [
                {
                  "name": "CASSANDRA_SEEDS",
                  "value": "release-name-cassandra-0.release-name-cassandra.default.svc.cluster.local,release-name-cassandra-1.release-name-cassandra.default.svc.cluster.local"
                },
                {
                  "name": "MAX_HEAP_SIZE",
                  "value": "2048M"
                },
                {
                  "name": "HEAP_NEWSIZE",
                  "value": "512M"
                },
                {
                  "name": "CASSANDRA_ENDPOINT_SNITCH",
                  "value": "SimpleSnitch"
                },
                {
                  "name": "CASSANDRA_CLUSTER_NAME",
                  "value": "cassandra"
                },
                {
                  "name": "CASSANDRA_DC",
                  "value": "DC1"
                },
                {
                  "name": "CASSANDRA_RACK",
                  "value": "RAC1"
                },
                {
                  "name": "CASSANDRA_START_RPC",
                  "value": "false"
                },
                {
                  "name": "POD_IP",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "status.podIP"
                    }
                  }
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "nodetool status"
                  ]
                },
                "initialDelaySeconds": 90,
                "periodSeconds": 30,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "nodetool status | grep -E \"^UN\\s+${POD_IP}\""
                  ]
                },
                "initialDelaySeconds": 90,
                "periodSeconds": 30,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "ports": [
                {
                  "name": "intra",
                  "containerPort": 7000
                },
                {
                  "name": "tls",
                  "containerPort": 7001
                },
                {
                  "name": "jmx",
                  "containerPort": 7199
                },
                {
                  "name": "cql",
                  "containerPort": 9042
                },
                {
                  "name": "thrift",
                  "containerPort": 9160
                }
              ],
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/var/lib/cassandra"
                }
              ]
            }
          ],
          "terminationGracePeriodSeconds": 30
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data",
            "labels": {
              "app": "cassandra",
              "chart": "cassandra-0.10.1",
              "release": "release-name",
              "heritage": "Helm"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "10Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-influxdb",
      "labels": {
        "app": "release-name-influxdb",
        "chart": "influxdb-3.0.2",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "release-name-influxdb"
        }
      },
      "serviceName": "release-name-influxdb",
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-influxdb",
            "release": "release-name"
          },
          "annotations": {
            "sidecar.istio.io/inject": "false"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "release-name-influxdb",
              "image": "influxdb:1.7.6-alpine",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "ports": [
                {
                  "name": "api",
                  "containerPort": 8086
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/ping",
                  "port": "api"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/ping",
                  "port": "api"
                },
                "initialDelaySeconds": 5,
                "timeoutSeconds": 1
              },
              "volumeMounts": [
                {
                  "name": "release-name-influxdb-data",
                  "mountPath": "/var/lib/influxdb"
                },
                {
                  "name": "config",
                  "mountPath": "/etc/influxdb"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-influxdb"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "release-name-influxdb-data",
            "annotations": null
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "10Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "labels": {
        "app": "mongodb",
        "chart": "mongodb-5.2.0",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-mongodb-arbiter"
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "mongodb",
          "release": "release-name",
          "component": "arbiter"
        }
      },
      "serviceName": "release-name-mongodb-headless",
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "mongodb",
            "chart": "mongodb-5.2.0",
            "release": "release-name",
            "component": "arbiter"
          },
          "annotations": {
            "sidecar.istio.io/inject": "false"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001,
            "runAsUser": 1001
          },
          "containers": [
            {
              "name": "mongodb-arbiter",
              "image": "docker.io/bitnami/mongodb:4.0.3",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "containerPort": 27017,
                  "name": "mongodb"
                }
              ],
              "env": [
                {
                  "name": "MONGODB_SYSTEM_LOG_VERBOSITY",
                  "value": "0"
                },
                {
                  "name": "MONGODB_DISABLE_SYSTEM_LOG",
                  "value": "no"
                },
                {
                  "name": "MONGODB_POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "MONGODB_REPLICA_SET_MODE",
                  "value": "arbiter"
                },
                {
                  "name": "MONGODB_PRIMARY_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "MONGODB_REPLICA_SET_NAME",
                  "value": "rs0"
                },
                {
                  "name": "MONGODB_ADVERTISED_HOSTNAME",
                  "value": "$(MONGODB_POD_NAME).release-name-mongodb-headless.default.svc.cluster.local"
                },
                {
                  "name": "MONGODB_ENABLE_IPV6",
                  "value": "yes"
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": "mongodb"
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": "mongodb"
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": null,
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "volumes": null
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "labels": {
        "app": "mongodb",
        "chart": "mongodb-5.2.0",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-mongodb-primary"
    },
    "spec": {
      "serviceName": "release-name-mongodb-headless",
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "mongodb",
          "release": "release-name",
          "component": "primary"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "mongodb",
            "chart": "mongodb-5.2.0",
            "release": "release-name",
            "component": "primary"
          },
          "annotations": {
            "sidecar.istio.io/inject": "false"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001,
            "runAsUser": 1001
          },
          "containers": [
            {
              "name": "mongodb-primary",
              "image": "docker.io/bitnami/mongodb:4.0.3",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "containerPort": 27017,
                  "name": "mongodb"
                }
              ],
              "env": [
                {
                  "name": "MONGODB_SYSTEM_LOG_VERBOSITY",
                  "value": "0"
                },
                {
                  "name": "MONGODB_DISABLE_SYSTEM_LOG",
                  "value": "no"
                },
                {
                  "name": "MONGODB_POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "MONGODB_REPLICA_SET_MODE",
                  "value": "primary"
                },
                {
                  "name": "MONGODB_REPLICA_SET_NAME",
                  "value": "rs0"
                },
                {
                  "name": "MONGODB_ADVERTISED_HOSTNAME",
                  "value": "$(MONGODB_POD_NAME).release-name-mongodb-headless.default.svc.cluster.local"
                },
                {
                  "name": "MONGODB_ENABLE_IPV6",
                  "value": "yes"
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "mongo",
                    "--eval",
                    "db.adminCommand('ping')"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "mongo",
                    "--eval",
                    "db.adminCommand('ping')"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": [
                {
                  "name": "datadir",
                  "mountPath": "/bitnami/mongodb"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "volumes": null
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "datadir",
            "annotations": null
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "labels": {
        "app": "mongodb",
        "chart": "mongodb-5.2.0",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-mongodb-secondary"
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "mongodb",
          "release": "release-name",
          "component": "secondary"
        }
      },
      "podManagementPolicy": "Parallel",
      "serviceName": "release-name-mongodb-headless",
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "mongodb",
            "chart": "mongodb-5.2.0",
            "release": "release-name",
            "component": "secondary"
          },
          "annotations": {
            "sidecar.istio.io/inject": "false"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001,
            "runAsUser": 1001
          },
          "containers": [
            {
              "name": "mongodb-secondary",
              "image": "docker.io/bitnami/mongodb:4.0.3",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "containerPort": 27017,
                  "name": "mongodb"
                }
              ],
              "env": [
                {
                  "name": "MONGODB_SYSTEM_LOG_VERBOSITY",
                  "value": "0"
                },
                {
                  "name": "MONGODB_DISABLE_SYSTEM_LOG",
                  "value": "no"
                },
                {
                  "name": "MONGODB_POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "MONGODB_REPLICA_SET_MODE",
                  "value": "secondary"
                },
                {
                  "name": "MONGODB_PRIMARY_HOST",
                  "value": "release-name-mongodb"
                },
                {
                  "name": "MONGODB_REPLICA_SET_NAME",
                  "value": "rs0"
                },
                {
                  "name": "MONGODB_ADVERTISED_HOSTNAME",
                  "value": "$(MONGODB_POD_NAME).release-name-mongodb-headless.default.svc.cluster.local"
                },
                {
                  "name": "MONGODB_ENABLE_IPV6",
                  "value": "yes"
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "mongo",
                    "--eval",
                    "db.adminCommand('ping')"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "mongo",
                    "--eval",
                    "db.adminCommand('ping')"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": [
                {
                  "name": "datadir",
                  "mountPath": "/bitnami/mongodb"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "volumes": null
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "datadir",
            "annotations": null
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-tenantsdb",
      "labels": {
        "app": "tenantsdb",
        "chart": "tenantsdb-8.6.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "serviceName": "release-name-tenantsdb-headless",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app": "tenantsdb",
          "release": "release-name",
          "role": "master"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-tenantsdb",
          "labels": {
            "app": "tenantsdb",
            "chart": "tenantsdb-8.6.4",
            "release": "release-name",
            "heritage": "Helm",
            "role": "master"
          },
          "annotations": {
            "sidecar.istio.io/inject": "false"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "initContainers": null,
          "containers": [
            {
              "name": "release-name-tenantsdb",
              "image": "docker.io/bitnami/postgresql:11.7.0-debian-10-r9",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "securityContext": {
                "runAsUser": 11214,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432"
                },
                {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql"
                },
                {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "sitewhere"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-tenantsdb",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "tenantsdb"
                },
                {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no"
                }
              ],
              "ports": [
                {
                  "name": "tcp-postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \"sitewhere\" -d \"tenantsdb\" -h 127.0.0.1 -p 5432"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "exec pg_isready -U \"sitewhere\" -d \"tenantsdb\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": [
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql",
                  "subPath": null
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "dshm",
              "emptyDir": {
                "medium": "Memory",
                "sizeLimit": "1Gi"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "10Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-warp10",
      "labels": {
        "app": "warp10",
        "chart": "warp10-0.2.3",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "warp10",
          "release": "release-name"
        }
      },
      "serviceName": "release-name-warp10-headless",
      "podManagementPolicy": null,
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "warp10",
            "release": "release-name"
          },
          "annotations": {
            "sidecar.istio.io/inject": "false"
          }
        },
        "spec": {
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "weight": 1,
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "app",
                          "operator": "In",
                          "values": [
                            "warp10"
                          ]
                        },
                        {
                          "key": "release",
                          "operator": "In",
                          "values": [
                            "release-name"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                }
              ]
            }
          },
          "containers": [
            {
              "name": "release-name-warp10",
              "image": "sitewhere/warp10:2.2.0-sitewhere",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "ports": [
                {
                  "name": "api",
                  "containerPort": 8080
                },
                {
                  "name": "studio",
                  "containerPort": 8081
                }
              ],
              "volumeMounts": [
                {
                  "name": "datadir-0",
                  "mountPath": "/data"
                }
              ]
            }
          ],
          "volumes": null
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "datadir-0"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "10Gi"
              }
            }
          }
        }
      ]
    }
  }
]