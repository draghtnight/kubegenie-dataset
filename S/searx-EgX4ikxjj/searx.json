[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-searx-config",
      "labels": {
        "helm.sh/chart": "searx-5.5.2",
        "app.kubernetes.io/name": "searx",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "stringData": {
      "BIND_ADDRESS": "0.0.0.0:8080",
      "BASE_URL": "https://searx.DOMAIN",
      "MORTY_URL": "https://searx.DOMAIN/morty/",
      "MORTY_KEY": "changeme"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-searx-config",
      "labels": {
        "helm.sh/chart": "searx-5.5.2",
        "app.kubernetes.io/name": "searx",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.0.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "Caddyfile": "{\n  admin off\n}\n\n:80 {\n    log {\n        output discard\n    }\n\n    @api {\n        path /config\n        path /status\n    }\n\n    @static {\n        path /static/*\n    }\n\n    @notstatic {\n        not path /static/*\n    }\n\n    @morty {\n        path /morty/*\n    }\n\n    @notmorty {\n        not path /morty/*\n    }\n\n    header {\n        # Enable HTTP Strict Transport Security (HSTS) to force clients to always connect via HTTPS\n        Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\"\n\n        # Enable cross-site filter (XSS) and tell browser to block detected attacks\n        X-XSS-Protection \"1; mode=block\"\n\n        # Prevent some browsers from MIME-sniffing a response away from the declared Content-Type\n        X-Content-Type-Options \"nosniff\"\n\n        # Disallow the site to be rendered within a frame (clickjacking protection)\n        X-Frame-Options \"SAMEORIGIN\"\n\n        # Disable some features\n        Permissions-Policy \"accelerometer=();ambient-light-sensor=(); autoplay=();camera=();encrypted-media=();focus-without-user-activation=(); geolocation=();gyroscope=();magnetometer=();microphone=();midi=();payment=();picture-in-picture=(); speaker=();sync-xhr=();usb=();vr=()\"\n\n        # Disable some features (legacy)\n        Feature-Policy \"accelerometer 'none';ambient-light-sensor 'none'; autoplay 'none';camera 'none';encrypted-media 'none';focus-without-user-activation 'none'; geolocation 'none';gyroscope 'none';magnetometer 'none';microphone 'none';midi 'none';payment 'none';picture-in-picture 'none'; speaker 'none';sync-xhr 'none';usb 'none';vr 'none'\"\n\n        # Referer\n        Referrer-Policy \"no-referrer\"\n\n        # X-Robots-Tag\n        X-Robots-Tag \"noindex, noarchive, nofollow\"\n\n        # Remove Server header\n        -Server\n    }\n\n    header @api {\n        Access-Control-Allow-Methods \"GET, OPTIONS\"\n        Access-Control-Allow-Origin  \"*\"\n    }\n\n    # Cache\n    header @static {\n        # Cache\n        Cache-Control \"public, max-age=31536000\"\n        defer\n    }\n\n    header @notstatic {\n        # No Cache\n        Cache-Control \"no-cache, no-store\"\n        Pragma \"no-cache\"\n    }\n\n    # CSP (see http://content-security-policy.com/ )\n    header @morty {\n        Content-Security-Policy \"default-src 'none'; style-src 'self' 'unsafe-inline'; form-action 'self'; frame-ancestors 'self'; base-uri 'self'; img-src 'self' data:; font-src 'self'; frame-src 'self'\"\n    }\n\n    header @notmorty {\n        Content-Security-Policy \"upgrade-insecure-requests; default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; form-action 'self'; font-src 'self'; frame-ancestors 'self'; base-uri 'self'; connect-src 'self' https://overpass-api.de; img-src 'self' data: https://*.tile.openstreetmap.org; frame-src https://www.youtube-nocookie.com https://player.vimeo.com https://www.dailymotion.com https://www.deezer.com https://www.mixcloud.com https://w.soundcloud.com https://embed.spotify.com\"\n    }\n\n    # Morty\n    handle @morty {\n        reverse_proxy localhost:3000\n    }\n\n    # Filtron\n    handle {\n        encode zstd gzip\n\n        reverse_proxy localhost:4040 {\n            header_up X-Forwarded-Port {http.request.port}\n            header_up X-Forwarded-Proto {http.request.scheme}\n            header_up X-Forwarded-TlsProto {tls_protocol}\n            header_up X-Forwarded-TlsCipher {tls_cipher}\n            header_up X-Forwarded-HttpsProto {proto}\n        }\n    }\n}",
      "rules.json": "[\n    {\n        \"name\": \"searx.space\",\n        \"filters\": [\"Header:X-Forwarded-For=nslookup(check.searx.space)\"],\n        \"stop\": true,\n        \"actions\": [{ \"name\": \"log\"}]\n    },\n    {\n        \"name\": \"IP limit, all paths\",\n        \"interval\": 3,\n        \"limit\": 25,\n        \"aggregations\": [\"Header:X-Forwarded-For\"],\n        \"actions\": [\n            {\"name\": \"block\",\n            \"params\": {\"message\": \"Rate limit exceeded, try again later.\"}}\n        ]\n    },\n    {\n        \"name\": \"useragent limit, all paths\",\n        \"interval\": 30,\n        \"limit\": 200,\n        \"aggregations\": [\"Header:X-Forwarded-For\", \"Header:User-Agent\"],\n        \"stop\": true,\n        \"actions\": [\n            {\"name\": \"block\",\n            \"params\": {\"message\": \"Rate limit exceeded, try again later.\"}}\n        ]\n    },\n    {\n        \"name\": \"search request\",\n        \"filters\": [\"Param:q\", \"Path=^(/|/search)$\"],\n        \"subrules\": [\n            {\n                \"name\": \"allow Firefox Android (issue #48 and #60)\",\n                \"filters\": [\n                    \"Param:q=^1$\",\n                    \"Header:User-Agent=(^MozacFetch/[0-9]{2,3}.[0-9].[0-9]+$|^Mozilla/5.0 \\\\(Android [0-9]{1,2}(.[0-9]{1,2}.[0-9]{1,2})?; Mobile; rv:[0-9]{2,3}.[0-9]\\\\) Gecko/[0-9]{2,3}.[0-9] Firefox/[0-9]{2,3}.[0-9]$)\"\n                ],\n                \"stop\": true,\n                \"actions\": [{\"name\": \"log\"}]\n            },\n            {\n                \"name\": \"robot agent forbidden\",\n                \"limit\": 0,\n                \"stop\": true,\n                \"filters\": [\"Header:User-Agent=([Cc][Uu][Rr][Ll]|[wW]get|Scrapy|splash|JavaFX|FeedFetcher|python-requests|Go-http-client|Java|Jakarta|okhttp|HttpClient|Jersey|Python|libwww-perl|Ruby|SynHttpClient|UniversalFeedParser)\"],\n                \"actions\": [\n                    {\"name\": \"block\",\n                    \"params\": {\"message\": \"Rate limit exceeded\"}}\n                ]\n            },\n            {\n                \"name\": \"bot forbidden\",\n                \"limit\": 0,\n                \"stop\": true,\n                \"filters\": [\"Header:User-Agent=(Googlebot|GoogleImageProxy|bingbot|Baiduspider|yacybot|YandexMobileBot|YandexBot|Yahoo! Slurp|MJ12bot|AhrefsBot|archive.org_bot|msnbot|MJ12bot|SeznamBot|linkdexbot|Netvibes|SMTBot|zgrab|James BOT|Sogou|Abonti|Pixray|Spinn3r|SemrushBot|Exabot|ZmEu|BLEXBot|bitlybot)\"],\n                \"actions\": [\n                    {\"name\": \"block\",\n                    \"params\": {\"message\": \"Rate limit exceeded\"}}\n                ]\n            },\n            {\n                \"name\": \"block missing accept-language\",\n                \"filters\": [\"!Header:Accept-Language\"],\n                \"limit\": 0,\n                \"stop\": true,\n                \"actions\": [\n                    {\"name\": \"block\",\n                    \"params\": {\"message\": \"Rate limit exceeded\"}}\n                ]\n            },\n            {\n                \"name\": \"block Connection:close\",\n                \"filters\": [\"Header:Connection=close\"],\n                \"limit\": 0,\n                \"stop\": true,\n                \"actions\": [\n                    {\"name\": \"block\",\n                    \"params\": {\"message\": \"Rate limit exceeded\"}}\n                ]\n            },\n            {\n                \"name\": \"block no gzip support\",\n                \"filters\": [\"!Header:Accept-Encoding=(^gzip$|^gzip[;,]|[; ]gzip$|[; ]gzip[;,])\"],\n                \"limit\": 0,\n                \"stop\": true,\n                \"actions\": [\n                    {\"name\": \"block\",\n                    \"params\": {\"message\": \"Rate limit exceeded\"}}\n                ]\n            },\n            {\n                \"name\": \"block no deflate support\",\n                \"filters\": [\"!Header:Accept-Encoding=(^deflate$|^deflate[;,]|[; ]deflate$|[; ]deflate[;,])\"],\n                \"limit\": 0,\n                \"stop\": true,\n                \"actions\": [\n                    {\"name\": \"block\",\n                    \"params\": {\"message\": \"Rate limit exceeded\"}}\n                ]\n            },\n            {\n                \"name\": \"block accept everything\",\n                \"filters\": [\"!Header:Accept=text/html\"],\n                \"limit\": 0,\n                \"stop\": true,\n                \"actions\": [\n                    {\"name\": \"block\",\n                    \"params\": {\"message\": \"Rate limit exceeded\"}}\n                ]\n            },\n            {\n                \"name\": \"rss/json limit\",\n                \"interval\": 3600,\n                \"limit\": 4,\n                \"stop\": true,\n                \"filters\": [\"Param:format=(csv|json|rss)\"],\n                \"aggregations\": [\"Header:X-Forwarded-For\"],\n                \"actions\": [\n                    {\"name\": \"block\",\n                    \"params\": {\"message\": \"Rate limit exceeded, try again later.\"}}\n                ]\n            },\n            {\n                \"name\": \"IP limit\",\n                \"interval\": 3,\n                \"limit\": 3,\n                \"aggregations\": [\"Header:X-Forwarded-For\"],\n                \"actions\": [\n                    {\"name\": \"block\",\n                    \"params\": {\"message\": \"Rate limit exceeded, try again later.\"}}\n                ]\n            },\n            {\n                \"name\": \"IP and useragent limit\",\n                \"interval\": 600,\n                \"limit\": 60,\n                \"stop\": true,\n                \"aggregations\": [\"Header:X-Forwarded-For\", \"Header:User-Agent\"],\n                \"actions\": [\n                    {\"name\": \"block\",\n                    \"params\": {\"message\": \"Rate limit exceeded, try again later.\"}}\n                ]\n            }\n        ]\n    }\n]"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-searx",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "searx",
        "app.kubernetes.io/version": "1.0.0",
        "helm.sh/chart": "searx-5.5.2"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "searx",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-searx",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "searx",
        "app.kubernetes.io/version": "1.0.0",
        "helm.sh/chart": "searx-5.5.2"
      }
    },
    "spec": {
      "revisionHistoryLimit": 3,
      "replicas": 1,
      "strategy": {
        "type": "Recreate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "searx",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "searx",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "automountServiceAccountToken": true,
          "dnsPolicy": "ClusterFirst",
          "enableServiceLinks": true,
          "containers": [
            {
              "name": "release-name-searx",
              "image": "searx/searx:1.0.0-211-968b2899",
              "imagePullPolicy": "IfNotPresent",
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-searx-config"
                  }
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 80
                },
                "initialDelaySeconds": 0,
                "failureThreshold": 3,
                "timeoutSeconds": 1,
                "periodSeconds": 10
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 80
                },
                "initialDelaySeconds": 0,
                "failureThreshold": 3,
                "timeoutSeconds": 1,
                "periodSeconds": 10
              },
              "startupProbe": {
                "tcpSocket": {
                  "port": 80
                },
                "initialDelaySeconds": 0,
                "failureThreshold": 30,
                "timeoutSeconds": 1,
                "periodSeconds": 5
              }
            },
            {
              "image": "caddy:2.2.0-alpine",
              "imagePullPolicy": "IfNotPresent",
              "name": "caddy",
              "ports": [
                {
                  "containerPort": 80,
                  "name": "http"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/etc/caddy/Caddyfile",
                  "name": "searx-config",
                  "subPath": "Caddyfile"
                }
              ]
            },
            {
              "args": [
                "-listen",
                "0.0.0.0:4040",
                "-api",
                "0.0.0.0:4041",
                "-target",
                "localhost:8080"
              ],
              "image": "dalf/filtron:latest",
              "imagePullPolicy": "Always",
              "name": "filtron",
              "ports": [
                {
                  "containerPort": 4040,
                  "name": "filtron"
                },
                {
                  "containerPort": 4041,
                  "name": "api"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/etc/filtron/rules.json",
                  "name": "searx-config",
                  "subPath": "rules.json"
                }
              ]
            },
            {
              "args": [
                "-listen",
                "localhost:3000",
                "-timeout",
                "6",
                "ipv6"
              ],
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-searx-config"
                  }
                }
              ],
              "image": "dalf/morty:latest",
              "imagePullPolicy": "Always",
              "name": "morty",
              "ports": [
                {
                  "containerPort": 3000,
                  "name": "morty"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "searx-config",
              "configMap": {
                "name": "release-name-searx-config"
              }
            }
          ]
        }
      }
    }
  }
]