apiVersion: v1
kind: Service
metadata:
  name: release-name-standard-service
  annotations: null
  labels:
    track: stable
    app: release-name
    chart: standard-service-0.1.0
    release: release-name
    heritage: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: standard-service-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
spec:
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
      name: web
  selector:
    app: release-name
    tier: web
    track: stable
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name
  annotations: null
  labels:
    track: stable
    tier: web
    app: release-name
    chart: standard-service-0.1.0
    release: release-name
    heritage: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: standard-service-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
spec:
  selector:
    matchLabels:
      app: release-name
      track: stable
      tier: web
      release: release-name
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/application-secrets: ""
      labels:
        track: stable
        tier: web
        app: release-name
        chart: standard-service-0.1.0
        release: release-name
        heritage: Helm
        app.kubernetes.io/name: release-name
        helm.sh/chart: standard-service-0.1.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: gitlab-registry
      containers:
        - name: standard-service
          image: gitlab.example.com/group/project:stable
          imagePullPolicy: IfNotPresent
          env:
            - name: DATABASE_URL
              value: null
            - name: GITLAB_ENVIRONMENT_NAME
              value: null
            - name: GITLAB_ENVIRONMENT_URL
              value: null
          ports:
            - name: web
              containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              scheme: HTTP
              port: 5000
            initialDelaySeconds: 15
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /
              scheme: HTTP
              port: 5000
            initialDelaySeconds: 5
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: release-name-standard-service
  labels:
    app: release-name
    chart: standard-service-0.1.0
    release: release-name
    heritage: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: standard-service-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - hosts:
        - my.host.com
      secretName: release-name-standard-service-tls
  rules:
    - host: my.host.com
      http:
        paths:
          - path: /
            backend:
              serviceName: release-name-standard-service
              servicePort: 5000
