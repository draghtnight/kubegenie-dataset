apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: release-name-sqlbackup-pod-running-policy
  namespace: default
  labels:
    name: podsecuritypolicy
    helm.sh/chart: sqlbackup-0.0.2
    app.kubernetes.io/name: sqlbackup
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: false
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
    - '*'
  rule: MustRunAsNonRoot
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-sqlbackup
  labels:
    helm.sh/chart: sqlbackup-0.0.2
    app.kubernetes.io/name: sqlbackup
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-sqlbackup
  namespace: s3pl04LxM3l
  labels:
    helm.sh/chart: sqlbackup-0.0.2
    app.kubernetes.io/name: sqlbackup
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/managed-by: Helm
data:
  backup: "#!/bin/bash\nset -e\n/usr/local/google-cloud-sdk/bin/gcloud sql backups create --async --instance \\\n   --description \"$(date '+%Y%m%d')\" --project "
  cleanup: |-
    #!/bin/bash
    set -e

    # removaldate must be environment var for jq env.removaldate
    export removaldate=$(date -d @$(( $(date +"%s") - 86400 * 90)) +"%Y%m%d")
    export backups=$(/usr/local/google-cloud-sdk/bin/gcloud sql backups list --instance  --project  \
                --format json | jq  -r '.[]| select (.| has("description"))| select(.description < env.removaldate)')

    for i in $(echo "${backups}" | jq -r '.id');
      do /usr/local/google-cloud-sdk/bin/gcloud sql backups delete $i --instance  --project  --quiet;
    done
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-sqlbackup-use-pod-security-policy-role
  namespace: s3pl04LxM3l
  labels:
    helm.sh/chart: sqlbackup-0.0.2
    app.kubernetes.io/name: sqlbackup
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - release-name-sqlbackup-pod-running-policy
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-sqlbackup-use-pod-security-policy
  namespace: s3pl04LxM3l
  labels:
    helm.sh/chart: sqlbackup-0.0.2
    app.kubernetes.io/name: sqlbackup
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-sqlbackup
roleRef:
  kind: Role
  name: release-name-sqlbackup-use-pod-security-policy-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-sqlbackup-backup
  labels:
    helm.sh/chart: sqlbackup-0.0.2
    app.kubernetes.io/name: sqlbackup
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/managed-by: Helm
  annotations:
    checksum/configmap: f80f4a7508ca9dd732181f1dcb46204591a5362b8e5428e53fab1dd3112ff0d2
spec:
  schedule: 0 2 * * *
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: release-name-sqlbackup
          containers:
            - name: release-name-sqlbackup-backup
              image: broadinstitute/dsde-toolbox:master
              command:
                - /bin/sh
                - -c
                - /opt/script/backup.sh
              volumeMounts:
                - name: release-name-sqlbackup-backup-script
                  mountPath: /opt/script/backup.sh
                  subPath: backup.sh
                  readOnly: false
          volumes:
            - name: release-name-sqlbackup-backup-script
              configMap:
                name: release-name-sqlbackup
                items:
                  - key: backup
                    path: backup.sh
                defaultMode: 493
          restartPolicy: Never
      backoffLimit: 4
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-sqlbackup-cleanup
  labels:
    helm.sh/chart: sqlbackup-0.0.2
    app.kubernetes.io/name: sqlbackup
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/managed-by: Helm
  annotations:
    checksum/configmap: f80f4a7508ca9dd732181f1dcb46204591a5362b8e5428e53fab1dd3112ff0d2
spec:
  schedule: 0 3 * * *
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: release-name-sqlbackup
          containers:
            - name: release-name-sqlbackup-cleanup
              image: broadinstitute/dsde-toolbox:master
              command:
                - /bin/sh
                - -c
                - /opt/script/cleanup.sh
              volumeMounts:
                - name: release-name-sqlbackup-cleanup-script
                  mountPath: /opt/script/cleanup.sh
                  subPath: cleanup.sh
                  readOnly: false
          volumes:
            - name: release-name-sqlbackup-cleanup-script
              configMap:
                name: release-name-sqlbackup
                items:
                  - key: cleanup
                    path: cleanup.sh
                defaultMode: 493
          restartPolicy: Never
      backoffLimit: 4
