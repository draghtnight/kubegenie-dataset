apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-standard-service
  labels:
    helm.sh/chart: standard-service-0.1.15
    app.kubernetes.io/name: standard-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-standard-service
  namespace: PEoOxHR
data:
  config.json: "{\n  \n}\n"
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-standard-service
  labels:
    helm.sh/chart: standard-service-0.1.15
    app.kubernetes.io/name: standard-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: standard-service
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-standard-service
  labels:
    helm.sh/chart: standard-service-0.1.15
    app.kubernetes.io/name: standard-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: standard-service
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        rollme: 96pw5
      labels:
        app.kubernetes.io/name: standard-service
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-standard-service
      volumes:
        - name: config-file
          configMap:
            name: release-name-standard-service
            items:
              - key: config.json
                path: config.json
      securityContext: {}
      containers:
        - name: standard-service
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: ':'
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: config-file
              mountPath: /usr/share/nginx/html/config.json
              subPath: config.json
          env: null
          resources:
            seccompProfile:
              type: RuntimeDefault
