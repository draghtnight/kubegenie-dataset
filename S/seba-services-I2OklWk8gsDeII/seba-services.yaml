apiVersion: v1
kind: ConfigMap
metadata:
  name: fabric-crossconnect
data:
  serviceConfig: |
    name: fabric-crossconnect
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.fabric-crossconnect
      loggers:
        '':
          handlers:
              - console
              - file
              - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fabric
data:
  serviceConfig: |
    name: fabric
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.fabric
      loggers:
        '':
          handlers:
              - console
              - file
              - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: onos-service
data:
  serviceConfig: |
    name: onos
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.onos-service
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rcord
data:
  serviceConfig: |
    name: rcord
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.rcord
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: volt
data:
  serviceConfig: |
    name: volt
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.volt
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: seba-services-tosca
data:
  020-rcord-subscriber-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    imports:
      - custom_types/rcordservice.yaml
    description: R-CORD service TOSCA
    topology_template:
      node_templates:
        service#rcord:
          type: tosca.nodes.RCORDService
          properties:
            name: rcord
            kind: data
  030-volt-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Set up VOLT service
    imports:
      - custom_types/voltservice.yaml

    topology_template:
      node_templates:
        service#volt:
          type: tosca.nodes.VOLTService
          properties:
            name: volt
            kind: data
            voltha_url: "voltha.voltha.svc.cluster.local"
            voltha_port: 8882
  040-fabric-crossconnect-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Set up fabric-crossconnect service
    imports:
      - custom_types/fabriccrossconnectservice.yaml

    topology_template:
      node_templates:
        service#fabric-crossconnect:
          type: tosca.nodes.FabricCrossconnectService
          properties:
            name: fabric-crossconnect
            kind: data
  061-onos-service.yaml: |2
    tosca_definitions_version: tosca_simple_yaml_1_0

    imports:
       - custom_types/onosapp.yaml
       - custom_types/onosservice.yaml
       - custom_types/serviceinstanceattribute.yaml

    description: Configures the VOLTHA ONOS service

    topology_template:
      node_templates:

        service#onos:
          type: tosca.nodes.ONOSService
          properties:
              name: onos
              kind: data
              rest_hostname: "onos-ui.default.svc.cluster.local"
              rest_port: 8181

        onos_app#openflow-base:
          type: tosca.nodes.ONOSApp
          properties:
            name: openflow-base
            app_id: org.onosproject.openflow-base
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        onos_app#hostprovider:
          type: tosca.nodes.ONOSApp
          properties:
            name: hostprovider
            app_id: org.onosproject.hostprovider
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        onos_app#olt:
          type: tosca.nodes.ONOSApp
          properties:
            name: olt
            app_id: org.opencord.olt
            url: https://oss.sonatype.org/content/groups/public/org/opencord/olt-app/4.0.0/olt-app-4.0.0.oar
            version: 4.0.0
            dependencies: org.opencord.sadis
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        onos_app#sadis:
          type: tosca.nodes.ONOSApp
          properties:
            name: sadis
            app_id: org.opencord.sadis
            url: https://oss.sonatype.org/content/groups/public/org/opencord/sadis-app/4.0.1/sadis-app-4.0.1.oar
            version: 4.0.1
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        onos_app#kafka:
          type: tosca.nodes.ONOSApp
          properties:
            name: kafka
            app_id: org.opencord.kafka
            url: https://oss.sonatype.org/content/groups/public/org/opencord/kafka/2.1.0/kafka-2.1.0.oar
            version: 2.1.0
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        # CORD-Configuration
        kafka-config-attr:
          type: tosca.nodes.ServiceInstanceAttribute
          properties:
            name: /onos/v1/network/configuration/apps/org.opencord.kafka
            value: >
              {
                "kafka" : {
                  "bootstrapServers" : "cord-kafka.default.svc.cluster.local:9092"
                }
              }
          requirements:
            - service_instance:
                node: onos_app#kafka
                relationship: tosca.relationships.BelongsToOne

        sadis-config-attr:
          type: tosca.nodes.ServiceInstanceAttribute
          properties:
            name: /onos/v1/network/configuration/apps/org.opencord.sadis
            value: >
              {
                "sadis" : {
                  "integration" : {
                    "cache" : {
                      "maxsize" : 1000,
                      "ttl": "PT300S"
                    },
                    "url" : "http://sadis-service:8000/subscriber/%s"
                  }
                },
                "bandwidthprofile":{
                   "integration":{
                      "url": "http://sadis-service:8000/bandwidthprofiles/%s",
                      "cache":{
                         "enabled":true,
                         "maxsize":40,
                         "ttl":"PT1m"
                      }
                   }
                }
              }
          requirements:
            - service_instance:
                node: onos_app#sadis
                relationship: tosca.relationships.BelongsToOne

        onos_app#segmentrouting:
          type: tosca.nodes.ONOSApp
          properties:
            name: org.onosproject.segmentrouting
            app_id: org.onosproject.segmentrouting
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        onos_app#netcfghostprovider:
          type: tosca.nodes.ONOSApp
          properties:
            name: org.onosproject.netcfghostprovider
            app_id: org.onosproject.netcfghostprovider
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        onos_app#openflow:
          type: tosca.nodes.ONOSApp
          properties:
            name: org.onosproject.openflow
            app_id: org.onosproject.openflow
          requirements:
            - owner:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne
  070-fabric-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Set up Fabric service
    imports:
      - custom_types/fabricservice.yaml

    topology_template:
      node_templates:
        service#fabric:
          type: tosca.nodes.FabricService
          properties:
            name: fabric
            kind: data
  300-service-graph.yaml: |2
    tosca_definitions_version: tosca_simple_yaml_1_0
    imports:
      - custom_types/fabricservice.yaml
      - custom_types/onosservice.yaml
      - custom_types/rcordservice.yaml
      - custom_types/voltservice.yaml
      - custom_types/fabriccrossconnectservice.yaml
      - custom_types/servicedependency.yaml
      - custom_types/servicegraphconstraint.yaml
    description: seba service graph
    topology_template:
      node_templates:

    # These services must be defined before loading the graph

        service#onos:
          type: tosca.nodes.ONOSService
          properties:
            name: onos
            must-exist: true

        service#fabric:
          type: tosca.nodes.FabricService
          properties:
            name: fabric
            must-exist: true

        service#rcord:
          type: tosca.nodes.RCORDService
          properties:
            name: rcord
            must-exist: true

        service#volt:
          type: tosca.nodes.VOLTService
          properties:
            name: volt
            must-exist: true

        service_dependency#onos-fabric_fabric:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#fabric
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        service_dependency#rcord_volt:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#rcord
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#volt
                relationship: tosca.relationships.BelongsToOne

        service_dependency#onos_volt:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#volt
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne

        service_dependency#onos_rcord:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#rcord
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne
        service#fabric-crossconnect:
          type: tosca.nodes.FabricCrossconnectService
          properties:
            name: fabric-crossconnect
            must-exist: true

        service_dependency#volt_fabric-crossconnect:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#volt
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#fabric-crossconnect
                relationship: tosca.relationships.BelongsToOne

        service_dependency#onos_fabric-crossconnect:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#fabric-crossconnect
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#onos
                relationship: tosca.relationships.BelongsToOne
---
apiVersion: v1
kind: Service
metadata:
  name: sadis-service
  labels:
    app: sadis-server
spec:
  type: ClusterIP
  ports:
    - name: sadis-service
      port: 8000
      targetPort: 8000
      protocol: TCP
  selector:
    app: sadis-server
    release: release-name
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-fabric-crossconnect
  labels:
    app: fabric-crossconnect
    chart: fabric-crossconnect-2.0.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fabric-crossconnect
      release: release-name
  template:
    metadata:
      labels:
        app: fabric-crossconnect
        release: release-name
      annotations:
        checksum/config: 44da4faed85f464ebb48b378ef8f6f3d4f124e6a7b4483e668bc61fb66f669e2
    spec:
      containers:
        - name: fabric-crossconnect
          image: xosproject/fabric-crossconnect-synchronizer:2.0.0
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: fabric-crossconnect-config
              mountPath: /opt/xos/synchronizers/fabric-crossconnect/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: fabric-crossconnect-config
          configMap:
            name: fabric-crossconnect
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-fabric
  labels:
    app: fabric
    chart: fabric-3.0.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fabric
      release: release-name
  template:
    metadata:
      labels:
        app: fabric
        release: release-name
      annotations:
        checksum/config: 7a2c297919bfa78b99fc69efcfb7c399790f5c5fbdb142f3f8657cb3b6560a90
    spec:
      containers:
        - name: fabric
          image: xosproject/fabric-synchronizer:3.0.0
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: fabric-config
              mountPath: /opt/xos/synchronizers/fabric/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: fabric-config
          configMap:
            name: fabric
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-onos-service
  labels:
    app: onos-service
    chart: onos-service-3.0.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: onos-service
      release: release-name
  template:
    metadata:
      labels:
        app: onos-service
        release: release-name
      annotations:
        checksum/config: 7ae1c8b871f40d23c846e2600c757e875eac40e28f54b46226cf6cc6f45abe89
    spec:
      containers:
        - name: onos-service
          image: xosproject/onos-synchronizer:3.0.0
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: onos-service-config
              mountPath: /opt/xos/synchronizers/onos/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: onos-service-config
          configMap:
            name: onos-service
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-rcord
  labels:
    app: rcord
    chart: rcord-2.0.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rcord
      release: release-name
  template:
    metadata:
      labels:
        app: rcord
        release: release-name
      annotations:
        checksum/config: 9a2404feaf652a72140efa424652083eca58f5923bcae49404a5cf97bd5abb46
    spec:
      containers:
        - name: rcord
          image: xosproject/rcord-synchronizer:2.0.0
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: rcord-config
              mountPath: /opt/xos/synchronizers/rcord/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: rcord-config
          configMap:
            name: rcord
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sadis-server
  labels:
    app: sadis-server
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sadis-server
        release: release-name
    spec:
      containers:
        - name: sadis-server
          image: opencord/sadis-server:1.1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              port: 8000
              protocol: TCP
          env:
            - name: SADISSERVER_PORT
              value: "8000"
            - name: SADISSERVER_USERNAME
              value: admin@opencord.org
            - name: SADISSERVER_PASSWORD
              value: letmein
            - name: SADISSERVER_XOS
              value: xos-chameleon:9101
            - name: SADISSERVER_KAFKABROKER
              value: cord-kafka:9092
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-volt
  labels:
    app: volt
    chart: volt-3.0.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: volt
      release: release-name
  template:
    metadata:
      labels:
        app: volt
        release: release-name
      annotations:
        checksum/config: e24e61e4ff99c4902bc1296acb71a6e5dcb1419260dea762c8a43ae861979fc1
    spec:
      containers:
        - name: volt
          image: xosproject/volt-synchronizer:3.0.0
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: volt-config
              mountPath: /opt/xos/synchronizers/volt/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: volt-config
          configMap:
            name: volt
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-seba-services-tosca-loader
  labels:
    app: seba-services
    chart: seba-services-2.0.0
    release: release-name
    heritage: Helm
spec:
  backoffLimit: 12
  template:
    metadata:
      labels:
        app: seba-services
        release: release-name
      annotations:
        checksum/config: 3f81bb383e7920751322c0f15bd4ac98c411418ef4883ab5279b0829e5089010
    spec:
      restartPolicy: OnFailure
      containers:
        - name: seba-services-tosca-loader
          image: xosproject/tosca-loader:1.3.1
          imagePullPolicy: Always
          env:
            - name: XOS_USER
              value: admin@opencord.org
            - name: XOS_PASSWD
              valueFrom:
                secretKeyRef:
                  name: xos-admin-passwd-secret
                  key: password
          volumeMounts:
            - name: seba-services-tosca
              mountPath: /opt/tosca
      volumes:
        - name: seba-services-tosca
          configMap:
            name: seba-services-tosca
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-api-test
  annotations:
    helm.sh/hook: test-success
spec:
  restartPolicy: Never
  containers:
    - name: release-name-api-test
      image: xosproject/xos-api-tester:master
      imagePullPolicy: Always
      volumeMounts:
        - name: log-volume
          mountPath: /src/cord-api/Tests/Log/
      env:
        - name: SERVER_IP
          value: xos-chameleon
        - name: SERVER_PORT
          value: "9101"
        - name: XOS_USER
          value: admin@opencord.org
        - name: XOS_PASSWD
          value: letmein
      command:
        - pybot
        - -L
        - TRACE
        - -d
        - Log
        - -T
        - WorkflowValidations/ATT_Workflow.robot
  volumes:
    - name: log-volume
      hostPath:
        path: /tmp/helm_test_attworkflow_logs_20220612T011621.50Z
        type: DirectoryOrCreate
