[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-synapse",
      "labels": {
        "helm.sh/chart": "synapse-1.1.5",
        "app.kubernetes.io/name": "synapse",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v1.53.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-synapse-config",
      "labels": {
        "helm.sh/chart": "synapse-1.1.5",
        "app.kubernetes.io/name": "synapse",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v1.53.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "stringData": {
      "log.config": "version: 1\nformatters:\n  precise:\n    format: '%(asctime)s - %(name)s - %(lineno)d - %(levelname)s - %(request)s - %(message)s'\nfilters:\n  context:\n    (): synapse.logging.context.LoggingContextFilter\n    request: \"\"\nhandlers:\n  console:\n    class: logging.StreamHandler\n    formatter: precise\n    filters: [context]\nloggers:\n  synapse.storage.SQL:\n    # beware: increasing this to DEBUG will make synapse log sensitive\n    # information such as access tokens.\n    level: INFO\nroot:\n  level: INFO\n  handlers: [console]\ndisable_existing_loggers: false",
      "homeserver.yaml": "## Server ##\nserver_name: \"matrix.example.com\"\npid_file: /homeserver.pid\nweb_client: False\nsoft_file_limit: 0\nlog_config: \"/config/log.config\"\n## Ports ##\nlisteners:\n- port: 8008\n  tls: false\n  bind_addresses: ['::']\n  type: http\n  x_forwarded: false\n  resources:\n  - names: [client]\n    compress: true\n  - names: [federation]\n    compress: false\n## Database ##\ndatabase:\n  name: \"psycopg2\"\n  args:\n    user: matrix\n    password: randomlongpasswordpleasechangeme\n    database: matrix\n    host: some-postgres.example.com\n    port: 5432\n    cp_min: 5\n    cp_max: 10\n## Performance ##\nevent_cache_size: \"10K\"\n## Ratelimiting ##\nrc_messages_per_second: 0.2\nrc_message_burst_count: 10.0\nfederation_rc_window_size: 1000\nfederation_rc_sleep_limit: 10\nfederation_rc_sleep_delay: 500\nfederation_rc_reject_limit: 50\nfederation_rc_concurrent: 3\n## Files ##\nmedia_store_path: \"/data/media\"\nuploads_path: \"/data/uploads\"\nmax_upload_size: \"10M\"\nmax_image_pixels: \"32M\"\ndynamic_thumbnails: false\n# List of thumbnail to precalculate when an image is uploaded.\nthumbnail_sizes:\n- width: 32\n  height: 32\n  method: crop\n- width: 96\n  height: 96\n  method: crop\n- width: 320\n  height: 240\n  method: scale\n- width: 640\n  height: 480\n  method: scale\n- width: 800\n  height: 600\n  method: scale\nurl_preview_enabled: False\nmax_spider_size: \"10M\"\n## Captcha ##\nrecaptcha_public_key: \"YOUR_PUBLIC_KEY\"\nrecaptcha_private_key: \"YOUR_PRIVATE_KEY\"\nenable_registration_captcha: False\nrecaptcha_siteverify_api: \"https://www.google.com/recaptcha/api/siteverify\"\n## Turn ##\nturn_uris: []\nturn_shared_secret: \"YOUR_SHARED_SECRET\"\nturn_user_lifetime: \"1h\"\nturn_allow_guests: True\n## Registration ##\nenable_registration: false\nregistration_shared_secret: \"c681fdf2ca739edfe848e24ee93d0c51de7be836bd879c54bc57a007c96d3076\"\nbcrypt_rounds: 12\nallow_guest_access: False\nenable_group_creation: true\n# The list of identity servers trusted to verify third party\n# identifiers by this server.\n#\n# Also defines the ID server which will be called when an account is\n# deactivated (one will be picked arbitrarily).\ntrusted_third_party_id_servers:\n- matrix.org\n- vector.im\n## Metrics ###\nenable_metrics: False\nreport_stats: False\n## API Configuration ##\nroom_invite_state_types:\n- \"m.room.join_rules\"\n- \"m.room.canonical_alias\"\n- \"m.room.avatar\"\n- \"m.room.name\"\napp_service_config_files: []\nmacaroon_secret_key: \"469535da278b1a340112b7190217efb8ba846476c9abb20e166e7cc4eaf8f413\"\nexpire_access_token: False\n## Signing Keys ##\nsigning_key_path: \"/secrets/signing.key\"\nold_signing_keys: {}\nkey_refresh_interval: \"1d\" # 1 Day.\nsuppress_key_server_warning: True\n# The trusted servers to download signing keys from.\nperspectives:\n  servers:\n    \"matrix.org\":\n      verify_keys:\n        \"ed25519:auto\":\n          key: \"Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw\"\npassword_config:\n  enabled: true"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-synapse",
      "labels": {
        "helm.sh/chart": "synapse-1.1.5",
        "app.kubernetes.io/name": "synapse",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v1.53.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "signing.key": "ZWQyNTUxOSBhX3JOcEogS0lDTHRqOVovL2lWMEZPbVpjR2tKSzArRDY1WFNvcHlJYlBmN3dvVytGNAo="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-synapse-headless",
      "labels": {
        "helm.sh/chart": "synapse-1.1.5",
        "app.kubernetes.io/name": "synapse",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v1.53.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "clusterIP": "None",
      "ports": [
        {
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "synapse",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "server"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-synapse",
      "labels": {
        "helm.sh/chart": "synapse-1.1.5",
        "app.kubernetes.io/name": "synapse",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v1.53.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "synapse",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "server"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-synapse",
      "labels": {
        "helm.sh/chart": "synapse-1.1.5",
        "app.kubernetes.io/name": "synapse",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v1.53.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      },
      "annotations": {
        "checksum/config": "33a21340efad235b2d86c452c5135a88cabc588fd8d9462c5b6bc689e021fbf1"
      }
    },
    "spec": {
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "serviceName": "release-name-synapse-headless",
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "synapse",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "server"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "synapse",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "server"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-synapse",
          "securityContext": {},
          "containers": [
            {
              "name": "synapse",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "runAsNonRoot": false,
                "runAsUser": 10099,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "matrixdotorg/synapse:v1.53.0",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8008,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/data",
                  "name": "persistent-data"
                },
                {
                  "mountPath": "/config",
                  "name": "config"
                },
                {
                  "mountPath": "/secrets",
                  "name": "secrets"
                }
              ],
              "env": [
                {
                  "name": "SYNAPSE_REPORT_STATS",
                  "value": "no"
                },
                {
                  "name": "SYNAPSE_SERVER_NAME",
                  "value": "matrix.example.com"
                },
                {
                  "name": "SYNAPSE_CONFIG_PATH",
                  "value": "/config/homeserver.yaml"
                },
                {
                  "name": "UID",
                  "value": "0"
                },
                {
                  "name": "GID",
                  "value": "0"
                },
                {
                  "name": "SYNAPSE_CACHE_FACTOR",
                  "value": "2.0"
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "config",
              "secret": {
                "secretName": "release-name-synapse-config"
              }
            },
            {
              "name": "secrets",
              "secret": {
                "secretName": "release-name-synapse"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "persistent-data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "storageClassName": "standard",
            "resources": {
              "requests": {
                "storage": "1Gi"
              }
            }
          }
        }
      ]
    }
  }
]