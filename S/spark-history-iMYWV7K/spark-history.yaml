apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-spark-history
  labels:
    helm.sh/chart: spark-history-4.0.6
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-spark-history
  labels:
    helm.sh/chart: spark-history-4.0.6
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: release-name-spark-history
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-spark-history
  labels:
    helm.sh/chart: spark-history-4.0.6
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-spark-history
  labels:
    helm.sh/chart: spark-history-4.0.6
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spark-history
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spark-history
        app.kubernetes.io/instance: release-name
    spec:
      volumes:
        - name: home
          emptyDir: {}
        - name: release-name-spark-history-data
          emptyDir: {}
        - name: config-coresite
          configMap:
            name: default
      serviceAccountName: release-name-spark-history
      securityContext: {}
      containers:
        - name: spark-history
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: inseefrlab/jupyter-datascience:py3.9.7-spark3.2.0
          command:
            - /bin/sh
            - -c
          args:
            - /data/onyxia-init.sh /opt/spark/bin/spark-class org.apache.spark.deploy.history.HistoryServer
          imagePullPolicy: IfNotPresent
          env:
            - name: SPARK_HISTORY_OPTS
              value: -Dspark.history.fs.logDirectory=file://tmp/spark-logs/ -Dcom.amazonaws.sdk.disableCertChecking=false
          envFrom: null
          ports:
            - name: http
              containerPort: 18080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /data
              name: release-name-spark-history-data
            - mountPath: /home/jovyan/work
              name: home
            - mountPath: /opt/hadoop/etc/hadoop/core-site.xml
              subPath: core-site.xml
              name: config-coresite
      initContainers:
        - name: standard-init
          image: busybox
          command:
            - /bin/sh
            - -c
          args:
            - wget -O /data/onyxia-init.sh https://git.lab.sspcloud.fr/innovation/plateforme-onyxia/services-ressources/-/raw/master/onyxia-init.sh && chmod +x /data/onyxia-init.sh
          volumeMounts:
            - mountPath: /data
              name: release-name-spark-history-data
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-spark-history
  labels:
    helm.sh/chart: spark-history-4.0.6
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
spec:
  tls:
    - hosts:
        - chart-example.local
  rules:
    - host: chart-example.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-spark-history
                port:
                  number: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-spark-history-test-connection
  labels:
    helm.sh/chart: spark-history-4.0.6
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-spark-history:80
  restartPolicy: Never
