apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-sonarqube
  labels:
    helm.sh/chart: sonarqube-4.4.2
    app.kubernetes.io/name: sonarqube
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 9.4.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-sonarqube-commands
  labels:
    helm.sh/chart: sonarqube-4.4.2
    app.kubernetes.io/name: sonarqube
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 9.4.0
    app.kubernetes.io/managed-by: Helm
data:
  update-ca-certs.sh: |
    #!/usr/bin/env sh
    set -eu

    mkdir -p /opt/sonarqube/certs

    cp -f "${JAVA_HOME}/lib/security/cacerts" /opt/sonarqube/certs/cacerts

    for f in /opt/secrets/ca-certs/*
    do
      keytool -importcert -file "${f}" -alias "$(basename "${f}")" -keystore /opt/sonarqube/certs/cacerts -storepass changeit -trustcacerts -noprompt
    done
  concat-properties.sh: |
    #!/usr/bin/env sh
    set -eu

    awk 1 /opt/props/sonar.properties /opt/props/sonar-secret.properties > /opt/result/sonar.properties
  download-plugins.sh: |
    #!/usr/bin/env sh
    set -eu

    mkdir -p /opt/sonarqube/extensions/cache
    rm -f /opt/sonarqube/extensions/cache/*
  install-plugins.sh: |
    #!/usr/bin/env sh
    set -eu

    mkdir -p /opt/sonarqube/extensions/plugins
    rm -f /opt/sonarqube/extensions/plugins/*

    /opt/sonarqube/bin/run.sh
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-sonarqube-config
  labels:
    helm.sh/chart: sonarqube-4.4.2
    app.kubernetes.io/name: sonarqube
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 9.4.0
    app.kubernetes.io/managed-by: Helm
data:
  sonar.properties: |
    sonar.es.bootstrap.checks.disable=true
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-sonarqube
  labels:
    helm.sh/chart: sonarqube-4.4.2
    app.kubernetes.io/name: sonarqube
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 9.4.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sonarqube
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-sonarqube
  labels:
    helm.sh/chart: sonarqube-4.4.2
    app.kubernetes.io/name: sonarqube
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 9.4.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarqube
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarqube
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/commands: 6d6239db0d32f45d12b6b01dfb64106fcae8b6fae17b25c97a12d2e60d6ec22a
        checksum/properties: 49cbd2ec986746c0e796ff6610d0ec5eca21154469a94c09b97490b9c661ac04
    spec:
      serviceAccountName: release-name-sonarqube
      securityContext:
        fsGroup: 1000
      containers:
        - name: sonarqube
          securityContext:
            runAsGroup: 1000
            runAsUser: 10355
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: sonarqube:9.4.0-community
          imagePullPolicy: IfNotPresent
          env:
            - name: SONAR_WEB_JAVAOPTS
              value: ""
            - name: SONAR_WEB_JAVAADDITIONALOPTS
              value: ""
            - name: SONAR_CE_JAVAOPTS
              value: ""
            - name: SONAR_CE_JAVAADDITIONALOPTS
              value: ""
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/system/status
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/system/status
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /opt/sonarqube/conf
              name: config
            - mountPath: /opt/sonarqube/data
              name: sonarqube
              subPath: data
            - mountPath: /opt/sonarqube/extensions
              name: sonarqube
              subPath: extensions
            - mountPath: /opt/sonarqube/certs
              name: sonarqube
              subPath: certs
            - mountPath: /opt/sonarqube/logs
              name: sonarqube
              subPath: logs
            - mountPath: /opt/sonarqube/temp
              name: sonarqube
              subPath: temp
            - mountPath: /tmp
              name: tmp-dir
      volumes:
        - name: sonarqube
          emptyDir: {}
        - name: commands
          configMap:
            name: release-name-sonarqube-commands
            defaultMode: 493
        - name: config
          configMap:
            name: release-name-sonarqube-config
        - name: tmp-dir
          emptyDir: {}
