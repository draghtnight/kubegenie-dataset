[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-smocker",
      "labels": {
        "helm.sh/chart": "smocker-0.0.2",
        "app.kubernetes.io/name": "smocker",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.17.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "start.sh": "#!/bin/bash\n\nset -me\n\nmock_server=\"localhost:8081\"\nmock_definitions=\"/mocks/mock-definition.yaml\"\n\nwait_server_started() {\n  timeout 30 sh -c \\\n    \"until curl -sSf ${mock_server}/version > /dev/null 2>&1; do\n      sleep 1\n    done\"\n}\n\nset_mocks() {\n  echo \"Setting session mocks:\"\n  cat \"$mock_definitions\"\n  curl -sSf -XPOST \\\n    --header \"Content-Type: application/x-yaml\" \\\n    --data-binary \"@${mock_definitions}\" \\\n    \"${mock_server}/mocks?reset=true\"\n}\n\n# Start the primary process and put it in the background\n/opt/smocker &\n\nif [ -f \"${mock_definitions}\" ]; then\n  wait_server_started\n  set_mocks\nfi\n\nfg %1\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-smocker",
      "labels": {
        "helm.sh/chart": "smocker-0.0.2",
        "app.kubernetes.io/name": "smocker",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.17.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8080,
          "targetPort": "mock",
          "protocol": "TCP",
          "name": "mock"
        },
        {
          "port": 8081,
          "targetPort": "admin",
          "protocol": "TCP",
          "name": "admin"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "smocker",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-smocker",
      "labels": {
        "helm.sh/chart": "smocker-0.0.2",
        "app.kubernetes.io/name": "smocker",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.17.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "smocker",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "smocker",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "smocker",
              "image": "andrcuns/smocker:0.17.1",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "start.sh"
              ],
              "ports": [
                {
                  "name": "mock",
                  "containerPort": 8080,
                  "protocol": "TCP"
                },
                {
                  "name": "admin",
                  "containerPort": 8081,
                  "protocol": "TCP"
                }
              ],
              "env": [
                {
                  "name": "SMOCKER_LOG_LEVEL",
                  "value": "info"
                }
              ],
              "volumeMounts": [
                {
                  "name": "startup",
                  "mountPath": "/usr/local/bin"
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/version",
                  "port": "admin"
                },
                "initialDelaySeconds": 2,
                "periodSeconds": 30
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/version",
                  "port": "admin"
                },
                "initialDelaySeconds": 2,
                "periodSeconds": 30
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "startup",
              "configMap": {
                "name": "release-name-smocker",
                "defaultMode": 493
              }
            }
          ]
        }
      }
    }
  }
]