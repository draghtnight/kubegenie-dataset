apiVersion: v1
kind: Secret
metadata:
  name: sonar-postgresql
  labels:
    app: sonarqube
    chart: sonarqube-9.10.3
    release: release-name
    heritage: Helm
type: Opaque
data:
  postgresql-password: aEZlend5RDdNNEZTV0llag==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-sonarqube-config
  labels:
    app: sonarqube
    chart: sonarqube-9.10.3
    release: release-name
    heritage: Helm
data: null
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-sonarqube-init-sysctl
  labels:
    app: sonarqube
    chart: sonarqube-9.10.3
    release: release-name
    heritage: Helm
data:
  init_sysctl.sh: |-
    if [[ "$(sysctl -n vm.max_map_count)" -lt 524288 ]]; then
      sysctl -w vm.max_map_count=524288
    fi
    if [[ "$(sysctl -n fs.file-max)" -lt 131072 ]]; then
      sysctl -w fs.file-max=131072
    fi
    if [[ "$(ulimit -n)" != "unlimited" ]]; then
      if [[ "$(ulimit -n)" -lt 131072 ]]; then
        echo "ulimit -n 131072"
        ulimit -n 131072
      fi
    fi
    if [[ "$(ulimit -u)" != "unlimited" ]]; then
      if [[ "$(ulimit -u)" -lt 8192 ]]; then
        echo "ulimit -u 8192"
        ulimit -u 8192
      fi
    fi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-sonarqube-install-plugins
  labels:
    app: sonarqube
    chart: sonarqube-9.10.3
    release: release-name
    heritage: Helm
data:
  install_plugins.sh: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-sonarqube-postgres-config
  labels:
    app: sonarqube
    chart: sonarqube-9.10.3
    release: release-name
    heritage: Helm
data:
  SONAR_JDBC_USERNAME: sonarUser
  SONAR_JDBC_URL: jdbc:postgresql://release-name-postgresql:5432/sonarDB
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-sonarqube-tests
  labels:
    app: sonarqube
    chart: sonarqube-9.10.3
    release: release-name
    heritage: Helm
data:
  run.sh: |-
    @test "Testing Sonarqube UI is accessible" {
      curl --connect-timeout 5 --retry 12 --retry-delay 1 --retry-max-time 60 release-name-sonarqube:9000/api/system/status
    }
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app: postgresql
    chart: postgresql-8.6.4
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app: postgresql
    release: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app: postgresql
    chart: postgresql-8.6.4
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app: postgresql
    release: release-name
    role: master
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-sonarqube
  labels:
    app: sonarqube
    chart: sonarqube-9.10.3
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: sonarqube
    release: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-sonarqube
  labels:
    app: sonarqube
    chart: sonarqube-9.10.3
    release: release-name
    heritage: Helm
    app.kubernetes.io/name: sonarqube-release-name-sonarqube
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: sonarqube
    app.kubernetes.io/component: release-name-sonarqube
    app.kubernetes.io/version: 8.9.7-community
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
      release: release-name
  template:
    metadata:
      labels:
        app: sonarqube
        release: release-name
      annotations:
        checksum/init-sysctl: 745bb977b8d7bd6ea8d51aedef73a11876ae0004588b85b1c351f64daaa3a5b8
        checksum/plugins: 6db0bc7a43843f7c7b2942865134b473c4de1214c3028c4ff13352e7507426aa
        checksum/config: 80d2795a2532df8129f10478b8b8501d717adde5e19bcf9634c8e3e05b60b414
        checksum/secret: c6017c901150e4d31cf96044e7bc9f4e4a57ba7b8336961ca7c1b0cfef7ebc7f
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: init-sysctl
          image: busybox:1.32
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          resources: {}
          command:
            - sh
            - -e
            - /tmp/scripts/init_sysctl.sh
          volumeMounts:
            - name: init-sysctl
              mountPath: /tmp/scripts/
        - name: wait-for-db
          image: busybox:1.32
          imagePullPolicy: IfNotPresent
          resources: {}
          command:
            - /bin/sh
            - -c
            - for i in $(seq 1 200); do nc -z -w3 release-name-postgresql 5432 && exit 0 || sleep 2; done; exit 1
      containers:
        - name: sonarqube
          image: sonarqube:8.9.7-community
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          env:
            - name: SONAR_WEB_JAVAOPTS
              value: ""
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonar-postgresql
                  key: postgresql-password
          envFrom:
            - configMapRef:
                name: release-name-sonarqube-postgres-config
          livenessProbe:
            httpGet:
              path: /api/system/status
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/system/status
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 6
          securityContext:
            runAsUser: 11425
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /opt/sonarqube/data
              name: sonarqube
              subPath: data
            - mountPath: /opt/sonarqube/temp
              name: sonarqube
              subPath: temp
            - mountPath: /opt/sonarqube/logs
              name: sonarqube
              subPath: logs
            - mountPath: /tmp
              name: tmp-dir
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: init-sysctl
          configMap:
            name: release-name-sonarqube-init-sysctl
            items:
              - key: init_sysctl.sh
                path: init_sysctl.sh
        - name: install-plugins
          configMap:
            name: release-name-sonarqube-install-plugins
            items:
              - key: install_plugins.sh
                path: install_plugins.sh
        - name: sonarqube
          emptyDir: {}
        - name: tmp-dir
          emptyDir: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app: postgresql
    chart: postgresql-8.6.4
    release: release-name
    heritage: Helm
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: postgresql
      release: release-name
      role: master
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app: postgresql
        chart: postgresql-8.6.4
        release: release-name
        heritage: Helm
        role: master
    spec:
      securityContext:
        fsGroup: 1001
      initContainers: null
      containers:
        - name: release-name-postgresql
          image: docker.io/bitnami/postgresql:11.7.0-debian-10-r26
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            runAsUser: 10829
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_USER
              value: sonarUser
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonar-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: sonarDB
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "sonarUser" -d "sonarDB" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "sonarUser" -d "sonarDB" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: null
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-ui-test
  annotations:
    helm.sh/hook: test-success
  labels:
    app: sonarqube
    chart: sonarqube-9.10.3
    release: release-name
    heritage: Helm
spec:
  initContainers:
    - name: bats
      image: bats/bats:1.2.1
      imagePullPolicy: IfNotPresent
      command:
        - bash
        - -c
      args:
        - |-
          set -ex
          cp -R /opt/bats /tools/bats/
      volumeMounts:
        - mountPath: /tools
          name: tools
  containers:
    - name: release-name-ui-test
      image: bitnami/minideb-extras
      imagePullPolicy: IfNotPresent
      command:
        - /tools/bats/bin/bats
        - --tap
        - /tests/run.sh
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
        - mountPath: /tools
          name: tools
  volumes:
    - name: tests
      configMap:
        name: release-name-sonarqube-tests
    - name: tools
      emptyDir: {}
  restartPolicy: Never
