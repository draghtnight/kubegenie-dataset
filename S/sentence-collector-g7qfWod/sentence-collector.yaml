apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysql-sc
  namespace: g7qfWod
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.4.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
secrets:
  - name: mysql-sc
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sentence-collector
  labels:
    helm.sh/chart: sentence-collector-0.1.2
    app.kubernetes.io/name: sentence-collector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-sc
  namespace: g7qfWod
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.4.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mysql-root-password: U0g0TTJuemoxVw==
  mysql-password: ZGVmYXVsdHBhc3N3b3Jk
---
apiVersion: v1
kind: Secret
metadata:
  name: sentence-collector
data:
  SC_CONNECT: bXlzcWw6Ly9zYzpkZWZhdWx0cGFzc3dvcmRAbXlzcWwtc2M6MzMwNi9zYw==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-sc
  namespace: g7qfWod
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.4.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |2-
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/plugin
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci

    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mysql/plugin

    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-sc-headless
  namespace: g7qfWod
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.4.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-sc
  namespace: g7qfWod
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.4.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  name: sentence-collector
  labels:
    helm.sh/chart: sentence-collector-0.1.2
    app.kubernetes.io/name: sentence-collector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sentence-collector
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentence-collector
  labels:
    helm.sh/chart: sentence-collector-0.1.2
    app.kubernetes.io/name: sentence-collector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sentence-collector
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sentence-collector
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: sentence-collector
      securityContext:
        fsGroup: 2000
      containers:
        - name: sentence-collector
          securityContext:
            runAsNonRoot: true
            runAsUser: 11156
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          image: mozilla/sentencecollector:2.0.9
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          envFrom:
            - secretRef:
                name: sentence-collector
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-sc
  namespace: g7qfWod
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.4.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  serviceName: mysql-sc
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: 268996b7b9020e59876e7044b804a8c76561a6d2dcf000cfa3a3b147ed70a24d
      labels:
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-8.4.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: mysql-sc
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mysql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:8.0.23-debian-10-r28
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 11805
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-sc
                  key: mysql-root-password
            - name: MYSQL_USER
              value: sc
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-sc
                  key: mysql-password
            - name: MYSQL_DATABASE
              value: sc
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources:
            limits: {}
            requests: {}
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: mysql-sc
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: mysql
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: sentence-collector-test-connection
  labels:
    helm.sh/chart: sentence-collector-0.1.2
    app.kubernetes.io/name: sentence-collector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - sentence-collector:80
  restartPolicy: Never
