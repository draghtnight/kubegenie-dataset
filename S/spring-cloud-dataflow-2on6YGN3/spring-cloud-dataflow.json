[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-mariadb",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-11.0.10",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "automountServiceAccountToken": false
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-rabbitmq",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "automountServiceAccountToken": true,
    "secrets": [
      {
        "name": "release-name-rabbitmq"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-spring-cloud-dataflow",
      "labels": {
        "app.kubernetes.io/name": "spring-cloud-dataflow",
        "helm.sh/chart": "spring-cloud-dataflow-11.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "2on6YGN3",
      "annotations": null
    },
    "automountServiceAccountToken": true
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-mariadb",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-11.0.10",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "mariadb-root-password": "NXVReEw5OXRmYw==",
      "mariadb-password": "Y2hhbmdlLW1l"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-rabbitmq-config",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "rabbitmq.conf": "IyMgVXNlcm5hbWUgYW5kIHBhc3N3b3JkCiMjCmRlZmF1bHRfdXNlciA9IHVzZXIKZGVmYXVsdF9wYXNzID0gQ0hBTkdFTUUKIyMgQ2x1c3RlcmluZwojIwpjbHVzdGVyX2Zvcm1hdGlvbi5wZWVyX2Rpc2NvdmVyeV9iYWNrZW5kICA9IHJhYmJpdF9wZWVyX2Rpc2NvdmVyeV9rOHMKY2x1c3Rlcl9mb3JtYXRpb24uazhzLmhvc3QgPSBrdWJlcm5ldGVzLmRlZmF1bHQKY2x1c3Rlcl9mb3JtYXRpb24ubm9kZV9jbGVhbnVwLmludGVydmFsID0gMTAKY2x1c3Rlcl9mb3JtYXRpb24ubm9kZV9jbGVhbnVwLm9ubHlfbG9nX3dhcm5pbmcgPSB0cnVlCmNsdXN0ZXJfcGFydGl0aW9uX2hhbmRsaW5nID0gYXV0b2hlYWwKIyBxdWV1ZSBtYXN0ZXIgbG9jYXRvcgpxdWV1ZV9tYXN0ZXJfbG9jYXRvciA9IG1pbi1tYXN0ZXJzCiMgZW5hYmxlIGd1ZXN0IHVzZXIKbG9vcGJhY2tfdXNlcnMuZ3Vlc3QgPSBmYWxzZQojZGVmYXVsdF92aG9zdCA9IGRlZmF1bHQtdmhvc3QKI2Rpc2tfZnJlZV9saW1pdC5hYnNvbHV0ZSA9IDUwTUI="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-rabbitmq",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "rabbitmq-password": "clpqQVZCc1QyR1VCaUpBeA==",
      "rabbitmq-erlang-cookie": "dHE5OTBzNEN5RVJKOXpEWGZZVW1EdmtjTDBFMTdJTEI="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-mariadb",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-11.0.10",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      }
    },
    "data": {
      "my.cnf": "[mysqld]\nskip-name-resolve\nexplicit_defaults_for_timestamp\nbasedir=/opt/bitnami/mariadb\nplugin_dir=/opt/bitnami/mariadb/plugin\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\ntmpdir=/opt/bitnami/mariadb/tmp\nmax_allowed_packet=16M\nbind-address=*\npid-file=/opt/bitnami/mariadb/tmp/mysqld.pid\nlog-error=/opt/bitnami/mariadb/logs/mysqld.log\ncharacter-set-server=UTF8\ncollation-server=utf8_general_ci\nslow_query_log=0\nslow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log\nlong_query_time=10.0\n\n[client]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\ndefault-character-set=UTF8\nplugin_dir=/opt/bitnami/mariadb/plugin\n\n[manager]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\npid-file=/opt/bitnami/mariadb/tmp/mysqld.pid"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-mariadb-init-scripts",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-11.0.10",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      }
    },
    "data": {
      "create_databases.sql": "CREATE OR REPLACE USER 'skipper'@'%' identified by 'change-me';\nCREATE DATABASE IF NOT EXISTS `skipper`;\nGRANT ALL ON skipper.* to 'skipper'@'%';\nFLUSH PRIVILEGES;\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-spring-cloud-dataflow-scripts",
      "labels": {
        "app.kubernetes.io/name": "spring-cloud-dataflow",
        "helm.sh/chart": "spring-cloud-dataflow-11.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "2on6YGN3"
    },
    "data": {
      "wait-for-backends.sh": "#!/bin/bash\n\nset -o errexit\nset -o pipefail\nset -o nounset\n\n# Auxiliary functions\nk8s_wait_for_statefulset() {\n    namespace=${1:?namespace is missing}\n    statefulset=${2:?statefulset name is missing}\n    local -i return_code=0\n\n    echo \"Waiting for statefulset ${statefulset} to be successfully rolled out...\"\n    kubectl rollout status --namespace \"$namespace\" statefulset \"$statefulset\" >/dev/null 2>&1 || return_code=$?\n    echo \"Rollout exit code: '${return_code}'\"\n    return $return_code\n}\nk8s_wait_for_statefulset default release-name-mariadb\nk8s_wait_for_statefulset default release-name-rabbitmq"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-spring-cloud-dataflow-server",
      "labels": {
        "app.kubernetes.io/name": "spring-cloud-dataflow",
        "helm.sh/chart": "spring-cloud-dataflow-11.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      },
      "namespace": "2on6YGN3"
    },
    "data": {
      "application.yaml": "spring:\n  cloud:\n    dataflow:\n      task:\n        platform:\n          kubernetes:\n            accounts:\n              default:\n                limits:\n                  cpu: 500m\n                  memory: 1024Mi\n                readinessProbeDelay: 120\n                livenessProbeDelay: 90\n                podSecurityContext:\n                  runAsUser: 1001\n                entryPointStyle: exec\n    task:\n      closecontextEnabled: true\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MariaDB102Dialect\n  datasource:\n    url: 'jdbc:mariadb://release-name-mariadb:3306/dataflow?useMysqlMetadata=true'\n    driverClassName: org.mariadb.jdbc.Driver\n    username: dataflow\n    password: ${mariadb-password}\n    testOnBorrow: true\n    validationQuery: \"SELECT 1\"\n  flyway:\n    enabled: true"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-spring-cloud-dataflow-skipper",
      "labels": {
        "app.kubernetes.io/name": "spring-cloud-dataflow",
        "helm.sh/chart": "spring-cloud-dataflow-11.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "skipper"
      },
      "namespace": "2on6YGN3"
    },
    "data": {
      "application.yaml": "spring:\n  cloud:\n    skipper:\n      server:\n        platform:\n          kubernetes:\n            accounts:\n              default:\n                environmentVariables:\n                  - SPRING_RABBITMQ_HOST=release-name-rabbitmq\n                  - SPRING_RABBITMQ_PORT=0\n                  - SPRING_RABBITMQ_USERNAME=user\n                  - SPRING_RABBITMQ_PASSWORD=${rabbitmq-password}\n                  - SPRING_RABBITMQ_VIRTUAL_HOST=/\n                limits:\n                  cpu: 500m\n                  memory: 1024Mi\n                readinessProbeDelay: 120\n                livenessProbeDelay: 90\n                podSecurityContext:\n                  runAsUser: 1001\n                entryPointStyle: exec\n                imagePullPolicy: IfNotPresent\n  jpa:\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MariaDB102Dialect\n  datasource:\n    url: 'jdbc:mariadb://release-name-mariadb:3306/skipper?useMysqlMetadata=true'\n    driverClassName: org.mariadb.jdbc.Driver\n    username: skipper\n    password: ${mariadb-password}\n    testOnBorrow: true\n    validationQuery: \"SELECT 1\"\n  flyway:\n    enabled: true"
    }
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-rabbitmq-endpoint-reader",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "endpoints"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create"
        ]
      }
    ]
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-spring-cloud-dataflow",
      "labels": {
        "app.kubernetes.io/name": "spring-cloud-dataflow",
        "helm.sh/chart": "spring-cloud-dataflow-11.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "2on6YGN3"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "services",
          "pods",
          "replicationcontrollers",
          "persistentvolumeclaims"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "delete",
          "update"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps",
          "secrets",
          "pods/log",
          "pods/status"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "statefulsets",
          "deployments",
          "replicasets"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "delete",
          "update",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "extensions"
        ],
        "resources": [
          "deployments",
          "replicasets"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "delete",
          "update",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "cronjobs",
          "jobs"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "delete",
          "update",
          "patch"
        ]
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-rabbitmq-endpoint-reader",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-rabbitmq"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-rabbitmq-endpoint-reader"
    }
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-spring-cloud-dataflow",
      "labels": {
        "app.kubernetes.io/name": "spring-cloud-dataflow",
        "helm.sh/chart": "spring-cloud-dataflow-11.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "2on6YGN3"
    },
    "roleRef": {
      "kind": "Role",
      "name": "release-name-spring-cloud-dataflow",
      "apiGroup": "rbac.authorization.k8s.io"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-spring-cloud-dataflow",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-mariadb",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-11.0.10",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "sessionAffinity": "None",
      "ports": [
        {
          "name": "mysql",
          "port": 3306,
          "protocol": "TCP",
          "targetPort": "mysql",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "mariadb",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-rabbitmq-headless",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "clusterIP": "None",
      "ports": [
        {
          "name": "epmd",
          "port": 4369,
          "targetPort": "epmd"
        },
        {
          "name": "amqp",
          "port": 5672,
          "targetPort": "amqp"
        },
        {
          "name": "dist",
          "port": 25672,
          "targetPort": "dist"
        },
        {
          "name": "http-stats",
          "port": 15672,
          "targetPort": "stats"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "rabbitmq",
        "app.kubernetes.io/instance": "release-name"
      },
      "publishNotReadyAddresses": true
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-rabbitmq",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "sessionAffinity": "None",
      "ports": [
        {
          "name": "amqp",
          "port": 5672,
          "targetPort": "amqp",
          "nodePort": null
        },
        {
          "name": "epmd",
          "port": 4369,
          "targetPort": "epmd",
          "nodePort": null
        },
        {
          "name": "dist",
          "port": 25672,
          "targetPort": "dist",
          "nodePort": null
        },
        {
          "name": "http-stats",
          "port": 15672,
          "targetPort": "stats",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "rabbitmq",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-spring-cloud-dataflow-server",
      "labels": {
        "app.kubernetes.io/name": "spring-cloud-dataflow",
        "helm.sh/chart": "spring-cloud-dataflow-11.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      },
      "namespace": "2on6YGN3",
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "sessionAffinity": "None",
      "ports": [
        {
          "name": "http",
          "port": 8080,
          "targetPort": "http",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "spring-cloud-dataflow",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "server"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-spring-cloud-dataflow-skipper",
      "labels": {
        "app.kubernetes.io/name": "spring-cloud-dataflow",
        "helm.sh/chart": "spring-cloud-dataflow-11.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "skipper"
      },
      "namespace": "2on6YGN3",
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "sessionAffinity": "None",
      "ports": [
        {
          "name": "http",
          "port": 80,
          "targetPort": "http",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "spring-cloud-dataflow",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "skipper"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-spring-cloud-dataflow-server",
      "labels": {
        "app.kubernetes.io/name": "spring-cloud-dataflow",
        "helm.sh/chart": "spring-cloud-dataflow-11.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "server"
      },
      "namespace": "2on6YGN3"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "spring-cloud-dataflow",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "server"
        }
      },
      "strategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/configuration": "d8a62f13f68aaccde84cd27365df18bdb333c6e19ef61b9e2e289c8caf1008aa"
          },
          "labels": {
            "app.kubernetes.io/name": "spring-cloud-dataflow",
            "helm.sh/chart": "spring-cloud-dataflow-11.0.3",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "server"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-spring-cloud-dataflow",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "spring-cloud-dataflow",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "server"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "initContainers": [
            {
              "name": "wait-for-backends",
              "image": "marketplace.azurecr.io/bitnami/kubectl:1.24.1-debian-11-r0",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/scripts/wait-for-backends.sh"
              ],
              "resources": {
                "limits": {},
                "requests": {}
              },
              "volumeMounts": [
                {
                  "name": "scripts",
                  "mountPath": "/scripts/wait-for-backends.sh",
                  "subPath": "wait-for-backends.sh"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "server",
              "image": "marketplace.azurecr.io/bitnami/spring-cloud-dataflow:2.9.4-debian-11-r0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 10374,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "SERVER_PORT",
                  "value": "8080"
                },
                {
                  "name": "SPRING_CLOUD_CONFIG_ENABLED",
                  "value": "false"
                },
                {
                  "name": "SPRING_CLOUD_KUBERNETES_CONFIG_ENABLE_API",
                  "value": "false"
                },
                {
                  "name": "SPRING_CLOUD_KUBERNETES_SECRETS_ENABLE_API",
                  "value": "false"
                },
                {
                  "name": "SPRING_CLOUD_KUBERNETES_SECRETS_PATHS",
                  "value": "/etc/secrets"
                },
                {
                  "name": "SPRING_CLOUD_DATAFLOW_SERVER_URI",
                  "value": "http://release-name-spring-cloud-dataflow-server.default.svc.cluster.local:8080"
                },
                {
                  "name": "SPRING_CLOUD_DATAFLOW_FEATURES_STREAMS_ENABLED",
                  "value": "true"
                },
                {
                  "name": "SPRING_CLOUD_DATAFLOW_FEATURES_TASKS_ENABLED",
                  "value": "true"
                },
                {
                  "name": "SPRING_CLOUD_DATAFLOW_FEATURES_SCHEDULES_ENABLED",
                  "value": "true"
                },
                {
                  "name": "SPRING_CLOUD_SKIPPER_CLIENT_SERVER_URI",
                  "value": "http://release-name-spring-cloud-dataflow-skipper.default.svc.cluster.local/api"
                },
                {
                  "name": "SPRING_APPLICATION_JSON",
                  "value": "{ \"maven\": { \"local-repository\": null, \"remote-repositories\": { \"repo1\": { \"url\": \"https://repo.spring.io/libs-snapshot\"} } } }"
                },
                {
                  "name": "KUBERNETES_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "KUBERNETES_TRUST_CERTIFICATES",
                  "value": "false"
                },
                {
                  "name": "SPRING_CLOUD_DATAFLOW_TASK_COMPOSEDTASKRUNNER_URI",
                  "value": "docker://docker.io/bitnami/spring-cloud-dataflow-composed-task-runner:2.9.4-debian-11-r0"
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/management/health",
                  "port": "http"
                },
                "initialDelaySeconds": 120,
                "periodSeconds": 20,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/management/health",
                  "port": "http"
                },
                "initialDelaySeconds": 120,
                "periodSeconds": 20,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "database",
                  "mountPath": "/etc/secrets/database",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/spring-cloud-dataflow/conf",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "database",
              "secret": {
                "secretName": "release-name-mariadb"
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-spring-cloud-dataflow-server",
                "items": [
                  {
                    "key": "application.yaml",
                    "path": "application.yml"
                  }
                ]
              }
            },
            {
              "name": "scripts",
              "configMap": {
                "name": "release-name-spring-cloud-dataflow-scripts",
                "defaultMode": 493
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-spring-cloud-dataflow-skipper",
      "labels": {
        "app.kubernetes.io/name": "spring-cloud-dataflow",
        "helm.sh/chart": "spring-cloud-dataflow-11.0.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "skipper"
      },
      "namespace": "2on6YGN3"
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "spring-cloud-dataflow",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "skipper"
        }
      },
      "strategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/configuration": "fe47f7a55f6c0fc63871892fb9b26df014a3c7fc756bf4778be94463e5a5e325"
          },
          "labels": {
            "app.kubernetes.io/name": "spring-cloud-dataflow",
            "helm.sh/chart": "spring-cloud-dataflow-11.0.3",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "skipper"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-spring-cloud-dataflow",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "spring-cloud-dataflow",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "skipper"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "initContainers": [
            {
              "name": "wait-for-backends",
              "image": "marketplace.azurecr.io/bitnami/kubectl:1.24.1-debian-11-r0",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/scripts/wait-for-backends.sh"
              ],
              "resources": {
                "limits": {},
                "requests": {}
              },
              "volumeMounts": [
                {
                  "name": "scripts",
                  "mountPath": "/scripts/wait-for-backends.sh",
                  "subPath": "wait-for-backends.sh"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "skipper",
              "image": "marketplace.azurecr.io/bitnami/spring-cloud-skipper:2.8.4-debian-11-r0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 10674,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "SERVER_PORT",
                  "value": "7577"
                },
                {
                  "name": "SPRING_CLOUD_CONFIG_ENABLED",
                  "value": "false"
                },
                {
                  "name": "SPRING_CLOUD_KUBERNETES_CONFIG_ENABLE_API",
                  "value": "false"
                },
                {
                  "name": "SPRING_CLOUD_KUBERNETES_SECRETS_ENABLE_API",
                  "value": "false"
                },
                {
                  "name": "SPRING_CLOUD_KUBERNETES_SECRETS_PATHS",
                  "value": "/etc/secrets"
                },
                {
                  "name": "KUBERNETES_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "KUBERNETES_TRUST_CERTIFICATES",
                  "value": "false"
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 7577,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/actuator/health",
                  "port": "http"
                },
                "initialDelaySeconds": 120,
                "periodSeconds": 20,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/actuator/health",
                  "port": "http"
                },
                "initialDelaySeconds": 120,
                "periodSeconds": 20,
                "timeoutSeconds": 1,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "database",
                  "mountPath": "/etc/secrets/database",
                  "readOnly": true
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/spring-cloud-skipper/conf",
                  "readOnly": true
                },
                {
                  "name": "rabbitmq",
                  "mountPath": "/etc/secrets/rabbitmq",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "database",
              "secret": {
                "secretName": "release-name-mariadb"
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-spring-cloud-dataflow-skipper",
                "items": [
                  {
                    "key": "application.yaml",
                    "path": "application.yml"
                  }
                ]
              }
            },
            {
              "name": "rabbitmq",
              "secret": {
                "secretName": "release-name-rabbitmq"
              }
            },
            {
              "name": "scripts",
              "configMap": {
                "name": "release-name-spring-cloud-dataflow-scripts",
                "defaultMode": 493
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-mariadb",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-11.0.10",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      }
    },
    "spec": {
      "replicas": 1,
      "revisionHistoryLimit": 10,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "mariadb",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "primary"
        }
      },
      "serviceName": "release-name-mariadb",
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/configuration": "16c9d408aace65890f44730fa15a5bb9c5549b3a1ae1aa792c0e7802fb4c2d4a"
          },
          "labels": {
            "app.kubernetes.io/name": "mariadb",
            "helm.sh/chart": "mariadb-11.0.10",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "primary"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-mariadb",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "mariadb",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "containers": [
            {
              "name": "mariadb",
              "image": "marketplace.azurecr.io/bitnami/mariadb:10.6.8-debian-10-r0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 10715,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "MARIADB_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-mariadb",
                      "key": "mariadb-root-password"
                    }
                  }
                },
                {
                  "name": "MARIADB_USER",
                  "value": "dataflow"
                },
                {
                  "name": "MARIADB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-mariadb",
                      "key": "mariadb-password"
                    }
                  }
                },
                {
                  "name": "MARIADB_DATABASE",
                  "value": "dataflow"
                }
              ],
              "ports": [
                {
                  "name": "mysql",
                  "containerPort": 3306
                }
              ],
              "livenessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 120,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                  ]
                }
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/bitnami/mariadb"
                },
                {
                  "name": "custom-init-scripts",
                  "mountPath": "/docker-entrypoint-initdb.d"
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/mariadb/conf/my.cnf",
                  "subPath": "my.cnf"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-mariadb"
              }
            },
            {
              "name": "custom-init-scripts",
              "configMap": {
                "name": "release-name-mariadb-init-scripts"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data",
            "labels": {
              "app.kubernetes.io/name": "mariadb",
              "app.kubernetes.io/instance": "release-name",
              "app.kubernetes.io/component": "primary"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-rabbitmq",
      "namespace": "2on6YGN3",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-10.1.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "serviceName": "release-name-rabbitmq-headless",
      "podManagementPolicy": "OrderedReady",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "rabbitmq",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "rabbitmq",
            "helm.sh/chart": "rabbitmq-10.1.4",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm"
          },
          "annotations": {
            "checksum/config": "19af5e515c09243f9581652d24a5ef8fcae77b25255796080f987f085c4522ee",
            "checksum/secret": "b4b090d0ba66cdae15115e566eea6d35afdd763ffbf248bc6ac55816a8c58f95"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-rabbitmq",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "rabbitmq",
                        "app.kubernetes.io/instance": "release-name"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "terminationGracePeriodSeconds": 120,
          "initContainers": null,
          "containers": [
            {
              "name": "rabbitmq",
              "image": "marketplace.azurecr.io/bitnami/rabbitmq:3.10.5-debian-10-r0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsNonRoot": true,
                "runAsUser": 10889,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/bin/bash",
                      "-ec",
                      "if [[ -f /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh ]]; then\n    /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh -t \"120\" -d \"false\"\nelse\n    rabbitmqctl stop_app\nfi\n"
                    ]
                  }
                }
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "MY_POD_IP",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "status.podIP"
                    }
                  }
                },
                {
                  "name": "MY_POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "MY_POD_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "K8S_SERVICE_NAME",
                  "value": "release-name-rabbitmq-headless"
                },
                {
                  "name": "K8S_ADDRESS_TYPE",
                  "value": "hostname"
                },
                {
                  "name": "RABBITMQ_FORCE_BOOT",
                  "value": "no"
                },
                {
                  "name": "RABBITMQ_NODE_NAME",
                  "value": "rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
                },
                {
                  "name": "K8S_HOSTNAME_SUFFIX",
                  "value": ".$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
                },
                {
                  "name": "RABBITMQ_MNESIA_DIR",
                  "value": "/bitnami/rabbitmq/mnesia/$(RABBITMQ_NODE_NAME)"
                },
                {
                  "name": "RABBITMQ_LDAP_ENABLE",
                  "value": "no"
                },
                {
                  "name": "RABBITMQ_LOGS",
                  "value": "-"
                },
                {
                  "name": "RABBITMQ_ULIMIT_NOFILES",
                  "value": "65536"
                },
                {
                  "name": "RABBITMQ_USE_LONGNAME",
                  "value": "true"
                },
                {
                  "name": "RABBITMQ_ERL_COOKIE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-rabbitmq",
                      "key": "rabbitmq-erlang-cookie"
                    }
                  }
                },
                {
                  "name": "RABBITMQ_LOAD_DEFINITIONS",
                  "value": "no"
                },
                {
                  "name": "RABBITMQ_DEFINITIONS_FILE",
                  "value": "/app/load_definition.json"
                },
                {
                  "name": "RABBITMQ_SECURE_PASSWORD",
                  "value": "yes"
                },
                {
                  "name": "RABBITMQ_USERNAME",
                  "value": "user"
                },
                {
                  "name": "RABBITMQ_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-rabbitmq",
                      "key": "rabbitmq-password"
                    }
                  }
                },
                {
                  "name": "RABBITMQ_PLUGINS",
                  "value": "rabbitmq_management, rabbitmq_peer_discovery_k8s, rabbitmq_auth_backend_ldap"
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "amqp",
                  "containerPort": 5672
                },
                {
                  "name": "dist",
                  "containerPort": 25672
                },
                {
                  "name": "stats",
                  "containerPort": 15672
                },
                {
                  "name": "epmd",
                  "containerPort": 4369
                }
              ],
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 120,
                "periodSeconds": 30,
                "successThreshold": 1,
                "timeoutSeconds": 20,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "rabbitmq-diagnostics -q ping"
                  ]
                }
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 10,
                "periodSeconds": 30,
                "successThreshold": 1,
                "timeoutSeconds": 20,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "configuration",
                  "mountPath": "/bitnami/rabbitmq/conf"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/rabbitmq/mnesia"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "configuration",
              "secret": {
                "secretName": "release-name-rabbitmq-config",
                "items": [
                  {
                    "key": "rabbitmq.conf",
                    "path": "rabbitmq.conf"
                  }
                ]
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data",
            "labels": {
              "app.kubernetes.io/name": "rabbitmq",
              "app.kubernetes.io/instance": "release-name"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  }
]