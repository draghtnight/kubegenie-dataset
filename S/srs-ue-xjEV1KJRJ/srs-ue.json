[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-srs-ue",
      "labels": {
        "app.kubernetes.io/name": "srs-ue",
        "helm.sh/chart": "srs-ue-0.1.1",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "20.10.1"
      }
    },
    "data": {
      "ue.conf": "#####################################################################\n#                   srsUE configuration file\n#####################################################################\n\n#####################################################################\n# RF configuration\n#\n# dl_earfcn: Downlink EARFCN code.\n# freq_offset: Uplink and Downlink optional frequency offset (in Hz)\n# tx_gain: Transmit gain (dB). \n# rx_gain: Optional receive gain (dB). If disabled, AGC if enabled\n#\n# Optional parameters: \n# dl_freq:            Override DL frequency corresponding to dl_earfcn\n# ul_freq:            Override UL frequency corresponding to dl_earfcn\n# nof_carriers:       Number of carriers\n# nof_antennas:       Number of antennas per carrier (all carriers have the same number of antennas)\n# device_name:        Device driver family. Supported options: \"auto\" (uses first found), \"UHD\" or \"bladeRF\" \n# device_args:        Arguments for the device driver. Options are \"auto\" or any string. \n#                     Default for UHD: \"recv_frame_size=9232,send_frame_size=9232\"\n#                     Default for bladeRF: \"\"\n# device_args_2:      Arguments for the RF device driver 2.\n# device_args_3:      Arguments for the RF device driver 3.\n# time_adv_nsamples:  Transmission time advance (in number of samples) to compensate for RF delay\n#                     from antenna to timestamp insertion. \n#                     Default \"auto\". B210 USRP: 100 samples, bladeRF: 27.\n# continuous_tx:      Transmit samples continuously to the radio or on bursts (auto/yes/no).\n#                     Default is auto (yes for UHD, no for rest)\n#####################################################################\n[rf]\ndl_earfcn = 3400\nfreq_offset = 0\ntx_gain = 80\n#rx_gain = 40\n\n#nof_carriers = 1\n#nof_antennas = 1\n\ndevice_name = auto\n\n# For best performance in 2x2 MIMO and >= 15 MHz use the following device_args settings:\n#     USRP B210: num_recv_frames=64,num_send_frames=64\n\n# For best performance when BW<5 MHz (25 PRB), use the following device_args settings:\n#     USRP B210: send_frame_size=512,recv_frame_size=512\n\ndevice_args = auto\n\n#device_args = auto\n#time_adv_nsamples = auto\n#continuous_tx     = auto\n\n# Example for ZMQ-based operation with TCP transport for I/Q samples\n#device_name = zmq\n#device_args = tx_port=tcp://*:2001,rx_port=tcp://localhost:2000,id=ue,base_srate=23.04e6\n\n#####################################################################\n# Packet capture configuration\n#\n# Packet capture is supported at both MAC and NAS layers.\n# MAC-layer packets are captured to file in the compact format\n# decoded by the Wireshark mac-lte-framed dissector.\n# To use this dissector, edit the preferences for DLT_USER to\n# add an entry with DLT=147, Payload Protocol=mac-lte-framed.\n# For more information see: https://wiki.wireshark.org/MAC-LTE\n# NAS-layer packets are dissected with DLT=148, and\n# Payload Protocol = nas-eps.\n#\n# enable:       Enable MAC layer packet captures (true/false)\n# filename:     File path to use for MAC packet captures\n# nas_enable:   Enable NAS layer packet captures (true/false)\n# nas_filename: File path to use for NAS packet captures\n#####################################################################\n[pcap]\nenable = false\nfilename = /tmp/ue.pcap\nnas_enable = false\nnas_filename = /tmp/nas.pcap\n\n#####################################################################\n# Log configuration\n#\n# Log levels can be set for individual layers. \"all_level\" sets log\n# level for all layers unless otherwise configured.\n# Format: e.g. phy_level = info\n#\n# In the same way, packet hex dumps can be limited for each level.\n# \"all_hex_limit\" sets the hex limit for all layers unless otherwise\n# configured.\n# Format: e.g. phy_hex_limit = 32\n#\n# Logging layers: rf, phy, mac, rlc, pdcp, rrc, nas, gw, usim, stack, all\n# Logging levels: debug, info, warning, error, none\n#\n# filename: File path to use for log output. Can be set to stdout\n#           to print logs to standard output\n# file_max_size: Maximum file size (in kilobytes). When passed, multiple files are created.\n#                If set to negative, a single log file will be created.\n#####################################################################\n[log]\nall_level = warning\nphy_lib_level = none\nall_hex_limit = 32\nfilename = /tmp/ue.log\nfile_max_size = -1\n\n#####################################################################\n# USIM configuration\n#\n# mode:   USIM mode (soft/pcsc)\n# algo:   Authentication algorithm (xor/milenage)\n# op/opc: 128-bit Operator Variant Algorithm Configuration Field (hex)\n#         - Specify either op or opc (only used in milenage)\n# k:      128-bit subscriber key (hex)\n# imsi:   15 digit International Mobile Subscriber Identity\n# imei:   15 digit International Mobile Station Equipment Identity\n# pin:    PIN in case real SIM card is used\n# reader: Specify card reader by it's name as listed by 'pcsc_scan'. If empty, try all available readers.\n#####################################################################\n[usim]\nmode = soft\nalgo = milenage\nopc  = E8ED289DEBA952E4283B54E88E6183CA\nk    = 465B5CE8B199B49FAA5F0A2EE238A6BC\nimsi = 001010000000001\nimei = 353490069873319\n#reader = \n#pin  = 1234\n\n#####################################################################\n# RRC configuration\n#\n# ue_category:       Sets UE category (range 1-5). Default: 4\n# release:           UE Release (8 to 10)\n# feature_group:     Hex value of the featureGroupIndicators field in the\n#                    UECapabilityInformation message. Default 0xe6041000\n# mbms_service_id:   MBMS service id for autostarting MBMS reception\n#                    (default -1 means disabled)\n# mbms_service_port: Port of the MBMS service\n#####################################################################\n[rrc]\n#ue_category       = 4\n#release           = 8\n#feature_group     = 0xe6041000\n#mbms_service_id   = -1\n#mbms_service_port = 4321\n\n#####################################################################\n# NAS configuration\n#\n# apn:               Set Access Point Name (APN)\n# apn_protocol:      Set APN protocol (IPv4, IPv6 or IPv4v6.)\n# user:              Username for CHAP authentication\n# pass:              Password for CHAP authentication\n# force_imsi_attach: Whether to always perform an IMSI attach\n# eia:               List of integrity algorithms included in UE capabilities\n#                      Supported: 1 - Snow3G, 2 - AES\n# eea:               List of ciphering algorithms included in UE capabilities\n#                      Supported: 0 - NULL, 1 - Snow3G, 2 - AES\n#####################################################################\n[nas]\n#apn = internet\n#apn_protocol = ipv4\n#user = srsuser\n#pass = srspass\n#force_imsi_attach = false\n#eia = 1,2\n#eea = 0,1,2\n\n#####################################################################\n# GW configuration\n#\n# netns:                Network namespace to create TUN device. Default: empty\n# ip_devname:           Name of the tun_srsue device. Default: tun_srsue\n# ip_netmask:           Netmask of the tun_srsue device. Default: 255.255.255.0\n#####################################################################\n[gw]\n#netns =\n#ip_devname = tun_srsue\n#ip_netmask = 255.255.255.0\n\n#####################################################################\n# GUI configuration\n#\n# Simple GUI displaying PDSCH constellation and channel freq response.\n# (Requires building with srsGUI)\n# enable:               Enable the graphical interface (true/false)\n#####################################################################\n[gui]\nenable = false\n\n#####################################################################\n# Channel emulator options:\n# enable:            Enable/Disable internal Downlink/Uplink channel emulator\n#\n# -- AWGN Generator\n# awgn.enable:       Enable/disable AWGN generator\n# awgn.n0:           Noise power in dBfs\n#\n# -- Fading emulator\n# fading.enable:     Enable/disable fading simulator\n# fading.model:      Fading model + maximum doppler (E.g. none, epa5, eva70, etu300, etc)\n#\n# -- Delay Emulator     delay(t) = delay_min + (delay_max - delay_min) * (1 + sin(2pi*t/period)) / 2\n#                       Maximum speed [m/s]: (delay_max - delay_min) * pi * 300 / period\n# delay.enable:      Enable/disable delay simulator\n# delay.period_s:    Delay period in seconds.\n# delay.init_time_s: Delay initial time in seconds.\n# delay.maximum_us:  Maximum delay in microseconds\n# delay.minumum_us:  Minimum delay in microseconds\n#\n# -- Radio-Link Failure (RLF) Emulator\n# rlf.enable:        Enable/disable RLF simulator\n# rlf.t_on_ms:       Time for On state of the channel (ms)\n# rlf.t_off_ms:      Time for Off state of the channel (ms)\n#\n# -- High Speed Train Doppler model simulator\n# hst.enable:        Enable/Disable HST simulator\n# hst.period_s:      HST simulation period in seconds\n# hst.fd_hz:         Doppler frequency in Hz\n# hst.init_time_s:   Initial time in seconds\n#####################################################################\n[channel.dl]\n#enable        = false\n\n[channel.dl.awgn]\n#enable        = false\n#n0            = -30\n\n[channel.dl.fading]\n#enable        = false\n#model         = none\n\n[channel.dl.delay]\n#enable        = false\n#period_s      = 3600\n#init_time_s   = 0\n#maximum_us    = 100\n#minimum_us    = 10\n\n[channel.dl.rlf]\n#enable        = false\n#t_on_ms       = 10000\n#t_off_ms      = 2000\n\n[channel.dl.hst]\n#enable        = false\n#period_s      = 7.2\n#fd_hz         = 750.0\n#init_time_s   = 0.0\n\n[channel.ul]\n#enable        = false\n\n[channel.ul.awgn]\n#enable        = false\n#n0            = -30\n\n[channel.ul.fading]\n#enable        = false\n#model         = none\n\n[channel.ul.delay]\n#enable        = false\n#period_s      = 3600\n#init_time_s   = 0\n#maximum_us    = 100\n#minimum_us    = 10\n\n[channel.ul.rlf]\n#enable        = false\n#t_on_ms       = 10000\n#t_off_ms      = 2000\n\n[channel.ul.hst]\n#enable        = false\n#period_s      = 7.2\n#fd_hz         = -750.0\n#init_time_s   = 0.0\n\n#####################################################################\n# PHY configuration options\n#\n# rx_gain_offset:       RX Gain offset to add to rx_gain to calibrate RSRP readings\n# prach_gain:           PRACH gain (dB). If defined, forces a gain for the tranmsission of PRACH only.,\n#                       Default is to use tx_gain in [rf] section. \n# cqi_max:              Upper bound on the maximum CQI to be reported. Default 15. \n# cqi_fixed:            Fixes the reported CQI to a constant value. Default disabled.\n# snr_ema_coeff:        Sets the SNR exponential moving average coefficient (Default 0.1)\n# snr_estim_alg:        Sets the noise estimation algorithm. (Default refs)\n#                          Options: pss:   use difference between received and known pss signal, \n#                                   refs:  use difference between noise references and noiseless (after filtering)\n#                                   empty: use empty subcarriers in the boarder of pss/sss signal\n# pdsch_max_its:        Maximum number of turbo decoder iterations (Default 4)\n# pdsch_meas_evm:       Measure PDSCH EVM, increases CPU load (default false)\n# nof_phy_threads:      Selects the number of PHY threads (maximum 4, minimum 1, default 2)\n# equalizer_mode:       Selects equalizer mode. Valid modes are: \"mmse\", \"zf\" or any \n#                       non-negative real number to indicate a regularized zf coefficient.\n#                       Default is MMSE.\n# correct_sync_error:   Channel estimator measures and pre-compensates time synchronization error. Increases CPU usage,\n#                       improves PDSCH decoding in high SFO and high speed UE scenarios.\n# sfo_ema:              EMA coefficient to average sample offsets used to compute SFO\n# sfo_correct_period:   Period in ms to correct sample time to adjust for SFO\n# sss_algorithm:        Selects the SSS estimation algorithm. Can choose between\n#                       {full, partial, diff}. \n# estimator_fil_auto:   The channel estimator smooths the channel estimate with an adaptative filter.\n# estimator_fil_stddev: Sets the channel estimator smooth gaussian filter standard deviation.\n# estimator_fil_order:  Sets the channel estimator smooth gaussian filter order (even values perform better).\n#                       The taps are [w, 1-2w, w]\n#\n# snr_to_cqi_offset:    Sets an offset in the SNR to CQI table. This is used to adjust the reported CQI.\n#\n# interpolate_subframe_enabled: Interpolates in the time domain the channel estimates within 1 subframe. Default is to average.\n#\n# pdsch_csi_enabled:     Stores the Channel State Information and uses it for weightening the softbits. It is only\n#                        used in TM1. It is True by default.\n#\n# pdsch_8bit_decoder:    Use 8-bit for LLR representation and turbo decoder trellis computation (Experimental)\n# force_ul_amplitude:    Forces the peak amplitude in the PUCCH, PUSCH and SRS (set 0.0 to 1.0, set to 0 or negative for disabling)\n#\n# in_sync_rsrp_dbm_th:    RSRP threshold (in dBm) above which the UE considers to be in-sync\n# in_sync_snr_db_th:      SNR threshold (in dB) above which the UE considers to be in-sync\n# nof_in_sync_events:     Number of PHY in-sync events before sending an in-sync event to RRC\n# nof_out_of_sync_events: Number of PHY out-sync events before sending an out-sync event to RRC\n#\n#####################################################################\n[phy]\n#rx_gain_offset      = 62\n#prach_gain          = 30\n#cqi_max             = 15\n#cqi_fixed           = 10\n#snr_ema_coeff       = 0.1\n#snr_estim_alg       = refs\n#pdsch_max_its       = 8    # These are half iterations\n#pdsch_meas_evm      = false\n#nof_phy_threads     = 3\n#equalizer_mode      = mmse\n#correct_sync_error  = false\n#sfo_ema             = 0.1\n#sfo_correct_period  = 10\n#sss_algorithm       = full\n#estimator_fil_auto  = false\n#estimator_fil_stddev  = 1.0\n#estimator_fil_order  = 4\n#snr_to_cqi_offset   = 0.0\n#interpolate_subframe_enabled = false\n#pdsch_csi_enabled  = true\n#pdsch_8bit_decoder = false\n#force_ul_amplitude = 0\n\n#in_sync_rsrp_dbm_th    = -130.0\n#in_sync_snr_db_th      = 3.0\n#nof_in_sync_events     = 10\n#nof_out_of_sync_events = 20\n\n#####################################################################\n# Simulation configuration options\n#\n# The UE simulation supports turning on and off airplane mode in the UE.\n# The actions are carried periodically until the UE is stopped.\n#\n# airplane_t_on_ms:   Time to leave airplane mode turned on (in ms)\n#\n# airplane_t_off_ms:  Time to leave airplane mode turned off (in ms)\n#\n#####################################################################\n[sim]\n#airplane_t_on_ms  = -1\n#airplane_t_off_ms = -1\n\n#####################################################################\n# General configuration options\n#\n# metrics_csv_enable:   Write UE metrics to CSV file.\n#\n# metrics_period_secs:  Sets the period at which metrics are requested from the UE.\n#\n# metrics_csv_filename: File path to use for CSV metrics.\n#\n# have_tti_time_stats:  Calculate TTI execution statistics using system clock\n#\n#####################################################################\n[general]\n#metrics_csv_enable  = false\n#metrics_period_secs = 1\n#metrics_csv_filename = /tmp/ue_metrics.csv\n#have_tti_time_stats = true\n"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-srs-ue",
      "labels": {
        "app.kubernetes.io/name": "srs-ue",
        "helm.sh/chart": "srs-ue-0.1.1",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "20.10.1"
      }
    },
    "spec": {
      "replicas": 1,
      "serviceName": "release-name-srs-ue",
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "srs-ue",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "srs-ue",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "ue",
              "image": "docker.io/openverso/srs-lte:20_10_1",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "ue"
              ],
              "securityContext": {
                "privileged": true,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "resources": {
                "limits": {
                  "ettus.com/usrp": 1
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "srsue-config",
                  "mountPath": "/etc/srslte/ue.conf",
                  "subPath": "ue.conf"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "srsue-config",
              "configMap": {
                "name": "release-name-srs-ue"
              }
            }
          ]
        }
      }
    }
  }
]