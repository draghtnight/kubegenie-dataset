apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ssv-node
  labels:
    app.kubernetes.io/name: ssv-node
    helm.sh/chart: ssv-node-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-ssv-node
  labels:
    app.kubernetes.io/name: ssv-node
    helm.sh/chart: ssv-node-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: "global:\n  LogLevel: \"error\"\n  LogFormat: \"json\"\ndb:\n  Path: ./data/db/node_1\neth2:\n  Network: prater\n  BeaconNodeAddr: \neth1:\n  ETH1Addr: \n  RegistryContractAddr: 0x687fb596F3892904F879118e2113e1EEe8746C2E\nOperatorPrivateKey:\n"
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-ssv-node-tcp
  labels:
    app.kubernetes.io/name: ssv-node
    helm.sh/chart: ssv-node-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 13000
      targetPort: discovery-tcp
      protocol: TCP
      name: discovery-tcp
  selector:
    app.kubernetes.io/name: ssv-node
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-ssv-node-udp
  labels:
    app.kubernetes.io/name: ssv-node
    helm.sh/chart: ssv-node-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 12000
      targetPort: discovery-udp
      protocol: UDP
      name: discovery-udp
  selector:
    app.kubernetes.io/name: ssv-node
    app.kubernetes.io/instance: release-name
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: release-name-ssv-node
  labels:
    app.kubernetes.io/name: ssv-node
    helm.sh/chart: ssv-node-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ssv-node
      app.kubernetes.io/instance: release-name
  serviceName: release-name-ssv-node
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ssv-node
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: release-name-ssv-node
      priorityClassName: ""
      initContainers:
        - name: init-chown
          image: busybox:1.34
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
          command:
            - chown
            - -R
            - 1001:1001
            - /data
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: node
          image: bloxstaking/ssv-node:latest
          imagePullPolicy: IfNotPresent
          command:
            - make
          args:
            - start-node
          env:
            - name: CONFIG_PATH
              value: /data/configs/config.yaml
            - name: BUILD_PATH
              value: /go/bin/ssvnode
          ports:
            - containerPort: 13000
              name: discovery-tcp
              protocol: TCP
            - containerPort: 12000
              name: discovery-udp
              protocol: UDP
          volumeMounts:
            - name: data
              mountPath: /data
            - name: configs
              mountPath: /data/configs
      volumes:
        - name: configs
          configMap:
            name: release-name-ssv-node
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: ssv-node
          helm.sh/chart: ssv-node-1.0.0
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/managed-by: Helm
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: null
        resources:
          requests:
            storage: 5Gi
