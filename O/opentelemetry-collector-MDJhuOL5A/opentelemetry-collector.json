[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-opentelemetry-collector",
      "labels": {
        "helm.sh/chart": "opentelemetry-collector-1.2.0",
        "app.kubernetes.io/name": "opentelemetry-collector",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.52.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "honeycomb-release-name-opentelemetry-collector",
      "labels": {
        "helm.sh/chart": "opentelemetry-collector-1.2.0",
        "app.kubernetes.io/name": "opentelemetry-collector",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.52.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "api-key": "WU9VUl9BUElfS0VZ"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-opentelemetry-collector",
      "labels": {
        "helm.sh/chart": "opentelemetry-collector-1.2.0",
        "app.kubernetes.io/name": "opentelemetry-collector",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.52.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "opentelemetry-collector-config": "receivers:\n  jaeger:\n    protocols:\n      grpc: null\n      thrift_binary: null\n      thrift_compact: null\n      thrift_http: null\n  otlp:\n    protocols:\n      grpc: null\n      http: null\n  zipkin: null\n\nprocessors:\n  batch: null\n  memory_limiter:\n    check_interval: 5s\n    limit_percentage: 75\n    spike_limit_percentage: 25\n\nexporters:\n  otlp:\n    endpoint: api.honeycomb.io:443\n    headers:\n      \"x-honeycomb-team\": \"${HONEYCOMB_API_KEY}\"\n      \"x-honeycomb-dataset\": \"opentelemetry-collector\"\n\nextensions:\n  health_check:\n    port: 13133\n  memory_ballast:\n    size_in_percentage: 35\n\nservice:\n  extensions:\n  - health_check\n  pipelines:\n    traces:\n      exporters:\n      - otlp\n      processors:\n      - memory_limiter\n      - batch\n      receivers:\n      - otlp\n      - jaeger\n      - zipkin\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-opentelemetry-collector",
      "labels": {
        "helm.sh/chart": "opentelemetry-collector-1.2.0",
        "app.kubernetes.io/name": "opentelemetry-collector",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.52.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "jaeger-binary",
          "port": 6832,
          "targetPort": "jaeger-binary",
          "protocol": "UDP"
        },
        {
          "name": "jaeger-compact",
          "port": 6831,
          "targetPort": "jaeger-compact",
          "protocol": "UDP"
        },
        {
          "name": "jaeger-grpc",
          "port": 14250,
          "targetPort": "jaeger-grpc",
          "protocol": "TCP"
        },
        {
          "name": "jaeger-http",
          "port": 14268,
          "targetPort": "jaeger-http",
          "protocol": "TCP"
        },
        {
          "name": "otlp-grpc",
          "port": 4317,
          "targetPort": "otlp-grpc",
          "protocol": "TCP"
        },
        {
          "name": "otlp-http",
          "port": 4318,
          "targetPort": "otlp-http",
          "protocol": "TCP"
        },
        {
          "name": "zipkin",
          "port": 9411,
          "targetPort": "zipkin",
          "protocol": "TCP"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "opentelemetry-collector",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-opentelemetry-collector",
      "labels": {
        "helm.sh/chart": "opentelemetry-collector-1.2.0",
        "app.kubernetes.io/name": "opentelemetry-collector",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.52.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "opentelemetry-collector",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "4d72ac868d687f3a1875a9380f8d22530fed7f6f3afe516626e7d3c476b74578",
            "checksum/secret": "a792e7af268996a8476363c23b9af68cc633e30e7cce2460e66425cf070972dd"
          },
          "labels": {
            "app.kubernetes.io/name": "opentelemetry-collector",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-opentelemetry-collector",
          "securityContext": {},
          "containers": [
            {
              "name": "opentelemetry-collector",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "image": "otel/opentelemetry-collector-contrib:0.52.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--config=/conf/opentelemetry-collector-config.yaml"
              ],
              "env": [
                {
                  "name": "HONEYCOMB_API_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "honeycomb-release-name-opentelemetry-collector",
                      "key": "api-key"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "name": "jaeger-binary",
                  "containerPort": 6832,
                  "protocol": "UDP"
                },
                {
                  "name": "jaeger-compact",
                  "containerPort": 6831,
                  "protocol": "UDP"
                },
                {
                  "name": "jaeger-grpc",
                  "containerPort": 14250,
                  "protocol": "TCP"
                },
                {
                  "name": "jaeger-http",
                  "containerPort": 14268,
                  "protocol": "TCP"
                },
                {
                  "name": "otlp-grpc",
                  "containerPort": 4317,
                  "protocol": "TCP"
                },
                {
                  "name": "otlp-http",
                  "containerPort": 4318,
                  "protocol": "TCP"
                },
                {
                  "name": "zipkin",
                  "containerPort": 9411,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "name": "opentelemetry-collector-config",
                  "mountPath": "/conf"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 13133
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 13133
                }
              },
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "400Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "opentelemetry-collector-config",
              "configMap": {
                "name": "release-name-opentelemetry-collector",
                "items": [
                  {
                    "key": "opentelemetry-collector-config",
                    "path": "opentelemetry-collector-config.yaml"
                  }
                ]
              }
            }
          ]
        }
      }
    }
  }
]