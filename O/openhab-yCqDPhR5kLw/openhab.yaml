apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-openhab
  labels:
    helm.sh/chart: openhab-1.1.0
    app.kubernetes.io/name: openhab
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.5.9
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-openhab
  labels:
    helm.sh/chart: openhab-1.1.0
    app.kubernetes.io/name: openhab
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.5.9
    app.kubernetes.io/managed-by: Helm
data:
  OPENHAB_CONF: /data/config
  OPENHAB_USERDATA: /data/userdata
  USER_ID: "1000"
  GROUP_ID: "1000"
  OPENHAB_HTTP_PORT: "8080"
  OPENHAB_HTTPS_PORT: "8443"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-openhab-init-scripts
  labels:
    helm.sh/chart: openhab-1.1.0
    app.kubernetes.io/name: openhab
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.5.9
    app.kubernetes.io/managed-by: Helm
data:
  00-init-userdata.sh: |
    #!/bin/bash -x
    # ensure userdata dir exists

    if [[ ! -f "${OPENHAB_USERDATA}/.olympus-lck" ]]; then
      echo "Creating userdata dir: ${OPENHAB_USERDATA}"
      mkdir -p "${OPENHAB_USERDATA}"
      cp -av "${OPENHAB_HOME}/dist/userdata/." "${OPENHAB_USERDATA}/"
      touch "${OPENHAB_USERDATA}/.olympus-lck"
    fi

    if [ ! -z "${OPENHAB_CONF}" ]
    then
      echo "Creating config dir: ${OPENHAB_CONF}"
      mkdir -p "${OPENHAB_CONF}"
    fi
  02-setpcap-on-java.sh: |
    #!/bin/bash -x
    setcap 'cap_net_bind_service=+ep' "${JAVA_HOME}/bin/java"
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-openhab
  labels:
    helm.sh/chart: openhab-1.1.0
    app.kubernetes.io/name: openhab
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.5.9
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: openhab
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-openhab
  labels:
    helm.sh/chart: openhab-1.1.0
    app.kubernetes.io/name: openhab
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 2.5.9
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openhab
      app.kubernetes.io/instance: release-name
  serviceName: openhab
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openhab
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-openhab
      securityContext: {}
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      volumes:
        - name: init-scripts
          configMap:
            name: release-name-openhab-init-scripts
            defaultMode: 511
        - name: data
          emptyDir: {}
      containers:
        - name: openhab
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: openhab/openhab:2.5.9
          imagePullPolicy: IfNotPresent
          env:
            - name: OPENHAB_CONF
              valueFrom:
                configMapKeyRef:
                  name: openhab
                  key: OPENHAB_CONF
            - name: OPENHAB_USERDATA
              valueFrom:
                configMapKeyRef:
                  name: openhab
                  key: OPENHAB_USERDATA
            - name: USER_ID
              valueFrom:
                configMapKeyRef:
                  name: openhab
                  key: USER_ID
            - name: GROUP_ID
              valueFrom:
                configMapKeyRef:
                  name: openhab
                  key: GROUP_ID
            - name: OPENHAB_HTTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: openhab
                  key: OPENHAB_HTTP_PORT
            - name: OPENHAB_HTTPS_PORT
              valueFrom:
                configMapKeyRef:
                  name: openhab
                  key: OPENHAB_HTTPS_PORT
            - name: EXTRA_JAVA_OPTS
              value: -Duser.timezone=UTC
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: ssh
              containerPort: 8101
              protocol: TCP
            - name: lsp
              containerPort: 5007
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
            - name: init-scripts
              mountPath: /etc/cont-init.d
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 300
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 300
            timeoutSeconds: 2
          resources:
            seccompProfile:
              type: RuntimeDefault
  volumeClaimTemplates: null
