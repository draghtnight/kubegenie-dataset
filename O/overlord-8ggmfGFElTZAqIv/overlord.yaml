apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-overlord
  labels:
    helm.sh/chart: overlord-0.2.0
    app.kubernetes.io/name: overlord
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Secret
metadata:
  name: overlord
  namespace: 8ggmfGFElTZAqIv
type: Opaque
data:
  apiserver.toml: null
  scheduler.toml: null
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-overlord-apiserver
  labels:
    app.kubernetes.io/name: overlord
    app.kubernetes.io/instance: apiserver
    helm.sh/chart: overlord-0.2.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: overlord
    app.kubernetes.io/instance: apiserver
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-overlord-web
  labels:
    app.kubernetes.io/name: overlord
    app.kubernetes.io/instance: web
    helm.sh/chart: overlord-0.2.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: overlord
    app.kubernetes.io/instance: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-overlord-apiserver
  labels:
    app.kubernetes.io/name: overlord
    app.kubernetes.io/instance: apiserver
    helm.sh/chart: overlord-0.2.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: overlord
      app.kubernetes.io/instance: apiserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: overlord
        app.kubernetes.io/instance: apiserver
    spec:
      containers:
        - name: overlord
          image: douz/overlord:latest
          imagePullPolicy: IfNotPresent
          command:
            - apiserver
            - -std
            - -conf
            - /app/config/apiserver.toml
          volumeMounts:
            - name: config
              mountPath: /app/config/
              readOnly: true
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config
          secret:
            secretName: overlord
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-overlord-scheduler
  labels:
    app.kubernetes.io/name: overlord
    app.kubernetes.io/instance: scheduler
    helm.sh/chart: overlord-0.2.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: overlord
      app.kubernetes.io/instance: scheduler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: overlord
        app.kubernetes.io/instance: scheduler
    spec:
      containers:
        - name: overlord
          image: douz/overlord:latest
          imagePullPolicy: IfNotPresent
          command:
            - scheduler
            - -std
            - -conf
            - /app/config/scheduler.toml
          volumeMounts:
            - name: config
              mountPath: /app/config/
              readOnly: true
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config
          secret:
            secretName: overlord
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-overlord-web
  labels:
    app.kubernetes.io/name: overlord
    app.kubernetes.io/instance: web
    helm.sh/chart: overlord-0.2.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: overlord
      app.kubernetes.io/instance: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: overlord
        app.kubernetes.io/instance: web
    spec:
      containers:
        - name: overlord
          image: douz/overlord:latest
          imagePullPolicy: IfNotPresent
          command:
            - nginx
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
