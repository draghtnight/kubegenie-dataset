[
  {
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
      "name": "ems-gateway",
      "annotations": {
        "consul.hashicorp.com/service-tags": "prometheus-metrics",
        "consul.hashicorp.com/service-meta-coinapi-apikey": "your-coinapi-apikey-here",
        "consul.hashicorp.com/service-meta-ems-api-type": "GATEWAY"
      },
      "labels": {
        "name": "ems-gateway",
        "app": "oeml-api"
      }
    },
    "spec": {
      "selector": {
        "name": "ems-gateway",
        "app": "oeml-api"
      },
      "ports": [
        {
          "name": "http",
          "port": 80
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "ems-gateway",
      "labels": {
        "name": "ems-gateway",
        "app": "oeml-api"
      }
    },
    "spec": {
      "revisionHistoryLimit": 10,
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "name": "ems-gateway",
          "app": "oeml-api"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "prometheus.io/port": "80",
            "prometheus.io/scrape": "true"
          },
          "labels": {
            "name": "ems-gateway",
            "app": "oeml-api"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "oeml-api",
              "env": [
                {
                  "name": "CoinAPI__ApiKey",
                  "value": "YOUR-COINAPI-APIKEY-HERE"
                },
                {
                  "name": "CoinAPI__SandboxMode",
                  "value": "false"
                },
                {
                  "name": "OEML__Port",
                  "value": "80"
                },
                {
                  "name": "OEML__LocalAddress",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "status.podIP"
                    }
                  }
                },
                {
                  "name": "POD_IP",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "status.podIP"
                    }
                  }
                },
                {
                  "name": "HOST_IP",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "status.hostIP"
                    }
                  }
                },
                {
                  "name": "KUBERNETES_NODE_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "spec.nodeName"
                    }
                  }
                },
                {
                  "name": "KUBERNETES_POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "KUBERNETES_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                }
              ],
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "coinapi/oeml-api:3.0-latest",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/health/live",
                  "port": "http"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 60
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/health/ready",
                  "port": "http"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 60
              },
              "resources": null
            }
          ],
          "tolerations": [
            {
              "effect": "NoSchedule",
              "key": "node.kubernetes.io/disk-pressure",
              "operator": "Exists"
            },
            {
              "effect": "NoSchedule",
              "key": "node.kubernetes.io/out-of-disk",
              "operator": "Exists"
            }
          ]
        }
      }
    }
  }
]