apiVersion: v1
kind: ServiceAccount
metadata:
  name: openmetadata
  labels:
    helm.sh/chart: openmetadata-0.0.25
    app.kubernetes.io/name: openmetadata
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.10.3
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Service
metadata:
  name: openmetadata
  labels:
    helm.sh/chart: openmetadata-0.0.25
    app.kubernetes.io/name: openmetadata
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.10.3
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8585
      targetPort: http
      protocol: TCP
      name: http
    - port: 8586
      targetPort: http-admin
      protocol: TCP
      name: http-admin
  selector:
    app.kubernetes.io/name: openmetadata
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openmetadata
  labels:
    helm.sh/chart: openmetadata-0.0.25
    app.kubernetes.io/name: openmetadata
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.10.3
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openmetadata
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openmetadata
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: openmetadata
      securityContext: {}
      initContainers: []
      volumes: []
      containers:
        - name: openmetadata
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: openmetadata/server:0.10.3
          imagePullPolicy: Always
          volumeMounts: null
          ports:
            - name: http
              containerPort: 8585
              protocol: TCP
            - name: http-admin
              containerPort: 8586
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 5
            httpGet:
              path: /api/v1/health-check
              port: http
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 5
            httpGet:
              path: /
              port: http
          env:
            - name: SERVER_HOST
              value: openmetadata
            - name: SERVER_PORT
              value: "8585"
            - name: SERVER_ADMIN_PORT
              value: "8586"
            - name: AUTHENTICATION_PROVIDER
              value: no-auth
            - name: AUTHENTICATION_PUBLIC_KEYS
              value: '[]'
            - name: AUTHENTICATION_AUTHORITY
              value: ""
            - name: AUTHENTICATION_CLIENT_ID
              value: ""
            - name: AUTHENTICATION_CALLBACK_URL
              value: ""
            - name: AUTHORIZER_CLASS_NAME
              value: org.openmetadata.catalog.security.NoopAuthorizer
            - name: AUTHORIZER_REQUEST_FILTER
              value: org.openmetadata.catalog.security.NoopFilter
            - name: AUTHORIZER_ADMIN_PRINCIPALS
              value: '[admin]'
            - name: AUTHORIZER_INGESTION_PRINCIPALS
              value: '[ingestion-bot]'
            - name: AUTHORIZER_PRINCIPAL_DOMAIN
              value: open-metadata.org
            - name: ELASTICSEARCH_HOST
              value: elasticsearch
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: ELASTICSEARCH_SCHEME
              value: http
            - name: MYSQL_HOST
              value: mysql
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_USER
              value: openmetadata_user
            - name: MYSQL_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: openmetadata-mysql-password
            - name: MYSQL_DATABASE
              value: openmetadata_db
            - name: DB_DRIVER_CLASS
              value: com.mysql.cj.jdbc.Driver
            - name: DB_SCHEME
              value: mysql
            - name: DB_USE_SSL
              value: "false"
            - name: AIRFLOW_HOST
              value: http://openmetadata-dependencies-web.default.svc.cluster.local:8080
            - name: AIRFLOW_USERNAME
              value: admin
            - name: AIRFLOW_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airflow-secrets
                  key: openmetadata-airflow-password
            - name: SERVER_HOST_API_URL
              value: http://openmetadata.default.svc.cluster.local:8585/api
            - name: AIRFLOW_AUTH_PROVIDER
              value: no-auth
          resources:
            seccompProfile:
              type: RuntimeDefault
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-migrations-cm-hook
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "-10"
    helm.sh/hook-delete-policy: hook-succeeded, hook-failed
data:
  check_db_migrations.sh: |
    #!/bin/bash
    /openmetadata-*/bootstrap/bootstrap_storage.sh validate &> /dev/null
    if [ $? -ne 0 ]
    then
        echo "Failed to validate database migrations. Self healing using bootstrap_storage.sh repair command..."
        /openmetadata-*/bootstrap/bootstrap_storage.sh repair
    else
        echo "Everything Looks Good!"
    fi
---
apiVersion: v1
kind: Pod
metadata:
  name: openmetadata-test-connection
  labels:
    helm.sh/chart: openmetadata-0.0.25
    app.kubernetes.io/name: openmetadata
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.10.3
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - openmetadata:8585
  restartPolicy: Never
---
apiVersion: batch/v1
kind: Job
metadata:
  name: openmetadata-db-migrations-hook
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "-1"
    helm.sh/hook-delete-policy: hook-succeeded, hook-failed
spec:
  template:
    metadata:
      creationTimestamp: null
    spec:
      containers:
        - command:
            - /bin/bash
          args:
            - -c
            - ./db-migrations/check_db_migrations.sh
          image: openmetadata/server:0.10.3
          imagePullPolicy: Always
          name: openmetadata-db-migrations-hook
          env:
            - name: SERVER_HOST
              value: openmetadata
            - name: SERVER_PORT
              value: "8585"
            - name: SERVER_ADMIN_PORT
              value: "8586"
            - name: ELASTICSEARCH_HOST
              value: elasticsearch
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: ELASTICSEARCH_SCHEME
              value: http
            - name: MYSQL_HOST
              value: mysql
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_USER
              value: openmetadata_user
            - name: MYSQL_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: openmetadata-mysql-password
            - name: MYSQL_DATABASE
              value: openmetadata_db
            - name: DB_DRIVER_CLASS
              value: com.mysql.cj.jdbc.Driver
            - name: DB_SCHEME
              value: mysql
            - name: DB_USE_SSL
              value: "false"
          volumeMounts:
            - name: migration-script
              mountPath: /db-migrations
      restartPolicy: Never
      volumes:
        - name: migration-script
          configMap:
            name: db-migrations-cm-hook
            defaultMode: 511
