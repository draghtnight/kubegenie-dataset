apiVersion: v1
kind: Secret
metadata:
  name: release-name-valheim
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: valheim
    app.kubernetes.io/version: latest
    helm-revision: "1"
    helm.sh/chart: valheim-3.0.4
stringData:
  SERVER_PASS: secret
  SUPERVISOR_HTTP_PASS: secret
  SUPERVISOR_HTTP_USER: admin
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-valheim-backups
  labels:
    helm.sh/chart: valheim-3.0.4
    app.kubernetes.io/name: valheim
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 999Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-valheim-config
  labels:
    helm.sh/chart: valheim-3.0.4
    app.kubernetes.io/name: valheim
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 999Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-valheim
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: valheim
    app.kubernetes.io/version: latest
    helm-revision: "1"
    helm.sh/chart: valheim-3.0.4
  annotations: null
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  ports:
    - port: 9010
      targetPort: main
      protocol: TCP
      name: main
  selector:
    app.kubernetes.io/name: valheim
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-valheim-supervisor
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: valheim
    app.kubernetes.io/version: latest
    helm-revision: "1"
    helm.sh/chart: valheim-3.0.4
  annotations: null
spec:
  type: ClusterIP
  ports:
    - port: 9011
      targetPort: supervisor
      protocol: TCP
      name: supervisor
  selector:
    app.kubernetes.io/name: valheim
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-valheim-valheim
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: valheim
    app.kubernetes.io/version: latest
    helm-revision: "1"
    helm.sh/chart: valheim-3.0.4
  annotations:
    metallb.universe.tf/allow-shared-ip: release-name-valheim
spec:
  type: LoadBalancer
  ports:
    - port: 2456
      targetPort: valheim1
      protocol: UDP
      name: valheim1
    - port: 2457
      targetPort: valheim2
      protocol: UDP
      name: valheim2
    - port: 2458
      targetPort: valheim3
      protocol: UDP
      name: valheim3
  selector:
    app.kubernetes.io/name: valheim
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-valheim
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: valheim
    app.kubernetes.io/version: latest
    helm-revision: "1"
    helm.sh/chart: valheim-3.0.4
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: valheim
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: valheim
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 0
        runAsUser: 0
        supplementalGroups:
          - 568
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      enableServiceLinks: false
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: autopermissions
          image: ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583
          securityContext:
            runAsUser: 11899
            privileged: true
            allowPrivilegeEscalation: false
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          command:
            - /bin/sh
            - -c
            - |
              /bin/bash <<'EOF'
              echo "Automatically correcting permissions..."
              echo "increasing inotify limits..."
              ( sysctl -w fs.inotify.max_user_watches=524288 || echo "error setting inotify") && ( sysctl -w fs.inotify.max_user_instances=512 || echo "error setting inotify")
              EOF
          volumeMounts: null
      containers:
        - name: release-name-valheim
          image: tccr.io/truecharts/valheim-server:latest@sha256:b100977e8a339a0d0e6aa393d5092e644901f551f41f247b41a05b2b1661c872
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: PUID
              value: "568"
            - name: USER_ID
              value: "568"
            - name: UID
              value: "568"
            - name: UMASK
              value: "2"
            - name: UMASK_SET
              value: "2"
            - name: PGID
              value: "568"
            - name: GROUP_ID
              value: "568"
            - name: GID
              value: "568"
            - name: NVIDIA_VISIBLE_DEVICES
              value: void
            - name: TZ
              value: UTC
            - name: BACKUPS
              value: "true"
            - name: BACKUPS_DIRECTORY
              value: /backups
            - name: BACKUPS_INTERVAL
              value: "43200"
            - name: BACKUPS_MAX_AGE
              value: "3"
            - name: SERVER_NAME
              value: My Server
            - name: SERVER_PORT
              value: "2456"
            - name: SERVER_PUBLIC
              value: "true"
            - name: STATUS_HTTP
              value: "true"
            - name: STATUS_HTTP_PORT
              value: "9010"
            - name: SUPERVISOR_HTTP
              value: "true"
            - name: SUPERVISOR_HTTP_PORT
              value: "9011"
            - name: UPDATE_INTERVAL
              value: "10800"
            - name: WORLD_NAME
              value: Dedicated
          envFrom:
            - secretRef:
                name: release-name-valheim
          ports:
            - name: main
              containerPort: 9010
              protocol: TCP
            - name: supervisor
              containerPort: 9011
              protocol: TCP
            - name: valheim1
              containerPort: 2456
              protocol: UDP
            - name: valheim2
              containerPort: 2457
              protocol: UDP
            - name: valheim3
              containerPort: 2458
              protocol: UDP
          volumeMounts:
            - mountPath: /backups
              name: backups
            - mountPath: /config
              name: config
            - mountPath: /shared
              name: shared
            - mountPath: /tmp
              name: temp
            - mountPath: /var/logs
              name: varlogs
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: backups
          persistentVolumeClaim:
            claimName: release-name-valheim-backups
        - name: config
          persistentVolumeClaim:
            claimName: release-name-valheim-config
        - name: shared
          emptyDir: {}
        - name: temp
          emptyDir:
            medium: Memory
        - name: varlogs
          emptyDir: {}
