[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-verdaccio",
      "labels": {
        "app": "verdaccio",
        "chart": "verdaccio-0.7.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "config.yaml": "# This is the config file used for the docker images.\n# It allows all users to do anything, so don't use it on production systems.\n#\n# Do not configure host and port under `listen` in this file\n# as it will be ignored when using docker.\n# see https://github.com/verdaccio/verdaccio/blob/master/docs/docker.md#docker-and-custom-port-configuration\n#\n# Look here for more config file examples:\n# https://github.com/verdaccio/verdaccio/tree/master/conf\n#\n\n# path to a directory with all packages\nstorage: /verdaccio/storage/data\n\nweb:\n  # WebUI is enabled as default, if you want disable it, just uncomment this line\n  #enable: false\n  title: Verdaccio\n\nauth:\n  htpasswd:\n    file: /verdaccio/storage/htpasswd\n    # Maximum amount of users allowed to register, defaults to \"+infinity\".\n    # You can set this to -1 to disable registration.\n    #max_users: 1000\n\n# a list of other known repositories we can talk to\nuplinks:\n  npmjs:\n    url: https://registry.npmjs.org/\n\npackages:\n  '@*/*':\n    # scoped packages\n    access: $all\n    publish: $authenticated\n    proxy: npmjs\n\n  '**':\n    # allow all users (including non-authenticated users) to read and\n    # publish all packages\n    #\n    # you can specify usernames/groupnames (depending on your auth plugin)\n    # and three keywords: \"$all\", \"$anonymous\", \"$authenticated\"\n    access: $all\n\n    # allow all known users to publish packages\n    # (anyone can register by default, remember?)\n    publish: $authenticated\n\n    # if package is not available locally, proxy requests to 'npmjs' registry\n    proxy: npmjs\n\n# To use `npm audit` uncomment the following section\nmiddlewares:\n  audit:\n    enabled: true\n\n# log settings\nlogs:\n  - {type: stdout, format: pretty, level: http}\n  #- {type: file, path: verdaccio.log, level: info}"
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "labels": {
        "app": "release-name-verdaccio",
        "chart": "verdaccio-0.7.0",
        "release": "release-name",
        "heritage": "Helm"
      },
      "name": "release-name-verdaccio"
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "8Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-verdaccio",
      "labels": {
        "app": "verdaccio",
        "chart": "verdaccio-0.7.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "clusterIP": "",
      "ports": [
        {
          "port": 4873,
          "targetPort": "http",
          "protocol": "TCP",
          "name": null
        }
      ],
      "selector": {
        "app": "verdaccio",
        "release": "release-name"
      },
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "apps/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app": "verdaccio",
        "chart": "verdaccio-0.7.0",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-verdaccio"
    },
    "spec": {
      "replicas": 1,
      "strategy": {
        "type": "Recreate",
        "rollingUpdate": null
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "1aadcfb238e07191a14e3df92f1f007194fd2427de007a75af764831f2824e2e"
          },
          "labels": {
            "app": "verdaccio",
            "release": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "verdaccio",
              "image": "verdaccio/verdaccio:3.11.6",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "containerPort": 4873,
                  "name": "http"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/-/ping",
                  "port": "http"
                },
                "initialDelaySeconds": 5
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/-/ping",
                  "port": "http"
                },
                "initialDelaySeconds": 5
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/verdaccio/storage",
                  "name": "storage",
                  "readOnly": false
                },
                {
                  "mountPath": "/verdaccio/conf",
                  "name": "config",
                  "readOnly": true
                }
              ]
            }
          ],
          "securityContext": {
            "runAsUser": 100,
            "fsGroup": 101
          },
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-verdaccio"
              }
            },
            {
              "name": "storage",
              "persistentVolumeClaim": {
                "claimName": "release-name-verdaccio"
              }
            }
          ]
        }
      }
    }
  }
]