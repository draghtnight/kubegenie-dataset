apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vald-agent-ngt
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: agent
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: vald-agent-ngt
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vald-discoverer
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: discoverer
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app: vald-discoverer
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vald-lb-gateway
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: gateway-lb
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app: vald-lb-gateway
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vald-manager-index
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: manager-index
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app: vald-manager-index
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vald
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: discoverer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vald-agent-ngt-config
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: agent
data:
  config.yaml: |
    ---
    version: v0.0.0
    time_zone: UTC
    logging:
      format: raw
      level: debug
      logger: glg
    server_config:
      servers:
        - name: grpc
          host: 0.0.0.0
          port: 8081
          grpc:
            bidirectional_stream_concurrency: 20
            connection_timeout: ""
            enable_reflection: true
            header_table_size: 0
            initial_conn_window_size: 0
            initial_window_size: 0
            interceptors:
            - RecoverInterceptor
            keepalive:
              max_conn_age: ""
              max_conn_age_grace: ""
              max_conn_idle: ""
              min_time: 60s
              permit_without_stream: true
              time: 120s
              timeout: 30s
            max_header_list_size: 0
            max_receive_message_size: 0
            max_send_message_size: 0
            read_buffer_size: 0
            write_buffer_size: 0
          mode: GRPC
          network: tcp
          probe_wait_time: 3s
          restart: true
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
      health_check_servers:
        - name: liveness
          host: 0.0.0.0
          port: 3000
          http:
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            shutdown_duration: 5s
            write_timeout: ""
          mode: ""
          network: tcp
          probe_wait_time: 3s
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
        - name: readiness
          host: 0.0.0.0
          port: 3001
          http:
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            shutdown_duration: 0s
            write_timeout: ""
          mode: ""
          network: tcp
          probe_wait_time: 3s
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
      metrics_servers:
      startup_strategy:
        - liveness
        - grpc
        - readiness
      full_shutdown_duration: 600s
      tls:
        ca: /path/to/ca
        cert: /path/to/cert
        enabled: false
        insecure_skip_verify: false
        key: /path/to/key
    observability:
      enabled: false
      collector:
        duration: 5s
        metrics:
          enable_cgo: true
          enable_goroutine: true
          enable_memory: true
          enable_version_info: true
          version_info_labels:
          - vald_version
          - server_name
          - git_commit
          - build_time
          - go_version
          - go_os
          - go_arch
          - ngt_version
      trace:
        enabled: false
        sampling_rate: 1
      prometheus:
        enabled: false
        endpoint: /metrics
        namespace: vald
      jaeger:
        enabled: false
        collector_endpoint: ""
        agent_endpoint: "jaeger-agent.default.svc.cluster.local:6831"
        username: ""
        password: ""
        service_name: "vald-agent-ngt"
        buffer_max_count: 10
      stackdriver:
        project_id: ""
        client:
          api_key: ""
          audiences: []
          authentication_enabled: true
          credentials_file: ""
          credentials_json: ""
          endpoint: ""
          quota_project: ""
          request_reason: ""
          scopes: []
          telemetry_enabled: true
          user_agent: ""
        exporter:
          bundle_count_threshold: 0
          bundle_delay_threshold: "0"
          location: ""
          metric_prefix: vald.vdaas.org
          monitoring_enabled: false
          number_of_workers: 1
          reporting_interval: 1m
          skip_cmd: false
          timeout: 5s
          trace_spans_buffer_max_bytes: 0
          tracing_enabled: false
        profiler:
          enabled: false
          service: "vald-agent-ngt"
          service_version: ""
          debug_logging: false
          mutex_profiling: true
          cpu_profiling: true
          alloc_profiling: true
          heap_profiling: true
          goroutine_profiling: true
          alloc_force_gc: false
          api_addr: ""
          instance: ""
          zone: ""
    ngt:
      auto_create_index_pool_size: 10000
      auto_index_check_duration: 30m
      auto_index_duration_limit: 24h
      auto_index_length: 100
      auto_save_index_duration: 35m
      bulk_insert_chunk_size: 10
      creation_edge_size: 20
      default_epsilon: 0.1
      default_pool_size: 10000
      default_radius: -1
      dimension: 4096
      distance_type: l2
      enable_copy_on_write: false
      enable_in_memory_mode: true
      enable_proactive_gc: false
      index_path: ""
      initial_delay_max_duration: 3m
      kvsdb:
        concurrency: 6
      load_index_timeout_factor: 1ms
      max_load_index_timeout: 10m
      min_load_index_timeout: 3m
      object_type: float
      search_edge_size: 10
      vqueue:
        delete_buffer_pool_size: 5000
        insert_buffer_pool_size: 10000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vald-discoverer-config
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: discoverer
data:
  config.yaml: |
    ---
    version: v0.0.0
    time_zone: UTC
    logging:
      format: raw
      level: debug
      logger: glg
    server_config:
      servers:
        - name: grpc
          host: 0.0.0.0
          port: 8081
          grpc:
            bidirectional_stream_concurrency: 20
            connection_timeout: ""
            enable_reflection: true
            header_table_size: 0
            initial_conn_window_size: 0
            initial_window_size: 0
            interceptors:
            - RecoverInterceptor
            keepalive:
              max_conn_age: ""
              max_conn_age_grace: ""
              max_conn_idle: ""
              min_time: 60s
              permit_without_stream: true
              time: 120s
              timeout: 30s
            max_header_list_size: 0
            max_receive_message_size: 0
            max_send_message_size: 0
            read_buffer_size: 0
            write_buffer_size: 0
          mode: GRPC
          network: tcp
          probe_wait_time: 3s
          restart: true
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
      health_check_servers:
        - name: liveness
          host: 0.0.0.0
          port: 3000
          http:
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            shutdown_duration: 5s
            write_timeout: ""
          mode: ""
          network: tcp
          probe_wait_time: 3s
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
        - name: readiness
          host: 0.0.0.0
          port: 3001
          http:
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            shutdown_duration: 0s
            write_timeout: ""
          mode: ""
          network: tcp
          probe_wait_time: 3s
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
      metrics_servers:
      startup_strategy:
        - liveness
        - grpc
        - readiness
      full_shutdown_duration: 600s
      tls:
        ca: /path/to/ca
        cert: /path/to/cert
        enabled: false
        insecure_skip_verify: false
        key: /path/to/key
    observability:
      enabled: false
      collector:
        duration: 5s
        metrics:
          enable_cgo: true
          enable_goroutine: true
          enable_memory: true
          enable_version_info: true
          version_info_labels:
          - vald_version
          - server_name
          - git_commit
          - build_time
          - go_version
          - go_os
          - go_arch
          - ngt_version
      trace:
        enabled: false
        sampling_rate: 1
      prometheus:
        enabled: false
        endpoint: /metrics
        namespace: vald
      jaeger:
        enabled: false
        collector_endpoint: ""
        agent_endpoint: "jaeger-agent.default.svc.cluster.local:6831"
        username: ""
        password: ""
        service_name: "vald-discoverer"
        buffer_max_count: 10
      stackdriver:
        project_id: ""
        client:
          api_key: ""
          audiences: []
          authentication_enabled: true
          credentials_file: ""
          credentials_json: ""
          endpoint: ""
          quota_project: ""
          request_reason: ""
          scopes: []
          telemetry_enabled: true
          user_agent: ""
        exporter:
          bundle_count_threshold: 0
          bundle_delay_threshold: "0"
          location: ""
          metric_prefix: vald.vdaas.org
          monitoring_enabled: false
          number_of_workers: 1
          reporting_interval: 1m
          skip_cmd: false
          timeout: 5s
          trace_spans_buffer_max_bytes: 0
          tracing_enabled: false
        profiler:
          enabled: false
          service: "vald-discoverer"
          service_version: ""
          debug_logging: false
          mutex_profiling: true
          cpu_profiling: true
          alloc_profiling: true
          heap_profiling: true
          goroutine_profiling: true
          alloc_force_gc: false
          api_addr: ""
          instance: ""
          zone: ""
    discoverer:
      name: ""
      namespace: "_MY_POD_NAMESPACE_"
      discovery_duration: 3s
      selectors:
          pod:
            labels:
              app.kubernetes.io/component: agent
              app.kubernetes.io/instance: release-name
            fields:
              status.phase: Running
          node:
            labels: {}
            fields: {}
          pod_metrics:
            labels: {}
            fields:
              containers.name: vald-agent-ngt
          node_metrics:
            labels: {}
            fields: {}
      net:
        dialer:
          dual_stack_enabled: false
          keepalive: 10m
          timeout: 30s
        dns:
          cache_enabled: true
          cache_expiration: 24h
          refresh_duration: 5m
        socket_option:
          ip_recover_destination_addr: false
          ip_transparent: false
          reuse_addr: true
          reuse_port: true
          tcp_cork: false
          tcp_defer_accept: true
          tcp_fast_open: true
          tcp_no_delay: true
          tcp_quick_ack: true
        tls:
          ca: /path/to/ca
          cert: /path/to/cert
          enabled: false
          insecure_skip_verify: false
          key: /path/to/key
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vald-lb-gateway-config
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: gateway-lb
data:
  config.yaml: |
    ---
    version: v0.0.0
    time_zone: UTC
    logging:
      format: raw
      level: debug
      logger: glg
    server_config:
      servers:
        - name: grpc
          host: 0.0.0.0
          port: 8081
          grpc:
            bidirectional_stream_concurrency: 20
            connection_timeout: ""
            enable_reflection: true
            header_table_size: 0
            initial_conn_window_size: 0
            initial_window_size: 0
            interceptors:
            - RecoverInterceptor
            keepalive:
              max_conn_age: ""
              max_conn_age_grace: ""
              max_conn_idle: ""
              min_time: 60s
              permit_without_stream: true
              time: 120s
              timeout: 30s
            max_header_list_size: 0
            max_receive_message_size: 0
            max_send_message_size: 0
            read_buffer_size: 0
            write_buffer_size: 0
          mode: GRPC
          network: tcp
          probe_wait_time: 3s
          restart: true
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
      health_check_servers:
        - name: liveness
          host: 0.0.0.0
          port: 3000
          http:
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            shutdown_duration: 5s
            write_timeout: ""
          mode: ""
          network: tcp
          probe_wait_time: 3s
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
        - name: readiness
          host: 0.0.0.0
          port: 3001
          http:
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            shutdown_duration: 0s
            write_timeout: ""
          mode: ""
          network: tcp
          probe_wait_time: 3s
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
      metrics_servers:
      startup_strategy:
        - liveness
        - grpc
        - readiness
      full_shutdown_duration: 600s
      tls:
        ca: /path/to/ca
        cert: /path/to/cert
        enabled: false
        insecure_skip_verify: false
        key: /path/to/key
    observability:
      enabled: false
      collector:
        duration: 5s
        metrics:
          enable_cgo: true
          enable_goroutine: true
          enable_memory: true
          enable_version_info: true
          version_info_labels:
          - vald_version
          - server_name
          - git_commit
          - build_time
          - go_version
          - go_os
          - go_arch
          - ngt_version
      trace:
        enabled: false
        sampling_rate: 1
      prometheus:
        enabled: false
        endpoint: /metrics
        namespace: vald
      jaeger:
        enabled: false
        collector_endpoint: ""
        agent_endpoint: "jaeger-agent.default.svc.cluster.local:6831"
        username: ""
        password: ""
        service_name: "vald-lb-gateway"
        buffer_max_count: 10
      stackdriver:
        project_id: ""
        client:
          api_key: ""
          audiences: []
          authentication_enabled: true
          credentials_file: ""
          credentials_json: ""
          endpoint: ""
          quota_project: ""
          request_reason: ""
          scopes: []
          telemetry_enabled: true
          user_agent: ""
        exporter:
          bundle_count_threshold: 0
          bundle_delay_threshold: "0"
          location: ""
          metric_prefix: vald.vdaas.org
          monitoring_enabled: false
          number_of_workers: 1
          reporting_interval: 1m
          skip_cmd: false
          timeout: 5s
          trace_spans_buffer_max_bytes: 0
          tracing_enabled: false
        profiler:
          enabled: false
          service: "vald-lb-gateway"
          service_version: ""
          debug_logging: false
          mutex_profiling: true
          cpu_profiling: true
          alloc_profiling: true
          heap_profiling: true
          goroutine_profiling: true
          alloc_force_gc: false
          api_addr: ""
          instance: ""
          zone: ""
    gateway:
      agent_port: 8081
      agent_name: "vald-agent-ngt"
      agent_dns: vald-agent-ngt.default.svc.cluster.local
      agent_namespace: "_MY_POD_NAMESPACE_"
      node_name: ""
      index_replica: 5
      discoverer:
        duration: 200ms
        client:
          addrs:
            - vald-discoverer.default.svc.cluster.local:8081
          health_check_duration: "1s"
          connection_pool:
            enable_dns_resolver: true
            enable_rebalance: true
            old_conn_close_duration: 2m
            rebalance_duration: 30m
            size: 3
          backoff:
            backoff_factor: 1.1
            backoff_time_limit: 5s
            enable_error_log: true
            initial_duration: 5ms
            jitter_limit: 100ms
            maximum_duration: 5s
            retry_count: 100
          call_option:
            max_recv_msg_size: 0
            max_retry_rpc_buffer_size: 0
            max_send_msg_size: 0
            wait_for_ready: true
          dial_option:
            backoff_base_delay: 1s
            backoff_jitter: 0.2
            backoff_max_delay: 120s
            backoff_multiplier: 1.6
            enable_backoff: false
            initial_connection_window_size: 0
            initial_window_size: 0
            insecure: true
            keepalive:
              permit_without_stream: true
              time: 120s
              timeout: 30s
            max_msg_size: 0
            min_connection_timeout: 20s
            net:
              dialer:
                dual_stack_enabled: true
                keepalive: ""
                timeout: ""
              dns:
                cache_enabled: true
                cache_expiration: 1h
                refresh_duration: 30m
              socket_option:
                ip_recover_destination_addr: false
                ip_transparent: false
                reuse_addr: true
                reuse_port: true
                tcp_cork: false
                tcp_defer_accept: true
                tcp_fast_open: true
                tcp_no_delay: true
                tcp_quick_ack: true
              tls:
                ca: /path/to/ca
                cert: /path/to/cert
                enabled: false
                insecure_skip_verify: false
                key: /path/to/key
            read_buffer_size: 0
            timeout: ""
            write_buffer_size: 0
          tls:
            ca: /path/to/ca
            cert: /path/to/cert
            enabled: false
            insecure_skip_verify: false
            key: /path/to/key
        agent_client_options:
          addrs: []
          health_check_duration: "1s"
          connection_pool:
            enable_dns_resolver: true
            enable_rebalance: true
            old_conn_close_duration: 2m
            rebalance_duration: 30m
            size: 3
          backoff:
            backoff_factor: 1.1
            backoff_time_limit: 5s
            enable_error_log: true
            initial_duration: 5ms
            jitter_limit: 100ms
            maximum_duration: 5s
            retry_count: 100
          call_option:
            max_recv_msg_size: 0
            max_retry_rpc_buffer_size: 0
            max_send_msg_size: 0
            wait_for_ready: true
          dial_option:
            backoff_base_delay: 1s
            backoff_jitter: 0.2
            backoff_max_delay: 120s
            backoff_multiplier: 1.6
            enable_backoff: false
            initial_connection_window_size: 0
            initial_window_size: 0
            insecure: true
            keepalive:
              permit_without_stream: true
              time: 120s
              timeout: 30s
            max_msg_size: 0
            min_connection_timeout: 20s
            net:
              dialer:
                dual_stack_enabled: true
                keepalive: ""
                timeout: ""
              dns:
                cache_enabled: true
                cache_expiration: 1h
                refresh_duration: 30m
              socket_option:
                ip_recover_destination_addr: false
                ip_transparent: false
                reuse_addr: true
                reuse_port: true
                tcp_cork: false
                tcp_defer_accept: true
                tcp_fast_open: true
                tcp_no_delay: true
                tcp_quick_ack: true
              tls:
                ca: /path/to/ca
                cert: /path/to/cert
                enabled: false
                insecure_skip_verify: false
                key: /path/to/key
            read_buffer_size: 0
            timeout: ""
            write_buffer_size: 0
          tls:
            ca: /path/to/ca
            cert: /path/to/cert
            enabled: false
            insecure_skip_verify: false
            key: /path/to/key
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vald-manager-index-config
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: manager-index
data:
  config.yaml: |
    ---
    version: v0.0.0
    time_zone: UTC
    logging:
      format: raw
      level: debug
      logger: glg
    server_config:
      servers:
        - name: grpc
          host: 0.0.0.0
          port: 8081
          grpc:
            bidirectional_stream_concurrency: 20
            connection_timeout: ""
            enable_reflection: true
            header_table_size: 0
            initial_conn_window_size: 0
            initial_window_size: 0
            interceptors:
            - RecoverInterceptor
            keepalive:
              max_conn_age: ""
              max_conn_age_grace: ""
              max_conn_idle: ""
              min_time: 60s
              permit_without_stream: true
              time: 120s
              timeout: 30s
            max_header_list_size: 0
            max_receive_message_size: 0
            max_send_message_size: 0
            read_buffer_size: 0
            write_buffer_size: 0
          mode: GRPC
          network: tcp
          probe_wait_time: 3s
          restart: true
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
      health_check_servers:
        - name: liveness
          host: 0.0.0.0
          port: 3000
          http:
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            shutdown_duration: 5s
            write_timeout: ""
          mode: ""
          network: tcp
          probe_wait_time: 3s
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
        - name: readiness
          host: 0.0.0.0
          port: 3001
          http:
            handler_timeout: ""
            idle_timeout: ""
            read_header_timeout: ""
            read_timeout: ""
            shutdown_duration: 0s
            write_timeout: ""
          mode: ""
          network: tcp
          probe_wait_time: 3s
          socket_option:
            ip_recover_destination_addr: false
            ip_transparent: false
            reuse_addr: true
            reuse_port: true
            tcp_cork: false
            tcp_defer_accept: true
            tcp_fast_open: true
            tcp_no_delay: true
            tcp_quick_ack: true
          socket_path: ""
      metrics_servers:
      startup_strategy:
        - liveness
        - grpc
        - readiness
      full_shutdown_duration: 600s
      tls:
        ca: /path/to/ca
        cert: /path/to/cert
        enabled: false
        insecure_skip_verify: false
        key: /path/to/key
    observability:
      enabled: false
      collector:
        duration: 5s
        metrics:
          enable_cgo: true
          enable_goroutine: true
          enable_memory: true
          enable_version_info: true
          version_info_labels:
          - vald_version
          - server_name
          - git_commit
          - build_time
          - go_version
          - go_os
          - go_arch
          - ngt_version
      trace:
        enabled: false
        sampling_rate: 1
      prometheus:
        enabled: false
        endpoint: /metrics
        namespace: vald
      jaeger:
        enabled: false
        collector_endpoint: ""
        agent_endpoint: "jaeger-agent.default.svc.cluster.local:6831"
        username: ""
        password: ""
        service_name: "vald-manager-index"
        buffer_max_count: 10
      stackdriver:
        project_id: ""
        client:
          api_key: ""
          audiences: []
          authentication_enabled: true
          credentials_file: ""
          credentials_json: ""
          endpoint: ""
          quota_project: ""
          request_reason: ""
          scopes: []
          telemetry_enabled: true
          user_agent: ""
        exporter:
          bundle_count_threshold: 0
          bundle_delay_threshold: "0"
          location: ""
          metric_prefix: vald.vdaas.org
          monitoring_enabled: false
          number_of_workers: 1
          reporting_interval: 1m
          skip_cmd: false
          timeout: 5s
          trace_spans_buffer_max_bytes: 0
          tracing_enabled: false
        profiler:
          enabled: false
          service: "vald-manager-index"
          service_version: ""
          debug_logging: false
          mutex_profiling: true
          cpu_profiling: true
          alloc_profiling: true
          heap_profiling: true
          goroutine_profiling: true
          alloc_force_gc: false
          api_addr: ""
          instance: ""
          zone: ""
    indexer:
      agent_port: 8081
      agent_name: "vald-agent-ngt"
      agent_dns: vald-agent-ngt.default.svc.cluster.local
      agent_namespace: "_MY_POD_NAMESPACE_"
      node_name: ""
      discoverer:
        duration: 500ms
        client:
          addrs:
            - vald-discoverer.default.svc.cluster.local:8081
          health_check_duration: "1s"
          connection_pool:
            enable_dns_resolver: true
            enable_rebalance: true
            old_conn_close_duration: 2m
            rebalance_duration: 30m
            size: 3
          backoff:
            backoff_factor: 1.1
            backoff_time_limit: 5s
            enable_error_log: true
            initial_duration: 5ms
            jitter_limit: 100ms
            maximum_duration: 5s
            retry_count: 100
          call_option:
            max_recv_msg_size: 0
            max_retry_rpc_buffer_size: 0
            max_send_msg_size: 0
            wait_for_ready: true
          dial_option:
            backoff_base_delay: 1s
            backoff_jitter: 0.2
            backoff_max_delay: 120s
            backoff_multiplier: 1.6
            enable_backoff: false
            initial_connection_window_size: 0
            initial_window_size: 0
            insecure: true
            keepalive:
              permit_without_stream: true
              time: 120s
              timeout: 30s
            max_msg_size: 0
            min_connection_timeout: 20s
            net:
              dialer:
                dual_stack_enabled: true
                keepalive: ""
                timeout: ""
              dns:
                cache_enabled: true
                cache_expiration: 1h
                refresh_duration: 30m
              socket_option:
                ip_recover_destination_addr: false
                ip_transparent: false
                reuse_addr: true
                reuse_port: true
                tcp_cork: false
                tcp_defer_accept: true
                tcp_fast_open: true
                tcp_no_delay: true
                tcp_quick_ack: true
              tls:
                ca: /path/to/ca
                cert: /path/to/cert
                enabled: false
                insecure_skip_verify: false
                key: /path/to/key
            read_buffer_size: 0
            timeout: ""
            write_buffer_size: 0
          tls:
            ca: /path/to/ca
            cert: /path/to/cert
            enabled: false
            insecure_skip_verify: false
            key: /path/to/key
        agent_client_options:
          addrs: []
          health_check_duration: "1s"
          connection_pool:
            enable_dns_resolver: true
            enable_rebalance: true
            old_conn_close_duration: 2m
            rebalance_duration: 30m
            size: 3
          backoff:
            backoff_factor: 1.1
            backoff_time_limit: 5s
            enable_error_log: true
            initial_duration: 5ms
            jitter_limit: 100ms
            maximum_duration: 5s
            retry_count: 100
          call_option:
            max_recv_msg_size: 0
            max_retry_rpc_buffer_size: 0
            max_send_msg_size: 0
            wait_for_ready: true
          dial_option:
            write_buffer_size: 0
            read_buffer_size: 0
            initial_window_size: 0
            initial_connection_window_size: 0
            max_msg_size: 0
            backoff_max_delay: "120s"
            backoff_base_delay: "1s"
            backoff_multiplier: 1.6
            backoff_jitter: 0.2
            min_connection_timeout: "20s"
            enable_backoff: false
            insecure: true
            timeout: ""
            net:
              dns:
                cache_enabled: true
                cache_expiration: 1h
                refresh_duration: 30m
              dialer:
                timeout: ""
                keepalive: "15m"
                dual_stack_enabled: true
              tls:
                ca: /path/to/ca
                cert: /path/to/cert
                enabled: false
                insecure_skip_verify: false
                key: /path/to/key
              socket_option:
                ip_recover_destination_addr: false
                ip_transparent: false
                reuse_addr: true
                reuse_port: true
                tcp_cork: false
                tcp_defer_accept: true
                tcp_fast_open: true
                tcp_no_delay: true
                tcp_quick_ack: true
            keepalive:
              permit_without_stream: true
              time: 120s
              timeout: 30s
          tls:
            ca: /path/to/ca
            cert: /path/to/cert
            enabled: false
            insecure_skip_verify: false
            key: /path/to/key
      concurrency: 1
      auto_index_duration_limit: 30m
      auto_index_check_duration: 1m
      auto_save_index_duration_limit: 3h
      auto_save_index_wait_duration: 10m
      auto_index_length: 100
      creation_pool_size: 10000
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: discoverer
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: discoverer
rules:
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
  - apiGroups:
      - metrics.k8s.io
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: discoverer
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: discoverer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: discoverer
subjects:
  - kind: ServiceAccount
    name: vald
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: vald-agent-ngt
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: agent
spec:
  ports:
    - name: grpc
      port: 8081
      targetPort: 8081
      protocol: TCP
    - name: readiness
      port: 3001
      targetPort: 3001
      protocol: TCP
  selector:
    app.kubernetes.io/name: vald
    app.kubernetes.io/component: agent
  clusterIP: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: vald-discoverer
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: discoverer
spec:
  ports:
    - name: grpc
      port: 8081
      targetPort: 8081
      protocol: TCP
    - name: readiness
      port: 3001
      targetPort: 3001
      protocol: TCP
  selector:
    app.kubernetes.io/name: vald
    app.kubernetes.io/component: discoverer
  clusterIP: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: vald-lb-gateway
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: gateway-lb
spec:
  ports:
    - name: grpc
      port: 8081
      targetPort: 8081
      protocol: TCP
    - name: readiness
      port: 3001
      targetPort: 3001
      protocol: TCP
  selector:
    app.kubernetes.io/name: vald
    app.kubernetes.io/component: gateway-lb
  clusterIP: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: vald-manager-index
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: manager-index
spec:
  ports:
    - name: grpc
      port: 8081
      targetPort: 8081
      protocol: TCP
    - name: readiness
      port: 3001
      targetPort: 3001
      protocol: TCP
  selector:
    app.kubernetes.io/name: vald
    app.kubernetes.io/component: manager-index
  clusterIP: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vald-discoverer
  labels:
    app: vald-discoverer
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: discoverer
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: vald-discoverer
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: vald-discoverer
        app.kubernetes.io/name: vald
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: discoverer
      annotations:
        checksum/configmap: 5aee2946fc4381241478298433d2d0661ec69ce1beb38415f922f4e4d0d6e100
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - vald-discoverer
                topologyKey: kubernetes.io/hostname
              weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      containers:
        - name: vald-discoverer
          image: vdaas/vald-discoverer-k8s:v1.5.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readiness
              port: readiness
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          ports:
            - name: liveness
              protocol: TCP
              containerPort: 3000
            - name: readiness
              protocol: TCP
              containerPort: 3001
            - name: grpc
              protocol: TCP
              containerPort: 8081
          resources:
            limits:
              cpu: 600m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 65Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          env:
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: vald-discoverer-config
              mountPath: /etc/server/
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: vald
      securityContext:
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      terminationGracePeriodSeconds: 30
      volumes:
        - name: vald-discoverer-config
          configMap:
            defaultMode: 420
            name: vald-discoverer-config
      priorityClassName: default-vald-discoverer-priority
status: null
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vald-lb-gateway
  labels:
    app: vald-lb-gateway
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: gateway-lb
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: vald-lb-gateway
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: vald-lb-gateway
        app.kubernetes.io/name: vald
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: gateway-lb
      annotations:
        checksum/configmap: 8225a916a38d1c3cf214258112e3160f2624ed2d6b2d2cc2f85bc05248f21a1b
    spec:
      initContainers:
        - name: wait-for-discoverer
          image: busybox:stable
          command:
            - /bin/sh
            - -e
            - -c
            - |
              until [ "$(wget --server-response --spider --quiet http://vald-discoverer.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')" == "200" ]; do
                echo "waiting for discoverer to be ready..."
                sleep 2;
              done
        - name: wait-for-agent
          image: busybox:stable
          command:
            - /bin/sh
            - -e
            - -c
            - |
              until [ "$(wget --server-response --spider --quiet http://vald-agent-ngt.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')" == "200" ]; do
                echo "waiting for agent to be ready..."
                sleep 2;
              done
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - vald-lb-gateway
                topologyKey: kubernetes.io/hostname
              weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      containers:
        - name: vald-lb-gateway
          image: vdaas/vald-lb-gateway:v1.5.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readiness
              port: readiness
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          ports:
            - name: liveness
              protocol: TCP
              containerPort: 3000
            - name: readiness
              protocol: TCP
              containerPort: 3001
            - name: grpc
              protocol: TCP
              containerPort: 8081
          resources:
            limits:
              cpu: 2000m
              memory: 700Mi
            requests:
              cpu: 200m
              memory: 150Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          env:
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: vald-lb-gateway-config
              mountPath: /etc/server/
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      terminationGracePeriodSeconds: 30
      volumes:
        - name: vald-lb-gateway-config
          configMap:
            defaultMode: 420
            name: vald-lb-gateway-config
      priorityClassName: default-vald-lb-gateway-priority
status: null
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vald-manager-index
  labels:
    app: vald-manager-index
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: manager-index
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: vald-manager-index
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: vald-manager-index
        app.kubernetes.io/name: vald
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: manager-index
      annotations:
        checksum/configmap: dcf2607448c79989d2faaf293118e2f393c615bbd6a621aa79a60fd31c8ff701
    spec:
      initContainers:
        - name: wait-for-agent
          image: busybox:stable
          command:
            - /bin/sh
            - -e
            - -c
            - |
              until [ "$(wget --server-response --spider --quiet http://vald-agent-ngt.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')" == "200" ]; do
                echo "waiting for agent to be ready..."
                sleep 2;
              done
        - name: wait-for-discoverer
          image: busybox:stable
          command:
            - /bin/sh
            - -e
            - -c
            - |
              until [ "$(wget --server-response --spider --quiet http://vald-discoverer.default.svc.cluster.local:3001/readiness 2>&1 | awk 'NR==1{print $2}')" == "200" ]; do
                echo "waiting for discoverer to be ready..."
                sleep 2;
              done
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
      containers:
        - name: vald-manager-index
          image: vdaas/vald-manager-index:v1.5.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readiness
              port: readiness
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          ports:
            - name: liveness
              protocol: TCP
              containerPort: 3000
            - name: readiness
              protocol: TCP
              containerPort: 3001
            - name: grpc
              protocol: TCP
              containerPort: 8081
          resources:
            limits:
              cpu: 1000m
              memory: 500Mi
            requests:
              cpu: 200m
              memory: 80Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          env:
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: vald-manager-index-config
              mountPath: /etc/server/
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: vald-manager-index-config
          name: vald-manager-index-config
      priorityClassName: default-vald-manager-index-priority
status: null
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: vald-lb-gateway
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: gateway-lb
spec:
  maxReplicas: 9
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vald-lb-gateway
  targetCPUUtilizationPercentage: 80
status: null
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vald-agent-ngt
  labels:
    app: vald-agent-ngt
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: agent
spec:
  serviceName: vald-agent-ngt
  podManagementPolicy: OrderedReady
  replicas: 20
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: vald-agent-ngt
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: vald-agent-ngt
        app.kubernetes.io/name: vald
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: agent
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - vald-agent-ngt
                topologyKey: kubernetes.io/hostname
              weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      containers:
        - name: vald-agent-ngt
          image: vdaas/vald-agent-ngt:v1.5.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readiness
              port: readiness
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          startupProbe:
            httpGet:
              path: /liveness
              port: liveness
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 200
            periodSeconds: 5
          ports:
            - name: liveness
              protocol: TCP
              containerPort: 3000
            - name: readiness
              protocol: TCP
              containerPort: 3001
            - name: grpc
              protocol: TCP
              containerPort: 8081
          resources:
            requests:
              cpu: 300m
              memory: 4Gi
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          volumeMounts:
            - name: vald-agent-ngt-config
              mountPath: /etc/server/
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      terminationGracePeriodSeconds: 120
      volumes:
        - name: vald-agent-ngt-config
          configMap:
            defaultMode: 420
            name: vald-agent-ngt-config
      priorityClassName: default-vald-agent-ngt-priority
status: null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
null
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: default-vald-agent-ngt-priority
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: agent
value: 1000000000
preemptionPolicy: Never
globalDefault: false
description: A priority class for Vald agent.
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: default-vald-discoverer-priority
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: discoverer
value: 1000000
globalDefault: false
description: A priority class for Vald discoverer.
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: default-vald-lb-gateway-priority
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: gateway-lb
value: 1000000
globalDefault: false
description: A priority class for Vald lb gateway.
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: default-vald-manager-index-priority
  labels:
    app.kubernetes.io/name: vald
    helm.sh/chart: vald-v1.5.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v1.5.4
    app.kubernetes.io/component: manager-index
value: 1000000
globalDefault: false
description: A priority class for Vald index manager.
