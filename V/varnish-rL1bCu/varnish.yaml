apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-varnish
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: varnish
      app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-varnish
  labels:
    helm.sh/chart: varnish-0.6.2
    app.kubernetes.io/name: varnish
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 9131
      targetPort: http
      protocol: TCP
      name: exporter
  selector:
    app.kubernetes.io/name: varnish
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-varnish
  labels:
    helm.sh/chart: varnish-0.6.2
    app.kubernetes.io/name: varnish
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: varnish
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: varnish
        app.kubernetes.io/instance: release-name
        app: varnish
        version: 0.6.2
      annotations:
        rollme: GTx50
    spec:
      serviceAccountName: default
      securityContext: {}
      containers:
        - name: varnishd
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: varnish:6.4
          imagePullPolicy: IfNotPresent
          env:
            - name: VARNISH_SIZE
              value: 100M
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: vsm
              mountPath: /var/lib/varnish
        - name: varnishncsa
          image: varnish:6.4
          imagePullPolicy: IfNotPresent
          command:
            - varnishncsa
          resources: {}
          volumeMounts:
            - name: vsm
              mountPath: /var/lib/varnish
      volumes:
        - name: vsm
          emptyDir:
            medium: Memory
