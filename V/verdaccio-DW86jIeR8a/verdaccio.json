[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-verdaccio",
      "labels": {
        "helm.sh/chart": "verdaccio-4.9.0",
        "app.kubernetes.io/name": "verdaccio",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "5.5.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app": "release-name-verdaccio"
      }
    },
    "data": {
      "config.yaml": "# This is the config file used for the docker images\n# It allows all users to do anything, so don't use it on production systems.\n#\n# Do not configure host and port under `listen` in this file\n# as it will be ignored when using docker.\n# see https://github.com/verdaccio/verdaccio/blob/master/docs/docker.md#docker-and-custom-port-configuration\n#\n# Look here for more config file examples:\n# https://github.com/verdaccio/verdaccio/tree/master/conf\n#\n\n# path to a directory with all packages\nstorage: /verdaccio/storage/data\n\nweb:\n  # WebUI is enabled as default, if you want disable it, just uncomment this line\n  #enable: false\n  title: Verdaccio\n\nauth:\n  htpasswd:\n    # Do not change this path if secrets htpasswd is used.\n    file: /verdaccio/storage/htpasswd\n    # Maximum amount of users allowed to register, defaults to \"+infinity\".\n    # You can set this to -1 to disable registration.\n    #max_users: 1000\n\n# a list of other known repositories we can talk to\nuplinks:\n  npmjs:\n    url: https://registry.npmjs.org/\n    agent_options:\n      keepAlive: true\n      maxSockets: 40\n      maxFreeSockets: 10\n\npackages:\n  '@*/*':\n    # scoped packages\n    access: $all\n    publish: $authenticated\n    proxy: npmjs\n\n  '**':\n    # allow all users (including non-authenticated users) to read and\n    # publish all packages\n    #\n    # you can specify usernames/groupnames (depending on your auth plugin)\n    # and three keywords: \"$all\", \"$anonymous\", \"$authenticated\"\n    access: $all\n\n    # allow all known users to publish packages\n    # (anyone can register by default, remember?)\n    publish: $authenticated\n\n    # if package is not available locally, proxy requests to 'npmjs' registry\n    proxy: npmjs\n\n# To use `npm audit` uncomment the following section\nmiddlewares:\n  audit:\n    enabled: true\n\n# log settings\nlogs: {type: stdout, format: pretty, level: http}\n# logs: {type: file, path: verdaccio.log, level: info}"
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-verdaccio",
      "labels": {
        "helm.sh/chart": "verdaccio-4.9.0",
        "app.kubernetes.io/name": "verdaccio",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "5.5.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app": "release-name-verdaccio"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "8Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-verdaccio",
      "labels": {
        "helm.sh/chart": "verdaccio-4.9.0",
        "app.kubernetes.io/name": "verdaccio",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "5.5.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app": "release-name-verdaccio"
      }
    },
    "spec": {
      "ports": [
        {
          "port": 4873,
          "targetPort": "http",
          "protocol": "TCP",
          "name": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "verdaccio",
        "app.kubernetes.io/instance": "release-name"
      },
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-verdaccio",
      "labels": {
        "helm.sh/chart": "verdaccio-4.9.0",
        "app.kubernetes.io/name": "verdaccio",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "5.5.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app": "release-name-verdaccio"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "verdaccio",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "strategy": {
        "type": "Recreate",
        "rollingUpdate": null
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config": "bb987dae55af24e23a0628ef3317581a15a32db3ece5faca02e893c30af2c246",
            "checksum/htpasswd-secret": "4f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945"
          },
          "labels": {
            "helm.sh/chart": "verdaccio-4.9.0",
            "app.kubernetes.io/name": "verdaccio",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "5.5.0",
            "app.kubernetes.io/managed-by": "Helm",
            "app": "release-name-verdaccio"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "securityContext": {
            "fsGroup": 101
          },
          "containers": [
            {
              "name": "verdaccio",
              "image": "verdaccio/verdaccio:5.5.0",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "containerPort": 4873,
                  "name": "http"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/-/ping",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/-/ping",
                  "port": "http"
                }
              },
              "securityContext": {
                "runAsUser": 10299,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "volumeMounts": [
                {
                  "mountPath": "/verdaccio/storage",
                  "name": "storage",
                  "readOnly": false
                },
                {
                  "mountPath": "/verdaccio/conf",
                  "name": "config",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-verdaccio"
              }
            },
            {
              "name": "storage",
              "persistentVolumeClaim": {
                "claimName": "release-name-verdaccio"
              }
            }
          ]
        }
      }
    }
  }
]