apiVersion: v1
kind: ServiceAccount
metadata:
  name: mariadb
  namespace: KWbTEpQ
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
---
apiVersion: v1
kind: Secret
metadata:
  name: mariadb
  namespace: KWbTEpQ
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: cndueHJtRVNJMA==
  mariadb-password: dGVzdA==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb
  namespace: KWbTEpQ
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci

    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin

    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
apiVersion: v1
kind: Service
metadata:
  name: mariadb
  namespace: KWbTEpQ
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector:
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vapormap
  name: vapormap
spec:
  type: ClusterIP
  selector:
    role: django
  ports:
    - name: web
      protocol: TCP
      port: 8000
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: nginx
spec:
  type: ClusterIP
  selector:
    role: nginx
  ports:
    - name: web
      protocol: TCP
      port: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: vapormap-0.1.0
    app.kubernetes.io/name: vapormap
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.0.0.0.0.0.1-rc0
    app.kubernetes.io/managed-by: Helm
    role: django
  name: vapormap
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vapormap
      app.kubernetes.io/instance: release-name
      role: django
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vapormap
        app.kubernetes.io/instance: release-name
        role: django
    spec:
      initContainers:
        - image: busybox
          name: wait-for-mariadb
          env:
            - name: VAPOR_DBHOST
              value: mariadb
          command:
            - /bin/sh
            - -c
            - until nc -z $VAPOR_DBHOST 3306 ; do sleep 2; done
        - image: registry.plmlab.math.cnrs.fr/resinfo/anf/2019/ada/vapormap/vapormap:master
          name: vapormap-migrate
          env:
            - name: VAPOR_DBNAME
              value: test
            - name: VAPOR_DBUSER
              value: test
            - name: VAPOR_DBPASS
              value: test
            - name: DJANGO_SETTINGS_MODULE
              value: vapormap.settings.production
            - name: VAPOR_DBHOST
              value: mariadb
          command:
            - /bin/bash
            - -c
            - python manage.py makemigrations && python manage.py migrate
      containers:
        - image: registry.plmlab.math.cnrs.fr/resinfo/anf/2019/ada/vapormap/vapormap:master
          name: vapormap
          ports:
            - containerPort: 8000
              name: web
          env:
            - name: VAPOR_DBNAME
              value: test
            - name: VAPOR_DBUSER
              value: test
            - name: VAPOR_DBPASS
              value: test
            - name: DJANGO_SETTINGS_MODULE
              value: vapormap.settings.production
            - name: VAPOR_DBHOST
              value: mariadb
          livenessProbe:
            httpGet:
              path: /
              port: web
          readinessProbe:
            httpGet:
              path: /
              port: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: vapormap-0.1.0
    app.kubernetes.io/name: vapormap
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.0.0.0.0.0.1-rc0
    app.kubernetes.io/managed-by: Helm
    role: nginx
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vapormap
      app.kubernetes.io/instance: release-name
      role: nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vapormap
        app.kubernetes.io/instance: release-name
        role: nginx
    spec:
      containers:
        - image: registry.plmlab.math.cnrs.fr/resinfo/anf/2019/ada/vapormap/nginx:master
          name: nginx
          ports:
            - containerPort: 8000
              name: web
          env:
            - name: VAPORMAP_URL
              value: vapormap
            - name: VAPORMAP_PORT
              value: "8000"
          lifecycle:
            preStop:
              exec:
                command:
                  - sleep
                  - "10"
          livenessProbe:
            httpGet:
              path: /
              port: web
          readinessProbe:
            httpGet:
              path: /
              port: web
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb
  namespace: KWbTEpQ
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  serviceName: mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: c344c427ef93844a275394f8e44bf8f1f3413da445c4121f34eed77452b90b0e
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-9.0.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: mariadb
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.5.7-debian-10-r7
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 11797
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: test
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: test
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources:
            limits: {}
            requests: {}
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vapormap
spec:
  ingressClassName: public
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx
                port:
                  number: 8000
