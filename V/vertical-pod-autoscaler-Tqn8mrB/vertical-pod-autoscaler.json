[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-admission-controller",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "admission-controller"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-recommender",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "recommender"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-updater",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "updater"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-admission-controller-tls",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "admission-controller"
      }
    },
    "type": "Opaque",
    "data": {
      "ca.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkRENDQWx5Z0F3SUJBZ0lSQUpGYzZZWnB6YUVzWkk0b3MvVWQyK3N3RFFZSktvWklodmNOQVFFTEJRQXcKUkRGQ01FQUdBMVVFQXhNNWNtVnNaV0Z6WlMxdVlXMWxMWFpsY25ScFkyRnNMWEJ2WkMxaGRYUnZjMk5oYkdWeQpMV0ZrYldsemMybHZiaTFqYjI1MGNtOXNiR1Z5TUI0WERUSXlNRFl4TWpFME16SXhORm9YRFRJek1EWXhNakUwCk16SXhORm93UkRGQ01FQUdBMVVFQXhNNWNtVnNaV0Z6WlMxdVlXMWxMWFpsY25ScFkyRnNMWEJ2WkMxaGRYUnYKYzJOaGJHVnlMV0ZrYldsemMybHZiaTFqYjI1MGNtOXNiR1Z5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQwpBUThBTUlJQkNnS0NBUUVBdnF6cWdqUWpYb0htSmlQaGN0blVtZC9XeWZEdmk5ZzlnTU4xdlFRYlFBaXdySGVwCnp5eExLckxFSnJCM0w2M2hNWjBYQ0FzaTNUYm0xY05nWWNiNHgrMEZqTTYxYnlGMDFKSmRQWko3dXdjajdXMHMKa0swUlJUVmR3cDBhRVhjSzYvNWRCQmdJQ1dqQlNiSlZtNVZjL0RDeGRZS2tPSDRnUGVnand1NXRYRmxpVDlrbwpUVzdrYjVmMlRwZ1FCOHg1a25aby9tKzhBVEloTWNRSXY1QThpNVlscHN1MlBxSGY3V1RNcjlUYWo4L2JRUm1KCjlub0RmZHBJdnJRa1YrVHIveHh2NGhCRmdkeGFuam0zMjl3R0U2R21PcHhoV095SzFmNEhVMTEwNndlQTNDSzkKWE56L0JLK3grVmhnZU5hcCtzSTljOHRGU0ZLazRQMngzQnNoWndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGCk1BTUJBZjh3SFFZRFZSME9CQllFRkpmUTBpektqSlhHdEZQRUY2azVkaTFqYmxvL01BMEdDU3FHU0liM0RRRUIKQ3dVQUE0SUJBUUN4blVaVlNUaHRDellZQURlanJHQzF1MDdjblVYV1R5VWNwZjg0Z1FkSDhaMWQ5cy9MVUQxcgp5STdicDR4UXh3ZTlCYmVTb0xmZ0VIYTl1RTVQTjY3MGx5ZE0yWEVHNWFWT0s3NUJSS2RVTk9kSXduTDB5YmhGCmNLbjlzZmZ2ak1wTmE4N0dsV1ZJWklCNEQ1U0FXMmNXaUlJM2VqY0VzU2xyTWprcUdzS3hXcVNoN3l4Q2VCbk8KN0ZwczNpcEhmNWgxNjNMQjl5RndDNFBLQUpOY2hSdTJLZjA0bGhOZExZaDlWSjZMWXFOdFpKbW9GVEtJUGR4cApESlhUc3U0T1NoUER5UTNIdkxNN1RHZUFSYkZwQk9qV1dHQVdTK3NPRzZERlp1amZUYzlnQjJQUk10cy9NNFBMCnF4ZjQ4VHY2ZHNLSUMwZ3Z5OFRrRlNBdGE4WkhrRkVlCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
      "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkekNDQWwrZ0F3SUJBZ0lSQUs1a1JDdCt1ZGZodG1NTjZnclZ5M293RFFZSktvWklodmNOQVFFTEJRQXcKUkRGQ01FQUdBMVVFQXhNNWNtVnNaV0Z6WlMxdVlXMWxMWFpsY25ScFkyRnNMWEJ2WkMxaGRYUnZjMk5oYkdWeQpMV0ZrYldsemMybHZiaTFqYjI1MGNtOXNiR1Z5TUI0WERUSXlNRFl4TWpFME16SXhOVm9YRFRJek1EWXhNakUwCk16SXhOVm93SWpFZ01CNEdBMVVFQXhNWGRuQmhMWGRsWW1odmIyc3VaR1ZtWVhWc2RDNXpkbU13Z2dFaU1BMEcKQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvMVNpQjRHSG9hQzkySms3Y0x4YUJtTEZvQUtHMgpmUGVsMnZhbFI4TGw4LzBCcVgwLzh1dzlrK2VkdUdseXIxTFJvMEdsQUpXU25vZ0FHa2o5NjlNLythNlRqZVlDCmUzaGV0UDJLd1JjMU5FSm9xcnNrTDhxWnV0VW5mdm1xcXQwVTdEWnlSTXRwTUlYOHhybUxXSW5MYXBEbkI5VnMKOUxhWUFzL2EwRlBMYkVSd2hwSFA0UDVTTi80LzhuTnZEVHBxTk03a3JsTStDTWhWcGJIVkFuMXVYR0wvam5lTwpqcEN6YmdFdVBsKzNmVkhqck8wNldwbjZOajFSWHZXWWhTemNDYUhBS3l6TjFrV0xHUFoyQzFJSGNrS3gxRjhJCjRTdDdiZmt0UG5UWG90RnZScUZHeHZyVVRCSWswQUFYTEcrT0NpZjNLUFFkTHU4VzdLV1liY1RwQWdNQkFBR2oKZ1lVd2dZSXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRgpCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkpmUTBpektqSlhHdEZQRUY2azVkaTFqCmJsby9NQ0lHQTFVZEVRUWJNQm1DRjNad1lTMTNaV0pvYjI5ckxtUmxabUYxYkhRdWMzWmpNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCeGtKM3E1R1BYTm4zSURIb1dxeXF4ZDNhTzlvYnhNNTVYVDBtUVFqYkdmeVk2YUZpUgo2RXRWRWljTWdGZ1FqVitBOEZ5NHlWNGhUK0tBejVBRDNJdlh6amhaeHJkYzllRW51d1lMR0VDODZIWXk4MFhJCkF2bURnd3pVSHV2c09iNUMrQWs0dWpZRDNCSTNHQ0lXSGhvOHdER3lCZkdjQWdWZFZzM2VKa0ZUQk9jT2Q2alMKbWlWdFRrRlZRS21rcTNocmF3aHB4Zy9mNFE2SDJkUFNPYUFxandMa0xhTjZiY1pIbkVRSmZyU3cyYlZMZ3dZcQp0TlBPZjQ2TkplTVlsKzNUR1ZLK2xxMGJRMHlwOTRZWVdEWkZHSlhFL2d2SGdiYjFqSGpjNDVIZW8rRGdHVVUrCkRuQ3oxc1JDRGx4RHlNdjFvYUROZ2ViZnRFNlArbnpzS0NkeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
      "tls.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdjlVb2dlQmg2R2d2ZGlaTzNDOFdnWml4YUFDaHRuejNwZHIycFVmQzVmUDlBYWw5ClAvTHNQWlBubmJocGNxOVMwYU5CcFFDVmtwNklBQnBJL2V2VFAvbXVrNDNtQW50NFhyVDlpc0VYTlRSQ2FLcTcKSkMvS21iclZKMzc1cXFyZEZPdzJja1RMYVRDRi9NYTVpMWlKeTJxUTV3ZlZiUFMybUFMUDJ0QlR5MnhFY0lhUgp6K0QrVWpmK1AvSnpidzA2YWpUTzVLNVRQZ2pJVmFXeDFRSjlibHhpLzQ1M2pvNlFzMjRCTGo1ZnQzMVI0Nnp0Ck9scVoralk5VVY3MW1JVXMzQW1od0Nzc3pkWkZpeGoyZGd0U0IzSkNzZFJmQ09FcmUyMzVMVDUwMTZMUmIwYWgKUnNiNjFFd1NKTkFBRnl4dmpnb245eWowSFM3dkZ1eWxtRzNFNlFJREFRQUJBb0lCQURydkc2QzY5SmxYMkt6dAptL0NkTHNibHlDcnhkcnovcTMxeXhhK0ZXbVVYRGpXQ2dvNHc3VThGcjNTUEFTWlFvcHJ4RXV2RVFDOXBNTk1IClFFRnlQOVk1dU41d0M2ZmJrdUZWclVjQmgwVzdKbVBOZit6Z0dkZ2N3L3Q4VU91VHpwUHM5ZFVwT1d5NWtaQlUKNVEvZ1JZVU8yakdBQUp1V21yb2Nzd3JBVWQzK2ZzYjlBbWtoalZ4Yk9Da051aE1UUERuRTZTZ2hSVzk2WldkSgpJakhybUFnb3VjajJiZ3M5RTlNKzc2L29OWEV2TjgzTk9LZTF2cisvbUhMbWNEQThKNnJZYzBQLzBvQ2FnWVprClNIZ0pxbUFNN1FPSytQSnRZU0IwNFR6VnRTcm1YNGp5Tll2ZTQ5emNiVjQ1dW4rWHF4Vk1VVklIT2NOQmhxYk0KeXVHQmdnRUNnWUVBNXpHSnlpWGNtZnZLcmpZNkFLMG8xTWVRblA4QjVIZ2xQQWhUZ1hnV29Fa0FHQzNwV0tIOApib1lncDZaUnZkUzNYWWhMeDZTWXBScGFVcHVvZlIwRzk5bHdwWDZ5K3NCcWU2V0lBOS9GNWoraVRzVXZRdHkyCmJzZFJKVEtTbm1hNXNBWFh0d3JhUm5vcFloQTloS3FONzVVclAwbjdBQVFuU3BpZDUwS1dyV0VDZ1lFQTFHcHoKQ1FxNStvYXZYMHJTWDBTaWQ0Wm1haUplWG9vVW5iTXZidWdNcXk0TVBaTDFVQ0ozcGRKdXM1ZUtHZEhVS0RodApGOHBReWZTbjlpd2FFSXNBTGRvSkxmQ0RZTS9rMjRJUUFpdll0RUl3UkVhcWZySExvdEY3MWtWL3BCVXFtelAxClFOOHRZQnRmR3czeVVURy9XS3ZOR2F6S2hyNkk3WXh0bC92UWZJa0NnWUVBM2lHQ3VtOVdYYnpIS0V1QnYxU2cKZnBDZ0tiZjZJWUl1aEZlYnBERzF5NXRZTStNbzZMZjZ5bGFrMlcrNzZpQ1BiWmFlK05yMHJ1MTdDeFB6OXdJRQp4KzVyaFJjTzhFNGdBVjB5S2thKzVsTU5wNUZkcjJoUkFHOFJVQ1FmSzRLWHRzQm1Xc0JhcUl5SFpta2tNbXVNCnBEMDJxRUIwb2JkYjZSaHAzdURqMVFFQ2dZQXJ3KzhGdXVjTXZqbGQrZTJVWVhEVURhWUdVaVI5ZUJlOVVsRUEKbWVFYVYvZC9yRXJOQXYwQjluU0duajkvQ0dPZEVkc3dYcWY4cEdNQzdwMUVNVStOSXZKbk83bmw5WStpeG82RAoxQUxuU1FmbTJXU0JqQ0ozM28rVVcyZHNLRXhLQkErUkdTcWhOYUtIMFh6T3krQXY1ZDN4WDArdktZek8zUE1yCnNGK0plUUtCZ1FEZS81eEJ2ejZCamw4cmtSM0h0ODQ0bVVyQ3gyTmUyMit5MVNiY3E0MjdFb0ZNbUg1Y3JhVXAKdEZGNWtWdFRFVGFReHlNcWpuOURXdHRGVkRTbFlPUXQyd1FHY3d2WWR4ZTRaL3cxNHl1OVBxa3RyejZLTWRSagoxZ1Z3dWlJT2FIc05IcFlRODR6ZDBQLzNaUDFSa3NJSTRYM1lac0xOeHRhc3czMFA3bTRWVGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-admission-controller",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "admission-controller"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "*"
        ],
        "resources": [
          "*/scale"
        ],
        "verbs": [
          "get",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "replicationcontrollers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "daemonsets",
          "deployments",
          "replicasets",
          "statefulsets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "jobs",
          "cronjobs"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "configmaps",
          "nodes",
          "limitranges"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "admissionregistration.k8s.io"
        ],
        "resources": [
          "mutatingwebhookconfigurations"
        ],
        "verbs": [
          "create",
          "delete",
          "get",
          "list"
        ]
      },
      {
        "apiGroups": [
          "poc.autoscaling.k8s.io"
        ],
        "resources": [
          "verticalpodautoscalers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "autoscaling.k8s.io"
        ],
        "resources": [
          "verticalpodautoscalers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "coordination.k8s.io"
        ],
        "resources": [
          "leases"
        ],
        "verbs": [
          "create",
          "update",
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-recommender",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "recommender"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "metrics.k8s.io"
        ],
        "resources": [
          "pods"
        ],
        "verbs": [
          "get",
          "list"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "nodes",
          "limitranges"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create"
        ]
      },
      {
        "apiGroups": [
          "poc.autoscaling.k8s.io"
        ],
        "resources": [
          "verticalpodautoscalers"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "autoscaling.k8s.io"
        ],
        "resources": [
          "verticalpodautoscalers"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "poc.autoscaling.k8s.io"
        ],
        "resources": [
          "verticalpodautoscalercheckpoints"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "patch",
          "delete"
        ]
      },
      {
        "apiGroups": [
          "autoscaling.k8s.io"
        ],
        "resources": [
          "verticalpodautoscalercheckpoints"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create",
          "patch",
          "delete"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "namespaces"
        ],
        "verbs": [
          "get",
          "list"
        ]
      },
      {
        "apiGroups": [
          "*"
        ],
        "resources": [
          "*/scale"
        ],
        "verbs": [
          "get",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "replicationcontrollers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "daemonsets",
          "deployments",
          "replicasets",
          "statefulsets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "jobs",
          "cronjobs"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-updater",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "updater"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods",
          "nodes",
          "limitranges"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "create"
        ]
      },
      {
        "apiGroups": [
          "poc.autoscaling.k8s.io"
        ],
        "resources": [
          "verticalpodautoscalers"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "autoscaling.k8s.io"
        ],
        "resources": [
          "verticalpodautoscalers"
        ],
        "verbs": [
          "get",
          "list",
          "watch",
          "patch"
        ]
      },
      {
        "apiGroups": [
          "*"
        ],
        "resources": [
          "*/scale"
        ],
        "verbs": [
          "get",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "replicationcontrollers"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apps"
        ],
        "resources": [
          "daemonsets",
          "deployments",
          "replicasets",
          "statefulsets"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "batch"
        ],
        "resources": [
          "jobs",
          "cronjobs"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          "apps",
          "extensions"
        ],
        "resources": [
          "replicasets"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "pods/eviction"
        ],
        "verbs": [
          "create"
        ]
      },
      {
        "apiGroups": [
          "coordination.k8s.io"
        ],
        "resources": [
          "leases"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-admission-controller",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "admission-controller"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-vertical-pod-autoscaler-admission-controller"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-vertical-pod-autoscaler-admission-controller",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-recommender",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "recommender"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-vertical-pod-autoscaler-recommender"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-vertical-pod-autoscaler-recommender",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-updater",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "updater"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-vertical-pod-autoscaler-updater"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-vertical-pod-autoscaler-updater",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-admission-controller-metri",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "admission-controller"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8944,
          "targetPort": "http-metrics",
          "protocol": "TCP",
          "name": "http-metrics"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "admission-controller"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "vpa-webhook",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "admission-controller"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 443,
          "targetPort": "https",
          "protocol": "TCP",
          "name": "https"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "admission-controller"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-recommender-metrics",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "recommender"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8942,
          "targetPort": "http-metrics",
          "protocol": "TCP",
          "name": "http-metrics"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "recommender"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-updater-metrics",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "updater"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8943,
          "targetPort": "http-metrics",
          "protocol": "TCP",
          "name": "http-metrics"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "updater"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-admission-controller",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "admission-controller"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "vertical-pod-autoscaler",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "admission-controller"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "vertical-pod-autoscaler",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "admission-controller"
          },
          "annotations": {
            "checksum/tls-secret": "d834985f65781c12af09cdae67e02d478132bfc8d512f4a251837a15b3a8dd57"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-vertical-pod-autoscaler-admission-controller",
          "securityContext": {
            "runAsNonRoot": true,
            "runAsUser": 65534
          },
          "containers": [
            {
              "name": "admission-controller",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "k8s.gcr.io/autoscaling/vpa-admission-controller:0.11.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--client-ca-file=/tls-secret/ca.crt",
                "--tls-cert-file=/tls-secret/tls.crt",
                "--tls-private-key=/tls-secret/tls.key",
                "--v=2"
              ],
              "env": [
                {
                  "name": "NAMESPACE",
                  "value": "default"
                }
              ],
              "ports": [
                {
                  "name": "https",
                  "containerPort": 8000,
                  "protocol": "TCP"
                },
                {
                  "name": "http-metrics",
                  "containerPort": 8944,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/health-check",
                  "port": "http-metrics"
                },
                "initialDelaySeconds": 0,
                "periodSeconds": 10,
                "timeoutSeconds": 1,
                "failureThreshold": 3,
                "successThreshold": 1
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/health-check",
                  "port": "http-metrics"
                },
                "initialDelaySeconds": 0,
                "periodSeconds": 10,
                "timeoutSeconds": 1,
                "failureThreshold": 3,
                "successThreshold": 1
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "tls-secret",
                  "mountPath": "/tls-secret",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "tls-secret",
              "secret": {
                "secretName": "release-name-vertical-pod-autoscaler-admission-controller-tls"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-recommender",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "recommender"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "vertical-pod-autoscaler",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "recommender"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "vertical-pod-autoscaler",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "recommender"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-vertical-pod-autoscaler-recommender",
          "securityContext": {
            "runAsNonRoot": true,
            "runAsUser": 65534
          },
          "containers": [
            {
              "name": "recommender",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "k8s.gcr.io/autoscaling/vpa-recommender:0.11.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--v=2"
              ],
              "ports": [
                {
                  "name": "http-metrics",
                  "containerPort": 8942,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/health-check",
                  "port": "http-metrics"
                },
                "initialDelaySeconds": 0,
                "periodSeconds": 10,
                "timeoutSeconds": 1,
                "failureThreshold": 3,
                "successThreshold": 1
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/health-check",
                  "port": "http-metrics"
                },
                "initialDelaySeconds": 0,
                "periodSeconds": 10,
                "timeoutSeconds": 1,
                "failureThreshold": 3,
                "successThreshold": 1
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-updater",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "updater"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "vertical-pod-autoscaler",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "updater"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "vertical-pod-autoscaler",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/component": "updater"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-vertical-pod-autoscaler-updater",
          "securityContext": {
            "runAsNonRoot": true,
            "runAsUser": 65534
          },
          "containers": [
            {
              "name": "updater",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "k8s.gcr.io/autoscaling/vpa-updater:0.11.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "--v=2"
              ],
              "env": [
                {
                  "name": "NAMESPACE",
                  "value": "default"
                }
              ],
              "ports": [
                {
                  "name": "http-metrics",
                  "containerPort": 8943,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/health-check",
                  "port": "http-metrics"
                },
                "initialDelaySeconds": 0,
                "periodSeconds": 10,
                "timeoutSeconds": 1,
                "failureThreshold": 3,
                "successThreshold": 1
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/health-check",
                  "port": "http-metrics"
                },
                "initialDelaySeconds": 0,
                "periodSeconds": 10,
                "timeoutSeconds": 1,
                "failureThreshold": 3,
                "successThreshold": 1
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                },
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-crds",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "crds"
      },
      "annotations": {
        "helm.sh/hook": "pre-install,pre-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-crds",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "crds"
      },
      "annotations": {
        "helm.sh/hook": "pre-install,pre-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "data": {
      "verticalpodautoscalercheckpoints.yaml": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  name: verticalpodautoscalercheckpoints.autoscaling.k8s.io\n  labels:\n    helm.sh/chart: vertical-pod-autoscaler-5.0.0\n    app.kubernetes.io/name: vertical-pod-autoscaler\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.11.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    api-approved.kubernetes.io: https://github.com/kubernetes/kubernetes/pull/63797\nspec:\n  group: autoscaling.k8s.io\n  names:\n    kind: VerticalPodAutoscalerCheckpoint\n    listKind: VerticalPodAutoscalerCheckpointList\n    plural: verticalpodautoscalercheckpoints\n    shortNames:\n    - vpacheckpoint\n    singular: verticalpodautoscalercheckpoint\n  scope: Namespaced\n  versions:\n  - name: v1\n    schema:\n      openAPIV3Schema:\n        description: VerticalPodAutoscalerCheckpoint is the checkpoint of the internal\n          state of VPA that is used for recovery after recommender's restart.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: 'Specification of the checkpoint. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.'\n            properties:\n              containerName:\n                description: Name of the checkpointed container.\n                type: string\n              vpaObjectName:\n                description: Name of the VPA object that stored VerticalPodAutoscalerCheckpoint\n                  object.\n                type: string\n            type: object\n          status:\n            description: Data of the checkpoint.\n            properties:\n              cpuHistogram:\n                description: Checkpoint of histogram for consumption of CPU.\n                properties:\n                  bucketWeights:\n                    description: Map from bucket index to bucket weight.\n                    type: object\n                    x-kubernetes-preserve-unknown-fields: true\n                  referenceTimestamp:\n                    description: Reference timestamp for samples collected within\n                      this histogram.\n                    format: date-time\n                    nullable: true\n                    type: string\n                  totalWeight:\n                    description: Sum of samples to be used as denominator for weights\n                      from BucketWeights.\n                    type: number\n                type: object\n              firstSampleStart:\n                description: Timestamp of the fist sample from the histograms.\n                format: date-time\n                nullable: true\n                type: string\n              lastSampleStart:\n                description: Timestamp of the last sample from the histograms.\n                format: date-time\n                nullable: true\n                type: string\n              lastUpdateTime:\n                description: The time when the status was last refreshed.\n                format: date-time\n                nullable: true\n                type: string\n              memoryHistogram:\n                description: Checkpoint of histogram for consumption of memory.\n                properties:\n                  bucketWeights:\n                    description: Map from bucket index to bucket weight.\n                    type: object\n                    x-kubernetes-preserve-unknown-fields: true\n                  referenceTimestamp:\n                    description: Reference timestamp for samples collected within\n                      this histogram.\n                    format: date-time\n                    nullable: true\n                    type: string\n                  totalWeight:\n                    description: Sum of samples to be used as denominator for weights\n                      from BucketWeights.\n                    type: number\n                type: object\n              totalSamplesCount:\n                description: Total number of samples in the histograms.\n                type: integer\n              version:\n                description: Version of the format of the stored data.\n                type: string\n            type: object\n        type: object\n    served: true\n    storage: true\n  - name: v1beta2\n    schema:\n      openAPIV3Schema:\n        description: VerticalPodAutoscalerCheckpoint is the checkpoint of the internal\n          state of VPA that is used for recovery after recommender's restart.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: 'Specification of the checkpoint. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.'\n            properties:\n              containerName:\n                description: Name of the checkpointed container.\n                type: string\n              vpaObjectName:\n                description: Name of the VPA object that stored VerticalPodAutoscalerCheckpoint\n                  object.\n                type: string\n            type: object\n          status:\n            description: Data of the checkpoint.\n            properties:\n              cpuHistogram:\n                description: Checkpoint of histogram for consumption of CPU.\n                properties:\n                  bucketWeights:\n                    description: Map from bucket index to bucket weight.\n                    type: object\n                    x-kubernetes-preserve-unknown-fields: true\n                  referenceTimestamp:\n                    description: Reference timestamp for samples collected within\n                      this histogram.\n                    format: date-time\n                    nullable: true\n                    type: string\n                  totalWeight:\n                    description: Sum of samples to be used as denominator for weights\n                      from BucketWeights.\n                    type: number\n                type: object\n              firstSampleStart:\n                description: Timestamp of the fist sample from the histograms.\n                format: date-time\n                nullable: true\n                type: string\n              lastSampleStart:\n                description: Timestamp of the last sample from the histograms.\n                format: date-time\n                nullable: true\n                type: string\n              lastUpdateTime:\n                description: The time when the status was last refreshed.\n                format: date-time\n                nullable: true\n                type: string\n              memoryHistogram:\n                description: Checkpoint of histogram for consumption of memory.\n                properties:\n                  bucketWeights:\n                    description: Map from bucket index to bucket weight.\n                    type: object\n                    x-kubernetes-preserve-unknown-fields: true\n                  referenceTimestamp:\n                    description: Reference timestamp for samples collected within\n                      this histogram.\n                    format: date-time\n                    nullable: true\n                    type: string\n                  totalWeight:\n                    description: Sum of samples to be used as denominator for weights\n                      from BucketWeights.\n                    type: number\n                type: object\n              totalSamplesCount:\n                description: Total number of samples in the histograms.\n                type: integer\n              version:\n                description: Version of the format of the stored data.\n                type: string\n            type: object\n        type: object\n    served: true\n    storage: false\n",
      "verticalpodautoscalers.yaml": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  name: verticalpodautoscalers.autoscaling.k8s.io\n  labels:\n    helm.sh/chart: vertical-pod-autoscaler-5.0.0\n    app.kubernetes.io/name: vertical-pod-autoscaler\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.11.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    api-approved.kubernetes.io: https://github.com/kubernetes/kubernetes/pull/63797\nspec:\n  group: autoscaling.k8s.io\n  names:\n    kind: VerticalPodAutoscaler\n    listKind: VerticalPodAutoscalerList\n    plural: verticalpodautoscalers\n    shortNames:\n    - vpa\n    singular: verticalpodautoscaler\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .spec.updatePolicy.updateMode\n      name: Mode\n      type: string\n    - jsonPath: .status.recommendation.containerRecommendations[0].target.cpu\n      name: CPU\n      type: string\n    - jsonPath: .status.recommendation.containerRecommendations[0].target.memory\n      name: Mem\n      type: string\n    - jsonPath: .status.conditions[?(@.type=='RecommendationProvided')].status\n      name: Provided\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1\n    schema:\n      openAPIV3Schema:\n        description: VerticalPodAutoscaler is the configuration for a vertical pod\n          autoscaler, which automatically manages pod resources based on historical\n          and real time resource utilization.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: 'Specification of the behavior of the autoscaler. More info:\n              https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.'\n            properties:\n              recommenders:\n                description: Recommender responsible for generating recommendation\n                  for this object. List should be empty (then the default recommender\n                  will generate the recommendation) or contain exactly one recommender.\n                items:\n                  description: VerticalPodAutoscalerRecommenderSelector points to\n                    a specific Vertical Pod Autoscaler recommender. In the future\n                    it might pass parameters to the recommender.\n                  properties:\n                    name:\n                      description: Name of the recommender responsible for generating\n                        recommendation for this object.\n                      type: string\n                  required:\n                  - name\n                  type: object\n                type: array\n              resourcePolicy:\n                description: Controls how the autoscaler computes recommended resources.\n                  The resource policy may be used to set constraints on the recommendations\n                  for individual containers. If not specified, the autoscaler computes\n                  recommended resources for all containers in the pod, without additional\n                  constraints.\n                properties:\n                  containerPolicies:\n                    description: Per-container resource policies.\n                    items:\n                      description: ContainerResourcePolicy controls how autoscaler\n                        computes the recommended resources for a specific container.\n                      properties:\n                        containerName:\n                          description: Name of the container or DefaultContainerResourcePolicy,\n                            in which case the policy is used by the containers that\n                            don't have their own policy specified.\n                          type: string\n                        controlledResources:\n                          description: Specifies the type of recommendations that\n                            will be computed (and possibly applied) by VPA. If not\n                            specified, the default of [ResourceCPU, ResourceMemory]\n                            will be used.\n                          items:\n                            description: ResourceName is the name identifying various\n                              resources in a ResourceList.\n                            type: string\n                          type: array\n                        controlledValues:\n                          description: Specifies which resource values should be controlled.\n                            The default is \"RequestsAndLimits\".\n                          enum:\n                          - RequestsAndLimits\n                          - RequestsOnly\n                          type: string\n                        maxAllowed:\n                          additionalProperties:\n                            anyOf:\n                            - type: integer\n                            - type: string\n                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                            x-kubernetes-int-or-string: true\n                          description: Specifies the maximum amount of resources that\n                            will be recommended for the container. The default is\n                            no maximum.\n                          type: object\n                        minAllowed:\n                          additionalProperties:\n                            anyOf:\n                            - type: integer\n                            - type: string\n                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                            x-kubernetes-int-or-string: true\n                          description: Specifies the minimal amount of resources that\n                            will be recommended for the container. The default is\n                            no minimum.\n                          type: object\n                        mode:\n                          description: Whether autoscaler is enabled for the container.\n                            The default is \"Auto\".\n                          enum:\n                          - Auto\n                          - \"Off\"\n                          type: string\n                      type: object\n                    type: array\n                type: object\n              targetRef:\n                description: TargetRef points to the controller managing the set of\n                  pods for the autoscaler to control - e.g. Deployment, StatefulSet.\n                  VerticalPodAutoscaler can be targeted at controller implementing\n                  scale subresource (the pod set is retrieved from the controller's\n                  ScaleStatus) or some well known controllers (e.g. for DaemonSet\n                  the pod set is read from the controller's spec). If VerticalPodAutoscaler\n                  cannot use specified target it will report ConfigUnsupported condition.\n                  Note that VerticalPodAutoscaler does not require full implementation\n                  of scale subresource - it will not use it to modify the replica\n                  count. The only thing retrieved is a label selector matching pods\n                  grouped by the target resource.\n                properties:\n                  apiVersion:\n                    description: API version of the referent\n                    type: string\n                  kind:\n                    description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"'\n                    type: string\n                  name:\n                    description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n                    type: string\n                required:\n                - kind\n                - name\n                type: object\n              updatePolicy:\n                description: Describes the rules on how changes are applied to the\n                  pods. If not specified, all fields in the `PodUpdatePolicy` are\n                  set to their default values.\n                properties:\n                  minReplicas:\n                    description: Minimal number of replicas which need to be alive\n                      for Updater to attempt pod eviction (pending other checks like\n                      PDB). Only positive values are allowed. Overrides global '--min-replicas'\n                      flag.\n                    format: int32\n                    type: integer\n                  updateMode:\n                    description: Controls when autoscaler applies changes to the pod\n                      resources. The default is 'Auto'.\n                    enum:\n                    - \"Off\"\n                    - Initial\n                    - Recreate\n                    - Auto\n                    type: string\n                type: object\n            required:\n            - targetRef\n            type: object\n          status:\n            description: Current information about the autoscaler.\n            properties:\n              conditions:\n                description: Conditions is the set of conditions required for this\n                  autoscaler to scale its target, and indicates whether or not those\n                  conditions are met.\n                items:\n                  description: VerticalPodAutoscalerCondition describes the state\n                    of a VerticalPodAutoscaler at a certain point.\n                  properties:\n                    lastTransitionTime:\n                      description: lastTransitionTime is the last time the condition\n                        transitioned from one status to another\n                      format: date-time\n                      type: string\n                    message:\n                      description: message is a human-readable explanation containing\n                        details about the transition\n                      type: string\n                    reason:\n                      description: reason is the reason for the condition's last transition.\n                      type: string\n                    status:\n                      description: status is the status of the condition (True, False,\n                        Unknown)\n                      type: string\n                    type:\n                      description: type describes the current condition\n                      type: string\n                  required:\n                  - status\n                  - type\n                  type: object\n                type: array\n              recommendation:\n                description: The most recently computed amount of resources recommended\n                  by the autoscaler for the controlled pods.\n                properties:\n                  containerRecommendations:\n                    description: Resources recommended by the autoscaler for each\n                      container.\n                    items:\n                      description: RecommendedContainerResources is the recommendation\n                        of resources computed by autoscaler for a specific container.\n                        Respects the container resource policy if present in the spec.\n                        In particular the recommendation is not produced for containers\n                        with `ContainerScalingMode` set to 'Off'.\n                      properties:\n                        containerName:\n                          description: Name of the container.\n                          type: string\n                        lowerBound:\n                          additionalProperties:\n                            anyOf:\n                            - type: integer\n                            - type: string\n                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                            x-kubernetes-int-or-string: true\n                          description: Minimum recommended amount of resources. Observes\n                            ContainerResourcePolicy. This amount is not guaranteed\n                            to be sufficient for the application to operate in a stable\n                            way, however running with less resources is likely to\n                            have significant impact on performance/availability.\n                          type: object\n                        target:\n                          additionalProperties:\n                            anyOf:\n                            - type: integer\n                            - type: string\n                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                            x-kubernetes-int-or-string: true\n                          description: Recommended amount of resources. Observes ContainerResourcePolicy.\n                          type: object\n                        uncappedTarget:\n                          additionalProperties:\n                            anyOf:\n                            - type: integer\n                            - type: string\n                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                            x-kubernetes-int-or-string: true\n                          description: The most recent recommended resources target\n                            computed by the autoscaler for the controlled pods, based\n                            only on actual resource usage, not taking into account\n                            the ContainerResourcePolicy. May differ from the Recommendation\n                            if the actual resource usage causes the target to violate\n                            the ContainerResourcePolicy (lower than MinAllowed or\n                            higher that MaxAllowed). Used only as status indication,\n                            will not affect actual resource assignment.\n                          type: object\n                        upperBound:\n                          additionalProperties:\n                            anyOf:\n                            - type: integer\n                            - type: string\n                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                            x-kubernetes-int-or-string: true\n                          description: Maximum recommended amount of resources. Observes\n                            ContainerResourcePolicy. Any resources allocated beyond\n                            this value are likely wasted. This value may be larger\n                            than the maximum amount of application is actually capable\n                            of consuming.\n                          type: object\n                      required:\n                      - target\n                      type: object\n                    type: array\n                type: object\n            type: object\n        required:\n        - spec\n        type: object\n    served: true\n    storage: true\n    subresources: {}\n  - name: v1beta2\n    schema:\n      openAPIV3Schema:\n        description: VerticalPodAutoscaler is the configuration for a vertical pod\n          autoscaler, which automatically manages pod resources based on historical\n          and real time resource utilization.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: 'Specification of the behavior of the autoscaler. More info:\n              https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.'\n            properties:\n              resourcePolicy:\n                description: Controls how the autoscaler computes recommended resources.\n                  The resource policy may be used to set constraints on the recommendations\n                  for individual containers. If not specified, the autoscaler computes\n                  recommended resources for all containers in the pod, without additional\n                  constraints.\n                properties:\n                  containerPolicies:\n                    description: Per-container resource policies.\n                    items:\n                      description: ContainerResourcePolicy controls how autoscaler\n                        computes the recommended resources for a specific container.\n                      properties:\n                        containerName:\n                          description: Name of the container or DefaultContainerResourcePolicy,\n                            in which case the policy is used by the containers that\n                            don't have their own policy specified.\n                          type: string\n                        maxAllowed:\n                          additionalProperties:\n                            anyOf:\n                            - type: integer\n                            - type: string\n                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                            x-kubernetes-int-or-string: true\n                          description: Specifies the maximum amount of resources that\n                            will be recommended for the container. The default is\n                            no maximum.\n                          type: object\n                        minAllowed:\n                          additionalProperties:\n                            anyOf:\n                            - type: integer\n                            - type: string\n                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                            x-kubernetes-int-or-string: true\n                          description: Specifies the minimal amount of resources that\n                            will be recommended for the container. The default is\n                            no minimum.\n                          type: object\n                        mode:\n                          description: Whether autoscaler is enabled for the container.\n                            The default is \"Auto\".\n                          enum:\n                          - Auto\n                          - \"Off\"\n                          type: string\n                      type: object\n                    type: array\n                type: object\n              targetRef:\n                description: TargetRef points to the controller managing the set of\n                  pods for the autoscaler to control - e.g. Deployment, StatefulSet.\n                  VerticalPodAutoscaler can be targeted at controller implementing\n                  scale subresource (the pod set is retrieved from the controller's\n                  ScaleStatus) or some well known controllers (e.g. for DaemonSet\n                  the pod set is read from the controller's spec). If VerticalPodAutoscaler\n                  cannot use specified target it will report ConfigUnsupported condition.\n                  Note that VerticalPodAutoscaler does not require full implementation\n                  of scale subresource - it will not use it to modify the replica\n                  count. The only thing retrieved is a label selector matching pods\n                  grouped by the target resource.\n                properties:\n                  apiVersion:\n                    description: API version of the referent\n                    type: string\n                  kind:\n                    description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"'\n                    type: string\n                  name:\n                    description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n                    type: string\n                required:\n                - kind\n                - name\n                type: object\n              updatePolicy:\n                description: Describes the rules on how changes are applied to the\n                  pods. If not specified, all fields in the `PodUpdatePolicy` are\n                  set to their default values.\n                properties:\n                  updateMode:\n                    description: Controls when autoscaler applies changes to the pod\n                      resources. The default is 'Auto'.\n                    enum:\n                    - \"Off\"\n                    - Initial\n                    - Recreate\n                    - Auto\n                    type: string\n                type: object\n            required:\n            - targetRef\n            type: object\n          status:\n            description: Current information about the autoscaler.\n            properties:\n              conditions:\n                description: Conditions is the set of conditions required for this\n                  autoscaler to scale its target, and indicates whether or not those\n                  conditions are met.\n                items:\n                  description: VerticalPodAutoscalerCondition describes the state\n                    of a VerticalPodAutoscaler at a certain point.\n                  properties:\n                    lastTransitionTime:\n                      description: lastTransitionTime is the last time the condition\n                        transitioned from one status to another\n                      format: date-time\n                      type: string\n                    message:\n                      description: message is a human-readable explanation containing\n                        details about the transition\n                      type: string\n                    reason:\n                      description: reason is the reason for the condition's last transition.\n                      type: string\n                    status:\n                      description: status is the status of the condition (True, False,\n                        Unknown)\n                      type: string\n                    type:\n                      description: type describes the current condition\n                      type: string\n                  required:\n                  - status\n                  - type\n                  type: object\n                type: array\n              recommendation:\n                description: The most recently computed amount of resources recommended\n                  by the autoscaler for the controlled pods.\n                properties:\n                  containerRecommendations:\n                    description: Resources recommended by the autoscaler for each\n                      container.\n                    items:\n                      description: RecommendedContainerResources is the recommendation\n                        of resources computed by autoscaler for a specific container.\n                        Respects the container resource policy if present in the spec.\n                        In particular the recommendation is not produced for containers\n                        with `ContainerScalingMode` set to 'Off'.\n                      properties:\n                        containerName:\n                          description: Name of the container.\n                          type: string\n                        lowerBound:\n                          additionalProperties:\n                            anyOf:\n                            - type: integer\n                            - type: string\n                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                            x-kubernetes-int-or-string: true\n                          description: Minimum recommended amount of resources. Observes\n                            ContainerResourcePolicy. This amount is not guaranteed\n                            to be sufficient for the application to operate in a stable\n                            way, however running with less resources is likely to\n                            have significant impact on performance/availability.\n                          type: object\n                        target:\n                          additionalProperties:\n                            anyOf:\n                            - type: integer\n                            - type: string\n                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                            x-kubernetes-int-or-string: true\n                          description: Recommended amount of resources. Observes ContainerResourcePolicy.\n                          type: object\n                        uncappedTarget:\n                          additionalProperties:\n                            anyOf:\n                            - type: integer\n                            - type: string\n                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                            x-kubernetes-int-or-string: true\n                          description: The most recent recommended resources target\n                            computed by the autoscaler for the controlled pods, based\n                            only on actual resource usage, not taking into account\n                            the ContainerResourcePolicy. May differ from the Recommendation\n                            if the actual resource usage causes the target to violate\n                            the ContainerResourcePolicy (lower than MinAllowed or\n                            higher that MaxAllowed). Used only as status indication,\n                            will not affect actual resource assignment.\n                          type: object\n                        upperBound:\n                          additionalProperties:\n                            anyOf:\n                            - type: integer\n                            - type: string\n                            pattern: ^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$\n                            x-kubernetes-int-or-string: true\n                          description: Maximum recommended amount of resources. Observes\n                            ContainerResourcePolicy. Any resources allocated beyond\n                            this value are likely wasted. This value may be larger\n                            than the maximum amount of application is actually capable\n                            of consuming.\n                          type: object\n                      required:\n                      - target\n                      type: object\n                    type: array\n                type: object\n            type: object\n        required:\n        - spec\n        type: object\n    served: true\n    storage: false\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-tests",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "tests"
      },
      "annotations": {
        "helm.sh/hook": "test"
      }
    },
    "data": {
      "test_all.py": "import requests\n\n\ndef test_admission_controller_service_connection():\n    # url = \"https://release-name-vertical-pod-autoscaler-admission-controller.default.svc:/\"\n    url = \"https://vpa-webhook.default.svc:443/\"\n    verify = \"/admission-controller-tls-secret/ca.crt\"\n\n    response = requests.get(url, verify=verify)\n\n    assert response.status_code == 200\n\n\ndef test_admission_controller_metrics_service_connection():\n    url = \"http://release-name-vertical-pod-autoscaler-admission-controller-metri:8944/metrics\"\n\n    response = requests.get(url)\n\n    assert response.status_code == 200\n\n\ndef test_recommender_metrics_service_connection():\n    url = \"http://release-name-vertical-pod-autoscaler-recommender-metrics:8942/metrics\"\n\n    response = requests.get(url)\n\n    assert response.status_code == 200\n\n\ndef test_updater_metrics_service_connection():\n    url = \"http://release-name-vertical-pod-autoscaler-updater-metrics:8943/metrics\"\n\n    response = requests.get(url)\n\n    assert response.status_code == 200\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-crds",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "crds"
      },
      "annotations": {
        "helm.sh/hook": "pre-install,pre-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "rules": [
      {
        "apiGroups": [
          "apiextensions.k8s.io"
        ],
        "resources": [
          "customresourcedefinitions"
        ],
        "verbs": [
          "create",
          "get",
          "patch"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-crds",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "crds"
      },
      "annotations": {
        "helm.sh/hook": "pre-install,pre-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "release-name-vertical-pod-autoscaler-crds"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-vertical-pod-autoscaler-crds",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-tests",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "tests"
      },
      "annotations": {
        "helm.sh/hook": "test"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "tests",
          "image": "ghcr.io/cowboysysop/pytest:1.0.0",
          "imagePullPolicy": "IfNotPresent",
          "volumeMounts": [
            {
              "name": "tests",
              "mountPath": "/tests",
              "readOnly": true
            },
            {
              "name": "admission-controller-tls-secret",
              "mountPath": "/admission-controller-tls-secret",
              "readOnly": true
            }
          ],
          "workingDir": "/tests"
        }
      ],
      "restartPolicy": "Never",
      "volumes": [
        {
          "name": "tests",
          "configMap": {
            "name": "release-name-vertical-pod-autoscaler-tests"
          }
        },
        {
          "name": "admission-controller-tls-secret",
          "secret": {
            "secretName": "release-name-vertical-pod-autoscaler-admission-controller-tls"
          }
        }
      ]
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "release-name-vertical-pod-autoscaler-crds",
      "labels": {
        "helm.sh/chart": "vertical-pod-autoscaler-5.0.0",
        "app.kubernetes.io/name": "vertical-pod-autoscaler",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "0.11.0",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "crds"
      },
      "annotations": {
        "helm.sh/hook": "pre-install,pre-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
      }
    },
    "spec": {
      "template": {
        "spec": {
          "serviceAccountName": "release-name-vertical-pod-autoscaler-crds",
          "containers": [
            {
              "name": "kubectl",
              "image": "bitnami/kubectl:1.23.1",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "apply",
                "--filename=/config/verticalpodautoscalercheckpoints.yaml",
                "--filename=/config/verticalpodautoscalers.yaml"
              ],
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/config",
                  "readOnly": true
                }
              ]
            }
          ],
          "restartPolicy": "Never",
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-vertical-pod-autoscaler-crds"
              }
            }
          ]
        }
      }
    }
  }
]