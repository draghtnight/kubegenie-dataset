apiVersion: v1
kind: Service
metadata:
  name: etcd-for-vineyard
spec:
  ports:
    - name: etcd-for-vineyard-port
      port: 2379
      protocol: TCP
      targetPort: 2379
  selector:
    app: etcd
---
apiVersion: v1
kind: Service
metadata:
  labels:
    etcd_node: etcd0
  name: etcd0
spec:
  ports:
    - name: client
      port: 2379
      protocol: TCP
      targetPort: 2379
    - name: server
      port: 2380
      protocol: TCP
      targetPort: 2380
  selector:
    etcd_node: etcd0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    etcd_node: etcd1
  name: etcd1
spec:
  ports:
    - name: client
      port: 2379
      protocol: TCP
      targetPort: 2379
    - name: server
      port: 2380
      protocol: TCP
      targetPort: 2380
  selector:
    etcd_node: etcd1
---
apiVersion: v1
kind: Service
metadata:
  labels:
    etcd_node: etcd2
  name: etcd2
spec:
  ports:
    - name: client
      port: 2379
      protocol: TCP
      targetPort: 2379
    - name: server
      port: 2380
      protocol: TCP
      targetPort: 2380
  selector:
    etcd_node: etcd2
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-vineyard-rpc
  labels:
    helm.sh/chart: vineyard-0.3.2
    app.kubernetes.io/name: vineyard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.3.2
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9600
      targetPort: vineyard-ipc
      protocol: TCP
      name: vineyard-ipc
  selector:
    app.kubernetes.io/name: vineyard
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-vineyard
  labels:
    helm.sh/chart: vineyard-0.3.2
    app.kubernetes.io/name: vineyard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.3.2
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: vineyard
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vineyard
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: vineyard
          image: libvineyard/vineyardd:v0.3.2
          imagePullPolicy: Always
          command:
            - /bin/bash
            - -c
            - "/usr/bin/wait-for-it.sh -t 60 etcd-for-vineyard.default.svc.cluster.local:2379;\nsleep 1;\n/usr/local/bin/vineyardd \\ \n  --etcd_endpoint \\\n  http://etcd-for-vineyard.default.svc.cluster.local:2379\n"
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: USER
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: ipc
              containerPort: 9600
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9600
            periodSeconds: 60
          readinessProbe:
            exec:
              command:
                - ls
                - /var/run/vineyard.sock
          resources:
            seccompProfile:
              type: RuntimeDefault
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: run
              mountPath: /var/run
            - name: shm
              mountPath: /dev/shm
            - name: log
              mountPath: /var/log/vineyard
      volumes:
        - name: run
          hostPath:
            path: /var/run/vineyard-default-release-name-vineyard
        - name: shm
          emptyDir:
            medium: Memory
        - name: log
          emptyDir: {}
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: etcd
    etcd_node: etcd0
  name: etcd0
spec:
  containers:
    - command:
        - /usr/local/bin/etcd
        - --name
        - etcd0
        - --initial-advertise-peer-urls
        - http://etcd0:2380
        - --listen-peer-urls
        - http://0.0.0.0:2380
        - --listen-client-urls
        - http://0.0.0.0:2379
        - --advertise-client-urls
        - http://etcd0:2379
        - --initial-cluster
        - etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380
        - --initial-cluster-state
        - new
      image: quay.io/coreos/etcd:v3.4.16
      name: etcd
      ports:
        - containerPort: 2379
          name: client
          protocol: TCP
        - containerPort: 2380
          name: server
          protocol: TCP
  restartPolicy: Always
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: etcd
    etcd_node: etcd1
  name: etcd1
spec:
  containers:
    - command:
        - /usr/local/bin/etcd
        - --name
        - etcd1
        - --initial-advertise-peer-urls
        - http://etcd1:2380
        - --listen-peer-urls
        - http://0.0.0.0:2380
        - --listen-client-urls
        - http://0.0.0.0:2379
        - --advertise-client-urls
        - http://etcd1:2379
        - --initial-cluster
        - etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380
        - --initial-cluster-state
        - new
      image: quay.io/coreos/etcd:v3.4.16
      name: etcd
      ports:
        - containerPort: 2379
          name: client
          protocol: TCP
        - containerPort: 2380
          name: server
          protocol: TCP
  restartPolicy: Always
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: etcd
    etcd_node: etcd2
  name: etcd2
spec:
  containers:
    - command:
        - /usr/local/bin/etcd
        - --name
        - etcd2
        - --initial-advertise-peer-urls
        - http://etcd2:2380
        - --listen-peer-urls
        - http://0.0.0.0:2380
        - --listen-client-urls
        - http://0.0.0.0:2379
        - --advertise-client-urls
        - http://etcd2:2379
        - --initial-cluster
        - etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380
        - --initial-cluster-state
        - new
      image: quay.io/coreos/etcd:v3.4.16
      name: etcd
      ports:
        - containerPort: 2379
          name: client
          protocol: TCP
        - containerPort: 2380
          name: server
          protocol: TCP
  restartPolicy: Always
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-vineyard-test-ipc-service
  labels:
    helm.sh/chart: vineyard-0.3.2
    app.kubernetes.io/name: vineyard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.3.2
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - bash
        - -c
      args:
        - "true"
  restartPolicy: Never
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-vineyard-test-rpc-service
  labels:
    helm.sh/chart: vineyard-0.3.2
    app.kubernetes.io/name: vineyard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.3.2
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-vineyard:9600
  restartPolicy: Never
