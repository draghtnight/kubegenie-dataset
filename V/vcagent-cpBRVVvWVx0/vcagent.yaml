apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-vcagent
  namespace: cpBRVVvWVx0
  labels:
    app.kubernetes.io/name: vcagent
    app.kubernetes.io/version: 1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: vcagent-1.0.2
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-vcagent
  namespace: cpBRVVvWVx0
  labels:
    app.kubernetes.io/name: vcagent
    app.kubernetes.io/version: 1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: vcagent-1.0.2
type: Opaque
data: null
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-vcagent
  namespace: cpBRVVvWVx0
  labels:
    app.kubernetes.io/name: vcagent
    app.kubernetes.io/version: 1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: vcagent-1.0.2
data:
  configuration.yaml: |2
    # Manual a-priori configuration. Configuration will be only used when the sensor
    # is actually installed by the agent.
    # The commented out example values represent example configuration and are not
    # necessarily defaults. Defaults are usually 'absent' or mentioned separately.
    # Changes are hot reloaded unless otherwise mentioned.

    # It is possible to create files called 'configuration-abc.yaml' which are
    # merged with this file in file system order. So 'configuration-cde.yaml' comes
    # after 'configuration-abc.yaml'. Only nested structures are merged, values are
    # overwritten by subsequent configurations.

    # Secrets
    # To filter sensitive data from collection by the agent, all sensors respect
    # the following secrets configuration. If a key collected by a sensor matches
    # an entry from the list, the value is redacted.
    #com.vc.secrets:
    #  matcher: 'contains-ignore-case' # 'contains-ignore-case', 'contains', 'regex'
    #  list:
    #    - 'key'
    #    - 'password'
    #    - 'secret'

    # Host
    #com.vc.plugin.host:
    #  tags:
    #    - 'dev'
    #    - 'app1'

    # Hardware & Zone
    #com.vc.plugin.generic.hardware:
    #  enabled: true # disabled by default
    #  availability-zone: 'zone'
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-vcagent
  labels:
    app.kubernetes.io/name: vcagent
    app.kubernetes.io/version: 1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: vcagent-1.0.2
rules:
  - nonResourceURLs:
      - /version
      - /healthz
    verbs:
      - get
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - deployments
      - replicasets
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - replicasets
      - daemonsets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - events
      - services
      - endpoints
      - nodes
      - pods
      - replicationcontrollers
      - componentstatuses
      - resourcequotas
      - persistentvolumes
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - create
      - update
      - patch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-vcagent
  labels:
    app.kubernetes.io/name: vcagent
    app.kubernetes.io/version: 1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: vcagent-1.0.2
subjects:
  - kind: ServiceAccount
    name: release-name-vcagent
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-vcagent
  apiGroup: rbac.authorization.k8s.io
