[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-rabbitmq",
      "namespace": "PyA4TceHMHvEfvJ",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.6.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "secrets": [
      {
        "name": "release-name-rabbitmq"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-rabbitmq",
      "namespace": "PyA4TceHMHvEfvJ",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.6.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "rabbitmq-password": "RkZGZWs5ZHdncg==",
      "rabbitmq-erlang-cookie": "cncyS2ZQV1dRRUhZMVhJdzFRS09XWnN5VHJYZHhCTFg="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-rabbitmq-config",
      "namespace": "PyA4TceHMHvEfvJ",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.6.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "rabbitmq.conf": "## Username and password\ndefault_user = user\ndefault_pass = CHANGEME\n## Clustering\ncluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s\ncluster_formation.k8s.host = kubernetes.default.svc.cluster.local\ncluster_formation.node_cleanup.interval = 10\ncluster_formation.node_cleanup.only_log_warning = true\ncluster_partition_handling = autoheal\n# queue master locator\nqueue_master_locator = min-masters\n# enable guest user\nloopback_users.guest = false\n#default_vhost = default-vhost\n#disk_free_limit.absolute = 50MB\n#load_definitions = /app/load_definition.json"
    }
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-rabbitmq-endpoint-reader",
      "namespace": "PyA4TceHMHvEfvJ",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.6.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "endpoints"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create"
        ]
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-rabbitmq-endpoint-reader",
      "namespace": "PyA4TceHMHvEfvJ",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.6.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-rabbitmq"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-rabbitmq-endpoint-reader"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-rabbitmq-headless",
      "namespace": "PyA4TceHMHvEfvJ",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.6.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "clusterIP": "None",
      "ports": [
        {
          "name": "epmd",
          "port": 4369,
          "targetPort": "epmd"
        },
        {
          "name": "amqp",
          "port": 5672,
          "targetPort": "amqp"
        },
        {
          "name": "dist",
          "port": 25672,
          "targetPort": "dist"
        },
        {
          "name": "http-stats",
          "port": 15672,
          "targetPort": "stats"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "rabbitmq",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-rabbitmq",
      "namespace": "PyA4TceHMHvEfvJ",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.6.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "amqp",
          "port": 5672,
          "targetPort": "amqp",
          "nodePort": null
        },
        {
          "name": "epmd",
          "port": 4369,
          "targetPort": "epmd",
          "nodePort": null
        },
        {
          "name": "dist",
          "port": 25672,
          "targetPort": "dist",
          "nodePort": null
        },
        {
          "name": "http-stats",
          "port": 15672,
          "targetPort": "stats",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "rabbitmq",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-rabbitmq",
      "namespace": "PyA4TceHMHvEfvJ",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.6.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "serviceName": "release-name-rabbitmq-headless",
      "podManagementPolicy": "OrderedReady",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "rabbitmq",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "rabbitmq",
            "helm.sh/chart": "rabbitmq-8.6.1",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm"
          },
          "annotations": {
            "checksum/config": "f0ff566e8c0150d8c8a3ff88c12f743b8ff2e13bed041309c41672c1ab3d853b",
            "checksum/secret": "6de08f7562f771eb62417bbaa3e6d83d2272ba1fcee77bea1b413e181c2efb4b"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-rabbitmq",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "rabbitmq",
                        "app.kubernetes.io/instance": "release-name"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001,
            "runAsUser": 1001
          },
          "terminationGracePeriodSeconds": 120,
          "containers": [
            {
              "name": "rabbitmq",
              "image": "docker.io/bitnami/rabbitmq:3.8.9-debian-10-r64",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "MY_POD_IP",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "status.podIP"
                    }
                  }
                },
                {
                  "name": "MY_POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "MY_POD_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "K8S_SERVICE_NAME",
                  "value": "release-name-rabbitmq-headless"
                },
                {
                  "name": "K8S_ADDRESS_TYPE",
                  "value": "hostname"
                },
                {
                  "name": "RABBITMQ_FORCE_BOOT",
                  "value": "no"
                },
                {
                  "name": "RABBITMQ_NODE_NAME",
                  "value": "rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
                },
                {
                  "name": "K8S_HOSTNAME_SUFFIX",
                  "value": ".$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
                },
                {
                  "name": "RABBITMQ_MNESIA_DIR",
                  "value": "/bitnami/rabbitmq/mnesia/$(RABBITMQ_NODE_NAME)"
                },
                {
                  "name": "RABBITMQ_LDAP_ENABLE",
                  "value": "no"
                },
                {
                  "name": "RABBITMQ_LOGS",
                  "value": "-"
                },
                {
                  "name": "RABBITMQ_ULIMIT_NOFILES",
                  "value": "65536"
                },
                {
                  "name": "RABBITMQ_USE_LONGNAME",
                  "value": "true"
                },
                {
                  "name": "RABBITMQ_ERL_COOKIE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-rabbitmq",
                      "key": "rabbitmq-erlang-cookie"
                    }
                  }
                },
                {
                  "name": "RABBITMQ_USERNAME",
                  "value": "user"
                },
                {
                  "name": "RABBITMQ_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-rabbitmq",
                      "key": "rabbitmq-password"
                    }
                  }
                },
                {
                  "name": "RABBITMQ_PLUGINS",
                  "value": "rabbitmq_management, rabbitmq_peer_discovery_k8s, rabbitmq_auth_backend_ldap"
                }
              ],
              "ports": [
                {
                  "name": "amqp",
                  "containerPort": 5672
                },
                {
                  "name": "dist",
                  "containerPort": 25672
                },
                {
                  "name": "stats",
                  "containerPort": 15672
                },
                {
                  "name": "epmd",
                  "containerPort": 4369
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "rabbitmq-diagnostics -q ping"
                  ]
                },
                "initialDelaySeconds": 120,
                "periodSeconds": 30,
                "timeoutSeconds": 20,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms"
                  ]
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30,
                "timeoutSeconds": 20,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/bin/bash",
                      "-ec",
                      "if [[ -f /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh ]]; then\n    /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh -t \"120\" -d  \"false\"\nelse\n    rabbitmqctl stop_app\nfi\n"
                    ]
                  }
                }
              },
              "volumeMounts": [
                {
                  "name": "configuration",
                  "mountPath": "/bitnami/rabbitmq/conf"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/rabbitmq/mnesia"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "configuration",
              "configMap": {
                "name": "release-name-rabbitmq-config",
                "items": [
                  {
                    "key": "rabbitmq.conf",
                    "path": "rabbitmq.conf"
                  }
                ]
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data",
            "labels": {
              "app.kubernetes.io/name": "rabbitmq",
              "app.kubernetes.io/instance": "release-name"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  }
]