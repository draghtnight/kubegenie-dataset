apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-refinery
  labels:
    helm.sh/chart: refinery-1.10.0
    app.kubernetes.io/name: refinery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.14.1
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-refinery-config
  labels:
    helm.sh/chart: refinery-1.10.0
    app.kubernetes.io/name: refinery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.14.1
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    EnvironmentCacheTTL: 1h
    GRPCListenAddr: 0.0.0.0:4317
    HoneycombAPI: https://api.honeycomb.io
    InMemCollector:
      CacheCapacity: 1000
      MaxAlloc: 1717986918
    ListenAddr: 0.0.0.0:8080
    Logger: logrus
    LoggingLevel: info
    MaxBatchSize: 500
    Metrics: prometheus
    PeerBufferSize: 1000
    PeerListenAddr: 0.0.0.0:8081
    PeerManagement:
      IdentifierInterfaceName: eth0
      RedisHost: refinery-redis:6379
      RedisPassword: ""
      Type: redis
      UseIPV6Identifier: false
      UseTLS: false
    PrometheusMetrics:
      MetricsListenAddr: 0.0.0.0:9090
    SendDelay: 2s
    SendTicker: 100ms
    TraceTimeout: 60s
    UpstreamBufferSize: 1000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-refinery-rules
  labels:
    helm.sh/chart: refinery-1.10.0
    app.kubernetes.io/name: refinery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.14.1
    app.kubernetes.io/managed-by: Helm
data:
  rules.yaml: |
    LiveReload: true
    SampleRate: 1
    Sampler: DeterministicSampler
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-refinery-redis
  labels:
    helm.sh/chart: refinery-1.10.0
    app.kubernetes.io/name: refinery-redis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.14.1
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: redis
  selector:
    app.kubernetes.io/name: refinery-redis
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-refinery
  labels:
    helm.sh/chart: refinery-1.10.0
    app.kubernetes.io/name: refinery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.14.1
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: data
      protocol: TCP
      name: data
    - port: 4317
      targetPort: grpc
      protocol: TCP
      name: grpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: refinery
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-refinery-redis
  labels:
    helm.sh/chart: refinery-1.10.0
    app.kubernetes.io/name: refinery-redis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.14.1
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: refinery-redis
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: refinery-redis
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-refinery
      securityContext: {}
      containers:
        - name: redis
          image: redis:6.2.5
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-refinery
  labels:
    helm.sh/chart: refinery-1.10.0
    app.kubernetes.io/name: refinery
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.14.1
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: refinery
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 559374da0cad6906aec0fd37d391b8f87eccd2314d61d76371795fb895c530cd
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: refinery
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-refinery
      securityContext: {}
      containers:
        - name: refinery
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          image: honeycombio/refinery:1.14.1
          imagePullPolicy: IfNotPresent
          command:
            - refinery
            - -c
            - /etc/refinery/config.yaml
            - -r
            - /etc/refinery/rules.yaml
          ports:
            - name: data
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 4317
              protocol: TCP
            - name: peer
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: refinery-config
              mountPath: /etc/refinery/
          livenessProbe:
            httpGet:
              path: /alive
              port: data
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /alive
              port: data
            initialDelaySeconds: 0
            periodSeconds: 3
            failureThreshold: 5
          resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 500Mi
      volumes:
        - name: refinery-config
          projected:
            sources:
              - configMap:
                  name: release-name-refinery-config
                  items:
                    - key: config.yaml
                      path: config.yaml
              - configMap:
                  name: release-name-refinery-rules
                  items:
                    - key: rules.yaml
                      path: rules.yaml
