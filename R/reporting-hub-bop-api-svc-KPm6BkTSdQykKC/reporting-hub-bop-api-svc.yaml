apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-reporting-hub-bop-api-svc
  namespace: KPm6BkTSdQykKC
  labels:
    app.kubernetes.io/name: reporting-hub-bop-api-svc
    helm.sh/chart: reporting-hub-bop-api-svc-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-api-svc
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-api-svc-config
  labels:
    app.kubernetes.io/name: reporting-hub-bop-api-svc
    helm.sh/chart: reporting-hub-bop-api-svc-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-api-svc
data: null
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-reporting-hub-bop-api-svc
  namespace: KPm6BkTSdQykKC
  labels:
    app.kubernetes.io/name: reporting-hub-bop-api-svc
    helm.sh/chart: reporting-hub-bop-api-svc-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-api-svc
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: reporting-hub-bop-api-svc
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: reporting-hub-bop-api-svc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-reporting-hub-bop-api-svc
  namespace: KPm6BkTSdQykKC
  labels:
    app.kubernetes.io/name: reporting-hub-bop-api-svc
    helm.sh/chart: reporting-hub-bop-api-svc-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-api-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reporting-hub-bop-api-svc
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: reporting-hub-bop-api-svc
  template:
    metadata:
      annotations:
        checksum/config: 84c8cc8d509af2c5eecbca3dfff5cc70b2fde10799a64bcdfd4fb09a5d9d873a
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: reporting-hub-bop-api-svc
        helm.sh/chart: reporting-hub-bop-api-svc-1.0.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: reporting-hub-bop-api-svc
        app.kubernetes.io/version: 1.0.0
    spec:
      serviceAccountName: default
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: reporting-hub-bop-api-svc
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: reporting-hub-bop-api-svc
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      initContainers: null
      containers:
        - name: reporting-hub-bop-api-svc
          image: docker.io/mojaloop/reporting-hub-bop-api-svc:v1.0.30
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 11901
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          command:
            - npm
            - start
          ports:
            - name: http
              containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 15
          env:
            - name: CLDB_HOST
              value: centralledger-mysql
            - name: CLDB_PORT
              value: "3306"
            - name: CLDB_NAME
              value: central_ledger
            - name: CLDB_USER
              value: central_ledger
            - name: CLDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: centralledger-mysql
                  key: mysql-password
            - name: CENTRAL_LEDGER_DB_URL
              value: mysql://$(CLDB_USER):$(CLDB_PASSWORD)@$(CLDB_HOST):$(CLDB_PORT)/$(CLDB_NAME)
            - name: EVENT_DB_HOST
              value: reporting-events-db
            - name: EVENT_DB_PORT
              value: "27017"
            - name: EVENT_DB_NAME
              value: default
            - name: EVENT_DB_USER
              value: user
            - name: EVENT_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: reporting-events-db
                  key: mongodb-password
            - name: EVENT_STORE_DB_URL
              value: mongodb://$(EVENT_DB_USER):$(EVENT_DB_PASSWORD)@$(EVENT_DB_HOST):$(EVENT_DB_PORT)/$(EVENT_DB_NAME)
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-reporting-hub-bop-api-svc
  namespace: KPm6BkTSdQykKC
  labels:
    app.kubernetes.io/name: reporting-hub-bop-api-svc
    helm.sh/chart: reporting-hub-bop-api-svc-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-api-svc
spec:
  rules:
    - host: reporting-hub-bop-api-svc.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-reporting-hub-bop-api-svc
                port:
                  name: http
