[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.5.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "namespace": "8Y2gnzD0cz0eyXO"
    },
    "type": "Opaque",
    "data": {
      "postgresql-password": "cGFzc3dvcmQ="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-rasa",
      "labels": {
        "helm.sh/chart": "rasa-1.17.2",
        "app.kubernetes.io/name": "rasa",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.1.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "model-server-token": "dG9rZW4=",
      "rasa-x-token": "cmFzYVhUb2tlbg==",
      "rasa-token": "cmFzYVRva2Vu",
      "jwt-secret": "VU5TRVQ="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-rasa",
      "labels": {
        "helm.sh/chart": "rasa-1.17.2",
        "app.kubernetes.io/name": "rasa",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.1.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "credentials": "",
      "endpoints": "tracker_store:\n  db: ${DB_DATABASE}\n  dialect: postgresql\n  login_db: ${DB_DATABASE}\n  password: ${DB_PASSWORD}\n  port: ${DB_PORT}\n  type: sql\n  url: ${DB_HOST}\n  username: ${DB_USER}\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-rasa-nginx-config",
      "labels": {
        "helm.sh/chart": "rasa-1.17.2",
        "app.kubernetes.io/name": "rasa",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.1.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "rasa.nginx.conf": "upstream rasa-oss {\n  server 127.0.0.1:5005 max_fails=0;\n}\n\nserver {\n  listen            80;\n\n  keepalive_timeout   30;\n  client_max_body_size 800M;\n\n  location / {\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $remote_addr;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header Host $host;\n    proxy_pass http://rasa-oss/;\n  }\n\n  location /socket.io {\n    proxy_http_version 1.1;\n    proxy_buffering off;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $remote_addr;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"Upgrade\";\n    proxy_pass http://rasa-oss/;\n  }\n\n  location /robots.txt {\n    return 200 \"User-agent: *\\nDisallow: /\\n\";\n  }\n\n}\n",
      "nginx.conf": "worker_processes  auto;\nworker_rlimit_nofile 10000;\nerror_log /dev/stdout info;\npid \"/etc/nginx/nginx.pid\";\n\nevents {\n    worker_connections 4096;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log /dev/stdout;\n\n    client_body_temp_path  \"/etc/nginx/client_body\" 1 2;\n    proxy_temp_path        \"/etc/nginx/proxy\" 1 2;\n    fastcgi_temp_path      \"/etc/nginx/fastcgi\" 1 2;\n    scgi_temp_path         \"/etc/nginx/scgi\" 1 2;\n    uwsgi_temp_path        \"/etc/nginx/uwsgi\" 1 2;\n\n    sendfile        on;\n\n    keepalive_timeout  65;\n\n    gzip on;\n    gzip_vary on;\n    gzip_min_length 1400;\n    gzip_proxied expired no-cache no-store private auth;\n    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/x-javascript application/xml;\n\n    include /etc/nginx/conf.d/*.nginx.conf;\n\n    # allow the server to close connection on non responding client, this will free up memory\n    reset_timedout_connection on;\n\n    # request timed out -- default 60\n    client_body_timeout 10;\n\n    # if client stop responding, free up memory -- default 60\n    send_timeout 2;\n\n    # server will close connection after this time -- default 75\n    proxy_read_timeout 3600;\n\n    # number of requests client can make over keep-alive -- for testing environment\n    keepalive_requests 100000;\n\n    # whether the connection with a proxied server should be closed\n    # when a client closes the connection without waiting for a response\n    # default is off\n    proxy_ignore_client_abort on;\n    server_tokens off;\n\n    # Disallow indexing\n    add_header X-Robots-Tag none;\n}\n",
      "ssl.conf": ""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql-headless",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.5.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      },
      "namespace": "8Y2gnzD0cz0eyXO"
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "publishNotReadyAddresses": true,
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.5.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null,
      "namespace": "8Y2gnzD0cz0eyXO"
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name",
        "role": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-rasa",
      "labels": {
        "helm.sh/chart": "rasa-1.17.2",
        "app.kubernetes.io/name": "rasa",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.1.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 5005,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        },
        {
          "port": 80,
          "targetPort": "http-nginx",
          "protocol": "TCP",
          "name": "http-nginx"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "rasa",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-rasa",
      "labels": {
        "helm.sh/chart": "rasa-1.17.2",
        "app.kubernetes.io/name": "rasa",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "3.1.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "strategy": {
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 0
        },
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "rasa",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/secret": "65a260cf4a60b23c14afca6268c980980b5a8b63546e48e8ecd9befb47d62eaf",
            "checksum/config": "d7ff7bf1889e8ad3938480312127b862266d71a9f78c7788cf3db1560dcdd339",
            "checksum/nginx-config": "62020bf669e49577db9448f40a5da449d0f0768ba4b3040d9de854a1e8f70f54"
          },
          "labels": {
            "app.kubernetes.io/name": "rasa",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "securityContext": {},
          "initContainers": [
            {
              "name": "download-initial-model",
              "image": "alpine",
              "command": [
                "/bin/sh",
                "-c"
              ],
              "args": [
                "cd /app/models/ && wget https://github.com/RasaHQ/rasa-x-demo/blob/master/models/model.tar.gz?raw=true -O model.tar.gz"
              ],
              "volumeMounts": [
                {
                  "mountPath": "/app/models",
                  "name": "models"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "nginx",
              "image": "nginx:1.20",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "livenessProbe": {
                "failureThreshold": 6,
                "httpGet": {
                  "path": "/",
                  "port": "http-nginx",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 15,
                "periodSeconds": 15,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "failureThreshold": 6,
                "httpGet": {
                  "path": "/",
                  "port": "http-nginx",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 15,
                "periodSeconds": 15,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "ports": [
                {
                  "name": "http-nginx",
                  "containerPort": 80,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/etc/nginx/nginx.conf",
                  "subPath": "nginx.conf",
                  "name": "release-name-rasa-nginx-config",
                  "readOnly": true
                },
                {
                  "mountPath": "/etc/nginx/conf.d/rasa.nginx.conf",
                  "subPath": "rasa.nginx.conf",
                  "name": "release-name-rasa-nginx-config",
                  "readOnly": true
                }
              ]
            },
            {
              "name": "rasa-oss",
              "args": [
                "run",
                "--enable-api",
                "--port",
                "5005",
                "--cors",
                "*",
                "--jwt-method",
                "HS256",
                "--jwt-secret",
                "$(JWT_SECRET)",
                "--auth-token",
                "$(RASA_TOKEN)"
              ],
              "securityContext": {},
              "image": "docker.io/rasa/rasa:3.1.0",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 5005,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "failureThreshold": 6,
                "httpGet": {
                  "path": "/",
                  "port": "http",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 15,
                "periodSeconds": 15,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "failureThreshold": 6,
                "httpGet": {
                  "path": "/",
                  "port": "http",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 15,
                "periodSeconds": 15,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "resources": {},
              "env": [
                {
                  "name": "DB_USER",
                  "value": "postgres"
                },
                {
                  "name": "DB_HOST",
                  "value": "release-name-postgresql"
                },
                {
                  "name": "DB_PORT",
                  "value": "5432"
                },
                {
                  "name": "DB_DATABASE",
                  "value": "rasa"
                },
                {
                  "name": "DB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "RASA_TELEMETRY_ENABLED",
                  "value": "true"
                },
                {
                  "name": "MPLCONFIGDIR",
                  "value": "/tmp/.matplotlib"
                },
                {
                  "name": "TF_CPP_MIN_LOG_LEVEL",
                  "value": "2"
                },
                {
                  "name": "RASA_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-rasa",
                      "key": "rasa-token"
                    }
                  }
                },
                {
                  "name": "JWT_SECRET",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-rasa",
                      "key": "jwt-secret"
                    }
                  }
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/app/models",
                  "name": "models"
                },
                {
                  "name": "config-dir",
                  "mountPath": "/.config"
                },
                {
                  "mountPath": "/app/endpoints.yml",
                  "subPath": "endpoints.yml",
                  "name": "rasa-configuration",
                  "readOnly": true
                },
                {
                  "mountPath": "/app/credentials.yml",
                  "subPath": "credentials.yml",
                  "name": "rasa-configuration",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "models",
              "emptyDir": {}
            },
            {
              "name": "app-dir",
              "emptyDir": {}
            },
            {
              "name": "config-dir",
              "emptyDir": {}
            },
            {
              "name": "rasa-configuration",
              "configMap": {
                "name": "release-name-rasa",
                "items": [
                  {
                    "key": "endpoints",
                    "path": "endpoints.yml"
                  },
                  {
                    "key": "credentials",
                    "path": "credentials.yml"
                  }
                ]
              }
            },
            {
              "name": "release-name-rasa-nginx-config",
              "configMap": {
                "name": "release-name-rasa-nginx-config",
                "items": [
                  {
                    "key": "nginx.conf",
                    "path": "nginx.conf"
                  },
                  {
                    "key": "rasa.nginx.conf",
                    "path": "rasa.nginx.conf"
                  }
                ]
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-10.5.3",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null,
      "namespace": "8Y2gnzD0cz0eyXO"
    },
    "spec": {
      "serviceName": "release-name-postgresql-headless",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "postgresql",
          "app.kubernetes.io/instance": "release-name",
          "role": "primary"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-postgresql",
          "labels": {
            "app.kubernetes.io/name": "postgresql",
            "helm.sh/chart": "postgresql-10.5.3",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "role": "primary",
            "app.kubernetes.io/component": "primary"
          }
        },
        "spec": {
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "postgresql",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "containers": [
            {
              "name": "release-name-postgresql",
              "image": "docker.io/bitnami/postgresql:11.12.0-debian-10-r44",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "securityContext": {
                "runAsUser": 11542,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432"
                },
                {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql"
                },
                {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgres"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgresql-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "rasa"
                },
                {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_ENABLE_TLS",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_LOG_HOSTNAME",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_CONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_DISCONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PGAUDIT_LOG_CATALOG",
                  "value": "off"
                },
                {
                  "name": "POSTGRESQL_CLIENT_MIN_MESSAGES",
                  "value": "error"
                },
                {
                  "name": "POSTGRESQL_SHARED_PRELOAD_LIBRARIES",
                  "value": "pgaudit"
                }
              ],
              "ports": [
                {
                  "name": "tcp-postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \"postgres\" -d \"dbname=rasa\" -h 127.0.0.1 -p 5432"
                  ]
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "exec pg_isready -U \"postgres\" -d \"dbname=rasa\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"
                  ]
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "volumeMounts": [
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql",
                  "subPath": null
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "dshm",
              "emptyDir": {
                "medium": "Memory"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  }
]