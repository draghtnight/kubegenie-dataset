[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-minio-update-prometheus-secret",
      "labels": {
        "app": "minio-update-prometheus-secret",
        "chart": "minio-8.0.10",
        "release": "release-name",
        "heritage": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-minio",
      "namespace": "zqwTBGaJeG",
      "labels": {
        "app": "minio",
        "chart": "minio-8.0.10",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-minio",
      "labels": {
        "app": "minio",
        "chart": "minio-8.0.10",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "accesskey": "WmdJUGJ2Tm5sRTluN2VqQ1dlOVE=",
      "secretkey": "a1lRUWU3SnRkUXhhbFVoYWtHWk1sQmtDOEtYUFFVcEw5QVZVaU9GYw=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql",
      "namespace": "zqwTBGaJeG",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-11.1.28",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "postgres-password": "cE5WRlIwalkwVQ==",
      "password": "cmVwbWFu"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-repman-database",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "USER": "cmVwbWFu",
      "PASSWORD": "cmVwbWFu"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-repman-mailer",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "DSN": "",
      "SENDER": ""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-repman-oauth",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "GITHUB_CLIENT_ID": "",
      "GITHUB_CLIENT_SECRET": "",
      "GITLAB_CLIENT_ID": "",
      "GITLAB_CLIENT_SECRET": "",
      "BITBUCKET_CLIENT_ID": "",
      "BITBUCKET_CLIENT_SECRET": "",
      "BUDDY_CLIENT_ID": "",
      "BUDDY_CLIENT_SECRET": ""
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-repman-s3",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "BUCKET": "cmVwbWFu",
      "REGION": "dXMtZWFzdC0x",
      "KEY": "WmdJUGJ2Tm5sRTluN2VqQ1dlOVE=",
      "SECRET": "a1lRUWU3SnRkUXhhbFVoYWtHWk1sQmtDOEtYUFFVcEw5QVZVaU9GYw==",
      "PATH_STYLE_ENDPOINT": "dHJ1ZQ==",
      "ENDPOINT": "aHR0cDovL3JlbGVhc2UtbmFtZS1yZXBtYW4tbWluaW8uZGVmYXVsdDo5MDAw"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-minio",
      "labels": {
        "app": "minio",
        "chart": "minio-8.0.10",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "initialize": "#!/bin/sh\nset -e ; # Have script exit in the event of a failed command.\nMC_CONFIG_DIR=\"/etc/minio/mc/\"\nMC=\"/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}\"\n\n# connectToMinio\n# Use a check-sleep-check loop to wait for Minio service to be available\nconnectToMinio() {\n  SCHEME=$1\n  ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts\n  set -e ; # fail if we can't read the keys.\n  ACCESS=$(cat /config/accesskey) ; SECRET=$(cat /config/secretkey) ;\n  set +e ; # The connections to minio are allowed to fail.\n  echo \"Connecting to Minio server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT\" ;\n  MC_COMMAND=\"${MC} config host add myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET\" ;\n  $MC_COMMAND ;\n  STATUS=$? ;\n  until [ $STATUS = 0 ]\n  do\n    ATTEMPTS=`expr $ATTEMPTS + 1` ;\n    echo \\\"Failed attempts: $ATTEMPTS\\\" ;\n    if [ $ATTEMPTS -gt $LIMIT ]; then\n      exit 1 ;\n    fi ;\n    sleep 2 ; # 1 second intervals between attempts\n    $MC_COMMAND ;\n    STATUS=$? ;\n  done ;\n  set -e ; # reset `e` as active\n  return 0\n}\n\n# checkBucketExists ($bucket)\n# Check if the bucket exists, by using the exit code of `mc ls`\ncheckBucketExists() {\n  BUCKET=$1\n  CMD=$(${MC} ls myminio/$BUCKET > /dev/null 2>&1)\n  return $?\n}\n\n# createBucket ($bucket, $policy, $purge)\n# Ensure bucket exists, purging if asked to\ncreateBucket() {\n  BUCKET=$1\n  POLICY=$2\n  PURGE=$3\n  VERSIONING=$4\n\n  # Purge the bucket, if set & exists\n  # Since PURGE is user input, check explicitly for `true`\n  if [ $PURGE = true ]; then\n    if checkBucketExists $BUCKET ; then\n      echo \"Purging bucket '$BUCKET'.\"\n      set +e ; # don't exit if this fails\n      ${MC} rm -r --force myminio/$BUCKET\n      set -e ; # reset `e` as active\n    else\n      echo \"Bucket '$BUCKET' does not exist, skipping purge.\"\n    fi\n  fi\n\n  # Create the bucket if it does not exist\n  if ! checkBucketExists $BUCKET ; then\n    echo \"Creating bucket '$BUCKET'\"\n    ${MC} mb myminio/$BUCKET\n  else\n    echo \"Bucket '$BUCKET' already exists.\"\n  fi\n\n\n  # set versioning for bucket\n  if [ ! -z $VERSIONING ] ; then\n    if [ $VERSIONING = true ] ; then\n        echo \"Enabling versioning for '$BUCKET'\"\n        ${MC} version enable myminio/$BUCKET\n    elif [ $VERSIONING = false ] ; then\n        echo \"Suspending versioning for '$BUCKET'\"\n        ${MC} version suspend myminio/$BUCKET\n    fi\n  else\n      echo \"Bucket '$BUCKET' versioning unchanged.\"\n  fi\n\n  # At this point, the bucket should exist, skip checking for existence\n  # Set policy on the bucket\n  echo \"Setting policy of bucket '$BUCKET' to '$POLICY'.\"\n  ${MC} policy set $POLICY myminio/$BUCKET\n}\n\n# Try connecting to Minio instance\nscheme=http\nconnectToMinio $scheme\n# Create the bucket\ncreateBucket repman none false"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-repman-files",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "nginx_conf": "user nginx;\nworker_processes auto;\n\nerror_log /var/log/nginx/error.log warn;\npid /var/run/nginx.pid;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    server_tokens off;\n    fastcgi_read_timeout 300;\n    client_max_body_size 200M;\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                    '$status $body_bytes_sent \"$http_referer\" '\n                    '\"$http_user_agent\" \"$http_x_forwarded_for\" '\n                    '$upstream_response_time';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    server {\n        listen       80;\n        listen       [::]:80;\n        server_name _;\n        root /app/public;\n\n        add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\";\n        add_header X-Frame-Options DENY;\n        add_header X-Content-Type-Options nosniff;\n        add_header X-XSS-Protection \"1; mode=block\";\n\n        location / {\n            try_files $uri /index.php$is_args$args;\n        }\n\n        location ~ ^/index\\.php(/|$) {\n            fastcgi_split_path_info ^(.+\\.php)(/.*)$;\n            fastcgi_pass localhost:9000;\n            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n            fastcgi_param DOCUMENT_ROOT $realpath_root;\n            include fastcgi_params;\n            internal;\n        }\n    }\n}",
      "services_prod_yaml": "parameters:\n  aws_s3_region: '%env(STORAGE_AWS_REGION)%'\n  aws_s3_default_endpoint: 'https://s3.%aws_s3_region%.amazonaws.com'\nservices:\n  Aws\\S3\\S3Client:\n    lazy: true\n    arguments:\n    - version: 'latest'\n      region: '%aws_s3_region%'\n      endpoint: '%env(default:aws_s3_default_endpoint:STORAGE_AWS_ENDPOINT)%'\n      use_path_style_endpoint: '%env(bool:STORAGE_AWS_PATH_STYLE_ENDPOINT)%'\n      credentials:\n        key: '%env(STORAGE_AWS_KEY)%'\n        secret: '%env(STORAGE_AWS_SECRET)%'\n  Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\PdoSessionHandler:\n    arguments:\n      - 'postgresql://%env(DATABASE_USER)%:%env(DATABASE_PASSWORD)%@%env(DATABASE_HOSTNAME)%:5432/%env(DATABASE_DATABASE)%?serverVersion=14&charset=utf8'\ndoctrine:\n  dbal:\n    url: 'postgresql://%env(DATABASE_USER)%:%env(DATABASE_PASSWORD)%@%env(DATABASE_HOSTNAME)%:5432/%env(DATABASE_DATABASE)%?serverVersion=14&charset=utf8'\nframework:\n  session:\n    handler_id: Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\PdoSessionHandler",
      "Version20210115094614_php": "<?php\n\ndeclare(strict_types=1);\n\nnamespace Buddy\\Repman\\Migrations;\n\nuse Doctrine\\DBAL\\Schema\\Schema;\nuse Doctrine\\Migrations\\AbstractMigration;\n\n/**\n* Auto-generated Migration: Please modify to your needs!\n*/\nfinal class Version20210115094614 extends AbstractMigration\n{\n    public function getDescription() : string\n    {\n        return 'add sessions to database';\n    }\n\n    public function up(Schema $schema) : void\n    {\n        $this->addSql('CREATE TABLE sessions (sess_id VARCHAR(128) NOT NULL PRIMARY KEY,sess_data BYTEA NOT NULL,sess_lifetime INTEGER NOT NULL, sess_time INTEGER NOT NULL);');\n\n    }\n\n    public function down(Schema $schema) : void\n    {\n        // this down() migration is auto-generated, please modify it to your needs\n\n    }\n}"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-repman-general",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "APP_HOST": "example.com",
      "APP_URL_SCHEME": "http",
      "APP_ALLOWED_PACKAGE_TYPES": "git,github,gitlab,bitbucket,subversion,mercurial,pear,artifact,path",
      "APP_GITLAB_API_URL": "https://gitlab.com",
      "APP_ENV": "prod",
      "APP_DEBUG": "0",
      "APP_SECRET": "PleaseChangeMe",
      "MESSENGER_TRANSPORT_DSN": "doctrine://default",
      "EWZ_RECAPTCHA_ENABLED": "false",
      "EWZ_RECAPTCHA_SITE_KEY": "none",
      "EWZ_RECAPTCHA_SECRET": "none",
      "PROXY_DIST_DIR": "var/proxy",
      "PACKAGES_DIST_DIR": "var/repo",
      "SECURITY_ADVISORIES_DB_DIR": "var/security-advisories",
      "STORAGE_SOURCE": "storage.s3",
      "STORAGE_AWS_OPAQUE_AUTH": "true",
      "TRUSTED_PROXIES": "127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "name": "release-name-minio",
      "labels": {
        "app": "minio",
        "chart": "minio-8.0.10",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "50Gi"
        }
      }
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-minio-update-prometheus-secret",
      "labels": {
        "app": "minio-update-prometheus-secret",
        "chart": "minio-8.0.10",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "get",
          "create",
          "update",
          "patch"
        ],
        "resourceNames": [
          "release-name-minio-prometheus"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "secrets"
        ],
        "verbs": [
          "create"
        ]
      },
      {
        "apiGroups": [
          "monitoring.coreos.com"
        ],
        "resources": [
          "servicemonitors"
        ],
        "verbs": [
          "get"
        ],
        "resourceNames": [
          "release-name-minio"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-minio-update-prometheus-secret",
      "labels": {
        "app": "minio-update-prometheus-secret",
        "chart": "minio-8.0.10",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-minio-update-prometheus-secret"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-minio-update-prometheus-secret",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-minio",
      "labels": {
        "app": "minio",
        "chart": "minio-8.0.10",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "http",
          "port": 9000,
          "protocol": "TCP",
          "targetPort": 9000
        }
      ],
      "selector": {
        "app": "minio",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql-hl",
      "namespace": "zqwTBGaJeG",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-11.1.28",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "publishNotReadyAddresses": true,
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "namespace": "zqwTBGaJeG",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-11.1.28",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-repman",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "role": "www",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "role": "www"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-minio",
      "labels": {
        "app": "minio",
        "chart": "minio-8.0.10",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": "100%",
          "maxUnavailable": 0
        }
      },
      "selector": {
        "matchLabels": {
          "app": "minio",
          "release": "release-name"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-minio",
          "labels": {
            "app": "minio",
            "release": "release-name"
          },
          "annotations": {
            "checksum/secrets": "afba9c7eadc8b121675246436e45bc48c06d38bcbeb99728998e8a809a96569f",
            "checksum/config": "4bbaf8caebc0340dca0445c307c4690a00e0f3349687b75aaa953c0744762aff"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-minio",
          "securityContext": {
            "runAsUser": 1000,
            "runAsGroup": 1000,
            "fsGroup": 1000
          },
          "containers": [
            {
              "name": "minio",
              "image": "minio/minio:RELEASE.2021-02-14T04-01-33Z",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/sh",
                "-ce",
                "/usr/bin/docker-entrypoint.sh minio -S /etc/minio/certs/ server /export"
              ],
              "volumeMounts": [
                {
                  "name": "export",
                  "mountPath": "/export"
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 9000
                }
              ],
              "env": [
                {
                  "name": "MINIO_ACCESS_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-minio",
                      "key": "accesskey"
                    }
                  }
                },
                {
                  "name": "MINIO_SECRET_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-minio",
                      "key": "secretkey"
                    }
                  }
                }
              ],
              "resources": {
                "requests": {
                  "memory": "4Gi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "export",
              "persistentVolumeClaim": {
                "claimName": "release-name-minio"
              }
            },
            {
              "name": "minio-user",
              "secret": {
                "secretName": "release-name-minio"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-repman-consumer",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "role": "consumer",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "repman",
          "app.kubernetes.io/instance": "release-name",
          "role": "consumer"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config_files": "62313797c1a4e8f97b7918850823b7cefe836ce6196198681da8608cfb2bdb5c",
            "checksum/config_general": "8a4a263a2aa1d44e83dd6a8f22276ac7a05a60c336b234d82bcd0c3312263b57"
          },
          "labels": {
            "app.kubernetes.io/name": "repman",
            "app.kubernetes.io/instance": "release-name",
            "role": "consumer"
          }
        },
        "spec": {
          "securityContext": {},
          "containers": [
            {
              "name": "repman-consumer",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "buddy/repman:1.4.0",
              "command": [
                "bin/console",
                "messenger:consume",
                "async",
                "--limit=500",
                "-vv"
              ],
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "DATABASE_HOSTNAME",
                  "value": "release-name-repman-postgresql"
                },
                {
                  "name": "DATABASE_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "USER",
                      "name": "release-name-repman-database"
                    }
                  }
                },
                {
                  "name": "DATABASE_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "PASSWORD",
                      "name": "release-name-repman-database"
                    }
                  }
                },
                {
                  "name": "DATABASE_DATABASE",
                  "value": "repman"
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "release-name-repman-general"
                  }
                },
                {
                  "prefix": "MAILER_",
                  "secretRef": {
                    "name": "release-name-repman-mailer"
                  }
                },
                {
                  "prefix": "OAUTH_",
                  "secretRef": {
                    "name": "release-name-repman-oauth"
                  }
                },
                {
                  "prefix": "STORAGE_AWS_",
                  "secretRef": {
                    "name": "release-name-repman-s3"
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "files",
                  "mountPath": "/app/config/services_prod.yaml",
                  "subPath": "services_prod_yaml",
                  "readOnly": true
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "files",
              "configMap": {
                "name": "release-name-repman-files"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-postgresql",
      "namespace": "zqwTBGaJeG",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-11.1.28",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null
    },
    "spec": {
      "replicas": 1,
      "serviceName": "release-name-postgresql-hl",
      "updateStrategy": {
        "rollingUpdate": {},
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "postgresql",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "primary"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-postgresql",
          "labels": {
            "app.kubernetes.io/name": "postgresql",
            "helm.sh/chart": "postgresql-11.1.28",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "primary"
          },
          "annotations": null
        },
        "spec": {
          "serviceAccountName": "default",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "postgresql",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "hostNetwork": false,
          "hostIPC": false,
          "initContainers": null,
          "containers": [
            {
              "name": "postgresql",
              "image": "docker.io/bitnami/postgresql:11.15.0-debian-10-r93",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 11082,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432"
                },
                {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql"
                },
                {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "repman"
                },
                {
                  "name": "POSTGRES_POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgres-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "repman"
                },
                {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_ENABLE_TLS",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_LOG_HOSTNAME",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_CONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_DISCONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PGAUDIT_LOG_CATALOG",
                  "value": "off"
                },
                {
                  "name": "POSTGRESQL_CLIENT_MIN_MESSAGES",
                  "value": "error"
                },
                {
                  "name": "POSTGRESQL_SHARED_PRELOAD_LIBRARIES",
                  "value": "pgaudit"
                }
              ],
              "ports": [
                {
                  "name": "tcp-postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \"repman\" -d \"dbname=repman\" -h 127.0.0.1 -p 5432"
                  ]
                }
              },
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "exec pg_isready -U \"repman\" -d \"dbname=repman\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "dshm",
              "emptyDir": {
                "medium": "Memory"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "CronJob",
    "metadata": {
      "name": "release-name-repman-proxy-sync-releases",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "concurrencyPolicy": "Forbid",
      "failedJobsHistoryLimit": 1,
      "successfulJobsHistoryLimit": 1,
      "schedule": "*/5 * * * *",
      "jobTemplate": {
        "metadata": {
          "name": "release-name-repman-proxy-sync-releases",
          "labels": {
            "helm.sh/chart": "repman-2.0.0",
            "app.kubernetes.io/name": "repman",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "1.4.0",
            "app.kubernetes.io/managed-by": "Helm"
          }
        },
        "spec": {
          "parallelism": 1,
          "template": {
            "metadata": {
              "name": "release-name-repman-proxy-sync-releases",
              "labels": {
                "helm.sh/chart": "repman-2.0.0",
                "app.kubernetes.io/name": "repman",
                "app.kubernetes.io/instance": "release-name",
                "app.kubernetes.io/version": "1.4.0",
                "app.kubernetes.io/managed-by": "Helm"
              }
            },
            "spec": {
              "restartPolicy": "OnFailure",
              "securityContext": {},
              "containers": [
                {
                  "name": "repman",
                  "securityContext": {},
                  "image": "buddy/repman:1.4.0",
                  "imagePullPolicy": "IfNotPresent",
                  "command": [
                    "/app/bin/console",
                    "repman:proxy:sync-releases"
                  ],
                  "volumeMounts": [
                    {
                      "name": "files",
                      "mountPath": "/app/config/services_prod.yaml",
                      "subPath": "services_prod_yaml",
                      "readOnly": true
                    }
                  ],
                  "env": [
                    {
                      "name": "DATABASE_HOSTNAME",
                      "value": "release-name-repman-postgresql"
                    },
                    {
                      "name": "DATABASE_USER",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "USER",
                          "name": "release-name-repman-database"
                        }
                      }
                    },
                    {
                      "name": "DATABASE_PASSWORD",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "PASSWORD",
                          "name": "release-name-repman-database"
                        }
                      }
                    },
                    {
                      "name": "DATABASE_DATABASE",
                      "value": "repman"
                    }
                  ],
                  "envFrom": [
                    {
                      "configMapRef": {
                        "name": "release-name-repman-general"
                      }
                    },
                    {
                      "prefix": "MAILER_",
                      "secretRef": {
                        "name": "release-name-repman-mailer"
                      }
                    },
                    {
                      "prefix": "OAUTH_",
                      "secretRef": {
                        "name": "release-name-repman-oauth"
                      }
                    },
                    {
                      "prefix": "STORAGE_AWS_",
                      "secretRef": {
                        "name": "release-name-repman-s3"
                      }
                    }
                  ],
                  "resources": {}
                }
              ],
              "volumes": [
                {
                  "name": "files",
                  "configMap": {
                    "name": "release-name-repman-files"
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "CronJob",
    "metadata": {
      "name": "release-name-repman-proxy-sync-metadata",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "concurrencyPolicy": "Forbid",
      "failedJobsHistoryLimit": 1,
      "successfulJobsHistoryLimit": 1,
      "schedule": "*/6 * * * *",
      "jobTemplate": {
        "metadata": {
          "name": "release-name-repman-proxy-sync-metadata",
          "labels": {
            "helm.sh/chart": "repman-2.0.0",
            "app.kubernetes.io/name": "repman",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "1.4.0",
            "app.kubernetes.io/managed-by": "Helm"
          }
        },
        "spec": {
          "parallelism": 1,
          "template": {
            "metadata": {
              "name": "release-name-repman-proxy-sync-metadata",
              "labels": {
                "helm.sh/chart": "repman-2.0.0",
                "app.kubernetes.io/name": "repman",
                "app.kubernetes.io/instance": "release-name",
                "app.kubernetes.io/version": "1.4.0",
                "app.kubernetes.io/managed-by": "Helm"
              }
            },
            "spec": {
              "restartPolicy": "OnFailure",
              "securityContext": {},
              "containers": [
                {
                  "name": "repman",
                  "securityContext": {},
                  "image": "buddy/repman:1.4.0",
                  "imagePullPolicy": "IfNotPresent",
                  "command": [
                    "/app/bin/console",
                    "repman:proxy:sync-metadata"
                  ],
                  "volumeMounts": [
                    {
                      "name": "files",
                      "mountPath": "/app/config/services_prod.yaml",
                      "subPath": "services_prod_yaml",
                      "readOnly": true
                    }
                  ],
                  "env": [
                    {
                      "name": "DATABASE_HOSTNAME",
                      "value": "release-name-repman-postgresql"
                    },
                    {
                      "name": "DATABASE_USER",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "USER",
                          "name": "release-name-repman-database"
                        }
                      }
                    },
                    {
                      "name": "DATABASE_PASSWORD",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "PASSWORD",
                          "name": "release-name-repman-database"
                        }
                      }
                    },
                    {
                      "name": "DATABASE_DATABASE",
                      "value": "repman"
                    }
                  ],
                  "envFrom": [
                    {
                      "configMapRef": {
                        "name": "release-name-repman-general"
                      }
                    },
                    {
                      "prefix": "MAILER_",
                      "secretRef": {
                        "name": "release-name-repman-mailer"
                      }
                    },
                    {
                      "prefix": "OAUTH_",
                      "secretRef": {
                        "name": "release-name-repman-oauth"
                      }
                    },
                    {
                      "prefix": "STORAGE_AWS_",
                      "secretRef": {
                        "name": "release-name-repman-s3"
                      }
                    }
                  ],
                  "resources": {}
                }
              ],
              "volumes": [
                {
                  "name": "files",
                  "configMap": {
                    "name": "release-name-repman-files"
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "CronJob",
    "metadata": {
      "name": "release-name-repman-security-update-db",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "concurrencyPolicy": "Forbid",
      "failedJobsHistoryLimit": 1,
      "successfulJobsHistoryLimit": 1,
      "schedule": "0 */2 * * *",
      "jobTemplate": {
        "metadata": {
          "name": "release-name-repman-security-update-db",
          "labels": {
            "helm.sh/chart": "repman-2.0.0",
            "app.kubernetes.io/name": "repman",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "1.4.0",
            "app.kubernetes.io/managed-by": "Helm"
          }
        },
        "spec": {
          "parallelism": 1,
          "template": {
            "metadata": {
              "name": "release-name-repman-security-update-db",
              "labels": {
                "helm.sh/chart": "repman-2.0.0",
                "app.kubernetes.io/name": "repman",
                "app.kubernetes.io/instance": "release-name",
                "app.kubernetes.io/version": "1.4.0",
                "app.kubernetes.io/managed-by": "Helm"
              }
            },
            "spec": {
              "restartPolicy": "OnFailure",
              "securityContext": {},
              "containers": [
                {
                  "name": "repman",
                  "securityContext": {},
                  "image": "buddy/repman:1.4.0",
                  "imagePullPolicy": "IfNotPresent",
                  "command": [
                    "/app/bin/console",
                    "repman:security:update-db"
                  ],
                  "volumeMounts": [
                    {
                      "name": "files",
                      "mountPath": "/app/config/services_prod.yaml",
                      "subPath": "services_prod_yaml",
                      "readOnly": true
                    }
                  ],
                  "env": [
                    {
                      "name": "DATABASE_HOSTNAME",
                      "value": "release-name-repman-postgresql"
                    },
                    {
                      "name": "DATABASE_USER",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "USER",
                          "name": "release-name-repman-database"
                        }
                      }
                    },
                    {
                      "name": "DATABASE_PASSWORD",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "PASSWORD",
                          "name": "release-name-repman-database"
                        }
                      }
                    },
                    {
                      "name": "DATABASE_DATABASE",
                      "value": "repman"
                    }
                  ],
                  "envFrom": [
                    {
                      "configMapRef": {
                        "name": "release-name-repman-general"
                      }
                    },
                    {
                      "prefix": "MAILER_",
                      "secretRef": {
                        "name": "release-name-repman-mailer"
                      }
                    },
                    {
                      "prefix": "OAUTH_",
                      "secretRef": {
                        "name": "release-name-repman-oauth"
                      }
                    },
                    {
                      "prefix": "STORAGE_AWS_",
                      "secretRef": {
                        "name": "release-name-repman-s3"
                      }
                    }
                  ],
                  "resources": {}
                }
              ],
              "volumes": [
                {
                  "name": "files",
                  "configMap": {
                    "name": "release-name-repman-files"
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "CronJob",
    "metadata": {
      "name": "release-name-repman-telemetry-send",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "concurrencyPolicy": "Forbid",
      "failedJobsHistoryLimit": 1,
      "successfulJobsHistoryLimit": 1,
      "schedule": "0 0 * * *",
      "jobTemplate": {
        "metadata": {
          "name": "release-name-repman-telemetry-send",
          "labels": {
            "helm.sh/chart": "repman-2.0.0",
            "app.kubernetes.io/name": "repman",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "1.4.0",
            "app.kubernetes.io/managed-by": "Helm"
          }
        },
        "spec": {
          "parallelism": 1,
          "template": {
            "metadata": {
              "name": "release-name-repman-telemetry-send",
              "labels": {
                "helm.sh/chart": "repman-2.0.0",
                "app.kubernetes.io/name": "repman",
                "app.kubernetes.io/instance": "release-name",
                "app.kubernetes.io/version": "1.4.0",
                "app.kubernetes.io/managed-by": "Helm"
              }
            },
            "spec": {
              "restartPolicy": "OnFailure",
              "securityContext": {},
              "containers": [
                {
                  "name": "repman",
                  "securityContext": {},
                  "image": "buddy/repman:1.4.0",
                  "imagePullPolicy": "IfNotPresent",
                  "command": [
                    "/app/bin/console",
                    "repman:telemetry:send"
                  ],
                  "volumeMounts": [
                    {
                      "name": "files",
                      "mountPath": "/app/config/services_prod.yaml",
                      "subPath": "services_prod_yaml",
                      "readOnly": true
                    }
                  ],
                  "env": [
                    {
                      "name": "DATABASE_HOSTNAME",
                      "value": "release-name-repman-postgresql"
                    },
                    {
                      "name": "DATABASE_USER",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "USER",
                          "name": "release-name-repman-database"
                        }
                      }
                    },
                    {
                      "name": "DATABASE_PASSWORD",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "PASSWORD",
                          "name": "release-name-repman-database"
                        }
                      }
                    },
                    {
                      "name": "DATABASE_DATABASE",
                      "value": "repman"
                    }
                  ],
                  "envFrom": [
                    {
                      "configMapRef": {
                        "name": "release-name-repman-general"
                      }
                    },
                    {
                      "prefix": "MAILER_",
                      "secretRef": {
                        "name": "release-name-repman-mailer"
                      }
                    },
                    {
                      "prefix": "OAUTH_",
                      "secretRef": {
                        "name": "release-name-repman-oauth"
                      }
                    },
                    {
                      "prefix": "STORAGE_AWS_",
                      "secretRef": {
                        "name": "release-name-repman-s3"
                      }
                    }
                  ],
                  "resources": {}
                }
              ],
              "volumes": [
                {
                  "name": "files",
                  "configMap": {
                    "name": "release-name-repman-files"
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "CronJob",
    "metadata": {
      "name": "release-name-repman-package-clear-old-dists",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "concurrencyPolicy": "Forbid",
      "failedJobsHistoryLimit": 1,
      "successfulJobsHistoryLimit": 1,
      "schedule": "0 1 * * *",
      "jobTemplate": {
        "metadata": {
          "name": "release-name-repman-package-clear-old-dists",
          "labels": {
            "helm.sh/chart": "repman-2.0.0",
            "app.kubernetes.io/name": "repman",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/version": "1.4.0",
            "app.kubernetes.io/managed-by": "Helm"
          }
        },
        "spec": {
          "parallelism": 1,
          "template": {
            "metadata": {
              "name": "release-name-repman-package-clear-old-dists",
              "labels": {
                "helm.sh/chart": "repman-2.0.0",
                "app.kubernetes.io/name": "repman",
                "app.kubernetes.io/instance": "release-name",
                "app.kubernetes.io/version": "1.4.0",
                "app.kubernetes.io/managed-by": "Helm"
              }
            },
            "spec": {
              "restartPolicy": "OnFailure",
              "securityContext": {},
              "containers": [
                {
                  "name": "repman",
                  "securityContext": {},
                  "image": "buddy/repman:1.4.0",
                  "imagePullPolicy": "IfNotPresent",
                  "command": [
                    "/app/bin/console",
                    "repman:package:clear-old-dists"
                  ],
                  "volumeMounts": [
                    {
                      "name": "files",
                      "mountPath": "/app/config/services_prod.yaml",
                      "subPath": "services_prod_yaml",
                      "readOnly": true
                    }
                  ],
                  "env": [
                    {
                      "name": "DATABASE_HOSTNAME",
                      "value": "release-name-repman-postgresql"
                    },
                    {
                      "name": "DATABASE_USER",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "USER",
                          "name": "release-name-repman-database"
                        }
                      }
                    },
                    {
                      "name": "DATABASE_PASSWORD",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "PASSWORD",
                          "name": "release-name-repman-database"
                        }
                      }
                    },
                    {
                      "name": "DATABASE_DATABASE",
                      "value": "repman"
                    }
                  ],
                  "envFrom": [
                    {
                      "configMapRef": {
                        "name": "release-name-repman-general"
                      }
                    },
                    {
                      "prefix": "MAILER_",
                      "secretRef": {
                        "name": "release-name-repman-mailer"
                      }
                    },
                    {
                      "prefix": "OAUTH_",
                      "secretRef": {
                        "name": "release-name-repman-oauth"
                      }
                    },
                    {
                      "prefix": "STORAGE_AWS_",
                      "secretRef": {
                        "name": "release-name-repman-s3"
                      }
                    }
                  ],
                  "resources": {}
                }
              ],
              "volumes": [
                {
                  "name": "files",
                  "configMap": {
                    "name": "release-name-repman-files"
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-repman-test-connection",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-repman:80"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-repman",
      "labels": {
        "helm.sh/chart": "repman-2.0.0",
        "app.kubernetes.io/name": "repman",
        "app.kubernetes.io/instance": "release-name",
        "role": "www",
        "app.kubernetes.io/version": "1.4.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "repman",
          "app.kubernetes.io/instance": "release-name",
          "role": "www"
        }
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/config_files": "62313797c1a4e8f97b7918850823b7cefe836ce6196198681da8608cfb2bdb5c",
            "checksum/config_general": "8a4a263a2aa1d44e83dd6a8f22276ac7a05a60c336b234d82bcd0c3312263b57"
          },
          "labels": {
            "app.kubernetes.io/name": "repman",
            "app.kubernetes.io/instance": "release-name",
            "role": "www"
          }
        },
        "spec": {
          "securityContext": {},
          "initContainers": [
            {
              "name": "repman-copy-public",
              "securityContext": {},
              "image": "buddy/repman:1.4.0",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c",
                "cp -Rf /app/public /mnt"
              ],
              "volumeMounts": [
                {
                  "name": "public",
                  "mountPath": "/mnt/public"
                }
              ],
              "resources": {}
            },
            {
              "name": "repman-setup",
              "securityContext": {},
              "image": "buddy/repman:1.4.0",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "sh",
                "-c",
                "bin/console d:m:m --no-interaction &&\nbin/console messenger:setup-transports --no-interaction &&\nbin/console assets:install\n"
              ],
              "env": [
                {
                  "name": "DATABASE_HOSTNAME",
                  "value": "release-name-repman-postgresql"
                },
                {
                  "name": "DATABASE_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "USER",
                      "name": "release-name-repman-database"
                    }
                  }
                },
                {
                  "name": "DATABASE_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "PASSWORD",
                      "name": "release-name-repman-database"
                    }
                  }
                },
                {
                  "name": "DATABASE_DATABASE",
                  "value": "repman"
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "release-name-repman-general"
                  }
                },
                {
                  "prefix": "MAILER_",
                  "secretRef": {
                    "name": "release-name-repman-mailer"
                  }
                },
                {
                  "prefix": "OAUTH_",
                  "secretRef": {
                    "name": "release-name-repman-oauth"
                  }
                },
                {
                  "prefix": "STORAGE_AWS_",
                  "secretRef": {
                    "name": "release-name-repman-s3"
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "files",
                  "mountPath": "/app/config/services_prod.yaml",
                  "subPath": "services_prod_yaml",
                  "readOnly": true
                },
                {
                  "name": "files",
                  "mountPath": "/app/src/Migrations/Version20210115094614.php",
                  "subPath": "Version20210115094614_php",
                  "readOnly": true
                },
                {
                  "name": "public",
                  "mountPath": "/app/public"
                }
              ],
              "resources": {}
            }
          ],
          "containers": [
            {
              "name": "repman-repman",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "buddy/repman:1.4.0",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "DATABASE_HOSTNAME",
                  "value": "release-name-repman-postgresql"
                },
                {
                  "name": "DATABASE_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "USER",
                      "name": "release-name-repman-database"
                    }
                  }
                },
                {
                  "name": "DATABASE_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "PASSWORD",
                      "name": "release-name-repman-database"
                    }
                  }
                },
                {
                  "name": "DATABASE_DATABASE",
                  "value": "repman"
                }
              ],
              "envFrom": [
                {
                  "configMapRef": {
                    "name": "release-name-repman-general"
                  }
                },
                {
                  "prefix": "MAILER_",
                  "secretRef": {
                    "name": "release-name-repman-mailer"
                  }
                },
                {
                  "prefix": "OAUTH_",
                  "secretRef": {
                    "name": "release-name-repman-oauth"
                  }
                },
                {
                  "prefix": "STORAGE_AWS_",
                  "secretRef": {
                    "name": "release-name-repman-s3"
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "files",
                  "mountPath": "/app/config/services_prod.yaml",
                  "subPath": "services_prod_yaml",
                  "readOnly": true
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            },
            {
              "name": "repman-nginx",
              "securityContext": {},
              "image": "nginx:1.21.6-alpine",
              "imagePullPolicy": "IfNotPresent",
              "volumeMounts": [
                {
                  "name": "files",
                  "mountPath": "/etc/nginx/nginx.conf",
                  "subPath": "nginx_conf",
                  "readOnly": true
                },
                {
                  "name": "public",
                  "mountPath": "/app/public",
                  "readOnly": true
                }
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "timeoutSeconds": 10,
                "httpGet": {
                  "path": "/login",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/login",
                  "port": "http"
                }
              },
              "resources": {}
            }
          ],
          "volumes": [
            {
              "name": "files",
              "configMap": {
                "name": "release-name-repman-files"
              }
            },
            {
              "name": "public",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "release-name-minio-make-bucket-job",
      "labels": {
        "app": "minio-make-bucket-job",
        "chart": "minio-8.0.10",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
      }
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "app": "minio-job",
            "release": "release-name"
          }
        },
        "spec": {
          "restartPolicy": "OnFailure",
          "volumes": [
            {
              "name": "minio-configuration",
              "projected": {
                "sources": [
                  {
                    "configMap": {
                      "name": "release-name-minio"
                    }
                  },
                  {
                    "secret": {
                      "name": "release-name-minio"
                    }
                  }
                ]
              }
            }
          ],
          "serviceAccountName": "release-name-minio",
          "containers": [
            {
              "name": "minio-mc",
              "image": "minio/mc:RELEASE.2021-02-14T04-28-06Z",
              "imagePullPolicy": "IfNotPresent",
              "command": [
                "/bin/sh",
                "/config/initialize"
              ],
              "env": [
                {
                  "name": "MINIO_ENDPOINT",
                  "value": "release-name-minio"
                },
                {
                  "name": "MINIO_PORT",
                  "value": "9000"
                }
              ],
              "volumeMounts": [
                {
                  "name": "minio-configuration",
                  "mountPath": "/config"
                }
              ],
              "resources": {
                "requests": {
                  "memory": "128Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              }
            }
          ]
        }
      }
    }
  }
]