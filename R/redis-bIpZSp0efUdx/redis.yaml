apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-redis
  labels:
    app: release-name-redis
    chart: redis-0.3.5
    release: release-name
    heritage: Helm
data:
  default.conf: |-
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    pidfile ""
    loglevel notice
    logfile ""
    databases 16
    always-show-logo yes
    save ""
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data/redis
    maxclients 10000
    # maxmemory
    maxmemory-policy noeviction
    maxmemory-samples 5
    appendonly yes
    appendfilename appendonly.aof
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes
    lua-time-limit 5000
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    notify-keyspace-events ""
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    list-max-ziplist-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
    hll-sparse-max-bytes 3000
    stream-node-max-bytes 4096
    stream-node-max-entries 100
    activerehashing yes
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    client-query-buffer-limit 1gb
    proto-max-bulk-len 512mb
    hz 10
    dynamic-hz yes
    aof-rewrite-incremental-fsync yes
    rdb-save-incremental-fsync yes
    # lfu-log-factor 10
    # lfu-decay-time 1
  user.conf: |-
    # redis.conf
    appendonly yes
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-redis
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-0.3.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 6.0.9
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: redis
      protocol: TCP
      name: redis
  clusterIP: None
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-redis
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-0.3.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 6.0.9
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: release-name
  serviceName: release-name-redis
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: redis
          app.kubernetes.io/instance: release-name
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/instance: release-name
    spec:
      volumes:
        - name: configs
          configMap:
            name: release-name-redis
      containers:
        - name: redis
          volumeMounts:
            - name: configs
              mountPath: /tmp/conf
            - name: data
              mountPath: /data/redis
          image: redis:6.0.9-alpine
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - |
              rm -rf /redis/data/lost+found
              args="
              --include /tmp/conf/default.conf
              --include /tmp/conf/user.conf

              "
              redis-server $args
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          resources:
            seccompProfile:
              type: RuntimeDefault
