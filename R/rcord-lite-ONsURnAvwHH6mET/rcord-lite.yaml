apiVersion: v1
kind: ConfigMap
metadata:
  name: fabric
data:
  serviceConfig: |
    name: fabric
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.fabric
      loggers:
        '':
          handlers:
              - console
              - file
              - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: onos-service
data:
  serviceConfig: |
    name: onos
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.onos-service
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rcord
data:
  serviceConfig: |
    name: rcord
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.rcord
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: volt
data:
  serviceConfig: |
    name: volt
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: "xos-core:50051"
    event_bus:
      endpoint: "cord-kafka"
      kind: kafka
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.volt
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vrouter
data:
  serviceConfig: |
    name: vrouter
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: xos-core:50051
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.vrouter
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vsg-hw
data:
  serviceConfig: |
    name: vsg-hw
    accessor:
      username: "admin@opencord.org"
      password: "letmein"
      endpoint: xos-core:50051
    logging:
      version: 1
      handlers:
        console:
          class: logging.StreamHandler
        file:
          class: logging.handlers.RotatingFileHandler
          filename: /var/log/xos.log
          maxBytes: 10485760
          backupCount: 5
        kafka:
          class: kafkaloghandler.KafkaLogHandler
          bootstrap_servers:
            - "cord-kafka:9092"
          topic: xos.log.vsg-hw
      loggers:
        '':
          handlers:
            - console
            - file
            - kafka
          level: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rcord-lite-tosca
data:
  020-rcord-subscriber-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    imports:
      - custom_types/rcordservice.yaml
    description: R-CORD service TOSCA
    topology_template:
      node_templates:
        service#rcord:
          type: tosca.nodes.RCORDService
          properties:
            name: rcord
            kind: data
  030-volt-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Set up VOLT service
    imports:
      - custom_types/voltservice.yaml

    topology_template:
      node_templates:
        service#volt:
          type: tosca.nodes.VOLTService
          properties:
            name: volt
            kind: data
            voltha_url: "voltha.voltha.svc.cluster.local"
            voltha_port: 8882
  040-vsg-hw-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Set up VSG-HW service
    imports:
      - custom_types/vsghwservice.yaml

    topology_template:
      node_templates:
        service#vsg-hw:
          type: tosca.nodes.VSGHWService
          properties:
            name: vsg-hw
            kind: data
  050-vrouter-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Set up VRouter service
    imports:
      - custom_types/vrouterservice.yaml

    topology_template:
      node_templates:
        service#vrouter:
          type: tosca.nodes.VRouterService
          properties:
            name: vrouter
            kind: data
  060-onos-service-fabric.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    imports:
      - custom_types/onosapp.yaml
      - custom_types/onosservice.yaml
      - custom_types/serviceinstanceattribute.yaml
    description: ONOS service and app for fabric
    topology_template:
      node_templates:
        service#ONOS:
          type: tosca.nodes.ONOSService
          properties:
              name: ONOS
              kind: data
              rest_hostname: "onos-ui.default.svc.cluster.local"
              rest_port: 8181

        onos_app#segmentrouting:
          type: tosca.nodes.ONOSApp
          properties:
            name: org.onosproject.segmentrouting
            app_id: org.onosproject.segmentrouting
          requirements:
            - owner:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        onos_app#vrouter:
          type: tosca.nodes.ONOSApp
          properties:
            name: org.onosproject.vrouter
            app_id: org.onosproject.vrouter
          requirements:
            - owner:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        onos_app#netcfghostprovider:
          type: tosca.nodes.ONOSApp
          properties:
            name: org.onosproject.netcfghostprovider
            app_id: org.onosproject.netcfghostprovider
          requirements:
            - owner:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        onos_app#openflow:
          type: tosca.nodes.ONOSApp
          properties:
            name: org.onosproject.openflow
            app_id: org.onosproject.openflow
          requirements:
            - owner:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        onos_app#openflow-base:
          type: tosca.nodes.ONOSApp
          properties:
            name: openflow-base
            app_id: org.onosproject.openflow-base
          requirements:
            - owner:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        onos_app#hostprovider:
          type: tosca.nodes.ONOSApp
          properties:
            name: hostprovider
            app_id: org.onosproject.hostprovider
          requirements:
            - owner:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        onos_app#cord-config:
          type: tosca.nodes.ONOSApp
          properties:
            name: cord-config
            app_id: org.opencord.config
            url: https://oss.sonatype.org/service/local/repositories/releases/content/org/opencord/cord-config/1.4.0/cord-config-1.4.0.oar
            version: 1.4.0
          requirements:
            - owner:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        onos_app#olt:
          type: tosca.nodes.ONOSApp
          properties:
            name: olt
            app_id: org.opencord.olt
            url: https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=olt-app&v=2.0.0-SNAPSHOT&e=oar
            version: 2.0.0.SNAPSHOT
            dependencies: org.opencord.config
          requirements:
            - owner:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        onos_app#sadis:
          type: tosca.nodes.ONOSApp
          properties:
            name: sadis
            app_id: org.opencord.sadis
            url: https://oss.sonatype.org/service/local/repositories/releases/content/org/opencord/sadis-app/2.1.0/sadis-app-2.1.0.oar
            version: 2.1.0
          requirements:
            - owner:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        onos_app#dhcpl2relay:
          type: tosca.nodes.ONOSApp
          properties:
            name: dhcpl2relay
            app_id: org.opencord.dhcpl2relay
            url: https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=dhcpl2relay&v=1.5.0-SNAPSHOT&e=oar
            version: 1.5.0.SNAPSHOT
            dependencies: org.opencord.sadis
          requirements:
            - owner:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        onos_app#aaa:
          type: tosca.nodes.ONOSApp
          properties:
            name: aaa
            app_id: org.opencord.aaa
            url: https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=aaa&v=1.8.0-SNAPSHOT&e=oar
            version: 1.8.0.SNAPSHOT
            dependencies: org.opencord.sadis
          requirements:
            - owner:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        onos_app#kafka:
          type: tosca.nodes.ONOSApp
          properties:
            name: kafka
            app_id: org.opencord.kafka
            url: https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=kafka&v=1.0.0-SNAPSHOT&e=oar
            version: 1.0.0.SNAPSHOT
            dependencies: org.opencord.olt,org.opencord.aaa,org.opencord.dhcpl2relay
          requirements:
            - owner:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        # CORD-Configuration
        cord-config-attr:
          type: tosca.nodes.ServiceInstanceAttribute
          properties:
            name: /onos/v1/network/configuration/apps/org.opencord.kafka
            value: >
              {
                "kafka" : {
                  "bootstrapServers" : "cord-kafka.default.svc.cluster.local:9092"
                }
              }
          requirements:
            - service_instance:
                node: onos_app#olt
                relationship: tosca.relationships.BelongsToOne

        olt-config-attr:
          type: tosca.nodes.ServiceInstanceAttribute
          properties:
            name: /onos/v1/configuration/org.opencord.olt.impl.Olt?preset=true
            value: >
              {
                "enableDhcpOnProvisioning" : true
              }
          requirements:
            - service_instance:
                node: onos_app#olt
                relationship: tosca.relationships.BelongsToOne

        dhcpl2relay-config-attr:
          type: tosca.nodes.ServiceInstanceAttribute
          properties:
            name: /onos/v1/network/configuration/apps/org.opencord.dhcpl2relay
            value: >
              {
                "dhcpl2relay" : {
                  "useOltUplinkForServerPktInOut" : true
                }
              }
          requirements:
            - service_instance:
                node: onos_app#dhcpl2relay
                relationship: tosca.relationships.BelongsToOne

        aaa-config-attr:
          type: tosca.nodes.ServiceInstanceAttribute
          properties:
            name: /onos/v1/network/configuration/apps/org.opencord.aaa
            value: >
              {
                "AAA" : {
                  "radiusConnectionType" : "socket",
                  "radiusHost" : "freeradius.voltha.svc.cluster.local",
                  "radiusServerPort" : "1812",
                  "radiusSecret" : "SECRET"
                }
              }
          requirements:
            - service_instance:
                node: onos_app#aaa
                relationship: tosca.relationships.BelongsToOne

        sadis-config-attr:
          type: tosca.nodes.ServiceInstanceAttribute
          properties:
            name: /onos/v1/network/configuration/apps/org.opencord.sadis
            value: >
              {
                "sadis" : {
                  "integration" : {
                    "cache" : {
                      "maxsize" : 1000
                    },
                    "url" : "http://sadis-service:8000/subscriber/%s"
                  }
                }
              }
          requirements:
            - service_instance:
                node: onos_app#sadis
                relationship: tosca.relationships.BelongsToOne
  070-fabric-service.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    description: Set up Fabric service
    imports:
      - custom_types/fabricservice.yaml

    topology_template:
      node_templates:
        service#fabric:
          type: tosca.nodes.FabricService
          properties:
            name: fabric
            kind: data
  300-service-graph.yaml: |
    tosca_definitions_version: tosca_simple_yaml_1_0
    imports:
      - custom_types/fabricservice.yaml
      - custom_types/onosservice.yaml
      - custom_types/rcordservice.yaml
      - custom_types/vrouterservice.yaml
      - custom_types/voltservice.yaml
      - custom_types/vsghwservice.yaml
      - custom_types/servicedependency.yaml
      - custom_types/servicegraphconstraint.yaml
    description: rcord-lite service graph
    topology_template:
      node_templates:

    # These services must be defined before loading the graph

        service#ONOS:
          type: tosca.nodes.ONOSService
          properties:
            name: ONOS
            must-exist: true

        service#fabric:
          type: tosca.nodes.FabricService
          properties:
            name: fabric
            must-exist: true

        service#rcord:
          type: tosca.nodes.RCORDService
          properties:
            name: rcord
            must-exist: true

        service#vrouter:
          type: tosca.nodes.VRouterService
          properties:
            name: vrouter
            must-exist: true

        service#volt:
          type: tosca.nodes.VOLTService
          properties:
            name: volt
            must-exist: true

        service#vsg-hw:
          type: tosca.nodes.VSGHWService
          properties:
            name: vsg-hw
            must-exist: true

    # The rcord-lite service graph

        service_dependency#onos-fabric_fabric:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#fabric
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        service_dependency#rcord_volt:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#rcord
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#volt
                relationship: tosca.relationships.BelongsToOne

        service_dependency#onos_voltha_volt:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#volt
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        service_dependency#fabric_vrouter:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#vrouter
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#fabric
                relationship: tosca.relationships.BelongsToOne

        service_dependency#volt_vsg-hw:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#volt
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#vsg-hw
                relationship: tosca.relationships.BelongsToOne

        service_dependency#onos_fabric_vsg-hw:
          type: tosca.nodes.ServiceDependency
          properties:
            connect_method: none
          requirements:
            - subscriber_service:
                node: service#vsg-hw
                relationship: tosca.relationships.BelongsToOne
            - provider_service:
                node: service#ONOS
                relationship: tosca.relationships.BelongsToOne

        constraints:
          type: tosca.nodes.ServiceGraphConstraint
          properties:
            constraints: '[[null, "rcord"], [null, "volt"], ["ONOS", "vsg-hw"], ["fabric", null], ["vrouter", null]]'
---
apiVersion: v1
kind: Service
metadata:
  name: sadis-service
  labels:
    app: sadis-server
spec:
  type: ClusterIP
  ports:
    - name: sadis-service
      port: 8000
      targetPort: 8000
      protocol: TCP
  selector:
    app: sadis-server
    release: release-name
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-fabric
  labels:
    app: fabric
    chart: fabric-2.2.2
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fabric
      release: release-name
  template:
    metadata:
      labels:
        app: fabric
        release: release-name
      annotations:
        checksum/config: 7a2c297919bfa78b99fc69efcfb7c399790f5c5fbdb142f3f8657cb3b6560a90
    spec:
      containers:
        - name: fabric
          image: xosproject/fabric-synchronizer:2.2.2
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: fabric-config
              mountPath: /opt/xos/synchronizers/fabric/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: fabric-config
          configMap:
            name: fabric
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-onos-service
  labels:
    app: onos-service
    chart: onos-service-2.1.3
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: onos-service
      release: release-name
  template:
    metadata:
      labels:
        app: onos-service
        release: release-name
      annotations:
        checksum/config: 7ae1c8b871f40d23c846e2600c757e875eac40e28f54b46226cf6cc6f45abe89
    spec:
      containers:
        - name: onos-service
          image: xosproject/onos-synchronizer:2.1.2
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: onos-service-config
              mountPath: /opt/xos/synchronizers/onos/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: onos-service-config
          configMap:
            name: onos-service
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-rcord
  labels:
    app: rcord
    chart: rcord-1.0.16
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rcord
      release: release-name
  template:
    metadata:
      labels:
        app: rcord
        release: release-name
      annotations:
        checksum/config: 9a2404feaf652a72140efa424652083eca58f5923bcae49404a5cf97bd5abb46
    spec:
      containers:
        - name: rcord
          image: xosproject/rcord-synchronizer:1.3.2
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: rcord-config
              mountPath: /opt/xos/synchronizers/rcord/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: rcord-config
          configMap:
            name: rcord
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sadis-server
  labels:
    app: sadis-server
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sadis-server
        release: release-name
    spec:
      containers:
        - name: sadis-server
          image: opencord/sadis-server:1.1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              port: 8000
              protocol: TCP
          env:
            - name: SADISSERVER_PORT
              value: "8000"
            - name: SADISSERVER_USERNAME
              value: admin@opencord.org
            - name: SADISSERVER_PASSWORD
              value: letmein
            - name: SADISSERVER_XOS
              value: xos-chameleon:9101
            - name: SADISSERVER_KAFKABROKER
              value: cord-kafka:9092
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-volt
  labels:
    app: volt
    chart: volt-2.2.5
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: volt
      release: release-name
  template:
    metadata:
      labels:
        app: volt
        release: release-name
      annotations:
        checksum/config: e24e61e4ff99c4902bc1296acb71a6e5dcb1419260dea762c8a43ae861979fc1
    spec:
      containers:
        - name: volt
          image: xosproject/volt-synchronizer:2.2.4
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: volt-config
              mountPath: /opt/xos/synchronizers/volt/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: volt-config
          configMap:
            name: volt
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-vrouter
  labels:
    app: vrouter
    chart: vrouter-2.1.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vrouter
      release: release-name
  template:
    metadata:
      labels:
        app: vrouter
        release: release-name
      annotations:
        checksum/config: 6bd1e09f0dfda7c2bbb6426726ec8c5575509bd53d70fb82ec33bc6fc6863784
    spec:
      containers:
        - name: vrouter
          image: xosproject/vrouter-synchronizer:2.1.0
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: vrouter-config
              mountPath: /opt/xos/synchronizers/vrouter/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: vrouter-config
          configMap:
            name: vrouter
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-vsg-hw
  labels:
    app: vsg-hw
    chart: vsg-hw-1.1.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vsg-hw
      release: release-name
  template:
    metadata:
      labels:
        app: vsg-hw
        release: release-name
      annotations:
        checksum/config: 1365c266d9c914d243dfac9170fe84420cb81846b73e01488131d7dcb71f7383
    spec:
      containers:
        - name: vsg-hw
          image: xosproject/vsg-hw-synchronizer:1.1.0
          imagePullPolicy: Always
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: vsg-hw-config
              mountPath: /opt/xos/synchronizers/vsg-hw/mounted_config.yaml
              subPath: mounted_config.yaml
            - name: certchain-volume
              mountPath: /usr/local/share/ca-certificates/local_certs.crt
              subPath: config/ca_cert_chain.pem
      volumes:
        - name: vsg-hw-config
          configMap:
            name: vsg-hw
            items:
              - key: serviceConfig
                path: mounted_config.yaml
        - name: certchain-volume
          configMap:
            name: ca-certificates
            items:
              - key: chain
                path: config/ca_cert_chain.pem
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-rcord-lite-tosca-loader
  labels:
    app: rcord-lite
    chart: rcord-lite-1.1.8
    release: release-name
    heritage: Helm
spec:
  backoffLimit: 12
  template:
    metadata:
      labels:
        app: rcord-lite
        release: release-name
      annotations:
        checksum/config: bf52a1ee88c3797eece084988d6df4278521702550c18347dbb0f75b603b834a
    spec:
      restartPolicy: OnFailure
      containers:
        - name: rcord-lite-tosca-loader
          image: xosproject/tosca-loader:1.3.0
          imagePullPolicy: Always
          env:
            - name: XOS_USER
              value: admin@opencord.org
            - name: XOS_PASSWD
              valueFrom:
                secretKeyRef:
                  name: xos-admin-passwd-secret
                  key: password
          volumeMounts:
            - name: rcord-lite-tosca
              mountPath: /opt/tosca
      volumes:
        - name: rcord-lite-tosca
          configMap:
            name: rcord-lite-tosca
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-api-test
  annotations:
    helm.sh/hook: test-success
spec:
  restartPolicy: Never
  containers:
    - name: release-name-api-test
      image: xosproject/xos-api-tester:master
      imagePullPolicy: Always
      volumeMounts:
        - name: log-volume
          mountPath: /src/cord-api/Tests/Log/
      env:
        - name: SERVER_IP
          value: xos-chameleon
        - name: SERVER_PORT
          value: "9101"
        - name: XOS_USER
          value: admin@opencord.org
        - name: XOS_PASSWD
          value: letmein
      command:
        - pybot
        - -L
        - TRACE
        - -d
        - Log
        - -T
        - VOLTDevice_Test.txt
        - RCORDLite_E2ETest.txt
  volumes:
    - name: log-volume
      hostPath:
        path: /tmp/helm_test_rcord_lite_logs_20220612T010912.87Z
        type: DirectoryOrCreate
