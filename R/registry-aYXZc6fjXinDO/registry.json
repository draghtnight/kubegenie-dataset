[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "docker-registry-proxy",
      "namespace": "aYXZc6fjXinDO"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "docker-registry",
      "namespace": "aYXZc6fjXinDO"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "docker-bootstrap",
      "namespace": "aYXZc6fjXinDO"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "registry-bin"
    },
    "data": {
      "bootstrap.sh": "#!/bin/sh\n\n\n\nset -ex\n\ndocker info\n\nIFS=',' ; for IMAGE in ${PRELOAD_IMAGES}; do\n  docker pull ${IMAGE}\n  docker tag ${IMAGE} ${LOCAL_REPO}/${IMAGE}\n  docker push ${LOCAL_REPO}/${IMAGE}\ndone\n",
      "registry.sh": "#!/bin/sh\n\n\n\nset -ex\n\nexec registry serve /etc/docker/registry/config.yml\n",
      "registry-proxy.sh": "#!/bin/sh\n\n\n\nset -ex\n\nexec nginx -g \"daemon off;\"\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "registry-etc"
    },
    "data": {
      "config.yml": "health:\n  storagedriver:\n    enabled: true\n    interval: 10s\n    threshold: 3\nhttp:\n  addr: 0.0.0.0:5000\n  headers:\n    X-Content-Type-Options:\n    - nosniff\n  secret: not-so-secret-secret\nlog:\n  fields:\n    service: registry\nredis:\n  addr: redis.default.svc.cluster.local:6379\nstorage:\n  cache:\n    blobdescriptor: redis\n  filesystem:\n    rootdirectory: /var/lib/registry\nversion: 0.1\n",
      "default.conf": "# Docker registry proxy for api version 2\n\nupstream docker-registry {\n    server docker-registry.docker-registry.svc.cluster.local:5000;\n}\n\n# No client auth or TLS\n# TODO(bacongobbler): experiment with authenticating the registry if it's using TLS\nserver {\n    listen 5000;\n    server_name localhost;\n\n    # disable any limits to avoid HTTP 413 for large image uploads\n    client_max_body_size 0;\n\n    # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)\n    chunked_transfer_encoding on;\n\n    location / {\n        # Do not allow connections from docker 1.5 and earlier\n        # docker pre-1.6.0 did not properly set the user agent on ping, catch \"Go *\" user agents\n        if ($http_user_agent ~ \"^(docker\\/1\\.(3|4|5(?!\\.[0-9]-dev))|Go ).*$\" ) {\n            return 404;\n        }\n\n        include docker-registry.conf;\n    }\n}\n"
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "docker-images"
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "2Gi"
        }
      },
      "storageClassName": "general"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-docker-registry-docker-registry-proxy",
      "namespace": "docker-registry"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-docker-registry",
      "namespace": "aYXZc6fjXinDO"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-docker-bootstrap",
      "namespace": "aYXZc6fjXinDO"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "pods"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-docker-registry-docker-bootstrap",
      "namespace": "docker-registry"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-docker-registry-proxy",
      "namespace": "docker-registry"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-docker-registry-docker-registry-proxy"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "docker-registry-proxy",
        "namespace": "docker-registry"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-docker-registry",
      "namespace": "aYXZc6fjXinDO"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-docker-registry"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "docker-registry",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-docker-bootstrap",
      "namespace": "aYXZc6fjXinDO"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-docker-bootstrap"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "docker-bootstrap",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-docker-bootstrap",
      "namespace": "docker-registry"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-docker-registry-docker-bootstrap"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "docker-bootstrap",
        "namespace": "docker-registry"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "docker-registry"
    },
    "spec": {
      "ports": [
        {
          "name": "d-reg",
          "port": 5000
        }
      ],
      "selector": {
        "release_group": "release-name",
        "application": "docker",
        "component": "registry"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
      "name": "docker-registry-proxy",
      "annotations": {
        "openstackhelm.openstack.org/release_uuid": ""
      },
      "labels": {
        "release_group": "release-name",
        "application": "docker",
        "component": "registry-proxy"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "docker",
          "component": "registry-proxy"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "docker",
            "component": "registry-proxy"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "c2f1ab5f8240edea526962abbbf90c6a55efe636f599391d6096290e386f403c",
            "configmap-etc-hash": "84bfc089121898ca3235a9da5d0b1e680b3561d69f125f015c1a9d12c3e53ab9"
          }
        },
        "spec": {
          "securityContext": {
            "runAsUser": 65534
          },
          "serviceAccountName": "docker-registry-proxy",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "dnsPolicy": "ClusterFirstWithHostNet",
          "hostNetwork": true,
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "docker-registry:docker-registry"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "registry-proxy",
              "image": "k8s.gcr.io/kube-registry-proxy:0.4",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "readOnlyRootFilesystem": true,
                "runAsUser": 11038,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "command": [
                "/tmp/registry-proxy.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "registry-bin",
                  "mountPath": "/tmp/registry-proxy.sh",
                  "subPath": "registry-proxy.sh",
                  "readOnly": true
                },
                {
                  "name": "registry-etc",
                  "mountPath": "/etc/nginx/conf.d/default.conf",
                  "subPath": "default.conf",
                  "readOnly": true
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "registry-bin",
              "configMap": {
                "name": "registry-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "registry-etc",
              "configMap": {
                "name": "registry-etc",
                "defaultMode": 292
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "docker-registry",
      "annotations": {
        "openstackhelm.openstack.org/release_uuid": ""
      },
      "labels": {
        "release_group": "release-name",
        "application": "docker",
        "component": "registry"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "docker",
          "component": "registry"
        }
      },
      "revisionHistoryLimit": 3,
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": 3
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "docker",
            "component": "registry"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "c2f1ab5f8240edea526962abbbf90c6a55efe636f599391d6096290e386f403c",
            "configmap-etc-hash": "84bfc089121898ca3235a9da5d0b1e680b3561d69f125f015c1a9d12c3e53ab9"
          }
        },
        "spec": {
          "securityContext": {
            "runAsUser": 65534
          },
          "serviceAccountName": "docker-registry",
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "release_group",
                          "operator": "In",
                          "values": [
                            "release-name"
                          ]
                        },
                        {
                          "key": "application",
                          "operator": "In",
                          "values": [
                            "docker"
                          ]
                        },
                        {
                          "key": "component",
                          "operator": "In",
                          "values": [
                            "registry"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 10
                }
              ]
            }
          },
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "default:redis"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "registry",
              "image": "docker.io/registry:2",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "ports": [
                {
                  "name": "d-reg",
                  "containerPort": 5000
                }
              ],
              "command": [
                "/tmp/registry.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "registry-bin",
                  "mountPath": "/tmp/registry.sh",
                  "subPath": "registry.sh",
                  "readOnly": true
                },
                {
                  "name": "registry-etc",
                  "mountPath": "/etc/docker/registry/config.yml",
                  "subPath": "config.yml",
                  "readOnly": true
                },
                {
                  "name": "docker-images",
                  "mountPath": "/var/lib/registry"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "registry-bin",
              "configMap": {
                "name": "registry-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "registry-etc",
              "configMap": {
                "name": "registry-etc",
                "defaultMode": 292
              }
            },
            {
              "name": "docker-images",
              "persistentVolumeClaim": {
                "claimName": "docker-images"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "name": "docker-bootstrap",
      "annotations": {
        "openstackhelm.openstack.org/release_uuid": ""
      }
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "docker",
            "component": "bootstrap"
          }
        },
        "spec": {
          "serviceAccountName": "docker-bootstrap",
          "restartPolicy": "OnFailure",
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": "docker-registry:docker-registry"
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": "[{\"labels\":{\"application\":\"docker\",\"component\":\"registry-proxy\"},\"requireSameNode\":true}]"
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            }
          ],
          "containers": [
            {
              "name": "docker-bootstrap",
              "image": "docker.io/docker:17.07.0",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "LOCAL_REPO",
                  "value": "localhost:5000"
                },
                {
                  "name": "PRELOAD_IMAGES",
                  "value": "quay.io/airshipit/kubernetes-entrypoint:v1.0.0"
                }
              ],
              "command": [
                "/tmp/bootstrap.sh"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "registry-bin",
                  "mountPath": "/tmp/bootstrap.sh",
                  "subPath": "bootstrap.sh",
                  "readOnly": true
                },
                {
                  "name": "docker-socket",
                  "mountPath": "/var/run/docker.sock"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "registry-bin",
              "configMap": {
                "name": "registry-bin",
                "defaultMode": 365
              }
            },
            {
              "name": "docker-socket",
              "hostPath": {
                "path": "/var/run/docker.sock"
              }
            }
          ]
        }
      }
    }
  }
]