[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-rabbitmq",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.31.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "automountServiceAccountToken": true,
    "secrets": [
      {
        "name": "release-name-rabbitmq"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "automountServiceAccountToken": true,
    "metadata": {
      "name": "release-name-redis",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.8.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-remoulade",
      "labels": {
        "helm.sh/chart": "remoulade-0.1.7",
        "app.kubernetes.io/name": "remoulade",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-11.1.19",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "postgres-password": "c2V0bWU=",
      "password": "c2V0bWU="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-rabbitmq",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.31.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "rabbitmq-password": "c2V0bWU=",
      "rabbitmq-erlang-cookie": "c2V0bWU="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-redis",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.8.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "redis-password": "c2V0bWU="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-remoulade",
      "labels": {
        "helm.sh/chart": "remoulade-0.1.7",
        "app.kubernetes.io/name": "remoulade",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "REMOULADE_POSTGRESQL_URL": "cG9zdGdyZXNxbDovL3JlbW91bGFkZTpzZXRtZUByZWxlYXNlLW5hbWUtcG9zdGdyZXNxbC5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjU0MzIvcmVtb3VsYWRlP3NzbG1vZGU9cHJlZmVy",
      "REMOULADE_RABBITMQ_URL": "YW1xcDovL3JhYmJpdG1xOnNldG1lQHJlbGVhc2UtbmFtZS1yYWJiaXRtcS5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjU2NzI=",
      "REMOULADE_REDIS_URL": "cmVkaXM6Ly86c2V0bWVAcmVsZWFzZS1uYW1lLXJlZGlzLW1hc3Rlci5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjYzNzk/c29ja2V0X2tlZXBhbGl2ZT0x"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-rabbitmq-config",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.31.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "rabbitmq.conf": "## Username and password\n##\ndefault_user = rabbitmq\ndefault_pass = CHANGEME\n## Clustering\n##\ncluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s\ncluster_formation.k8s.host = kubernetes.default.svc.cluster.local\ncluster_formation.node_cleanup.interval = 10\ncluster_formation.node_cleanup.only_log_warning = true\ncluster_partition_handling = autoheal\n# queue master locator\nqueue_master_locator = min-masters\n# enable guest user\nloopback_users.guest = false\n#default_vhost = default-vhost\n#disk_free_limit.absolute = 50MB"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-configuration",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.8.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "redis.conf": "# User-supplied common configuration:\n# Enable AOF https://redis.io/topics/persistence#append-only-file\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"\n# End of common configuration",
      "master.conf": "dir /data\n# User-supplied master configuration:\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"\n# End of master configuration",
      "replica.conf": "dir /data\nslave-read-only yes\n# User-supplied replica configuration:\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"\n# End of replica configuration"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-health",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.8.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "ping_readiness_local.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_local.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nresponseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')\nif [ \"$response\" != \"PONG\" ] && [ \"$responseFirstWord\" != \"LOADING\" ] && [ \"$responseFirstWord\" != \"MASTERDOWN\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_master.sh": "#!/bin/bash\n\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD=\"$(< \"${REDIS_MASTER_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_MASTER_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_liveness_master.sh": "#!/bin/bash\n\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD=\"$(< \"${REDIS_MASTER_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_MASTER_PASSWORD\" ]] && export REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 3 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nresponseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')\nif [ \"$response\" != \"PONG\" ] && [ \"$responseFirstWord\" != \"LOADING\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
      "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
      "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-redis-scripts",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.8.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "data": {
      "start-master.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD=\"$(< \"${REDIS_PASSWORD_FILE}\")\"\nif [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\nfi\nif [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/master.conf\")\nexec redis-server \"${ARGS[@]}\"\n"
    }
  },
  {
    "kind": "Role",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-rabbitmq-endpoint-reader",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.31.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "endpoints"
        ],
        "verbs": [
          "get"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "events"
        ],
        "verbs": [
          "create"
        ]
      }
    ]
  },
  {
    "kind": "RoleBinding",
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "metadata": {
      "name": "release-name-rabbitmq-endpoint-reader",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.31.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-rabbitmq"
      }
    ],
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-rabbitmq-endpoint-reader"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql-hl",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-11.1.19",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary",
        "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "publishNotReadyAddresses": true,
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-11.1.19",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-postgresql",
          "port": 5432,
          "targetPort": "tcp-postgresql",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-rabbitmq-headless",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.31.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "clusterIP": "None",
      "ports": [
        {
          "name": "epmd",
          "port": 4369,
          "targetPort": "epmd"
        },
        {
          "name": "amqp",
          "port": 5672,
          "targetPort": "amqp"
        },
        {
          "name": "dist",
          "port": 25672,
          "targetPort": "dist"
        },
        {
          "name": "http-stats",
          "port": 15672,
          "targetPort": "stats"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "rabbitmq",
        "app.kubernetes.io/instance": "release-name"
      },
      "publishNotReadyAddresses": true
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-rabbitmq",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.31.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "amqp",
          "port": 5672,
          "targetPort": "amqp",
          "nodePort": null
        },
        {
          "name": "epmd",
          "port": 4369,
          "targetPort": "epmd",
          "nodePort": null
        },
        {
          "name": "dist",
          "port": 25672,
          "targetPort": "dist",
          "nodePort": null
        },
        {
          "name": "http-stats",
          "port": 15672,
          "targetPort": "stats",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "rabbitmq",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-headless",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.8.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "clusterIP": "None",
      "ports": [
        {
          "name": "tcp-redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "redis",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.8.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "master"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "tcp-redis",
          "port": 6379,
          "targetPort": "redis",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "redis",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "master"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-postgresql",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "postgresql",
        "helm.sh/chart": "postgresql-11.1.19",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": null
    },
    "spec": {
      "replicas": 1,
      "serviceName": "release-name-postgresql-hl",
      "updateStrategy": {
        "rollingUpdate": {},
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "postgresql",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "primary"
        }
      },
      "template": {
        "metadata": {
          "name": "release-name-postgresql",
          "labels": {
            "app.kubernetes.io/name": "postgresql",
            "helm.sh/chart": "postgresql-11.1.19",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "primary"
          },
          "annotations": null
        },
        "spec": {
          "serviceAccountName": "default",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "postgresql",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "hostNetwork": false,
          "hostIPC": false,
          "initContainers": null,
          "containers": [
            {
              "name": "postgresql",
              "image": "docker.io/bitnami/postgresql:14.2.0-debian-10-r58",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 10736,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PORT_NUMBER",
                  "value": "5432"
                },
                {
                  "name": "POSTGRESQL_VOLUME_DIR",
                  "value": "/bitnami/postgresql"
                },
                {
                  "name": "PGDATA",
                  "value": "/bitnami/postgresql/data"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "remoulade"
                },
                {
                  "name": "POSTGRES_POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgres-password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "password"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "remoulade"
                },
                {
                  "name": "POSTGRESQL_ENABLE_LDAP",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_ENABLE_TLS",
                  "value": "no"
                },
                {
                  "name": "POSTGRESQL_LOG_HOSTNAME",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_CONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_LOG_DISCONNECTIONS",
                  "value": "false"
                },
                {
                  "name": "POSTGRESQL_PGAUDIT_LOG_CATALOG",
                  "value": "off"
                },
                {
                  "name": "POSTGRESQL_CLIENT_MIN_MESSAGES",
                  "value": "error"
                },
                {
                  "name": "POSTGRESQL_SHARED_PRELOAD_LIBRARIES",
                  "value": "pgaudit"
                }
              ],
              "ports": [
                {
                  "name": "tcp-postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "exec pg_isready -U \"remoulade\" -d \"dbname=remoulade\" -h 127.0.0.1 -p 5432"
                  ]
                }
              },
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 5,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5,
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "-e",
                    "exec pg_isready -U \"remoulade\" -d \"dbname=remoulade\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "dshm",
                  "mountPath": "/dev/shm"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/postgresql"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "dshm",
              "emptyDir": {
                "medium": "Memory"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-rabbitmq",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "rabbitmq",
        "helm.sh/chart": "rabbitmq-8.31.4",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "serviceName": "release-name-rabbitmq-headless",
      "podManagementPolicy": "OrderedReady",
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "rabbitmq",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "rabbitmq",
            "helm.sh/chart": "rabbitmq-8.31.4",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm"
          },
          "annotations": {
            "checksum/config": "f910992edcdafe84b9037e52b8af7b643c6e032813701039f7ea6605f5cf8710",
            "checksum/secret": "6309ed3ef93eb6bea8cd81e24a020e0e9def551361d987e8217e0a246a6166c8"
          }
        },
        "spec": {
          "serviceAccountName": "release-name-rabbitmq",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "rabbitmq",
                        "app.kubernetes.io/instance": "release-name"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001,
            "runAsUser": 1001
          },
          "terminationGracePeriodSeconds": 120,
          "containers": [
            {
              "name": "rabbitmq",
              "image": "docker.io/bitnami/rabbitmq:3.9.15-debian-10-r0",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "MY_POD_IP",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "status.podIP"
                    }
                  }
                },
                {
                  "name": "MY_POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "MY_POD_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "K8S_SERVICE_NAME",
                  "value": "release-name-rabbitmq-headless"
                },
                {
                  "name": "K8S_ADDRESS_TYPE",
                  "value": "hostname"
                },
                {
                  "name": "RABBITMQ_FORCE_BOOT",
                  "value": "no"
                },
                {
                  "name": "RABBITMQ_NODE_NAME",
                  "value": "rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
                },
                {
                  "name": "K8S_HOSTNAME_SUFFIX",
                  "value": ".$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
                },
                {
                  "name": "RABBITMQ_MNESIA_DIR",
                  "value": "/bitnami/rabbitmq/mnesia/$(RABBITMQ_NODE_NAME)"
                },
                {
                  "name": "RABBITMQ_LDAP_ENABLE",
                  "value": "no"
                },
                {
                  "name": "RABBITMQ_LOGS",
                  "value": "-"
                },
                {
                  "name": "RABBITMQ_ULIMIT_NOFILES",
                  "value": "65536"
                },
                {
                  "name": "RABBITMQ_USE_LONGNAME",
                  "value": "true"
                },
                {
                  "name": "RABBITMQ_ERL_COOKIE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-rabbitmq",
                      "key": "rabbitmq-erlang-cookie"
                    }
                  }
                },
                {
                  "name": "RABBITMQ_LOAD_DEFINITIONS",
                  "value": "no"
                },
                {
                  "name": "RABBITMQ_DEFINITIONS_FILE",
                  "value": "/app/load_definition.json"
                },
                {
                  "name": "RABBITMQ_SECURE_PASSWORD",
                  "value": "yes"
                },
                {
                  "name": "RABBITMQ_USERNAME",
                  "value": "rabbitmq"
                },
                {
                  "name": "RABBITMQ_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-rabbitmq",
                      "key": "rabbitmq-password"
                    }
                  }
                },
                {
                  "name": "RABBITMQ_PLUGINS",
                  "value": "rabbitmq_management, rabbitmq_peer_discovery_k8s, rabbitmq_auth_backend_ldap"
                }
              ],
              "ports": [
                {
                  "name": "amqp",
                  "containerPort": 5672
                },
                {
                  "name": "dist",
                  "containerPort": 25672
                },
                {
                  "name": "stats",
                  "containerPort": 15672
                },
                {
                  "name": "epmd",
                  "containerPort": 4369
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "rabbitmq-diagnostics -q ping"
                  ]
                },
                "initialDelaySeconds": 120,
                "periodSeconds": 30,
                "timeoutSeconds": 20,
                "successThreshold": 1,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms"
                  ]
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30,
                "timeoutSeconds": 20,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "lifecycle": {
                "preStop": {
                  "exec": {
                    "command": [
                      "/bin/bash",
                      "-ec",
                      "if [[ -f /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh ]]; then\n    /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh -t \"120\" -d  \"false\"\nelse\n    rabbitmqctl stop_app\nfi\n"
                    ]
                  }
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "configuration",
                  "mountPath": "/bitnami/rabbitmq/conf"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/rabbitmq/mnesia"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "configuration",
              "configMap": {
                "name": "release-name-rabbitmq-config",
                "items": [
                  {
                    "key": "rabbitmq.conf",
                    "path": "rabbitmq.conf"
                  }
                ]
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data",
            "labels": {
              "app.kubernetes.io/name": "rabbitmq",
              "app.kubernetes.io/instance": "release-name"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-redis-master",
      "namespace": "ObjV1oD4WbJTSR1",
      "labels": {
        "app.kubernetes.io/name": "redis",
        "helm.sh/chart": "redis-16.8.5",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "master"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "redis",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "master"
        }
      },
      "serviceName": "release-name-redis-headless",
      "updateStrategy": {
        "rollingUpdate": {},
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "redis",
            "helm.sh/chart": "redis-16.8.5",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "master"
          },
          "annotations": {
            "checksum/configmap": "a7ab968664109550df572e52c02f152414a6a6e15d41514e7dc14f122396cab1",
            "checksum/health": "29ac4cd58067651a3add5ccb9d7242709d1a0e7f583719e4566d7693c98d89bf",
            "checksum/scripts": "214511a8d9fba10f04b1e9cc117a1625f91a5b7101a9fd5178f7b3de6b5dc750",
            "checksum/secret": "0545acad9ad834e3a88e017dba282b1689fd225a821c7f56b4f84a68da175ba7"
          }
        },
        "spec": {
          "securityContext": {
            "fsGroup": 1001
          },
          "serviceAccountName": "release-name-redis",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "redis",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "master"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "terminationGracePeriodSeconds": 30,
          "containers": [
            {
              "name": "redis",
              "image": "docker.io/bitnami/redis:6.2.6-debian-10-r179",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 11138,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "command": [
                "/bin/bash"
              ],
              "args": [
                "-c",
                "/opt/bitnami/scripts/start-scripts/start-master.sh"
              ],
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "REDIS_REPLICATION_MODE",
                  "value": "master"
                },
                {
                  "name": "ALLOW_EMPTY_PASSWORD",
                  "value": "no"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-redis",
                      "key": "redis-password"
                    }
                  }
                },
                {
                  "name": "REDIS_TLS_ENABLED",
                  "value": "no"
                },
                {
                  "name": "REDIS_PORT",
                  "value": "6379"
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 5,
                "timeoutSeconds": 6,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_liveness_local.sh 5"
                  ]
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 5,
                "timeoutSeconds": 2,
                "successThreshold": 1,
                "failureThreshold": 5,
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "/health/ping_readiness_local.sh 1"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "start-scripts",
                  "mountPath": "/opt/bitnami/scripts/start-scripts"
                },
                {
                  "name": "health",
                  "mountPath": "/health"
                },
                {
                  "name": "redis-data",
                  "mountPath": "/data",
                  "subPath": null
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/redis/mounted-etc"
                },
                {
                  "name": "redis-tmp-conf",
                  "mountPath": "/opt/bitnami/redis/etc/"
                },
                {
                  "name": "tmp",
                  "mountPath": "/tmp"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "start-scripts",
              "configMap": {
                "name": "release-name-redis-scripts",
                "defaultMode": 493
              }
            },
            {
              "name": "health",
              "configMap": {
                "name": "release-name-redis-health",
                "defaultMode": 493
              }
            },
            {
              "name": "config",
              "configMap": {
                "name": "release-name-redis-configuration"
              }
            },
            {
              "name": "redis-tmp-conf",
              "emptyDir": {}
            },
            {
              "name": "tmp",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "redis-data",
            "labels": {
              "app.kubernetes.io/name": "redis",
              "app.kubernetes.io/instance": "release-name",
              "app.kubernetes.io/component": "master"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  }
]