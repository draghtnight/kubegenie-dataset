apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-nexus-iq-server
  labels:
    app.kubernetes.io/name: nexus-iq-server
    helm.sh/chart: nexus-iq-server-138.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.138.0
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-nexus-iq-server-conf
  labels:
    app.kubernetes.io/name: nexus-iq-server
    helm.sh/chart: nexus-iq-server-138.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.138.0
    app.kubernetes.io/managed-by: Helm
data:
  config.yml: |
    baseUrl: http://iq-server.demo
    createSampleData: true
    features:
      enableUnauthenticatedPages: true
    initialAdminPassword: admin123
    licenseFile: /etc/nexus-iq-license/license_lic
    logging:
      appenders:
      - logFormat: '%d{''yyyy-MM-dd HH:mm:ss,SSSZ''} %level [%thread] %X{username} %logger
          - %msg%n'
        threshold: INFO
        type: console
      - archivedFileCount: 50
        archivedLogFilenamePattern: /var/log/nexus-iq-server/clm-server-%d.log.gz
        currentLogFilename: /var/log/nexus-iq-server/clm-server.log
        logFormat: '%d{''yyyy-MM-dd HH:mm:ss,SSSZ''} %level [%thread] %X{username} %logger
          - %msg%n'
        threshold: ALL
        type: file
      level: DEBUG
      loggers:
        com.sonatype.insight.audit:
          appenders:
          - archivedFileCount: 50
            archivedLogFilenamePattern: /var/log/nexus-iq-server/audit-%d.log.gz
            currentLogFilename: /var/log/nexus-iq-server/audit.log
            type: file
        com.sonatype.insight.policy.violation:
          appenders:
          - threshold: INFO
            type: console
        com.sonatype.insight.scan: INFO
        eu.medsea.mimeutil.MimeUtil2: INFO
        org.apache.http: INFO
        org.apache.http.wire: ERROR
        org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter: INFO
        org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader: WARN
        org.eclipse.jetty: INFO
    server:
      adminConnectors:
      - port: 8071
        type: http
      applicationConnectors:
      - port: 8070
        type: http
      requestLog:
        appenders:
        - archivedFileCount: 50
          archivedLogFilenamePattern: /var/log/nexus-iq-server/request-%d.log.gz
          currentLogFilename: /var/log/nexus-iq-server/request.log
          logFormat: '%clientHost %l %user [%date] "%requestURL" %statusCode %bytesSent
            %elapsedTime "%header{User-Agent}"'
          type: file
    sonatypeWork: /sonatype-work
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-nexus-iq-server-data
  labels:
    app.kubernetes.io/name: nexus-iq-server
    helm.sh/chart: nexus-iq-server-138.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.138.0
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-nexus-iq-server-log
  labels:
    app.kubernetes.io/name: nexus-iq-server
    helm.sh/chart: nexus-iq-server-138.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.138.0
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-nexus-iq-server
  labels:
    app.kubernetes.io/name: nexus-iq-server
    helm.sh/chart: nexus-iq-server-138.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.138.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8070
      targetPort: application
      protocol: TCP
      name: application
    - port: 8071
      targetPort: admin
      protocol: TCP
      name: admin
  selector:
    app.kubernetes.io/name: nexus-iq-server
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-nexus-iq-server
  labels:
    app.kubernetes.io/name: nexus-iq-server
    helm.sh/chart: nexus-iq-server-138.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.138.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: nexus-iq-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nexus-iq-server
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-nexus-iq-server
      securityContext: {}
      containers:
        - name: nexus-iq-server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: sonatype/nexus-iq-server:1.138.0
          imagePullPolicy: IfNotPresent
          env:
            - name: SONATYPE_INTERNAL_HOST_SYSTEM
              value: Helm+Docker
            - name: SONATYPE_WORK
              value: /sonatype-work
            - name: JAVA_OPTS
              value: -Djava.util.prefs.userRoot=$(SONATYPE_WORK)/javaprefs
          ports:
            - name: application
              containerPort: 8070
              protocol: TCP
            - name: admin
              containerPort: 8071
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: admin
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: application
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          resources: null
          volumeMounts:
            - mountPath: /sonatype-work
              name: nxiq-pv-data
            - mountPath: /var/log/nexus-iq-server
              name: nxiq-pv-log
            - mountPath: /etc/nexus-iq-server
              name: config-volume
      volumes:
        - name: nxiq-pv-data
          persistentVolumeClaim:
            claimName: release-name-nexus-iq-server-data
        - name: nxiq-pv-log
          persistentVolumeClaim:
            claimName: release-name-nexus-iq-server-log
        - name: config-volume
          configMap:
            name: release-name-nexus-iq-server-conf
            items:
              - key: config.yml
                path: config.yml
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-test-check-logs
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
spec:
  containers:
    - name: release-name-test-check-logs
      image: busybox
      command:
        - /bin/sh
      args:
        - -c
        - cat /var/log/nexus-iq-server/clm-server.log | grep 1.138.0 || exit 1
      volumeMounts:
        - mountPath: /var/log/nexus-iq-server
          name: nexus-logs
  volumes:
    - name: nexus-logs
      persistentVolumeClaim:
        claimName: release-name-nexus-iq-server-log
  restartPolicy: Never
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-test-connection
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
spec:
  containers:
    - name: release-name-test-connection
      image: busybox
      command:
        - wget
      args:
        - release-name-nexus-iq-server:8070
  restartPolicy: Never
