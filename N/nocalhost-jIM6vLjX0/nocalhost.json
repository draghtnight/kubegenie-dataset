[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "nocalhost-api-config"
    },
    "data": {
      "config.yaml": "app:\n  run_mode: release                 # gin 开发模式, debug, release, test\n  addr: :8080                     # HTTP绑定端口\n  name: nocalhost                 # API Server Name\n  url: http://127.0.0.1:8080      # pingServer\n  max_ping_count: 10              # pingServer\n  jwt_secret: IjTccFjAFvqYeNe9vuTOxHH6hu6vd4eiDCXumkGxDufKjmu4VGVN4h0ibIZx9L6Lr3KimVFiH05TUE4HPeQhhm01RcCfutq5Vlx\nlog:\n  writers: stdout                 # 有2个可选项：file,stdout, 可以两者同时选择输出位置，有2个可选项：file,stdout。\n  logger_level: DEBUG             # 日志级别，DEBUG, INFO, WARN, ERROR, FATAL\nmysql:\n  name: nocalhost\n  addr: nocalhost-mariadb:3306\n  username: root\n  password: root\n  show_log: true                  # 打印 SQL 日志\n  max_idle_conn: 10               # 最大闲置的连接数\n  max_open_conn: 60               # 最大打开的连接数, 需要小于数据库配置中的 max_connections 数\n  conn_max_life_time: 60          # 连接重用的最大时间，单位分钟"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "nocalhost-api-sql-init-config"
    },
    "data": {
      "nocalhost.sql": "# ************************************************************\n# Sequel Pro SQL dump\n# Version 5438\n#\n# https://www.sequelpro.com/\n# https://github.com/sequelpro/sequelpro\n#\n# Host: 127.0.0.1 (MySQL 5.5.5-10.5.8-MariaDB)\n# Database: nocalhost\n# Generation Time: 2020-11-26 06:57:56 +0000\n# ************************************************************\n\n\n/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;\n/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;\n/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;\n/*!40101 SET NAMES utf8 */;\nSET NAMES utf8mb4;\n/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;\n/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;\n/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;\n\n\n# Dump of table applications\n# ------------------------------------------------------------\n\nDROP TABLE IF EXISTS `applications`;\n\nCREATE TABLE `applications` (\n  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  `context` text DEFAULT NULL,\n  `user_id` int(11) NOT NULL DEFAULT 0,\n  `created_at` datetime DEFAULT NULL,\n  `updated_at` datetime DEFAULT NULL,\n  `deleted_at` datetime DEFAULT NULL,\n  `public` tinyint(1) DEFAULT 1,\n  `status` tinyint(1) DEFAULT 1 COMMENT '1 enable, 0 disable',\n  PRIMARY KEY (`id`),\n  KEY `user_Id` (`user_id`),\n  KEY `status` (`status`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n\n\n\n# Dump of table applications_clusters\n# ------------------------------------------------------------\n\nDROP TABLE IF EXISTS `applications_clusters`;\n\nCREATE TABLE `applications_clusters` (\n  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  `application_id` int(11) DEFAULT NULL,\n  `cluster_id` int(11) DEFAULT NULL,\n  `created_at` datetime DEFAULT NULL,\n  `deleted_at` datetime DEFAULT NULL,\n  `updated_at` datetime DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `application_id` (`application_id`),\n  KEY `cluster_id` (`cluster_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n\n\n\n# Dump of table applications_users\n# ------------------------------------------------------------\n\nDROP TABLE IF EXISTS `applications_users`;\n\nCREATE TABLE `applications_users` (\n  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  `application_id` int(11) DEFAULT NULL,\n  `user_id` int(11) DEFAULT NULL,\n  `created_at` datetime DEFAULT NULL,\n  `deleted_at` datetime DEFAULT NULL,\n  `updated_at` datetime DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `application_id` (`application_id`),\n  KEY `user_id` (`user_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n\n\n\n\n\n# Dump of table clusters\n# ------------------------------------------------------------\n\nDROP TABLE IF EXISTS `clusters`;\n\nCREATE TABLE `clusters` (\n  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  `name` varchar(32) NOT NULL DEFAULT '',\n  `marks` varchar(100) NOT NULL DEFAULT '',\n  `user_id` int(11) NOT NULL DEFAULT 0,\n  `server` varchar(500) NOT NULL DEFAULT '',\n  `kubeconfig` text NOT NULL,\n  `storage_class` varchar(100) NOT NULL DEFAULT '' COMMENT 'specify the k8s storage class',\n  `info` text DEFAULT NULL COMMENT 'cluster extra info, such as versions, nodes',\n  `deleted_at` timestamp NULL DEFAULT NULL,\n  `created_at` timestamp NULL DEFAULT NULL,\n  `updated_at` timestamp NULL DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `user_id` (`user_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n\n\n\n# Dump of table clusters_users\n# ------------------------------------------------------------\n\nDROP TABLE IF EXISTS `clusters_users`;\n\nCREATE TABLE `clusters_users` (\n  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  `application_id` int(11) NOT NULL,\n  `cluster_id` int(11) NOT NULL,\n  `user_id` int(11) NOT NULL,\n  `space_name` varchar(100) DEFAULT NULL COMMENT 'dev space name',\n  `kubeconfig` text DEFAULT NULL COMMENT 'service account',\n  `memory` int(11) DEFAULT NULL COMMENT 'memory limit',\n  `cpu` int(11) DEFAULT NULL COMMENT 'CPU limit',\n  `namespace` varchar(30) DEFAULT NULL,\n  `status` tinyint(4) NOT NULL DEFAULT 0 COMMENT '0 not deployed, 1 deployed',\n  `created_at` datetime DEFAULT NULL,\n  `deleted_at` timestamp NULL DEFAULT NULL,\n  `updated_at` timestamp NULL DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `cluster_id` (`cluster_id`),\n  KEY `user_id` (`user_id`),\n  KEY `application_id` (`application_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n\n\n\n# Dump of table pre_pull\n# ------------------------------------------------------------\n\nDROP TABLE IF EXISTS `pre_pull`;\n\nCREATE TABLE `pre_pull` (\n  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  `images` varchar(1000) NOT NULL DEFAULT '',\n  `deleted_at` datetime DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n\nLOCK TABLES `pre_pull` WRITE;\n/*!40000 ALTER TABLE `pre_pull` DISABLE KEYS */;\n\nINSERT INTO `pre_pull` (`id`, `images`, `deleted_at`)\nVALUES\n\t(1,'nocalhost-docker.pkg.coding.net/nocalhost/public/nocalhost-sidecar:latest',NULL),\n\t(2,'nocalhost-docker.pkg.coding.net/nocalhost/public/nocalhost-wait:latest',NULL),\n\t(3,'nocalhost-docker.pkg.coding.net/nocalhost/bookinfo/productpage:latest',NULL),\n\t(4,'nocalhost-docker.pkg.coding.net/nocalhost/bookinfo/reviews:latest',NULL),\n\t(5,'nocalhost-docker.pkg.coding.net/nocalhost/bookinfo/details:latest',NULL),\n\t(6,'nocalhost-docker.pkg.coding.net/nocalhost/bookinfo/ratings:latest',NULL);\n\n/*!40000 ALTER TABLE `pre_pull` ENABLE KEYS */;\nUNLOCK TABLES;\n\n\n# Dump of table users\n# ------------------------------------------------------------\n\nDROP TABLE IF EXISTS `users`;\n\nCREATE TABLE `users` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `uuid` varchar(100) NOT NULL DEFAULT '',\n  `username` varchar(255) NOT NULL DEFAULT '',\n  `name` varchar(20) DEFAULT NULL,\n  `password` varchar(60) NOT NULL DEFAULT '',\n  `avatar` varchar(255) NOT NULL DEFAULT '',\n  `phone` bigint(20) NOT NULL DEFAULT 0 ,\n  `email` varchar(100) NOT NULL DEFAULT '',\n  `is_admin` tinyint(4) NOT NULL DEFAULT 0,\n  `status` tinyint(4) NOT NULL DEFAULT 1 COMMENT '1 enable, 0 disable',\n  `deleted_at` timestamp NULL DEFAULT NULL,\n  `created_at` timestamp NULL DEFAULT NULL,\n  `updated_at` timestamp NULL DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `uniq_email` (`email`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nLOCK TABLES `users` WRITE;\n/*!40000 ALTER TABLE `users` DISABLE KEYS */;\n\nINSERT INTO `users` (`id`, `uuid`, `username`, `name`, `password`, `avatar`, `phone`, `email`, `is_admin`, `status`, `deleted_at`, `created_at`, `updated_at`)\nVALUES\n\t(1,'36882544-3bf5-4065-86a7-9b2188d71a1b','Admin','Admin','$2a$10$XkuHQPH9jJ6GZ3GL9IR8U.7xN0gH6zSiO5fIQIfESZ8eagPo/Jnii','',0,'admin@admin.com',1,1,NULL,'2020-10-13 16:22:20','2020-10-13 16:22:20');\n\n/*!40000 ALTER TABLE `users` ENABLE KEYS */;\nUNLOCK TABLES;\n\n\n\n/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;\n/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;\n/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;\n/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;\n/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;\n/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "nocalhost-nginx-config"
    },
    "data": {
      "nocalhost-nginx.conf": "server {\n    listen       80;\n    listen  [::]:80;\n    server_name  localhost;\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n        try_files $uri /index.html;\n    }\n    location /v1 {\n        proxy_pass http://nocalhost-api:8080;\n    }\n    location /v2 {\n        proxy_pass http://nocalhost-api:8080;\n    }\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n}"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "nocalhost-api"
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 8080,
          "targetPort": "http",
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app": "nocalhost-api"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "nocalhost-web"
    },
    "spec": {
      "type": "LoadBalancer",
      "ports": [
        {
          "port": 80,
          "targetPort": 80,
          "protocol": "TCP",
          "name": "http"
        }
      ],
      "selector": {
        "app": "nocalhost-web"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "nocalhost-api",
      "labels": {
        "app": "nocalhost-api"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "nocalhost-api"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "nocalhost-api"
          }
        },
        "spec": {
          "securityContext": {},
          "containers": [
            {
              "name": "nocalhost-api",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "nocalhost-docker.pkg.coding.net/nocalhost/public/nocalhost-api:v0.6.18",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 8080,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/health",
                  "port": "http"
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/health",
                  "port": "http"
                }
              },
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "command": [
                "/app/nocalhost-api",
                "-c",
                "/app/config/config.yaml"
              ],
              "volumeMounts": [
                {
                  "name": "config-volume",
                  "mountPath": "/app/config"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config-volume",
              "configMap": {
                "name": "nocalhost-api-config"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "nocalhost-web",
      "labels": {
        "app": "nocalhost-web"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "nocalhost-web"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "nocalhost-web"
          }
        },
        "spec": {
          "securityContext": {},
          "containers": [
            {
              "name": "nocalhost-web",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "image": "nocalhost-docker.pkg.coding.net/nocalhost/public/nocalhost-web:v0.6.18",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80,
                  "protocol": "TCP"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 80
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 80
                }
              },
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                },
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "volumeMounts": [
                {
                  "name": "nocalhost-nginx-config",
                  "mountPath": "/etc/nginx/conf.d/"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "nocalhost-nginx-config",
              "configMap": {
                "name": "nocalhost-nginx-config"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "nocalhost-mariadb",
      "namespace": "jIM6vLjX0",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-9.0.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "pre-install",
        "helm.sh/hook-weight": "1"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "nocalhost-mariadb",
      "namespace": "jIM6vLjX0",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-9.0.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "pre-install",
        "helm.sh/hook-weight": "1"
      }
    },
    "type": "Opaque",
    "data": {
      "mariadb-root-password": "cm9vdA==",
      "mariadb-password": "ZGlrelBsQkpMZQ=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "nocalhost-mariadb",
      "namespace": "jIM6vLjX0",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-9.0.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": {
        "helm.sh/hook": "pre-install",
        "helm.sh/hook-weight": "1"
      }
    },
    "data": {
      "my.cnf": "[mysqld]\nskip-name-resolve\nexplicit_defaults_for_timestamp\nbasedir=/opt/bitnami/mariadb\nplugin_dir=/opt/bitnami/mariadb/plugin\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\ntmpdir=/opt/bitnami/mariadb/tmp\nmax_allowed_packet=16M\nbind-address=0.0.0.0\npid-file=/opt/bitnami/mariadb/tmp/mysqld.pid\nlog-error=/opt/bitnami/mariadb/logs/mysqld.log\ncharacter-set-server=UTF8\ncollation-server=utf8_general_ci\n\n[client]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\ndefault-character-set=UTF8\nplugin_dir=/opt/bitnami/mariadb/plugin\n\n[manager]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\npid-file=/opt/bitnami/mariadb/tmp/mysqld.pid"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "nocalhost-mariadb",
      "namespace": "jIM6vLjX0",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-9.0.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": {
        "helm.sh/hook": "pre-install",
        "helm.sh/hook-weight": "1"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "mysql",
          "port": 3306,
          "protocol": "TCP",
          "targetPort": "mysql",
          "nodePort": null
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "mariadb",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/component": "primary"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-nocalhost-test-connection",
      "labels": {
        "helm.sh/chart": "nocalhost-0.6.18",
        "app.kubernetes.io/name": "nocalhost",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "v0.6.18",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "containers": [
        {
          "name": "wget",
          "image": "busybox",
          "command": [
            "wget"
          ],
          "args": [
            "release-name-nocalhost:80"
          ]
        }
      ],
      "restartPolicy": "Never"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "nocalhost-mariadb",
      "namespace": "jIM6vLjX0",
      "labels": {
        "app.kubernetes.io/name": "mariadb",
        "helm.sh/chart": "mariadb-9.0.1",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/component": "primary"
      },
      "annotations": {
        "helm.sh/hook": "pre-install",
        "helm.sh/hook-weight": "1"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "mariadb",
          "app.kubernetes.io/instance": "release-name",
          "app.kubernetes.io/component": "primary"
        }
      },
      "serviceName": "nocalhost-mariadb",
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "annotations": {
            "checksum/configuration": "f973106d5228c0a6ee0e212afa9d4406fda84fe32afc0c0a0d48d411a9a886f3"
          },
          "labels": {
            "app.kubernetes.io/name": "mariadb",
            "helm.sh/chart": "mariadb-9.0.1",
            "app.kubernetes.io/instance": "release-name",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "primary"
          }
        },
        "spec": {
          "serviceAccountName": "nocalhost-mariadb",
          "affinity": {
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/name": "mariadb",
                        "app.kubernetes.io/instance": "release-name",
                        "app.kubernetes.io/component": "primary"
                      }
                    },
                    "namespaces": [
                      "default"
                    ],
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            },
            "nodeAffinity": null
          },
          "securityContext": {
            "fsGroup": 1001
          },
          "containers": [
            {
              "name": "mariadb",
              "image": "nocalhost-docker.pkg.coding.net/nocalhost/public/mariadb:10.5.8-debian-10-r0",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "runAsUser": 11434,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "readOnlyRootFilesystem": true
              },
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "MARIADB_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "nocalhost-mariadb",
                      "key": "mariadb-root-password"
                    }
                  }
                },
                {
                  "name": "MARIADB_DATABASE",
                  "value": "nocalhost"
                }
              ],
              "ports": [
                {
                  "name": "mysql",
                  "containerPort": 3306
                }
              ],
              "livenessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 120,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                  ]
                }
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\" ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\nfi\nmysqladmin status -uroot -p\"${password_aux}\"\n"
                  ]
                }
              },
              "resources": {
                "limits": {},
                "requests": {
                  "cpu": "100m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/bitnami/mariadb"
                },
                {
                  "name": "config",
                  "mountPath": "/opt/bitnami/mariadb/conf/my.cnf",
                  "subPath": "my.cnf"
                },
                {
                  "mountPath": "/docker-entrypoint-initdb.d/",
                  "name": "nocalhost-api-sql-config-volume"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "nocalhost-mariadb"
              }
            },
            {
              "configMap": {
                "defaultMode": 493,
                "name": "nocalhost-api-sql-init-config"
              },
              "name": "nocalhost-api-sql-config-volume"
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "data",
            "labels": {
              "app.kubernetes.io/name": "mariadb",
              "app.kubernetes.io/instance": "release-name",
              "app.kubernetes.io/component": "primary"
            }
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "10Gi"
              }
            }
          }
        }
      ]
    }
  }
]