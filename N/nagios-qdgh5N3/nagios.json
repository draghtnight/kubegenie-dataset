[
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "nagios",
      "namespace": "qdgh5N3"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-test",
      "namespace": "qdgh5N3"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "nagios-etc"
    },
    "type": "Opaque",
    "data": {
      "nagios.cfg": "YWNjZXB0X3Bhc3NpdmVfaG9zdF9jaGVja3M9MQphY2NlcHRfcGFzc2l2ZV9zZXJ2aWNlX2NoZWNrcz0xCmFkZGl0aW9uYWxfZnJlc2huZXNzX2xhdGVuY3k9MTUKYWxsb3dfZW1wdHlfaG9zdGdyb3VwX2Fzc2lnbm1lbnQ9MQphdXRvX3Jlc2NoZWR1bGVfY2hlY2tzPTAKYXV0b19yZXNjaGVkdWxpbmdfaW50ZXJ2YWw9MzAKYXV0b19yZXNjaGVkdWxpbmdfd2luZG93PTE4MApiYXJlX3VwZGF0ZV9jaGVjaz0wCmNhY2hlZF9ob3N0X2NoZWNrX2hvcml6b249MTUKY2FjaGVkX3NlcnZpY2VfY2hlY2tfaG9yaXpvbj0xNQpjZmdfZmlsZT0vb3B0L25hZ2lvcy9ldGMvY2VwaC5jZmcKY2ZnX2ZpbGU9L29wdC9uYWdpb3MvZXRjL2t1YmVybmV0ZXMuY2ZnCmNmZ19maWxlPS9vcHQvbmFnaW9zL2V0Yy9ub2RlLmNmZwpjZmdfZmlsZT0vb3B0L25hZ2lvcy9ldGMvYmFzZS5jZmcKY2ZnX2ZpbGU9L29wdC9uYWdpb3MvZXRjL29iamVjdHMvY29tbWFuZHMuY2ZnCmNmZ19maWxlPS9vcHQvbmFnaW9zL2V0Yy9vYmplY3RzL2NvbnRhY3RzLmNmZwpjZmdfZmlsZT0vb3B0L25hZ2lvcy9ldGMvb2JqZWN0cy90aW1lcGVyaW9kcy5jZmcKY2ZnX2ZpbGU9L29wdC9uYWdpb3MvZXRjL29iamVjdHMvdGVtcGxhdGVzLmNmZwpjZmdfZmlsZT0vb3B0L25hZ2lvcy9ldGMvY29uZi5kL25hZ2lvcy1ob3N0cy5jZmcKCmNoZWNrX2V4dGVybmFsX2NvbW1hbmRzPTEKY2hlY2tfZm9yX29ycGhhbmVkX2hvc3RzPTEKY2hlY2tfZm9yX29ycGhhbmVkX3NlcnZpY2VzPTEKY2hlY2tfZm9yX3VwZGF0ZXM9MQpjaGVja19ob3N0X2ZyZXNobmVzcz0wCmNoZWNrX3Jlc3VsdF9wYXRoPS9vcHQvbmFnaW9zL3Zhci9zcG9vbC9jaGVja3Jlc3VsdHMKY2hlY2tfcmVzdWx0X3JlYXBlcl9mcmVxdWVuY3k9MTAKY2hlY2tfc2VydmljZV9mcmVzaG5lc3M9MQpjaGVja193b3JrZXJzPTQKY29tbWFuZF9maWxlPS9vcHQvbmFnaW9zL3Zhci9ydy9uYWdpb3MuY21kCmRhZW1vbl9kdW1wc19jb3JlPTAKZGF0ZV9mb3JtYXQ9dXMKZGVidWdfZmlsZT0vb3B0L25hZ2lvcy92YXIvbmFnaW9zLmRlYnVnCmRlYnVnX2xldmVsPTAKZGVidWdfdmVyYm9zaXR5PTEKZW5hYmxlX2Vudmlyb25tZW50X21hY3Jvcz0wCmVuYWJsZV9ldmVudF9oYW5kbGVycz0xCmVuYWJsZV9mbGFwX2RldGVjdGlvbj0xCmVuYWJsZV9ub3RpZmljYXRpb25zPTEKZW5hYmxlX3ByZWRpY3RpdmVfaG9zdF9kZXBlbmRlbmN5X2NoZWNrcz0xCmVuYWJsZV9wcmVkaWN0aXZlX3NlcnZpY2VfZGVwZW5kZW5jeV9jaGVja3M9MQpldmVudF9icm9rZXJfb3B0aW9ucz0tMQpldmVudF9oYW5kbGVyX3RpbWVvdXQ9NjAKZXhlY3V0ZV9ob3N0X2NoZWNrcz0xCmV4ZWN1dGVfc2VydmljZV9jaGVja3M9MQpoaWdoX2hvc3RfZmxhcF90aHJlc2hvbGQ9MjAKaGlnaF9zZXJ2aWNlX2ZsYXBfdGhyZXNob2xkPTIwCmhvc3RfY2hlY2tfdGltZW91dD02MApob3N0X2ZyZXNobmVzc19jaGVja19pbnRlcnZhbD02MApob3N0X2ludGVyX2NoZWNrX2RlbGF5X21ldGhvZD1zCmlsbGVnYWxfbWFjcm9fb3V0cHV0X2NoYXJzPWB+JCZ8Jzw+IgppbnRlcnZhbF9sZW5ndGg9MQpsb2NrX2ZpbGU9L3Zhci9ydW4vbmFnaW9zLmxvY2sKbG9nX2FyY2hpdmVfcGF0aD0vb3B0L25hZ2lvcy92YXIvbG9nL2FyY2hpdmVzCmxvZ19jdXJyZW50X3N0YXRlcz0xCmxvZ19ldmVudF9oYW5kbGVycz0xCmxvZ19leHRlcm5hbF9jb21tYW5kcz0xCmxvZ19maWxlPS9vcHQvbmFnaW9zL3Zhci9sb2cvbmFnaW9zLmxvZwpsb2dfaG9zdF9yZXRyaWVzPTEKbG9nX2luaXRpYWxfc3RhdGVzPTAKbG9nX25vdGlmaWNhdGlvbnM9MApsb2dfcGFzc2l2ZV9jaGVja3M9MQpsb2dfcm90YXRpb25fbWV0aG9kPWQKbG9nX3NlcnZpY2VfcmV0cmllcz0xCmxvd19ob3N0X2ZsYXBfdGhyZXNob2xkPTUKbG93X3NlcnZpY2VfZmxhcF90aHJlc2hvbGQ9NQptYXhfY2hlY2tfcmVzdWx0X2ZpbGVfYWdlPTM2MDAKbWF4X2NoZWNrX3Jlc3VsdF9yZWFwZXJfdGltZT0zMAptYXhfY29uY3VycmVudF9jaGVja3M9MTAKbWF4X2RlYnVnX2ZpbGVfc2l6ZT0xZSswNgptYXhfaG9zdF9jaGVja19zcHJlYWQ9MzAKbWF4X3NlcnZpY2VfY2hlY2tfc3ByZWFkPTMwCm5hZ2lvc19ncm91cD1uYWdpb3MKbmFnaW9zX3VzZXI9bmFnaW9zCm5vdGlmaWNhdGlvbl90aW1lb3V0PTYwCm9iamVjdF9jYWNoZV9maWxlPS9vcHQvbmFnaW9zL3Zhci9vYmplY3RzLmNhY2hlCm9ic2Vzc19vdmVyX2hvc3RzPTAKb2JzZXNzX292ZXJfc2VydmljZXM9MApvY3NwX3RpbWVvdXQ9NQpwYXNzaXZlX2hvc3RfY2hlY2tzX2FyZV9zb2Z0PTAKcGVyZmRhdGFfdGltZW91dD01CnByZWNhY2hlZF9vYmplY3RfZmlsZT0vb3B0L25hZ2lvcy92YXIvb2JqZWN0cy5wcmVjYWNoZQpwcm9jZXNzX3BlcmZvcm1hbmNlX2RhdGE9MApyZXNvdXJjZV9maWxlPS9vcHQvbmFnaW9zL2V0Yy9yZXNvdXJjZS5jZmcKcmV0YWluX3N0YXRlX2luZm9ybWF0aW9uPTEKcmV0YWluZWRfY29udGFjdF9ob3N0X2F0dHJpYnV0ZV9tYXNrPTAKcmV0YWluZWRfY29udGFjdF9zZXJ2aWNlX2F0dHJpYnV0ZV9tYXNrPTAKcmV0YWluZWRfaG9zdF9hdHRyaWJ1dGVfbWFzaz0wCnJldGFpbmVkX3Byb2Nlc3NfaG9zdF9hdHRyaWJ1dGVfbWFzaz0wCnJldGFpbmVkX3Byb2Nlc3Nfc2VydmljZV9hdHRyaWJ1dGVfbWFzaz0wCnJldGFpbmVkX3NlcnZpY2VfYXR0cmlidXRlX21hc2s9MApyZXRlbnRpb25fdXBkYXRlX2ludGVydmFsPTYwCnNlcnZpY2VfY2hlY2tfdGltZW91dD02MApzZXJ2aWNlX2ZyZXNobmVzc19jaGVja19pbnRlcnZhbD02MApzZXJ2aWNlX2ludGVyX2NoZWNrX2RlbGF5X21ldGhvZD1zCnNlcnZpY2VfaW50ZXJsZWF2ZV9mYWN0b3I9cwpzb2Z0X3N0YXRlX2RlcGVuZGVuY2llcz0wCnN0YXRlX3JldGVudGlvbl9maWxlPS9vcHQvbmFnaW9zL3Zhci9yZXRlbnRpb24uZGF0CnN0YXR1c19maWxlPS9vcHQvbmFnaW9zL3Zhci9zdGF0dXMuZGF0CnN0YXR1c191cGRhdGVfaW50ZXJ2YWw9MTAKdGVtcF9maWxlPS9vcHQvbmFnaW9zL3Zhci9uYWdpb3MudG1wCnRlbXBfcGF0aD0vdG1wCnRyYW5zbGF0ZV9wYXNzaXZlX2hvc3RfY2hlY2tzPTAKdXNlX2FnZ3Jlc3NpdmVfaG9zdF9jaGVja2luZz0wCnVzZV9sYXJnZV9pbnN0YWxsYXRpb25fdHdlYWtzPTAKdXNlX3JlZ2V4cF9tYXRjaGluZz0xCnVzZV9yZXRhaW5lZF9wcm9ncmFtX3N0YXRlPTEKdXNlX3JldGFpbmVkX3NjaGVkdWxpbmdfaW5mbz0xCnVzZV9zeXNsb2c9MAp1c2VfdHJ1ZV9yZWdleHBfbWF0Y2hpbmc9MA==",
      "cgi.cfg": "YWN0aW9uX3VybF90YXJnZXQ9X2JsYW5rCmF1dGhvcml6ZWRfZm9yX2FsbF9ob3N0X2NvbW1hbmRzPSoKYXV0aG9yaXplZF9mb3JfYWxsX2hvc3RzPSoKYXV0aG9yaXplZF9mb3JfYWxsX3NlcnZpY2VfY29tbWFuZHM9KgphdXRob3JpemVkX2Zvcl9hbGxfc2VydmljZXM9KgphdXRob3JpemVkX2Zvcl9jb25maWd1cmF0aW9uX2luZm9ybWF0aW9uPSoKYXV0aG9yaXplZF9mb3Jfc3lzdGVtX2NvbW1hbmRzPW5hZ2lvc2FkbWluCmF1dGhvcml6ZWRfZm9yX3N5c3RlbV9pbmZvcm1hdGlvbj0qCmRlZmF1bHRfc3RhdHVzd3JsX2xheW91dD00CmVuYWJsZV9wYWdlX3RvdXI9MAplc2NhcGVfaHRtbF90YWdzPTEKbG9ja19hdXRob3JfbmFtZXM9MQptYWluX2NvbmZpZ19maWxlPS9vcHQvbmFnaW9zL2V0Yy9uYWdpb3MuY2ZnCm5hdmJhcl9zZWFyY2hfZm9yX2FkZHJlc3Nlcz0xCm5hdmJhcl9zZWFyY2hfZm9yX2FsaWFzZXM9MQpub3Rlc191cmxfdGFyZ2V0PV9ibGFuawpwaHlzaWNhbF9odG1sX3BhdGg9L29wdC9uYWdpb3Mvc2hhcmUKcGluZ19zeW50YXg9L2Jpbi9waW5nIC1uIC1VIC1jIDUgJEhPU1RBRERSRVNTJApyZWZyZXNoX3JhdGU9OTAKcmVzdWx0X2xpbWl0PTEwMApzaG93X2NvbnRleHRfaGVscD0wCnVybF9odG1sX3BhdGg9L25hZ2lvcwp1c2VfYXV0aGVudGljYXRpb249MAp1c2VfcGVuZGluZ19zdGF0ZXM9MQp1c2Vfc3NsX2F1dGhlbnRpY2F0aW9uPTA=",
      "base.cfg": "ZGVmaW5lIGhvc3QgewogIGFkZHJlc3MgMTI3LjAuMC4xCiAgYWxpYXMgUHJvbWV0aGV1cyBNb25pdG9yaW5nCiAgY2hlY2tfY29tbWFuZCBjaGVjay1wcm9tZXRoZXVzLWhvc3QtYWxpdmUKICBob3N0X25hbWUgcHJvbWV0aGV1cwogIGhvc3Rncm91cHMgcHJvbWV0aGV1cy1ob3N0cwogIHVzZSBsaW51eC1zZXJ2ZXIKfQoKZGVmaW5lIGNvbnRhY3QgewogIGFsaWFzIG5vdGlmeWluZyBjb250YWN0CiAgY29udGFjdF9uYW1lIG5vdGlmeWluZ19jb250YWN0CiAgaG9zdF9ub3RpZmljYXRpb25fb3B0aW9ucyBkLHUscixmLHMKICBob3N0X25vdGlmaWNhdGlvbl9wZXJpb2QgMjR4NwogIG5hbWUgbm90aWZ5aW5nX2NvbnRhY3QKICByZWdpc3RlciAwCiAgc2VydmljZV9ub3RpZmljYXRpb25fb3B0aW9ucyB3LHUsYyxyLGYscwogIHNlcnZpY2Vfbm90aWZpY2F0aW9uX3BlcmlvZCAyNHg3Cn0KCmRlZmluZSBjb250YWN0IHsKICBhbGlhcyBzbm1wIGNvbnRhY3QKICBjb250YWN0X25hbWUgc25tcF9ub3RpZnlpbmdfY29udGFjdAogIGhvc3Rfbm90aWZpY2F0aW9uX2NvbW1hbmRzIHNlbmRfaG9zdF9zbm1wX3RyYXAKICBuYW1lIHNubXBfbm90aWZ5aW5nX2NvbnRhY3QKICBzZXJ2aWNlX25vdGlmaWNhdGlvbl9jb21tYW5kcyBzZW5kX3NlcnZpY2Vfc25tcF90cmFwCiAgdXNlIG5vdGlmeWluZ19jb250YWN0Cn0KCmRlZmluZSBjb250YWN0IHsKICBhbGlhcyBIVFRQIGNvbnRhY3QKICBjb250YWN0X25hbWUgaHR0cF9ub3RpZnlpbmdfY29udGFjdAogIGhvc3Rfbm90aWZpY2F0aW9uX2NvbW1hbmRzIHNlbmRfaG9zdF9odHRwX3Bvc3QKICBuYW1lIGh0dHBfbm90aWZ5aW5nX2NvbnRhY3QKICBzZXJ2aWNlX25vdGlmaWNhdGlvbl9jb21tYW5kcyBzZW5kX3NlcnZpY2VfaHR0cF9wb3N0CiAgdXNlIG5vdGlmeWluZ19jb250YWN0Cn0KCmRlZmluZSBjb250YWN0Z3JvdXAgewogIGFsaWFzIFNOTVAgYW5kIEhUVFAgbm90aWZ5aW5nIGdyb3VwCiAgY29udGFjdGdyb3VwX25hbWUgc25tcF9hbmRfaHR0cF9ub3RpZnlpbmdfY29udGFjdF9ncm91cAogIG1lbWJlcnMgc25tcF9ub3RpZnlpbmdfY29udGFjdCxodHRwX25vdGlmeWluZ19jb250YWN0Cn0KCmRlZmluZSBob3N0Z3JvdXAgewogIGFsaWFzIFByb21ldGhldXMgVmlydHVhbCBIb3N0CiAgaG9zdGdyb3VwX25hbWUgcHJvbWV0aGV1cy1ob3N0cwp9CgpkZWZpbmUgaG9zdGdyb3VwIHsKICBhbGlhcyBhbGwKICBob3N0Z3JvdXBfbmFtZSBhbGwKfQoKZGVmaW5lIGhvc3Rncm91cCB7CiAgYWxpYXMgYmFzZS1vcwogIGhvc3Rncm91cF9uYW1lIGJhc2Utb3MKfQoKZGVmaW5lIGNvbW1hbmQgewogIGNvbW1hbmRfbGluZSAkVVNFUjEkL3NlbmRfc2VydmljZV90cmFwLnNoICckVVNFUjgkJyAnJEhPU1ROQU1FJCcgJyRTRVJWSUNFREVTQyQnICRTRVJWSUNFU1RBVEVJRCQgJyRTRVJWSUNFT1VUUFVUJCcgJyRVU0VSNCQnICckVVNFUjUkJwogIGNvbW1hbmRfbmFtZSBzZW5kX3NlcnZpY2Vfc25tcF90cmFwCn0KCmRlZmluZSBjb21tYW5kIHsKICBjb21tYW5kX2xpbmUgJFVTRVIxJC9zZW5kX2hvc3RfdHJhcC5zaCAnJFVTRVI4JCcgJyRIT1NUTkFNRSQnICRIT1NUU1RBVEVJRCQgJyRIT1NUT1VUUFVUJCcgJyRVU0VSNCQnICckVVNFUjUkJwogIGNvbW1hbmRfbmFtZSBzZW5kX2hvc3Rfc25tcF90cmFwCn0KCmRlZmluZSBjb21tYW5kIHsKICBjb21tYW5kX2xpbmUgJFVTRVIxJC9zZW5kX2h0dHBfcG9zdF9ldmVudC5weSAtLXR5cGUgc2VydmljZSAtLWhvc3RuYW1lICckSE9TVE5BTUUkJyAtLXNlcnZpY2VkZXNjICckU0VSVklDRURFU0MkJyAtLXN0YXRlX2lkICRTRVJWSUNFU1RBVEVJRCQgLS1vdXRwdXQgJyRTRVJWSUNFT1VUUFVUJCcgLS1tb25pdG9yaW5nX2hvc3RuYW1lICckSE9TVE5BTUUkJyAtLXByaW1hcnlfdXJsICckVVNFUjYkJyAtLXNlY29uZGFyeV91cmwgJyRVU0VSNyQnCiAgY29tbWFuZF9uYW1lIHNlbmRfc2VydmljZV9odHRwX3Bvc3QKfQoKZGVmaW5lIGNvbW1hbmQgewogIGNvbW1hbmRfbGluZSAkVVNFUjEkL3NlbmRfaHR0cF9wb3N0X2V2ZW50LnB5IC0tdHlwZSBob3N0IC0taG9zdG5hbWUgJyRIT1NUTkFNRSQnIC0tc3RhdGVfaWQgJEhPU1RTVEFURUlEJCAtLW91dHB1dCAnJEhPU1RPVVRQVVQkJyAtLW1vbml0b3JpbmdfaG9zdG5hbWUgJyRIT1NUTkFNRSQnIC0tcHJpbWFyeV91cmwgJyRVU0VSNiQnIC0tc2Vjb25kYXJ5X3VybCAnJFVTRVI3JCcKICBjb21tYW5kX25hbWUgc2VuZF9ob3N0X2h0dHBfcG9zdAp9CgpkZWZpbmUgY29tbWFuZCB7CiAgY29tbWFuZF9saW5lICRVU0VSMSQvY2hlY2tfcmVzdF9nZXRfYXBpLnB5IC0tdXJsICRVU0VSMiQgLS13YXJuaW5nX3Jlc3BvbnNlX3NlY29uZHMgNSAtLWNyaXRpY2FsX3Jlc3BvbnNlX3NlY29uZHMgMTAKICBjb21tYW5kX25hbWUgY2hlY2stcHJvbWV0aGV1cy1ob3N0LWFsaXZlCn0KCmRlZmluZSBjb21tYW5kIHsKICBjb21tYW5kX2xpbmUgJFVTRVIxJC9xdWVyeV9wcm9tZXRoZXVzX2FsZXJ0cy5weSAtLXByb21ldGhldXNfYXBpICRVU0VSMiQgLS1hbGVydG5hbWUgJyRBUkcxJCcgLS1sYWJlbHNfY3N2ICckQVJHMiQnIC0tbXNnX2Zvcm1hdCAnJEFSRzMkJyAtLW9rX21lc3NhZ2UgJyRBUkc0JCcKICBjb21tYW5kX25hbWUgY2hlY2tfcHJvbV9hbGVydF93aXRoX2xhYmVscwp9CgpkZWZpbmUgY29tbWFuZCB7CiAgY29tbWFuZF9saW5lICRVU0VSMSQvcXVlcnlfcHJvbWV0aGV1c19hbGVydHMucHkgLS1wcm9tZXRoZXVzX2FwaSAkVVNFUjIkIC0tYWxlcnRuYW1lICckQVJHMSQnIC0tbXNnX2Zvcm1hdCAnJEFSRzIkJyAtLW9rX21lc3NhZ2UgJyRBUkczJCcKICBjb21tYW5kX25hbWUgY2hlY2tfcHJvbV9hbGVydAp9CgpkZWZpbmUgc2VydmljZSB7CiAgY2hlY2tfaW50ZXJ2YWwgNjAKICBjb250YWN0X2dyb3VwcyBzbm1wX2FuZF9odHRwX25vdGlmeWluZ19jb250YWN0X2dyb3VwCiAgZmxhcF9kZXRlY3Rpb25fZW5hYmxlZCAwCiAgbmFtZSBub3RpZnlpbmdfc2VydmljZQogIG5vdGlmaWNhdGlvbl9pbnRlcnZhbCAxMjAKICBwcm9jZXNzX3BlcmZfZGF0YSAwCiAgcmVnaXN0ZXIgMAogIHJldHJ5X2ludGVydmFsIDMwCiAgdXNlIGdlbmVyaWMtc2VydmljZQp9",
      "ceph.cfg": "ZGVmaW5lIHNlcnZpY2UgewogIGNoZWNrX2NvbW1hbmQgY2hlY2tfcHJvbV9hbGVydCFwcm9tX2V4cG9ydGVyX2NlcGhfdW5hdmFpbGFibGUhQ1JJVElDQUwtIENFUEggZXhwb3J0ZXIgaXMgbm90IGNvbGxlY3RpbmcgbWV0cmljcyBmb3IgYWxlcnRpbmchT0stIENFUEggZXhwb3J0ZXIgbWV0cmljcyBhcmUgYXZhaWxhYmxlLgogIGhvc3Rncm91cF9uYW1lIHByb21ldGhldXMtaG9zdHMKICBzZXJ2aWNlX2Rlc2NyaXB0aW9uIFByb21ldGhldXMtZXhwb3J0ZXJfQ0VQSAogIHVzZSBnZW5lcmljLXNlcnZpY2UKfQoKZGVmaW5lIGNvbW1hbmQgewogIGNvbW1hbmRfbGluZSAkVVNFUjEkL2NoZWNrX2V4cG9ydGVyX2hlYWx0aF9tZXRyaWMucHkgLS1leHBvcnRlcl9hcGkgJFVTRVIxMCQgLS1oZWFsdGhfbWV0cmljIGNlcGhfaGVhbHRoX3N0YXR1cyAtLWNyaXRpY2FsIDIgLS13YXJuaW5nIDEKICBjb21tYW5kX25hbWUgY2hlY2tfY2VwaF9oZWFsdGgKfQoKZGVmaW5lIHNlcnZpY2UgewogIGNoZWNrX2NvbW1hbmQgY2hlY2tfY2VwaF9oZWFsdGgKICBjaGVja19pbnRlcnZhbCAzMDAKICBob3N0Z3JvdXBfbmFtZSBiYXNlLW9zCiAgc2VydmljZV9kZXNjcmlwdGlvbiBDRVBIX2hlYWx0aAogIHVzZSBub3RpZnlpbmdfc2VydmljZQp9CgpkZWZpbmUgc2VydmljZSB7CiAgY2hlY2tfY29tbWFuZCBjaGVja19wcm9tX2FsZXJ0IWNlcGhfbW9uaXRvcl9xdW9ydW1fbG93IUNSSVRJQ0FMLSBjZXBoIG1vbml0b3IgcXVvcnVtIGRvZXMgbm90IGV4aXN0IU9LLSBjZXBoIG1vbml0b3IgcXVvcnVtIGV4aXN0cwogIGNoZWNrX2ludGVydmFsIDYwCiAgaG9zdGdyb3VwX25hbWUgcHJvbWV0aGV1cy1ob3N0cwogIHNlcnZpY2VfZGVzY3JpcHRpb24gQ0VQSF9xdW9ydW0KICB1c2Ugbm90aWZ5aW5nX3NlcnZpY2UKfQoKZGVmaW5lIHNlcnZpY2UgewogIGNoZWNrX2NvbW1hbmQgY2hlY2tfcHJvbV9hbGVydCFjZXBoX21vbml0b3JfcXVvcnVtX2Fic2VudCFDUklUSUNBTC0gY2VwaCBtb25pdG9yIHF1b3J1bSBkb2VzIG5vdCBleGlzdCFPSy0gY2VwaCBtb25pdG9yIHF1b3J1bSBleGlzdHMKICBjaGVja19pbnRlcnZhbCA2MAogIGhvc3Rncm91cF9uYW1lIHByb21ldGhldXMtaG9zdHMKICBzZXJ2aWNlX2Rlc2NyaXB0aW9uIENFUEhfcXVvcnVtCiAgdXNlIG5vdGlmeWluZ19zZXJ2aWNlCn0KCmRlZmluZSBzZXJ2aWNlIHsKICBjaGVja19jb21tYW5kIGNoZWNrX3Byb21fYWxlcnQhY2VwaF9jbHVzdGVyX3VzYWdlX2hpZ2ghQ1JJVElDQUwtIGNlcGggY2x1c3RlciBzdG9yYWdlIGlzIG1vcmUgdGhhbiA4MCBwZXJjZW50IU9LLSBjZXBoIHN0b3JhZ2UgaXMgbGVzcyB0aGFuIDgwIHBlcmNlbnQKICBjaGVja19pbnRlcnZhbCA2MAogIGhvc3Rncm91cF9uYW1lIHByb21ldGhldXMtaG9zdHMKICBzZXJ2aWNlX2Rlc2NyaXB0aW9uIENFUEhfc3RvcmFnZS11c2FnZQogIHVzZSBub3RpZnlpbmdfc2VydmljZQp9CgpkZWZpbmUgc2VydmljZSB7CiAgY2hlY2tfY29tbWFuZCBjaGVja19wcm9tX2FsZXJ0IWNlcGhfcGxhY2VtZW50X2dyb3VwX2RlZ3JhZGVfcGN0X2hpZ2ghQ1JJVElDQUwtIGNlcGggY2x1c3RlciBQR3MgZG93biBhcmUgbW9yZSB0aGFuIDgwIHBlcmNlbnQhT0stIGNlcGggUEcgZGVncmFkYXRpb24gaXMgbGVzcyB0aGFuIDgwIHBlcmNlbnQKICBjaGVja19pbnRlcnZhbCA2MAogIGhvc3Rncm91cF9uYW1lIHByb21ldGhldXMtaG9zdHMKICBzZXJ2aWNlX2Rlc2NyaXB0aW9uIENFUEhfUEdzLWRlZ3JhZGF0aW9uCiAgdXNlIG5vdGlmeWluZ19zZXJ2aWNlCn0KCmRlZmluZSBzZXJ2aWNlIHsKICBjaGVja19jb21tYW5kIGNoZWNrX3Byb21fYWxlcnQhY2VwaF9vc2RfZG93biFDUklUSUNBTC0gT25lIG9yIG1vcmUgQ0VQSCBPU0RzIGFyZSBkb3duIGZvciBtb3JlIHRoYW4gNSBtaW51dGVzIU9LLSBBbGwgdGhlIENFUEggT1NEcyBhcmUgdXAKICBjaGVja19pbnRlcnZhbCA2MAogIGhvc3Rncm91cF9uYW1lIHByb21ldGhldXMtaG9zdHMKICBzZXJ2aWNlX2Rlc2NyaXB0aW9uIENFUEhfT1NEcy1kb3duCiAgdXNlIG5vdGlmeWluZ19zZXJ2aWNlCn0KCmRlZmluZSBzZXJ2aWNlIHsKICBjaGVja19jb21tYW5kIGNoZWNrX3Byb21fYWxlcnRfd2l0aF9sYWJlbHMhbm9kZV9udHBfY2xvY2tfc2tld19oaWdoIWNlcGgtbW9uPSJlbmFibGVkIiFDUklUSUNBTC0gQ0VQSCBjbG9jayBza2V3IGlzIG1vcmUgdGhhbiAyIHNlY29uZHMhT0stIENFUEggY2xvY2sgc2tldyBpcyBsZXNzIHRoYW4gMiBzZWNvbmRzCiAgY2hlY2tfaW50ZXJ2YWwgNjAKICBob3N0Z3JvdXBfbmFtZSBwcm9tZXRoZXVzLWhvc3RzCiAgc2VydmljZV9kZXNjcmlwdGlvbiBDRVBIX0Nsb2NrLXNrZXcKICB1c2Ugbm90aWZ5aW5nX3NlcnZpY2UKfQ==",
      "kubernetes.cfg": "",
      "node.cfg": "",
      "httpd.conf": "U2VydmVyUm9vdCAiL3Vzci9sb2NhbC9hcGFjaGUyIgoKTGlzdGVuIDgwCgpMb2FkTW9kdWxlIG1wbV9ldmVudF9tb2R1bGUgbW9kdWxlcy9tb2RfbXBtX2V2ZW50LnNvCkxvYWRNb2R1bGUgYXV0aG5fZmlsZV9tb2R1bGUgbW9kdWxlcy9tb2RfYXV0aG5fZmlsZS5zbwpMb2FkTW9kdWxlIGF1dGhuX2NvcmVfbW9kdWxlIG1vZHVsZXMvbW9kX2F1dGhuX2NvcmUuc28KTG9hZE1vZHVsZSBhdXRoel9ob3N0X21vZHVsZSBtb2R1bGVzL21vZF9hdXRoel9ob3N0LnNvCkxvYWRNb2R1bGUgYXV0aHpfZ3JvdXBmaWxlX21vZHVsZSBtb2R1bGVzL21vZF9hdXRoel9ncm91cGZpbGUuc28KTG9hZE1vZHVsZSBhdXRoel91c2VyX21vZHVsZSBtb2R1bGVzL21vZF9hdXRoel91c2VyLnNvCkxvYWRNb2R1bGUgYXV0aHpfY29yZV9tb2R1bGUgbW9kdWxlcy9tb2RfYXV0aHpfY29yZS5zbwpMb2FkTW9kdWxlIGFjY2Vzc19jb21wYXRfbW9kdWxlIG1vZHVsZXMvbW9kX2FjY2Vzc19jb21wYXQuc28KTG9hZE1vZHVsZSBhdXRoX2Jhc2ljX21vZHVsZSBtb2R1bGVzL21vZF9hdXRoX2Jhc2ljLnNvCkxvYWRNb2R1bGUgbGRhcF9tb2R1bGUgbW9kdWxlcy9tb2RfbGRhcC5zbwpMb2FkTW9kdWxlIGF1dGhuel9sZGFwX21vZHVsZSBtb2R1bGVzL21vZF9hdXRobnpfbGRhcC5zbwpMb2FkTW9kdWxlIHJlcXRpbWVvdXRfbW9kdWxlIG1vZHVsZXMvbW9kX3JlcXRpbWVvdXQuc28KTG9hZE1vZHVsZSBmaWx0ZXJfbW9kdWxlIG1vZHVsZXMvbW9kX2ZpbHRlci5zbwpMb2FkTW9kdWxlIHByb3h5X2h0bWxfbW9kdWxlIG1vZHVsZXMvbW9kX3Byb3h5X2h0bWwuc28KTG9hZE1vZHVsZSBsb2dfY29uZmlnX21vZHVsZSBtb2R1bGVzL21vZF9sb2dfY29uZmlnLnNvCkxvYWRNb2R1bGUgZW52X21vZHVsZSBtb2R1bGVzL21vZF9lbnYuc28KTG9hZE1vZHVsZSBoZWFkZXJzX21vZHVsZSBtb2R1bGVzL21vZF9oZWFkZXJzLnNvCkxvYWRNb2R1bGUgc2V0ZW52aWZfbW9kdWxlIG1vZHVsZXMvbW9kX3NldGVudmlmLnNvCkxvYWRNb2R1bGUgdmVyc2lvbl9tb2R1bGUgbW9kdWxlcy9tb2RfdmVyc2lvbi5zbwpMb2FkTW9kdWxlIHByb3h5X21vZHVsZSBtb2R1bGVzL21vZF9wcm94eS5zbwpMb2FkTW9kdWxlIHByb3h5X2Nvbm5lY3RfbW9kdWxlIG1vZHVsZXMvbW9kX3Byb3h5X2Nvbm5lY3Quc28KTG9hZE1vZHVsZSBwcm94eV9odHRwX21vZHVsZSBtb2R1bGVzL21vZF9wcm94eV9odHRwLnNvCkxvYWRNb2R1bGUgcHJveHlfYmFsYW5jZXJfbW9kdWxlIG1vZHVsZXMvbW9kX3Byb3h5X2JhbGFuY2VyLnNvCkxvYWRNb2R1bGUgc2xvdG1lbV9zaG1fbW9kdWxlIG1vZHVsZXMvbW9kX3Nsb3RtZW1fc2htLnNvCkxvYWRNb2R1bGUgc2xvdG1lbV9wbGFpbl9tb2R1bGUgbW9kdWxlcy9tb2Rfc2xvdG1lbV9wbGFpbi5zbwpMb2FkTW9kdWxlIHVuaXhkX21vZHVsZSBtb2R1bGVzL21vZF91bml4ZC5zbwpMb2FkTW9kdWxlIHN0YXR1c19tb2R1bGUgbW9kdWxlcy9tb2Rfc3RhdHVzLnNvCkxvYWRNb2R1bGUgYXV0b2luZGV4X21vZHVsZSBtb2R1bGVzL21vZF9hdXRvaW5kZXguc28KCjxJZk1vZHVsZSB1bml4ZF9tb2R1bGU+ClVzZXIgZGFlbW9uCkdyb3VwIGRhZW1vbgo8L0lmTW9kdWxlPgoKPERpcmVjdG9yeSAvPgogICAgQWxsb3dPdmVycmlkZSBub25lCiAgICBSZXF1aXJlIGFsbCBkZW5pZWQKPC9EaXJlY3Rvcnk+Cgo8RmlsZXMgIi5odCoiPgogICAgUmVxdWlyZSBhbGwgZGVuaWVkCjwvRmlsZXM+CgpFcnJvckxvZyAvZGV2L3N0ZGVycgoKTG9nTGV2ZWwgd2FybgoKPElmTW9kdWxlIGxvZ19jb25maWdfbW9kdWxlPgogICAgTG9nRm9ybWF0ICIlYSAlbCAldSAldCBcIiVyXCIgJT5zICViIFwiJXtSZWZlcmVyfWlcIiBcIiV7VXNlci1BZ2VudH1pXCIiIGNvbWJpbmVkCiAgICBMb2dGb3JtYXQgIiV7WC1Gb3J3YXJkZWQtRm9yfWkgJWwgJXUgJXQgXCIlclwiICU+cyAlYiBcIiV7UmVmZXJlcn1pXCIgXCIle1VzZXItQWdlbnR9aVwiIiBwcm94eQogICAgTG9nRm9ybWF0ICIlaCAlbCAldSAldCBcIiVyXCIgJT5zICViIiBjb21tb24KCiAgICA8SWZNb2R1bGUgbG9naW9fbW9kdWxlPgogICAgICBMb2dGb3JtYXQgIiVhICVsICV1ICV0IFwiJXJcIiAlPnMgJWIgXCIle1JlZmVyZXJ9aVwiIFwiJXtVc2VyLUFnZW50fWlcIiAlSSAlTyIgY29tYmluZWRpbwogICAgPC9JZk1vZHVsZT4KCiAgICBTZXRFbnZJZiBYLUZvcndhcmRlZC1Gb3IgIl4uKlwuLipcLi4qXC4uKiIgZm9yd2FyZGVkCiAgICBDdXN0b21Mb2cgL2Rldi9zdGRvdXQgY29tbW9uCiAgICBDdXN0b21Mb2cgL2Rldi9zdGRvdXQgY29tYmluZWQKICAgIEN1c3RvbUxvZyAvZGV2L3N0ZG91dCBwcm94eSBlbnY9Zm9yd2FyZGVkCjwvSWZNb2R1bGU+Cgo8RGlyZWN0b3J5ICIvdXNyL2xvY2FsL2FwYWNoZTIvY2dpLWJpbiI+CiAgICBBbGxvd092ZXJyaWRlIE5vbmUKICAgIE9wdGlvbnMgTm9uZQogICAgUmVxdWlyZSBhbGwgZ3JhbnRlZAo8L0RpcmVjdG9yeT4KCjxJZk1vZHVsZSBoZWFkZXJzX21vZHVsZT4KICAgIFJlcXVlc3RIZWFkZXIgdW5zZXQgUHJveHkgZWFybHkKPC9JZk1vZHVsZT4KCjxJZk1vZHVsZSBwcm94eV9odG1sX21vZHVsZT4KSW5jbHVkZSBjb25mL2V4dHJhL3Byb3h5LWh0bWwuY29uZgo8L0lmTW9kdWxlPgoKPFZpcnR1YWxIb3N0ICo6ODA+CiAgPExvY2F0aW9uIC8+CiAgICAgIFByb3h5UGFzcyBodHRwOi8vbG9jYWxob3N0OjgwMDAvCiAgICAgIFByb3h5UGFzc1JldmVyc2UgaHR0cDovL2xvY2FsaG9zdDo4MDAwLwogIDwvTG9jYXRpb24+CiAgPFByb3h5ICo+CiAgICAgIEF1dGhOYW1lICJOYWdpb3MiCiAgICAgIEF1dGhUeXBlIEJhc2ljCiAgICAgIEF1dGhCYXNpY1Byb3ZpZGVyIGZpbGUgbGRhcAogICAgICBBdXRoVXNlckZpbGUgL3Vzci9sb2NhbC9hcGFjaGUyL2NvbmYvLmh0cGFzc3dkCiAgICAgIEF1dGhMREFQQmluZEROIGNuPWFkbWluLGRjPWNsdXN0ZXIsZGM9bG9jYWwKICAgICAgQXV0aExEQVBCaW5kUGFzc3dvcmQgcGFzc3dvcmQKICAgICAgQXV0aExEQVBVUkwgImxkYXA6Ly9sZGFwLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWw6Mzg5L291PVBlb3BsZSxkYz1jbHVzdGVyLGRjPWxvY2FsIgogICAgICBSZXF1aXJlIHZhbGlkLXVzZXIKICA8L1Byb3h5Pgo8L1ZpcnR1YWxIb3N0Pg=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "nagios-admin-creds"
    },
    "type": "Opaque",
    "data": {
      "NAGIOSADMIN_USER": "bmFnaW9zYWRtaW4=",
      "NAGIOSADMIN_PASS": "cGFzc3dvcmQ=",
      "BIND_DN": "Y249YWRtaW4sZGM9Y2x1c3RlcixkYz1sb2NhbA==",
      "BIND_PASSWORD": "cGFzc3dvcmQ=",
      "PROMETHEUS_SERVICE": "aHR0cDovL2FkbWluOmNoYW5nZW1lQHByb20tbWV0cmljcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjgwLw==",
      "ELASTICSEARCH_SERVICE": "aHR0cDovL2FkbWluOmNoYW5nZW1lQGVsYXN0aWNzZWFyY2gtbG9nZ2luZy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjgwLw=="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "nagios-bin"
    },
    "data": {
      "apache.sh": "#!/bin/bash\n\n\n\nset -ev\n\nCOMMAND=\"${@:-start}\"\n\nfunction start () {\n\n  if [ -f /etc/apache2/envvars ]; then\n     # Loading Apache2 ENV variables\n     source /etc/httpd/apache2/envvars\n  fi\n  # Apache gets grumpy about PID files pre-existing\n  rm -f /etc/httpd/logs/httpd.pid\n\n  if [ -f /usr/local/apache2/conf/.htpasswd ]; then\n    htpasswd -b /usr/local/apache2/conf/.htpasswd \"$NAGIOSADMIN_USER\" \"$NAGIOSADMIN_PASS\"\n  else\n    htpasswd -cb /usr/local/apache2/conf/.htpasswd \"$NAGIOSADMIN_USER\" \"$NAGIOSADMIN_PASS\"\n  fi\n\n  #Launch Apache on Foreground\n  exec httpd -DFOREGROUND\n}\n\nfunction stop () {\n  apachectl -k graceful-stop\n}\n\n$COMMAND\n",
      "nagios-readiness.sh": "#!/bin/bash\n\n\n\n# NOTE(sw5822): Redirect no-op operator output to Nagios log file to clean out\n# Nagios's log file, since Nagios doesn't support logging to /dev/null\n: > /opt/nagios/var/log/nagios.log\n\n# Check whether Nagios endpoint is reachable\nreply=$(curl -s -o /dev/null -w %{http_code} http://127.0.0.1:8000/nagios)\nif [ \\\"$reply\\\" -lt 200 -o \\\"$reply\\\" -ge 400 ]; then\n  exit 1\nfi\n",
      "selenium-tests.py": "#!/usr/bin/env python3\n\n\n\nimport os\nimport logging\nimport sys\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.webdriver.chrome.options import Options\nfrom selenium.common.exceptions import TimeoutException\nfrom selenium.common.exceptions import NoSuchElementException\nfrom selenium.common.exceptions import ScreenshotException\n\n# Create logger, console handler and formatter\nlogger = logging.getLogger('Nagios Selenium Tests')\nlogger.setLevel(logging.DEBUG)\nch = logging.StreamHandler()\nch.setLevel(logging.DEBUG)\nformatter = logging.Formatter(\n    '%(asctime)s - %(name)s - %(levelname)s - %(message)s'\n)\n\n# Set the formatter and add the handler\nch.setFormatter(formatter)\nlogger.addHandler(ch)\n\ndef get_variable(env_var):\n    if env_var in os.environ:\n        logger.info('Found \"{}\"'.format(env_var))\n        return os.environ[env_var]\n    else:\n        logger.critical('Variable \"{}\" is not defined!'.format(env_var))\n        sys.exit(1)\n\ndef click_link_by_name(link_name):\n    try:\n        logger.info(\"Clicking '{}' link\".format(link_name))\n        link = browser.find_element_by_link_text(link_name)\n        link.click()\n    except NoSuchElementException:\n        logger.error(\"Failed clicking '{}' link\".format(link_name))\n        browser.quit()\n        sys.exit(1)\n\ndef take_screenshot(page_name, artifacts_dir='/tmp/artifacts/'):  # nosec\n    file_name = page_name.replace(' ', '_')\n    try:\n        el = WebDriverWait(browser, 15)\n        browser.save_screenshot('{}{}.png'.format(artifacts_dir, file_name))\n        logger.info(\"Successfully captured {} screenshot\".format(page_name))\n    except ScreenshotException:\n        logger.error(\"Failed to capture {} screenshot\".format(page_name))\n        browser.quit()\n        sys.exit(1)\n\nusername = get_variable('NAGIOS_USER')\npassword = get_variable('NAGIOS_PASSWORD')\nnagios_uri = get_variable('NAGIOS_URI')\nnagios_url = 'http://{0}:{1}@{2}'.format(username, password, nagios_uri)\n\nchrome_driver = '/etc/selenium/chromedriver'\noptions = Options()\noptions.add_argument('--headless')\noptions.add_argument('--no-sandbox')\noptions.add_argument('--window-size=1920x1080')\nbrowser = webdriver.Chrome(chrome_driver, chrome_options=options)\n\ntry:\n    logger.info('Attempting to connect to Nagios')\n    browser.get(nagios_url)\n    el = WebDriverWait(browser, 15).until(\n        EC.title_contains('Nagios')\n    )\n    logger.info('Connected to Nagios')\nexcept TimeoutException:\n    logger.critical('Timed out waiting for Nagios')\n    browser.quit()\n    sys.exit(1)\n\ntry:\n    logger.info('Switching Focus to Navigation side frame')\n    sideFrame = browser.switch_to.frame('side')\nexcept NoSuchElementException:\n    logger.error('Failed selecting side frame')\n    browser.quit()\n    sys.exit(1)\n\ntry:\n    logger.info('Attempting to visit Services page')\n    click_link_by_name('Services')\n    take_screenshot('Nagios Services')\nexcept TimeoutException:\n    logger.error('Failed to load Services page')\n    browser.quit()\n    sys.exit(1)\n\ntry:\n    logger.info('Attempting to visit Host Groups page')\n    click_link_by_name('Host Groups')\n    take_screenshot('Nagios Host Groups')\nexcept TimeoutException:\n    logger.error('Failed to load Host Groups page')\n    browser.quit()\n    sys.exit(1)\n\ntry:\n    logger.info('Attempting to visit Hosts page')\n    click_link_by_name('Hosts')\n    take_screenshot('Nagios Hosts')\nexcept TimeoutException:\n    logger.error('Failed to load Hosts page')\n    browser.quit()\n    sys.exit(1)\n\nlogger.info(\"The following screenshots were captured:\")\nfor root, dirs, files in os.walk(\"/tmp/artifacts/\"):  # nosec\n    for name in files:\n        logger.info(os.path.join(root, name))\n\nbrowser.quit()\n",
      "image-repo-sync.sh": "#!/bin/sh\nset -ex\n\nIFS=','; for IMAGE in ${IMAGE_SYNC_LIST}; do\n  docker pull ${IMAGE}\n  docker tag ${IMAGE} ${LOCAL_REPO}/${IMAGE}\n  docker push ${LOCAL_REPO}/${IMAGE}\ndone\n"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": {
      "name": "nagios"
    },
    "rules": [
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "nodes",
          "nodes/proxy",
          "services",
          "endpoints",
          "pods",
          "pods/exec",
          "persistentvolumes",
          "persistentvolumeclaims"
        ],
        "verbs": [
          "get",
          "list",
          "watch"
        ]
      },
      {
        "apiGroups": [
          ""
        ],
        "resources": [
          "configmaps"
        ],
        "verbs": [
          "get"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "name": "nagios"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "nagios",
        "namespace": "default"
      }
    ],
    "roleRef": {
      "kind": "ClusterRole",
      "name": "nagios",
      "apiGroup": "rbac.authorization.k8s.io"
    }
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": {
      "name": "release-name-default-release-name-test",
      "namespace": "qdgh5N3"
    },
    "rules": [
      {
        "apiGroups": [
          "",
          "extensions",
          "batch",
          "apps"
        ],
        "verbs": [
          "get",
          "list"
        ],
        "resources": [
          "services",
          "endpoints"
        ]
      }
    ]
  },
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": {
      "name": "release-name-release-name-test",
      "namespace": "qdgh5N3"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "release-name-default-release-name-test"
    },
    "subjects": [
      {
        "kind": "ServiceAccount",
        "name": "release-name-test",
        "namespace": "default"
      }
    ]
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "nagios"
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 80
        },
        {
          "name": "https",
          "port": 443
        }
      ],
      "selector": {
        "app": "ingress-api"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "nagios-metrics"
    },
    "spec": {
      "ports": [
        {
          "name": "http",
          "port": 80
        }
      ],
      "selector": {
        "release_group": "release-name",
        "application": "nagios",
        "component": "monitoring"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "nagios",
      "annotations": {
        "openstackhelm.openstack.org/release_uuid": ""
      },
      "labels": {
        "release_group": "release-name",
        "application": "nagios",
        "component": "monitoring"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "release_group": "release-name",
          "application": "nagios",
          "component": "monitoring"
        }
      },
      "revisionHistoryLimit": 3,
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxUnavailable": 1,
          "maxSurge": 3
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "release_group": "release-name",
            "application": "nagios",
            "component": "monitoring"
          },
          "annotations": {
            "openstackhelm.openstack.org/release_uuid": "",
            "configmap-bin-hash": "226c5e7b5ca443cce132bc3a7da424470cee79a8ae5a8ac42f996bbfa2631c14",
            "configmap-etc-hash": "8f15f10104c7141a92b2735c1d2d7f6ee13c1682160661d592487c888cd915e4"
          }
        },
        "spec": {
          "securityContext": {
            "runAsUser": 0
          },
          "serviceAccountName": "nagios",
          "affinity": {
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "release_group",
                          "operator": "In",
                          "values": [
                            "release-name"
                          ]
                        },
                        {
                          "key": "application",
                          "operator": "In",
                          "values": [
                            "nagios"
                          ]
                        },
                        {
                          "key": "component",
                          "operator": "In",
                          "values": [
                            "monitoring"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 10
                }
              ]
            }
          },
          "nodeSelector": {
            "openstack-control-plane": "enabled"
          },
          "terminationGracePeriodSeconds": 30,
          "shareProcessNamespace": true,
          "initContainers": [
            {
              "name": "init",
              "image": "quay.io/stackanetes/kubernetes-entrypoint:v0.2.1",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsUser": 65534
              },
              "env": [
                {
                  "name": "POD_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "INTERFACE_NAME",
                  "value": "eth0"
                },
                {
                  "name": "PATH",
                  "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                },
                {
                  "name": "DEPENDENCY_SERVICE",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_DAEMONSET",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CONTAINER",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_POD_JSON",
                  "value": ""
                },
                {
                  "name": "DEPENDENCY_CUSTOM_RESOURCE",
                  "value": ""
                }
              ],
              "command": [
                "kubernetes-entrypoint"
              ],
              "volumeMounts": []
            },
            {
              "name": "define-nagios-hosts",
              "image": "docker.io/openstackhelm/nagios:latest-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "readOnlyRootFilesystem": false
              },
              "command": [
                "/usr/lib/nagios/plugins/define-nagios-hosts.py",
                "--object_file_loc",
                "/opt/nagios/etc/conf.d/nagios-hosts.cfg"
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "nagios-confd",
                  "mountPath": "/opt/nagios/etc/conf.d"
                }
              ],
              "env": null
            }
          ],
          "containers": [
            {
              "name": "apache-proxy",
              "image": "docker.io/httpd:2.4",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "readOnlyRootFilesystem": true,
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                }
              },
              "command": [
                "/tmp/apache.sh",
                "start"
              ],
              "ports": [
                {
                  "name": "http",
                  "containerPort": 80
                }
              ],
              "readinessProbe": {
                "tcpSocket": {
                  "port": 80
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "env": [
                {
                  "name": "NAGIOSADMIN_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "nagios-admin-creds",
                      "key": "NAGIOSADMIN_USER"
                    }
                  }
                },
                {
                  "name": "NAGIOSADMIN_PASS",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "nagios-admin-creds",
                      "key": "NAGIOSADMIN_PASS"
                    }
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "nagios-bin",
                  "mountPath": "/tmp/apache.sh",
                  "subPath": "apache.sh",
                  "readOnly": true
                },
                {
                  "name": "nagios-etc",
                  "mountPath": "/usr/local/apache2/conf/httpd.conf",
                  "subPath": "httpd.conf",
                  "readOnly": true
                }
              ]
            },
            {
              "name": "nagios",
              "image": "docker.io/openstackhelm/nagios:latest-ubuntu_xenial",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "readOnlyRootFilesystem": false
              },
              "ports": [
                {
                  "name": "nagios",
                  "containerPort": 8000
                }
              ],
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/tmp/nagios-readiness.sh"
                  ]
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 30
              },
              "env": [
                {
                  "name": "SNMP_NOTIF_PRIMARY_TARGET_WITH_PORT",
                  "value": "127.0.0.1:15162"
                },
                {
                  "name": "SNMP_NOTIF_SECONDARY_TARGET_WITH_PORT",
                  "value": "127.0.0.1:15162"
                },
                {
                  "name": "REST_NOTIF_PRIMARY_TARGET_URL",
                  "value": "127.0.0.1:3904/events"
                },
                {
                  "name": "REST_NOTIF_SECONDARY_TARGET_URL",
                  "value": "127.0.0.1:3904/events"
                },
                {
                  "name": "CEPH_MGR_SERVICE",
                  "value": "ceph-mgr.default.svc.cluster.local:9283/metrics"
                },
                {
                  "name": "PROMETHEUS_SERVICE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "nagios-admin-creds",
                      "key": "PROMETHEUS_SERVICE"
                    }
                  }
                },
                {
                  "name": "ELASTICSEARCH_SERVICE",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "nagios-admin-creds",
                      "key": "ELASTICSEARCH_SERVICE"
                    }
                  }
                },
                {
                  "name": "NAGIOSADMIN_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "nagios-admin-creds",
                      "key": "NAGIOSADMIN_USER"
                    }
                  }
                },
                {
                  "name": "NAGIOSADMIN_PASS",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "nagios-admin-creds",
                      "key": "NAGIOSADMIN_PASS"
                    }
                  }
                }
              ],
              "volumeMounts": [
                {
                  "name": "pod-tmp",
                  "mountPath": "/tmp"
                },
                {
                  "name": "nagios-confd",
                  "mountPath": "/opt/nagios/etc/conf.d"
                },
                {
                  "name": "nagios-etc",
                  "mountPath": "/opt/nagios/etc/nagios.cfg",
                  "subPath": "nagios.cfg",
                  "readOnly": true
                },
                {
                  "name": "nagios-etc",
                  "mountPath": "/opt/nagios/etc/cgi.cfg",
                  "subPath": "cgi.cfg",
                  "readOnly": true
                },
                {
                  "name": "nagios-etc",
                  "mountPath": "/opt/nagios/etc/node.cfg",
                  "subPath": "node.cfg",
                  "readOnly": true
                },
                {
                  "name": "nagios-etc",
                  "mountPath": "/opt/nagios/etc/base.cfg",
                  "subPath": "base.cfg",
                  "readOnly": true
                },
                {
                  "name": "nagios-etc",
                  "mountPath": "/opt/nagios/etc/ceph.cfg",
                  "subPath": "ceph.cfg",
                  "readOnly": true
                },
                {
                  "name": "nagios-etc",
                  "mountPath": "/opt/nagios/etc/kubernetes.cfg",
                  "subPath": "kubernetes.cfg",
                  "readOnly": true
                },
                {
                  "name": "nagios-bin",
                  "mountPath": "/tmp/nagios-readiness.sh",
                  "subPath": "nagios-readiness.sh",
                  "readOnly": true
                },
                {
                  "name": "pod-var-log",
                  "mountPath": "/opt/nagios/var/log"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "pod-tmp",
              "emptyDir": {}
            },
            {
              "name": "pod-var-log",
              "emptyDir": {}
            },
            {
              "name": "nagios-confd",
              "emptyDir": {}
            },
            {
              "name": "nagios-etc",
              "secret": {
                "secretName": "nagios-etc",
                "defaultMode": 292
              }
            },
            {
              "name": "nagios-bin",
              "configMap": {
                "name": "nagios-bin",
                "defaultMode": 365
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "nagios",
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "nginx.ingress.kubernetes.io/affinity": "cookie",
        "nginx.ingress.kubernetes.io/configuration-snippet": "more_set_headers \"X-Content-Type-Options: 'nosniff'\";\nmore_set_headers \"X-Frame-Options: SAMEORIGIN\";\nmore_set_headers \"Content-Security-Policy: script-src 'self'\";\nmore_set_headers \"X-XSS-Protection: 1; mode=block\";\n",
        "nginx.ingress.kubernetes.io/rewrite-target": "/",
        "nginx.ingress.kubernetes.io/session-cookie-expires": "600",
        "nginx.ingress.kubernetes.io/session-cookie-hash": "sha1",
        "nginx.ingress.kubernetes.io/session-cookie-max-age": "600",
        "nginx.ingress.kubernetes.io/session-cookie-name": "kube-ingress-session-nagios"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "nagios",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "nagios-metrics",
                  "servicePort": "http"
                }
              }
            ]
          }
        },
        {
          "host": "nagios.default",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "nagios-metrics",
                  "servicePort": "http"
                }
              }
            ]
          }
        },
        {
          "host": "nagios.default.svc.cluster.local",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "nagios-metrics",
                  "servicePort": "http"
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-test",
      "labels": {
        "release_group": "release-name",
        "application": "nagios",
        "component": "test"
      },
      "annotations": {
        "helm.sh/hook": "test-success",
        "openstackhelm.openstack.org/release_uuid": ""
      }
    },
    "spec": {
      "securityContext": {
        "runAsUser": 0
      },
      "serviceAccountName": "release-name-test",
      "nodeSelector": {
        "openstack-control-plane": "enabled"
      },
      "restartPolicy": "Never",
      "initContainers": [
        {
          "name": "init",
          "image": "quay.io/stackanetes/kubernetes-entrypoint:v0.2.1",
          "imagePullPolicy": "IfNotPresent",
          "securityContext": {
            "allowPrivilegeEscalation": false,
            "readOnlyRootFilesystem": true,
            "runAsUser": 65534
          },
          "env": [
            {
              "name": "POD_NAME",
              "valueFrom": {
                "fieldRef": {
                  "apiVersion": "v1",
                  "fieldPath": "metadata.name"
                }
              }
            },
            {
              "name": "NAMESPACE",
              "valueFrom": {
                "fieldRef": {
                  "apiVersion": "v1",
                  "fieldPath": "metadata.namespace"
                }
              }
            },
            {
              "name": "INTERFACE_NAME",
              "value": "eth0"
            },
            {
              "name": "PATH",
              "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
            },
            {
              "name": "DEPENDENCY_SERVICE",
              "value": "default:nagios-metrics"
            },
            {
              "name": "DEPENDENCY_DAEMONSET",
              "value": ""
            },
            {
              "name": "DEPENDENCY_CONTAINER",
              "value": ""
            },
            {
              "name": "DEPENDENCY_POD_JSON",
              "value": ""
            },
            {
              "name": "DEPENDENCY_CUSTOM_RESOURCE",
              "value": ""
            }
          ],
          "command": [
            "kubernetes-entrypoint"
          ],
          "volumeMounts": []
        }
      ],
      "containers": [
        {
          "name": "nagios-helm-tests",
          "image": "docker.io/openstackhelm/osh-selenium:latest-ubuntu_bionic",
          "imagePullPolicy": "IfNotPresent",
          "securityContext": {
            "readOnlyRootFilesystem": false
          },
          "command": [
            "/tmp/selenium-tests.py"
          ],
          "env": [
            {
              "name": "NAGIOS_USER",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "nagios-admin-creds",
                  "key": "NAGIOSADMIN_USER"
                }
              }
            },
            {
              "name": "NAGIOS_PASSWORD",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "nagios-admin-creds",
                  "key": "NAGIOSADMIN_PASS"
                }
              }
            },
            {
              "name": "NAGIOS_URI",
              "value": "nagios-metrics.default.svc.cluster.local:80"
            }
          ],
          "volumeMounts": [
            {
              "name": "pod-tmp",
              "mountPath": "/tmp"
            },
            {
              "name": "artifacts",
              "mountPath": "/tmp/artifacts"
            },
            {
              "name": "nagios-bin",
              "mountPath": "/tmp/selenium-tests.py",
              "subPath": "selenium-tests.py",
              "readOnly": true
            }
          ]
        }
      ],
      "volumes": [
        {
          "name": "pod-tmp",
          "emptyDir": {}
        },
        {
          "name": "artifacts",
          "emptyDir": {}
        },
        {
          "name": "nagios-bin",
          "configMap": {
            "name": "nagios-bin",
            "defaultMode": 365
          }
        }
      ]
    }
  }
]