[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "nginx-config"
    },
    "data": {
      "nalkinscloud-api.conf": "upstream nalkinscloud_api_backend{\n    server nalkinscloud-api.nalkinscloud-api.svc.cluster.local:443;\n}\n\nserver {\n    listen       80;\n    #listen       443 ssl;\n    server_name api-alpha.nalkins.cloud;\n\n    error_log /dev/stdout debug;\n\n    #ssl_certificate     /etc/nginx/pki/server.crt;\n    #ssl_certificate_key /etc/nginx/pki/server.key;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n\n    location /static/ {\n        autoindex on;\n        alias /static/nalkinscloud_api/;\n    }\n\n    location / {\n        autoindex on;\n        try_files $uri @proxy;\n    }\n\n    location @proxy {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_X_forwarded_for;\n        proxy_set_header Host $host;\n\n        proxy_pass http://nalkinscloud_api_backend;\n\n    }\n}\n",
      "nalkinscloud-frontend.conf": "upstream nalkinscloud_frontend_backend{\n    server nalkinscloud-frontend.nalkinscloud-frontend.svc.cluster.local:443;\n}\n\nserver {\n    listen       80;\n    #listen       443 ssl;\n    server_name alpha.nalkins.cloud;\n\n    error_log /dev/stdout debug;\n\n    #ssl_certificate     /etc/nginx/pki/server.crt;\n    #ssl_certificate_key /etc/nginx/pki/server.key;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n\n    location /static/ {\n        autoindex on;\n        alias /static/nalkinscloud_frontend/;\n    }\n\n    location / {\n        autoindex on;\n        try_files $uri @proxy;\n    }\n\n    location @proxy {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_X_forwarded_for;\n        proxy_set_header Host $host;\n\n        proxy_pass http://nalkinscloud_frontend_backend;\n\n    }\n}\n",
      "nalkinscloud-resume.conf": "upstream nalkinscloud_resume_backend{\n    server nalkinscloud-resume.nalkinscloud-resume.svc.cluster.local:443;\n}\n\nserver {\n    listen       80;\n    #listen       443 ssl;\n    server_name resume-alpha.nalkins.cloud;\n\n    error_log /dev/stdout debug;\n\n    #ssl_certificate     /etc/nginx/pki/server.crt;\n    #ssl_certificate_key /etc/nginx/pki/server.key;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n\n    location /static/ {\n        autoindex on;\n        alias /static/nalkinscloud_resume/;\n    }\n\n    location / {\n        autoindex on;\n        try_files $uri @proxy;\n    }\n\n    location @proxy {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_X_forwarded_for;\n        proxy_set_header Host $host;\n\n        proxy_pass http://nalkinscloud_resume_backend;\n\n    }\n}\n",
      "nginx.conf": "user  nginx;\nworker_processes auto;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    #tcp_nopush         on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n    #gzip               on;\n\n    include /etc/nginx/conf.d/*.conf;\n\n    send_timeout 2;\n}\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolume",
    "metadata": {
      "name": "release-name-nalkinscloud-nginx-frontend-api-pv",
      "labels": {
        "app": "nalkinscloud-nginx",
        "chart": "nalkinscloud-nginx-0.1.4",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "pv.beta.kubernetes.io/gid": "0"
      }
    },
    "spec": {
      "capacity": {
        "storage": "50Gi"
      },
      "accessModes": [
        "ReadOnlyMany"
      ],
      "persistentVolumeReclaimPolicy": "Retain",
      "nfs": {
        "path": null,
        "server": null,
        "readOnly": true
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolume",
    "metadata": {
      "name": "release-name-nalkinscloud-nginx-resume-pv",
      "labels": {
        "app": "nalkinscloud-nginx",
        "chart": "nalkinscloud-nginx-0.1.4",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "pv.beta.kubernetes.io/gid": "0"
      }
    },
    "spec": {
      "capacity": {
        "storage": "50Gi"
      },
      "accessModes": [
        "ReadOnlyMany"
      ],
      "persistentVolumeReclaimPolicy": "Retain",
      "nfs": {
        "path": null,
        "server": null,
        "readOnly": true
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "name": "release-name-nalkinscloud-nginx-frontend-api",
      "labels": {
        "app": "nalkinscloud-nginx",
        "chart": "nalkinscloud-nginx-0.1.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "accessModes": [
        "ReadOnlyMany"
      ],
      "resources": {
        "requests": {
          "storage": "10Gi"
        }
      },
      "volumeName": "release-name-nalkinscloud-nginx-frontend-api-pv"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "name": "release-name-nalkinscloud-nginx-resume",
      "labels": {
        "app": "nalkinscloud-nginx",
        "chart": "nalkinscloud-nginx-0.1.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "accessModes": [
        "ReadOnlyMany"
      ],
      "resources": {
        "requests": {
          "storage": "10Gi"
        }
      },
      "volumeName": "release-name-nalkinscloud-nginx-resume-pv"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-nalkinscloud-nginx",
      "labels": {
        "app": "nalkinscloud-nginx",
        "chart": "nalkinscloud-nginx-0.1.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "selector": {
        "app": "release-name-nalkinscloud-nginx"
      },
      "ports": [
        {
          "name": "http",
          "port": 443,
          "targetPort": 80
        }
      ]
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-nalkinscloud-nginx",
      "labels": {
        "app": "nalkinscloud-nginx",
        "chart": "nalkinscloud-nginx-0.1.4",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 2,
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-nalkinscloud-nginx"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "release-name-nalkinscloud-nginx",
              "image": "nginx:alpine",
              "imagePullPolicy": "IfNotPresent",
              "ports": [
                {
                  "containerPort": 80
                }
              ],
              "volumeMounts": [
                {
                  "name": "nginx-server-conf",
                  "mountPath": "/etc/nginx/conf.d/nalkinscloud-resume.conf",
                  "subPath": "nalkinscloud-resume.conf"
                },
                {
                  "name": "nginx-server-conf",
                  "mountPath": "/etc/nginx/conf.d/nalkinscloud-api.conf",
                  "subPath": "nalkinscloud-api.conf"
                },
                {
                  "name": "nginx-server-conf",
                  "mountPath": "/etc/nginx/conf.d/nalkinscloud-frontend.conf",
                  "subPath": "nalkinscloud-frontend.conf"
                },
                {
                  "name": "nginx-server-conf",
                  "mountPath": "/etc/nginx/nginx.conf",
                  "subPath": "nginx.conf"
                },
                {
                  "name": "nginx-static-frontend-api",
                  "mountPath": "/static/nalkinscloud_api/"
                },
                {
                  "name": "nginx-static-frontend-api",
                  "mountPath": "/static/nalkinscloud_frontend/"
                },
                {
                  "name": "nginx-static-resume",
                  "mountPath": "/static/nalkinscloud_resume/"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "nginx-server-conf",
              "configMap": {
                "name": "nginx-config"
              }
            },
            {
              "name": "nginx-static-frontend-api",
              "persistentVolumeClaim": {
                "claimName": "release-name-nalkinscloud-nginx-frontend-api"
              }
            },
            {
              "name": "nginx-static-resume",
              "persistentVolumeClaim": {
                "claimName": "release-name-nalkinscloud-nginx-resume"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-nalkinscloud-nginx",
      "labels": {
        "app": "nalkinscloud-nginx",
        "chart": "nalkinscloud-nginx-0.1.4",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "certmanager.k8s.io/cluster-issuer": "letsencrypt-production",
        "ingress.kubernetes.io/ssl-redirect": "true",
        "kubernetes.io/ingress.allow-http": "false",
        "kubernetes.io/ingress.class": "nginx",
        "kubernetes.io/tls-acme": "true"
      }
    },
    "spec": {
      "tls": [
        {
          "hosts": [
            "api-alpha.nalkins.cloud",
            "alpha.nalkins.cloud",
            "resume-alpha.nalkins.cloud"
          ],
          "secretName": "nalkins-cloud-tls"
        }
      ],
      "rules": [
        {
          "host": "api-alpha.nalkins.cloud",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "release-name-nalkinscloud-nginx",
                  "servicePort": 443
                }
              }
            ]
          }
        },
        {
          "host": "alpha.nalkins.cloud",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "release-name-nalkinscloud-nginx",
                  "servicePort": 443
                }
              }
            ]
          }
        },
        {
          "host": "resume-alpha.nalkins.cloud",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "release-name-nalkinscloud-nginx",
                  "servicePort": 443
                }
              }
            ]
          }
        }
      ]
    }
  }
]