apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nalkinscloud-api.conf: |
    upstream nalkinscloud_api_backend{
        server nalkinscloud-api.nalkinscloud-api.svc.cluster.local:443;
    }

    server {
        listen       80;
        #listen       443 ssl;
        server_name api-alpha.nalkins.cloud;

        error_log /dev/stdout debug;

        #ssl_certificate     /etc/nginx/pki/server.crt;
        #ssl_certificate_key /etc/nginx/pki/server.key;

        location = /favicon.ico { access_log off; log_not_found off; }

        location /static/ {
            autoindex on;
            alias /static/nalkinscloud_api/;
        }

        location / {
            autoindex on;
            try_files $uri @proxy;
        }

        location @proxy {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_X_forwarded_for;
            proxy_set_header Host $host;

            proxy_pass http://nalkinscloud_api_backend;

        }
    }
  nalkinscloud-frontend.conf: |
    upstream nalkinscloud_frontend_backend{
        server nalkinscloud-frontend.nalkinscloud-frontend.svc.cluster.local:443;
    }

    server {
        listen       80;
        #listen       443 ssl;
        server_name alpha.nalkins.cloud;

        error_log /dev/stdout debug;

        #ssl_certificate     /etc/nginx/pki/server.crt;
        #ssl_certificate_key /etc/nginx/pki/server.key;

        location = /favicon.ico { access_log off; log_not_found off; }

        location /static/ {
            autoindex on;
            alias /static/nalkinscloud_frontend/;
        }

        location / {
            autoindex on;
            try_files $uri @proxy;
        }

        location @proxy {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_X_forwarded_for;
            proxy_set_header Host $host;

            proxy_pass http://nalkinscloud_frontend_backend;

        }
    }
  nalkinscloud-resume.conf: |
    upstream nalkinscloud_resume_backend{
        server nalkinscloud-resume.nalkinscloud-resume.svc.cluster.local:443;
    }

    server {
        listen       80;
        #listen       443 ssl;
        server_name resume-alpha.nalkins.cloud;

        error_log /dev/stdout debug;

        #ssl_certificate     /etc/nginx/pki/server.crt;
        #ssl_certificate_key /etc/nginx/pki/server.key;

        location = /favicon.ico { access_log off; log_not_found off; }

        location /static/ {
            autoindex on;
            alias /static/nalkinscloud_resume/;
        }

        location / {
            autoindex on;
            try_files $uri @proxy;
        }

        location @proxy {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_X_forwarded_for;
            proxy_set_header Host $host;

            proxy_pass http://nalkinscloud_resume_backend;

        }
    }
  nginx.conf: |
    user  nginx;
    worker_processes auto;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile            on;
        #tcp_nopush         on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        types_hash_max_size 2048;
        #gzip               on;

        include /etc/nginx/conf.d/*.conf;

        send_timeout 2;
    }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: release-name-nalkinscloud-nginx-frontend-api-pv
  labels:
    app: nalkinscloud-nginx
    chart: nalkinscloud-nginx-0.1.4
    release: release-name
    heritage: Helm
  annotations:
    pv.beta.kubernetes.io/gid: "0"
spec:
  capacity:
    storage: 50Gi
  accessModes:
    - ReadOnlyMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: null
    server: null
    readOnly: true
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: release-name-nalkinscloud-nginx-resume-pv
  labels:
    app: nalkinscloud-nginx
    chart: nalkinscloud-nginx-0.1.4
    release: release-name
    heritage: Helm
  annotations:
    pv.beta.kubernetes.io/gid: "0"
spec:
  capacity:
    storage: 50Gi
  accessModes:
    - ReadOnlyMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: null
    server: null
    readOnly: true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-nalkinscloud-nginx-frontend-api
  labels:
    app: nalkinscloud-nginx
    chart: nalkinscloud-nginx-0.1.4
    release: release-name
    heritage: Helm
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 10Gi
  volumeName: release-name-nalkinscloud-nginx-frontend-api-pv
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-nalkinscloud-nginx-resume
  labels:
    app: nalkinscloud-nginx
    chart: nalkinscloud-nginx-0.1.4
    release: release-name
    heritage: Helm
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 10Gi
  volumeName: release-name-nalkinscloud-nginx-resume-pv
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-nalkinscloud-nginx
  labels:
    app: nalkinscloud-nginx
    chart: nalkinscloud-nginx-0.1.4
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  selector:
    app: release-name-nalkinscloud-nginx
  ports:
    - name: http
      port: 443
      targetPort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-nalkinscloud-nginx
  labels:
    app: nalkinscloud-nginx
    chart: nalkinscloud-nginx-0.1.4
    release: release-name
    heritage: Helm
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: release-name-nalkinscloud-nginx
    spec:
      containers:
        - name: release-name-nalkinscloud-nginx
          image: nginx:alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-server-conf
              mountPath: /etc/nginx/conf.d/nalkinscloud-resume.conf
              subPath: nalkinscloud-resume.conf
            - name: nginx-server-conf
              mountPath: /etc/nginx/conf.d/nalkinscloud-api.conf
              subPath: nalkinscloud-api.conf
            - name: nginx-server-conf
              mountPath: /etc/nginx/conf.d/nalkinscloud-frontend.conf
              subPath: nalkinscloud-frontend.conf
            - name: nginx-server-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-static-frontend-api
              mountPath: /static/nalkinscloud_api/
            - name: nginx-static-frontend-api
              mountPath: /static/nalkinscloud_frontend/
            - name: nginx-static-resume
              mountPath: /static/nalkinscloud_resume/
      volumes:
        - name: nginx-server-conf
          configMap:
            name: nginx-config
        - name: nginx-static-frontend-api
          persistentVolumeClaim:
            claimName: release-name-nalkinscloud-nginx-frontend-api
        - name: nginx-static-resume
          persistentVolumeClaim:
            claimName: release-name-nalkinscloud-nginx-resume
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: release-name-nalkinscloud-nginx
  labels:
    app: nalkinscloud-nginx
    chart: nalkinscloud-nginx-0.1.4
    release: release-name
    heritage: Helm
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt-production
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.allow-http: "false"
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - hosts:
        - api-alpha.nalkins.cloud
        - alpha.nalkins.cloud
        - resume-alpha.nalkins.cloud
      secretName: nalkins-cloud-tls
  rules:
    - host: api-alpha.nalkins.cloud
      http:
        paths:
          - path: /
            backend:
              serviceName: release-name-nalkinscloud-nginx
              servicePort: 443
    - host: alpha.nalkins.cloud
      http:
        paths:
          - path: /
            backend:
              serviceName: release-name-nalkinscloud-nginx
              servicePort: 443
    - host: resume-alpha.nalkins.cloud
      http:
        paths:
          - path: /
            backend:
              serviceName: release-name-nalkinscloud-nginx
              servicePort: 443
