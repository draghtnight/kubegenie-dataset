apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-namespace-controller
  labels:
    helm.sh/chart: namespace-controller-0.0.2
    app.kubernetes.io/name: namespace-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/managed-by: Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-namespace-controller
  labels:
    helm.sh/chart: namespace-controller-0.0.2
    app.kubernetes.io/name: namespace-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-namespace-controller
  labels:
    helm.sh/chart: namespace-controller-0.0.2
    app.kubernetes.io/name: namespace-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-namespace-controller
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-namespace-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-namespace-controller-network
  labels:
    helm.sh/chart: namespace-controller-0.0.2
    app.kubernetes.io/name: namespace-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: namespace-controller
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: namespace-controller
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-namespace-controller
      securityContext: {}
      containers:
        - name: namespace-controller
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: statcan/namespace-controller:0.0.1
          imagePullPolicy: IfNotPresent
          args:
            - network
          resources:
            seccompProfile:
              type: RuntimeDefault
