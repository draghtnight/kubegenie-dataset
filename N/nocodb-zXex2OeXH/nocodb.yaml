apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: zXex2OeXH
type: Opaque
data:
  postgresql-password: Y2hhbmdlbWU=
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-nocodb
  labels:
    helm.sh/chart: nocodb-0.2.5
    app.kubernetes.io/name: nocodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
data:
  NC_DB: cGc6Ly9yZWxlYXNlLW5hbWUtcG9zdGdyZXNxbDo1NDMyP3U9cG9zdGdyZXMmcD1zZWNyZXRQYXNzJmQ9cm9vdF9kYg==
  NC_AUTH_JWT_SECRET: c2VjcmV0U3RyaW5n
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-nocodb
  labels:
    helm.sh/chart: nocodb-0.2.5
    app.kubernetes.io/name: nocodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
data:
  NC_PUBLIC_URL: https:/nocodb.local.org
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nc-data
  labels:
    app.kubernetes.io/name: nocodb
    app.kubernetes.io/instance: release-name
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3Gi
  storageClassName: oaf-shared
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: zXex2OeXH
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
  namespace: zXex2OeXH
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-nocodb
  labels:
    helm.sh/chart: nocodb-0.2.5
    app.kubernetes.io/name: nocodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: nocodb
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-nocodb
  labels:
    helm.sh/chart: nocodb-0.2.5
    app.kubernetes.io/name: nocodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nocodb
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nocodb
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext: {}
      containers:
        - name: nocodb
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: nocodb/nocodb:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nc-data
              mountPath: /usr/app/data
          envFrom:
            - configMapRef:
                name: release-name-nocodb
            - secretRef:
                name: release-name-nocodb
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: nc-data
          persistentVolumeClaim:
            claimName: nc-data
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
  namespace: zXex2OeXH
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.16.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      automountServiceAccountToken: false
      containers:
        - name: release-name-postgresql
          image: docker.io/bitnami/postgresql:11.14.0-debian-10-r28
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          securityContext:
            runAsUser: 11794
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: nocodb
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -d "dbname=nocodb" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -d "dbname=nocodb" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: null
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-nocodb-test-connection
  labels:
    helm.sh/chart: nocodb-0.2.5
    app.kubernetes.io/name: nocodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-nocodb:8080
  restartPolicy: Never
