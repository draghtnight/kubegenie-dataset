apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nethermind
      app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-nethermind
subjects:
  - kind: ServiceAccount
    name: release-name-nethermind
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-nethermind
subjects:
  - kind: ServiceAccount
    name: release-name-nethermind
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 86400
  ports:
    - port: 8545
      targetPort: json-rest
      protocol: TCP
      name: json-rest
    - port: 8546
      targetPort: json-ws
      protocol: TCP
      name: json-ws
    - port: 8008
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: nethermind
    app.kubernetes.io/instance: release-name
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nethermind
      app.kubernetes.io/instance: release-name
  serviceName: release-name-nethermind
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nethermind
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-nethermind
      priorityClassName: ""
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      initContainers:
        - name: init-chown
          image: busybox:1.34
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
          command:
            - /bin/sh
            - -c
            - mkdir -p /data/nethermind && chown -R 1000:1000 /data/nethermind
          volumeMounts:
            - name: data
              mountPath: /data/nethermind
      containers:
        - name: nethermind
          image: nethermind/nethermind:1.12.7
          imagePullPolicy: IfNotPresent
          workingDir: /data/nethermind
          command:
            - sh
            - -ac
            - |
              exec /nethermind/Nethermind.Runner --config=mainnet --datadir=/data/nethermind --JsonRpc.Enabled=true --JsonRpc.EnabledModules=Eth,Subscribe,Trace,TxPool,Web3,Personal,Proof,Net,Parity,Health --JsonRpc.Host=0.0.0.0 --JsonRpc.Port=8545 --JsonRpc.WebSocketsPort=8546 --Metrics.Enabled=true --Metrics.ExposePort=8008 --Network.ExternalIp=$(POD_IP) --Network.P2PPort=30303 --Network.DiscoveryPort=30303
          ports:
            - name: json-rest
              containerPort: 8545
              protocol: TCP
            - name: json-ws
              containerPort: 8546
              protocol: TCP
            - name: metrics
              containerPort: 8008
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data/nethermind
          resources:
            seccompProfile:
              type: RuntimeDefault
        - name: sidecar
          image: europe-west4-docker.pkg.dev/stakewiselabs/public/ethnode-sidecar:v1.0.3
          imagePullPolicy: IfNotPresent
          env:
            - name: SERVER_BINDADDR
              value: 0.0.0.0:3000
            - name: CLIENT_PORT
              value: "8545"
          ports:
            - containerPort: 3000
              name: sidecar
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 900
            timeoutSeconds: 3
            periodSeconds: 30
            failureThreshold: 3
            successThreshold: 1
            httpGet:
              path: /eth1/liveness
              port: sidecar
              scheme: HTTP
          readinessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 30
            failureThreshold: 30
            successThreshold: 2
            httpGet:
              path: /eth1/readiness
              port: sidecar
              scheme: HTTP
      volumes: null
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: nethermind
          helm.sh/chart: nethermind-1.0.2
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/managed-by: Helm
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: null
        resources:
          requests:
            storage: 250Gi
