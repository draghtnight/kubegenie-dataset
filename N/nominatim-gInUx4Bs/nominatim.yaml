apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-nominatim
  labels:
    helm.sh/chart: nominatim-1.2.2
    app.kubernetes.io/name: nominatim
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "3.7"
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.5.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: gInUx4Bs
type: Opaque
data:
  postgresql-postgres-password: bm9taW5hdGlt
  postgresql-password: bm9taW5hdGlt
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-postgresql-extended-configuration
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.5.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: gInUx4Bs
data:
  nominatim.conf: |-
    # See https://nominatim.org/release-docs/3.7.2/admin/Installation/#tuning-the-postgresql-database
    shared_buffers = 2GB
    maintenance_work_mem = 10GB
    autovacuum_work_mem = 2GB
    work_mem = 50MB
    effective_cache_size = 24GB
    synchronous_commit = off
    max_wal_size = 1GB
    checkpoint_timeout = 10min
    checkpoint_completion_target = 0.9
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-nominatim-apache-configmap
  namespace: gInUx4Bs
data:
  000-default.conf: |-
    <VirtualHost *:80>
      DocumentRoot /nominatim/website
      CustomLog "|$/usr/bin/rotatelogs -n 7 /var/log/apache2/access.log 86400" combined
      ErrorLog  "|$/usr/bin/rotatelogs -n 7 /var/log/apache2/error.log 86400"
      LogLevel info

      <Directory "/nominatim/nominatim-ui/dist">
        DirectoryIndex search.html
        Require all granted
      </Directory>

      Alias /ui /nominatim/nominatim-ui/dist

      <Directory /nominatim/website>
        Options FollowSymLinks MultiViews
        DirectoryIndex search.php
        Require all granted

        RewriteEngine On

          # This must correspond to the URL where nominatim can be found.
          RewriteBase "/"

          # If no endpoint is given, then use search.
          RewriteRule ^(/|$)   "search.php"

          # If format-html is explicity requested, forward to the UI.
          RewriteCond %{QUERY_STRING} "format=html"
          RewriteRule ^([^/]+).php ui/$1.html [R,END]
          # Same but .php suffix is missing.
          RewriteCond %{QUERY_STRING} "format=html"
          RewriteRule ^([^/]+) ui/$1.html [R,END]

          # If no format parameter is there then forward anything
          # but /reverse and /lookup to the UI.
          RewriteCond %{QUERY_STRING} "!format="
          RewriteCond %{REQUEST_URI}  "!/lookup"
          RewriteCond %{REQUEST_URI}  "!/reverse"
          RewriteRule ^([^/]+).php ui/$1.html [R,END]
          # Same but .php suffix is missing.
          RewriteCond %{QUERY_STRING} "!format="
          RewriteCond %{REQUEST_URI}  "!/lookup"
          RewriteCond %{REQUEST_URI}  "!/reverse"
          RewriteRule ^([^/]+) ui/$1.html [R,END]
      </Directory>

      AddType text/html .php
    </VirtualHost>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-nominatim-ui-configmap
  namespace: gInUx4Bs
  labels:
    app.kubernetes.io/name: nominatim
    helm.sh/chart: nominatim-1.2.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  config.theme.js: |2-
    Nominatim_Config.Nominatim_API_Endpoint = '/';
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.5.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: gInUx4Bs
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.5.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
  namespace: gInUx4Bs
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-nominatim
  labels:
    helm.sh/chart: nominatim-1.2.2
    app.kubernetes.io/name: nominatim
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "3.7"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: nominatim
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-nominatim
  labels:
    helm.sh/chart: nominatim-1.2.2
    app.kubernetes.io/name: nominatim
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "3.7"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nominatim
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nominatim
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-nominatim
      securityContext:
        fsGroup: 101
      containers:
        - name: nominatim
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          image: mediagis/nominatim:3.7
          workingDir: /nominatim
          imagePullPolicy: IfNotPresent
          env:
            - name: NOMINATIM_DATABASE_DSN
              value: pgsql:host=release-name-postgresql;port=5432;user=postgres;password=nominatim;dbname=nominatim
            - name: NOMINATIM_DATABASE_MODULE_PATH
              value: /bitnami
            - name: NOMINATIM_REPLICATION_URL
              value: https://download.geofabrik.de/europe/germany/sachsen-updates/
          command:
            - /bin/bash
            - -ec
            - |
              nominatim refresh --website
              a2enmod rewrite
              /usr/sbin/apache2ctl -D FOREGROUND
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /etc/apache2/sites-available
              name: apache-config
            - mountPath: /nominatim/nominatim-ui
              name: nominatim-ui
            - name: ui-config
              mountPath: /nominatim/nominatim-ui/dist/theme/config.theme.js
              subPath: config.theme.js
      initContainers:
        - name: nominatim-ui-download
          image: curlimages/curl
          workingDir: /nominatim/nominatim-ui
          command:
            - /bin/sh
            - -ec
            - |
              curl -L https://github.com/osm-search/nominatim-ui/releases/download/v3.2.1/nominatim-ui-3.2.1.tar.gz | tar -xz --strip-components 1
          securityContext:
            runAsUser: 1
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /nominatim/nominatim-ui
              name: nominatim-ui
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        - name: apache-config
          configMap:
            name: release-name-nominatim-apache-configmap
        - name: ui-config
          configMap:
            name: release-name-nominatim-ui-configmap
        - name: nominatim-ui
          emptyDir: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.5.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
  namespace: gInUx4Bs
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.5.3
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      containers:
        - name: release-name-postgresql
          image: docker.io/robjuz/postgresql-nominatim:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          securityContext:
            runAsUser: 10771
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-postgres-password
            - name: POSTGRES_USER
              value: www-data
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "www-data" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "www-data" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: postgresql-extended-config
              mountPath: /bitnami/postgresql/conf/conf.d/
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: null
      volumes:
        - name: postgresql-extended-config
          configMap:
            name: release-name-postgresql-extended-configuration
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 500Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-nominatim-test-connection
  labels:
    helm.sh/chart: nominatim-1.2.2
    app.kubernetes.io/name: nominatim
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "3.7"
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
spec:
  containers:
    - name: wget
      image: busybox
      command:
        - wget
      args:
        - release-name-nominatim:80
  restartPolicy: Never
