apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ingress-controller
  labels:
    app.kubernetes.io/name: ingress-controller
    helm.sh/chart: ingress-controller-0.8.401
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ingress-controller
  labels:
    app.kubernetes.io/name: ingress-controller
    helm.sh/chart: ingress-controller-0.8.401
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-ingress-controller
  labels:
    app.kubernetes.io/name: ingress-controller
    helm.sh/chart: ingress-controller-0.8.401
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-ingress-controller
subjects:
  - kind: ServiceAccount
    name: release-name-ingress-controller
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-ingress-controller
  labels:
    app.kubernetes.io/name: ingress-controller
    helm.sh/chart: ingress-controller-0.8.401
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: ingress
      port: 25565
      protocol: TCP
      targetPort: ingress
  selector:
    app.kubernetes.io/name: ingress-controller
    app.kubernetes.io/instance: release-name
  type: ClusterIP
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-ingress-controller
  labels:
    app.kubernetes.io/name: ingress-controller
    helm.sh/chart: ingress-controller-0.8.401
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-controller
      app.kubernetes.io/instance: release-name
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-controller
        helm.sh/chart: ingress-controller-0.8.401
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        fsGroup: 4242
        runAsNonRoot: true
        runAsUser: 4242
      containers:
        - name: ingress-controller
          image: docker.io/qumine/ingress-controller:v0.8.4
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 250m
              memory: 512Mi
            requests:
              cpu: 125m
              memory: 256Mi
          env:
            - name: PORT
              value: "25565"
          ports:
            - name: ingress
              containerPort: 25565
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
      dnsPolicy: ClusterFirst
      hostNetwork: true
      serviceAccountName: release-name-ingress-controller
