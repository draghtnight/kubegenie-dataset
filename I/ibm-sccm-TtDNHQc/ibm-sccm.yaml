apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-ibm-sccm-default-deny-all
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ibm-sccm
      app.kubernetes.io/instance: release-name
  policyTypes:
    - Ingress
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-ibm-sccm
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ibm-sccm
      app.kubernetes.io/instance: release-name
  egress:
    - {}
  ingress:
    - from: null
      ports:
        - port: 58080
          protocol: TCP
        - port: 58081
          protocol: TCP
        - port: 58082
          protocol: TCP
        - port: 58083
          protocol: TCP
  policyTypes:
    - Ingress
    - Egress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ibm-sccm-serviceaccount
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
    namespace: default
imagePullSecrets:
  - name: ibm-entitlement-key
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-ibm-sccm-pvc-ccm
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-ibm-sccm-pvc-ui
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-ibm-sccm-podclusterrole
  namespace: TtDNHQc
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-ibm-sccm-podrolebind
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ibm-sccm-podclusterrole
subjects:
  - kind: ServiceAccount
    name: release-name-ibm-sccm-serviceaccount
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-ibm-sccm
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
    author: IBM
spec:
  selector:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    release: release-name
    author: IBM
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - name: swing-console
      port: 58080
      targetPort: 58080
      protocol: TCP
    - name: web-console
      port: 58082
      targetPort: 58082
      protocol: TCP
    - name: web-console-secure
      port: 58083
      targetPort: 58083
      protocol: TCP
    - name: swing-console-secure
      port: 58081
      targetPort: 58081
      protocol: TCP
  sessionAffinity: ClientIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-ibm-sccm
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
    author: IBM
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ibm-sccm
      app.kubernetes.io/instance: release-name
      author: IBM
  serviceName: release-name-ibm-sccm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ibm-sccm
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ibm-sccm-1.0.9
        release: release-name
        author: IBM
      annotations:
        productID: 6827a92f0c4447ad8685d9ef4107c949
        productName: IBM Control Center Monitor Non-Prod Certified Container
        productVersion: v6.2
        productMetric: VIRTUAL_PROCESSOR_CORE
        productChargedContainers: All
    spec:
      serviceAccountName: release-name-ibm-sccm-serviceaccount
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        fsGroup: 1010
        runAsGroup: 1010
        runAsNonRoot: true
        runAsUser: 1010
        supplementalGroups:
          - 5555
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
          preferredDuringSchedulingIgnoredDuringExecution: null
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution: null
          preferredDuringSchedulingIgnoredDuringExecution: null
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution: null
          preferredDuringSchedulingIgnoredDuringExecution: null
      initContainers:
        - name: release-name-ibm-sccm-init-secret
          image: cp.icr.io/cp/ibm-scc/ibmscc@sha256:736ace83963c0bcf72942196ed0883aa248e16baf198f66622f16872e6ee0dfa
          imagePullPolicy: IfNotPresent
          env:
            - name: ENGINE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: APP_USER_UID
              value: "1010"
            - name: APP_USER_GID
              value: "1010"
          command:
            - /app/maintenance.sh
            - populateSecret
          volumeMounts:
            - mountPath: /app/CC/conf
              name: cc-volume
              subPathExpr: $(ENGINE_NAME)/conf
            - mountPath: /app/secret_files
              name: scc-secret
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
                - CHOWN
                - SETGID
                - SETUID
                - DAC_OVERRIDE
                - FOWNER
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsUser: 1010
      containers:
        - name: release-name-ibm-sccm
          image: cp.icr.io/cp/ibm-scc/ibmscc@sha256:736ace83963c0bcf72942196ed0883aa248e16baf198f66622f16872e6ee0dfa
          imagePullPolicy: IfNotPresent
          env:
            - name: LICENSE
              value: "false"
            - name: ENGINE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: APP_USER_UID
              value: "1010"
            - name: APP_USER_GID
              value: "1010"
            - name: CC_APP_INTERVAL
              value: 2h
            - name: NPROC_LIMIT
              value: "1048576"
            - name: NOFILE_LIMIT
              value: "1048576"
          volumeMounts:
            - mountPath: /app/CC/log/
              name: cc-volume
              subPathExpr: $(ENGINE_NAME)/logs
            - mountPath: /app/CC/conf/
              name: cc-volume
              subPathExpr: $(ENGINE_NAME)/conf
            - mountPath: /app/CC/conf-exported
              name: cc-volume
              subPathExpr: $(ENGINE_NAME)/conf-exported
            - mountPath: /app/CC/web/ccbase
              name: cc-volume
              subPathExpr: $(ENGINE_NAME)/ccbase
            - mountPath: /app/CC/packages/
              name: cc-volume
              subPathExpr: packages
            - mountPath: /app/CC/web/ccbase/reports
              name: cc-volume
              subPathExpr: reports
            - mountPath: /app/CC/user_inputs/
              name: cc-volume-user-inputs
              subPathExpr: user_inputs
            - mountPath: /app/cc_config_file
              name: scc-param
              subPath: scc_param_file
            - mountPath: /app/certs_secret_files
              name: sccm-certs-secret
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - CHOWN
                - SETGID
                - SETUID
                - DAC_OVERRIDE
                - FOWNER
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsUser: 11508
          livenessProbe:
            initialDelaySeconds: 175
            periodSeconds: 120
            timeoutSeconds: 45
            failureThreshold: 10
            exec:
              command:
                - bash
                - -c
                - monitorService.sh 58083
          readinessProbe:
            initialDelaySeconds: 175
            periodSeconds: 120
            timeoutSeconds: 15
            failureThreshold: 10
            exec:
              command:
                - bash
                - -c
                - monitorService.sh 58083
          resources:
            limits:
              cpu: 3000m
              ephemeral-storage: 4Gi
              memory: 8Gi
            requests:
              cpu: 1500m
              ephemeral-storage: 2Gi
              memory: 4Gi
      volumes:
        - name: cc-volume
          persistentVolumeClaim:
            claimName: release-name-ibm-sccm-pvc-ccm
        - name: cc-volume-user-inputs
          persistentVolumeClaim:
            claimName: release-name-ibm-sccm-pvc-ui
        - name: scc-param
          configMap:
            name: release-name-ibm-sccm
        - name: scc-secret
          secret:
            secretName: null
        - name: sccm-certs-secret
          secret:
            secretName: null
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: release-name-ibm-sccm
  annotations:
    helm.sh/hook: pre-install, pre-upgrade, pre-rollback
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
data:
  scc_param_file: "appUserUID=1010\nappUserGID=1010\nccInterval=2h\n#Control center database information\nproductEntitilement=CCD,CCM\ndbType=MSSQL\ndbHost=\ndbPort=1433\ndbUser=ibm\ndbName=CC_HELM\ndbLoc=none\ndbInit=false\ndbPartition=false\ndbDrivers=/app/CC/user_inputs/mssql-jdbc-7.4.1.jre8.jar\nmssqlGlobal=false\n\n#Port numbers of Control centers\nhttpPort=58080\nwebHttpPort=58082\nhttpsPort=58081\nwebHttpsPort=58083\n\nweblistenAddress=   \nwebHost=\nautoStopJavaWebAppServer=true\neventRepositoryAuth=false\n\n#Email related details\nemailHostname=localhost\nemailPort=25\nemailUser=\nemailRespond=noone@anywhere\nccAdminEmailAddress=noone@anywhere\n\noracleRacOrScan=\n\n#JMS related details\njmsEnable=\njmsType=\njmsHost=\njmsPort=\njmsQueueManager=\njmsChannel=\njmsSubject=\njmsTopic=\njmsEmbedBroker=\njmsDataDirectory=\njmsTimeToLive=\njmsRetries=\njmsRetryWait=\njmsBrokerName=\n\n#Secure parameters\ndbSSL=\n\n#JRE certificate details\nkeyStore=/app/CC/user_inputs/CCenter.keystore\ntrustStore=/app/CC/user_inputs/CCenter.truststore\nkeyAlias=ccalias120\nadminEmailAddress=admin@test.com    \n\n#seas parameters\npackagePath=../packages\nseasPrimaryAddress=\nseasPrimaryPort=\nseasAlternativeAddress=\nseasAlternativePort=\nseasSecureConnection=N\nseasProfileName=test\nseasPersistentConnection=N\nseasSecureProtocol=\n"
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-ibm-sccm-test
  annotations:
    helm.sh/hook: test-success
    helm.sh/hook-delete-policy: hook-succeeded
    productID: 6827a92f0c4447ad8685d9ef4107c949
    productName: IBM Control Center Monitor Non-Prod Certified Container
    productVersion: v6.2
  labels:
    app.kubernetes.io/name: ibm-sccm-test
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
spec:
  restartPolicy: Never
  serviceAccountName: release-name-ibm-sccm-serviceaccount
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    fsGroup: 1010
    runAsGroup: 1010
    runAsNonRoot: true
    runAsUser: 1010
    supplementalGroups:
      - 5555
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - amd64
      preferredDuringSchedulingIgnoredDuringExecution: null
  containers:
    - name: ibm-sccm
      image: cp.icr.io/cp/ibm-scc/ibmscc@sha256:736ace83963c0bcf72942196ed0883aa248e16baf198f66622f16872e6ee0dfa
      imagePullPolicy: IfNotPresent
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
            - CHOWN
            - SETGID
            - SETUID
            - DAC_OVERRIDE
            - FOWNER
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: false
        runAsUser: 1010
      command:
        - /bin/sh
        - -c
        - ret=`cat /app/CC/log/CCStartup.log | grep 'Web Server has been started!'` ; if [[ -n $ret ]]; then echo 'IBM SCC installation is successful and IBM Control Center Monitor application is running!' ; else echo 'IBM SCC application is not running!' ; fi
      resources:
        limits:
          cpu: 3000m
          memory: 8Gi
        requests:
          cpu: 1500m
          memory: 4Gi
      env:
        - name: LICENSE
          value: "false"
        - name: ENGINE_NAME
          value: release-name-ibm-sccm-0
      volumeMounts:
        - mountPath: /app/CC/log/
          name: cc-volume
          subPathExpr: $(ENGINE_NAME)/logs
  imagePullSecrets:
    - name: ibm-entitlement-key
  volumes:
    - name: cc-volume
      persistentVolumeClaim:
        claimName: release-name-ibm-sccm-pvc-ccm
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-ibm-sccm-prerollback
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
  annotations:
    helm.sh/hook: pre-rollback
    helm.sh/hook-weight: "2"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: release-name
      labels:
        app.kubernetes.io/name: ibm-sccm-prerollback
        app.kubernetes.io/instance: release-name-prerollback
        app.kubernetes.io/managed-by: Helm-prerollback
        helm.sh/chart: ibm-sccm-1.0.9-prerollback
        release: release-name-prerollback
      annotations:
        productID: 6827a92f0c4447ad8685d9ef4107c949
        productName: IBM Control Center Monitor Non-Prod Certified Container
        productVersion: v6.2
        productMetric: VIRTUAL_PROCESSOR_CORE
        productChargedContainers: All
    spec:
      serviceAccountName: release-name-ibm-sccm-serviceaccount
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        fsGroup: 1010
        runAsGroup: 1010
        runAsNonRoot: true
        runAsUser: 1010
        supplementalGroups:
          - 5555
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
          preferredDuringSchedulingIgnoredDuringExecution: null
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution: null
          preferredDuringSchedulingIgnoredDuringExecution: null
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution: null
          preferredDuringSchedulingIgnoredDuringExecution: null
      restartPolicy: Never
      containers:
        - name: post-rollback-job
          image: cp.icr.io/cp/ibm-scc/ibmscc@sha256:736ace83963c0bcf72942196ed0883aa248e16baf198f66622f16872e6ee0dfa
          imagePullPolicy: IfNotPresent
          command:
            - /app/maintenance.sh
            - rollback
            - release-name-ibm-sccm
          volumeMounts:
            - mountPath: /app/backup
              name: cc-volume
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - CHOWN
                - SETGID
                - SETUID
                - DAC_OVERRIDE
                - FOWNER
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsUser: 10660
      volumes:
        - name: cc-volume
          persistentVolumeClaim:
            claimName: release-name-ibm-sccm-pvc-ccm
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-ibm-sccm-preupgrade
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-1.0.9
    release: release-name
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "2"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: release-name
      labels:
        app.kubernetes.io/name: ibm-sccm-preupgrade
        app.kubernetes.io/instance: release-name-preupgrade
        app.kubernetes.io/managed-by: Helm-preupgrade
        helm.sh/chart: ibm-sccm-1.0.9-preupgrade
        release: release-name-preupgrade
      annotations:
        productID: 6827a92f0c4447ad8685d9ef4107c949
        productName: IBM Control Center Monitor Non-Prod Certified Container
        productVersion: v6.2
        productMetric: VIRTUAL_PROCESSOR_CORE
        productChargedContainers: All
    spec:
      serviceAccountName: release-name-ibm-sccm-serviceaccount
      restartPolicy: Never
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        fsGroup: 1010
        runAsGroup: 1010
        runAsNonRoot: true
        runAsUser: 1010
        supplementalGroups:
          - 5555
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
          preferredDuringSchedulingIgnoredDuringExecution: null
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution: null
          preferredDuringSchedulingIgnoredDuringExecution: null
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution: null
          preferredDuringSchedulingIgnoredDuringExecution: null
      containers:
        - name: pre-upgrade-job
          image: cp.icr.io/cp/ibm-scc/ibmscc@sha256:736ace83963c0bcf72942196ed0883aa248e16baf198f66622f16872e6ee0dfa
          imagePullPolicy: IfNotPresent
          command:
            - /app/maintenance.sh
            - upgrade
            - release-name-ibm-sccm
          env:
            - name: FIRST_POD
              value: release-name-ibm-sccm-0
          volumeMounts:
            - mountPath: /app/CC/log/
              name: cc-volume
              subPathExpr: $(FIRST_POD)/logs
            - mountPath: /app/CC/conf/
              name: cc-volume
              subPathExpr: $(FIRST_POD)/conf
            - mountPath: /app/CC/conf-exported
              name: cc-volume
              subPathExpr: $(FIRST_POD)/conf-exported
            - mountPath: /app/CC/web/ccbase
              name: cc-volume
              subPathExpr: $(FIRST_POD)/ccbase
            - mountPath: /app/CC/user_inputs/
              name: cc-volume-user-inputs
              subPathExpr: user_inputs
            - mountPath: /app/backup
              name: cc-volume
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - CHOWN
                - SETGID
                - SETUID
                - DAC_OVERRIDE
                - FOWNER
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsUser: 10554
      volumes:
        - name: cc-volume
          persistentVolumeClaim:
            claimName: release-name-ibm-sccm-pvc-ccm
        - name: cc-volume-user-inputs
          persistentVolumeClaim:
            claimName: release-name-ibm-sccm-pvc-ui
