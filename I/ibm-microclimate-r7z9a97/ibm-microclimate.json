[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app": "release-name-postgresql",
        "chart": "postgresql-0.8.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "postgres-password": "Z2l0bGFi"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-redis",
      "labels": {
        "app": "release-name-redis",
        "chart": "redis-0.9.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "redis-password": "Z2l0bGFi"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-gitlab-ce",
      "labels": {
        "app": "release-name-gitlab-ce",
        "chart": "gitlab-ce-0.2.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "gitlab-root-password": "cGFzc3dvcmQ=",
      "db-user": "Z2l0bGFi",
      "db-password": "Z2l0bGFi",
      "redis-password": "Z2l0bGFi"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-jenkins",
      "labels": {
        "app": "release-name-jenkins",
        "chart": "jenkins-0.12.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "jenkins-admin-password": "YWRtaW4=",
      "jenkins-admin-user": "YWRtaW4="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-ibm-microclimate",
      "labels": {
        "app": "release-name-ibm-microclimate",
        "chart": "ibm-microclimate-0.1.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "type": "Opaque",
    "data": {
      "jenkins-admin-password": "YWRtaW4=",
      "jenkins-admin-user": "YWRtaW4=",
      "jenkins-admin-api-token": "YmU2NTJlMGU2MGIwYWYwNjdjMmI1NGNkMDQ3MjBkZjM="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-gitlab-ce",
      "labels": {
        "app": "release-name-gitlab-ce",
        "chart": "gitlab-ce-0.2.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "gitlab_omnibus_config": "external_url ENV['EXTERNAL_URL'];\nroot_pass = ENV['GITLAB_ROOT_PASSWORD'];\ngitlab_rails['initial_root_password'] = root_pass unless root_pass.to_s == '';\npostgresql['enable'] = false;\ngitlab_rails['db_host'] = ENV['DB_HOST'];\ngitlab_rails['db_password'] = ENV['DB_PASSWORD'];\ngitlab_rails['db_username'] = ENV['DB_USER'];\ngitlab_rails['db_database'] = ENV['DB_DATABASE'];\nredis['enable'] = false;\ngitlab_rails['redis_host'] = ENV['REDIS_HOST'];\ngitlab_rails['redis_password'] = ENV['REDIS_PASSWORD'];\nunicorn['worker_processes'] = 2;\nmanage_accounts['enable'] = true;\nmanage_storage_directories['manage_etc'] = false;\ngitlab_shell['auth_file'] = '/gitlab-data/ssh/authorized_keys';\ngit_data_dir '/gitlab-data/git-data';\ngitlab_rails['shared_path'] = '/gitlab-data/shared';\ngitlab_rails['uploads_directory'] = '/gitlab-data/uploads';\ngitlab_ci['builds_directory'] = '/gitlab-data/builds';\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-jenkins"
    },
    "data": {
      "user_config.xml": "<?xml version='1.0' encoding='UTF-8'?>\n<user>\n  <fullName>admin</fullName>\n  <description></description>\n  <properties>\n    <jenkins.security.ApiTokenProperty>\n      <apiToken>{AQAAABAAAAAwSTU69OS1ao84T1ELN3Nb+UNbeU+n29OVrqX69YoNHEW0jAO53lgXrllwn8eIcNwteXMGP/MOxhhWanY2woXh8w==}</apiToken>\n    </jenkins.security.ApiTokenProperty>\n    <com.cloudbees.plugins.credentials.UserCredentialsProvider_-UserCredentialsProperty plugin=\"credentials@2.1.16\">\n      <domainCredentialsMap class=\"hudson.util.CopyOnWriteMap$Hash\">\n        <entry>\n          <com.cloudbees.plugins.credentials.domains.Domain>\n            <specifications/>\n          </com.cloudbees.plugins.credentials.domains.Domain>\n          <java.util.concurrent.CopyOnWriteArrayList/>\n        </entry>\n      </domainCredentialsMap>\n    </com.cloudbees.plugins.credentials.UserCredentialsProvider_-UserCredentialsProperty>\n    <hudson.tasks.Mailer_-UserProperty plugin=\"mailer@1.20\">\n      <emailAddress></emailAddress>\n    </hudson.tasks.Mailer_-UserProperty>\n    <hudson.model.MyViewsProperty>\n      <primaryViewName></primaryViewName>\n      <views>\n        <hudson.model.AllView>\n          <owner class=\"hudson.model.MyViewsProperty\" reference=\"../../..\"/>\n          <name>all</name>\n          <filterExecutors>false</filterExecutors>\n          <filterQueue>false</filterQueue>\n          <properties class=\"hudson.model.View$PropertyList\"/>\n        </hudson.model.AllView>\n      </views>\n    </hudson.model.MyViewsProperty>\n    <org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty plugin=\"display-url-api@2.2.0\">\n      <providerId>default</providerId>\n    </org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty>\n    <hudson.model.PaneStatusProperties>\n      <collapsed/>\n    </hudson.model.PaneStatusProperties>\n    <org.jenkinsci.main.modules.cli.auth.ssh.UserPropertyImpl>\n      <authorizedKeys></authorizedKeys>\n    </org.jenkinsci.main.modules.cli.auth.ssh.UserPropertyImpl>\n    <hudson.search.UserSearchProperty>\n      <insensitiveSearch>true</insensitiveSearch>\n    </hudson.search.UserSearchProperty>\n  </properties>\n</user>",
      "config.xml": "<?xml version='1.0' encoding='UTF-8'?>\n<hudson>\n  <disabledAdministrativeMonitors/>\n  <version>lts</version>\n  <numExecutors>0</numExecutors>\n  <mode>NORMAL</mode>\n  <useSecurity>true</useSecurity>\n  <authorizationStrategy class=\"hudson.security.FullControlOnceLoggedInAuthorizationStrategy\">\n    <denyAnonymousReadAccess>true</denyAnonymousReadAccess>\n  </authorizationStrategy>\n  <securityRealm class=\"hudson.security.LegacySecurityRealm\"/>\n  <disableRememberMe>false</disableRememberMe>\n  <projectNamingStrategy class=\"jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy\"/>\n  <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULLNAME}</workspaceDir>\n  <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>\n  <markupFormatter class=\"hudson.markup.EscapedMarkupFormatter\"/>\n  <jdks/>\n  <viewsTabBar class=\"hudson.views.DefaultViewsTabBar\"/>\n  <myViewsTabBar class=\"hudson.views.DefaultMyViewsTabBar\"/>\n  <clouds>\n    <org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud plugin=\"kubernetes@1.3.1\">\n      <name>kubernetes</name>\n      <templates>\n        <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>\n          <inheritFrom></inheritFrom>\n          <name>default</name>\n          <instanceCap>2147483647</instanceCap>\n          <idleMinutes>0</idleMinutes>\n          <label>release-name-jenkins-slave</label>\n          <nodeSelector></nodeSelector>\n            <nodeUsageMode>NORMAL</nodeUsageMode>\n          <volumes>\n          </volumes>\n          <containers>\n            <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>\n              <name>jnlp</name>\n              <image>jenkins/jnlp-slave:3.10-1</image>\n              <privileged>false</privileged>\n              <alwaysPullImage>false</alwaysPullImage>\n              <workingDir>/home/jenkins</workingDir>\n              <command></command>\n              <args>${computer.jnlpmac} ${computer.name}</args>\n              <ttyEnabled>false</ttyEnabled>\n              <resourceRequestCpu>200m</resourceRequestCpu>\n              <resourceRequestMemory>256Mi</resourceRequestMemory>\n              <resourceLimitCpu>200m</resourceLimitCpu>\n              <resourceLimitMemory>256Mi</resourceLimitMemory>\n              <envVars>\n                <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>\n                  <key>JENKINS_URL</key>\n                  <value>http://release-name-jenkins:8080</value>\n                </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>\n              </envVars>\n            </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>\n          </containers>\n          <envVars/>\n          <annotations/>\n          <imagePullSecrets/>\n          <nodeProperties/>\n        </org.csanchez.jenkins.plugins.kubernetes.PodTemplate></templates>\n      <serverUrl>https://kubernetes.default</serverUrl>\n      <skipTlsVerify>false</skipTlsVerify>\n      <namespace>default</namespace>\n      <jenkinsUrl>http://release-name-jenkins:8080</jenkinsUrl>\n      <jenkinsTunnel>release-name-jenkins-agent:50000</jenkinsTunnel>\n      <containerCap>10</containerCap>\n      <retentionTimeout>5</retentionTimeout>\n      <connectTimeout>0</connectTimeout>\n      <readTimeout>0</readTimeout>\n    </org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud>\n  </clouds>\n  <quietPeriod>5</quietPeriod>\n  <scmCheckoutRetryCount>0</scmCheckoutRetryCount>\n  <views>\n    <hudson.model.AllView>\n      <owner class=\"hudson\" reference=\"../../..\"/>\n      <name>All</name>\n      <filterExecutors>false</filterExecutors>\n      <filterQueue>false</filterQueue>\n      <properties class=\"hudson.model.View$PropertyList\"/>\n    </hudson.model.AllView>\n  </views>\n  <primaryView>All</primaryView>\n  <slaveAgentPort>50000</slaveAgentPort>\n  <label></label>\n  <nodeProperties/>\n  <globalNodeProperties>\n    <hudson.slaves.EnvironmentVariablesNodeProperty>\n      <envVars serialization=\"custom\">\n        <unserializable-parents/>\n        <tree-map>\n          <default>\n            <comparator class=\"hudson.util.CaseInsensitiveComparator\"/>\n          </default>\n          <int>8</int>\n          <string>BUILD</string>\n          <string>true</string>\n          <string>DEPLOY</string>\n          <string>true</string>\n          <string>TEST</string>\n          <string>true</string>\n          <string>DEBUG</string>\n          <string>false</string>\n          <string>NAMESPACE</string>\n          <string>microclimate-pipeline-deployments</string>\n          <string>DEFAULT_DEPLOY_BRANCH</string>\n          <string></string>\n          <string>REGISTRY</string>\n          <string>mycluster.icp:8500/default</string>\n          <string>REGISTRY_SECRET</string>\n          <string>microclimate-icp-secret</string>\n        </tree-map>\n      </envVars>\n    </hudson.slaves.EnvironmentVariablesNodeProperty>\n  </globalNodeProperties>\n  <noUsageStatistics>true</noUsageStatistics>\n</hudson>",
      "apply_config.sh": "mkdir -p /usr/share/jenkins/ref/secrets/;\necho \"false\" > /usr/share/jenkins/ref/secrets/slave-to-master-security-kill-switch;\ncp -n /var/jenkins_config/config.xml /var/jenkins_home;\ncp -n /var/jenkins_config/org.jenkinsci.plugins.workflow.libs.GlobalLibraries.xml /var/jenkins_home;\nmkdir -p /var/jenkins_home/users/admin;\ncp -n /var/jenkins_config/user_config.xml /var/jenkins_home/users/admin/config.xml;\ncp /var/jenkins_config/plugins.txt /var/jenkins_home;\nrm -rf /usr/share/jenkins/ref/plugins/*.lock\n/usr/local/bin/install-plugins.sh `echo $(cat /var/jenkins_home/plugins.txt)`;",
      "plugins.txt": "kubernetes:1.3.1\nworkflow-aggregator:2.5\nworkflow-job:2.17\ncredentials-binding:1.15\ngit:3.8.0",
      "org.jenkinsci.plugins.workflow.libs.GlobalLibraries.xml": "<?xml version='1.0' encoding='UTF-8'?>\n<org.jenkinsci.plugins.workflow.libs.GlobalLibraries plugin=\"workflow-cps-global-lib@2.9\">\n  <libraries>\n    <org.jenkinsci.plugins.workflow.libs.LibraryConfiguration>\n      <name>MicroserviceBuilder</name>\n      <retriever class=\"org.jenkinsci.plugins.workflow.libs.SCMSourceRetriever\">\n        <scm class=\"jenkins.plugins.git.GitSCMSource\" plugin=\"git@3.7.0\">\n          <id>msb.lib</id>\n          <remote>https://github.com/WASdev/microservicebuilder.lib.git</remote>\n          <credentialsId>github-oauth-userpass</credentialsId>\n          <traits>\n            <jenkins.plugins.git.traits.BranchDiscoveryTrait/>\n          </traits>\n        </scm>\n      </retriever>\n      <defaultVersion>microclimate-beta</defaultVersion>\n      <implicit>true</implicit>\n      <allowVersionOverride>true</allowVersionOverride>\n      <includeInChangesets>true</includeInChangesets>\n    </org.jenkinsci.plugins.workflow.libs.LibraryConfiguration>\n  </libraries>\n</org.jenkinsci.plugins.workflow.libs.GlobalLibraries>"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-jenkins-tests"
    },
    "data": {
      "run.sh": "@test \"Testing Jenkins UI is accessible\" {\n  curl --retry 24 --retry-delay 10 release-name-jenkins:8080/login\n}"
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app": "release-name-postgresql",
        "chart": "postgresql-0.8.1",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "volume.alpha.kubernetes.io/storage-class": "default"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "10Gi"
        }
      }
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-redis",
      "labels": {
        "app": "release-name-redis",
        "chart": "redis-0.9.0",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "volume.alpha.kubernetes.io/storage-class": "default"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "10Gi"
        }
      }
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-gitlab-ce-data",
      "annotations": {
        "volume.alpha.kubernetes.io/storage-class": "default"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "10Gi"
        }
      }
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-gitlab-ce-etc",
      "annotations": {
        "volume.alpha.kubernetes.io/storage-class": "default"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "1Gi"
        }
      }
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-jenkins",
      "labels": {
        "app": "release-name-jenkins",
        "chart": "jenkins-0.12.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "8Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
      "name": "release-name-ibm-microclimate",
      "labels": {
        "app": "release-name-ibm-microclimate",
        "chart": "ibm-microclimate-0.1.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "storageClassName": null,
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "2Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app": "release-name-postgresql",
        "chart": "postgresql-0.8.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "postgresql",
          "port": 5432,
          "targetPort": "postgresql"
        }
      ],
      "selector": {
        "app": "release-name-postgresql"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-redis",
      "labels": {
        "app": "release-name-redis",
        "chart": "redis-0.9.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "ports": [
        {
          "name": "redis",
          "port": 6379,
          "targetPort": "redis"
        }
      ],
      "selector": {
        "app": "release-name-redis"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-gitlab-ce",
      "labels": {
        "app": "release-name-gitlab-ce",
        "chart": "gitlab-ce-0.2.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "ssh",
          "port": 22,
          "targetPort": "ssh"
        },
        {
          "name": "http",
          "port": 80,
          "targetPort": "http"
        },
        {
          "name": "https",
          "port": 443,
          "targetPort": "https"
        }
      ],
      "selector": {
        "app": "release-name-gitlab-ce"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-jenkins-agent",
      "labels": {
        "app": "release-name-jenkins",
        "chart": "jenkins-0.12.1",
        "component": "release-name-jenkins-master"
      }
    },
    "spec": {
      "ports": [
        {
          "port": 50000,
          "targetPort": 50000,
          "name": "slavelistener"
        }
      ],
      "selector": {
        "component": "release-name-jenkins-master"
      },
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-jenkins",
      "labels": {
        "app": "release-name-jenkins",
        "heritage": "Helm",
        "release": "release-name",
        "chart": "jenkins-0.12.1",
        "component": "release-name-jenkins-master"
      }
    },
    "spec": {
      "ports": [
        {
          "port": 8080,
          "name": "http",
          "targetPort": 8080
        }
      ],
      "selector": {
        "component": "release-name-jenkins-master"
      },
      "type": "ClusterIP"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-ibm-microclimate",
      "labels": {
        "app": "release-name-ibm-microclimate",
        "chart": "ibm-microclimate-0.1.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "NodePort",
      "ports": [
        {
          "port": 4191,
          "name": "theia-http"
        },
        {
          "port": 9090,
          "name": "portal-http"
        },
        {
          "port": 9091,
          "name": "file-watcher-http"
        }
      ],
      "selector": {
        "app": "release-name-ibm-microclimate",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-ibm-microclimate-devops"
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 9191,
          "targetPort": 9191,
          "protocol": "TCP",
          "name": "devops-devops"
        }
      ],
      "selector": {
        "app": "release-name-ibm-microclimate-devops",
        "release": "release-name"
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app": "release-name-postgresql",
        "chart": "postgresql-0.8.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-postgresql"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "release-name-postgresql",
              "image": "postgres:9.6",
              "imagePullPolicy": "",
              "env": [
                {
                  "name": "POSTGRES_USER",
                  "value": "gitlab"
                },
                {
                  "name": "PGUSER",
                  "value": "gitlab"
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "gitlab"
                },
                {
                  "name": "POSTGRES_INITDB_ARGS",
                  "value": ""
                },
                {
                  "name": "PGDATA",
                  "value": "/var/lib/postgresql/data/pgdata"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-postgresql",
                      "key": "postgres-password"
                    }
                  }
                },
                {
                  "name": "POD_IP",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "status.podIP"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "name": "postgresql",
                  "containerPort": 5432
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "exec pg_isready --host $POD_IP"
                  ]
                },
                "initialDelaySeconds": 60,
                "timeoutSeconds": 5,
                "failureThreshold": 6
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "exec pg_isready --host $POD_IP"
                  ]
                },
                "initialDelaySeconds": 5,
                "timeoutSeconds": 3,
                "periodSeconds": 5
              },
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "data",
                  "mountPath": "/var/lib/postgresql/data/pgdata",
                  "subPath": "postgresql-db"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "data",
              "persistentVolumeClaim": {
                "claimName": "release-name-postgresql"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-redis",
      "labels": {
        "app": "release-name-redis",
        "chart": "redis-0.9.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-redis"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "release-name-redis",
              "image": "bitnami/redis:3.2.9-r2",
              "imagePullPolicy": "IfNotPresent",
              "env": [
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-redis",
                      "key": "redis-password"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "name": "redis",
                  "containerPort": 6379
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "redis-cli",
                    "ping"
                  ]
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "redis-cli",
                    "ping"
                  ]
                },
                "initialDelaySeconds": 5,
                "timeoutSeconds": 1
              },
              "resources": {
                "requests": {
                  "cpu": "100m",
                  "memory": "1Gi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "name": "redis-data",
                  "mountPath": "/bitnami/redis"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "redis-data",
              "persistentVolumeClaim": {
                "claimName": "release-name-redis"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-gitlab-ce",
      "labels": {
        "app": "release-name-gitlab-ce",
        "chart": "gitlab-ce-0.2.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-gitlab-ce"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "release-name-gitlab-ce",
              "image": "gitlab/gitlab-ce:9.4.1-ce.0",
              "imagePullPolicy": "",
              "env": [
                {
                  "name": "GITLAB_OMNIBUS_CONFIG",
                  "valueFrom": {
                    "configMapKeyRef": {
                      "name": "release-name-gitlab-ce",
                      "key": "gitlab_omnibus_config"
                    }
                  }
                },
                {
                  "name": "GITLAB_ROOT_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-gitlab-ce",
                      "key": "gitlab-root-password"
                    }
                  }
                },
                {
                  "name": "EXTERNAL_URL",
                  "value": "http://gitlab.192.168.99.100.nip.io/"
                },
                {
                  "name": "DB_HOST",
                  "value": "release-name-postgresql"
                },
                {
                  "name": "DB_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-gitlab-ce",
                      "key": "db-user"
                    }
                  }
                },
                {
                  "name": "DB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-gitlab-ce",
                      "key": "db-password"
                    }
                  }
                },
                {
                  "name": "DB_DATABASE",
                  "value": "gitlab"
                },
                {
                  "name": "REDIS_HOST",
                  "value": "release-name-redis"
                },
                {
                  "name": "REDIS_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-gitlab-ce",
                      "key": "redis-password"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "name": "ssh",
                  "containerPort": 22
                },
                {
                  "name": "http",
                  "containerPort": 80
                },
                {
                  "name": "https",
                  "containerPort": 443
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/help",
                  "port": "http"
                },
                "initialDelaySeconds": 200,
                "timeoutSeconds": 1,
                "periodSeconds": 10,
                "successThreshold": 1,
                "failureThreshold": 10
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/help",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 1,
                "periodSeconds": 10,
                "successThreshold": 1,
                "failureThreshold": 3
              },
              "volumeMounts": [
                {
                  "name": "gitlab-etc",
                  "mountPath": "/etc/gitlab"
                },
                {
                  "name": "gitlab-data",
                  "mountPath": "/gitlab-data"
                }
              ],
              "resources": {
                "limits": {
                  "cpu": 1,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "1Gi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "gitlab-etc",
              "persistentVolumeClaim": {
                "claimName": "release-name-gitlab-ce-etc"
              }
            },
            {
              "name": "gitlab-data",
              "persistentVolumeClaim": {
                "claimName": "release-name-gitlab-ce-data"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-jenkins",
      "labels": {
        "heritage": "Helm",
        "release": "release-name",
        "chart": "jenkins-0.12.1",
        "component": "release-name-jenkins-master"
      }
    },
    "spec": {
      "replicas": 1,
      "strategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "component": "release-name-jenkins-master"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-jenkins",
            "heritage": "Helm",
            "release": "release-name",
            "chart": "jenkins-0.12.1",
            "component": "release-name-jenkins-master"
          },
          "annotations": {
            "checksum/config": "7d145c3abd70515593ce673c94c7a9a8139e3a06ebd490b2ea5e04cf453f3ba7"
          }
        },
        "spec": {
          "securityContext": {
            "runAsUser": 0
          },
          "serviceAccountName": "default",
          "initContainers": [
            {
              "name": "copy-default-config",
              "image": "jenkins/jenkins:lts",
              "imagePullPolicy": "Always",
              "command": [
                "sh",
                "/var/jenkins_config/apply_config.sh"
              ],
              "volumeMounts": [
                {
                  "mountPath": "/var/jenkins_home",
                  "name": "jenkins-home"
                },
                {
                  "mountPath": "/var/jenkins_config",
                  "name": "jenkins-config"
                },
                {
                  "mountPath": "/usr/share/jenkins/ref/plugins/",
                  "name": "plugin-dir"
                },
                {
                  "mountPath": "/usr/share/jenkins/ref/secrets/",
                  "name": "secrets-dir"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "release-name-jenkins",
              "image": "jenkins/jenkins:lts",
              "imagePullPolicy": "Always",
              "args": [
                "--argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)",
                "--argumentsRealm.roles.$(ADMIN_USER)=admin"
              ],
              "env": [
                {
                  "name": "JAVA_OPTS",
                  "value": ""
                },
                {
                  "name": "JENKINS_OPTS",
                  "value": ""
                },
                {
                  "name": "ADMIN_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-jenkins",
                      "key": "jenkins-admin-password"
                    }
                  }
                },
                {
                  "name": "ADMIN_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-jenkins",
                      "key": "jenkins-admin-user"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "containerPort": 8080,
                  "name": "http"
                },
                {
                  "containerPort": 50000,
                  "name": "slavelistener"
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/login",
                  "port": "http"
                },
                "initialDelaySeconds": 120
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/login",
                  "port": "http"
                },
                "initialDelaySeconds": 120
              },
              "resources": {
                "requests": {
                  "cpu": "200m",
                  "memory": "256Mi"
                },
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/var/jenkins_home",
                  "name": "jenkins-home",
                  "readOnly": false
                },
                {
                  "mountPath": "/var/jenkins_config",
                  "name": "jenkins-config",
                  "readOnly": true
                },
                {
                  "mountPath": "/usr/share/jenkins/ref/plugins/",
                  "name": "plugin-dir",
                  "readOnly": false
                },
                {
                  "mountPath": "/usr/share/jenkins/ref/secrets/",
                  "name": "secrets-dir",
                  "readOnly": false
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "jenkins-config",
              "configMap": {
                "name": "release-name-jenkins"
              }
            },
            {
              "name": "plugin-dir",
              "emptyDir": {}
            },
            {
              "name": "secrets-dir",
              "emptyDir": {}
            },
            {
              "name": "jenkins-home",
              "persistentVolumeClaim": {
                "claimName": "release-name-jenkins"
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-ibm-microclimate",
      "labels": {
        "app": "release-name-ibm-microclimate",
        "chart": "ibm-microclimate-0.1.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-ibm-microclimate",
            "chart": "ibm-microclimate-0.1.0",
            "release": "release-name",
            "heritage": "Helm"
          },
          "annotations": {
            "productName": "IBM Microclimate v1",
            "productID": "IBMMicroclimate_1.0_perpetual_00000",
            "productVersion": "1.0"
          }
        },
        "spec": {
          "affinity": {
            "nodeAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": {
                "nodeSelectorTerms": [
                  {
                    "matchExpressions": [
                      {
                        "key": "beta.kubernetes.io/arch",
                        "operator": "In",
                        "values": [
                          "amd64"
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          },
          "volumes": [
            {
              "name": "shared-workspace",
              "persistentVolumeClaim": {
                "claimName": "release-name-ibm-microclimate"
              }
            },
            {
              "name": "docker-socket",
              "hostPath": {
                "path": "/var/run/"
              }
            },
            {
              "name": "registry-secret",
              "secret": {
                "secretName": "microclimate-icp-secret"
              }
            }
          ],
          "containers": [
            {
              "name": "microclimate-portal",
              "image": "ibmcom/microclimate-portal:latest",
              "imagePullPolicy": "Always",
              "volumeMounts": [
                {
                  "name": "shared-workspace",
                  "mountPath": "/microclimate-workspace"
                },
                {
                  "name": "docker-socket",
                  "mountPath": "/var/run/"
                }
              ],
              "env": [
                {
                  "name": "IN_K8",
                  "value": "true"
                },
                {
                  "name": "JMETER_IMAGE",
                  "value": "ibmcom/microclimate-jmeter:latest"
                },
                {
                  "name": "SERVICE_NAME",
                  "value": "release-name-ibm-microclimate"
                },
                {
                  "name": "EDITOR_IMAGE",
                  "value": "ibmcom/microclimate-theia:latest"
                },
                {
                  "name": "EDITOR_MEM_REQUEST",
                  "value": "350Mi"
                },
                {
                  "name": "EDITOR_CPU_REQUEST",
                  "value": "30m"
                },
                {
                  "name": "EDITOR_MEM_LIMIT",
                  "value": "1Gi"
                },
                {
                  "name": "EDITOR_CPU_LIMIT",
                  "value": "500m"
                }
              ],
              "ports": [
                {
                  "containerPort": 9090
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "httpGet": {
                  "path": "/",
                  "port": 9090
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 10,
                "httpGet": {
                  "path": "/",
                  "port": 9090
                }
              },
              "resources": {
                "requests": {
                  "memory": "128Mi",
                  "cpu": "300m"
                },
                "limits": {
                  "memory": "2Gi",
                  "cpu": "500m"
                }
              }
            },
            {
              "name": "microclimate-editor",
              "image": "ibmcom/microclimate-theia:latest",
              "imagePullPolicy": "Always",
              "volumeMounts": [
                {
                  "name": "shared-workspace",
                  "mountPath": "/home/microclimate-workspace"
                }
              ],
              "ports": [
                {
                  "containerPort": 4191
                }
              ],
              "livenessProbe": {
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "httpGet": {
                  "path": "/",
                  "port": 4191
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 10,
                "httpGet": {
                  "path": "/",
                  "port": 4191
                }
              },
              "resources": {
                "requests": {
                  "memory": "350Mi",
                  "cpu": "30m"
                },
                "limits": {
                  "memory": "1Gi",
                  "cpu": "500m"
                }
              }
            },
            {
              "name": "microclimate-file-watcher",
              "image": "ibmcom/microclimate-file-watcher:latest",
              "imagePullPolicy": "Always",
              "volumeMounts": [
                {
                  "name": "shared-workspace",
                  "mountPath": "/microclimate-workspace"
                },
                {
                  "name": "docker-socket",
                  "mountPath": "/var/run/"
                },
                {
                  "name": "registry-secret",
                  "mountPath": "/tmp/secret"
                }
              ],
              "env": [
                {
                  "name": "IN_K8",
                  "value": "true"
                },
                {
                  "name": "JMETER_IMAGE",
                  "value": "ibmcom/microclimate-jmeter:latest"
                },
                {
                  "name": "DOCKER_REGISTRY",
                  "value": "mycluster.icp:8500/default"
                }
              ],
              "ports": [
                {
                  "containerPort": 9091
                }
              ],
              "command": [
                "/scripts/root-watcher.sh",
                "/microclimate-workspace"
              ],
              "livenessProbe": {
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "httpGet": {
                  "path": "/health",
                  "port": 9091
                }
              },
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 10,
                "httpGet": {
                  "path": "/health",
                  "port": 9091
                }
              },
              "resources": {
                "requests": {
                  "memory": "128Mi",
                  "cpu": "500m"
                },
                "limits": {
                  "memory": "2Gi",
                  "cpu": "3000m"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-ibm-microclimate-devops",
      "labels": {
        "app": "release-name-ibm-microclimate-devops",
        "chart": "ibm-microclimate-0.1.0",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "release-name-ibm-microclimate-devops",
          "release": "release-name"
        }
      },
      "replicas": null,
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-ibm-microclimate-devops",
            "release": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "devops-chart",
              "image": "ibmcom/microclimate-devops:latest",
              "imagePullPolicy": "Always",
              "ports": [
                {
                  "containerPort": 9191
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/health/liveness",
                  "port": 9191
                },
                "initialDelaySeconds": 600,
                "periodSeconds": 3
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/health/readiness",
                  "port": 9191
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 5
              },
              "env": [
                {
                  "name": "JENKINS_URL",
                  "value": "http://release-name-jenkins:8080"
                },
                {
                  "name": "JENKINS_EXTERNAL_URL",
                  "value": "http://jenkins.192.168.99.100.nip.io"
                },
                {
                  "name": "JENKINS_USE_SECURITY",
                  "value": "true"
                },
                {
                  "name": "JENKINS_USER",
                  "value": "admin"
                },
                {
                  "name": "JENKINS_API_TOKEN",
                  "value": "be652e0e60b0af067c2b54cd04720df3"
                },
                {
                  "name": "GITLAB_URL",
                  "value": "http://release-name-gitlab-ce:80"
                },
                {
                  "name": "GITLAB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-gitlab-ce",
                      "key": "gitlab-root-password"
                    }
                  }
                }
              ],
              "resources": null
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-gitlab-ce",
      "labels": {
        "app": "release-name-gitlab-ce",
        "chart": "gitlab-ce-0.2.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "rules": [
        {
          "host": "gitlab.192.168.99.100.nip.io",
          "http": {
            "paths": [
              {
                "path": "/",
                "backend": {
                  "serviceName": "release-name-gitlab-ce",
                  "servicePort": 80
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "extensions/v1beta1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-jenkins"
    },
    "spec": {
      "rules": [
        {
          "host": "jenkins.192.168.99.100.nip.io",
          "http": {
            "paths": [
              {
                "backend": {
                  "serviceName": "release-name-jenkins",
                  "servicePort": 8080
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-ui-test-ybl0p",
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "initContainers": [
        {
          "name": "test-framework",
          "image": "dduportal/bats:0.4.0",
          "command": [
            "bash",
            "-c",
            "set -ex\n# copy bats to tools dir\ncp -R /usr/local/libexec/ /tools/bats/\n"
          ],
          "volumeMounts": [
            {
              "mountPath": "/tools",
              "name": "tools"
            }
          ]
        }
      ],
      "containers": [
        {
          "name": "release-name-ui-test",
          "image": "jenkins/jenkins:lts",
          "command": [
            "/tools/bats/bats",
            "-t",
            "/tests/run.sh"
          ],
          "volumeMounts": [
            {
              "mountPath": "/tests",
              "name": "tests",
              "readOnly": true
            },
            {
              "mountPath": "/tools",
              "name": "tools"
            }
          ]
        }
      ],
      "volumes": [
        {
          "name": "tests",
          "configMap": {
            "name": "release-name-jenkins-tests"
          }
        },
        {
          "name": "tools",
          "emptyDir": {}
        }
      ],
      "restartPolicy": "Never"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-portal-endpoint-test",
      "labels": {
        "app": "release-name-ibm-microclimate",
        "chart": "ibm-microclimate-0.1.0",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "restartPolicy": "Never",
      "containers": [
        {
          "name": "release-name-portal-endpoint-test",
          "image": "ibmcom/microclimate-portal:latest",
          "command": [
            "curl"
          ],
          "args": [
            "release-name-ibm-microclimate:9090"
          ]
        }
      ]
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": {
      "name": "release-name-theia-endpoint-test",
      "labels": {
        "app": "release-name-ibm-microclimate",
        "chart": "ibm-microclimate-0.1.0",
        "release": "release-name",
        "heritage": "Helm"
      },
      "annotations": {
        "helm.sh/hook": "test-success"
      }
    },
    "spec": {
      "restartPolicy": "Never",
      "containers": [
        {
          "name": "release-name-theia-endpoint-test",
          "image": "ibmcom/microclimate-portal:latest",
          "command": [
            "curl"
          ],
          "args": [
            "release-name-ibm-microclimate:4191"
          ]
        }
      ]
    }
  }
]