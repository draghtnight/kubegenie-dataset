[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "labels": {
        "app": "release-name-influxdb",
        "chart": "influxdb-3.1.1",
        "heritage": "Helm",
        "release": "release-name"
      },
      "name": "release-name-influxdb-auth"
    },
    "data": {
      "influxdb-password": "TnplVkhma1UxMg==",
      "influxdb-user": "YWRtaW4="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-influxdb",
      "labels": {
        "app": "release-name-influxdb",
        "chart": "influxdb-3.1.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "data": {
      "influxdb.conf": "reporting-disabled = false\nbind-address = \":8088\"\n\n[meta]\n  dir = \"/var/lib/influxdb/meta\"\n  retention-autocreate = true\n  logging-enabled = true\n\n[data]\n  dir = \"/var/lib/influxdb/data\"\n  wal-dir = \"/var/lib/influxdb/wal\"\n  query-log-enabled = true\n  cache-max-memory-size = 1073741824\n  cache-snapshot-memory-size = 26214400\n  cache-snapshot-write-cold-duration = \"10m0s\"\n  compact-full-write-cold-duration = \"4h0m0s\"\n  max-series-per-database = 1000000\n  max-values-per-tag = 100000\n  index-version = \"inmem\"\n  trace-logging-enabled = false\n  wal-fsync-delay = \"0s\"\n\n[coordinator]\n  write-timeout = \"10s\"\n  max-concurrent-queries = 0\n  query-timeout = \"0s\"\n  log-queries-after = \"0s\"\n  max-select-point = 0\n  max-select-series = 0\n  max-select-buckets = 0\n\n[retention]\n  enabled = true\n  check-interval = \"30m0s\"\n\n[shard-precreation]\n  enabled = true\n  check-interval = \"10m0s\"\n  advance-period = \"30m0s\"\n\n[admin]\n  enabled = false\n  bind-address = \":8083\"\n  https-enabled = false\n  https-certificate = \"/etc/ssl/influxdb.pem\"\n\n[monitor]\n  store-enabled = true\n  store-database = \"_internal\"\n  store-interval = \"10s\"\n\n[subscriber]\n  enabled = true\n  http-timeout = \"30s\"\n  insecure-skip-verify = false\n  ca-certs = \"\"\n  write-concurrency = 40\n  write-buffer-size = 1000\n\n[http]\n  enabled = true\n  bind-address = \":8086\"\n  flux-enabled = true\n  auth-enabled = false\n  log-enabled = true\n  write-tracing = false\n  pprof-enabled = true\n  https-enabled = false\n  https-certificate = \"/etc/ssl/influxdb.pem\"\n  https-private-key = \"\"\n  max-row-limit = 10000\n  max-connection-limit = 0\n  shared-secret = \"beetlejuicebeetlejuicebeetlejuice\"\n  realm = \"InfluxDB\"\n  unix-socket-enabled = false\n  bind-socket = \"/var/run/influxdb.sock\"\n\n# TODO: allow multiple graphite listeners\n\n[[graphite]]\n  enabled = false\n  bind-address = \":2003\"\n  database = \"graphite\"\n  retention-policy = \"autogen\"\n  protocol = \"tcp\"\n  batch-size = 5000\n  batch-pending = 10\n  batch-timeout = \"1s\"\n  consistency-level = \"one\"\n  separator = \".\"\n  udp-read-buffer = 0\n\n# TODO: allow multiple collectd listeners with templates\n\n[[collectd]]\n  enabled = false\n  bind-address = \":25826\"\n  database = \"collectd\"\n  retention-policy = \"autogen\"\n  batch-size = 5000\n  batch-pending = 10\n  batch-timeout = \"10s\"\n  read-buffer = 0\n  typesdb = \"/usr/share/collectd/types.db\"\n  security-level = \"none\"\n  auth-file = \"/etc/collectd/auth_file\"\n\n# TODO: allow multiple opentsdb listeners with templates\n\n[[opentsdb]]\n  enabled = false\n  bind-address = \":4242\"\n  database = \"opentsdb\"\n  retention-policy = \"autogen\"\n  consistency-level = \"one\"\n  tls-enabled = false\n  certificate = \"/etc/ssl/influxdb.pem\"\n  batch-size = 1000\n  batch-pending = 5\n  batch-timeout = \"1s\"\n  log-point-errors = true\n\n# TODO: allow multiple udp listeners with templates\n\n[[udp]]\n  enabled = false\n  bind-address = \":8089\"\n  database = \"udp\"\n  retention-policy = \"autogen\"\n  batch-size = 5000\n  batch-pending = 10\n  read-buffer = 0\n  batch-timeout = \"1s\"\n  precision = \"ns\"\n\n[continuous_queries]\n  log-enabled = true\n  enabled = true\n  run-interval = \"1s\"\n\n[logging]\n  format =  \"auto\"\n  level =  \"info\"\n  supress-logo = false\n"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-influxdb",
      "labels": {
        "app": "release-name-influxdb",
        "chart": "influxdb-3.1.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "name": "api",
          "port": 8086,
          "targetPort": 8086
        },
        {
          "name": "rpc",
          "port": 8088,
          "targetPort": 8088
        }
      ],
      "selector": {
        "app": "release-name-influxdb"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-influxdb",
      "labels": {
        "app": "release-name-influxdb",
        "chart": "influxdb-3.1.1",
        "release": "release-name",
        "heritage": "Helm"
      }
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "release-name-influxdb"
        }
      },
      "serviceName": "release-name-influxdb",
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-influxdb",
            "release": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "release-name-influxdb",
              "image": "influxdb:1.8.10-alpine",
              "imagePullPolicy": "IfNotPresent",
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "ports": [
                {
                  "name": "api",
                  "containerPort": 8086
                }
              ],
              "livenessProbe": {
                "httpGet": {
                  "path": "/ping",
                  "port": "api"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/ping",
                  "port": "api"
                },
                "initialDelaySeconds": 5,
                "timeoutSeconds": 1
              },
              "volumeMounts": [
                {
                  "name": "release-name-influxdb-data",
                  "mountPath": "/var/lib/influxdb"
                },
                {
                  "name": "config",
                  "mountPath": "/etc/influxdb"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "config",
              "configMap": {
                "name": "release-name-influxdb"
              }
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "release-name-influxdb-data",
            "annotations": null
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "8Gi"
              }
            }
          }
        }
      ]
    }
  },
  {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
      "labels": {
        "app": "release-name-influxdb",
        "chart": "influxdb-3.1.1",
        "release": "release-name",
        "heritage": "Helm"
      },
      "name": "release-name-influxdb-set-auth",
      "annotations": {
        "helm.sh/hook": "post-install",
        "helm.sh/hook-delete-policy": "hook-succeeded"
      }
    },
    "spec": {
      "activeDeadlineSeconds": null,
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-influxdb",
            "release": "release-name"
          }
        },
        "spec": {
          "containers": [
            {
              "name": "release-name-influxdb-set-auth",
              "image": "appropriate/curl:latest",
              "env": [
                {
                  "name": "INFLUXDB_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-influxdb-auth",
                      "key": "influxdb-user"
                    }
                  }
                },
                {
                  "name": "INFLUXDB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "name": "release-name-influxdb-auth",
                      "key": "influxdb-password"
                    }
                  }
                }
              ],
              "args": [
                "/bin/sh",
                "-c",
                "curl -X POST http://release-name-influxdb:8086/query \\\n--data-urlencode \\\n\"q=CREATE USER \\\"${INFLUXDB_USER}\\\" WITH PASSWORD '${INFLUXDB_PASSWORD}' WITH ALL PRIVILEGES\"\n"
              ]
            }
          ],
          "restartPolicy": "OnFailure"
        }
      }
    }
  }
]