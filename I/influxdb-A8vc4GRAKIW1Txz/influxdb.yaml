apiVersion: v1
kind: Secret
metadata:
  labels:
    app: release-name-influxdb
    chart: influxdb-3.1.1
    heritage: Helm
    release: release-name
  name: release-name-influxdb-auth
data:
  influxdb-password: TnplVkhma1UxMg==
  influxdb-user: YWRtaW4=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-influxdb
  labels:
    app: release-name-influxdb
    chart: influxdb-3.1.1
    release: release-name
    heritage: Helm
data:
  influxdb.conf: |
    reporting-disabled = false
    bind-address = ":8088"

    [meta]
      dir = "/var/lib/influxdb/meta"
      retention-autocreate = true
      logging-enabled = true

    [data]
      dir = "/var/lib/influxdb/data"
      wal-dir = "/var/lib/influxdb/wal"
      query-log-enabled = true
      cache-max-memory-size = 1073741824
      cache-snapshot-memory-size = 26214400
      cache-snapshot-write-cold-duration = "10m0s"
      compact-full-write-cold-duration = "4h0m0s"
      max-series-per-database = 1000000
      max-values-per-tag = 100000
      index-version = "inmem"
      trace-logging-enabled = false
      wal-fsync-delay = "0s"

    [coordinator]
      write-timeout = "10s"
      max-concurrent-queries = 0
      query-timeout = "0s"
      log-queries-after = "0s"
      max-select-point = 0
      max-select-series = 0
      max-select-buckets = 0

    [retention]
      enabled = true
      check-interval = "30m0s"

    [shard-precreation]
      enabled = true
      check-interval = "10m0s"
      advance-period = "30m0s"

    [admin]
      enabled = false
      bind-address = ":8083"
      https-enabled = false
      https-certificate = "/etc/ssl/influxdb.pem"

    [monitor]
      store-enabled = true
      store-database = "_internal"
      store-interval = "10s"

    [subscriber]
      enabled = true
      http-timeout = "30s"
      insecure-skip-verify = false
      ca-certs = ""
      write-concurrency = 40
      write-buffer-size = 1000

    [http]
      enabled = true
      bind-address = ":8086"
      flux-enabled = true
      auth-enabled = false
      log-enabled = true
      write-tracing = false
      pprof-enabled = true
      https-enabled = false
      https-certificate = "/etc/ssl/influxdb.pem"
      https-private-key = ""
      max-row-limit = 10000
      max-connection-limit = 0
      shared-secret = "beetlejuicebeetlejuicebeetlejuice"
      realm = "InfluxDB"
      unix-socket-enabled = false
      bind-socket = "/var/run/influxdb.sock"

    # TODO: allow multiple graphite listeners

    [[graphite]]
      enabled = false
      bind-address = ":2003"
      database = "graphite"
      retention-policy = "autogen"
      protocol = "tcp"
      batch-size = 5000
      batch-pending = 10
      batch-timeout = "1s"
      consistency-level = "one"
      separator = "."
      udp-read-buffer = 0

    # TODO: allow multiple collectd listeners with templates

    [[collectd]]
      enabled = false
      bind-address = ":25826"
      database = "collectd"
      retention-policy = "autogen"
      batch-size = 5000
      batch-pending = 10
      batch-timeout = "10s"
      read-buffer = 0
      typesdb = "/usr/share/collectd/types.db"
      security-level = "none"
      auth-file = "/etc/collectd/auth_file"

    # TODO: allow multiple opentsdb listeners with templates

    [[opentsdb]]
      enabled = false
      bind-address = ":4242"
      database = "opentsdb"
      retention-policy = "autogen"
      consistency-level = "one"
      tls-enabled = false
      certificate = "/etc/ssl/influxdb.pem"
      batch-size = 1000
      batch-pending = 5
      batch-timeout = "1s"
      log-point-errors = true

    # TODO: allow multiple udp listeners with templates

    [[udp]]
      enabled = false
      bind-address = ":8089"
      database = "udp"
      retention-policy = "autogen"
      batch-size = 5000
      batch-pending = 10
      read-buffer = 0
      batch-timeout = "1s"
      precision = "ns"

    [continuous_queries]
      log-enabled = true
      enabled = true
      run-interval = "1s"

    [logging]
      format =  "auto"
      level =  "info"
      supress-logo = false
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-influxdb
  labels:
    app: release-name-influxdb
    chart: influxdb-3.1.1
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 8086
      targetPort: 8086
    - name: rpc
      port: 8088
      targetPort: 8088
  selector:
    app: release-name-influxdb
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-influxdb
  labels:
    app: release-name-influxdb
    chart: influxdb-3.1.1
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-influxdb
  serviceName: release-name-influxdb
  template:
    metadata:
      labels:
        app: release-name-influxdb
        release: release-name
    spec:
      containers:
        - name: release-name-influxdb
          image: influxdb:1.8.10-alpine
          imagePullPolicy: IfNotPresent
          resources:
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: api
              containerPort: 8086
          livenessProbe:
            httpGet:
              path: /ping
              port: api
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ping
              port: api
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            - name: release-name-influxdb-data
              mountPath: /var/lib/influxdb
            - name: config
              mountPath: /etc/influxdb
      volumes:
        - name: config
          configMap:
            name: release-name-influxdb
  volumeClaimTemplates:
    - metadata:
        name: release-name-influxdb-data
        annotations: null
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: release-name-influxdb
    chart: influxdb-3.1.1
    release: release-name
    heritage: Helm
  name: release-name-influxdb-set-auth
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  activeDeadlineSeconds: null
  template:
    metadata:
      labels:
        app: release-name-influxdb
        release: release-name
    spec:
      containers:
        - name: release-name-influxdb-set-auth
          image: appropriate/curl:latest
          env:
            - name: INFLUXDB_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-influxdb-auth
                  key: influxdb-user
            - name: INFLUXDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-influxdb-auth
                  key: influxdb-password
          args:
            - /bin/sh
            - -c
            - |
              curl -X POST http://release-name-influxdb:8086/query \
              --data-urlencode \
              "q=CREATE USER \"${INFLUXDB_USER}\" WITH PASSWORD '${INFLUXDB_PASSWORD}' WITH ALL PRIVILEGES"
      restartPolicy: OnFailure
