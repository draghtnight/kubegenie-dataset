[
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "name": "release-name-imgproxy-pdb",
      "labels": {
        "imgproxy": "true"
      }
    },
    "spec": {
      "selector": {
        "matchLabels": {
          "app": "release-name-imgproxy"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "release-name-imgproxy-service-account",
      "labels": {
        "imgproxy": "true"
      },
      "annotations": null
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-imgproxy-env-secrets",
      "labels": {
        "app": "release-name-imgproxy",
        "chart": "imgproxy-0.8.15",
        "release": "release-name",
        "heritage": "Helm",
        "imgproxy": "true"
      }
    },
    "type": "kubernetes.io/Opaque",
    "data": {
      "IMGPROXY_KEY": "MWIxNDcxMTZlNTdkOWUwNmRmMzY5NmIyMTI2MDE2OTkwMmZlMjAxY2NkYjk3MTUyNjc5OTkxNzZjY2JmYWFlNmYyYzJiNzViNzgxMTBkMDI4NzY0M2Q5OGNkZTE0M2U3YTNmOThhNDZlYzgyNWExYWI3ZWExMGFmNDI2YzI0MzY=",
      "IMGPROXY_SALT": "MWU0NDgzMDA2YzU2ZjA1ZjFiNDJhZjJmMmI2MTc2NWY2NGI4YTA3NGJmOTkzOTIyZGQ1YjRiY2E3OGY0OTI4MDY4M2JlYjM2ODMwOGI3Zjc2ZDUyMjAyN2IwNzFhMjVlNmQ0YjI2MTM4Njg2YjQzZTFmYWE0YmU0YzliNjc0ZWE=",
      "IMGPROXY_SIGNATURE_SIZE": "MzI=",
      "IMGPROXY_READ_TIMEOUT": "MTA=",
      "IMGPROXY_WRITE_TIMEOUT": "MTA=",
      "IMGPROXY_KEEP_ALIVE_TIMEOUT": "MTA=",
      "IMGPROXY_DOWNLOAD_TIMEOUT": "NQ==",
      "IMGPROXY_TTL": "MzYwMA==",
      "IMGPROXY_CACHE_CONTROL_PASSTHROUGH": "ZmFsc2U=",
      "IMGPROXY_SET_CANONICAL_HEADER": "ZmFsc2U=",
      "IMGPROXY_SO_REUSEPORT": "ZmFsc2U=",
      "IMGPROXY_USE_ETAG": "ZmFsc2U=",
      "IMGPROXY_CUSTOM_HEADERS_SEPARATOR": "Ow==",
      "IMGPROXY_ENABLE_DEBUG_HEADERS": "ZmFsc2U=",
      "IMGPROXY_MAX_SRC_RESOLUTION": "MTYuOA==",
      "IMGPROXY_MAX_SRC_FILE_SIZE": "MA==",
      "IMGPROXY_MAX_ANIMATION_FRAMES": "MQ==",
      "IMGPROXY_MAX_SVG_CHECK_BYTES": "MzI3Njg=",
      "IMGPROXY_IGNORE_SSL_VERIFICATION": "ZmFsc2U=",
      "IMGPROXY_DEVELOPMENT_ERRORS_MODE": "ZmFsc2U=",
      "IMGPROXY_AUTOQUALITY_METHOD": "bm9uZQ==",
      "IMGPROXY_QUALITY": "ODA=",
      "IMGPROXY_JPEG_PROGRESSIVE": "ZmFsc2U=",
      "IMGPROXY_JPEG_NO_SUBSAMPLE": "ZmFsc2U=",
      "IMGPROXY_JPEG_TRELLIS_QUANT": "ZmFsc2U=",
      "IMGPROXY_JPEG_OVERSHOOT_DERINGING": "ZmFsc2U=",
      "IMGPROXY_JPEG_OPTIMIZE_SCANS": "ZmFsc2U=",
      "IMGPROXY_JPEG_QUANT_TABLE": "MA==",
      "IMGPROXY_PNG_INTERLACED": "ZmFsc2U=",
      "IMGPROXY_GIF_OPTIMIZE_FRAMES": "ZmFsc2U=",
      "IMGPROXY_AVIF_SPEED": "NQ==",
      "IMGPROXY_ENABLE_WEBP_DETECTION": "ZmFsc2U=",
      "IMGPROXY_ENFORCE_WEBP": "ZmFsc2U=",
      "IMGPROXY_ENABLE_AVIF_DETECTION": "ZmFsc2U=",
      "IMGPROXY_ENFORCE_AVIF": "ZmFsc2U=",
      "IMGPROXY_ENABLE_CLIENT_HINTS": "ZmFsc2U=",
      "IMGPROXY_ENABLE_VIDEO_THUMBNAILS": "ZmFsc2U=",
      "IMGPROXY_VIDEO_THUMBNAIL_PROBE_SIZE": "NTAwMDAwMA==",
      "IMGPROXY_VIDEO_THUMBNAIL_MAX_ANALYZE_DURATION": "MA==",
      "IMGPROXY_VIDEO_THUMBNAIL_SECOND": "MQ==",
      "IMGPROXY_WATERMARK_OPACITY": "MQ==",
      "IMGPROXY_WATERMARK_CACHE_SIZE": "MjU2",
      "IMGPROXY_UNSHARPENING_MODE": "YXV0bw==",
      "IMGPROXY_UNSHARPENING_WEIGHT": "MQ==",
      "IMGPROXY_UNSHARPENING_DIVIDOR": "MjQ=",
      "IMGPROXY_FALLBACK_IMAGE_HTTP_CODE": "MjAw",
      "IMGPROXY_FALLBACK_IMAGES_CACHE_SIZE": "MjU2",
      "IMGPROXY_REPORT_DOWNLOADING_ERRORS": "dHJ1ZQ==",
      "IMGPROXY_LOG_FORMAT": "cHJldHR5",
      "IMGPROXY_LOG_LEVEL": "aW5mbw==",
      "IMGPROXY_DOWNLOAD_BUFFER_SIZE": "MA==",
      "IMGPROXY_GZIP_BUFFER_SIZE": "MA==",
      "IMGPROXY_FREE_MEMORY_INTERVAL": "MTA=",
      "IMGPROXY_BUFFER_POOL_CALIBRATION_THRESHOLD": "MTAyNA==",
      "IMGPROXY_USE_LINEAR_COLORSPACE": "ZmFsc2U=",
      "IMGPROXY_DISABLE_SHRINK_ON_LOAD": "ZmFsc2U=",
      "IMGPROXY_STRIP_METADATA": "dHJ1ZQ==",
      "IMGPROXY_STRIP_COLOR_PROFILE": "dHJ1ZQ==",
      "IMGPROXY_AUTO_ROTATE": "dHJ1ZQ==",
      "IMGPROXY_ENFORCE_THUMBNAIL": "ZmFsc2U="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-imgproxy",
      "labels": {
        "app": "release-name",
        "chart": "imgproxy-0.8.15",
        "heritage": "Helm",
        "imgproxy": "true",
        "release": "release-name"
      }
    },
    "spec": {
      "type": "ClusterIP",
      "selector": {
        "app": "release-name-imgproxy"
      },
      "ports": [
        {
          "name": "http",
          "port": 80,
          "protocol": "TCP",
          "targetPort": 8080
        }
      ]
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-imgproxy",
      "labels": {
        "heritage": "Helm",
        "release": "release-name",
        "chart": "imgproxy-0.8.15",
        "app": "release-name-imgproxy"
      },
      "annotations": {}
    },
    "spec": {
      "replicas": 1,
      "selector": {
        "matchLabels": {
          "app": "release-name-imgproxy"
        }
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "release-name-imgproxy",
            "imgproxy": "true",
            "release": "release-name"
          },
          "annotations": {
            "checksum/env": "0203d8755a1895c0b8ec397740b771884830392f2d114b99ca04765d64f35fe2"
          }
        },
        "spec": {
          "affinity": {},
          "tolerations": [],
          "nodeSelector": {},
          "serviceAccountName": "release-name-imgproxy-service-account",
          "containers": [
            {
              "name": "imgproxy",
              "image": "darthsim/imgproxy:v3.5.0",
              "imagePullPolicy": "IfNotPresent",
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-imgproxy-env-secrets"
                  }
                }
              ],
              "resources": {
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "ports": [
                {
                  "containerPort": 8080,
                  "name": "http",
                  "protocol": "TCP"
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/health",
                  "port": 8080,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 5
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/health",
                  "port": 8080,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 50,
                "timeoutSeconds": 5,
                "successThreshold": 1,
                "failureThreshold": 5
              }
            }
          ]
        }
      }
    }
  }
]