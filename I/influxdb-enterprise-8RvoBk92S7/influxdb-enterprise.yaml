apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-influxdb-enterprise-data
  labels:
    app.kubernetes.io/component: data
    helm.sh/chart: influxdb-enterprise-0.1.19
    app.kubernetes.io/name: influxdb-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.6
    app.kubernetes.io/managed-by: Helm
data:
  influxdb.conf: "bind-address = \":8088\"\nreporting-disabled = false\n\n[http]\n\nauth-enabled = true\n\n\n\nhttps-enabled = true\n\nhttps-certificate = \"/var/run/secrets/tls/tls.crt\"\nhttps-private-key = \"/var/run/secrets/tls/tls.key\"\n\n\n\n\nflux-enabled = true\n\n\n[enterprise]\n  \n\n[cluster]\n\nhttps-enabled = true\n\nhttps-certificate = \"/var/run/secrets/tls/tls.crt\"\nhttps-private-key = \"/var/run/secrets/tls/tls.key\"\n\n\nhttps-insecure-tls = true\n\n\n\n[meta]\n  dir = \"/var/lib/influxdb/meta\"\n\n  \n  meta-tls-enabled = true\n\n  \n  meta-insecure-tls = true\n  \n\n  \n\n[hinted-handoff]\n  dir = \"/var/lib/influxdb/hh\"\n\n[data]\n  dir = \"/var/lib/influxdb/data\"\n  wal-dir = \"/var/lib/influxdb/wal\"\n\n"
  entrypoint.pl: "\n#!/usr/bin/env perl\n$ENV{INFLUXDB_HOSTNAME} = `hostname -f`;\n$ENV{INFLUXDB_HOSTNAME} =~ s/\\n$//;\n\n\n\n\n$pid = fork();\n\n# Inside this conditional is our child process, which\n# will return `influxd-meta`\nif($pid == 0) {\n  exec('influxd') or die(\"Failed to execute influxd: $!\\n\");\n}\n\n$SIG{HUP} = sub { kill 'HUP', $pid };\n$SIG{TERM} = sub { kill 'TERM', $pid };\n$SIG{KILL} = sub { kill 'KILL', $pid };\n\n# Register data node with meta leader\n\nmy $protocol = \"https\";\n\nmy $meta_service = $ENV{RELEASE_NAME} . \"-meta\";\n\n# We're not going to define an exit strategy for failure here.\n# This should be handled by the probes on the pods\nwhile (true) {\n  # There's no LWP/Simple available in our images, so forking out to curl \U0001F625\n  print \"\\n\\n\\nREGISTER WITH META SERVICE\\n\\n\\n\";\n  $exit_code = system('curl', '-k', '-XPOST', '--silent', '--fail', '--retry', '5', '--retry-delay', '0', \"-Faddr=$ENV{INFLUXDB_HOSTNAME}:8088\", \"$protocol://$meta_service:8091/add-data\");\n  # $exit_code = system('curl', '-k', '-XPOST', '-v', '--silent', '--fail', '--retry', '5', '--retry-delay', '0', \"-Faddr=$ENV{INFLUXDB_HOSTNAME}:8088\", \"$protocol://$meta_service:8091/add-data\");\n\n\n  if ($exit_code == 0) {\n    $| = 1;\n    last;\n  }\n  print \"\\n\\n\\nFailed: $!\\n\\n\\n\";\n  $| = 1;\n\n  exit 255\n}\n\nwaitpid($pid, 0);\nexit $?\n"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-influxdb-enterprise-meta
  labels:
    app.kubernetes.io/component: meta
    helm.sh/chart: influxdb-enterprise-0.1.19
    app.kubernetes.io/name: influxdb-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.6
    app.kubernetes.io/managed-by: Helm
data:
  influxdb-meta.conf: "bind-address = \":8091\"\nreporting-disabled = false\n\n[enterprise]\n  \n\n[meta]\n  dir = \"/var/lib/influxdb/meta\"\n\n  \n  https-enabled = true\n\n  https-certificate = \"/var/run/secrets/tls/tls.crt\"\n  https-private-key = \"/var/run/secrets/tls/tls.key\"\n\n  \n  https-insecure-tls = true\n  \n\n  \n\n  \n  data-use-tls = true\n\n  \n  data-insecure-tls = true\n  \n\n  \n\n"
  entrypoint.pl: |
    #!/usr/bin/env perl
    $ENV{INFLUXDB_HOSTNAME} = `hostname -f`;
    $ENV{INFLUXDB_HOSTNAME} =~ s/\n$//;




    $pid = fork();


    # Inside this conditional is our child process, which
    # will return `influxd-meta`
    if($pid == 0) {
      exec('influxd-meta') or die("Failed to execute influxd-meta: $!\n");
    }

    $SIG{HUP} = sub { kill 'HUP', $pid };
    $SIG{TERM} = sub { kill 'TERM', $pid };
    $SIG{KILL} = sub { kill 'KILL', $pid };

    # Register meta node
    my $meta_leader = $ENV{INFLUXDB_HOSTNAME};
    $meta_leader =~ s/-[0-9]+./-0./;

    # We're not going to define an exit strategy for failure here.
    # This should be handled by the probes on the pods
    while (true) {
      if($meta_leader eq $ENV{INFLUXDB_HOSTNAME}) {
        system('influxd-ctl', '-bind-tls','-k', 'add-meta', "$ENV{INFLUXDB_HOSTNAME}:8091");
      } else {
        system('influxd-ctl', '-bind-tls','-k', 'join', "$meta_leader:8091");
      }

      if ($? == 0) {
          last;
      }

      # Wait a few seconds and try again
      # Maybe we should implement some rudamentary backoff
      sleep(2);
    }

    waitpid($pid, 0);
    exit $?
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-influxdb-enterprise-data
  labels:
    influxdb.influxdata.com/component: data
    helm.sh/chart: influxdb-enterprise-0.1.19
    app.kubernetes.io/name: influxdb-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.6
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 8086
      protocol: TCP
      name: http
    - port: 8088
      protocol: TCP
      name: rpc
    - port: 2003
      protocol: TCP
      name: graphite
    - port: 4242
      protocol: TCP
      name: opentsdb
    - port: 25826
      protocol: UDP
      name: collectd
    - port: 8089
      protocol: UDP
      name: udp
  selector:
    influxdb.influxdata.com/component: data
    app.kubernetes.io/name: influxdb-enterprise
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-influxdb-enterprise-meta
  labels:
    influxdb.influxdata.com/component: meta
    helm.sh/chart: influxdb-enterprise-0.1.19
    app.kubernetes.io/name: influxdb-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.6
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 8089
      protocol: TCP
      name: raft
    - port: 8091
      protocol: TCP
      name: http
  selector:
    influxdb.influxdata.com/component: meta
    app.kubernetes.io/name: influxdb-enterprise
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-influxdb-enterprise-data
  labels:
    helm.sh/chart: influxdb-enterprise-0.1.19
    app.kubernetes.io/name: influxdb-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.6
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  podManagementPolicy: Parallel
  serviceName: release-name-influxdb-enterprise-data
  selector:
    matchLabels:
      influxdb.influxdata.com/component: data
      app.kubernetes.io/name: influxdb-enterprise
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        influxdb.influxdata.com/component: data
        app.kubernetes.io/name: influxdb-enterprise
        app.kubernetes.io/instance: release-name
    spec:
      securityContext: null
      serviceAccountName: default
      volumes:
        - name: release-name-influxdb-enterprise-data-data
          emptyDir: {}
        - name: config
          configMap:
            name: release-name-influxdb-enterprise-data
        - name: tls
          secret:
            secretName: release-name-influxdb-enterprise-data-tls
      containers:
        - name: influxdb-enterprise
          command:
            - /usr/bin/perl
          args:
            - /etc/influxdb/entrypoint.pl
          securityContext: null
          image: influxdb:1.9.6-data
          imagePullPolicy: null
          env:
            - name: RELEASE_NAME
              value: release-name-influxdb-enterprise
          ports:
            - name: http
              containerPort: 8086
              protocol: TCP
            - name: raft
              containerPort: 8088
              protocol: TCP
            - name: udp
              containerPort: 8089
              protocol: UDP
            - name: graphite
              containerPort: 2003
              protocol: TCP
            - name: opentsdb
              containerPort: 4242
              protocol: TCP
            - name: collectd
              containerPort: 25826
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
              scheme: HTTPS
          readinessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /ping
              port: http
              scheme: HTTPS
          volumeMounts:
            - name: config
              mountPath: /etc/influxdb
            - name: release-name-influxdb-enterprise-data-data
              mountPath: /var/lib/influxdb
            - name: tls
              mountPath: /var/run/secrets/tls/
          resources: null
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: influxdb.influxdata.com/component
                      operator: In
                      values:
                        - data
                topologyKey: kubernetes.io/hostname
              weight: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-influxdb-enterprise-meta
  labels:
    helm.sh/chart: influxdb-enterprise-0.1.19
    app.kubernetes.io/name: influxdb-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.6
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  podManagementPolicy: Parallel
  serviceName: release-name-influxdb-enterprise-meta
  selector:
    matchLabels:
      influxdb.influxdata.com/component: meta
      app.kubernetes.io/name: influxdb-enterprise
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        influxdb.influxdata.com/component: meta
        app.kubernetes.io/name: influxdb-enterprise
        app.kubernetes.io/instance: release-name
    spec:
      securityContext: null
      serviceAccountName: default
      volumes:
        - name: release-name-influxdb-enterprise-meta-data
          emptyDir: {}
        - name: config
          configMap:
            name: release-name-influxdb-enterprise-meta
        - name: tls
          secret:
            secretName: release-name-influxdb-enterprise-meta-tls
      containers:
        - name: influxdb-enterprise
          command:
            - /usr/bin/perl
          args:
            - /etc/influxdb/entrypoint.pl
          securityContext: null
          image: influxdb:1.9.6-meta
          imagePullPolicy: null
          env:
            - name: INFLUXDB_META_INTERNAL_SHARED_SECRET
              valueFrom:
                secretKeyRef:
                  name: influxdb-shared-secret
                  key: secret
          ports:
            - name: http
              containerPort: 8091
              protocol: TCP
            - name: raft
              containerPort: 8089
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /ping
              port: http
              scheme: HTTPS
          volumeMounts:
            - name: config
              mountPath: /etc/influxdb
            - name: release-name-influxdb-enterprise-meta-data
              mountPath: /var/lib/influxdb
            - name: tls
              mountPath: /var/run/secrets/tls/
          resources: null
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: influxdb.influxdata.com/component
                      operator: In
                      values:
                        - meta
                topologyKey: kubernetes.io/hostname
              weight: 1
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: release-name-influxdb-enterprise-data
  labels:
    helm.sh/chart: influxdb-enterprise-0.1.19
    app.kubernetes.io/name: influxdb-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.6
    app.kubernetes.io/managed-by: Helm
spec:
  dnsNames:
    - release-name-influxdb-enterprise-data
    - release-name-influxdb-enterprise-data.default.svc
    - release-name-influxdb-enterprise-data-0.release-name-influxdb-enterprise-data
    - release-name-influxdb-enterprise-data-0.release-name-influxdb-enterprise-data.default
    - release-name-influxdb-enterprise-data-0.release-name-influxdb-enterprise-data.default.svc
  isCA: true
  issuerRef:
    kind: Issuer
    name: release-name-influxdb-enterprise
  secretName: release-name-influxdb-enterprise-data-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: release-name-influxdb-enterprise-meta
  labels:
    helm.sh/chart: influxdb-enterprise-0.1.19
    app.kubernetes.io/name: influxdb-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.6
    app.kubernetes.io/managed-by: Helm
spec:
  dnsNames:
    - release-name-influxdb-enterprise-meta
    - release-name-influxdb-enterprise-meta.default.svc
    - release-name-influxdb-enterprise-meta-0.release-name-influxdb-enterprise-meta
    - release-name-influxdb-enterprise-meta-0.release-name-influxdb-enterprise-meta.default
    - release-name-influxdb-enterprise-meta-0.release-name-influxdb-enterprise-meta.default.svc
  isCA: true
  issuerRef:
    kind: Issuer
    name: release-name-influxdb-enterprise
  secretName: release-name-influxdb-enterprise-meta-tls
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: release-name-influxdb-enterprise
  labels:
    helm.sh/chart: influxdb-enterprise-0.1.19
    app.kubernetes.io/name: influxdb-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.6
    app.kubernetes.io/managed-by: Helm
spec:
  selfSigned: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-influxdb-enterprise-bootstrap
  labels:
    helm.sh/chart: influxdb-enterprise-0.1.19
    app.kubernetes.io/name: influxdb-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.9.6
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  activeDeadlineSeconds: 300
  backoffLimit: 10
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb-enterprise
        app.kubernetes.io/instance: release-name
    spec:
      restartPolicy: OnFailure
      serviceAccountName: default
      initContainers:
        - name: auth
          image: influxdb:1.9.6-data
          imagePullPolicy: null
          env:
            - name: INFLUX_USERNAME
              valueFrom:
                secretKeyRef:
                  name: influxdb-auth
                  key: username
            - name: INFLUX_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: influxdb-auth
                  key: password
          command:
            - influx
          args:
            - -ssl
            - -unsafeSsl
            - -host
            - release-name-influxdb-enterprise-data
            - -execute
            - CREATE USER $(INFLUX_USERNAME) WITH PASSWORD '$(INFLUX_PASSWORD)' WITH ALL PRIVILEGES
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 50Mi
      containers:
        - name: success
          image: influxdb:1.9.6-data
          imagePullPolicy: null
          command:
            - echo
          args:
            - Bootstrap Success
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 50Mi
