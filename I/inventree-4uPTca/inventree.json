[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql-credentials",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/version": "14.3.0",
        "helm-revision": "1",
        "helm.sh/chart": "postgresql-8.0.5"
      }
    },
    "stringData": {
      "postgresql-password": "testpass",
      "postgresql-postgres-password": "testroot"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "labels": {
        "helm.sh/chart": "inventree-3.0.1",
        "app.kubernetes.io/name": "inventree",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.7.1",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "name": "dbcreds"
    },
    "data": {
      "postgresql-password": "d3U5RVRWVVVrdzRMczlOcjhnVXg2YmpidkZYYWFkZU1SMVRuOFNpU3ZVTTVBSWVaR1o=",
      "postgresql-postgres-password": "MFF5SUFhdFpuVkZENEhpUVpRdWJwTGNZYUZCTEZDQzBjQ2ZTM3dqdVFrT3ZZa1Z2MVI=",
      "url": "cG9zdGdyZXNxbDovL2ludmVudHJlZTp3dTlFVFZVVWt3NExzOU5yOGdVeDZiamJ2RlhhYWRlTVIxVG44U2lTdlVNNUFJZVpHWkByZWxlYXNlLW5hbWUtcG9zdGdyZXNxbDo1NDMyL2ludmVudHJlZQ==",
      "url-noql": "cG9zdGdyZXM6Ly9pbnZlbnRyZWU6d3U5RVRWVVVrdzRMczlOcjhnVXg2YmpidkZYYWFkZU1SMVRuOFNpU3ZVTTVBSWVaR1pAcmVsZWFzZS1uYW1lLXBvc3RncmVzcWw6NTQzMi9pbnZlbnRyZWU=",
      "urlnossl": "cG9zdGdyZXNxbDovL2ludmVudHJlZTp3dTlFVFZVVWt3NExzOU5yOGdVeDZiamJ2RlhhYWRlTVIxVG44U2lTdlVNNUFJZVpHWkByZWxlYXNlLW5hbWUtcG9zdGdyZXNxbDo1NDMyL2ludmVudHJlZT9zc2xtb2RlPWRpc2FibGU=",
      "plainporthost": "cmVsZWFzZS1uYW1lLXBvc3RncmVzcWw=",
      "plainhost": "cmVsZWFzZS1uYW1lLXBvc3RncmVzcWw=",
      "jdbc": "amRiYzpwb3N0Z3Jlc3FsOi8vcmVsZWFzZS1uYW1lLXBvc3RncmVzcWw6NTQzMi9pbnZlbnRyZWU="
    },
    "type": "Opaque"
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "type": "Opaque",
    "metadata": {
      "name": "inventree-secrets"
    },
    "data": {
      "INVENTREE_SECRET_KEY": "dTJMUFJ4YVpueUpVRkNtdDhmRTNjVDlzUzhqRGxxWEw="
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-inventree",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "inventree",
        "app.kubernetes.io/version": "0.7.1",
        "helm-revision": "1",
        "helm.sh/chart": "inventree-3.0.1"
      }
    },
    "stringData": {
      "INVENTREE_ADMIN_EMAIL": "test@example.com",
      "INVENTREE_ADMIN_PASSWORD": "secret",
      "INVENTREE_ADMIN_USER": "super"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "release-name-inventree-config",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "inventree",
        "app.kubernetes.io/version": "0.7.1",
        "helm-revision": "1",
        "helm.sh/chart": "inventree-3.0.1"
      }
    },
    "data": {
      "nginx-config": "server {\n  # Listen for connection on (internal) port 80\n  listen 10231;\n\n  real_ip_header proxy_protocol;\n\n  location / {\n\n      proxy_set_header      Host              $http_host;\n      proxy_set_header      X-Forwarded-By    $server_addr:$server_port;\n      proxy_set_header      X-Forwarded-For   $remote_addr;\n      proxy_set_header      X-Forwarded-Proto $scheme;\n      proxy_set_header      X-Real-IP         $remote_addr;\n      proxy_set_header      CLIENT_IP         $remote_addr;\n\n      proxy_pass_request_headers on;\n\n      proxy_redirect off;\n\n      client_max_body_size 100M;\n\n      proxy_buffering off;\n      proxy_request_buffering off;\n\n      # Change 'inventree-server' to the name of the inventree server container,\n      # and '8000' to the INVENTREE_WEB_PORT (if not default)\n      proxy_pass http://localhost:8000;\n  }\n\n  # Redirect any requests for static files\n  location /static/ {\n      alias /var/www/static/;\n      autoindex on;\n\n      # Caching settings\n      expires 30d;\n      add_header Pragma public;\n      add_header Cache-Control \"public\";\n  }\n\n  # Redirect any requests for media files\n  location /media/ {\n      alias /var/www/media/;\n\n      # Media files require user authentication\n      auth_request /auth;\n  }\n\n  # Use the 'user' API endpoint for auth\n  location /auth {\n      internal;\n\n      proxy_pass http://localhost:8000/auth/;\n\n      proxy_pass_request_body off;\n      proxy_set_header Content-Length \"\";\n      proxy_set_header X-Original-URI $request_uri;\n  }\n}"
    }
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-inventree-data",
      "labels": {
        "helm.sh/chart": "inventree-3.0.1",
        "app.kubernetes.io/name": "inventree",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "0.7.1",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "999Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/version": "14.3.0",
        "helm-revision": "1",
        "helm.sh/chart": "postgresql-8.0.5"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ipFamilyPolicy": "SingleStack",
      "ports": [
        {
          "port": 5432,
          "targetPort": 5432,
          "protocol": "TCP",
          "name": "main"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-inventree",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "inventree",
        "app.kubernetes.io/version": "0.7.1",
        "helm-revision": "1",
        "helm.sh/chart": "inventree-3.0.1"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ipFamilyPolicy": "SingleStack",
      "ports": [
        {
          "port": 10231,
          "targetPort": 10231,
          "protocol": "TCP",
          "name": "main"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "inventree",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-inventree",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "inventree",
        "app.kubernetes.io/version": "0.7.1",
        "helm-revision": "1",
        "helm.sh/chart": "inventree-3.0.1"
      }
    },
    "spec": {
      "revisionHistoryLimit": 3,
      "replicas": 1,
      "strategy": {
        "type": "Recreate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "inventree",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": null,
          "labels": {
            "app.kubernetes.io/name": "inventree",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "securityContext": {
            "fsGroup": 568,
            "fsGroupChangePolicy": "OnRootMismatch",
            "runAsGroup": 0,
            "runAsUser": 100,
            "supplementalGroups": [
              568
            ]
          },
          "dnsPolicy": "ClusterFirst",
          "dnsConfig": {
            "options": [
              {
                "name": "ndots",
                "value": "1"
              }
            ]
          },
          "enableServiceLinks": false,
          "terminationGracePeriodSeconds": 10,
          "initContainers": [
            {
              "name": "autopermissions",
              "image": "ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583",
              "securityContext": {
                "runAsUser": 0,
                "privileged": true
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              },
              "command": [
                "/bin/sh",
                "-c",
                "/bin/bash <<'EOF'\necho \"Automatically correcting permissions...\"\necho \"increasing inotify limits...\"\n( sysctl -w fs.inotify.max_user_watches=524288 || echo \"error setting inotify\") && ( sysctl -w fs.inotify.max_user_instances=512 || echo \"error setting inotify\")\nEOF\n"
              ],
              "volumeMounts": null
            },
            {
              "name": "postgresql-init",
              "image": "ghcr.io/truecharts/postgresql:v14.3.0@sha256:a05700459c7d20acebb13edfe713174cccbdb63c727f8a6cd421be8592b172a4",
              "securityContext": {
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                }
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              },
              "command": [
                "sh",
                "-c",
                "until pg_isready -U inventree -h release-name-postgresql; do sleep 2 ; done"
              ],
              "imagePullPolicy": "IfNotPresent"
            },
            {
              "args": [
                "cd /home/inventree; invoke update;\n"
              ],
              "command": [
                "sh",
                "-c"
              ],
              "env": [
                {
                  "name": "INVENTREE_TIMEZONE",
                  "value": "UTC"
                },
                {
                  "name": "INVENTREE_DB_ENGINE",
                  "value": "postgresql"
                },
                {
                  "name": "INVENTREE_DB_NAME",
                  "value": "inventree"
                },
                {
                  "name": "INVENTREE_DB_USER",
                  "value": "inventree"
                },
                {
                  "name": "INVENTREE_DB_PORT",
                  "value": "5432"
                },
                {
                  "name": "INVENTREE_DB_HOST",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "plainhost",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "INVENTREE_DB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "postgresql-password",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "INVENTREE_SECRET_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "INVENTREE_SECRET_KEY",
                      "name": "inventree-secrets"
                    }
                  }
                },
                {
                  "name": "INVENTREE_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "INVENTREE_DEBUG",
                  "value": "false"
                },
                {
                  "name": "INVENTREE_LOGIN_CONFIRM_DAYS",
                  "value": "3"
                },
                {
                  "name": "INVENTREE_LOGIN_ATTEMPTS",
                  "value": "5"
                },
                {
                  "name": "INVENTREE_PLUGINS_ENABLED",
                  "value": "false"
                }
              ],
              "image": "tccr.io/truecharts/inventree:v0.7.1@sha256:2415725fc612763aafa2d9e23bd5482ca647bd55f80c889f6f5dd95f0b7988d3",
              "name": "init-migrate",
              "volumeMounts": [
                {
                  "mountPath": "/home/inventree/data",
                  "name": "data"
                }
              ]
            }
          ],
          "containers": [
            {
              "name": "release-name-inventree",
              "image": "tccr.io/truecharts/inventree:v0.7.1@sha256:2415725fc612763aafa2d9e23bd5482ca647bd55f80c889f6f5dd95f0b7988d3",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true
              },
              "env": [
                {
                  "name": "PUID",
                  "value": "568"
                },
                {
                  "name": "USER_ID",
                  "value": "568"
                },
                {
                  "name": "UID",
                  "value": "568"
                },
                {
                  "name": "UMASK",
                  "value": "2"
                },
                {
                  "name": "UMASK_SET",
                  "value": "2"
                },
                {
                  "name": "PGID",
                  "value": "568"
                },
                {
                  "name": "GROUP_ID",
                  "value": "568"
                },
                {
                  "name": "GID",
                  "value": "568"
                },
                {
                  "name": "S6_READ_ONLY_ROOT",
                  "value": "1"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "void"
                },
                {
                  "name": "TZ",
                  "value": "UTC"
                },
                {
                  "name": "INVENTREE_DB_ENGINE",
                  "value": "postgresql"
                },
                {
                  "name": "INVENTREE_DB_HOST",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "plainhost",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "INVENTREE_DB_NAME",
                  "value": "inventree"
                },
                {
                  "name": "INVENTREE_DB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "postgresql-password",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "INVENTREE_DB_PORT",
                  "value": "5432"
                },
                {
                  "name": "INVENTREE_DB_USER",
                  "value": "inventree"
                },
                {
                  "name": "INVENTREE_DEBUG",
                  "value": "false"
                },
                {
                  "name": "INVENTREE_LOGIN_ATTEMPTS",
                  "value": "5"
                },
                {
                  "name": "INVENTREE_LOGIN_CONFIRM_DAYS",
                  "value": "3"
                },
                {
                  "name": "INVENTREE_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "INVENTREE_PLUGINS_ENABLED",
                  "value": "false"
                },
                {
                  "name": "INVENTREE_SECRET_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "INVENTREE_SECRET_KEY",
                      "name": "inventree-secrets"
                    }
                  }
                },
                {
                  "name": "INVENTREE_TIMEZONE",
                  "value": "UTC"
                }
              ],
              "envFrom": [
                {
                  "secretRef": {
                    "name": "release-name-inventree"
                  }
                }
              ],
              "ports": [
                {
                  "name": "main",
                  "containerPort": 10231,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/home/inventree/data",
                  "name": "data"
                },
                {
                  "mountPath": "/etc/nginx/nginx.conf",
                  "name": "inventree-config",
                  "subPath": "nginx-confing"
                },
                {
                  "mountPath": "/shared",
                  "name": "shared"
                },
                {
                  "mountPath": "/tmp",
                  "name": "temp"
                },
                {
                  "mountPath": "/var/logs",
                  "name": "varlogs"
                }
              ],
              "livenessProbe": {
                "tcpSocket": {
                  "port": 10231
                },
                "initialDelaySeconds": 10,
                "failureThreshold": 5,
                "timeoutSeconds": 5,
                "periodSeconds": 10
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 10231
                },
                "initialDelaySeconds": 10,
                "failureThreshold": 5,
                "timeoutSeconds": 5,
                "periodSeconds": 10
              },
              "startupProbe": {
                "tcpSocket": {
                  "port": 10231
                },
                "initialDelaySeconds": 10,
                "failureThreshold": 60,
                "timeoutSeconds": 2,
                "periodSeconds": 5
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              }
            },
            {
              "image": "tccr.io/truecharts/nginx:v1.22.0@sha256:9829252d9891aa3dfc654df8a98f65567ca8b43683e3ef2898944bc44287aeef",
              "name": "nginx",
              "ports": [
                {
                  "containerPort": 10231,
                  "name": "main"
                }
              ],
              "securityContext": {
                "readOnlyRootFilesystem": false,
                "runAsGroup": 100,
                "runAsNonRoot": false,
                "runAsUser": 10909,
                "allowPrivilegeEscalation": false
              },
              "volumeMounts": [
                {
                  "mountPath": "/etc/nginx/conf.d/default.conf",
                  "name": "inventree-config",
                  "readOnly": true,
                  "subPath": "nginx-config"
                },
                {
                  "mountPath": "/var/www",
                  "name": "data"
                }
              ]
            },
            {
              "command": [
                "invoke",
                "worker"
              ],
              "env": [
                {
                  "name": "INVENTREE_ADMIN_EMAIL",
                  "value": ""
                },
                {
                  "name": "INVENTREE_ADMIN_USER",
                  "value": ""
                },
                {
                  "name": "INVENTREE_ADMIN_PASSWORD",
                  "value": ""
                },
                {
                  "name": "INVENTREE_TIMEZONE",
                  "value": "UTC"
                },
                {
                  "name": "INVENTREE_DB_ENGINE",
                  "value": "postgresql"
                },
                {
                  "name": "INVENTREE_DB_NAME",
                  "value": "inventree"
                },
                {
                  "name": "INVENTREE_DB_USER",
                  "value": "inventree"
                },
                {
                  "name": "INVENTREE_DB_PORT",
                  "value": "5432"
                },
                {
                  "name": "INVENTREE_DB_HOST",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "plainhost",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "INVENTREE_DB_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "postgresql-password",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "INVENTREE_SECRET_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "INVENTREE_SECRET_KEY",
                      "name": "inventree-secrets"
                    }
                  }
                },
                {
                  "name": "INVENTREE_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "INVENTREE_DEBUG",
                  "value": "false"
                },
                {
                  "name": "INVENTREE_LOGIN_CONFIRM_DAYS",
                  "value": "3"
                },
                {
                  "name": "INVENTREE_LOGIN_ATTEMPTS",
                  "value": "5"
                },
                {
                  "name": "INVENTREE_PLUGINS_ENABLED",
                  "value": "false"
                }
              ],
              "image": "tccr.io/truecharts/inventree:v0.7.1@sha256:2415725fc612763aafa2d9e23bd5482ca647bd55f80c889f6f5dd95f0b7988d3",
              "name": "worker",
              "volumeMounts": [
                {
                  "mountPath": "/home/inventree/data",
                  "name": "data"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "data",
              "persistentVolumeClaim": {
                "claimName": "release-name-inventree-data"
              }
            },
            {
              "name": "inventree-config",
              "configMap": {
                "name": "release-name-inventree-config"
              }
            },
            {
              "name": "shared",
              "emptyDir": {}
            },
            {
              "name": "temp",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "varlogs",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/version": "14.3.0",
        "helm-revision": "1",
        "helm.sh/chart": "postgresql-8.0.5"
      }
    },
    "spec": {
      "revisionHistoryLimit": 3,
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "postgresql",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "serviceName": "release-name-postgresql",
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "postgresql",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "securityContext": {
            "fsGroup": 568,
            "fsGroupChangePolicy": "OnRootMismatch",
            "runAsGroup": 0,
            "runAsUser": 568,
            "supplementalGroups": [
              568
            ]
          },
          "dnsPolicy": "ClusterFirst",
          "dnsConfig": {
            "options": [
              {
                "name": "ndots",
                "value": "1"
              }
            ]
          },
          "enableServiceLinks": false,
          "terminationGracePeriodSeconds": 10,
          "initContainers": [
            {
              "name": "autopermissions",
              "image": "ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583",
              "securityContext": {
                "runAsUser": 10763,
                "privileged": true,
                "allowPrivilegeEscalation": false
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              },
              "command": [
                "/bin/sh",
                "-c",
                "/bin/bash <<'EOF'\necho \"Automatically correcting permissions...\"\necho \"increasing inotify limits...\"\n( sysctl -w fs.inotify.max_user_watches=524288 || echo \"error setting inotify\") && ( sysctl -w fs.inotify.max_user_instances=512 || echo \"error setting inotify\")\nEOF\n"
              ],
              "volumeMounts": null
            }
          ],
          "containers": [
            {
              "name": "release-name-postgresql",
              "image": "ghcr.io/truecharts/postgresql:v14.3.0@sha256:a05700459c7d20acebb13edfe713174cccbdb63c727f8a6cd421be8592b172a4",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "env": [
                {
                  "name": "PUID",
                  "value": "568"
                },
                {
                  "name": "USER_ID",
                  "value": "568"
                },
                {
                  "name": "UID",
                  "value": "568"
                },
                {
                  "name": "UMASK",
                  "value": "2"
                },
                {
                  "name": "UMASK_SET",
                  "value": "2"
                },
                {
                  "name": "PGID",
                  "value": "568"
                },
                {
                  "name": "GROUP_ID",
                  "value": "568"
                },
                {
                  "name": "GID",
                  "value": "568"
                },
                {
                  "name": "S6_READ_ONLY_ROOT",
                  "value": "1"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "void"
                },
                {
                  "name": "TZ",
                  "value": "UTC"
                },
                {
                  "name": "POSTGRESQL_POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "postgresql-postgres-password",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "inventree"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "postgresql-password",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "inventree"
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "main",
                  "containerPort": 5432,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/shared",
                  "name": "shared"
                },
                {
                  "mountPath": "/tmp",
                  "name": "temp"
                },
                {
                  "mountPath": "/var/logs",
                  "name": "varlogs"
                },
                {
                  "mountPath": "/bitnami/postgresql",
                  "name": "db"
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "until pg_isready -U ${POSTGRES_USER} -h localhost; do sleep 2 ; done"
                  ]
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "until pg_isready -U ${POSTGRES_USER} -h localhost; do sleep 2 ; done"
                  ]
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "startupProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "until pg_isready -U ${POSTGRES_USER} -h localhost; do sleep 2 ; done"
                  ]
                },
                "failureThreshold": 60,
                "initialDelaySeconds": 10,
                "periodSeconds": 5,
                "timeoutSeconds": 2
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "shared",
              "emptyDir": {}
            },
            {
              "name": "temp",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "varlogs",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "db"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "999Gi"
              }
            }
          }
        }
      ]
    }
  }
]