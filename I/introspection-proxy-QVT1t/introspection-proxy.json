[
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "unused-service-for-token-introspection-proxy"
    },
    "spec": {
      "type": "ExternalName",
      "externalName": "example.com"
    }
  },
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": {
      "name": "release-name-introspection-proxy",
      "labels": {
        "helm.sh/chart": "introspection-proxy-0.1.1",
        "app.kubernetes.io/name": "introspection-proxy",
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/version": "1.16.0",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "annotations": {
        "kubernetes.io/ingress.class": "nginx-external",
        "nginx.ingress.kubernetes.io/server-snippet": "location idsvr {\n  # use a variable to prevent only resolving the DNS once\n  # see http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\n  set $idsvr_host \"example.com\";\n\n  proxy_set_header Host $idsvr_host;\n  proxy_pass https://$idsvr_host/oauth/v2/example/path;\n  proxy_redirect off;\n  \n  # proxy_cache_methods POST; \n  # proxy_cache api_cache; \n  # proxy_cache_key $request_body; \n  # proxy_ignore_headers Set-Cookie; \n}\n"
      }
    },
    "spec": {
      "rules": null
    }
  }
]