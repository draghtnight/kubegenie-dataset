apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: grafana-6.13.5
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 8.0.3
    app.kubernetes.io/managed-by: Helm
  name: release-name-grafana
  namespace: z3Qmm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: grafana-6.13.5
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 8.0.3
    app.kubernetes.io/managed-by: Helm
  name: release-name-grafana-test
  namespace: z3Qmm
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-grafana
  namespace: z3Qmm
  labels:
    helm.sh/chart: grafana-6.13.5
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 8.0.3
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  admin-user: Q2hhbmdlTWUxMjM=
  admin-password: Q2hhbmdlTWUxMjM=
  ldap-toml: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-master-1
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    component: icinga2-master-1
stringData:
  HOSTNAME: master-1.test.com
  ICINGA2_MASTER: master-1.test.com
  ICINGA2_API_USERS: root:ChangeMe123
  ICINGA2_API_PROM_USER: prometheus:ChangeMe123
  ICINGA2_API_HACHECK_USER: ha-api:ChangeMe123
  TICKET_SALT: ChangeMe123
  AGENT_HEALTH_CHECK_SEC: 60s
  AGENT_HEALTH_RETRY_SEC: 60s
  PAGERDUTY: ""
  MULTI_MASTER: "true"
  HA_CONFIG_MASTER: "true"
  HA_MASTER1: master-1.test.com
  HA_MASTER2: master-2.test.com
  HA_MASTER2_PORT: "5665"
  K8S_USE_SVC: "true"
  HA_MASTER1_SVCNAME: release-name-master-1
  HA_MASTER2_SVCNAME: release-name-master-2
  K8S_NAMESPACE: default
  K8S_DOMAIN: svc.cluster.local
  MYSQL_HOST: icinga2-mysql
  MYSQL_PORT: "3306"
  MYSQL_ROOT_USER: root
  MYSQL_ROOT_PASS: ChangeMe12345
  IDO_USER: icinga
  IDO_DATABASE_NAME: icinga2_ido
  IDO_PASSWORD: ChangeMe123
  ICINGADB: "false"
  ICINGA2_MSMTP_RELAY_SERVER: ""
  ICINGA2_MSMTP_REWRITE_DOMAIN: ""
  ICINGA2_MSMTP_RELAY_USE_STARTTLS: ""
  ICINGA2_MSMTP_SENDER_EMAIL: ""
  ICINGA2_MSMTP_SMTPAUTH_USER: ""
  ICINGA2_MSMTP_SMTPAUTH_PASS: ""
  ICINGA2_MSMTP_RECV_ROOT: ""
  ICINGA2_MSMTP_ACC_NAME: ""
  DEBUG: "0"
  LOG_LEVEL: warning
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-master-2
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    component: icinga2-master-2
stringData:
  HOSTNAME: master-2.test.com
  ICINGA2_MASTER: master-2.test.com
  ICINGA2_API_USERS: root:ChangeMe123
  ICINGA2_API_PROM_USER: prometheus:ChangeMe123
  ICINGA2_API_HACHECK_USER: ha-api:ChangeMe123
  TICKET_SALT: ChangeMe123
  AGENT_HEALTH_CHECK_SEC: 60s
  AGENT_HEALTH_RETRY_SEC: 60s
  PAGERDUTY: ""
  MULTI_MASTER: "true"
  HA_CONFIG_MASTER: "false"
  HA_MASTER1: master-1.test.com
  HA_MASTER2: master-2.test.com
  K8S_USE_SVC: "true"
  HA_MASTER1_SVCNAME: release-name-master-1
  HA_MASTER2_SVCNAME: release-name-master-2
  K8S_NAMESPACE: default
  K8S_DOMAIN: svc.cluster.local
  MYSQL_HOST: icinga2-mysql
  MYSQL_PORT: "3306"
  MYSQL_ROOT_USER: root
  MYSQL_ROOT_PASS: ChangeMe12345
  IDO_USER: icinga
  IDO_DATABASE_NAME: icinga2_ido
  IDO_PASSWORD: ChangeMe123
  ICINGADB: "false"
  ICINGA2_MSMTP_RELAY_SERVER: ""
  ICINGA2_MSMTP_REWRITE_DOMAIN: ""
  ICINGA2_MSMTP_RELAY_USE_STARTTLS: ""
  ICINGA2_MSMTP_SENDER_EMAIL: ""
  ICINGA2_MSMTP_SMTPAUTH_USER: ""
  ICINGA2_MSMTP_SMTPAUTH_PASS: ""
  ICINGA2_MSMTP_RECV_ROOT: ""
  ICINGA2_MSMTP_ACC_NAME: ""
  DEBUG: "0"
  LOG_LEVEL: warning
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-web
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    component: web
stringData:
  ICINGAWEB_DIRECTOR: "true"
  ICINGA2_MASTER: master-1.test.com
  ICINGA2_MASTER2: master-2.test.com
  ICINGA2_PORT: "5665"
  ICINGA2_API_PORT: "5665"
  ICINGA2_CMD_API_USER: root
  ICINGA2_CMD_API_PASS: ChangeMe123
  ICINGAWEB2_USERS: icinga:ChangeMe123,director:ChangeMe123
  ICINGAWEB2_DEPLOYERS: ansible:ChangeMe123
  ICINGA2_UPTIME: "25"
  MYSQL_HOST: icinga2-mysql
  MYSQL_PORT: "3306"
  MYSQL_ROOT_USER: root
  MYSQL_ROOT_PASS: ChangeMe12345
  WEB_DATABASE_USER: icinga
  WEB_DATABASE_NAME: icinga2_web
  WEB_DATABASE_PASS: ChangeMe123
  IDO_DATABASE_HOST: icinga2-mysql
  IDO_DATABASE_NAME: icinga2_ido
  IDO_USER: icinga
  IDO_PASSWORD: ChangeMe123
  MYSQL_DIRECTOR_USER: icinga
  MYSQL_DIRECTOR_NAME: icinga2_director
  MYSQL_DIRECTOR_PASS: ChangeMe123
  REPORTING_DATABASE_USER: icinga
  REPORTING_DATABASE_NAME: icinga2_reporting
  REPORTING_DATABASE_PASS: ChangeMe123
  VSPHEREDB_DATABASE_USER: icinga
  VSPHEREDB_DATABASE_NAME: icinga2_vspheredb
  VSPHEREDB_DATABASE_PASS: ChangeMe123
  X509_DATABASE_USER: icinga
  X509_DATABASE_NAME: icinga2_x509
  X509_DATABASE_PASS: ChangeMe123
  GRAFANA_HOST: ""
  GRAFANA_PORT: "443"
  GRAFANA_ACCESS: iframe
  GRAFANA_PROTOCOL: https
  GRAFANA_AUTHENTICATION: anon
  GRAFANA_AUTHENTICATION_TOKEN: ""
  GRAFANA_AUTHENTICATION_USERNAME: ""
  GRAFANA_AUTHENTICATION_PASSWORD: ""
  GRAFANA_ENABLE_LINK: "yes"
  GRAFANA_SHOW_DEBUG: "0"
  GRAFANA_PUBLIC: "yes"
  GRAFANA_PUBLIC_HOST: ""
  GRAFANA_PUBLIC_PROTOCOL: https
  GRAFANA_THEME: light
  GRAFANA_TIMERANGE: 1h
  GRAFANA_TIMERANGE_ALL: 7d
  GRAFANA_DASHBOARD_UID: Y07mGBtmk
  ICINGAWEB_AWS: "false"
  ICINGAWEB_BP: "true"
  ICINGAWEB_CUBE: "false"
  ICINGAWEB_FILESHIPPER: "false"
  ICINGAWEB_GLOBE: "false"
  ICINGAWEB_IDOREPORTS: "false"
  ICINGAWEB_MAP: "true"
  ICINGAWEB_PDF: "false"
  ICINGAWEB_REPORTING: "true"
  ICINGAWEB_TLV: "false"
  ICINGAWEB_VSPHEREDB: "false"
  ICINGAWEB_X509: "false"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-grafana
  namespace: z3Qmm
  labels:
    helm.sh/chart: grafana-6.13.5
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 8.0.3
    app.kubernetes.io/managed-by: Helm
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [auth]
    disable_login_form = false
    disable_signout_menu = false
    [auth.anonymous]
    enabled = true
    org_role = Viewer
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [security]
    allow_embedding = true
    [server]
    root_url = https://grafana.example.de
    [users]
    viewers_can_edit = false
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      database: icinga2
      editable: true
      jsonData:
        timeInterval: 15s
      name: Icinga2
      password: ChangeMe123
      type: influxdb
      url: http://icinga2-influxdb:8086
      user: icinga2
    deleteDatasources:
    - name: Icinga2
      orgId: 1
  dashboardproviders.yaml: |
    apiVersion: 1
    providers:
    - disableDeletion: false
      editable: true
      folder: ""
      name: default
      options:
        path: /var/lib/grafana/dashboards/default
      orgId: 1
      type: file
  download_dashboards.sh: |
    #!/usr/bin/env sh
    set -euf
    mkdir -p /var/lib/grafana/dashboards/default
    curl -skf \
    --connect-timeout 60 \
    --max-time 60 \
    -H "Accept: application/json" \
    -H "Content-Type: application/json;charset=UTF-8" \
      "https://michaelstefanschmitz.de/grafana/icinga2-default.json"\
    > "/var/lib/grafana/dashboards/default/Icinga2-Default.json"
    curl -skf \
    --connect-timeout 60 \
    --max-time 60 \
    -H "Accept: application/json" \
    -H "Content-Type: application/json;charset=UTF-8" \
      "https://michaelstefanschmitz.de/grafana/icinga2-influxdb-host.json"\
    > "/var/lib/grafana/dashboards/default/Icinga2-Influxd.json"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-grafana-dashboards-default
  namespace: z3Qmm
  labels:
    helm.sh/chart: grafana-6.13.5
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 8.0.3
    app.kubernetes.io/managed-by: Helm
    dashboard-provider: default
data: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-grafana-test
  namespace: z3Qmm
  labels:
    helm.sh/chart: grafana-6.13.5
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 8.0.3
    app.kubernetes.io/managed-by: Helm
data:
  run.sh: |-
    @test "Test Health" {
      url="http://release-name-grafana/api/health"

      code=$(wget --server-response --spider --timeout 10 --tries 1 ${url} 2>&1 | awk '/^  HTTP/{print $2}')
      [ "$code" == "200" ]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-web-dnsmasq
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    component: web
data:
  entrypoint.sh: "#/bin/sh\n\necho \"attempting to lookup release-name-master-1.default.svc.cluster.local @169.254.20.10 ...\"\nMASTER_1_SVC_IP=$(dig +short \"release-name-master-1.default.svc.cluster.local\" @169.254.20.10 )\necho \"MASTER_1_SVC_IP=$MASTER_1_SVC_IP\"\n\n\necho \"attempting to lookup release-name-master-2.default.svc.cluster.local @169.254.20.10 ...\"\nMASTER_2_SVC_IP=$(dig +short \"release-name-master-2.default.svc.cluster.local\" @169.254.20.10 )\necho \"MASTER_2_SVC_IP=$MASTER_2_SVC_IP\"\n\n\nDNSMASQ_CMD=\" \\\n  dnsmasq \\\n  --no-daemon \\\n  --domain-needed \\\n  --address=/master-1.test.com/$MASTER_1_SVC_IP \\\n  \n  --address=/master-2.test.com/$MASTER_2_SVC_IP \\\n  \n  --server=169.254.20.10 \\\n\"\n\necho \"running dnsmasq with: \"\necho $DNSMASQ_CMD\neval $DNSMASQ_CMD"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-master-1
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    component: icinga2-master-1
spec:
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-master-2
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    component: icinga2-master-2
spec:
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-grafana
  namespace: z3Qmm
  labels:
    helm.sh/chart: grafana-6.13.5
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 8.0.3
    app.kubernetes.io/managed-by: Helm
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-grafana
  namespace: z3Qmm
  labels:
    helm.sh/chart: grafana-6.13.5
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 8.0.3
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-grafana
subjects:
  - kind: ServiceAccount
    name: release-name-grafana
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-grafana
  namespace: z3Qmm
  labels:
    helm.sh/chart: grafana-6.13.5
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 8.0.3
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-master-1
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    component: icinga2-master-1
spec:
  selector:
    app: icinga2-master
    release: release-name
    component: icinga2-master-1
  ports:
    - name: icinga2
      port: 5665
      targetPort: 5665
    - name: certsvc
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-master-2
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    component: icinga2-master-2
spec:
  selector:
    app: icinga2-master
    release: release-name
    component: icinga2-master-2
  ports:
    - name: icinga2
      port: 5665
      targetPort: 5665
    - name: certsvc
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-web
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    component: web
spec:
  selector:
    app: icinga2-master
    release: release-name
    component: web
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-grafana
  namespace: z3Qmm
  labels:
    helm.sh/chart: grafana-6.13.5
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 8.0.3
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: 7f1c6e00f65c1b917e2d45bd183d75fa169051b8af3bb166e07f829feb347f94
        checksum/dashboards-json-config: 1f5c8e95a8a61ab0875990da17a129609ddfc87dc0571b2793df2eceda89c833
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: 742b908ea07ae3f300ac5d6e80f53d12fe18b83cde6453901d414e0e1ef24482
    spec:
      serviceAccountName: release-name-grafana
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      initContainers:
        - name: download-dashboards
          image: curlimages/curl:7.73.0
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
          args:
            - -c
            - mkdir -p /var/lib/grafana/dashboards/default && /bin/sh /etc/grafana/download_dashboards.sh
          resources: {}
          env: null
          volumeMounts:
            - name: config
              mountPath: /etc/grafana/download_dashboards.sh
              subPath: download_dashboards.sh
            - name: storage
              mountPath: /var/lib/grafana
      enableServiceLinks: true
      containers:
        - name: grafana
          image: grafana/grafana:8.0.3
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: storage
              mountPath: /var/lib/grafana
            - name: config
              mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              subPath: datasources.yaml
            - name: config
              mountPath: /etc/grafana/provisioning/dashboards/dashboardproviders.yaml
              subPath: dashboardproviders.yaml
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana
                  key: admin-password
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
            - name: GF_EXPLORE_ENABLED
              value: "true"
            - name: GF_LOG_FILTERS
              value: rendering:debug
            - name: GF_RENDERING_CALLBACK_URL
              value: http://grafana
            - name: GF_RENDERING_SERVER_URL
              value: http://grafana-image-renderer:8081/render
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config
          configMap:
            name: release-name-grafana
        - name: dashboards-default
          configMap:
            name: release-name-grafana-dashboards-default
        - name: storage
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-master-1
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    revision: "1"
    component: icinga2-master-1
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: icinga2-master
      release: release-name
      component: icinga2-master-1
  template:
    metadata:
      labels:
        app: icinga2-master
        chart: icinga2-master-0.2.0
        release: release-name
        heritage: Helm
        revision: "1"
        component: icinga2-master-1
    spec:
      enableServiceLinks: false
      hostname: master-1
      securityContext:
        runAsUser: 0
        fsGroup: 0
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: component
                    operator: In
                    values:
                      - icinga2-master-2
              topologyKey: kubernetes.io/hostname
      initContainers:
        - name: volume-init
          image: busybox
          securityContext:
            runAsUser: 0
          command:
            - sh
            - -c
            - '[ -d /var/lib/icinga2/certs ] || mkdir -p /var/lib/icinga2/certs && [ -d /var/lib/icinga2/ca ] ||  mkdir -p /var/lib/icinga2/ca && chown -R 101:101 /var/lib/icinga2'
          volumeMounts:
            - name: data
              mountPath: /var/lib/icinga2/api
              subPath: data
            - name: data
              mountPath: /var/lib/icinga2/backup
              subPath: backup
            - name: data
              mountPath: /var/lib/icinga2/ca
              subPath: ca
            - name: data
              mountPath: /var/lib/icinga2/certs
              subPath: certs
      containers:
        - name: master
          image: registry.gitlab.com/olemisea/icinga2:stable-2.13.2-master
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 11413
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          ports:
            - containerPort: 5665
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: release-name-master-1
          volumeMounts:
            - name: data
              mountPath: /var/lib/icinga2/api
              subPath: data
            - name: data
              mountPath: /var/lib/icinga2/backup
              subPath: backup
            - name: data
              mountPath: /var/lib/icinga2/certs
              subPath: certs
            - name: data
              mountPath: /var/lib/icinga2/ca
              subPath: ca
            - name: ca
              mountPath: /var/lib/icinga2/ca-readonly
              readOnly: true
            - name: tz-config
              mountPath: /etc/localtime
          resources:
            requests:
              cpu: 200m
              memory: 500Mi
            limits:
              memory: 2000Mi
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-master-1
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/Europe/Berlin
        - name: ca
          secret:
            secretName: release-name-ca
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-master-2
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    revision: "1"
    component: icinga2-master-1
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: icinga2-master
      release: release-name
      component: icinga2-master-2
  template:
    metadata:
      labels:
        app: icinga2-master
        chart: icinga2-master-0.2.0
        release: release-name
        heritage: Helm
        revision: "1"
        component: icinga2-master-2
    spec:
      enableServiceLinks: false
      hostname: master-2
      securityContext:
        runAsUser: 0
        fsGroup: 0
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: component
                    operator: In
                    values:
                      - icinga2-master-1
              topologyKey: kubernetes.io/hostname
      initContainers:
        - name: volume-init
          image: busybox
          securityContext:
            runAsUser: 0
          command:
            - sh
            - -c
            - '[ -d /var/lib/icinga2/certs ] || mkdir -p /var/lib/icinga2/certs && [ -d /var/lib/icinga2/ca ] ||  mkdir -p /var/lib/icinga2/ca && chown -R 101:101 /var/lib/icinga2'
          volumeMounts:
            - name: data
              mountPath: /var/lib/icinga2/api
              subPath: data
            - name: data
              mountPath: /var/lib/icinga2/backup
              subPath: backup
            - name: data
              mountPath: /var/lib/icinga2/ca
              subPath: ca
            - name: data
              mountPath: /var/lib/icinga2/certs
              subPath: certs
      containers:
        - name: master
          image: registry.gitlab.com/olemisea/icinga2:stable-2.13.2-master
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 10563
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          ports:
            - containerPort: 5665
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: release-name-master-2
          volumeMounts:
            - name: data
              mountPath: /var/lib/icinga2/api
              subPath: data
            - name: data
              mountPath: /var/lib/icinga2/backup
              subPath: backup
            - name: data
              mountPath: /var/lib/icinga2/certs
              subPath: certs
            - name: data
              mountPath: /var/lib/icinga2/ca
              subPath: ca
            - name: ca
              mountPath: /var/lib/icinga2/ca-readonly
              readOnly: true
            - name: tz-config
              mountPath: /etc/localtime
          resources:
            requests:
              cpu: 200m
              memory: 500Mi
            limits:
              memory: 2000Mi
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-master-2
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/Europe/Berlin
        - name: ca
          secret:
            secretName: release-name-ca
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-web
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    revision: "1"
    component: web
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: icinga2-master
      release: release-name
      component: web
  template:
    metadata:
      labels:
        app: icinga2-master
        chart: icinga2-master-0.2.0
        release: release-name
        heritage: Helm
        revision: "1"
        component: web
    spec:
      enableServiceLinks: false
      terminationGracePeriodSeconds: 15
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 127.0.0.1
        searches:
          - default.svc.cluster.local
          - svc.cluster.local
          - cluster.local
        options:
          - name: ndots
            value: "5"
      containers:
        - name: web
          image: registry.gitlab.com/olemisea/icingaweb2:2.9.5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          envFrom:
            - secretRef:
                name: release-name-web
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
          resources:
            requests:
              cpu: 200m
              memory: 500Mi
            limits:
              memory: 1000Mi
            seccompProfile:
              type: RuntimeDefault
        - name: dnsmasq
          image: registry.gitlab.com/olemisea/dnsmasq:3.1
          imagePullPolicy: Always
          command:
            - sh
            - -c
            - /entrypoint.sh
          ports:
            - containerPort: 53
          volumeMounts:
            - name: dnsmasq-config
              mountPath: /entrypoint.sh
              subPath: entrypoint.sh
      volumes:
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/Europe/Berlin
        - name: dnsmasq-config
          configMap:
            name: release-name-web-dnsmasq
            defaultMode: 365
---
kind: Ingress
metadata:
  name: release-name-master-1
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    component: icinga2-master-1
  annotations:
    ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  rules:
    - host: master-1.test.com
      http:
        paths:
          - path: /
            backend:
              serviceName: release-name-master-1
              servicePort: 5665
---
kind: Ingress
metadata:
  name: release-name-master-2
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    component: icinga2-master-2
  annotations:
    ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  rules:
    - host: master-2.test.com
      http:
        paths:
          - path: /
            backend:
              serviceName: release-name-master-2
              servicePort: 5665
---
kind: Ingress
metadata:
  name: release-name-web
  labels:
    app: icinga2-master
    chart: icinga2-master-0.2.0
    release: release-name
    heritage: Helm
    component: web
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - secretName: release-name-web-tls
      hosts:
        - icinga2.ops.dhswt.de
  rules:
    - host: icinga2.ops.dhswt.de
      http:
        paths:
          - path: /
            backend:
              serviceName: release-name-web
              servicePort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-grafana-test
  labels:
    helm.sh/chart: grafana-6.13.5
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 8.0.3
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test-success
  namespace: z3Qmm
spec:
  serviceAccountName: release-name-grafana-test
  containers:
    - name: release-name-test
      image: bats/bats:v1.1.0
      imagePullPolicy: IfNotPresent
      command:
        - /opt/bats/bin/bats
        - -t
        - /tests/run.sh
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
  volumes:
    - name: tests
      configMap:
        name: release-name-grafana-test
  restartPolicy: Never
