[
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "name": "release-name-postgresql-credentials",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/version": "14.3.0",
        "helm-revision": "1",
        "helm.sh/chart": "postgresql-8.0.5"
      }
    },
    "stringData": {
      "postgresql-password": "testpass",
      "postgresql-postgres-password": "testroot"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Secret",
    "metadata": {
      "labels": {
        "helm.sh/chart": "zabbix-server-2.0.1",
        "app.kubernetes.io/name": "zabbix-server",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "6.0.5",
        "app.kubernetes.io/managed-by": "Helm"
      },
      "name": "dbcreds"
    },
    "data": {
      "postgresql-password": "NHFnck5UNDdzSFFWU3NGVG04VURQTElxdW1LRHJvcFYycWRacHlyV21ITkdqajk5TGQ=",
      "postgresql-postgres-password": "ekhJamwyTHlDRXdhd0k3M1VZdzhkTUhvdlpid1hIZFZvNjBwdnh5R1hISEtpb2RVODY=",
      "url": "cG9zdGdyZXNxbDovL3phYmJpeDo0cWdyTlQ0N3NIUVZTc0ZUbThVRFBMSXF1bUtEcm9wVjJxZFpweXJXbUhOR2pqOTlMZEByZWxlYXNlLW5hbWUtcG9zdGdyZXNxbDo1NDMyL3phYmJpeA==",
      "url-noql": "cG9zdGdyZXM6Ly96YWJiaXg6NHFnck5UNDdzSFFWU3NGVG04VURQTElxdW1LRHJvcFYycWRacHlyV21ITkdqajk5TGRAcmVsZWFzZS1uYW1lLXBvc3RncmVzcWw6NTQzMi96YWJiaXg=",
      "urlnossl": "cG9zdGdyZXNxbDovL3phYmJpeDo0cWdyTlQ0N3NIUVZTc0ZUbThVRFBMSXF1bUtEcm9wVjJxZFpweXJXbUhOR2pqOTlMZEByZWxlYXNlLW5hbWUtcG9zdGdyZXNxbDo1NDMyL3phYmJpeD9zc2xtb2RlPWRpc2FibGU=",
      "plainporthost": "cmVsZWFzZS1uYW1lLXBvc3RncmVzcWw=",
      "plainhost": "cmVsZWFzZS1uYW1lLXBvc3RncmVzcWw=",
      "jdbc": "amRiYzpwb3N0Z3Jlc3FsOi8vcmVsZWFzZS1uYW1lLXBvc3RncmVzcWw6NTQzMi96YWJiaXg="
    },
    "type": "Opaque"
  },
  {
    "kind": "PersistentVolumeClaim",
    "apiVersion": "v1",
    "metadata": {
      "name": "release-name-zabbix-server-snmptraps",
      "labels": {
        "helm.sh/chart": "zabbix-server-2.0.1",
        "app.kubernetes.io/name": "zabbix-server",
        "app.kubernetes.io/instance": "release-name",
        "helm-revision": "1",
        "app.kubernetes.io/version": "6.0.5",
        "app.kubernetes.io/managed-by": "Helm"
      }
    },
    "spec": {
      "accessModes": [
        "ReadWriteOnce"
      ],
      "resources": {
        "requests": {
          "storage": "999Gi"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/version": "14.3.0",
        "helm-revision": "1",
        "helm.sh/chart": "postgresql-8.0.5"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ipFamilyPolicy": "SingleStack",
      "ports": [
        {
          "port": 5432,
          "targetPort": 5432,
          "protocol": "TCP",
          "name": "main"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-zabbix-server",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "zabbix-server",
        "app.kubernetes.io/version": "6.0.5",
        "helm-revision": "1",
        "helm.sh/chart": "zabbix-server-2.0.1"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ipFamilyPolicy": "SingleStack",
      "ports": [
        {
          "port": 10211,
          "targetPort": 8080,
          "protocol": "TCP",
          "name": "main"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "zabbix-server",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-zabbix-server-server",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "zabbix-server",
        "app.kubernetes.io/version": "6.0.5",
        "helm-revision": "1",
        "helm.sh/chart": "zabbix-server-2.0.1"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 10212,
          "targetPort": 10051,
          "protocol": "TCP",
          "name": "server"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "zabbix-server",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "release-name-zabbix-server-snmptraps",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "zabbix-server",
        "app.kubernetes.io/version": "6.0.5",
        "helm-revision": "1",
        "helm.sh/chart": "zabbix-server-2.0.1"
      },
      "annotations": null
    },
    "spec": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 162,
          "targetPort": 1162,
          "protocol": "UDP",
          "name": "snmptraps"
        }
      ],
      "selector": {
        "app.kubernetes.io/name": "zabbix-server",
        "app.kubernetes.io/instance": "release-name"
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "name": "release-name-zabbix-server",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "zabbix-server",
        "app.kubernetes.io/version": "6.0.5",
        "helm-revision": "1",
        "helm.sh/chart": "zabbix-server-2.0.1"
      }
    },
    "spec": {
      "revisionHistoryLimit": 3,
      "replicas": 1,
      "strategy": {
        "type": "Recreate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "zabbix-server",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "template": {
        "metadata": {
          "annotations": null,
          "labels": {
            "app.kubernetes.io/name": "zabbix-server",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "securityContext": {
            "fsGroup": 568,
            "fsGroupChangePolicy": "OnRootMismatch",
            "runAsGroup": 0,
            "runAsUser": 0,
            "supplementalGroups": [
              568
            ]
          },
          "dnsPolicy": "ClusterFirst",
          "dnsConfig": {
            "options": [
              {
                "name": "ndots",
                "value": "1"
              }
            ]
          },
          "enableServiceLinks": false,
          "terminationGracePeriodSeconds": 10,
          "initContainers": [
            {
              "name": "autopermissions",
              "image": "ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583",
              "securityContext": {
                "runAsUser": 0,
                "privileged": true
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              },
              "command": [
                "/bin/sh",
                "-c",
                "/bin/bash <<'EOF'\necho \"Automatically correcting permissions...\"\necho \"increasing inotify limits...\"\n( sysctl -w fs.inotify.max_user_watches=524288 || echo \"error setting inotify\") && ( sysctl -w fs.inotify.max_user_instances=512 || echo \"error setting inotify\")\nEOF\n"
              ],
              "volumeMounts": null
            },
            {
              "name": "postgresql-init",
              "image": "ghcr.io/truecharts/postgresql:v14.3.0@sha256:a05700459c7d20acebb13edfe713174cccbdb63c727f8a6cd421be8592b172a4",
              "securityContext": {
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                }
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              },
              "command": [
                "sh",
                "-c",
                "until pg_isready -U zabbix -h release-name-postgresql; do sleep 2 ; done"
              ],
              "imagePullPolicy": "IfNotPresent"
            }
          ],
          "containers": [
            {
              "name": "release-name-zabbix-server",
              "image": "tccr.io/truecharts/zabbix-server:v6.0.5@sha256:3744428aca58421820f775d41f8ac83fab551d6958b0d984c9b349d282483785",
              "imagePullPolicy": "IfNotPresent",
              "tty": true,
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": false
              },
              "env": [
                {
                  "name": "PUID",
                  "value": "568"
                },
                {
                  "name": "USER_ID",
                  "value": "568"
                },
                {
                  "name": "UID",
                  "value": "568"
                },
                {
                  "name": "UMASK",
                  "value": "2"
                },
                {
                  "name": "UMASK_SET",
                  "value": "2"
                },
                {
                  "name": "PGID",
                  "value": "568"
                },
                {
                  "name": "GROUP_ID",
                  "value": "568"
                },
                {
                  "name": "GID",
                  "value": "568"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "void"
                },
                {
                  "name": "TZ",
                  "value": "UTC"
                },
                {
                  "name": "DB_SERVER_HOST",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "plainhost",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "DB_SERVER_PORT",
                  "value": "5432"
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "zabbix"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "postgresql-password",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "zabbix"
                },
                {
                  "name": "ZBX_ENABLE_SNMP_TRAPS",
                  "value": "true"
                },
                {
                  "name": "ZBX_LOADMODULE",
                  "value": ""
                },
                {
                  "name": "ZBX_TIMEOUT",
                  "value": "4"
                },
                {
                  "name": "ZBX_WEBSERVICEURL",
                  "value": "http://localhost:8080/report"
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "main",
                  "containerPort": 8080,
                  "protocol": "TCP"
                },
                {
                  "name": "server",
                  "containerPort": 10051,
                  "protocol": "TCP"
                },
                {
                  "name": "snmptraps",
                  "containerPort": 1162,
                  "protocol": "UDP"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/shared",
                  "name": "shared"
                },
                {
                  "mountPath": "/var/lib/zabbix/snmptraps",
                  "name": "snmptraps"
                },
                {
                  "mountPath": "/tmp",
                  "name": "temp"
                },
                {
                  "mountPath": "/var/logs",
                  "name": "varlogs"
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "until zabbix_server -R ha_status; do sleep 2; done"
                  ]
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "until zabbix_server -R ha_status; do sleep 2; done"
                  ]
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "startupProbe": {
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-ec",
                    "until zabbix_server -R ha_status; do sleep 2; done"
                  ]
                },
                "failureThreshold": 60,
                "initialDelaySeconds": 10,
                "periodSeconds": 5,
                "timeoutSeconds": 2
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              }
            },
            {
              "env": [
                {
                  "name": "ZBX_SERVER_HOST",
                  "value": "localhost"
                },
                {
                  "name": "ZBX_SERVER_PORT",
                  "value": "10051"
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "zabbix"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "zabbix"
                },
                {
                  "name": "DB_SERVER_PORT",
                  "value": "5432"
                },
                {
                  "name": "PHP_TZ",
                  "value": "UTC"
                },
                {
                  "name": "DB_SERVER_HOST",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "plainhost",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "postgresql-password",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "ZBX_SERVER_NAME",
                  "value": "My Zabbix Instance"
                },
                {
                  "name": "ZBX_MAXEXECUTIONTIME",
                  "value": "300"
                },
                {
                  "name": "ZBX_MEMORYLIMIT",
                  "value": "128M"
                },
                {
                  "name": "ZBX_POSTMAXSIZE",
                  "value": "16M"
                },
                {
                  "name": "ZBX_UPLOADMAXFILESIZE",
                  "value": "2M"
                },
                {
                  "name": "ZBX_MAXINPUTTIME",
                  "value": "300"
                },
                {
                  "name": "ZBX_DENY_GUI_ACCESS",
                  "value": "false"
                },
                {
                  "name": "ZBX_GUI_ACCESS_IP_RANGE",
                  "value": ""
                },
                {
                  "name": "ZBX_GUI_WARNING_MSG",
                  "value": "My Zabbix instance is currently in maintenance"
                }
              ],
              "image": "tccr.io/truecharts/zabbix-web:v6.0.5@sha256:2ad89f579a7c1ccc38af01f1252a2f3d8ca9cf82616c0d1151a8abaa97c196ee",
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 8080
                }
              },
              "name": "front",
              "ports": [
                {
                  "containerPort": 8080,
                  "name": "main"
                }
              ],
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 8080
                }
              },
              "startupProbe": {
                "httpGet": {
                  "path": "/",
                  "port": 8080
                }
              }
            },
            {
              "image": "tccr.io/truecharts/zabbix-snmptraps:v6.0.5@sha256:67049f5bf817403b717a56cdfc35dfa2be74fe62222fdc297e037c5d4789bfb2",
              "name": "snmptraps",
              "volumeMounts": [
                {
                  "mountPath": "/var/lib/zabbix/snmptraps",
                  "name": "snmptraps"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "shared",
              "emptyDir": {}
            },
            {
              "name": "snmptraps",
              "persistentVolumeClaim": {
                "claimName": "release-name-zabbix-server-snmptraps"
              }
            },
            {
              "name": "temp",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "varlogs",
              "emptyDir": {}
            }
          ]
        }
      }
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": {
      "name": "release-name-postgresql",
      "labels": {
        "app.kubernetes.io/instance": "release-name",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "postgresql",
        "app.kubernetes.io/version": "14.3.0",
        "helm-revision": "1",
        "helm.sh/chart": "postgresql-8.0.5"
      }
    },
    "spec": {
      "revisionHistoryLimit": 3,
      "replicas": 1,
      "updateStrategy": {
        "type": "RollingUpdate"
      },
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/name": "postgresql",
          "app.kubernetes.io/instance": "release-name"
        }
      },
      "serviceName": "release-name-postgresql",
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "postgresql",
            "app.kubernetes.io/instance": "release-name"
          }
        },
        "spec": {
          "serviceAccountName": "default",
          "securityContext": {
            "fsGroup": 568,
            "fsGroupChangePolicy": "OnRootMismatch",
            "runAsGroup": 0,
            "runAsUser": 568,
            "supplementalGroups": [
              568
            ]
          },
          "dnsPolicy": "ClusterFirst",
          "dnsConfig": {
            "options": [
              {
                "name": "ndots",
                "value": "1"
              }
            ]
          },
          "enableServiceLinks": false,
          "terminationGracePeriodSeconds": 10,
          "initContainers": [
            {
              "name": "autopermissions",
              "image": "ghcr.io/truecharts/alpine:v3.15.2@sha256:29ed3480a0ee43f7af681fed5d4fc215516abf1c41eade6938b26d8c9c2c7583",
              "securityContext": {
                "runAsUser": 11341,
                "privileged": true,
                "allowPrivilegeEscalation": false
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              },
              "command": [
                "/bin/sh",
                "-c",
                "/bin/bash <<'EOF'\necho \"Automatically correcting permissions...\"\necho \"increasing inotify limits...\"\n( sysctl -w fs.inotify.max_user_watches=524288 || echo \"error setting inotify\") && ( sysctl -w fs.inotify.max_user_instances=512 || echo \"error setting inotify\")\nEOF\n"
              ],
              "volumeMounts": null
            }
          ],
          "containers": [
            {
              "name": "release-name-postgresql",
              "image": "ghcr.io/truecharts/postgresql:v14.3.0@sha256:a05700459c7d20acebb13edfe713174cccbdb63c727f8a6cd421be8592b172a4",
              "imagePullPolicy": "IfNotPresent",
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": {
                    "": "NET_RAW"
                  }
                },
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "env": [
                {
                  "name": "PUID",
                  "value": "568"
                },
                {
                  "name": "USER_ID",
                  "value": "568"
                },
                {
                  "name": "UID",
                  "value": "568"
                },
                {
                  "name": "UMASK",
                  "value": "2"
                },
                {
                  "name": "UMASK_SET",
                  "value": "2"
                },
                {
                  "name": "PGID",
                  "value": "568"
                },
                {
                  "name": "GROUP_ID",
                  "value": "568"
                },
                {
                  "name": "GID",
                  "value": "568"
                },
                {
                  "name": "S6_READ_ONLY_ROOT",
                  "value": "1"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "void"
                },
                {
                  "name": "TZ",
                  "value": "UTC"
                },
                {
                  "name": "POSTGRESQL_POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "postgresql-postgres-password",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "POSTGRES_DB",
                  "value": "zabbix"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "postgresql-password",
                      "name": "dbcreds"
                    }
                  }
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "zabbix"
                }
              ],
              "envFrom": null,
              "ports": [
                {
                  "name": "main",
                  "containerPort": 5432,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "mountPath": "/shared",
                  "name": "shared"
                },
                {
                  "mountPath": "/tmp",
                  "name": "temp"
                },
                {
                  "mountPath": "/var/logs",
                  "name": "varlogs"
                },
                {
                  "mountPath": "/bitnami/postgresql",
                  "name": "db"
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "until pg_isready -U ${POSTGRES_USER} -h localhost; do sleep 2 ; done"
                  ]
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "until pg_isready -U ${POSTGRES_USER} -h localhost; do sleep 2 ; done"
                  ]
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5
              },
              "startupProbe": {
                "exec": {
                  "command": [
                    "sh",
                    "-c",
                    "until pg_isready -U ${POSTGRES_USER} -h localhost; do sleep 2 ; done"
                  ]
                },
                "failureThreshold": 60,
                "initialDelaySeconds": 10,
                "periodSeconds": 5,
                "timeoutSeconds": 2
              },
              "resources": {
                "limits": {
                  "cpu": "4000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "10m",
                  "memory": "50Mi"
                }
              }
            }
          ],
          "volumes": [
            {
              "name": "shared",
              "emptyDir": {}
            },
            {
              "name": "temp",
              "emptyDir": {
                "medium": "Memory"
              }
            },
            {
              "name": "varlogs",
              "emptyDir": {}
            }
          ]
        }
      },
      "volumeClaimTemplates": [
        {
          "metadata": {
            "name": "db"
          },
          "spec": {
            "accessModes": [
              "ReadWriteOnce"
            ],
            "resources": {
              "requests": {
                "storage": "999Gi"
              }
            }
          }
        }
      ]
    }
  }
]