apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.18
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: MJuVK1wHN1o
type: Opaque
data:
  postgresql-postgres-password: emFiYml4X3B3ZA==
  postgresql-password: emFiYml4X3B3ZA==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-postgresql-extended-configuration
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.18
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: MJuVK1wHN1o
data:
  override.conf: |
    checkpoint_completion_target = 0.9
    default_statistics_target = '100'
    effective_cache_size = '6GB'
    effective_io_concurrency = '2'
    maintenance_work_mem = '512MB'
    max_connections = '40'
    max_parallel_maintenance_workers = '4'
    max_parallel_workers = '8'
    max_parallel_workers_per_gather = '4'
    max_wal_size = '4GB'
    max_worker_processes = '8'
    min_wal_size = '1GB'
    random_page_cost = '4'
    shared_buffers = '2GB'
    wal_buffers = '16MB'
    work_mem = '13107kB'
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.18
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: MJuVK1wHN1o
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.18
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations: null
  namespace: MJuVK1wHN1o
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: zabbix-server
  labels:
    app: zabbix-server
    app.kubernetes.io/name: zabbix-server
    chart: zabbix-server-1.0.6
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 10051
      targetPort: 10051
      name: zabbix-server
    - port: 10052
      targetPort: 10052
      name: zabbix-jmx
  selector:
    app: zabbix-server
---
apiVersion: v1
kind: Service
metadata:
  name: zabbix-agent
  labels:
    app: zabbix-agent
    app.kubernetes.io/name: zabbix-agent
    helm.sh/chart: zabbix-server-1.0.6
    app.kubernetes.io/instance: release-name-agent
    app.kubernetes.io/managed-by: Helm-agent
spec:
  type: ClusterIP
  ports:
    - port: 10050
      targetPort: 10050
      protocol: TCP
      name: zabbix-agent
  selector:
    app: zabbix-agent
---
apiVersion: v1
kind: Service
metadata:
  name: zabbix-web
  labels:
    app: zabbix-web
    app.kubernetes.io/name: zabbix-web
    helm.sh/chart: zabbix-server-1.0.6
    app.kubernetes.io/instance: release-name-web
    app.kubernetes.io/managed-by: Helm-web
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: zabbix-web
  selector:
    app: zabbix-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zabbix-web
  labels:
    app: zabbix-web
    chart: zabbix-server-1.0.6
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zabbix-web
      release: release-name
  template:
    metadata:
      labels:
        app: zabbix-web
        chart: zabbix-server-1.0.6
        release: release-name
        heritage: Helm
    spec:
      containers:
        - name: zabbix-web
          resources: null
          securityContext: null
          image: zabbix/zabbix-web-nginx-pgsql:ubuntu-5.4.6
          imagePullPolicy: IfNotPresent
          env:
            - name: ZBX_SERVER_HOST
              value: zabbix-server
            - name: ZBX_SERVER_PORT
              value: "10051"
            - name: DB_SERVER_HOST
              value: zabbix-postgresql
            - name: DB_SERVER_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: zabbix
            - name: POSTGRES_PASSWORD
              value: zabbix_pwd
            - name: POSTGRES_DB
              value: zabbix
          ports:
            - name: zabbix-web
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: zabbix-web
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: zabbix-web
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
      imagePullSecrets: null
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.18
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
  namespace: MJuVK1wHN1o
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.3.18
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      containers:
        - name: release-name-postgresql
          image: docker.io/bitnami/postgresql:11.11.0-debian-10-r71
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            seccompProfile:
              type: RuntimeDefault
          securityContext:
            runAsUser: 11519
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                "": NET_RAW
            readOnlyRootFilesystem: true
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-postgres-password
            - name: POSTGRES_USER
              value: zabbix
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: zabbix
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: error
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: pgaudit
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "zabbix" -d "dbname=zabbix" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "zabbix" -d "dbname=zabbix" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: postgresql-extended-config
              mountPath: /bitnami/postgresql/conf/conf.d/
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: null
      volumes:
        - name: postgresql-extended-config
          configMap:
            name: release-name-postgresql-extended-configuration
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-zabbix-server
  labels:
    app: zabbix-server
    chart: zabbix-server-1.0.6
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  serviceName: release-name-zabbix-server
  selector:
    matchLabels:
      app: zabbix-server
      release: release-name
  template:
    metadata:
      labels:
        app: zabbix-server
        chart: zabbix-server-1.0.6
        release: release-name
        heritage: Helm
    spec:
      containers:
        - name: zabbix-server
          resources:
            seccompProfile:
              type: RuntimeDefault
          image: zabbix/zabbix-server-pgsql:ubuntu-5.4.6
          ports:
            - containerPort: 10051
              name: zabbix-trapper
            - containerPort: 10052
              name: zabbix-jmx
          env:
            - name: DB_SERVER_HOST
              value: zabbix-postgresql
            - name: POSTGRES_USER
              value: zabbix
            - name: POSTGRES_PASSWORD
              value: zabbix_pwd
            - name: POSTGRES_DB
              value: zabbix
            - name: ZBX_CACHESIZE
              value: 8M
            - name: ZBX_STARTPOLLERS
              value: "5"
            - name: ZBX_STARTTRAPPERS
              value: "5"
            - name: ZBX_STARTPINGERS
              value: "1"
        - name: zabbix-agent
          resources: {}
          securityContext: null
          image: zabbix/zabbix-agent:ubuntu-5.4.6
          imagePullPolicy: IfNotPresent
          env:
            - name: ZBX_HOSTNAME
              value: zabbix-agent
            - name: ZBX_SERVER_HOST
              value: 127.0.0.1
            - name: ZBX_SERVER_PORT
              value: "10051"
            - name: ZBX_PASSIVE_ALLOW
              value: "true"
            - name: ZBX_PASSIVESERVERS
              value: 127.0.0.1
            - name: ZBX_ACTIVE_ALLOW
              value: "true"
            - name: ZBX_ACTIVESERVERS
              value: null
            - name: ZBX_DEBUGLEVEL
              value: null
            - name: ZBX_TIMEOUT
              value: null
            - name: ZBX_LOADMODULE
              value: null
          ports:
            - name: zabbix-agent
              containerPort: 10050
              protocol: TCP
      imagePullSecrets: null
