apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-zipkin-collector
  labels:
    app.kubernetes.io/component: collector
    app.kubernetes.io/version: 2.21.0
    helm.sh/chart: zipkin-0.2.0
    app.kubernetes.io/name: zipkin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-zipkin-dependencies
  labels:
    app.kubernetes.io/component: dependencies
    app.kubernetes.io/version: 2.4.1
    helm.sh/chart: zipkin-0.2.0
    app.kubernetes.io/name: zipkin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-zipkin-ui
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/version: 2.21.0
    helm.sh/chart: zipkin-0.2.0
    app.kubernetes.io/name: zipkin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-zipkin-ui
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/version: 2.21.0
    helm.sh/chart: zipkin-0.2.0
    app.kubernetes.io/name: zipkin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  zipkin.conf.template: |
    user  nginx nginx;
    worker_processes  2;

    error_log  /dev/stderr warn;
    pid        /var/run/nginx.pid;

    daemon off;

    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /dev/stdout  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        gzip  on;
        gzip_types    application/javascript application/json text/css;

        server_tokens off;

        types {
            application/font-woff2  woff2;
        }

        server {
            listen 8080;

            root /var/www/html;

            index index.html;

            # Make site accessible from http://set-ip-address.xip.io
            server_name localhost;

            charset utf-8;

            # redirect root as UI is hosted under /zipkin
            location / {
            return 302 /zipkin/;
            }

            # the entrypoint of the app will expire every day.
            # this includes links to js assets with random names.
            location /zipkin/index.html {
                expires 1d;
            }

            location /zipkin {
            try_files $uri /zipkin/index.html = 404;
            }

            # accept UI config from the server
            location /zipkin/config.json {
                expires 10m;
                proxy_pass ${ZIPKIN_BASE_URL};
            }

            # the UI looks for the api under the same relative path
            location /zipkin/api {
                expires off;
                proxy_pass ${ZIPKIN_BASE_URL};
            }

            # due to minification, the js assets will change names.
            # this makes them safe to cache longer
            location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
                expires 1y;
                add_header Cache-Control "public";
            }

            location = /favicon.ico { log_not_found off; access_log off; }
            location = /robots.txt  { access_log off; log_not_found off; }

            # Deny .htaccess file access
            location ~ /\.ht {
                deny all;
            }

        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-zipkin-collector
  labels:
    app.kubernetes.io/component: collector
    app.kubernetes.io/version: 2.21.0
    helm.sh/chart: zipkin-0.2.0
    app.kubernetes.io/name: zipkin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9411
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: collector
    app.kubernetes.io/name: zipkin
    app.kubernetes.io/instance: release-name
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-zipkin-ui
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/version: 2.21.0
    helm.sh/chart: zipkin-0.2.0
    app.kubernetes.io/name: zipkin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: ui
    app.kubernetes.io/name: zipkin
    app.kubernetes.io/instance: release-name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-zipkin-collector
  labels:
    app.kubernetes.io/component: collector
    app.kubernetes.io/version: 2.21.0
    helm.sh/chart: zipkin-0.2.0
    app.kubernetes.io/name: zipkin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: collector
      app.kubernetes.io/name: zipkin
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/component: collector
        app.kubernetes.io/name: zipkin
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-zipkin-collector
      containers:
        - name: zipkin-collector
          image: openzipkin/zipkin:2.21.0
          imagePullPolicy: IfNotPresent
          env:
            - name: QUERY_PORT
              value: "9411"
          ports:
            - name: http
              containerPort: 9411
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-zipkin-ui
  labels:
    app.kubernetes.io/component: ui
    app.kubernetes.io/version: 2.21.0
    helm.sh/chart: zipkin-0.2.0
    app.kubernetes.io/name: zipkin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: ui
      app.kubernetes.io/name: zipkin
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/component: ui
        app.kubernetes.io/name: zipkin
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-zipkin-ui
      volumes:
        - name: config
          configMap:
            name: release-name-zipkin-ui
      containers:
        - name: zipkin-ui
          image: openzipkin/zipkin-ui:2.21.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d/zipkin.conf.template
              subPath: zipkin.conf.template
          env:
            - name: ZIPKIN_BASE_URL
              value: http://release-name-zipkin-collector:9411
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            seccompProfile:
              type: RuntimeDefault
